(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) Bool)
(declare-fun $generated@@393 (T@T) T@U)
(declare-fun $generated@@417 () T@T)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@460 (T@U Int) T@U)
(declare-fun $generated@@469 (T@U) Int)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@497 (T@U) Int)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@503 (T@U T@U T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@0 ($generated@@81 $generated@@333 $generated@@336))) ($generated@@238 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@342) $generated@@341)) 0))
 :pattern ( (let (($generated@@342 (type $generated@@341)))
($generated@@81 ($generated@@264 $generated@@342) $generated@@341)))
)))
(assert  (and (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@346)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@343 $generated@@346))
)) (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@344 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@344 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@273 (type $generated@@349))))
(let (($generated@@351 ($generated@@272 (type $generated@@349))))
(= (type ($generated@@345 $generated@@349)) ($generated@@76 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@345 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@353) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353)))) (= ($generated@@81 ($generated@@345 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@353))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@291 (type $generated@@357))))
(let (($generated@@359 ($generated@@290 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@355 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@272 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@271 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@362) $generated@@366))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@290 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@289 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@64)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))) (and ($generated@@238 ($generated@@81 ($generated@@345 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@238 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))) (and ($generated@@238 ($generated@@81 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@238 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@291 (type $generated@@389))))
(let (($generated@@392 ($generated@@290 (type $generated@@389))))
 (=> (and (and (= (type $generated@@389) ($generated@@289 $generated@@392 $generated@@391)) (= (type $generated@@390) ($generated@@289 $generated@@392 $generated@@391))) ($generated@@388 $generated@@389 $generated@@390)) (= $generated@@389 $generated@@390))))
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@394 T@T) ) (! (= (type ($generated@@393 $generated@@394)) ($generated@@76 $generated@@394 $generated@@4))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@291 (type $generated@@395))))
(let (($generated@@397 ($generated@@290 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@289 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@288 $generated@@397 $generated@@396)) (= ($generated@@287 $generated@@395) ($generated@@393 $generated@@397))))))
 :pattern ( ($generated@@287 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@291 (type $generated@@398))))
(let (($generated@@400 ($generated@@290 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@289 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@288 $generated@@400 $generated@@399)) (= ($generated@@323 $generated@@398) ($generated@@393 $generated@@399))))))
 :pattern ( ($generated@@323 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@291 (type $generated@@401))))
(let (($generated@@403 ($generated@@290 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@289 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@288 $generated@@403 $generated@@402)) (= ($generated@@354 $generated@@401) ($generated@@393 $generated@@145))))))
 :pattern ( ($generated@@354 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@273 (type $generated@@404))))
(let (($generated@@406 ($generated@@272 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@271 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@270 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (and (and (= (type $generated@@407) $generated@@145) (= (type $generated@@408) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@404) ($generated@@258 ($generated@@211 $generated@@407 $generated@@408)))))
 :no-pattern (type $generated@@407)
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@343 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@291 (type $generated@@409))))
(let (($generated@@411 ($generated@@290 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@289 $generated@@411 $generated@@410)) (or (= $generated@@409 ($generated@@288 $generated@@411 $generated@@410)) (exists (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (and (and (= (type $generated@@412) $generated@@145) (= (type $generated@@413) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@409) ($generated@@258 ($generated@@211 $generated@@412 $generated@@413)))))
 :no-pattern (type $generated@@412)
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
))))))
 :pattern ( ($generated@@354 $generated@@409))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@145) ($generated@@212 $generated@@414 $generated@@46)) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@414)) $generated@@414) ($generated@@132 ($generated@@344 $generated@@2 $generated@@414) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@414 $generated@@46))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@145) ($generated@@212 $generated@@415 $generated@@47)) (and (= ($generated@@258 ($generated@@344 $generated@@3 $generated@@415)) $generated@@415) ($generated@@132 ($generated@@344 $generated@@3 $generated@@415) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@415 $generated@@47))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@145) ($generated@@212 $generated@@416 $generated@@44)) (and (= ($generated@@258 ($generated@@344 $generated@@4 $generated@@416)) $generated@@416) ($generated@@132 ($generated@@344 $generated@@4 $generated@@416) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@416 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@417) 20))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@145) ($generated@@212 $generated@@418 $generated@@45)) (and (= ($generated@@258 ($generated@@344 $generated@@417 $generated@@418)) $generated@@418) ($generated@@132 ($generated@@344 $generated@@417 $generated@@418) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@418 $generated@@45))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (= (type $generated@@420) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@419) $generated@@420) ($generated@@132 $generated@@419 $generated@@420)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@79 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@76 $generated@@422 $generated@@2)) (<= 0 ($generated@@263 $generated@@421))))
 :pattern ( ($generated@@263 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@253 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@252 $generated@@424)) (<= 0 ($generated@@251 $generated@@423))))
 :pattern ( ($generated@@251 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (= (type ($generated@@425 $generated@@426)) $generated@@64)
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@64) (= (type $generated@@428) $generated@@64)) (= ($generated@@425 ($generated@@372 $generated@@427 $generated@@428)) $generated@@427))
 :pattern ( ($generated@@372 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (! (= (type ($generated@@429 $generated@@430)) $generated@@64)
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@64) (= (type $generated@@432) $generated@@64)) (= ($generated@@429 ($generated@@372 $generated@@431 $generated@@432)) $generated@@432))
 :pattern ( ($generated@@372 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@64)) (= ($generated@@72 ($generated@@372 $generated@@433 $generated@@434)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@380 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@380 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@380 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@380 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@443 $generated@@444)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@145) (= (type $generated@@446) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@445 $generated@@446)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@135 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@135 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@135 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@135 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@145) (= (type $generated@@456) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@211 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@145) (= (type $generated@@458) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@211 $generated@@457 $generated@@458))
)))
(assert  (and (forall (($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@461))
)) (forall (($generated@@462 T@U) ($generated@@463 Int) ) (! (let (($generated@@464 ($generated@@253 (type $generated@@462))))
(= (type ($generated@@460 $generated@@462 $generated@@463)) $generated@@464))
 :pattern ( ($generated@@460 $generated@@462 $generated@@463))
))))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (and (= (type $generated@@465) ($generated@@252 $generated@@145)) (= (type $generated@@466) $generated@@64)) (= (type $generated@@467) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@465 ($generated@@459 $generated@@466) $generated@@467) (forall (($generated@@468 Int) ) (!  (=> (and (<= 0 $generated@@468) (< $generated@@468 ($generated@@251 $generated@@465))) ($generated@@238 ($generated@@460 $generated@@465 $generated@@468) $generated@@466 $generated@@467))
 :pattern ( ($generated@@460 $generated@@465 $generated@@468))
))))
 :pattern ( ($generated@@74 $generated@@465 ($generated@@459 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@470 Int) ) (! (= ($generated@@469 ($generated@@75 $generated@@470)) $generated@@470)
 :pattern ( ($generated@@75 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@471 ($generated@@221 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@221 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@474)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@475 ($generated@@226 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@226 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@478)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@479 ($generated@@150 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@150 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@482)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@483 ($generated@@459 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@459 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@72 ($generated@@459 $generated@@486)) $generated@@57))
 :pattern ( ($generated@@459 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 (type $generated@@487)))
(= ($generated@@344 $generated@@488 ($generated@@258 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@258 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) $generated@@64)) (= ($generated@@132 $generated@@489 ($generated@@372 $generated@@490 $generated@@491)) (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@489) $generated@@492))) (and ($generated@@212 ($generated@@81 ($generated@@345 $generated@@489) $generated@@492) $generated@@491) ($generated@@212 $generated@@492 $generated@@490)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@489) $generated@@492))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@489) $generated@@492))
))))
 :pattern ( ($generated@@132 $generated@@489 ($generated@@372 $generated@@490 $generated@@491)))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@493) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@494) $generated@@64)) (= (type $generated@@495) $generated@@64)) (= ($generated@@132 $generated@@493 ($generated@@380 $generated@@494 $generated@@495)) (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@493) $generated@@496))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@493) $generated@@496) $generated@@495) ($generated@@212 $generated@@496 $generated@@494)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@493) $generated@@496))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@493) $generated@@496))
))))
 :pattern ( ($generated@@132 $generated@@493 ($generated@@380 $generated@@494 $generated@@495)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@145)) (< ($generated@@497 $generated@@499) ($generated@@498 ($generated@@211 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@211 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@145)) (< ($generated@@497 $generated@@502) ($generated@@498 ($generated@@211 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@211 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(let (($generated@@508 (type $generated@@505)))
(= (type ($generated@@503 $generated@@504 $generated@@505 $generated@@506)) ($generated@@289 $generated@@508 $generated@@507))))
 :pattern ( ($generated@@503 $generated@@504 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(let (($generated@@514 (type $generated@@510)))
 (=> (and (= (type $generated@@509) ($generated@@289 $generated@@514 $generated@@513)) (= (type $generated@@511) $generated@@514)) (and (=> (= $generated@@511 $generated@@510) (and ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@503 $generated@@509 $generated@@510 $generated@@512)) $generated@@511)) (= ($generated@@81 ($generated@@355 ($generated@@503 $generated@@509 $generated@@510 $generated@@512)) $generated@@511) $generated@@512))) (=> (not (= $generated@@511 $generated@@510)) (and (= ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@503 $generated@@509 $generated@@510 $generated@@512)) $generated@@511)) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@509) $generated@@511))) (= ($generated@@81 ($generated@@355 ($generated@@503 $generated@@509 $generated@@510 $generated@@512)) $generated@@511) ($generated@@81 ($generated@@355 $generated@@509) $generated@@511))))))))
 :pattern ( ($generated@@81 ($generated@@287 ($generated@@503 $generated@@509 $generated@@510 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@81 ($generated@@355 ($generated@@503 $generated@@509 $generated@@510 $generated@@512)) $generated@@511))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@372 $generated@@516 $generated@@517))) (and (= ($generated@@258 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@515) ($generated@@372 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@372 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) ($generated@@212 $generated@@518 ($generated@@380 $generated@@519 $generated@@520))) (and (= ($generated@@258 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@518)) $generated@@518) ($generated@@132 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@518) ($generated@@380 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@212 $generated@@518 ($generated@@380 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@64) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@145)) ($generated@@212 $generated@@523 ($generated@@135 $generated@@521 $generated@@522))) (and (= ($generated@@258 ($generated@@344 $generated@@136 $generated@@523)) $generated@@523) ($generated@@132 ($generated@@344 $generated@@136 $generated@@523) ($generated@@135 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@212 $generated@@523 ($generated@@135 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
 (not ($generated@@0 ($generated@@81 ($generated@@393 $generated@@525) $generated@@524))))
 :pattern ( (let (($generated@@525 (type $generated@@524)))
($generated@@81 ($generated@@393 $generated@@525) $generated@@524)))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@69)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@528 $generated@@529)) $generated@@62) (= ($generated@@526 ($generated@@135 $generated@@528 $generated@@529)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@291 (type $generated@@530))))
(let (($generated@@533 ($generated@@290 (type $generated@@530))))
 (=> (and (= (type $generated@@530) ($generated@@289 $generated@@533 $generated@@532)) (= (type $generated@@531) ($generated@@289 $generated@@533 $generated@@532))) (= ($generated@@388 $generated@@530 $generated@@531)  (and (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@533) (= ($generated@@0 ($generated@@81 ($generated@@287 $generated@@530) $generated@@534)) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@531) $generated@@534))))
 :no-pattern (type $generated@@534)
 :no-pattern ($generated $generated@@534)
 :no-pattern ($generated@@0 $generated@@534)
)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@533) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@530) $generated@@535))) (= ($generated@@81 ($generated@@355 $generated@@530) $generated@@535) ($generated@@81 ($generated@@355 $generated@@531) $generated@@535)))
 :no-pattern (type $generated@@535)
 :no-pattern ($generated $generated@@535)
 :no-pattern ($generated@@0 $generated@@535)
)))))))
 :pattern ( ($generated@@388 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@136) (= ($generated@@497 ($generated@@258 $generated@@536)) ($generated@@498 $generated@@536)))
 :pattern ( ($generated@@497 ($generated@@258 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@145) ($generated@@212 $generated@@537 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@537 ($generated@@75 0)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@212 $generated@@538 ($generated@@221 $generated@@539))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@221 $generated@@539))))
 :pattern ( ($generated@@212 $generated@@538 ($generated@@221 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@64)) ($generated@@212 $generated@@540 ($generated@@226 $generated@@541))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@540)) $generated@@540) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@540) ($generated@@226 $generated@@541))))
 :pattern ( ($generated@@212 $generated@@540 ($generated@@226 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@212 $generated@@542 ($generated@@150 $generated@@543))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@542) ($generated@@150 $generated@@543))))
 :pattern ( ($generated@@212 $generated@@542 ($generated@@150 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@212 $generated@@544 ($generated@@459 $generated@@545))) (and (= ($generated@@258 ($generated@@344 ($generated@@252 $generated@@145) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@344 ($generated@@252 $generated@@145) $generated@@544) ($generated@@459 $generated@@545))))
 :pattern ( ($generated@@212 $generated@@544 ($generated@@459 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@546 $generated@@549)))) ($generated@@238 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@81 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@136) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@552) (and ($generated@@134 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@64) ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
 :pattern ( ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
))))) ($generated@@238 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@136) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@556) (and ($generated@@134 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
))))) ($generated@@238 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@558) ($generated@@233 $generated@@559)) ($generated@@233 ($generated@@211 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@558) ($generated@@233 $generated@@559)))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@560))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@560))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@561)) ($generated@@233 ($generated@@258 $generated@@561)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@253 (type $generated@@562))))
 (=> (and (= (type $generated@@562) ($generated@@252 $generated@@563)) (= ($generated@@251 $generated@@562) 0)) (= $generated@@562 ($generated@@250 $generated@@563))))
 :pattern ( ($generated@@251 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@565)))
 (=> (and (and (= (type $generated@@564) ($generated@@76 $generated@@567 $generated@@2)) (= (type $generated@@566) $generated@@2)) (<= 0 ($generated $generated@@566))) (= ($generated@@263 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)) (+ (- ($generated@@263 $generated@@564) ($generated ($generated@@81 $generated@@564 $generated@@565))) ($generated $generated@@566)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@2)) ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@3)) ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@4)) ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@417)) ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@145)) ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@252 $generated@@145)) (= (type $generated@@579) $generated@@64)) (= ($generated@@132 $generated@@578 ($generated@@459 $generated@@579)) (forall (($generated@@580 Int) ) (!  (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@251 $generated@@578))) ($generated@@212 ($generated@@460 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@460 $generated@@578 $generated@@580))
))))
 :pattern ( ($generated@@132 $generated@@578 ($generated@@459 $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 Int) ) (!  (=> (= (type $generated@@582) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@251 $generated@@582))) (< ($generated@@498 ($generated@@344 $generated@@136 ($generated@@460 $generated@@582 $generated@@583))) ($generated@@581 $generated@@582))))
 :pattern ( ($generated@@498 ($generated@@344 $generated@@136 ($generated@@460 $generated@@582 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@132 $generated@@584 ($generated@@372 $generated@@585 $generated@@586))) (and (and ($generated@@132 ($generated@@269 $generated@@584) ($generated@@221 $generated@@585)) ($generated@@132 ($generated@@312 $generated@@584) ($generated@@221 $generated@@586))) ($generated@@132 ($generated@@343 $generated@@584) ($generated@@221 ($generated@@135 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@132 $generated@@584 ($generated@@372 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@132 $generated@@587 ($generated@@380 $generated@@588 $generated@@589))) (and (and ($generated@@132 ($generated@@287 $generated@@587) ($generated@@226 $generated@@588)) ($generated@@132 ($generated@@323 $generated@@587) ($generated@@226 $generated@@589))) ($generated@@132 ($generated@@354 $generated@@587) ($generated@@226 ($generated@@135 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@132 $generated@@587 ($generated@@380 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@2) ($generated@@132 $generated@@590 $generated@@46))
 :pattern ( ($generated@@132 $generated@@590 $generated@@46))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@3) ($generated@@132 $generated@@591 $generated@@47))
 :pattern ( ($generated@@132 $generated@@591 $generated@@47))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@4) ($generated@@132 $generated@@592 $generated@@44))
 :pattern ( ($generated@@132 $generated@@592 $generated@@44))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@417) ($generated@@132 $generated@@593 $generated@@45))
 :pattern ( ($generated@@132 $generated@@593 $generated@@45))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@145) ($generated@@132 $generated@@594 $generated@@48))
 :pattern ( ($generated@@132 $generated@@594 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 (T@U) Bool)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () Int)
(assert  (and (and (and (and (= (type $generated@@595) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@596) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@597) $generated@@77)) (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@600) ($generated@@289 $generated@@145 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@602  (=> (and (not ($generated@@388 $generated@@595 ($generated@@503 ($generated@@288 $generated@@145 $generated@@145) ($generated@@258 ($generated@@8 ($generated@@231 2))) ($generated@@258 ($generated@@8 ($generated@@231 3)))))) (= (ControlFlow 0 3) (- 0 2))) ($generated@@0 ($generated@@233 ($generated@@11 false))))))
(let (($generated@@603 true))
(let (($generated@@604  (and (=> (= (ControlFlow 0 4) 1) $generated@@603) (=> (= (ControlFlow 0 4) 3) $generated@@602))))
(let (($generated@@605  (=> (not (= ($generated ($generated@@344 $generated@@2 ($generated@@81 ($generated@@355 $generated@@595) ($generated@@258 ($generated@@8 ($generated@@231 2)))))) ($generated@@231 3))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@0 ($generated@@233 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@233 ($generated@@11 false))) (=> (= (ControlFlow 0 6) 4) $generated@@604))))))
(let (($generated@@606  (=> (and (= ($generated ($generated@@344 $generated@@2 ($generated@@81 ($generated@@355 $generated@@595) ($generated@@258 ($generated@@8 ($generated@@231 2)))))) ($generated@@231 3)) (= (ControlFlow 0 5) 4)) $generated@@604)))
(let (($generated@@607  (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@595) ($generated@@258 ($generated@@8 ($generated@@231 2)))))) (=> ($generated@@0 ($generated@@81 ($generated@@287 $generated@@595) ($generated@@258 ($generated@@8 ($generated@@231 2))))) (and (=> (= (ControlFlow 0 8) 5) $generated@@606) (=> (= (ControlFlow 0 8) 6) $generated@@605))))))
(let (($generated@@608  (=> ($generated@@0 ($generated@@81 ($generated@@287 $generated@@595) ($generated@@258 ($generated@@8 3)))) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@0 ($generated@@233 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@233 ($generated@@11 false))) (=> (= (ControlFlow 0 11) 8) $generated@@607))))))
(let (($generated@@609  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@287 $generated@@595) ($generated@@258 ($generated@@8 3))))) (= (ControlFlow 0 10) 8)) $generated@@607)))
(let (($generated@@610  (and (=> (= (ControlFlow 0 13) 10) $generated@@609) (=> (= (ControlFlow 0 13) 11) $generated@@608))))
(let (($generated@@611  (=> (not ($generated@@0 ($generated@@81 ($generated@@287 $generated@@595) ($generated@@258 ($generated@@8 2))))) (and (=> (= (ControlFlow 0 15) (- 0 16)) ($generated@@0 ($generated@@233 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@233 ($generated@@11 false))) (=> (= (ControlFlow 0 15) 13) $generated@@610))))))
(let (($generated@@612  (=> (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@595) ($generated@@258 ($generated@@8 2)))) (= (ControlFlow 0 14) 13)) $generated@@610)))
(let (($generated@@613  (=> (and (= $generated@@596 ($generated@@156 $generated@@597 $generated@@598 $generated@@60 false)) (= $generated@@595 ($generated@@233 ($generated@@503 ($generated@@288 $generated@@145 $generated@@145) ($generated@@258 ($generated@@8 ($generated@@231 2))) ($generated@@258 ($generated@@8 ($generated@@231 3))))))) (and (=> (= (ControlFlow 0 17) 14) $generated@@612) (=> (= (ControlFlow 0 17) 15) $generated@@611)))))
(let (($generated@@614  (=> (and ($generated@@237 $generated@@598) ($generated@@599 $generated@@598)) (=> (and (and (and ($generated@@132 $generated@@600 ($generated@@380 $generated@@46 $generated@@46)) ($generated@@74 $generated@@600 ($generated@@380 $generated@@46 $generated@@46) $generated@@598)) true) (and (= 0 $generated@@601) (= (ControlFlow 0 18) 17))) $generated@@613))))
$generated@@614))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@196 (T@U T@U) Bool)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 (T@U T@U) T@U)
(declare-fun $generated@@200 () T@T)
(declare-fun $generated@@206 (T@U T@U) Bool)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@219 (T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@221 (T@T T@T) T@T)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@275 (T@U T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@295 (Int) Int)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Bool)
(declare-fun $generated@@302 (T@U T@U T@U) Bool)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@311 (T@U Int) T@U)
(declare-fun $generated@@312 (T@T T@U) T@U)
(declare-fun $generated@@323 (T@T) T@U)
(declare-fun $generated@@324 (T@U) Int)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@336 (T@U) Int)
(declare-fun $generated@@337 (T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@497 (T@U Int) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@610 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@137 $generated@@138)) 14)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@134 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@136 ($generated@@134 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@134 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@132 $generated@@143)) ($generated@@76 $generated@@144 $generated@@4)))
 :pattern ( ($generated@@132 $generated@@143))
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (let (($generated@@148 ($generated@@80 (type $generated@@146))))
(let (($generated@@149 ($generated@@79 (type $generated@@145))))
(= (type ($generated@@133 $generated@@145 $generated@@146 $generated@@147)) ($generated@@134 $generated@@149 $generated@@148))))
 :pattern ( ($generated@@133 $generated@@145 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@80 (type $generated@@151))))
(let (($generated@@154 ($generated@@79 (type $generated@@150))))
 (=> (and (and (= (type $generated@@150) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@151) ($generated@@76 $generated@@154 $generated@@153))) (= (type $generated@@152) $generated@@64)) (= ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)) $generated@@150))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)))
)))
(assert (forall (($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@136 (type $generated@@156))))
(let (($generated@@158 ($generated@@135 (type $generated@@156))))
(= (type ($generated@@155 $generated@@156)) ($generated@@76 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@80 (type $generated@@160))))
(let (($generated@@163 ($generated@@79 (type $generated@@159))))
 (=> (and (and (= (type $generated@@159) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@160) ($generated@@76 $generated@@163 $generated@@162))) (= (type $generated@@161) $generated@@64)) (= ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)) $generated@@160))))
 :pattern ( ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)))
)))
(assert  (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@169 $generated@@170)) 15)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@166 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@166 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@164 $generated@@175)) ($generated@@76 $generated@@176 $generated@@4)))
 :pattern ( ($generated@@164 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@80 (type $generated@@178))))
(let (($generated@@181 ($generated@@79 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) ($generated@@166 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@80 (type $generated@@183))))
(let (($generated@@186 ($generated@@79 (type $generated@@182))))
 (=> (and (and (= (type $generated@@182) ($generated@@76 $generated@@186 $generated@@4)) (= (type $generated@@183) ($generated@@76 $generated@@186 $generated@@185))) (= (type $generated@@184) $generated@@64)) (= ($generated@@164 ($generated@@165 $generated@@182 $generated@@183 $generated@@184)) $generated@@182))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@182 $generated@@183 $generated@@184)))
)))
(assert (forall (($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@168 (type $generated@@188))))
(let (($generated@@190 ($generated@@167 (type $generated@@188))))
(= (type ($generated@@187 $generated@@188)) ($generated@@76 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@80 (type $generated@@192))))
(let (($generated@@195 ($generated@@79 (type $generated@@191))))
 (=> (and (and (= (type $generated@@191) ($generated@@76 $generated@@195 $generated@@4)) (= (type $generated@@192) ($generated@@76 $generated@@195 $generated@@194))) (= (type $generated@@193) $generated@@64)) (= ($generated@@187 ($generated@@165 $generated@@191 $generated@@192 $generated@@193)) $generated@@192))))
 :pattern ( ($generated@@187 ($generated@@165 $generated@@191 $generated@@192 $generated@@193)))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> (= (type $generated@@197) $generated@@2) ($generated@@196 $generated@@197 ($generated@@75 0)))
 :pattern ( ($generated@@196 $generated@@197 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@200) 16) (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! (= (type ($generated@@199 $generated@@201 $generated@@202)) $generated@@64)
 :pattern ( ($generated@@199 $generated@@201 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (and (= (type $generated@@203) $generated@@64) (= (type $generated@@204) $generated@@64)) (= (type $generated@@205) $generated@@200)) ($generated@@196 $generated@@205 ($generated@@199 $generated@@203 $generated@@204))) ($generated@@198 $generated@@205))
 :pattern ( ($generated@@198 $generated@@205) ($generated@@196 $generated@@205 ($generated@@199 $generated@@203 $generated@@204)))
)))
(assert  (and (and (= ($generated@@1 $generated@@209) 17) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@207 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@207 $generated@@210))
))) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@208 $generated@@211)) $generated@@209)
 :pattern ( ($generated@@208 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (= (type $generated@@212) $generated@@200) (= (type $generated@@213) $generated@@200)) true) (= ($generated@@206 $generated@@212 $generated@@213)  (and (= ($generated@@207 $generated@@212) ($generated@@207 $generated@@213)) (= ($generated@@208 $generated@@212) ($generated@@208 $generated@@213)))))
 :pattern ( ($generated@@206 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 T@U) ) (! (= (type ($generated@@214 $generated@@216)) $generated@@64)
 :pattern ( ($generated@@214 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (= (type $generated@@217) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@218) $generated@@64)) ($generated@@196 $generated@@217 ($generated@@214 $generated@@218))) ($generated@@215 $generated@@217))
 :pattern ( ($generated@@196 $generated@@217 ($generated@@214 $generated@@218)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@1 ($generated@@221 $generated@@225 $generated@@226)) 18)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@221 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@223 ($generated@@221 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@221 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@223 (type $generated@@231))))
(= (type ($generated@@219 $generated@@231 $generated@@232 $generated@@233)) $generated@@234))
 :pattern ( ($generated@@219 $generated@@231 $generated@@232 $generated@@233))
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(let (($generated@@240 (type $generated@@236)))
(= (type ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@221 $generated@@240 $generated@@239))))
 :pattern ( ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@223 (type $generated@@241))))
 (=> (= (type $generated@@244) $generated@@245) (= ($generated@@219 ($generated@@224 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@242 $generated@@243) $generated@@244)))
 :weight 0
))) (and (and (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (or (= $generated@@248 $generated@@250) (= ($generated@@219 ($generated@@224 $generated@@247 $generated@@248 $generated@@249 $generated@@246) $generated@@250 $generated@@251) ($generated@@219 $generated@@247 $generated@@250 $generated@@251)))
 :weight 0
)) (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (or (= $generated@@255 $generated@@257) (= ($generated@@219 ($generated@@224 $generated@@253 $generated@@254 $generated@@255 $generated@@252) $generated@@256 $generated@@257) ($generated@@219 $generated@@253 $generated@@256 $generated@@257)))
 :weight 0
))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (or true (= ($generated@@219 ($generated@@224 $generated@@259 $generated@@260 $generated@@261 $generated@@258) $generated@@262 $generated@@263) ($generated@@219 $generated@@259 $generated@@262 $generated@@263)))
 :weight 0
)))) (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 Bool) ) (! (= (type ($generated@@220 $generated@@264 $generated@@265 $generated@@266 $generated@@267)) ($generated@@221 $generated@@77 $generated@@4))
 :pattern ( ($generated@@220 $generated@@264 $generated@@265 $generated@@266 $generated@@267))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 Bool) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@67 (type $generated@@273))))
 (=> (and (and (and (and (= (type $generated@@268) $generated@@77) (= (type $generated@@269) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@270) ($generated@@66 $generated@@4))) (= (type $generated@@272) $generated@@77)) (= (type $generated@@273) ($generated@@66 $generated@@274))) (= ($generated@@0 ($generated@@219 ($generated@@220 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@272 $generated@@273))  (=> (and (not (= $generated@@272 $generated@@268)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@269 $generated@@272) $generated@@270))) $generated@@271))))
 :pattern ( ($generated@@219 ($generated@@220 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (! (= (type ($generated@@275 $generated@@277 $generated@@278)) $generated@@200)
 :pattern ( ($generated@@275 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) $generated@@64)) (= (type $generated@@281) $generated@@209)) (= (type $generated@@282) $generated@@209)) (= ($generated@@196 ($generated@@275 $generated@@281 $generated@@282) ($generated@@199 $generated@@279 $generated@@280))  (and ($generated@@276 $generated@@281 $generated@@279) ($generated@@276 $generated@@282 $generated@@280))))
 :pattern ( ($generated@@196 ($generated@@275 $generated@@281 $generated@@282) ($generated@@199 $generated@@279 $generated@@280)))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@200) (= (type $generated@@284) $generated@@200)) (= ($generated@@206 $generated@@283 $generated@@284) (= $generated@@283 $generated@@284)))
 :pattern ( ($generated@@206 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@64)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@288) $generated@@64)) (= ($generated@@196 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@209) ($generated@@0 ($generated@@81 $generated@@287 $generated@@289))) ($generated@@276 $generated@@289 $generated@@288))
 :pattern ( ($generated@@81 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@196 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@64)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@293) $generated@@64)) (= ($generated@@196 $generated@@292 ($generated@@290 $generated@@293)) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@209) ($generated@@0 ($generated@@81 $generated@@292 $generated@@294))) ($generated@@276 $generated@@294 $generated@@293))
 :pattern ( ($generated@@81 $generated@@292 $generated@@294))
))))
 :pattern ( ($generated@@196 $generated@@292 ($generated@@290 $generated@@293)))
)))
(assert (forall (($generated@@296 Int) ) (! (= ($generated@@295 $generated@@296) $generated@@296)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 (type $generated@@298)))
(= (type ($generated@@297 $generated@@298)) $generated@@299))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= ($generated@@297 $generated@@300) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) $generated@@64) (= (type $generated@@304) $generated@@64)) (= (type $generated@@305) $generated@@209)) (= (type $generated@@306) $generated@@209)) (= (type $generated@@307) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@301 $generated@@307)) (= ($generated@@74 ($generated@@275 $generated@@305 $generated@@306) ($generated@@199 $generated@@303 $generated@@304) $generated@@307)  (and ($generated@@302 $generated@@305 $generated@@303 $generated@@307) ($generated@@302 $generated@@306 $generated@@304 $generated@@307))))
 :pattern ( ($generated@@74 ($generated@@275 $generated@@305 $generated@@306) ($generated@@199 $generated@@303 $generated@@304) $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@68)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@200) (= ($generated@@198 $generated@@310) (= ($generated@@308 $generated@@310) $generated@@61)))
 :pattern ( ($generated@@198 $generated@@310))
)))
(assert  (and (forall (($generated@@313 T@U) ($generated@@314 Int) ) (! (= (type ($generated@@311 $generated@@313 $generated@@314)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@311 $generated@@313 $generated@@314))
)) (forall (($generated@@315 T@T) ($generated@@316 T@U) ) (! (= (type ($generated@@312 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@312 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 Int) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@64) (= (type $generated@@319) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@311 $generated@@317 $generated@@318) $generated@@319))  (and ($generated@@276 $generated@@319 $generated@@317) (= ($generated ($generated@@312 $generated@@2 $generated@@319)) $generated@@318))))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@317 $generated@@318) $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@200) ($generated@@198 $generated@@320)) (exists (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (and (and (= (type $generated@@321) $generated@@209) (= (type $generated@@322) $generated@@209)) (= $generated@@320 ($generated@@275 $generated@@321 $generated@@322)))
 :no-pattern (type $generated@@321)
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
)))
 :pattern ( ($generated@@198 $generated@@320))
)))
(assert  (and (and (forall (($generated@@327 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@327)) 19)) (forall (($generated@@328 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@325 $generated@@328))
))) (forall (($generated@@329 T@T) ) (! (= (type ($generated@@323 $generated@@329)) ($generated@@325 $generated@@329))
 :pattern ( ($generated@@323 $generated@@329))
))))
(assert (forall (($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@330)) 0)
 :pattern ( ($generated@@323 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@209)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@64) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@302 ($generated@@331 $generated@@333) $generated@@334 $generated@@335) ($generated@@74 $generated@@333 $generated@@334 $generated@@335)))
 :pattern ( ($generated@@302 ($generated@@331 $generated@@333) $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@338 T@T) ) (! (= (type ($generated@@337 $generated@@338)) ($generated@@76 $generated@@338 $generated@@2))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@79 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@76 $generated@@340 $generated@@2)) (and (= (= ($generated@@336 $generated@@339) 0) (= $generated@@339 ($generated@@337 $generated@@340))) (=> (not (= ($generated@@336 $generated@@339) 0)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) (< 0 ($generated ($generated@@81 $generated@@339 $generated@@341))))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) ($generated@@134 $generated@@343 $generated@@344))
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@81 ($generated@@132 ($generated@@342 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@81 ($generated@@132 ($generated@@342 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@348 $generated@@349 $generated@@350)) ($generated@@166 $generated@@349 $generated@@350))
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@81 ($generated@@164 ($generated@@348 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@81 ($generated@@164 ($generated@@348 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@79 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@76 $generated@@355 $generated@@2)) (= ($generated@@215 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@81 $generated@@354 $generated@@356))) (<= ($generated ($generated@@81 $generated@@354 $generated@@356)) ($generated@@336 $generated@@354))))
 :pattern ( ($generated@@81 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@215 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@136 (type $generated@@357))))
(let (($generated@@359 ($generated@@135 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@134 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@342 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@132 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@136 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@76 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@136 (type $generated@@364))))
(let (($generated@@366 ($generated@@135 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@134 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@342 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@168 (type $generated@@368))))
(let (($generated@@370 ($generated@@167 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@166 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@348 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@164 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@168 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@76 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@168 (type $generated@@375))))
(let (($generated@@377 ($generated@@167 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@166 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@348 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@81 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@380) $generated@@64)) (= ($generated@@196 $generated@@379 ($generated@@214 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@209) (< 0 ($generated ($generated@@81 $generated@@379 $generated@@381)))) ($generated@@276 $generated@@381 $generated@@380))
 :pattern ( ($generated@@81 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@196 $generated@@379 ($generated@@214 $generated@@380)))
)))
(assert (forall (($generated@@383 T@U) ) (! (= (type ($generated@@382 $generated@@383)) ($generated@@76 $generated@@209 $generated@@209))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@209) (= (type $generated@@385) $generated@@209)) (= ($generated@@81 ($generated@@382 $generated@@384) $generated@@385) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@285 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@209) ($generated@@0 ($generated@@81 $generated@@386 $generated@@389))) ($generated@@302 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@81 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@285 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@290 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@209) ($generated@@0 ($generated@@81 $generated@@390 $generated@@393))) ($generated@@302 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@81 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@290 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@81 ($generated@@337 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@81 ($generated@@337 $generated@@395) $generated@@394)))
)))
(assert (forall (($generated@@397 T@U) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@399) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@396 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@398) ($generated@@207 ($generated@@312 $generated@@200 $generated@@399)))) (= ($generated@@81 ($generated@@155 $generated@@398) ($generated@@207 ($generated@@312 $generated@@200 $generated@@399))) ($generated@@208 ($generated@@312 $generated@@200 $generated@@399))))))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (= (type ($generated@@400 $generated@@401)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@403) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@400 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@81 ($generated@@164 $generated@@402) ($generated@@207 ($generated@@312 $generated@@200 $generated@@403)))) (= ($generated@@81 ($generated@@187 $generated@@402) ($generated@@207 ($generated@@312 $generated@@200 $generated@@403))) ($generated@@208 ($generated@@312 $generated@@200 $generated@@403))))))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@135 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@134 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@81 ($generated@@155 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@167 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@166 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@81 ($generated@@372 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@81 ($generated@@164 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@81 ($generated@@187 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@409) $generated@@413))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@64)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@417) $generated@@421))) (and ($generated@@302 ($generated@@81 ($generated@@155 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@302 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@417) $generated@@421))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@425) $generated@@429))) (and ($generated@@302 ($generated@@81 ($generated@@187 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@302 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@425) $generated@@429))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@76 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@168 (type $generated@@432))))
(let (($generated@@434 ($generated@@167 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@166 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@348 $generated@@434 $generated@@433)) (= ($generated@@164 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@164 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@168 (type $generated@@435))))
(let (($generated@@437 ($generated@@167 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@166 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@348 $generated@@437 $generated@@436)) (= ($generated@@372 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@372 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@168 (type $generated@@438))))
(let (($generated@@440 ($generated@@167 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@166 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@348 $generated@@440 $generated@@439)) (= ($generated@@400 $generated@@438) ($generated@@430 $generated@@209))))))
 :pattern ( ($generated@@400 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@136 (type $generated@@441))))
(let (($generated@@443 ($generated@@135 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@134 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@342 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@209) (= (type $generated@@445) $generated@@209)) ($generated@@0 ($generated@@81 ($generated@@396 $generated@@441) ($generated@@331 ($generated@@275 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@168 (type $generated@@446))))
(let (($generated@@448 ($generated@@167 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@166 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@348 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@209) (= (type $generated@@450) $generated@@209)) ($generated@@0 ($generated@@81 ($generated@@400 $generated@@446) ($generated@@331 ($generated@@275 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@400 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@209) ($generated@@276 $generated@@451 $generated@@46)) (and (= ($generated@@331 ($generated@@312 $generated@@2 $generated@@451)) $generated@@451) ($generated@@196 ($generated@@312 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@276 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@209) ($generated@@276 $generated@@452 $generated@@47)) (and (= ($generated@@331 ($generated@@312 $generated@@3 $generated@@452)) $generated@@452) ($generated@@196 ($generated@@312 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@276 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@209) ($generated@@276 $generated@@453 $generated@@44)) (and (= ($generated@@331 ($generated@@312 $generated@@4 $generated@@453)) $generated@@453) ($generated@@196 ($generated@@312 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@276 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@209) ($generated@@276 $generated@@455 $generated@@45)) (and (= ($generated@@331 ($generated@@312 $generated@@454 $generated@@455)) $generated@@455) ($generated@@196 ($generated@@312 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@276 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@64) (= ($generated@@276 ($generated@@331 $generated@@456) $generated@@457) ($generated@@196 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@276 ($generated@@331 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@79 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@76 $generated@@459 $generated@@2)) (<= 0 ($generated@@336 $generated@@458))))
 :pattern ( ($generated@@336 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@326 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@325 $generated@@461)) (<= 0 ($generated@@324 $generated@@460))))
 :pattern ( ($generated@@324 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@414 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@414 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@72 ($generated@@414 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@422 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@422 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@72 ($generated@@422 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@209) (= (type $generated@@483) $generated@@209)) (= ($generated@@308 ($generated@@275 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@275 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@199 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@199 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@199 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@199 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@209) (= (type $generated@@493) $generated@@209)) (= ($generated@@207 ($generated@@275 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@275 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@209) (= (type $generated@@495) $generated@@209)) (= ($generated@@208 ($generated@@275 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@275 $generated@@494 $generated@@495))
)))
(assert  (and (forall (($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@498))
)) (forall (($generated@@499 T@U) ($generated@@500 Int) ) (! (let (($generated@@501 ($generated@@326 (type $generated@@499))))
(= (type ($generated@@497 $generated@@499 $generated@@500)) $generated@@501))
 :pattern ( ($generated@@497 $generated@@499 $generated@@500))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@325 $generated@@209)) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@502 ($generated@@496 $generated@@503) $generated@@504) (forall (($generated@@505 Int) ) (!  (=> (and (<= 0 $generated@@505) (< $generated@@505 ($generated@@324 $generated@@502))) ($generated@@302 ($generated@@497 $generated@@502 $generated@@505) $generated@@503 $generated@@504))
 :pattern ( ($generated@@497 $generated@@502 $generated@@505))
))))
 :pattern ( ($generated@@74 $generated@@502 ($generated@@496 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@506 ($generated@@75 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@75 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@285 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@285 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@285 $generated@@511)) $generated@@54))
 :pattern ( ($generated@@285 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@512 ($generated@@290 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@290 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@72 ($generated@@290 $generated@@515)) $generated@@55))
 :pattern ( ($generated@@290 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@64)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@516 ($generated@@214 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@214 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@72 ($generated@@214 $generated@@519)) $generated@@56))
 :pattern ( ($generated@@214 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@64)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@520 ($generated@@496 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@496 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@64) (= ($generated@@72 ($generated@@496 $generated@@523)) $generated@@57))
 :pattern ( ($generated@@496 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(= ($generated@@312 $generated@@525 ($generated@@331 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@331 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) (= ($generated@@196 $generated@@526 ($generated@@414 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@526) $generated@@529))) (and ($generated@@276 ($generated@@81 ($generated@@155 $generated@@526) $generated@@529) $generated@@528) ($generated@@276 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@526) $generated@@529))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@196 $generated@@526 ($generated@@414 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@64)) (= ($generated@@196 $generated@@530 ($generated@@422 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@530) $generated@@533))) (and ($generated@@276 ($generated@@81 ($generated@@187 $generated@@530) $generated@@533) $generated@@532) ($generated@@276 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@530) $generated@@533))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@196 $generated@@530 ($generated@@422 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@209) (= (type $generated@@537) $generated@@209)) (< ($generated@@534 $generated@@536) ($generated@@535 ($generated@@275 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@275 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@209) (= (type $generated@@539) $generated@@209)) (< ($generated@@534 $generated@@539) ($generated@@535 ($generated@@275 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@275 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@209) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@64)) ($generated@@276 $generated@@540 ($generated@@414 $generated@@541 $generated@@542))) (and (= ($generated@@331 ($generated@@312 ($generated@@134 $generated@@209 $generated@@209) $generated@@540)) $generated@@540) ($generated@@196 ($generated@@312 ($generated@@134 $generated@@209 $generated@@209) $generated@@540) ($generated@@414 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@276 $generated@@540 ($generated@@414 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@209) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) $generated@@64)) ($generated@@276 $generated@@543 ($generated@@422 $generated@@544 $generated@@545))) (and (= ($generated@@331 ($generated@@312 ($generated@@166 $generated@@209 $generated@@209) $generated@@543)) $generated@@543) ($generated@@196 ($generated@@312 ($generated@@166 $generated@@209 $generated@@209) $generated@@543) ($generated@@422 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@276 $generated@@543 ($generated@@422 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) $generated@@209)) ($generated@@276 $generated@@548 ($generated@@199 $generated@@546 $generated@@547))) (and (= ($generated@@331 ($generated@@312 $generated@@200 $generated@@548)) $generated@@548) ($generated@@196 ($generated@@312 $generated@@200 $generated@@548) ($generated@@199 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@276 $generated@@548 ($generated@@199 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
 (not ($generated@@0 ($generated@@81 ($generated@@430 $generated@@550) $generated@@549))))
 :pattern ( (let (($generated@@550 (type $generated@@549)))
($generated@@81 ($generated@@430 $generated@@550) $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@551) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@552) ($generated@@76 $generated@@209 $generated@@209))) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) $generated@@64)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@209) ($generated@@0 ($generated@@81 $generated@@551 $generated@@555))) (and ($generated@@276 $generated@@555 $generated@@553) ($generated@@276 ($generated@@81 $generated@@552 $generated@@555) $generated@@554)))
 :no-pattern (type $generated@@555)
 :no-pattern ($generated $generated@@555)
 :no-pattern ($generated@@0 $generated@@555)
))) ($generated@@196 ($generated@@133 $generated@@551 $generated@@552 ($generated@@414 $generated@@553 $generated@@554)) ($generated@@414 $generated@@553 $generated@@554)))
 :pattern ( ($generated@@133 $generated@@551 $generated@@552 ($generated@@414 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@556) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@557) ($generated@@76 $generated@@209 $generated@@209))) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) $generated@@64)) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@209) ($generated@@0 ($generated@@81 $generated@@556 $generated@@560))) (and ($generated@@276 $generated@@560 $generated@@558) ($generated@@276 ($generated@@81 $generated@@557 $generated@@560) $generated@@559)))
 :no-pattern (type $generated@@560)
 :no-pattern ($generated $generated@@560)
 :no-pattern ($generated@@0 $generated@@560)
))) ($generated@@196 ($generated@@133 $generated@@556 $generated@@557 ($generated@@422 $generated@@558 $generated@@559)) ($generated@@422 $generated@@558 $generated@@559)))
 :pattern ( ($generated@@165 $generated@@556 $generated@@557 ($generated@@422 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@69)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@64) (= (type $generated@@564) $generated@@64)) (and (= ($generated@@72 ($generated@@199 $generated@@563 $generated@@564)) $generated@@62) (= ($generated@@561 ($generated@@199 $generated@@563 $generated@@564)) $generated@@63)))
 :pattern ( ($generated@@199 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@200) (= ($generated@@534 ($generated@@331 $generated@@565)) ($generated@@535 $generated@@565)))
 :pattern ( ($generated@@534 ($generated@@331 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@209) ($generated@@276 $generated@@566 ($generated@@75 0))) (and (= ($generated@@331 ($generated@@312 $generated@@2 $generated@@566)) $generated@@566) ($generated@@196 ($generated@@312 ($generated@@76 $generated@@209 $generated@@4) $generated@@566) ($generated@@75 0))))
 :pattern ( ($generated@@276 $generated@@566 ($generated@@75 0)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@209) (= (type $generated@@568) $generated@@64)) ($generated@@276 $generated@@567 ($generated@@285 $generated@@568))) (and (= ($generated@@331 ($generated@@312 ($generated@@76 $generated@@209 $generated@@4) $generated@@567)) $generated@@567) ($generated@@196 ($generated@@312 ($generated@@76 $generated@@209 $generated@@4) $generated@@567) ($generated@@285 $generated@@568))))
 :pattern ( ($generated@@276 $generated@@567 ($generated@@285 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@209) (= (type $generated@@570) $generated@@64)) ($generated@@276 $generated@@569 ($generated@@290 $generated@@570))) (and (= ($generated@@331 ($generated@@312 ($generated@@76 $generated@@209 $generated@@4) $generated@@569)) $generated@@569) ($generated@@196 ($generated@@312 ($generated@@76 $generated@@209 $generated@@4) $generated@@569) ($generated@@290 $generated@@570))))
 :pattern ( ($generated@@276 $generated@@569 ($generated@@290 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@209) (= (type $generated@@572) $generated@@64)) ($generated@@276 $generated@@571 ($generated@@214 $generated@@572))) (and (= ($generated@@331 ($generated@@312 ($generated@@76 $generated@@209 $generated@@2) $generated@@571)) $generated@@571) ($generated@@196 ($generated@@312 ($generated@@76 $generated@@209 $generated@@2) $generated@@571) ($generated@@214 $generated@@572))))
 :pattern ( ($generated@@276 $generated@@571 ($generated@@214 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@209) (= (type $generated@@574) $generated@@64)) ($generated@@276 $generated@@573 ($generated@@496 $generated@@574))) (and (= ($generated@@331 ($generated@@312 ($generated@@325 $generated@@209) $generated@@573)) $generated@@573) ($generated@@196 ($generated@@312 ($generated@@325 $generated@@209) $generated@@573) ($generated@@496 $generated@@574))))
 :pattern ( ($generated@@276 $generated@@573 ($generated@@496 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@575 ($generated@@214 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@209) (< 0 ($generated ($generated@@81 $generated@@575 $generated@@578)))) ($generated@@302 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@81 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@74 $generated@@575 ($generated@@214 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@200) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@301 $generated@@581) (and ($generated@@198 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@64) ($generated@@74 $generated@@579 ($generated@@199 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@74 $generated@@579 ($generated@@199 $generated@@580 $generated@@582) $generated@@581))
))))) ($generated@@302 ($generated@@207 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@302 ($generated@@207 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@200) (= (type $generated@@584) $generated@@64)) (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@301 $generated@@585) (and ($generated@@198 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@64) ($generated@@74 $generated@@583 ($generated@@199 $generated@@586 $generated@@584) $generated@@585))
 :pattern ( ($generated@@74 $generated@@583 ($generated@@199 $generated@@586 $generated@@584) $generated@@585))
))))) ($generated@@302 ($generated@@208 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@302 ($generated@@208 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@209) (= (type $generated@@588) $generated@@209)) (= ($generated@@275 ($generated@@297 $generated@@587) ($generated@@297 $generated@@588)) ($generated@@297 ($generated@@275 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@275 ($generated@@297 $generated@@587) ($generated@@297 $generated@@588)))
)))
(assert (forall (($generated@@589 Int) ) (! (= ($generated@@331 ($generated@@8 ($generated@@295 $generated@@589))) ($generated@@297 ($generated@@331 ($generated@@8 $generated@@589))))
 :pattern ( ($generated@@331 ($generated@@8 ($generated@@295 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ) (! (= ($generated@@331 ($generated@@297 $generated@@590)) ($generated@@297 ($generated@@331 $generated@@590)))
 :pattern ( ($generated@@331 ($generated@@297 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 ($generated@@326 (type $generated@@591))))
 (=> (and (= (type $generated@@591) ($generated@@325 $generated@@592)) (= ($generated@@324 $generated@@591) 0)) (= $generated@@591 ($generated@@323 $generated@@592))))
 :pattern ( ($generated@@324 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (! (let (($generated@@596 (type $generated@@594)))
 (=> (and (and (= (type $generated@@593) ($generated@@76 $generated@@596 $generated@@2)) (= (type $generated@@595) $generated@@2)) (<= 0 ($generated $generated@@595))) (= ($generated@@336 ($generated@@82 $generated@@593 $generated@@594 $generated@@595)) (+ (- ($generated@@336 $generated@@593) ($generated ($generated@@81 $generated@@593 $generated@@594))) ($generated $generated@@595)))))
 :pattern ( ($generated@@336 ($generated@@82 $generated@@593 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@598) $generated@@2)) ($generated@@74 $generated@@598 $generated@@46 $generated@@597))
 :pattern ( ($generated@@74 $generated@@598 $generated@@46 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@600) $generated@@3)) ($generated@@74 $generated@@600 $generated@@47 $generated@@599))
 :pattern ( ($generated@@74 $generated@@600 $generated@@47 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@602) $generated@@4)) ($generated@@74 $generated@@602 $generated@@44 $generated@@601))
 :pattern ( ($generated@@74 $generated@@602 $generated@@44 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@604) $generated@@454)) ($generated@@74 $generated@@604 $generated@@45 $generated@@603))
 :pattern ( ($generated@@74 $generated@@604 $generated@@45 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) $generated@@209)) ($generated@@74 $generated@@606 $generated@@48 $generated@@605))
 :pattern ( ($generated@@74 $generated@@606 $generated@@48 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@325 $generated@@209)) (= (type $generated@@608) $generated@@64)) (= ($generated@@196 $generated@@607 ($generated@@496 $generated@@608)) (forall (($generated@@609 Int) ) (!  (=> (and (<= 0 $generated@@609) (< $generated@@609 ($generated@@324 $generated@@607))) ($generated@@276 ($generated@@497 $generated@@607 $generated@@609) $generated@@608))
 :pattern ( ($generated@@497 $generated@@607 $generated@@609))
))))
 :pattern ( ($generated@@196 $generated@@607 ($generated@@496 $generated@@608)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 Int) ) (!  (=> (= (type $generated@@611) ($generated@@325 $generated@@209)) (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@324 $generated@@611))) (< ($generated@@535 ($generated@@312 $generated@@200 ($generated@@497 $generated@@611 $generated@@612))) ($generated@@610 $generated@@611))))
 :pattern ( ($generated@@535 ($generated@@312 $generated@@200 ($generated@@497 $generated@@611 $generated@@612))))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@614) $generated@@64)) (= (type $generated@@615) $generated@@64)) ($generated@@196 $generated@@613 ($generated@@414 $generated@@614 $generated@@615))) (and (and ($generated@@196 ($generated@@132 $generated@@613) ($generated@@285 $generated@@614)) ($generated@@196 ($generated@@361 $generated@@613) ($generated@@285 $generated@@615))) ($generated@@196 ($generated@@396 $generated@@613) ($generated@@285 ($generated@@199 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@196 $generated@@613 ($generated@@414 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@617) $generated@@64)) (= (type $generated@@618) $generated@@64)) ($generated@@196 $generated@@616 ($generated@@422 $generated@@617 $generated@@618))) (and (and ($generated@@196 ($generated@@164 $generated@@616) ($generated@@290 $generated@@617)) ($generated@@196 ($generated@@372 $generated@@616) ($generated@@290 $generated@@618))) ($generated@@196 ($generated@@400 $generated@@616) ($generated@@290 ($generated@@199 $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@196 $generated@@616 ($generated@@422 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@2) ($generated@@196 $generated@@619 $generated@@46))
 :pattern ( ($generated@@196 $generated@@619 $generated@@46))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@3) ($generated@@196 $generated@@620 $generated@@47))
 :pattern ( ($generated@@196 $generated@@620 $generated@@47))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@4) ($generated@@196 $generated@@621 $generated@@44))
 :pattern ( ($generated@@196 $generated@@621 $generated@@44))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@454) ($generated@@196 $generated@@622 $generated@@45))
 :pattern ( ($generated@@196 $generated@@622 $generated@@45))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@209) ($generated@@196 $generated@@623 $generated@@48))
 :pattern ( ($generated@@196 $generated@@623 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 (T@U) Bool)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@624) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@625) ($generated@@166 $generated@@209 $generated@@209))) (= (type $generated@@628) ($generated@@221 $generated@@77 $generated@@4))) (= (type $generated@@629) $generated@@77)) (= (type $generated@@630) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@632) ($generated@@166 $generated@@209 $generated@@209))) (= (type $generated@@633) ($generated@@166 $generated@@209 $generated@@209))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@635  (=> (= $generated@@624 ($generated@@165 ($generated@@311 $generated@@46 ($generated@@295 3)) ($generated@@382 ($generated@@331 ($generated@@8 ($generated@@295 2)))) ($generated@@422 $generated@@46 $generated@@46))) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@624) ($generated@@331 ($generated@@8 ($generated@@295 3)))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@625) ($generated@@81 ($generated@@187 $generated@@624) ($generated@@331 ($generated@@8 ($generated@@295 3))))))) (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated ($generated@@312 $generated@@2 ($generated@@81 ($generated@@187 $generated@@625) ($generated@@81 ($generated@@187 $generated@@624) ($generated@@331 ($generated@@8 ($generated@@295 3))))))) ($generated@@295 3))))))))
(let (($generated@@636  (=> (and (not (= $generated@@626 ($generated@@295 3))) (= (ControlFlow 0 8) 4)) $generated@@635)))
(let (($generated@@637  (=> (and (= $generated@@626 ($generated@@295 3)) (= (ControlFlow 0 7) 4)) $generated@@635)))
(let (($generated@@638  (and (=> (= (ControlFlow 0 9) 7) $generated@@637) (=> (= (ControlFlow 0 9) 8) $generated@@636))))
(let (($generated@@639 true))
(let (($generated@@640  (=> (= $generated@@625 ($generated@@165 ($generated@@311 $generated@@46 ($generated@@295 2)) ($generated@@382 ($generated@@331 ($generated@@8 ($generated@@295 3)))) ($generated@@422 $generated@@46 $generated@@46))) (and (=> (= (ControlFlow 0 10) 9) $generated@@638) (=> (= (ControlFlow 0 10) 2) $generated@@639)))))
(let (($generated@@641  (=> (and (not (= $generated@@627 ($generated@@295 2))) (= (ControlFlow 0 12) 10)) $generated@@640)))
(let (($generated@@642  (=> (and (= $generated@@627 ($generated@@295 2)) (= (ControlFlow 0 11) 10)) $generated@@640)))
(let (($generated@@643  (and (=> (= (ControlFlow 0 13) 11) $generated@@642) (=> (= (ControlFlow 0 13) 12) $generated@@641))))
(let (($generated@@644 true))
(let (($generated@@645  (=> (= $generated@@628 ($generated@@220 $generated@@629 $generated@@630 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 13) $generated@@643) (=> (= (ControlFlow 0 14) 1) $generated@@644)))))
(let (($generated@@646  (=> (and ($generated@@301 $generated@@630) ($generated@@631 $generated@@630)) (=> (and (and ($generated@@196 $generated@@632 ($generated@@422 $generated@@46 $generated@@46)) ($generated@@74 $generated@@632 ($generated@@422 $generated@@46 $generated@@46) $generated@@630)) true) (=> (and (and (and ($generated@@196 $generated@@633 ($generated@@422 $generated@@46 $generated@@46)) ($generated@@74 $generated@@633 ($generated@@422 $generated@@46 $generated@@46) $generated@@630)) true) (and (= 0 $generated@@634) (= (ControlFlow 0 15) 14))) $generated@@645)))))
$generated@@646)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@T) T@U)
(declare-fun $generated@@412 () T@T)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@U Int) T@U)
(declare-fun $generated@@464 (T@U) Int)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@0 ($generated@@81 $generated@@333 $generated@@336))) ($generated@@238 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@342) $generated@@341)) 0))
 :pattern ( (let (($generated@@342 (type $generated@@341)))
($generated@@81 ($generated@@264 $generated@@342) $generated@@341)))
)))
(assert  (and (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@346)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@343 $generated@@346))
)) (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@344 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@344 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@273 (type $generated@@349))))
(let (($generated@@351 ($generated@@272 (type $generated@@349))))
(= (type ($generated@@345 $generated@@349)) ($generated@@76 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@345 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@353) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353)))) (= ($generated@@81 ($generated@@345 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@353))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@291 (type $generated@@357))))
(let (($generated@@359 ($generated@@290 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@355 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@272 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@271 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@362) $generated@@366))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@290 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@289 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@64)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))) (and ($generated@@238 ($generated@@81 ($generated@@345 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@238 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))) (and ($generated@@238 ($generated@@81 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@238 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@T) ) (! (= (type ($generated@@388 $generated@@389)) ($generated@@76 $generated@@389 $generated@@4))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@291 (type $generated@@390))))
(let (($generated@@392 ($generated@@290 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@289 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@288 $generated@@392 $generated@@391)) (= ($generated@@287 $generated@@390) ($generated@@388 $generated@@392))))))
 :pattern ( ($generated@@287 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@291 (type $generated@@393))))
(let (($generated@@395 ($generated@@290 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@289 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@288 $generated@@395 $generated@@394)) (= ($generated@@323 $generated@@393) ($generated@@388 $generated@@394))))))
 :pattern ( ($generated@@323 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@291 (type $generated@@396))))
(let (($generated@@398 ($generated@@290 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@289 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@288 $generated@@398 $generated@@397)) (= ($generated@@354 $generated@@396) ($generated@@388 $generated@@145))))))
 :pattern ( ($generated@@354 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@273 (type $generated@@399))))
(let (($generated@@401 ($generated@@272 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@271 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@270 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (and (and (= (type $generated@@402) $generated@@145) (= (type $generated@@403) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@399) ($generated@@258 ($generated@@211 $generated@@402 $generated@@403)))))
 :no-pattern (type $generated@@402)
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@343 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (and (and (= (type $generated@@407) $generated@@145) (= (type $generated@@408) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@404) ($generated@@258 ($generated@@211 $generated@@407 $generated@@408)))))
 :no-pattern (type $generated@@407)
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@354 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@46)) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@344 $generated@@2 $generated@@409) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@46))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@212 $generated@@410 $generated@@47)) (and (= ($generated@@258 ($generated@@344 $generated@@3 $generated@@410)) $generated@@410) ($generated@@132 ($generated@@344 $generated@@3 $generated@@410) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@410 $generated@@47))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@44)) (and (= ($generated@@258 ($generated@@344 $generated@@4 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@344 $generated@@4 $generated@@411) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@412) 20))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@45)) (and (= ($generated@@258 ($generated@@344 $generated@@412 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@344 $generated@@412 $generated@@413) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@45))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@414) $generated@@415) ($generated@@132 $generated@@414 $generated@@415)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (<= 0 ($generated@@263 $generated@@416))))
 :pattern ( ($generated@@263 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@253 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@252 $generated@@419)) (<= 0 ($generated@@251 $generated@@418))))
 :pattern ( ($generated@@251 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@64) (= (type $generated@@423) $generated@@64)) (= ($generated@@420 ($generated@@372 $generated@@422 $generated@@423)) $generated@@422))
 :pattern ( ($generated@@372 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@424 ($generated@@372 $generated@@426 $generated@@427)) $generated@@427))
 :pattern ( ($generated@@372 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@72 ($generated@@372 $generated@@428 $generated@@429)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@380 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@380 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@380 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@380 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@438 $generated@@439)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) (= (type $generated@@441) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@440 $generated@@441)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@135 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@135 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@135 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@135 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) (= (type $generated@@453) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@211 $generated@@452 $generated@@453))
)))
(assert  (and (forall (($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@456))
)) (forall (($generated@@457 T@U) ($generated@@458 Int) ) (! (let (($generated@@459 ($generated@@253 (type $generated@@457))))
(= (type ($generated@@455 $generated@@457 $generated@@458)) $generated@@459))
 :pattern ( ($generated@@455 $generated@@457 $generated@@458))
))))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@252 $generated@@145)) (= (type $generated@@461) $generated@@64)) (= (type $generated@@462) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462) (forall (($generated@@463 Int) ) (!  (=> (and (<= 0 $generated@@463) (< $generated@@463 ($generated@@251 $generated@@460))) ($generated@@238 ($generated@@455 $generated@@460 $generated@@463) $generated@@461 $generated@@462))
 :pattern ( ($generated@@455 $generated@@460 $generated@@463))
))))
 :pattern ( ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@465 Int) ) (! (= ($generated@@464 ($generated@@75 $generated@@465)) $generated@@465)
 :pattern ( ($generated@@75 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@64) (= ($generated@@466 ($generated@@221 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@221 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@469)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@470 ($generated@@226 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@226 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@473)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@150 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@150 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@477)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@454 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@454 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@454 $generated@@481)) $generated@@57))
 :pattern ( ($generated@@454 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
(= ($generated@@344 $generated@@483 ($generated@@258 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@258 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@485) $generated@@64)) (= (type $generated@@486) $generated@@64)) (= ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))) (and ($generated@@212 ($generated@@81 ($generated@@345 $generated@@484) $generated@@487) $generated@@486) ($generated@@212 $generated@@487 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@484) $generated@@487))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))
))))
 :pattern ( ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) $generated@@64)) (= ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@488) $generated@@491) $generated@@490) ($generated@@212 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@488) $generated@@491))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@492 $generated@@494) ($generated@@493 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@145)) (< ($generated@@492 $generated@@497) ($generated@@493 ($generated@@211 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@211 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@145) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500))) (and (= ($generated@@258 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498)) $generated@@498) ($generated@@132 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498) ($generated@@372 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503))) (and (= ($generated@@258 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501)) $generated@@501) ($generated@@132 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501) ($generated@@380 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@145)) ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505))) (and (= ($generated@@258 ($generated@@344 $generated@@136 $generated@@506)) $generated@@506) ($generated@@132 ($generated@@344 $generated@@136 $generated@@506) ($generated@@135 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
 (not ($generated@@0 ($generated@@81 ($generated@@388 $generated@@508) $generated@@507))))
 :pattern ( (let (($generated@@508 (type $generated@@507)))
($generated@@81 ($generated@@388 $generated@@508) $generated@@507)))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@511 $generated@@512)) $generated@@62) (= ($generated@@509 ($generated@@135 $generated@@511 $generated@@512)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@136) (= ($generated@@492 ($generated@@258 $generated@@513)) ($generated@@493 $generated@@513)))
 :pattern ( ($generated@@492 ($generated@@258 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@212 $generated@@514 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@514)) $generated@@514) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@514) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@75 0)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@221 $generated@@516))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@515) ($generated@@221 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@221 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) ($generated@@212 $generated@@517 ($generated@@226 $generated@@518))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517) ($generated@@226 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@226 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) ($generated@@212 $generated@@519 ($generated@@150 $generated@@520))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@519) ($generated@@150 $generated@@520))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@150 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) ($generated@@212 $generated@@521 ($generated@@454 $generated@@522))) (and (= ($generated@@258 ($generated@@344 ($generated@@252 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@344 ($generated@@252 $generated@@145) $generated@@521) ($generated@@454 $generated@@522))))
 :pattern ( ($generated@@212 $generated@@521 ($generated@@454 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@523 ($generated@@150 $generated@@524) $generated@@525) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@523 $generated@@526)))) ($generated@@238 $generated@@526 $generated@@524 $generated@@525))
 :pattern ( ($generated@@81 $generated@@523 $generated@@526))
))))
 :pattern ( ($generated@@74 $generated@@523 ($generated@@150 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@136) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@529) (and ($generated@@134 $generated@@527) (exists (($generated@@530 T@U) ) (!  (and (= (type $generated@@530) $generated@@64) ($generated@@74 $generated@@527 ($generated@@135 $generated@@528 $generated@@530) $generated@@529))
 :pattern ( ($generated@@74 $generated@@527 ($generated@@135 $generated@@528 $generated@@530) $generated@@529))
))))) ($generated@@238 ($generated@@143 $generated@@527) $generated@@528 $generated@@529))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@527) $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@136) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@533) (and ($generated@@134 $generated@@531) (exists (($generated@@534 T@U) ) (!  (and (= (type $generated@@534) $generated@@64) ($generated@@74 $generated@@531 ($generated@@135 $generated@@534 $generated@@532) $generated@@533))
 :pattern ( ($generated@@74 $generated@@531 ($generated@@135 $generated@@534 $generated@@532) $generated@@533))
))))) ($generated@@238 ($generated@@144 $generated@@531) $generated@@532 $generated@@533))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@531) $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@535) ($generated@@233 $generated@@536)) ($generated@@233 ($generated@@211 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@535) ($generated@@233 $generated@@536)))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@537))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@537))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@537))))
)))
(assert (forall (($generated@@538 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@538)) ($generated@@233 ($generated@@258 $generated@@538)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@253 (type $generated@@539))))
 (=> (and (= (type $generated@@539) ($generated@@252 $generated@@540)) (= ($generated@@251 $generated@@539) 0)) (= $generated@@539 ($generated@@250 $generated@@540))))
 :pattern ( ($generated@@251 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@542)))
 (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@544 $generated@@2)) (= (type $generated@@543) $generated@@2)) (<= 0 ($generated $generated@@543))) (= ($generated@@263 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)) (+ (- ($generated@@263 $generated@@541) ($generated ($generated@@81 $generated@@541 $generated@@542))) ($generated $generated@@543)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@546) $generated@@2)) ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
 :pattern ( ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@548) $generated@@3)) ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
 :pattern ( ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@550) $generated@@4)) ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
 :pattern ( ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@552) $generated@@412)) ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
 :pattern ( ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@145)) ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@252 $generated@@145)) (= (type $generated@@556) $generated@@64)) (= ($generated@@132 $generated@@555 ($generated@@454 $generated@@556)) (forall (($generated@@557 Int) ) (!  (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@251 $generated@@555))) ($generated@@212 ($generated@@455 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@455 $generated@@555 $generated@@557))
))))
 :pattern ( ($generated@@132 $generated@@555 ($generated@@454 $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 Int) ) (!  (=> (= (type $generated@@559) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@251 $generated@@559))) (< ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@559 $generated@@560))) ($generated@@558 $generated@@559))))
 :pattern ( ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@559 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@132 $generated@@561 ($generated@@372 $generated@@562 $generated@@563))) (and (and ($generated@@132 ($generated@@269 $generated@@561) ($generated@@221 $generated@@562)) ($generated@@132 ($generated@@312 $generated@@561) ($generated@@221 $generated@@563))) ($generated@@132 ($generated@@343 $generated@@561) ($generated@@221 ($generated@@135 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@372 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@64)) ($generated@@132 $generated@@564 ($generated@@380 $generated@@565 $generated@@566))) (and (and ($generated@@132 ($generated@@287 $generated@@564) ($generated@@226 $generated@@565)) ($generated@@132 ($generated@@323 $generated@@564) ($generated@@226 $generated@@566))) ($generated@@132 ($generated@@354 $generated@@564) ($generated@@226 ($generated@@135 $generated@@565 $generated@@566)))))
 :pattern ( ($generated@@132 $generated@@564 ($generated@@380 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@2) ($generated@@132 $generated@@567 $generated@@46))
 :pattern ( ($generated@@132 $generated@@567 $generated@@46))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@3) ($generated@@132 $generated@@568 $generated@@47))
 :pattern ( ($generated@@132 $generated@@568 $generated@@47))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@4) ($generated@@132 $generated@@569 $generated@@44))
 :pattern ( ($generated@@132 $generated@@569 $generated@@44))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@412) ($generated@@132 $generated@@570 $generated@@45))
 :pattern ( ($generated@@132 $generated@@570 $generated@@45))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@145) ($generated@@132 $generated@@571 $generated@@48))
 :pattern ( ($generated@@132 $generated@@571 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@572 () Int)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@577 () T@U)
(declare-fun $generated@@578 (T@U) Bool)
(declare-fun $generated@@579 () Int)
(assert  (and (and (and (and (= (type $generated@@573) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@574) ($generated@@289 $generated@@145 $generated@@145))) (= (type $generated@@575) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@576) $generated@@77)) (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@580 true))
(let (($generated@@581  (=> (and (=> (and (<= ($generated@@231 0) $generated@@572) (< $generated@@572 100)) (and (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@573) ($generated@@258 ($generated@@8 $generated@@572)))) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@574) ($generated@@258 ($generated@@8 $generated@@572))))) (= ($generated@@0 ($generated@@344 $generated@@4 ($generated@@81 ($generated@@355 $generated@@573) ($generated@@258 ($generated@@8 $generated@@572)))))  (not ($generated@@0 ($generated@@344 $generated@@4 ($generated@@81 ($generated@@355 $generated@@574) ($generated@@258 ($generated@@8 $generated@@572))))))))) (= (ControlFlow 0 5) 1)) $generated@@580)))
(let (($generated@@582  (=> (and (and (<= ($generated@@231 0) $generated@@572) (< $generated@@572 100)) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@573) ($generated@@258 ($generated@@8 $generated@@572)))) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@574) ($generated@@258 ($generated@@8 $generated@@572)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@573) ($generated@@258 ($generated@@8 $generated@@572))))) (=> ($generated@@0 ($generated@@81 ($generated@@287 $generated@@573) ($generated@@258 ($generated@@8 $generated@@572)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@574) ($generated@@258 ($generated@@8 $generated@@572))))) (=> ($generated@@0 ($generated@@81 ($generated@@287 $generated@@574) ($generated@@258 ($generated@@8 $generated@@572)))) (=> (and (= ($generated@@0 ($generated@@344 $generated@@4 ($generated@@81 ($generated@@355 $generated@@573) ($generated@@258 ($generated@@8 $generated@@572)))))  (not ($generated@@0 ($generated@@344 $generated@@4 ($generated@@81 ($generated@@355 $generated@@574) ($generated@@258 ($generated@@8 $generated@@572))))))) (= (ControlFlow 0 2) 1)) $generated@@580))))))))
(let (($generated@@583  (=> (= $generated@@575 ($generated@@156 $generated@@576 $generated@@577 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@582) (=> (= (ControlFlow 0 6) 5) $generated@@581)))))
(let (($generated@@584  (=> (and (and (and ($generated@@237 $generated@@577) ($generated@@578 $generated@@577)) (and ($generated@@132 $generated@@573 ($generated@@380 $generated@@46 $generated@@44)) ($generated@@74 $generated@@573 ($generated@@380 $generated@@46 $generated@@44) $generated@@577))) (and (and ($generated@@132 $generated@@574 ($generated@@380 $generated@@46 $generated@@44)) ($generated@@74 $generated@@574 ($generated@@380 $generated@@46 $generated@@44) $generated@@577)) (and (= 0 $generated@@579) (= (ControlFlow 0 7) 6)))) $generated@@583)))
$generated@@584))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@T) T@U)
(declare-fun $generated@@412 () T@T)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@U Int) T@U)
(declare-fun $generated@@464 (T@U) Int)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@0 ($generated@@81 $generated@@333 $generated@@336))) ($generated@@238 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@342) $generated@@341)) 0))
 :pattern ( (let (($generated@@342 (type $generated@@341)))
($generated@@81 ($generated@@264 $generated@@342) $generated@@341)))
)))
(assert  (and (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@346)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@343 $generated@@346))
)) (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@344 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@344 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@273 (type $generated@@349))))
(let (($generated@@351 ($generated@@272 (type $generated@@349))))
(= (type ($generated@@345 $generated@@349)) ($generated@@76 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@345 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@353) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353)))) (= ($generated@@81 ($generated@@345 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@353))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@291 (type $generated@@357))))
(let (($generated@@359 ($generated@@290 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@355 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@272 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@271 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@362) $generated@@366))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@290 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@289 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@64)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))) (and ($generated@@238 ($generated@@81 ($generated@@345 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@238 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))) (and ($generated@@238 ($generated@@81 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@238 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@T) ) (! (= (type ($generated@@388 $generated@@389)) ($generated@@76 $generated@@389 $generated@@4))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@291 (type $generated@@390))))
(let (($generated@@392 ($generated@@290 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@289 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@288 $generated@@392 $generated@@391)) (= ($generated@@287 $generated@@390) ($generated@@388 $generated@@392))))))
 :pattern ( ($generated@@287 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@291 (type $generated@@393))))
(let (($generated@@395 ($generated@@290 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@289 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@288 $generated@@395 $generated@@394)) (= ($generated@@323 $generated@@393) ($generated@@388 $generated@@394))))))
 :pattern ( ($generated@@323 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@291 (type $generated@@396))))
(let (($generated@@398 ($generated@@290 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@289 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@288 $generated@@398 $generated@@397)) (= ($generated@@354 $generated@@396) ($generated@@388 $generated@@145))))))
 :pattern ( ($generated@@354 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@273 (type $generated@@399))))
(let (($generated@@401 ($generated@@272 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@271 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@270 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (and (and (= (type $generated@@402) $generated@@145) (= (type $generated@@403) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@399) ($generated@@258 ($generated@@211 $generated@@402 $generated@@403)))))
 :no-pattern (type $generated@@402)
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@343 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (and (and (= (type $generated@@407) $generated@@145) (= (type $generated@@408) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@404) ($generated@@258 ($generated@@211 $generated@@407 $generated@@408)))))
 :no-pattern (type $generated@@407)
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@354 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@46)) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@344 $generated@@2 $generated@@409) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@46))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@212 $generated@@410 $generated@@47)) (and (= ($generated@@258 ($generated@@344 $generated@@3 $generated@@410)) $generated@@410) ($generated@@132 ($generated@@344 $generated@@3 $generated@@410) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@410 $generated@@47))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@44)) (and (= ($generated@@258 ($generated@@344 $generated@@4 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@344 $generated@@4 $generated@@411) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@412) 20))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@45)) (and (= ($generated@@258 ($generated@@344 $generated@@412 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@344 $generated@@412 $generated@@413) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@45))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@414) $generated@@415) ($generated@@132 $generated@@414 $generated@@415)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (<= 0 ($generated@@263 $generated@@416))))
 :pattern ( ($generated@@263 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@253 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@252 $generated@@419)) (<= 0 ($generated@@251 $generated@@418))))
 :pattern ( ($generated@@251 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@64) (= (type $generated@@423) $generated@@64)) (= ($generated@@420 ($generated@@372 $generated@@422 $generated@@423)) $generated@@422))
 :pattern ( ($generated@@372 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@424 ($generated@@372 $generated@@426 $generated@@427)) $generated@@427))
 :pattern ( ($generated@@372 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@72 ($generated@@372 $generated@@428 $generated@@429)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@380 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@380 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@380 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@380 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@438 $generated@@439)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) (= (type $generated@@441) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@440 $generated@@441)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@135 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@135 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@135 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@135 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) (= (type $generated@@453) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@211 $generated@@452 $generated@@453))
)))
(assert  (and (forall (($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@456))
)) (forall (($generated@@457 T@U) ($generated@@458 Int) ) (! (let (($generated@@459 ($generated@@253 (type $generated@@457))))
(= (type ($generated@@455 $generated@@457 $generated@@458)) $generated@@459))
 :pattern ( ($generated@@455 $generated@@457 $generated@@458))
))))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@252 $generated@@145)) (= (type $generated@@461) $generated@@64)) (= (type $generated@@462) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462) (forall (($generated@@463 Int) ) (!  (=> (and (<= 0 $generated@@463) (< $generated@@463 ($generated@@251 $generated@@460))) ($generated@@238 ($generated@@455 $generated@@460 $generated@@463) $generated@@461 $generated@@462))
 :pattern ( ($generated@@455 $generated@@460 $generated@@463))
))))
 :pattern ( ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@465 Int) ) (! (= ($generated@@464 ($generated@@75 $generated@@465)) $generated@@465)
 :pattern ( ($generated@@75 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@64) (= ($generated@@466 ($generated@@221 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@221 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@469)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@470 ($generated@@226 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@226 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@473)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@150 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@150 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@477)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@454 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@454 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@454 $generated@@481)) $generated@@57))
 :pattern ( ($generated@@454 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
(= ($generated@@344 $generated@@483 ($generated@@258 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@258 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@485) $generated@@64)) (= (type $generated@@486) $generated@@64)) (= ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))) (and ($generated@@212 ($generated@@81 ($generated@@345 $generated@@484) $generated@@487) $generated@@486) ($generated@@212 $generated@@487 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@484) $generated@@487))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))
))))
 :pattern ( ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) $generated@@64)) (= ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@488) $generated@@491) $generated@@490) ($generated@@212 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@488) $generated@@491))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@492 $generated@@494) ($generated@@493 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@145)) (< ($generated@@492 $generated@@497) ($generated@@493 ($generated@@211 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@211 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@145) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500))) (and (= ($generated@@258 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498)) $generated@@498) ($generated@@132 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498) ($generated@@372 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503))) (and (= ($generated@@258 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501)) $generated@@501) ($generated@@132 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501) ($generated@@380 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@145)) ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505))) (and (= ($generated@@258 ($generated@@344 $generated@@136 $generated@@506)) $generated@@506) ($generated@@132 ($generated@@344 $generated@@136 $generated@@506) ($generated@@135 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
 (not ($generated@@0 ($generated@@81 ($generated@@388 $generated@@508) $generated@@507))))
 :pattern ( (let (($generated@@508 (type $generated@@507)))
($generated@@81 ($generated@@388 $generated@@508) $generated@@507)))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@511 $generated@@512)) $generated@@62) (= ($generated@@509 ($generated@@135 $generated@@511 $generated@@512)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@136) (= ($generated@@492 ($generated@@258 $generated@@513)) ($generated@@493 $generated@@513)))
 :pattern ( ($generated@@492 ($generated@@258 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@212 $generated@@514 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@514)) $generated@@514) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@514) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@75 0)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@221 $generated@@516))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@515) ($generated@@221 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@221 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) ($generated@@212 $generated@@517 ($generated@@226 $generated@@518))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517) ($generated@@226 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@226 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) ($generated@@212 $generated@@519 ($generated@@150 $generated@@520))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@519) ($generated@@150 $generated@@520))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@150 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) ($generated@@212 $generated@@521 ($generated@@454 $generated@@522))) (and (= ($generated@@258 ($generated@@344 ($generated@@252 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@344 ($generated@@252 $generated@@145) $generated@@521) ($generated@@454 $generated@@522))))
 :pattern ( ($generated@@212 $generated@@521 ($generated@@454 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@523 ($generated@@150 $generated@@524) $generated@@525) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@523 $generated@@526)))) ($generated@@238 $generated@@526 $generated@@524 $generated@@525))
 :pattern ( ($generated@@81 $generated@@523 $generated@@526))
))))
 :pattern ( ($generated@@74 $generated@@523 ($generated@@150 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@136) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@529) (and ($generated@@134 $generated@@527) (exists (($generated@@530 T@U) ) (!  (and (= (type $generated@@530) $generated@@64) ($generated@@74 $generated@@527 ($generated@@135 $generated@@528 $generated@@530) $generated@@529))
 :pattern ( ($generated@@74 $generated@@527 ($generated@@135 $generated@@528 $generated@@530) $generated@@529))
))))) ($generated@@238 ($generated@@143 $generated@@527) $generated@@528 $generated@@529))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@527) $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@136) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@533) (and ($generated@@134 $generated@@531) (exists (($generated@@534 T@U) ) (!  (and (= (type $generated@@534) $generated@@64) ($generated@@74 $generated@@531 ($generated@@135 $generated@@534 $generated@@532) $generated@@533))
 :pattern ( ($generated@@74 $generated@@531 ($generated@@135 $generated@@534 $generated@@532) $generated@@533))
))))) ($generated@@238 ($generated@@144 $generated@@531) $generated@@532 $generated@@533))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@531) $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@535) ($generated@@233 $generated@@536)) ($generated@@233 ($generated@@211 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@535) ($generated@@233 $generated@@536)))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@537))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@537))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@537))))
)))
(assert (forall (($generated@@538 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@538)) ($generated@@233 ($generated@@258 $generated@@538)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@253 (type $generated@@539))))
 (=> (and (= (type $generated@@539) ($generated@@252 $generated@@540)) (= ($generated@@251 $generated@@539) 0)) (= $generated@@539 ($generated@@250 $generated@@540))))
 :pattern ( ($generated@@251 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@542)))
 (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@544 $generated@@2)) (= (type $generated@@543) $generated@@2)) (<= 0 ($generated $generated@@543))) (= ($generated@@263 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)) (+ (- ($generated@@263 $generated@@541) ($generated ($generated@@81 $generated@@541 $generated@@542))) ($generated $generated@@543)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@546) $generated@@2)) ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
 :pattern ( ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@548) $generated@@3)) ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
 :pattern ( ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@550) $generated@@4)) ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
 :pattern ( ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@552) $generated@@412)) ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
 :pattern ( ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@145)) ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@252 $generated@@145)) (= (type $generated@@556) $generated@@64)) (= ($generated@@132 $generated@@555 ($generated@@454 $generated@@556)) (forall (($generated@@557 Int) ) (!  (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@251 $generated@@555))) ($generated@@212 ($generated@@455 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@455 $generated@@555 $generated@@557))
))))
 :pattern ( ($generated@@132 $generated@@555 ($generated@@454 $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 Int) ) (!  (=> (= (type $generated@@559) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@251 $generated@@559))) (< ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@559 $generated@@560))) ($generated@@558 $generated@@559))))
 :pattern ( ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@559 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@132 $generated@@561 ($generated@@372 $generated@@562 $generated@@563))) (and (and ($generated@@132 ($generated@@269 $generated@@561) ($generated@@221 $generated@@562)) ($generated@@132 ($generated@@312 $generated@@561) ($generated@@221 $generated@@563))) ($generated@@132 ($generated@@343 $generated@@561) ($generated@@221 ($generated@@135 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@372 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@64)) ($generated@@132 $generated@@564 ($generated@@380 $generated@@565 $generated@@566))) (and (and ($generated@@132 ($generated@@287 $generated@@564) ($generated@@226 $generated@@565)) ($generated@@132 ($generated@@323 $generated@@564) ($generated@@226 $generated@@566))) ($generated@@132 ($generated@@354 $generated@@564) ($generated@@226 ($generated@@135 $generated@@565 $generated@@566)))))
 :pattern ( ($generated@@132 $generated@@564 ($generated@@380 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@2) ($generated@@132 $generated@@567 $generated@@46))
 :pattern ( ($generated@@132 $generated@@567 $generated@@46))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@3) ($generated@@132 $generated@@568 $generated@@47))
 :pattern ( ($generated@@132 $generated@@568 $generated@@47))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@4) ($generated@@132 $generated@@569 $generated@@44))
 :pattern ( ($generated@@132 $generated@@569 $generated@@44))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@412) ($generated@@132 $generated@@570 $generated@@45))
 :pattern ( ($generated@@132 $generated@@570 $generated@@45))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@145) ($generated@@132 $generated@@571 $generated@@48))
 :pattern ( ($generated@@132 $generated@@571 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@572 () T@U)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@574 () Int)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@577 () T@U)
(declare-fun $generated@@578 (T@U) Bool)
(declare-fun $generated@@579 () Int)
(assert  (and (and (and (and (= (type $generated@@572) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@573) ($generated@@289 $generated@@145 $generated@@145))) (= (type $generated@@575) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@576) $generated@@77)) (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@580  (=> (= (ControlFlow 0 3) (- 0 2)) (forall (($generated@@581 Int) ) (!  (=> (and (<= ($generated@@231 0) $generated@@581) (< $generated@@581 100)) (or ($generated@@0 ($generated@@344 $generated@@4 ($generated@@81 ($generated@@355 $generated@@573) ($generated@@258 ($generated@@8 $generated@@581))))) ($generated@@0 ($generated@@344 $generated@@4 ($generated@@81 ($generated@@355 $generated@@572) ($generated@@258 ($generated@@8 $generated@@581)))))))
 :pattern ( ($generated@@344 $generated@@4 ($generated@@81 ($generated@@355 $generated@@572) ($generated@@258 ($generated@@8 $generated@@581)))))
 :pattern ( ($generated@@344 $generated@@4 ($generated@@81 ($generated@@355 $generated@@573) ($generated@@258 ($generated@@8 $generated@@581)))))
)))))
(let (($generated@@582  (=> (and ($generated@@0 ($generated@@344 $generated@@4 ($generated@@81 ($generated@@355 $generated@@573) ($generated@@258 ($generated@@8 $generated@@574))))) (= (ControlFlow 0 7) 3)) $generated@@580)))
(let (($generated@@583  (=> (not ($generated@@0 ($generated@@344 $generated@@4 ($generated@@81 ($generated@@355 $generated@@573) ($generated@@258 ($generated@@8 $generated@@574)))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@572) ($generated@@258 ($generated@@8 $generated@@574))))) (=> (= (ControlFlow 0 5) 3) $generated@@580)))))
(let (($generated@@584  (=> (and (<= ($generated@@231 0) $generated@@574) (< $generated@@574 100)) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@573) ($generated@@258 ($generated@@8 $generated@@574))))) (and (=> (= (ControlFlow 0 8) 5) $generated@@583) (=> (= (ControlFlow 0 8) 7) $generated@@582))))))
(let (($generated@@585  (=> (and (not (and (<= ($generated@@231 0) $generated@@574) (< $generated@@574 100))) (= (ControlFlow 0 4) 3)) $generated@@580)))
(let (($generated@@586  (=> (< $generated@@574 ($generated@@231 0)) (and (=> (= (ControlFlow 0 11) 8) $generated@@584) (=> (= (ControlFlow 0 11) 4) $generated@@585)))))
(let (($generated@@587  (=> (<= ($generated@@231 0) $generated@@574) (and (=> (= (ControlFlow 0 10) 8) $generated@@584) (=> (= (ControlFlow 0 10) 4) $generated@@585)))))
(let (($generated@@588  (and (=> (= (ControlFlow 0 12) 10) $generated@@587) (=> (= (ControlFlow 0 12) 11) $generated@@586))))
(let (($generated@@589 true))
(let (($generated@@590  (=> (= $generated@@575 ($generated@@156 $generated@@576 $generated@@577 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 12) $generated@@588) (=> (= (ControlFlow 0 13) 1) $generated@@589)))))
(let (($generated@@591  (=> (and (and ($generated@@237 $generated@@577) ($generated@@578 $generated@@577)) (and ($generated@@132 $generated@@573 ($generated@@380 $generated@@46 $generated@@44)) ($generated@@74 $generated@@573 ($generated@@380 $generated@@46 $generated@@44) $generated@@577))) (=> (and (and (and ($generated@@132 $generated@@572 ($generated@@380 $generated@@46 $generated@@44)) ($generated@@74 $generated@@572 ($generated@@380 $generated@@46 $generated@@44) $generated@@577)) (= 0 $generated@@579)) (and (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@2) (=> (and (<= ($generated@@231 0) ($generated $generated@@592)) (< ($generated $generated@@592) 100)) (and (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@573) ($generated@@258 $generated@@592))) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@572) ($generated@@258 $generated@@592)))) (= ($generated@@0 ($generated@@344 $generated@@4 ($generated@@81 ($generated@@355 $generated@@573) ($generated@@258 $generated@@592))))  (not ($generated@@0 ($generated@@344 $generated@@4 ($generated@@81 ($generated@@355 $generated@@572) ($generated@@258 $generated@@592)))))))))
 :pattern ( ($generated@@344 $generated@@4 ($generated@@81 ($generated@@355 $generated@@572) ($generated@@258 $generated@@592))))
 :pattern ( ($generated@@344 $generated@@4 ($generated@@81 ($generated@@355 $generated@@573) ($generated@@258 $generated@@592))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@572) ($generated@@258 $generated@@592)))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@573) ($generated@@258 $generated@@592)))
)) (= (ControlFlow 0 14) 13))) $generated@@590))))
$generated@@591))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@T) T@U)
(declare-fun $generated@@412 () T@T)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@U Int) T@U)
(declare-fun $generated@@464 (T@U) Int)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (Int Int) Int)
(declare-fun $generated@@561 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@0 ($generated@@81 $generated@@333 $generated@@336))) ($generated@@238 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@342) $generated@@341)) 0))
 :pattern ( (let (($generated@@342 (type $generated@@341)))
($generated@@81 ($generated@@264 $generated@@342) $generated@@341)))
)))
(assert  (and (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@346)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@343 $generated@@346))
)) (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@344 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@344 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@273 (type $generated@@349))))
(let (($generated@@351 ($generated@@272 (type $generated@@349))))
(= (type ($generated@@345 $generated@@349)) ($generated@@76 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@345 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@353) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353)))) (= ($generated@@81 ($generated@@345 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@353))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@291 (type $generated@@357))))
(let (($generated@@359 ($generated@@290 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@355 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@272 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@271 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@362) $generated@@366))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@290 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@289 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@64)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))) (and ($generated@@238 ($generated@@81 ($generated@@345 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@238 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))) (and ($generated@@238 ($generated@@81 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@238 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@T) ) (! (= (type ($generated@@388 $generated@@389)) ($generated@@76 $generated@@389 $generated@@4))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@291 (type $generated@@390))))
(let (($generated@@392 ($generated@@290 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@289 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@288 $generated@@392 $generated@@391)) (= ($generated@@287 $generated@@390) ($generated@@388 $generated@@392))))))
 :pattern ( ($generated@@287 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@291 (type $generated@@393))))
(let (($generated@@395 ($generated@@290 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@289 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@288 $generated@@395 $generated@@394)) (= ($generated@@323 $generated@@393) ($generated@@388 $generated@@394))))))
 :pattern ( ($generated@@323 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@291 (type $generated@@396))))
(let (($generated@@398 ($generated@@290 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@289 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@288 $generated@@398 $generated@@397)) (= ($generated@@354 $generated@@396) ($generated@@388 $generated@@145))))))
 :pattern ( ($generated@@354 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@273 (type $generated@@399))))
(let (($generated@@401 ($generated@@272 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@271 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@270 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (and (and (= (type $generated@@402) $generated@@145) (= (type $generated@@403) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@399) ($generated@@258 ($generated@@211 $generated@@402 $generated@@403)))))
 :no-pattern (type $generated@@402)
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@343 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (and (and (= (type $generated@@407) $generated@@145) (= (type $generated@@408) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@404) ($generated@@258 ($generated@@211 $generated@@407 $generated@@408)))))
 :no-pattern (type $generated@@407)
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@354 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@46)) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@344 $generated@@2 $generated@@409) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@46))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@212 $generated@@410 $generated@@47)) (and (= ($generated@@258 ($generated@@344 $generated@@3 $generated@@410)) $generated@@410) ($generated@@132 ($generated@@344 $generated@@3 $generated@@410) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@410 $generated@@47))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@44)) (and (= ($generated@@258 ($generated@@344 $generated@@4 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@344 $generated@@4 $generated@@411) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@412) 20))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@45)) (and (= ($generated@@258 ($generated@@344 $generated@@412 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@344 $generated@@412 $generated@@413) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@45))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@414) $generated@@415) ($generated@@132 $generated@@414 $generated@@415)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (<= 0 ($generated@@263 $generated@@416))))
 :pattern ( ($generated@@263 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@253 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@252 $generated@@419)) (<= 0 ($generated@@251 $generated@@418))))
 :pattern ( ($generated@@251 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@64) (= (type $generated@@423) $generated@@64)) (= ($generated@@420 ($generated@@372 $generated@@422 $generated@@423)) $generated@@422))
 :pattern ( ($generated@@372 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@424 ($generated@@372 $generated@@426 $generated@@427)) $generated@@427))
 :pattern ( ($generated@@372 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@72 ($generated@@372 $generated@@428 $generated@@429)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@380 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@380 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@380 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@380 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@438 $generated@@439)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) (= (type $generated@@441) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@440 $generated@@441)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@135 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@135 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@135 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@135 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) (= (type $generated@@453) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@211 $generated@@452 $generated@@453))
)))
(assert  (and (forall (($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@456))
)) (forall (($generated@@457 T@U) ($generated@@458 Int) ) (! (let (($generated@@459 ($generated@@253 (type $generated@@457))))
(= (type ($generated@@455 $generated@@457 $generated@@458)) $generated@@459))
 :pattern ( ($generated@@455 $generated@@457 $generated@@458))
))))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@252 $generated@@145)) (= (type $generated@@461) $generated@@64)) (= (type $generated@@462) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462) (forall (($generated@@463 Int) ) (!  (=> (and (<= 0 $generated@@463) (< $generated@@463 ($generated@@251 $generated@@460))) ($generated@@238 ($generated@@455 $generated@@460 $generated@@463) $generated@@461 $generated@@462))
 :pattern ( ($generated@@455 $generated@@460 $generated@@463))
))))
 :pattern ( ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@465 Int) ) (! (= ($generated@@464 ($generated@@75 $generated@@465)) $generated@@465)
 :pattern ( ($generated@@75 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@64) (= ($generated@@466 ($generated@@221 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@221 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@469)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@470 ($generated@@226 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@226 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@473)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@150 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@150 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@477)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@454 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@454 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@454 $generated@@481)) $generated@@57))
 :pattern ( ($generated@@454 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
(= ($generated@@344 $generated@@483 ($generated@@258 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@258 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@485) $generated@@64)) (= (type $generated@@486) $generated@@64)) (= ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))) (and ($generated@@212 ($generated@@81 ($generated@@345 $generated@@484) $generated@@487) $generated@@486) ($generated@@212 $generated@@487 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@484) $generated@@487))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))
))))
 :pattern ( ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) $generated@@64)) (= ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@488) $generated@@491) $generated@@490) ($generated@@212 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@488) $generated@@491))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@492 $generated@@494) ($generated@@493 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@145)) (< ($generated@@492 $generated@@497) ($generated@@493 ($generated@@211 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@211 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@145) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500))) (and (= ($generated@@258 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498)) $generated@@498) ($generated@@132 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498) ($generated@@372 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503))) (and (= ($generated@@258 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501)) $generated@@501) ($generated@@132 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501) ($generated@@380 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@145)) ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505))) (and (= ($generated@@258 ($generated@@344 $generated@@136 $generated@@506)) $generated@@506) ($generated@@132 ($generated@@344 $generated@@136 $generated@@506) ($generated@@135 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
 (not ($generated@@0 ($generated@@81 ($generated@@388 $generated@@508) $generated@@507))))
 :pattern ( (let (($generated@@508 (type $generated@@507)))
($generated@@81 ($generated@@388 $generated@@508) $generated@@507)))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@511 $generated@@512)) $generated@@62) (= ($generated@@509 ($generated@@135 $generated@@511 $generated@@512)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 Int) ($generated@@515 Int) ) (! (= ($generated@@513 $generated@@514 $generated@@515) (* $generated@@514 $generated@@515))
 :pattern ( ($generated@@513 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@136) (= ($generated@@492 ($generated@@258 $generated@@516)) ($generated@@493 $generated@@516)))
 :pattern ( ($generated@@492 ($generated@@258 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) ($generated@@212 $generated@@517 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@517)) $generated@@517) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@75 0)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@64)) ($generated@@212 $generated@@518 ($generated@@221 $generated@@519))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@518)) $generated@@518) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@518) ($generated@@221 $generated@@519))))
 :pattern ( ($generated@@212 $generated@@518 ($generated@@221 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@64)) ($generated@@212 $generated@@520 ($generated@@226 $generated@@521))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@520)) $generated@@520) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@520) ($generated@@226 $generated@@521))))
 :pattern ( ($generated@@212 $generated@@520 ($generated@@226 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) ($generated@@212 $generated@@522 ($generated@@150 $generated@@523))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@522) ($generated@@150 $generated@@523))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@150 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) ($generated@@212 $generated@@524 ($generated@@454 $generated@@525))) (and (= ($generated@@258 ($generated@@344 ($generated@@252 $generated@@145) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@344 ($generated@@252 $generated@@145) $generated@@524) ($generated@@454 $generated@@525))))
 :pattern ( ($generated@@212 $generated@@524 ($generated@@454 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@526 ($generated@@150 $generated@@527) $generated@@528) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@526 $generated@@529)))) ($generated@@238 $generated@@529 $generated@@527 $generated@@528))
 :pattern ( ($generated@@81 $generated@@526 $generated@@529))
))))
 :pattern ( ($generated@@74 $generated@@526 ($generated@@150 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@136) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@532) (and ($generated@@134 $generated@@530) (exists (($generated@@533 T@U) ) (!  (and (= (type $generated@@533) $generated@@64) ($generated@@74 $generated@@530 ($generated@@135 $generated@@531 $generated@@533) $generated@@532))
 :pattern ( ($generated@@74 $generated@@530 ($generated@@135 $generated@@531 $generated@@533) $generated@@532))
))))) ($generated@@238 ($generated@@143 $generated@@530) $generated@@531 $generated@@532))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@530) $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@136) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@536) (and ($generated@@134 $generated@@534) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@64) ($generated@@74 $generated@@534 ($generated@@135 $generated@@537 $generated@@535) $generated@@536))
 :pattern ( ($generated@@74 $generated@@534 ($generated@@135 $generated@@537 $generated@@535) $generated@@536))
))))) ($generated@@238 ($generated@@144 $generated@@534) $generated@@535 $generated@@536))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@534) $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@538) ($generated@@233 $generated@@539)) ($generated@@233 ($generated@@211 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@538) ($generated@@233 $generated@@539)))
)))
(assert (forall (($generated@@540 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@540))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@540))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@540))))
)))
(assert (forall (($generated@@541 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@541)) ($generated@@233 ($generated@@258 $generated@@541)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@253 (type $generated@@542))))
 (=> (and (= (type $generated@@542) ($generated@@252 $generated@@543)) (= ($generated@@251 $generated@@542) 0)) (= $generated@@542 ($generated@@250 $generated@@543))))
 :pattern ( ($generated@@251 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@545)))
 (=> (and (and (= (type $generated@@544) ($generated@@76 $generated@@547 $generated@@2)) (= (type $generated@@546) $generated@@2)) (<= 0 ($generated $generated@@546))) (= ($generated@@263 ($generated@@82 $generated@@544 $generated@@545 $generated@@546)) (+ (- ($generated@@263 $generated@@544) ($generated ($generated@@81 $generated@@544 $generated@@545))) ($generated $generated@@546)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@544 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@549) $generated@@2)) ($generated@@74 $generated@@549 $generated@@46 $generated@@548))
 :pattern ( ($generated@@74 $generated@@549 $generated@@46 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@551) $generated@@3)) ($generated@@74 $generated@@551 $generated@@47 $generated@@550))
 :pattern ( ($generated@@74 $generated@@551 $generated@@47 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@553) $generated@@4)) ($generated@@74 $generated@@553 $generated@@44 $generated@@552))
 :pattern ( ($generated@@74 $generated@@553 $generated@@44 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@555) $generated@@412)) ($generated@@74 $generated@@555 $generated@@45 $generated@@554))
 :pattern ( ($generated@@74 $generated@@555 $generated@@45 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@145)) ($generated@@74 $generated@@557 $generated@@48 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@48 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@252 $generated@@145)) (= (type $generated@@559) $generated@@64)) (= ($generated@@132 $generated@@558 ($generated@@454 $generated@@559)) (forall (($generated@@560 Int) ) (!  (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@251 $generated@@558))) ($generated@@212 ($generated@@455 $generated@@558 $generated@@560) $generated@@559))
 :pattern ( ($generated@@455 $generated@@558 $generated@@560))
))))
 :pattern ( ($generated@@132 $generated@@558 ($generated@@454 $generated@@559)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 Int) ) (!  (=> (= (type $generated@@562) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@563) (< $generated@@563 ($generated@@251 $generated@@562))) (< ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@562 $generated@@563))) ($generated@@561 $generated@@562))))
 :pattern ( ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@562 $generated@@563))))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@64)) ($generated@@132 $generated@@564 ($generated@@372 $generated@@565 $generated@@566))) (and (and ($generated@@132 ($generated@@269 $generated@@564) ($generated@@221 $generated@@565)) ($generated@@132 ($generated@@312 $generated@@564) ($generated@@221 $generated@@566))) ($generated@@132 ($generated@@343 $generated@@564) ($generated@@221 ($generated@@135 $generated@@565 $generated@@566)))))
 :pattern ( ($generated@@132 $generated@@564 ($generated@@372 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) $generated@@64)) ($generated@@132 $generated@@567 ($generated@@380 $generated@@568 $generated@@569))) (and (and ($generated@@132 ($generated@@287 $generated@@567) ($generated@@226 $generated@@568)) ($generated@@132 ($generated@@323 $generated@@567) ($generated@@226 $generated@@569))) ($generated@@132 ($generated@@354 $generated@@567) ($generated@@226 ($generated@@135 $generated@@568 $generated@@569)))))
 :pattern ( ($generated@@132 $generated@@567 ($generated@@380 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@2) ($generated@@132 $generated@@570 $generated@@46))
 :pattern ( ($generated@@132 $generated@@570 $generated@@46))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@3) ($generated@@132 $generated@@571 $generated@@47))
 :pattern ( ($generated@@132 $generated@@571 $generated@@47))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@4) ($generated@@132 $generated@@572 $generated@@44))
 :pattern ( ($generated@@132 $generated@@572 $generated@@44))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@412) ($generated@@132 $generated@@573 $generated@@45))
 :pattern ( ($generated@@132 $generated@@573 $generated@@45))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@145) ($generated@@132 $generated@@574 $generated@@48))
 :pattern ( ($generated@@132 $generated@@574 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@575 () Int)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@577 () T@U)
(declare-fun $generated@@578 () T@U)
(declare-fun $generated@@579 () T@U)
(declare-fun $generated@@580 (T@U) Bool)
(declare-fun $generated@@581 () Int)
(assert  (and (and (and (= (type $generated@@576) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@577) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@578) $generated@@77)) (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@582 true))
(let (($generated@@583  (=> (and (=> (and (<= ($generated@@231 0) $generated@@575) (< $generated@@575 100)) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@576) ($generated@@258 ($generated@@8 $generated@@575)))) (= ($generated ($generated@@344 $generated@@2 ($generated@@81 ($generated@@355 $generated@@576) ($generated@@258 ($generated@@8 $generated@@575))))) ($generated@@513 $generated@@575 $generated@@575)))) (= (ControlFlow 0 4) 1)) $generated@@582)))
(let (($generated@@584  (=> (<= ($generated@@231 0) $generated@@575) (=> (and (< $generated@@575 100) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@576) ($generated@@258 ($generated@@8 $generated@@575))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@576) ($generated@@258 ($generated@@8 $generated@@575))))) (=> ($generated@@0 ($generated@@81 ($generated@@287 $generated@@576) ($generated@@258 ($generated@@8 $generated@@575)))) (=> (and (= ($generated ($generated@@344 $generated@@2 ($generated@@81 ($generated@@355 $generated@@576) ($generated@@258 ($generated@@8 $generated@@575))))) ($generated@@513 $generated@@575 $generated@@575)) (= (ControlFlow 0 2) 1)) $generated@@582)))))))
(let (($generated@@585  (=> (= $generated@@577 ($generated@@156 $generated@@578 $generated@@579 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@584) (=> (= (ControlFlow 0 5) 4) $generated@@583)))))
(let (($generated@@586  (=> (and ($generated@@237 $generated@@579) ($generated@@580 $generated@@579)) (=> (and (and ($generated@@132 $generated@@576 ($generated@@380 $generated@@46 $generated@@46)) ($generated@@74 $generated@@576 ($generated@@380 $generated@@46 $generated@@46) $generated@@579)) (and (= 0 $generated@@581) (= (ControlFlow 0 6) 5))) $generated@@585))))
$generated@@586))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@T) T@U)
(declare-fun $generated@@412 () T@T)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@U Int) T@U)
(declare-fun $generated@@464 (T@U) Int)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (Int Int) Int)
(declare-fun $generated@@561 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@0 ($generated@@81 $generated@@333 $generated@@336))) ($generated@@238 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@342) $generated@@341)) 0))
 :pattern ( (let (($generated@@342 (type $generated@@341)))
($generated@@81 ($generated@@264 $generated@@342) $generated@@341)))
)))
(assert  (and (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@346)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@343 $generated@@346))
)) (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@344 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@344 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@273 (type $generated@@349))))
(let (($generated@@351 ($generated@@272 (type $generated@@349))))
(= (type ($generated@@345 $generated@@349)) ($generated@@76 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@345 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@353) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353)))) (= ($generated@@81 ($generated@@345 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@353))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@291 (type $generated@@357))))
(let (($generated@@359 ($generated@@290 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@355 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@272 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@271 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@362) $generated@@366))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@290 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@289 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@64)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))) (and ($generated@@238 ($generated@@81 ($generated@@345 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@238 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))) (and ($generated@@238 ($generated@@81 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@238 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@T) ) (! (= (type ($generated@@388 $generated@@389)) ($generated@@76 $generated@@389 $generated@@4))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@291 (type $generated@@390))))
(let (($generated@@392 ($generated@@290 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@289 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@288 $generated@@392 $generated@@391)) (= ($generated@@287 $generated@@390) ($generated@@388 $generated@@392))))))
 :pattern ( ($generated@@287 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@291 (type $generated@@393))))
(let (($generated@@395 ($generated@@290 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@289 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@288 $generated@@395 $generated@@394)) (= ($generated@@323 $generated@@393) ($generated@@388 $generated@@394))))))
 :pattern ( ($generated@@323 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@291 (type $generated@@396))))
(let (($generated@@398 ($generated@@290 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@289 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@288 $generated@@398 $generated@@397)) (= ($generated@@354 $generated@@396) ($generated@@388 $generated@@145))))))
 :pattern ( ($generated@@354 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@273 (type $generated@@399))))
(let (($generated@@401 ($generated@@272 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@271 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@270 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (and (and (= (type $generated@@402) $generated@@145) (= (type $generated@@403) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@399) ($generated@@258 ($generated@@211 $generated@@402 $generated@@403)))))
 :no-pattern (type $generated@@402)
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@343 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (and (and (= (type $generated@@407) $generated@@145) (= (type $generated@@408) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@404) ($generated@@258 ($generated@@211 $generated@@407 $generated@@408)))))
 :no-pattern (type $generated@@407)
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@354 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@46)) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@344 $generated@@2 $generated@@409) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@46))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@212 $generated@@410 $generated@@47)) (and (= ($generated@@258 ($generated@@344 $generated@@3 $generated@@410)) $generated@@410) ($generated@@132 ($generated@@344 $generated@@3 $generated@@410) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@410 $generated@@47))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@44)) (and (= ($generated@@258 ($generated@@344 $generated@@4 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@344 $generated@@4 $generated@@411) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@412) 20))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@45)) (and (= ($generated@@258 ($generated@@344 $generated@@412 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@344 $generated@@412 $generated@@413) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@45))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@414) $generated@@415) ($generated@@132 $generated@@414 $generated@@415)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (<= 0 ($generated@@263 $generated@@416))))
 :pattern ( ($generated@@263 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@253 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@252 $generated@@419)) (<= 0 ($generated@@251 $generated@@418))))
 :pattern ( ($generated@@251 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@64) (= (type $generated@@423) $generated@@64)) (= ($generated@@420 ($generated@@372 $generated@@422 $generated@@423)) $generated@@422))
 :pattern ( ($generated@@372 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@424 ($generated@@372 $generated@@426 $generated@@427)) $generated@@427))
 :pattern ( ($generated@@372 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@72 ($generated@@372 $generated@@428 $generated@@429)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@380 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@380 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@380 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@380 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@438 $generated@@439)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) (= (type $generated@@441) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@440 $generated@@441)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@135 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@135 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@135 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@135 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) (= (type $generated@@453) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@211 $generated@@452 $generated@@453))
)))
(assert  (and (forall (($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@456))
)) (forall (($generated@@457 T@U) ($generated@@458 Int) ) (! (let (($generated@@459 ($generated@@253 (type $generated@@457))))
(= (type ($generated@@455 $generated@@457 $generated@@458)) $generated@@459))
 :pattern ( ($generated@@455 $generated@@457 $generated@@458))
))))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@252 $generated@@145)) (= (type $generated@@461) $generated@@64)) (= (type $generated@@462) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462) (forall (($generated@@463 Int) ) (!  (=> (and (<= 0 $generated@@463) (< $generated@@463 ($generated@@251 $generated@@460))) ($generated@@238 ($generated@@455 $generated@@460 $generated@@463) $generated@@461 $generated@@462))
 :pattern ( ($generated@@455 $generated@@460 $generated@@463))
))))
 :pattern ( ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@465 Int) ) (! (= ($generated@@464 ($generated@@75 $generated@@465)) $generated@@465)
 :pattern ( ($generated@@75 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@64) (= ($generated@@466 ($generated@@221 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@221 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@469)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@470 ($generated@@226 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@226 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@473)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@150 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@150 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@477)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@454 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@454 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@454 $generated@@481)) $generated@@57))
 :pattern ( ($generated@@454 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
(= ($generated@@344 $generated@@483 ($generated@@258 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@258 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@485) $generated@@64)) (= (type $generated@@486) $generated@@64)) (= ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))) (and ($generated@@212 ($generated@@81 ($generated@@345 $generated@@484) $generated@@487) $generated@@486) ($generated@@212 $generated@@487 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@484) $generated@@487))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))
))))
 :pattern ( ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) $generated@@64)) (= ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@488) $generated@@491) $generated@@490) ($generated@@212 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@488) $generated@@491))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@492 $generated@@494) ($generated@@493 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@145)) (< ($generated@@492 $generated@@497) ($generated@@493 ($generated@@211 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@211 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@145) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500))) (and (= ($generated@@258 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498)) $generated@@498) ($generated@@132 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498) ($generated@@372 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503))) (and (= ($generated@@258 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501)) $generated@@501) ($generated@@132 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501) ($generated@@380 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@145)) ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505))) (and (= ($generated@@258 ($generated@@344 $generated@@136 $generated@@506)) $generated@@506) ($generated@@132 ($generated@@344 $generated@@136 $generated@@506) ($generated@@135 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
 (not ($generated@@0 ($generated@@81 ($generated@@388 $generated@@508) $generated@@507))))
 :pattern ( (let (($generated@@508 (type $generated@@507)))
($generated@@81 ($generated@@388 $generated@@508) $generated@@507)))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@511 $generated@@512)) $generated@@62) (= ($generated@@509 ($generated@@135 $generated@@511 $generated@@512)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 Int) ($generated@@515 Int) ) (! (= ($generated@@513 $generated@@514 $generated@@515) (* $generated@@514 $generated@@515))
 :pattern ( ($generated@@513 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@136) (= ($generated@@492 ($generated@@258 $generated@@516)) ($generated@@493 $generated@@516)))
 :pattern ( ($generated@@492 ($generated@@258 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) ($generated@@212 $generated@@517 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@517)) $generated@@517) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@75 0)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@64)) ($generated@@212 $generated@@518 ($generated@@221 $generated@@519))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@518)) $generated@@518) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@518) ($generated@@221 $generated@@519))))
 :pattern ( ($generated@@212 $generated@@518 ($generated@@221 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@64)) ($generated@@212 $generated@@520 ($generated@@226 $generated@@521))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@520)) $generated@@520) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@520) ($generated@@226 $generated@@521))))
 :pattern ( ($generated@@212 $generated@@520 ($generated@@226 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) ($generated@@212 $generated@@522 ($generated@@150 $generated@@523))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@522) ($generated@@150 $generated@@523))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@150 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) ($generated@@212 $generated@@524 ($generated@@454 $generated@@525))) (and (= ($generated@@258 ($generated@@344 ($generated@@252 $generated@@145) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@344 ($generated@@252 $generated@@145) $generated@@524) ($generated@@454 $generated@@525))))
 :pattern ( ($generated@@212 $generated@@524 ($generated@@454 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@526 ($generated@@150 $generated@@527) $generated@@528) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@526 $generated@@529)))) ($generated@@238 $generated@@529 $generated@@527 $generated@@528))
 :pattern ( ($generated@@81 $generated@@526 $generated@@529))
))))
 :pattern ( ($generated@@74 $generated@@526 ($generated@@150 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@136) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@532) (and ($generated@@134 $generated@@530) (exists (($generated@@533 T@U) ) (!  (and (= (type $generated@@533) $generated@@64) ($generated@@74 $generated@@530 ($generated@@135 $generated@@531 $generated@@533) $generated@@532))
 :pattern ( ($generated@@74 $generated@@530 ($generated@@135 $generated@@531 $generated@@533) $generated@@532))
))))) ($generated@@238 ($generated@@143 $generated@@530) $generated@@531 $generated@@532))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@530) $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@136) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@536) (and ($generated@@134 $generated@@534) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@64) ($generated@@74 $generated@@534 ($generated@@135 $generated@@537 $generated@@535) $generated@@536))
 :pattern ( ($generated@@74 $generated@@534 ($generated@@135 $generated@@537 $generated@@535) $generated@@536))
))))) ($generated@@238 ($generated@@144 $generated@@534) $generated@@535 $generated@@536))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@534) $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@538) ($generated@@233 $generated@@539)) ($generated@@233 ($generated@@211 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@538) ($generated@@233 $generated@@539)))
)))
(assert (forall (($generated@@540 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@540))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@540))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@540))))
)))
(assert (forall (($generated@@541 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@541)) ($generated@@233 ($generated@@258 $generated@@541)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@253 (type $generated@@542))))
 (=> (and (= (type $generated@@542) ($generated@@252 $generated@@543)) (= ($generated@@251 $generated@@542) 0)) (= $generated@@542 ($generated@@250 $generated@@543))))
 :pattern ( ($generated@@251 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@545)))
 (=> (and (and (= (type $generated@@544) ($generated@@76 $generated@@547 $generated@@2)) (= (type $generated@@546) $generated@@2)) (<= 0 ($generated $generated@@546))) (= ($generated@@263 ($generated@@82 $generated@@544 $generated@@545 $generated@@546)) (+ (- ($generated@@263 $generated@@544) ($generated ($generated@@81 $generated@@544 $generated@@545))) ($generated $generated@@546)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@544 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@549) $generated@@2)) ($generated@@74 $generated@@549 $generated@@46 $generated@@548))
 :pattern ( ($generated@@74 $generated@@549 $generated@@46 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@551) $generated@@3)) ($generated@@74 $generated@@551 $generated@@47 $generated@@550))
 :pattern ( ($generated@@74 $generated@@551 $generated@@47 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@553) $generated@@4)) ($generated@@74 $generated@@553 $generated@@44 $generated@@552))
 :pattern ( ($generated@@74 $generated@@553 $generated@@44 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@555) $generated@@412)) ($generated@@74 $generated@@555 $generated@@45 $generated@@554))
 :pattern ( ($generated@@74 $generated@@555 $generated@@45 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@145)) ($generated@@74 $generated@@557 $generated@@48 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@48 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@252 $generated@@145)) (= (type $generated@@559) $generated@@64)) (= ($generated@@132 $generated@@558 ($generated@@454 $generated@@559)) (forall (($generated@@560 Int) ) (!  (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@251 $generated@@558))) ($generated@@212 ($generated@@455 $generated@@558 $generated@@560) $generated@@559))
 :pattern ( ($generated@@455 $generated@@558 $generated@@560))
))))
 :pattern ( ($generated@@132 $generated@@558 ($generated@@454 $generated@@559)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 Int) ) (!  (=> (= (type $generated@@562) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@563) (< $generated@@563 ($generated@@251 $generated@@562))) (< ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@562 $generated@@563))) ($generated@@561 $generated@@562))))
 :pattern ( ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@562 $generated@@563))))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@64)) ($generated@@132 $generated@@564 ($generated@@372 $generated@@565 $generated@@566))) (and (and ($generated@@132 ($generated@@269 $generated@@564) ($generated@@221 $generated@@565)) ($generated@@132 ($generated@@312 $generated@@564) ($generated@@221 $generated@@566))) ($generated@@132 ($generated@@343 $generated@@564) ($generated@@221 ($generated@@135 $generated@@565 $generated@@566)))))
 :pattern ( ($generated@@132 $generated@@564 ($generated@@372 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) $generated@@64)) ($generated@@132 $generated@@567 ($generated@@380 $generated@@568 $generated@@569))) (and (and ($generated@@132 ($generated@@287 $generated@@567) ($generated@@226 $generated@@568)) ($generated@@132 ($generated@@323 $generated@@567) ($generated@@226 $generated@@569))) ($generated@@132 ($generated@@354 $generated@@567) ($generated@@226 ($generated@@135 $generated@@568 $generated@@569)))))
 :pattern ( ($generated@@132 $generated@@567 ($generated@@380 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@2) ($generated@@132 $generated@@570 $generated@@46))
 :pattern ( ($generated@@132 $generated@@570 $generated@@46))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@3) ($generated@@132 $generated@@571 $generated@@47))
 :pattern ( ($generated@@132 $generated@@571 $generated@@47))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@4) ($generated@@132 $generated@@572 $generated@@44))
 :pattern ( ($generated@@132 $generated@@572 $generated@@44))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@412) ($generated@@132 $generated@@573 $generated@@45))
 :pattern ( ($generated@@132 $generated@@573 $generated@@45))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@145) ($generated@@132 $generated@@574 $generated@@48))
 :pattern ( ($generated@@132 $generated@@574 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@577 () T@U)
(declare-fun $generated@@578 () T@U)
(declare-fun $generated@@579 (T@U) Bool)
(declare-fun $generated@@580 () Int)
(assert  (and (and (and (= (type $generated@@575) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@576) $generated@@77)) (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@578) ($generated@@289 $generated@@145 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@581  (=> (= $generated@@575 ($generated@@156 $generated@@576 $generated@@577 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@578) ($generated@@258 ($generated@@8 ($generated@@231 20)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated ($generated@@344 $generated@@2 ($generated@@81 ($generated@@355 $generated@@578) ($generated@@258 ($generated@@8 ($generated@@231 20)))))) ($generated@@231 400)))))))
(let (($generated@@582  (=> (and ($generated@@237 $generated@@577) ($generated@@579 $generated@@577)) (=> (and (and (and ($generated@@132 $generated@@578 ($generated@@380 $generated@@46 $generated@@46)) ($generated@@74 $generated@@578 ($generated@@380 $generated@@46 $generated@@46) $generated@@577)) (= 0 $generated@@580)) (and (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@2) (=> (and (<= ($generated@@231 0) ($generated $generated@@583)) (< ($generated $generated@@583) 100)) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@578) ($generated@@258 $generated@@583))) (= ($generated ($generated@@344 $generated@@2 ($generated@@81 ($generated@@355 $generated@@578) ($generated@@258 $generated@@583)))) ($generated@@513 ($generated $generated@@583) ($generated $generated@@583))))))
 :pattern ( ($generated@@344 $generated@@2 ($generated@@81 ($generated@@355 $generated@@578) ($generated@@258 $generated@@583))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@578) ($generated@@258 $generated@@583)))
)) (= (ControlFlow 0 4) 2))) $generated@@581))))
$generated@@582)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@196 (T@U T@U) Bool)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 (T@U T@U) T@U)
(declare-fun $generated@@200 () T@T)
(declare-fun $generated@@206 (T@U T@U) Bool)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@219 (T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@221 (T@T T@T) T@T)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@275 (T@U T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@295 (Int) Int)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Bool)
(declare-fun $generated@@302 (T@U T@U T@U) Bool)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@311 (T@U Int) T@U)
(declare-fun $generated@@312 (T@T T@U) T@U)
(declare-fun $generated@@323 (T@T) T@U)
(declare-fun $generated@@324 (T@U) Int)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@336 (T@U) Int)
(declare-fun $generated@@337 (T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@497 (T@U Int) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@610 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@137 $generated@@138)) 14)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@134 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@136 ($generated@@134 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@134 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@132 $generated@@143)) ($generated@@76 $generated@@144 $generated@@4)))
 :pattern ( ($generated@@132 $generated@@143))
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (let (($generated@@148 ($generated@@80 (type $generated@@146))))
(let (($generated@@149 ($generated@@79 (type $generated@@145))))
(= (type ($generated@@133 $generated@@145 $generated@@146 $generated@@147)) ($generated@@134 $generated@@149 $generated@@148))))
 :pattern ( ($generated@@133 $generated@@145 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@80 (type $generated@@151))))
(let (($generated@@154 ($generated@@79 (type $generated@@150))))
 (=> (and (and (= (type $generated@@150) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@151) ($generated@@76 $generated@@154 $generated@@153))) (= (type $generated@@152) $generated@@64)) (= ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)) $generated@@150))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)))
)))
(assert (forall (($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@136 (type $generated@@156))))
(let (($generated@@158 ($generated@@135 (type $generated@@156))))
(= (type ($generated@@155 $generated@@156)) ($generated@@76 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@80 (type $generated@@160))))
(let (($generated@@163 ($generated@@79 (type $generated@@159))))
 (=> (and (and (= (type $generated@@159) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@160) ($generated@@76 $generated@@163 $generated@@162))) (= (type $generated@@161) $generated@@64)) (= ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)) $generated@@160))))
 :pattern ( ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)))
)))
(assert  (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@169 $generated@@170)) 15)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@166 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@166 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@164 $generated@@175)) ($generated@@76 $generated@@176 $generated@@4)))
 :pattern ( ($generated@@164 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@80 (type $generated@@178))))
(let (($generated@@181 ($generated@@79 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) ($generated@@166 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@80 (type $generated@@183))))
(let (($generated@@186 ($generated@@79 (type $generated@@182))))
 (=> (and (and (= (type $generated@@182) ($generated@@76 $generated@@186 $generated@@4)) (= (type $generated@@183) ($generated@@76 $generated@@186 $generated@@185))) (= (type $generated@@184) $generated@@64)) (= ($generated@@164 ($generated@@165 $generated@@182 $generated@@183 $generated@@184)) $generated@@182))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@182 $generated@@183 $generated@@184)))
)))
(assert (forall (($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@168 (type $generated@@188))))
(let (($generated@@190 ($generated@@167 (type $generated@@188))))
(= (type ($generated@@187 $generated@@188)) ($generated@@76 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@80 (type $generated@@192))))
(let (($generated@@195 ($generated@@79 (type $generated@@191))))
 (=> (and (and (= (type $generated@@191) ($generated@@76 $generated@@195 $generated@@4)) (= (type $generated@@192) ($generated@@76 $generated@@195 $generated@@194))) (= (type $generated@@193) $generated@@64)) (= ($generated@@187 ($generated@@165 $generated@@191 $generated@@192 $generated@@193)) $generated@@192))))
 :pattern ( ($generated@@187 ($generated@@165 $generated@@191 $generated@@192 $generated@@193)))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> (= (type $generated@@197) $generated@@2) ($generated@@196 $generated@@197 ($generated@@75 0)))
 :pattern ( ($generated@@196 $generated@@197 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@200) 16) (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! (= (type ($generated@@199 $generated@@201 $generated@@202)) $generated@@64)
 :pattern ( ($generated@@199 $generated@@201 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (and (= (type $generated@@203) $generated@@64) (= (type $generated@@204) $generated@@64)) (= (type $generated@@205) $generated@@200)) ($generated@@196 $generated@@205 ($generated@@199 $generated@@203 $generated@@204))) ($generated@@198 $generated@@205))
 :pattern ( ($generated@@198 $generated@@205) ($generated@@196 $generated@@205 ($generated@@199 $generated@@203 $generated@@204)))
)))
(assert  (and (and (= ($generated@@1 $generated@@209) 17) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@207 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@207 $generated@@210))
))) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@208 $generated@@211)) $generated@@209)
 :pattern ( ($generated@@208 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (= (type $generated@@212) $generated@@200) (= (type $generated@@213) $generated@@200)) true) (= ($generated@@206 $generated@@212 $generated@@213)  (and (= ($generated@@207 $generated@@212) ($generated@@207 $generated@@213)) (= ($generated@@208 $generated@@212) ($generated@@208 $generated@@213)))))
 :pattern ( ($generated@@206 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 T@U) ) (! (= (type ($generated@@214 $generated@@216)) $generated@@64)
 :pattern ( ($generated@@214 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (= (type $generated@@217) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@218) $generated@@64)) ($generated@@196 $generated@@217 ($generated@@214 $generated@@218))) ($generated@@215 $generated@@217))
 :pattern ( ($generated@@196 $generated@@217 ($generated@@214 $generated@@218)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@1 ($generated@@221 $generated@@225 $generated@@226)) 18)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@221 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@223 ($generated@@221 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@221 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@223 (type $generated@@231))))
(= (type ($generated@@219 $generated@@231 $generated@@232 $generated@@233)) $generated@@234))
 :pattern ( ($generated@@219 $generated@@231 $generated@@232 $generated@@233))
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(let (($generated@@240 (type $generated@@236)))
(= (type ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@221 $generated@@240 $generated@@239))))
 :pattern ( ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@223 (type $generated@@241))))
 (=> (= (type $generated@@244) $generated@@245) (= ($generated@@219 ($generated@@224 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@242 $generated@@243) $generated@@244)))
 :weight 0
))) (and (and (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (or (= $generated@@248 $generated@@250) (= ($generated@@219 ($generated@@224 $generated@@247 $generated@@248 $generated@@249 $generated@@246) $generated@@250 $generated@@251) ($generated@@219 $generated@@247 $generated@@250 $generated@@251)))
 :weight 0
)) (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (or (= $generated@@255 $generated@@257) (= ($generated@@219 ($generated@@224 $generated@@253 $generated@@254 $generated@@255 $generated@@252) $generated@@256 $generated@@257) ($generated@@219 $generated@@253 $generated@@256 $generated@@257)))
 :weight 0
))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (or true (= ($generated@@219 ($generated@@224 $generated@@259 $generated@@260 $generated@@261 $generated@@258) $generated@@262 $generated@@263) ($generated@@219 $generated@@259 $generated@@262 $generated@@263)))
 :weight 0
)))) (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 Bool) ) (! (= (type ($generated@@220 $generated@@264 $generated@@265 $generated@@266 $generated@@267)) ($generated@@221 $generated@@77 $generated@@4))
 :pattern ( ($generated@@220 $generated@@264 $generated@@265 $generated@@266 $generated@@267))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 Bool) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@67 (type $generated@@273))))
 (=> (and (and (and (and (= (type $generated@@268) $generated@@77) (= (type $generated@@269) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@270) ($generated@@66 $generated@@4))) (= (type $generated@@272) $generated@@77)) (= (type $generated@@273) ($generated@@66 $generated@@274))) (= ($generated@@0 ($generated@@219 ($generated@@220 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@272 $generated@@273))  (=> (and (not (= $generated@@272 $generated@@268)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@269 $generated@@272) $generated@@270))) $generated@@271))))
 :pattern ( ($generated@@219 ($generated@@220 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (! (= (type ($generated@@275 $generated@@277 $generated@@278)) $generated@@200)
 :pattern ( ($generated@@275 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) $generated@@64)) (= (type $generated@@281) $generated@@209)) (= (type $generated@@282) $generated@@209)) (= ($generated@@196 ($generated@@275 $generated@@281 $generated@@282) ($generated@@199 $generated@@279 $generated@@280))  (and ($generated@@276 $generated@@281 $generated@@279) ($generated@@276 $generated@@282 $generated@@280))))
 :pattern ( ($generated@@196 ($generated@@275 $generated@@281 $generated@@282) ($generated@@199 $generated@@279 $generated@@280)))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@200) (= (type $generated@@284) $generated@@200)) (= ($generated@@206 $generated@@283 $generated@@284) (= $generated@@283 $generated@@284)))
 :pattern ( ($generated@@206 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@64)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@288) $generated@@64)) (= ($generated@@196 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@209) ($generated@@0 ($generated@@81 $generated@@287 $generated@@289))) ($generated@@276 $generated@@289 $generated@@288))
 :pattern ( ($generated@@81 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@196 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@64)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@293) $generated@@64)) (= ($generated@@196 $generated@@292 ($generated@@290 $generated@@293)) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@209) ($generated@@0 ($generated@@81 $generated@@292 $generated@@294))) ($generated@@276 $generated@@294 $generated@@293))
 :pattern ( ($generated@@81 $generated@@292 $generated@@294))
))))
 :pattern ( ($generated@@196 $generated@@292 ($generated@@290 $generated@@293)))
)))
(assert (forall (($generated@@296 Int) ) (! (= ($generated@@295 $generated@@296) $generated@@296)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 (type $generated@@298)))
(= (type ($generated@@297 $generated@@298)) $generated@@299))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= ($generated@@297 $generated@@300) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) $generated@@64) (= (type $generated@@304) $generated@@64)) (= (type $generated@@305) $generated@@209)) (= (type $generated@@306) $generated@@209)) (= (type $generated@@307) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@301 $generated@@307)) (= ($generated@@74 ($generated@@275 $generated@@305 $generated@@306) ($generated@@199 $generated@@303 $generated@@304) $generated@@307)  (and ($generated@@302 $generated@@305 $generated@@303 $generated@@307) ($generated@@302 $generated@@306 $generated@@304 $generated@@307))))
 :pattern ( ($generated@@74 ($generated@@275 $generated@@305 $generated@@306) ($generated@@199 $generated@@303 $generated@@304) $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@68)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@200) (= ($generated@@198 $generated@@310) (= ($generated@@308 $generated@@310) $generated@@61)))
 :pattern ( ($generated@@198 $generated@@310))
)))
(assert  (and (forall (($generated@@313 T@U) ($generated@@314 Int) ) (! (= (type ($generated@@311 $generated@@313 $generated@@314)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@311 $generated@@313 $generated@@314))
)) (forall (($generated@@315 T@T) ($generated@@316 T@U) ) (! (= (type ($generated@@312 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@312 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 Int) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@64) (= (type $generated@@319) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@311 $generated@@317 $generated@@318) $generated@@319))  (and ($generated@@276 $generated@@319 $generated@@317) (= ($generated ($generated@@312 $generated@@2 $generated@@319)) $generated@@318))))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@317 $generated@@318) $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@200) ($generated@@198 $generated@@320)) (exists (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (and (and (= (type $generated@@321) $generated@@209) (= (type $generated@@322) $generated@@209)) (= $generated@@320 ($generated@@275 $generated@@321 $generated@@322)))
 :no-pattern (type $generated@@321)
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
)))
 :pattern ( ($generated@@198 $generated@@320))
)))
(assert  (and (and (forall (($generated@@327 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@327)) 19)) (forall (($generated@@328 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@325 $generated@@328))
))) (forall (($generated@@329 T@T) ) (! (= (type ($generated@@323 $generated@@329)) ($generated@@325 $generated@@329))
 :pattern ( ($generated@@323 $generated@@329))
))))
(assert (forall (($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@330)) 0)
 :pattern ( ($generated@@323 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@209)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@64) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@302 ($generated@@331 $generated@@333) $generated@@334 $generated@@335) ($generated@@74 $generated@@333 $generated@@334 $generated@@335)))
 :pattern ( ($generated@@302 ($generated@@331 $generated@@333) $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@338 T@T) ) (! (= (type ($generated@@337 $generated@@338)) ($generated@@76 $generated@@338 $generated@@2))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@79 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@76 $generated@@340 $generated@@2)) (and (= (= ($generated@@336 $generated@@339) 0) (= $generated@@339 ($generated@@337 $generated@@340))) (=> (not (= ($generated@@336 $generated@@339) 0)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) (< 0 ($generated ($generated@@81 $generated@@339 $generated@@341))))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) ($generated@@134 $generated@@343 $generated@@344))
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@81 ($generated@@132 ($generated@@342 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@81 ($generated@@132 ($generated@@342 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@348 $generated@@349 $generated@@350)) ($generated@@166 $generated@@349 $generated@@350))
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@81 ($generated@@164 ($generated@@348 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@81 ($generated@@164 ($generated@@348 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@79 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@76 $generated@@355 $generated@@2)) (= ($generated@@215 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@81 $generated@@354 $generated@@356))) (<= ($generated ($generated@@81 $generated@@354 $generated@@356)) ($generated@@336 $generated@@354))))
 :pattern ( ($generated@@81 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@215 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@136 (type $generated@@357))))
(let (($generated@@359 ($generated@@135 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@134 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@342 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@132 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@136 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@76 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@136 (type $generated@@364))))
(let (($generated@@366 ($generated@@135 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@134 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@342 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@168 (type $generated@@368))))
(let (($generated@@370 ($generated@@167 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@166 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@348 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@164 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@168 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@76 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@168 (type $generated@@375))))
(let (($generated@@377 ($generated@@167 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@166 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@348 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@81 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@380) $generated@@64)) (= ($generated@@196 $generated@@379 ($generated@@214 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@209) (< 0 ($generated ($generated@@81 $generated@@379 $generated@@381)))) ($generated@@276 $generated@@381 $generated@@380))
 :pattern ( ($generated@@81 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@196 $generated@@379 ($generated@@214 $generated@@380)))
)))
(assert (forall (($generated@@383 T@U) ) (! (= (type ($generated@@382 $generated@@383)) ($generated@@76 $generated@@209 $generated@@209))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@209) (= (type $generated@@385) $generated@@209)) (= ($generated@@81 ($generated@@382 $generated@@384) $generated@@385) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@285 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@209) ($generated@@0 ($generated@@81 $generated@@386 $generated@@389))) ($generated@@302 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@81 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@285 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@290 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@209) ($generated@@0 ($generated@@81 $generated@@390 $generated@@393))) ($generated@@302 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@81 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@290 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@81 ($generated@@337 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@81 ($generated@@337 $generated@@395) $generated@@394)))
)))
(assert (forall (($generated@@397 T@U) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@399) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@396 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@398) ($generated@@207 ($generated@@312 $generated@@200 $generated@@399)))) (= ($generated@@81 ($generated@@155 $generated@@398) ($generated@@207 ($generated@@312 $generated@@200 $generated@@399))) ($generated@@208 ($generated@@312 $generated@@200 $generated@@399))))))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (= (type ($generated@@400 $generated@@401)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@403) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@400 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@81 ($generated@@164 $generated@@402) ($generated@@207 ($generated@@312 $generated@@200 $generated@@403)))) (= ($generated@@81 ($generated@@187 $generated@@402) ($generated@@207 ($generated@@312 $generated@@200 $generated@@403))) ($generated@@208 ($generated@@312 $generated@@200 $generated@@403))))))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@135 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@134 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@81 ($generated@@155 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@167 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@166 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@81 ($generated@@372 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@81 ($generated@@164 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@81 ($generated@@187 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@409) $generated@@413))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@64)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@417) $generated@@421))) (and ($generated@@302 ($generated@@81 ($generated@@155 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@302 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@417) $generated@@421))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@425) $generated@@429))) (and ($generated@@302 ($generated@@81 ($generated@@187 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@302 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@425) $generated@@429))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@76 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@168 (type $generated@@432))))
(let (($generated@@434 ($generated@@167 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@166 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@348 $generated@@434 $generated@@433)) (= ($generated@@164 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@164 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@168 (type $generated@@435))))
(let (($generated@@437 ($generated@@167 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@166 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@348 $generated@@437 $generated@@436)) (= ($generated@@372 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@372 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@168 (type $generated@@438))))
(let (($generated@@440 ($generated@@167 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@166 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@348 $generated@@440 $generated@@439)) (= ($generated@@400 $generated@@438) ($generated@@430 $generated@@209))))))
 :pattern ( ($generated@@400 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@136 (type $generated@@441))))
(let (($generated@@443 ($generated@@135 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@134 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@342 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@209) (= (type $generated@@445) $generated@@209)) ($generated@@0 ($generated@@81 ($generated@@396 $generated@@441) ($generated@@331 ($generated@@275 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@168 (type $generated@@446))))
(let (($generated@@448 ($generated@@167 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@166 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@348 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@209) (= (type $generated@@450) $generated@@209)) ($generated@@0 ($generated@@81 ($generated@@400 $generated@@446) ($generated@@331 ($generated@@275 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@400 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@209) ($generated@@276 $generated@@451 $generated@@46)) (and (= ($generated@@331 ($generated@@312 $generated@@2 $generated@@451)) $generated@@451) ($generated@@196 ($generated@@312 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@276 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@209) ($generated@@276 $generated@@452 $generated@@47)) (and (= ($generated@@331 ($generated@@312 $generated@@3 $generated@@452)) $generated@@452) ($generated@@196 ($generated@@312 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@276 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@209) ($generated@@276 $generated@@453 $generated@@44)) (and (= ($generated@@331 ($generated@@312 $generated@@4 $generated@@453)) $generated@@453) ($generated@@196 ($generated@@312 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@276 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@209) ($generated@@276 $generated@@455 $generated@@45)) (and (= ($generated@@331 ($generated@@312 $generated@@454 $generated@@455)) $generated@@455) ($generated@@196 ($generated@@312 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@276 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@64) (= ($generated@@276 ($generated@@331 $generated@@456) $generated@@457) ($generated@@196 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@276 ($generated@@331 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@79 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@76 $generated@@459 $generated@@2)) (<= 0 ($generated@@336 $generated@@458))))
 :pattern ( ($generated@@336 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@326 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@325 $generated@@461)) (<= 0 ($generated@@324 $generated@@460))))
 :pattern ( ($generated@@324 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@414 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@414 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@72 ($generated@@414 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@422 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@422 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@72 ($generated@@422 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@209) (= (type $generated@@483) $generated@@209)) (= ($generated@@308 ($generated@@275 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@275 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@199 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@199 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@199 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@199 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@209) (= (type $generated@@493) $generated@@209)) (= ($generated@@207 ($generated@@275 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@275 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@209) (= (type $generated@@495) $generated@@209)) (= ($generated@@208 ($generated@@275 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@275 $generated@@494 $generated@@495))
)))
(assert  (and (forall (($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@498))
)) (forall (($generated@@499 T@U) ($generated@@500 Int) ) (! (let (($generated@@501 ($generated@@326 (type $generated@@499))))
(= (type ($generated@@497 $generated@@499 $generated@@500)) $generated@@501))
 :pattern ( ($generated@@497 $generated@@499 $generated@@500))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@325 $generated@@209)) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@502 ($generated@@496 $generated@@503) $generated@@504) (forall (($generated@@505 Int) ) (!  (=> (and (<= 0 $generated@@505) (< $generated@@505 ($generated@@324 $generated@@502))) ($generated@@302 ($generated@@497 $generated@@502 $generated@@505) $generated@@503 $generated@@504))
 :pattern ( ($generated@@497 $generated@@502 $generated@@505))
))))
 :pattern ( ($generated@@74 $generated@@502 ($generated@@496 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@506 ($generated@@75 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@75 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@285 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@285 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@285 $generated@@511)) $generated@@54))
 :pattern ( ($generated@@285 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@512 ($generated@@290 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@290 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@72 ($generated@@290 $generated@@515)) $generated@@55))
 :pattern ( ($generated@@290 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@64)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@516 ($generated@@214 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@214 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@72 ($generated@@214 $generated@@519)) $generated@@56))
 :pattern ( ($generated@@214 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@64)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@520 ($generated@@496 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@496 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@64) (= ($generated@@72 ($generated@@496 $generated@@523)) $generated@@57))
 :pattern ( ($generated@@496 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(= ($generated@@312 $generated@@525 ($generated@@331 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@331 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) (= ($generated@@196 $generated@@526 ($generated@@414 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@526) $generated@@529))) (and ($generated@@276 ($generated@@81 ($generated@@155 $generated@@526) $generated@@529) $generated@@528) ($generated@@276 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@526) $generated@@529))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@196 $generated@@526 ($generated@@414 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@64)) (= ($generated@@196 $generated@@530 ($generated@@422 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@530) $generated@@533))) (and ($generated@@276 ($generated@@81 ($generated@@187 $generated@@530) $generated@@533) $generated@@532) ($generated@@276 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@530) $generated@@533))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@196 $generated@@530 ($generated@@422 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@209) (= (type $generated@@537) $generated@@209)) (< ($generated@@534 $generated@@536) ($generated@@535 ($generated@@275 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@275 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@209) (= (type $generated@@539) $generated@@209)) (< ($generated@@534 $generated@@539) ($generated@@535 ($generated@@275 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@275 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@209) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@64)) ($generated@@276 $generated@@540 ($generated@@414 $generated@@541 $generated@@542))) (and (= ($generated@@331 ($generated@@312 ($generated@@134 $generated@@209 $generated@@209) $generated@@540)) $generated@@540) ($generated@@196 ($generated@@312 ($generated@@134 $generated@@209 $generated@@209) $generated@@540) ($generated@@414 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@276 $generated@@540 ($generated@@414 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@209) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) $generated@@64)) ($generated@@276 $generated@@543 ($generated@@422 $generated@@544 $generated@@545))) (and (= ($generated@@331 ($generated@@312 ($generated@@166 $generated@@209 $generated@@209) $generated@@543)) $generated@@543) ($generated@@196 ($generated@@312 ($generated@@166 $generated@@209 $generated@@209) $generated@@543) ($generated@@422 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@276 $generated@@543 ($generated@@422 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) $generated@@209)) ($generated@@276 $generated@@548 ($generated@@199 $generated@@546 $generated@@547))) (and (= ($generated@@331 ($generated@@312 $generated@@200 $generated@@548)) $generated@@548) ($generated@@196 ($generated@@312 $generated@@200 $generated@@548) ($generated@@199 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@276 $generated@@548 ($generated@@199 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
 (not ($generated@@0 ($generated@@81 ($generated@@430 $generated@@550) $generated@@549))))
 :pattern ( (let (($generated@@550 (type $generated@@549)))
($generated@@81 ($generated@@430 $generated@@550) $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@551) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@552) ($generated@@76 $generated@@209 $generated@@209))) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) $generated@@64)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@209) ($generated@@0 ($generated@@81 $generated@@551 $generated@@555))) (and ($generated@@276 $generated@@555 $generated@@553) ($generated@@276 ($generated@@81 $generated@@552 $generated@@555) $generated@@554)))
 :no-pattern (type $generated@@555)
 :no-pattern ($generated $generated@@555)
 :no-pattern ($generated@@0 $generated@@555)
))) ($generated@@196 ($generated@@133 $generated@@551 $generated@@552 ($generated@@414 $generated@@553 $generated@@554)) ($generated@@414 $generated@@553 $generated@@554)))
 :pattern ( ($generated@@133 $generated@@551 $generated@@552 ($generated@@414 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@556) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@557) ($generated@@76 $generated@@209 $generated@@209))) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) $generated@@64)) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@209) ($generated@@0 ($generated@@81 $generated@@556 $generated@@560))) (and ($generated@@276 $generated@@560 $generated@@558) ($generated@@276 ($generated@@81 $generated@@557 $generated@@560) $generated@@559)))
 :no-pattern (type $generated@@560)
 :no-pattern ($generated $generated@@560)
 :no-pattern ($generated@@0 $generated@@560)
))) ($generated@@196 ($generated@@133 $generated@@556 $generated@@557 ($generated@@422 $generated@@558 $generated@@559)) ($generated@@422 $generated@@558 $generated@@559)))
 :pattern ( ($generated@@165 $generated@@556 $generated@@557 ($generated@@422 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@69)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@64) (= (type $generated@@564) $generated@@64)) (and (= ($generated@@72 ($generated@@199 $generated@@563 $generated@@564)) $generated@@62) (= ($generated@@561 ($generated@@199 $generated@@563 $generated@@564)) $generated@@63)))
 :pattern ( ($generated@@199 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@200) (= ($generated@@534 ($generated@@331 $generated@@565)) ($generated@@535 $generated@@565)))
 :pattern ( ($generated@@534 ($generated@@331 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@209) ($generated@@276 $generated@@566 ($generated@@75 0))) (and (= ($generated@@331 ($generated@@312 $generated@@2 $generated@@566)) $generated@@566) ($generated@@196 ($generated@@312 ($generated@@76 $generated@@209 $generated@@4) $generated@@566) ($generated@@75 0))))
 :pattern ( ($generated@@276 $generated@@566 ($generated@@75 0)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@209) (= (type $generated@@568) $generated@@64)) ($generated@@276 $generated@@567 ($generated@@285 $generated@@568))) (and (= ($generated@@331 ($generated@@312 ($generated@@76 $generated@@209 $generated@@4) $generated@@567)) $generated@@567) ($generated@@196 ($generated@@312 ($generated@@76 $generated@@209 $generated@@4) $generated@@567) ($generated@@285 $generated@@568))))
 :pattern ( ($generated@@276 $generated@@567 ($generated@@285 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@209) (= (type $generated@@570) $generated@@64)) ($generated@@276 $generated@@569 ($generated@@290 $generated@@570))) (and (= ($generated@@331 ($generated@@312 ($generated@@76 $generated@@209 $generated@@4) $generated@@569)) $generated@@569) ($generated@@196 ($generated@@312 ($generated@@76 $generated@@209 $generated@@4) $generated@@569) ($generated@@290 $generated@@570))))
 :pattern ( ($generated@@276 $generated@@569 ($generated@@290 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@209) (= (type $generated@@572) $generated@@64)) ($generated@@276 $generated@@571 ($generated@@214 $generated@@572))) (and (= ($generated@@331 ($generated@@312 ($generated@@76 $generated@@209 $generated@@2) $generated@@571)) $generated@@571) ($generated@@196 ($generated@@312 ($generated@@76 $generated@@209 $generated@@2) $generated@@571) ($generated@@214 $generated@@572))))
 :pattern ( ($generated@@276 $generated@@571 ($generated@@214 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@209) (= (type $generated@@574) $generated@@64)) ($generated@@276 $generated@@573 ($generated@@496 $generated@@574))) (and (= ($generated@@331 ($generated@@312 ($generated@@325 $generated@@209) $generated@@573)) $generated@@573) ($generated@@196 ($generated@@312 ($generated@@325 $generated@@209) $generated@@573) ($generated@@496 $generated@@574))))
 :pattern ( ($generated@@276 $generated@@573 ($generated@@496 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@575 ($generated@@214 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@209) (< 0 ($generated ($generated@@81 $generated@@575 $generated@@578)))) ($generated@@302 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@81 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@74 $generated@@575 ($generated@@214 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@200) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@301 $generated@@581) (and ($generated@@198 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@64) ($generated@@74 $generated@@579 ($generated@@199 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@74 $generated@@579 ($generated@@199 $generated@@580 $generated@@582) $generated@@581))
))))) ($generated@@302 ($generated@@207 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@302 ($generated@@207 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@200) (= (type $generated@@584) $generated@@64)) (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@301 $generated@@585) (and ($generated@@198 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@64) ($generated@@74 $generated@@583 ($generated@@199 $generated@@586 $generated@@584) $generated@@585))
 :pattern ( ($generated@@74 $generated@@583 ($generated@@199 $generated@@586 $generated@@584) $generated@@585))
))))) ($generated@@302 ($generated@@208 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@302 ($generated@@208 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@209) (= (type $generated@@588) $generated@@209)) (= ($generated@@275 ($generated@@297 $generated@@587) ($generated@@297 $generated@@588)) ($generated@@297 ($generated@@275 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@275 ($generated@@297 $generated@@587) ($generated@@297 $generated@@588)))
)))
(assert (forall (($generated@@589 Int) ) (! (= ($generated@@331 ($generated@@8 ($generated@@295 $generated@@589))) ($generated@@297 ($generated@@331 ($generated@@8 $generated@@589))))
 :pattern ( ($generated@@331 ($generated@@8 ($generated@@295 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ) (! (= ($generated@@331 ($generated@@297 $generated@@590)) ($generated@@297 ($generated@@331 $generated@@590)))
 :pattern ( ($generated@@331 ($generated@@297 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 ($generated@@326 (type $generated@@591))))
 (=> (and (= (type $generated@@591) ($generated@@325 $generated@@592)) (= ($generated@@324 $generated@@591) 0)) (= $generated@@591 ($generated@@323 $generated@@592))))
 :pattern ( ($generated@@324 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (! (let (($generated@@596 (type $generated@@594)))
 (=> (and (and (= (type $generated@@593) ($generated@@76 $generated@@596 $generated@@2)) (= (type $generated@@595) $generated@@2)) (<= 0 ($generated $generated@@595))) (= ($generated@@336 ($generated@@82 $generated@@593 $generated@@594 $generated@@595)) (+ (- ($generated@@336 $generated@@593) ($generated ($generated@@81 $generated@@593 $generated@@594))) ($generated $generated@@595)))))
 :pattern ( ($generated@@336 ($generated@@82 $generated@@593 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@598) $generated@@2)) ($generated@@74 $generated@@598 $generated@@46 $generated@@597))
 :pattern ( ($generated@@74 $generated@@598 $generated@@46 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@600) $generated@@3)) ($generated@@74 $generated@@600 $generated@@47 $generated@@599))
 :pattern ( ($generated@@74 $generated@@600 $generated@@47 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@602) $generated@@4)) ($generated@@74 $generated@@602 $generated@@44 $generated@@601))
 :pattern ( ($generated@@74 $generated@@602 $generated@@44 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@604) $generated@@454)) ($generated@@74 $generated@@604 $generated@@45 $generated@@603))
 :pattern ( ($generated@@74 $generated@@604 $generated@@45 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) $generated@@209)) ($generated@@74 $generated@@606 $generated@@48 $generated@@605))
 :pattern ( ($generated@@74 $generated@@606 $generated@@48 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@325 $generated@@209)) (= (type $generated@@608) $generated@@64)) (= ($generated@@196 $generated@@607 ($generated@@496 $generated@@608)) (forall (($generated@@609 Int) ) (!  (=> (and (<= 0 $generated@@609) (< $generated@@609 ($generated@@324 $generated@@607))) ($generated@@276 ($generated@@497 $generated@@607 $generated@@609) $generated@@608))
 :pattern ( ($generated@@497 $generated@@607 $generated@@609))
))))
 :pattern ( ($generated@@196 $generated@@607 ($generated@@496 $generated@@608)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 Int) ) (!  (=> (= (type $generated@@611) ($generated@@325 $generated@@209)) (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@324 $generated@@611))) (< ($generated@@535 ($generated@@312 $generated@@200 ($generated@@497 $generated@@611 $generated@@612))) ($generated@@610 $generated@@611))))
 :pattern ( ($generated@@535 ($generated@@312 $generated@@200 ($generated@@497 $generated@@611 $generated@@612))))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@614) $generated@@64)) (= (type $generated@@615) $generated@@64)) ($generated@@196 $generated@@613 ($generated@@414 $generated@@614 $generated@@615))) (and (and ($generated@@196 ($generated@@132 $generated@@613) ($generated@@285 $generated@@614)) ($generated@@196 ($generated@@361 $generated@@613) ($generated@@285 $generated@@615))) ($generated@@196 ($generated@@396 $generated@@613) ($generated@@285 ($generated@@199 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@196 $generated@@613 ($generated@@414 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@617) $generated@@64)) (= (type $generated@@618) $generated@@64)) ($generated@@196 $generated@@616 ($generated@@422 $generated@@617 $generated@@618))) (and (and ($generated@@196 ($generated@@164 $generated@@616) ($generated@@290 $generated@@617)) ($generated@@196 ($generated@@372 $generated@@616) ($generated@@290 $generated@@618))) ($generated@@196 ($generated@@400 $generated@@616) ($generated@@290 ($generated@@199 $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@196 $generated@@616 ($generated@@422 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@2) ($generated@@196 $generated@@619 $generated@@46))
 :pattern ( ($generated@@196 $generated@@619 $generated@@46))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@3) ($generated@@196 $generated@@620 $generated@@47))
 :pattern ( ($generated@@196 $generated@@620 $generated@@47))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@4) ($generated@@196 $generated@@621 $generated@@44))
 :pattern ( ($generated@@196 $generated@@621 $generated@@44))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@454) ($generated@@196 $generated@@622 $generated@@45))
 :pattern ( ($generated@@196 $generated@@622 $generated@@45))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@209) ($generated@@196 $generated@@623 $generated@@48))
 :pattern ( ($generated@@196 $generated@@623 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 (T@U) Bool)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () Int)
(assert  (and (and (and (and (= (type $generated@@624) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@626) ($generated@@221 $generated@@77 $generated@@4))) (= (type $generated@@627) $generated@@77)) (= (type $generated@@628) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@630) ($generated@@166 $generated@@209 $generated@@209))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@632 true))
(let (($generated@@633 true))
(let (($generated@@634  (=> (= $generated@@624 ($generated@@165 ($generated@@311 $generated@@46 ($generated@@295 3)) ($generated@@382 ($generated@@331 ($generated@@8 ($generated@@295 9)))) ($generated@@422 $generated@@46 $generated@@46))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@624) ($generated@@331 ($generated@@8 ($generated@@295 4)))))) (=> ($generated@@0 ($generated@@81 ($generated@@164 $generated@@624) ($generated@@331 ($generated@@8 ($generated@@295 4))))) (and (=> (= (ControlFlow 0 4) 2) $generated@@633) (=> (= (ControlFlow 0 4) 3) $generated@@632)))))))
(let (($generated@@635  (=> (and (not (= $generated@@625 ($generated@@295 3))) (= (ControlFlow 0 7) 4)) $generated@@634)))
(let (($generated@@636  (=> (and (= $generated@@625 ($generated@@295 3)) (= (ControlFlow 0 6) 4)) $generated@@634)))
(let (($generated@@637  (and (=> (= (ControlFlow 0 8) 6) $generated@@636) (=> (= (ControlFlow 0 8) 7) $generated@@635))))
(let (($generated@@638 true))
(let (($generated@@639  (=> (= $generated@@626 ($generated@@220 $generated@@627 $generated@@628 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@637) (=> (= (ControlFlow 0 9) 1) $generated@@638)))))
(let (($generated@@640  (=> (and ($generated@@301 $generated@@628) ($generated@@629 $generated@@628)) (=> (and (and (and ($generated@@196 $generated@@630 ($generated@@422 $generated@@46 $generated@@46)) ($generated@@74 $generated@@630 ($generated@@422 $generated@@46 $generated@@46) $generated@@628)) true) (and (= 1 $generated@@631) (= (ControlFlow 0 10) 9))) $generated@@639))))
$generated@@640))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@T) T@U)
(declare-fun $generated@@412 () T@T)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@U Int) T@U)
(declare-fun $generated@@464 (T@U) Int)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@0 ($generated@@81 $generated@@333 $generated@@336))) ($generated@@238 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@342) $generated@@341)) 0))
 :pattern ( (let (($generated@@342 (type $generated@@341)))
($generated@@81 ($generated@@264 $generated@@342) $generated@@341)))
)))
(assert  (and (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@346)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@343 $generated@@346))
)) (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@344 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@344 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@273 (type $generated@@349))))
(let (($generated@@351 ($generated@@272 (type $generated@@349))))
(= (type ($generated@@345 $generated@@349)) ($generated@@76 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@345 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@353) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353)))) (= ($generated@@81 ($generated@@345 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@353))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@291 (type $generated@@357))))
(let (($generated@@359 ($generated@@290 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@355 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@272 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@271 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@362) $generated@@366))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@290 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@289 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@64)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))) (and ($generated@@238 ($generated@@81 ($generated@@345 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@238 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))) (and ($generated@@238 ($generated@@81 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@238 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@T) ) (! (= (type ($generated@@388 $generated@@389)) ($generated@@76 $generated@@389 $generated@@4))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@291 (type $generated@@390))))
(let (($generated@@392 ($generated@@290 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@289 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@288 $generated@@392 $generated@@391)) (= ($generated@@287 $generated@@390) ($generated@@388 $generated@@392))))))
 :pattern ( ($generated@@287 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@291 (type $generated@@393))))
(let (($generated@@395 ($generated@@290 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@289 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@288 $generated@@395 $generated@@394)) (= ($generated@@323 $generated@@393) ($generated@@388 $generated@@394))))))
 :pattern ( ($generated@@323 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@291 (type $generated@@396))))
(let (($generated@@398 ($generated@@290 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@289 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@288 $generated@@398 $generated@@397)) (= ($generated@@354 $generated@@396) ($generated@@388 $generated@@145))))))
 :pattern ( ($generated@@354 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@273 (type $generated@@399))))
(let (($generated@@401 ($generated@@272 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@271 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@270 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (and (and (= (type $generated@@402) $generated@@145) (= (type $generated@@403) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@399) ($generated@@258 ($generated@@211 $generated@@402 $generated@@403)))))
 :no-pattern (type $generated@@402)
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@343 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (and (and (= (type $generated@@407) $generated@@145) (= (type $generated@@408) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@404) ($generated@@258 ($generated@@211 $generated@@407 $generated@@408)))))
 :no-pattern (type $generated@@407)
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@354 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@46)) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@344 $generated@@2 $generated@@409) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@46))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@212 $generated@@410 $generated@@47)) (and (= ($generated@@258 ($generated@@344 $generated@@3 $generated@@410)) $generated@@410) ($generated@@132 ($generated@@344 $generated@@3 $generated@@410) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@410 $generated@@47))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@44)) (and (= ($generated@@258 ($generated@@344 $generated@@4 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@344 $generated@@4 $generated@@411) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@412) 20))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@45)) (and (= ($generated@@258 ($generated@@344 $generated@@412 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@344 $generated@@412 $generated@@413) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@45))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@414) $generated@@415) ($generated@@132 $generated@@414 $generated@@415)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (<= 0 ($generated@@263 $generated@@416))))
 :pattern ( ($generated@@263 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@253 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@252 $generated@@419)) (<= 0 ($generated@@251 $generated@@418))))
 :pattern ( ($generated@@251 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@64) (= (type $generated@@423) $generated@@64)) (= ($generated@@420 ($generated@@372 $generated@@422 $generated@@423)) $generated@@422))
 :pattern ( ($generated@@372 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@424 ($generated@@372 $generated@@426 $generated@@427)) $generated@@427))
 :pattern ( ($generated@@372 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@72 ($generated@@372 $generated@@428 $generated@@429)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@380 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@380 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@380 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@380 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@438 $generated@@439)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) (= (type $generated@@441) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@440 $generated@@441)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@135 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@135 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@135 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@135 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) (= (type $generated@@453) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@211 $generated@@452 $generated@@453))
)))
(assert  (and (forall (($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@456))
)) (forall (($generated@@457 T@U) ($generated@@458 Int) ) (! (let (($generated@@459 ($generated@@253 (type $generated@@457))))
(= (type ($generated@@455 $generated@@457 $generated@@458)) $generated@@459))
 :pattern ( ($generated@@455 $generated@@457 $generated@@458))
))))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@252 $generated@@145)) (= (type $generated@@461) $generated@@64)) (= (type $generated@@462) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462) (forall (($generated@@463 Int) ) (!  (=> (and (<= 0 $generated@@463) (< $generated@@463 ($generated@@251 $generated@@460))) ($generated@@238 ($generated@@455 $generated@@460 $generated@@463) $generated@@461 $generated@@462))
 :pattern ( ($generated@@455 $generated@@460 $generated@@463))
))))
 :pattern ( ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@465 Int) ) (! (= ($generated@@464 ($generated@@75 $generated@@465)) $generated@@465)
 :pattern ( ($generated@@75 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@64) (= ($generated@@466 ($generated@@221 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@221 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@469)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@470 ($generated@@226 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@226 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@473)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@150 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@150 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@477)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@454 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@454 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@454 $generated@@481)) $generated@@57))
 :pattern ( ($generated@@454 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
(= ($generated@@344 $generated@@483 ($generated@@258 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@258 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@485) $generated@@64)) (= (type $generated@@486) $generated@@64)) (= ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))) (and ($generated@@212 ($generated@@81 ($generated@@345 $generated@@484) $generated@@487) $generated@@486) ($generated@@212 $generated@@487 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@484) $generated@@487))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))
))))
 :pattern ( ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) $generated@@64)) (= ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@488) $generated@@491) $generated@@490) ($generated@@212 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@488) $generated@@491))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@492 $generated@@494) ($generated@@493 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@145)) (< ($generated@@492 $generated@@497) ($generated@@493 ($generated@@211 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@211 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@145) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500))) (and (= ($generated@@258 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498)) $generated@@498) ($generated@@132 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498) ($generated@@372 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503))) (and (= ($generated@@258 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501)) $generated@@501) ($generated@@132 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501) ($generated@@380 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@145)) ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505))) (and (= ($generated@@258 ($generated@@344 $generated@@136 $generated@@506)) $generated@@506) ($generated@@132 ($generated@@344 $generated@@136 $generated@@506) ($generated@@135 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
 (not ($generated@@0 ($generated@@81 ($generated@@388 $generated@@508) $generated@@507))))
 :pattern ( (let (($generated@@508 (type $generated@@507)))
($generated@@81 ($generated@@388 $generated@@508) $generated@@507)))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@511 $generated@@512)) $generated@@62) (= ($generated@@509 ($generated@@135 $generated@@511 $generated@@512)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@136) (= ($generated@@492 ($generated@@258 $generated@@513)) ($generated@@493 $generated@@513)))
 :pattern ( ($generated@@492 ($generated@@258 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@212 $generated@@514 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@514)) $generated@@514) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@514) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@75 0)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@221 $generated@@516))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@515) ($generated@@221 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@221 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) ($generated@@212 $generated@@517 ($generated@@226 $generated@@518))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517) ($generated@@226 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@226 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) ($generated@@212 $generated@@519 ($generated@@150 $generated@@520))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@519) ($generated@@150 $generated@@520))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@150 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) ($generated@@212 $generated@@521 ($generated@@454 $generated@@522))) (and (= ($generated@@258 ($generated@@344 ($generated@@252 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@344 ($generated@@252 $generated@@145) $generated@@521) ($generated@@454 $generated@@522))))
 :pattern ( ($generated@@212 $generated@@521 ($generated@@454 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@523 ($generated@@150 $generated@@524) $generated@@525) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@523 $generated@@526)))) ($generated@@238 $generated@@526 $generated@@524 $generated@@525))
 :pattern ( ($generated@@81 $generated@@523 $generated@@526))
))))
 :pattern ( ($generated@@74 $generated@@523 ($generated@@150 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@136) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@529) (and ($generated@@134 $generated@@527) (exists (($generated@@530 T@U) ) (!  (and (= (type $generated@@530) $generated@@64) ($generated@@74 $generated@@527 ($generated@@135 $generated@@528 $generated@@530) $generated@@529))
 :pattern ( ($generated@@74 $generated@@527 ($generated@@135 $generated@@528 $generated@@530) $generated@@529))
))))) ($generated@@238 ($generated@@143 $generated@@527) $generated@@528 $generated@@529))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@527) $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@136) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@533) (and ($generated@@134 $generated@@531) (exists (($generated@@534 T@U) ) (!  (and (= (type $generated@@534) $generated@@64) ($generated@@74 $generated@@531 ($generated@@135 $generated@@534 $generated@@532) $generated@@533))
 :pattern ( ($generated@@74 $generated@@531 ($generated@@135 $generated@@534 $generated@@532) $generated@@533))
))))) ($generated@@238 ($generated@@144 $generated@@531) $generated@@532 $generated@@533))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@531) $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@535) ($generated@@233 $generated@@536)) ($generated@@233 ($generated@@211 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@535) ($generated@@233 $generated@@536)))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@537))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@537))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@537))))
)))
(assert (forall (($generated@@538 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@538)) ($generated@@233 ($generated@@258 $generated@@538)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@253 (type $generated@@539))))
 (=> (and (= (type $generated@@539) ($generated@@252 $generated@@540)) (= ($generated@@251 $generated@@539) 0)) (= $generated@@539 ($generated@@250 $generated@@540))))
 :pattern ( ($generated@@251 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@542)))
 (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@544 $generated@@2)) (= (type $generated@@543) $generated@@2)) (<= 0 ($generated $generated@@543))) (= ($generated@@263 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)) (+ (- ($generated@@263 $generated@@541) ($generated ($generated@@81 $generated@@541 $generated@@542))) ($generated $generated@@543)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@546) $generated@@2)) ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
 :pattern ( ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@548) $generated@@3)) ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
 :pattern ( ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@550) $generated@@4)) ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
 :pattern ( ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@552) $generated@@412)) ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
 :pattern ( ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@145)) ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@252 $generated@@145)) (= (type $generated@@556) $generated@@64)) (= ($generated@@132 $generated@@555 ($generated@@454 $generated@@556)) (forall (($generated@@557 Int) ) (!  (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@251 $generated@@555))) ($generated@@212 ($generated@@455 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@455 $generated@@555 $generated@@557))
))))
 :pattern ( ($generated@@132 $generated@@555 ($generated@@454 $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 Int) ) (!  (=> (= (type $generated@@559) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@251 $generated@@559))) (< ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@559 $generated@@560))) ($generated@@558 $generated@@559))))
 :pattern ( ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@559 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@132 $generated@@561 ($generated@@372 $generated@@562 $generated@@563))) (and (and ($generated@@132 ($generated@@269 $generated@@561) ($generated@@221 $generated@@562)) ($generated@@132 ($generated@@312 $generated@@561) ($generated@@221 $generated@@563))) ($generated@@132 ($generated@@343 $generated@@561) ($generated@@221 ($generated@@135 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@372 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@64)) ($generated@@132 $generated@@564 ($generated@@380 $generated@@565 $generated@@566))) (and (and ($generated@@132 ($generated@@287 $generated@@564) ($generated@@226 $generated@@565)) ($generated@@132 ($generated@@323 $generated@@564) ($generated@@226 $generated@@566))) ($generated@@132 ($generated@@354 $generated@@564) ($generated@@226 ($generated@@135 $generated@@565 $generated@@566)))))
 :pattern ( ($generated@@132 $generated@@564 ($generated@@380 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@2) ($generated@@132 $generated@@567 $generated@@46))
 :pattern ( ($generated@@132 $generated@@567 $generated@@46))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@3) ($generated@@132 $generated@@568 $generated@@47))
 :pattern ( ($generated@@132 $generated@@568 $generated@@47))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@4) ($generated@@132 $generated@@569 $generated@@44))
 :pattern ( ($generated@@132 $generated@@569 $generated@@44))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@412) ($generated@@132 $generated@@570 $generated@@45))
 :pattern ( ($generated@@132 $generated@@570 $generated@@45))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@145) ($generated@@132 $generated@@571 $generated@@48))
 :pattern ( ($generated@@132 $generated@@571 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@572 () T@U)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 (T@U) Bool)
(declare-fun $generated@@577 () Int)
(assert  (and (and (and (= (type $generated@@572) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@573) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@574) $generated@@77)) (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@578  (=> (= (ControlFlow 0 2) (- 0 1)) (or (<= ($generated ($generated@@344 $generated@@2 ($generated@@81 ($generated@@355 $generated@@572) ($generated@@258 ($generated@@8 ($generated@@231 20)))))) ($generated@@231 0)) (< 0 ($generated ($generated@@344 $generated@@2 ($generated@@81 ($generated@@355 $generated@@572) ($generated@@258 ($generated@@8 ($generated@@231 20)))))))))))
(let (($generated@@579  (=> (and (<= ($generated ($generated@@344 $generated@@2 ($generated@@81 ($generated@@355 $generated@@572) ($generated@@258 ($generated@@8 ($generated@@231 20)))))) ($generated@@231 0)) (= (ControlFlow 0 5) 2)) $generated@@578)))
(let (($generated@@580  (=> (< ($generated@@231 0) ($generated ($generated@@344 $generated@@2 ($generated@@81 ($generated@@355 $generated@@572) ($generated@@258 ($generated@@8 ($generated@@231 20))))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@572) ($generated@@258 ($generated@@8 ($generated@@231 20)))))) (=> (= (ControlFlow 0 3) 2) $generated@@578)))))
(let (($generated@@581  (=> (= $generated@@573 ($generated@@156 $generated@@574 $generated@@575 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@572) ($generated@@258 ($generated@@8 ($generated@@231 20)))))) (and (=> (= (ControlFlow 0 6) 3) $generated@@580) (=> (= (ControlFlow 0 6) 5) $generated@@579))))))
(let (($generated@@582  (=> (and ($generated@@237 $generated@@575) ($generated@@576 $generated@@575)) (=> (and (and (and ($generated@@132 $generated@@572 ($generated@@380 $generated@@46 $generated@@46)) ($generated@@74 $generated@@572 ($generated@@380 $generated@@46 $generated@@46) $generated@@575)) (= 0 $generated@@577)) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@572) ($generated@@258 ($generated@@8 20)))) (= (ControlFlow 0 8) 6))) $generated@@581))))
$generated@@582))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@T) T@U)
(declare-fun $generated@@412 () T@T)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@U Int) T@U)
(declare-fun $generated@@464 (T@U) Int)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@498 (T@U T@U T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (Int Int) Int)
(declare-fun $generated@@573 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@0 ($generated@@81 $generated@@333 $generated@@336))) ($generated@@238 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@342) $generated@@341)) 0))
 :pattern ( (let (($generated@@342 (type $generated@@341)))
($generated@@81 ($generated@@264 $generated@@342) $generated@@341)))
)))
(assert  (and (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@346)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@343 $generated@@346))
)) (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@344 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@344 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@273 (type $generated@@349))))
(let (($generated@@351 ($generated@@272 (type $generated@@349))))
(= (type ($generated@@345 $generated@@349)) ($generated@@76 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@345 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@353) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353)))) (= ($generated@@81 ($generated@@345 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@353))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@291 (type $generated@@357))))
(let (($generated@@359 ($generated@@290 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@355 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@272 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@271 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@362) $generated@@366))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@290 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@289 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@64)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))) (and ($generated@@238 ($generated@@81 ($generated@@345 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@238 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))) (and ($generated@@238 ($generated@@81 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@238 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@T) ) (! (= (type ($generated@@388 $generated@@389)) ($generated@@76 $generated@@389 $generated@@4))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@291 (type $generated@@390))))
(let (($generated@@392 ($generated@@290 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@289 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@288 $generated@@392 $generated@@391)) (= ($generated@@287 $generated@@390) ($generated@@388 $generated@@392))))))
 :pattern ( ($generated@@287 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@291 (type $generated@@393))))
(let (($generated@@395 ($generated@@290 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@289 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@288 $generated@@395 $generated@@394)) (= ($generated@@323 $generated@@393) ($generated@@388 $generated@@394))))))
 :pattern ( ($generated@@323 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@291 (type $generated@@396))))
(let (($generated@@398 ($generated@@290 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@289 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@288 $generated@@398 $generated@@397)) (= ($generated@@354 $generated@@396) ($generated@@388 $generated@@145))))))
 :pattern ( ($generated@@354 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@273 (type $generated@@399))))
(let (($generated@@401 ($generated@@272 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@271 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@270 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (and (and (= (type $generated@@402) $generated@@145) (= (type $generated@@403) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@399) ($generated@@258 ($generated@@211 $generated@@402 $generated@@403)))))
 :no-pattern (type $generated@@402)
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@343 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (and (and (= (type $generated@@407) $generated@@145) (= (type $generated@@408) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@404) ($generated@@258 ($generated@@211 $generated@@407 $generated@@408)))))
 :no-pattern (type $generated@@407)
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@354 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@46)) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@344 $generated@@2 $generated@@409) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@46))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@212 $generated@@410 $generated@@47)) (and (= ($generated@@258 ($generated@@344 $generated@@3 $generated@@410)) $generated@@410) ($generated@@132 ($generated@@344 $generated@@3 $generated@@410) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@410 $generated@@47))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@44)) (and (= ($generated@@258 ($generated@@344 $generated@@4 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@344 $generated@@4 $generated@@411) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@412) 20))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@45)) (and (= ($generated@@258 ($generated@@344 $generated@@412 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@344 $generated@@412 $generated@@413) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@45))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@414) $generated@@415) ($generated@@132 $generated@@414 $generated@@415)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (<= 0 ($generated@@263 $generated@@416))))
 :pattern ( ($generated@@263 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@253 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@252 $generated@@419)) (<= 0 ($generated@@251 $generated@@418))))
 :pattern ( ($generated@@251 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@64) (= (type $generated@@423) $generated@@64)) (= ($generated@@420 ($generated@@372 $generated@@422 $generated@@423)) $generated@@422))
 :pattern ( ($generated@@372 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@424 ($generated@@372 $generated@@426 $generated@@427)) $generated@@427))
 :pattern ( ($generated@@372 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@72 ($generated@@372 $generated@@428 $generated@@429)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@380 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@380 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@380 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@380 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@438 $generated@@439)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) (= (type $generated@@441) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@440 $generated@@441)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@135 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@135 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@135 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@135 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) (= (type $generated@@453) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@211 $generated@@452 $generated@@453))
)))
(assert  (and (forall (($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@456))
)) (forall (($generated@@457 T@U) ($generated@@458 Int) ) (! (let (($generated@@459 ($generated@@253 (type $generated@@457))))
(= (type ($generated@@455 $generated@@457 $generated@@458)) $generated@@459))
 :pattern ( ($generated@@455 $generated@@457 $generated@@458))
))))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@252 $generated@@145)) (= (type $generated@@461) $generated@@64)) (= (type $generated@@462) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462) (forall (($generated@@463 Int) ) (!  (=> (and (<= 0 $generated@@463) (< $generated@@463 ($generated@@251 $generated@@460))) ($generated@@238 ($generated@@455 $generated@@460 $generated@@463) $generated@@461 $generated@@462))
 :pattern ( ($generated@@455 $generated@@460 $generated@@463))
))))
 :pattern ( ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@465 Int) ) (! (= ($generated@@464 ($generated@@75 $generated@@465)) $generated@@465)
 :pattern ( ($generated@@75 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@64) (= ($generated@@466 ($generated@@221 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@221 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@469)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@470 ($generated@@226 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@226 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@473)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@150 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@150 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@477)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@454 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@454 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@454 $generated@@481)) $generated@@57))
 :pattern ( ($generated@@454 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
(= ($generated@@344 $generated@@483 ($generated@@258 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@258 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@485) $generated@@64)) (= (type $generated@@486) $generated@@64)) (= ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))) (and ($generated@@212 ($generated@@81 ($generated@@345 $generated@@484) $generated@@487) $generated@@486) ($generated@@212 $generated@@487 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@484) $generated@@487))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))
))))
 :pattern ( ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) $generated@@64)) (= ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@488) $generated@@491) $generated@@490) ($generated@@212 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@488) $generated@@491))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@492 $generated@@494) ($generated@@493 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@145)) (< ($generated@@492 $generated@@497) ($generated@@493 ($generated@@211 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@211 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(let (($generated@@503 (type $generated@@500)))
(= (type ($generated@@498 $generated@@499 $generated@@500 $generated@@501)) ($generated@@289 $generated@@503 $generated@@502))))
 :pattern ( ($generated@@498 $generated@@499 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(let (($generated@@509 (type $generated@@505)))
 (=> (and (= (type $generated@@504) ($generated@@289 $generated@@509 $generated@@508)) (= (type $generated@@506) $generated@@509)) (and (=> (= $generated@@506 $generated@@505) (and ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@498 $generated@@504 $generated@@505 $generated@@507)) $generated@@506)) (= ($generated@@81 ($generated@@355 ($generated@@498 $generated@@504 $generated@@505 $generated@@507)) $generated@@506) $generated@@507))) (=> (not (= $generated@@506 $generated@@505)) (and (= ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@498 $generated@@504 $generated@@505 $generated@@507)) $generated@@506)) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@504) $generated@@506))) (= ($generated@@81 ($generated@@355 ($generated@@498 $generated@@504 $generated@@505 $generated@@507)) $generated@@506) ($generated@@81 ($generated@@355 $generated@@504) $generated@@506))))))))
 :pattern ( ($generated@@81 ($generated@@287 ($generated@@498 $generated@@504 $generated@@505 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@355 ($generated@@498 $generated@@504 $generated@@505 $generated@@507)) $generated@@506))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@64)) (= (type $generated@@512) $generated@@64)) ($generated@@212 $generated@@510 ($generated@@372 $generated@@511 $generated@@512))) (and (= ($generated@@258 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@510)) $generated@@510) ($generated@@132 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@510) ($generated@@372 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@212 $generated@@510 ($generated@@372 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@212 $generated@@513 ($generated@@380 $generated@@514 $generated@@515))) (and (= ($generated@@258 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@513)) $generated@@513) ($generated@@132 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@513) ($generated@@380 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@212 $generated@@513 ($generated@@380 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@64) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@145)) ($generated@@212 $generated@@518 ($generated@@135 $generated@@516 $generated@@517))) (and (= ($generated@@258 ($generated@@344 $generated@@136 $generated@@518)) $generated@@518) ($generated@@132 ($generated@@344 $generated@@136 $generated@@518) ($generated@@135 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@212 $generated@@518 ($generated@@135 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
 (not ($generated@@0 ($generated@@81 ($generated@@388 $generated@@520) $generated@@519))))
 :pattern ( (let (($generated@@520 (type $generated@@519)))
($generated@@81 ($generated@@388 $generated@@520) $generated@@519)))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@69)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@523 $generated@@524)) $generated@@62) (= ($generated@@521 ($generated@@135 $generated@@523 $generated@@524)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 Int) ($generated@@527 Int) ) (! (= ($generated@@525 $generated@@526 $generated@@527) (* $generated@@526 $generated@@527))
 :pattern ( ($generated@@525 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@136) (= ($generated@@492 ($generated@@258 $generated@@528)) ($generated@@493 $generated@@528)))
 :pattern ( ($generated@@492 ($generated@@258 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@145) ($generated@@212 $generated@@529 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@529)) $generated@@529) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@529) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@75 0)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) ($generated@@212 $generated@@530 ($generated@@221 $generated@@531))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@530) ($generated@@221 $generated@@531))))
 :pattern ( ($generated@@212 $generated@@530 ($generated@@221 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) ($generated@@212 $generated@@532 ($generated@@226 $generated@@533))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@532) ($generated@@226 $generated@@533))))
 :pattern ( ($generated@@212 $generated@@532 ($generated@@226 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) ($generated@@212 $generated@@534 ($generated@@150 $generated@@535))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@534) ($generated@@150 $generated@@535))))
 :pattern ( ($generated@@212 $generated@@534 ($generated@@150 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@145) (= (type $generated@@537) $generated@@64)) ($generated@@212 $generated@@536 ($generated@@454 $generated@@537))) (and (= ($generated@@258 ($generated@@344 ($generated@@252 $generated@@145) $generated@@536)) $generated@@536) ($generated@@132 ($generated@@344 ($generated@@252 $generated@@145) $generated@@536) ($generated@@454 $generated@@537))))
 :pattern ( ($generated@@212 $generated@@536 ($generated@@454 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@538 ($generated@@150 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@538 $generated@@541)))) ($generated@@238 $generated@@541 $generated@@539 $generated@@540))
 :pattern ( ($generated@@81 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@150 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@136) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@544) (and ($generated@@134 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@64) ($generated@@74 $generated@@542 ($generated@@135 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@74 $generated@@542 ($generated@@135 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@238 ($generated@@143 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@136) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@548) (and ($generated@@134 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@64) ($generated@@74 $generated@@546 ($generated@@135 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@135 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@238 ($generated@@144 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@550) ($generated@@233 $generated@@551)) ($generated@@233 ($generated@@211 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@550) ($generated@@233 $generated@@551)))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@552))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@552))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@552))))
)))
(assert (forall (($generated@@553 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@553)) ($generated@@233 ($generated@@258 $generated@@553)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@253 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@252 $generated@@555)) (= ($generated@@251 $generated@@554) 0)) (= $generated@@554 ($generated@@250 $generated@@555))))
 :pattern ( ($generated@@251 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@557)))
 (=> (and (and (= (type $generated@@556) ($generated@@76 $generated@@559 $generated@@2)) (= (type $generated@@558) $generated@@2)) (<= 0 ($generated $generated@@558))) (= ($generated@@263 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)) (+ (- ($generated@@263 $generated@@556) ($generated ($generated@@81 $generated@@556 $generated@@557))) ($generated $generated@@558)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@2)) ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@3)) ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@4)) ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@412)) ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@145)) ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@252 $generated@@145)) (= (type $generated@@571) $generated@@64)) (= ($generated@@132 $generated@@570 ($generated@@454 $generated@@571)) (forall (($generated@@572 Int) ) (!  (=> (and (<= 0 $generated@@572) (< $generated@@572 ($generated@@251 $generated@@570))) ($generated@@212 ($generated@@455 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@455 $generated@@570 $generated@@572))
))))
 :pattern ( ($generated@@132 $generated@@570 ($generated@@454 $generated@@571)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 Int) ) (!  (=> (= (type $generated@@574) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@251 $generated@@574))) (< ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@574 $generated@@575))) ($generated@@573 $generated@@574))))
 :pattern ( ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@574 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@132 $generated@@576 ($generated@@372 $generated@@577 $generated@@578))) (and (and ($generated@@132 ($generated@@269 $generated@@576) ($generated@@221 $generated@@577)) ($generated@@132 ($generated@@312 $generated@@576) ($generated@@221 $generated@@578))) ($generated@@132 ($generated@@343 $generated@@576) ($generated@@221 ($generated@@135 $generated@@577 $generated@@578)))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@372 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@132 $generated@@579 ($generated@@380 $generated@@580 $generated@@581))) (and (and ($generated@@132 ($generated@@287 $generated@@579) ($generated@@226 $generated@@580)) ($generated@@132 ($generated@@323 $generated@@579) ($generated@@226 $generated@@581))) ($generated@@132 ($generated@@354 $generated@@579) ($generated@@226 ($generated@@135 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@132 $generated@@579 ($generated@@380 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@2) ($generated@@132 $generated@@582 $generated@@46))
 :pattern ( ($generated@@132 $generated@@582 $generated@@46))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@3) ($generated@@132 $generated@@583 $generated@@47))
 :pattern ( ($generated@@132 $generated@@583 $generated@@47))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@4) ($generated@@132 $generated@@584 $generated@@44))
 :pattern ( ($generated@@132 $generated@@584 $generated@@44))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@412) ($generated@@132 $generated@@585 $generated@@45))
 :pattern ( ($generated@@132 $generated@@585 $generated@@45))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@145) ($generated@@132 $generated@@586 $generated@@48))
 :pattern ( ($generated@@132 $generated@@586 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () Int)
(declare-fun $generated@@589 () Int)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 (T@U) Bool)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () Int)
(assert  (and (and (and (and (= (type $generated@@587) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@590) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@591) $generated@@77)) (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@594) ($generated@@289 $generated@@145 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@596  (=> (= (ControlFlow 0 4) (- 0 3)) (forall (($generated@@597 Int) ) (!  (=> (or (< $generated@@597 1) (> $generated@@597 3)) (not ($generated@@0 ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 ($generated@@8 $generated@@597))))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 ($generated@@8 $generated@@597))))
)))))
(let (($generated@@598  (=> (and (not (or (< $generated@@588 1) (> $generated@@588 3))) (= (ControlFlow 0 6) 4)) $generated@@596)))
(let (($generated@@599  (=> (and (or (< $generated@@588 1) (> $generated@@588 3)) (= (ControlFlow 0 5) 4)) $generated@@596)))
(let (($generated@@600  (=> (< $generated@@588 1) (and (=> (= (ControlFlow 0 8) 5) $generated@@599) (=> (= (ControlFlow 0 8) 6) $generated@@598)))))
(let (($generated@@601  (=> (<= 1 $generated@@588) (and (=> (= (ControlFlow 0 7) 5) $generated@@599) (=> (= (ControlFlow 0 7) 6) $generated@@598)))))
(let (($generated@@602  (and (=> (= (ControlFlow 0 9) 7) $generated@@601) (=> (= (ControlFlow 0 9) 8) $generated@@600))))
(let (($generated@@603 true))
(let (($generated@@604  (and (=> (= (ControlFlow 0 10) (- 0 15)) (forall (($generated@@605 Int) ) (!  (=> ($generated@@0 ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 ($generated@@8 $generated@@605)))) (= ($generated ($generated@@344 $generated@@2 ($generated@@81 ($generated@@355 $generated@@587) ($generated@@258 ($generated@@8 $generated@@605))))) ($generated@@525 $generated@@605 $generated@@605)))
 :pattern ( ($generated@@344 $generated@@2 ($generated@@81 ($generated@@355 $generated@@587) ($generated@@258 ($generated@@8 $generated@@605)))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 ($generated@@8 $generated@@605))))
))) (=> (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@2) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 $generated@@606)))) (= ($generated ($generated@@344 $generated@@2 ($generated@@81 ($generated@@355 $generated@@587) ($generated@@258 $generated@@606)))) ($generated@@525 ($generated $generated@@606) ($generated $generated@@606))))
 :pattern ( ($generated@@344 $generated@@2 ($generated@@81 ($generated@@355 $generated@@587) ($generated@@258 $generated@@606))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 $generated@@606)))
)) (and (=> (= (ControlFlow 0 10) (- 0 14)) (not ($generated@@0 ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 ($generated@@8 0)))))) (=> (not ($generated@@0 ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 ($generated@@8 0))))) (and (=> (= (ControlFlow 0 10) (- 0 13)) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 ($generated@@8 1))))) (=> ($generated@@0 ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 ($generated@@8 1)))) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 ($generated@@8 2))))) (=> ($generated@@0 ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 ($generated@@8 2)))) (and (=> (= (ControlFlow 0 10) (- 0 11)) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 ($generated@@8 3))))) (=> ($generated@@0 ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 ($generated@@8 3)))) (and (=> (= (ControlFlow 0 10) 9) $generated@@602) (=> (= (ControlFlow 0 10) 2) $generated@@603))))))))))))))
(let (($generated@@607  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 ($generated@@8 $generated@@589))))) (= (ControlFlow 0 18) 10)) $generated@@604)))
(let (($generated@@608  (=> ($generated@@0 ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 ($generated@@8 $generated@@589)))) (and (=> (= (ControlFlow 0 16) (- 0 17)) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@587) ($generated@@258 ($generated@@8 $generated@@589))))) (=> (= (ControlFlow 0 16) 10) $generated@@604)))))
(let (($generated@@609  (and (=> (= (ControlFlow 0 19) 16) $generated@@608) (=> (= (ControlFlow 0 19) 18) $generated@@607))))
(let (($generated@@610 true))
(let (($generated@@611  (=> (and (= $generated@@590 ($generated@@156 $generated@@591 $generated@@592 $generated@@60 false)) (= $generated@@587 ($generated@@233 ($generated@@498 ($generated@@498 ($generated@@498 ($generated@@288 $generated@@145 $generated@@145) ($generated@@258 ($generated@@8 ($generated@@231 1))) ($generated@@258 ($generated@@8 ($generated@@231 1)))) ($generated@@258 ($generated@@8 ($generated@@231 2))) ($generated@@258 ($generated@@8 ($generated@@231 4)))) ($generated@@258 ($generated@@8 ($generated@@231 3))) ($generated@@258 ($generated@@8 ($generated@@231 9))))))) (and (=> (= (ControlFlow 0 20) 19) $generated@@609) (=> (= (ControlFlow 0 20) 1) $generated@@610)))))
(let (($generated@@612  (=> (and ($generated@@237 $generated@@592) ($generated@@593 $generated@@592)) (=> (and (and (and ($generated@@132 $generated@@594 ($generated@@380 $generated@@46 $generated@@46)) ($generated@@74 $generated@@594 ($generated@@380 $generated@@46 $generated@@46) $generated@@592)) true) (and (= 0 $generated@@595) (= (ControlFlow 0 21) 20))) $generated@@611))))
$generated@@612)))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@141 (T@T) T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@217 (T@U T@U) T@U)
(declare-fun $generated@@218 () T@T)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@238 (T@T T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@241 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@292 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@304 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U T@U) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@U T@U) T@U)
(declare-fun $generated@@320 (T@U T@U) T@U)
(declare-fun $generated@@321 (T@T) T@U)
(declare-fun $generated@@322 (T@U T@U T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@352 (T@U) Bool)
(declare-fun $generated@@353 (T@U T@U T@U) Bool)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@365 (T@T) T@U)
(declare-fun $generated@@366 (T@U) Int)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@378 (T@U) Int)
(declare-fun $generated@@379 (T@T) T@U)
(declare-fun $generated@@384 (T@T T@T) T@U)
(declare-fun $generated@@390 (T@T T@T) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) Bool)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@447 (T@T T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@522 () T@T)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@565 (T@U Int) T@U)
(declare-fun $generated@@577 (T@U) Int)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@605 (T@U) Int)
(declare-fun $generated@@606 (T@U) Int)
(declare-fun $generated@@642 (T@U) T@U)
(declare-fun $generated@@703 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@142 $generated@@143)) 14)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@140 ($generated@@134 $generated@@144 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@134 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@141 ($generated@@134 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@134 $generated@@146 $generated@@147))
))) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@133 $generated@@148 $generated@@149 $generated@@150 $generated@@151 $generated@@152)) ($generated@@134 $generated@@135 $generated@@135))
 :pattern ( ($generated@@133 $generated@@148 $generated@@149 $generated@@150 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@138 $generated@@153 $generated@@154)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@153 $generated@@154))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@155) $generated@@64) (= (type $generated@@156) $generated@@64)) (= (type $generated@@157) ($generated@@134 $generated@@135 $generated@@135))) (= (type $generated@@158) $generated@@135)) (= (type $generated@@159) $generated@@135)) (or ($generated@@136 $generated@@155 $generated@@156 $generated@@157 $generated@@158 $generated@@159) (and (not (= 0 $generated@@132)) (and (and ($generated@@137 $generated@@157 ($generated@@138 $generated@@155 $generated@@156)) ($generated@@139 $generated@@158 $generated@@155)) ($generated@@139 $generated@@159 $generated@@156))))) ($generated@@137 ($generated@@133 $generated@@155 $generated@@156 $generated@@157 $generated@@158 $generated@@159) ($generated@@138 $generated@@155 $generated@@156)))
 :pattern ( ($generated@@133 $generated@@155 $generated@@156 $generated@@157 $generated@@158 $generated@@159))
))))
(assert  (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@162 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@162 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@160 $generated@@171)) ($generated@@76 $generated@@172 $generated@@4)))
 :pattern ( ($generated@@160 $generated@@171))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@80 (type $generated@@174))))
(let (($generated@@177 ($generated@@79 (type $generated@@173))))
(= (type ($generated@@161 $generated@@173 $generated@@174 $generated@@175)) ($generated@@162 $generated@@177 $generated@@176))))
 :pattern ( ($generated@@161 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@80 (type $generated@@179))))
(let (($generated@@182 ($generated@@79 (type $generated@@178))))
 (=> (and (and (= (type $generated@@178) ($generated@@76 $generated@@182 $generated@@4)) (= (type $generated@@179) ($generated@@76 $generated@@182 $generated@@181))) (= (type $generated@@180) $generated@@64)) (= ($generated@@160 ($generated@@161 $generated@@178 $generated@@179 $generated@@180)) $generated@@178))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@178 $generated@@179 $generated@@180)))
)))
(assert (forall (($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@164 (type $generated@@184))))
(let (($generated@@186 ($generated@@163 (type $generated@@184))))
(= (type ($generated@@183 $generated@@184)) ($generated@@76 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@80 (type $generated@@188))))
(let (($generated@@191 ($generated@@79 (type $generated@@187))))
 (=> (and (and (= (type $generated@@187) ($generated@@76 $generated@@191 $generated@@4)) (= (type $generated@@188) ($generated@@76 $generated@@191 $generated@@190))) (= (type $generated@@189) $generated@@64)) (= ($generated@@183 ($generated@@161 $generated@@187 $generated@@188 $generated@@189)) $generated@@188))))
 :pattern ( ($generated@@183 ($generated@@161 $generated@@187 $generated@@188 $generated@@189)))
)))
(assert  (and (forall (($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@140 (type $generated@@194))))
(= (type ($generated@@192 $generated@@194)) ($generated@@76 $generated@@195 $generated@@4)))
 :pattern ( ($generated@@192 $generated@@194))
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@80 (type $generated@@197))))
(let (($generated@@200 ($generated@@79 (type $generated@@196))))
(= (type ($generated@@193 $generated@@196 $generated@@197 $generated@@198)) ($generated@@134 $generated@@200 $generated@@199))))
 :pattern ( ($generated@@193 $generated@@196 $generated@@197 $generated@@198))
))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@80 (type $generated@@202))))
(let (($generated@@205 ($generated@@79 (type $generated@@201))))
 (=> (and (and (= (type $generated@@201) ($generated@@76 $generated@@205 $generated@@4)) (= (type $generated@@202) ($generated@@76 $generated@@205 $generated@@204))) (= (type $generated@@203) $generated@@64)) (= ($generated@@192 ($generated@@193 $generated@@201 $generated@@202 $generated@@203)) $generated@@201))))
 :pattern ( ($generated@@192 ($generated@@193 $generated@@201 $generated@@202 $generated@@203)))
)))
(assert (forall (($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@141 (type $generated@@207))))
(let (($generated@@209 ($generated@@140 (type $generated@@207))))
(= (type ($generated@@206 $generated@@207)) ($generated@@76 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@206 $generated@@207))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@80 (type $generated@@211))))
(let (($generated@@214 ($generated@@79 (type $generated@@210))))
 (=> (and (and (= (type $generated@@210) ($generated@@76 $generated@@214 $generated@@4)) (= (type $generated@@211) ($generated@@76 $generated@@214 $generated@@213))) (= (type $generated@@212) $generated@@64)) (= ($generated@@206 ($generated@@193 $generated@@210 $generated@@211 $generated@@212)) $generated@@211))))
 :pattern ( ($generated@@206 ($generated@@193 $generated@@210 $generated@@211 $generated@@212)))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (= (type $generated@@215) $generated@@2) ($generated@@137 $generated@@215 ($generated@@75 0)))
 :pattern ( ($generated@@137 $generated@@215 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@218) 17) (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (= (type ($generated@@217 $generated@@219 $generated@@220)) $generated@@64)
 :pattern ( ($generated@@217 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@221) $generated@@64) (= (type $generated@@222) $generated@@64)) (= (type $generated@@223) $generated@@218)) ($generated@@137 $generated@@223 ($generated@@217 $generated@@221 $generated@@222))) ($generated@@216 $generated@@223))
 :pattern ( ($generated@@216 $generated@@223) ($generated@@137 $generated@@223 ($generated@@217 $generated@@221 $generated@@222)))
)))
(assert  (and (forall (($generated@@227 T@U) ) (! (= (type ($generated@@225 $generated@@227)) $generated@@135)
 :pattern ( ($generated@@225 $generated@@227))
)) (forall (($generated@@228 T@U) ) (! (= (type ($generated@@226 $generated@@228)) $generated@@135)
 :pattern ( ($generated@@226 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (= (type $generated@@229) $generated@@218) (= (type $generated@@230) $generated@@218)) true) (= ($generated@@224 $generated@@229 $generated@@230)  (and (= ($generated@@225 $generated@@229) ($generated@@225 $generated@@230)) (= ($generated@@226 $generated@@229) ($generated@@226 $generated@@230)))))
 :pattern ( ($generated@@224 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ) (! (= (type ($generated@@231 $generated@@233)) $generated@@64)
 :pattern ( ($generated@@231 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (= (type $generated@@234) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@235) $generated@@64)) ($generated@@137 $generated@@234 ($generated@@231 $generated@@235))) ($generated@@232 $generated@@234))
 :pattern ( ($generated@@137 $generated@@234 ($generated@@231 $generated@@235)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (= ($generated@@1 ($generated@@238 $generated@@242 $generated@@243)) 18)) (forall (($generated@@244 T@T) ($generated@@245 T@T) ) (! (= ($generated@@239 ($generated@@238 $generated@@244 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@238 $generated@@244 $generated@@245))
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= ($generated@@240 ($generated@@238 $generated@@246 $generated@@247)) $generated@@247)
 :pattern ( ($generated@@238 $generated@@246 $generated@@247))
))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@240 (type $generated@@248))))
(= (type ($generated@@236 $generated@@248 $generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@236 $generated@@248 $generated@@249 $generated@@250))
))) (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(let (($generated@@257 (type $generated@@253)))
(= (type ($generated@@241 $generated@@252 $generated@@253 $generated@@254 $generated@@255)) ($generated@@238 $generated@@257 $generated@@256))))
 :pattern ( ($generated@@241 $generated@@252 $generated@@253 $generated@@254 $generated@@255))
))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (! (let (($generated@@262 ($generated@@240 (type $generated@@258))))
 (=> (= (type $generated@@261) $generated@@262) (= ($generated@@236 ($generated@@241 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@259 $generated@@260) $generated@@261)))
 :weight 0
))) (and (and (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (or (= $generated@@265 $generated@@267) (= ($generated@@236 ($generated@@241 $generated@@264 $generated@@265 $generated@@266 $generated@@263) $generated@@267 $generated@@268) ($generated@@236 $generated@@264 $generated@@267 $generated@@268)))
 :weight 0
)) (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (or (= $generated@@272 $generated@@274) (= ($generated@@236 ($generated@@241 $generated@@270 $generated@@271 $generated@@272 $generated@@269) $generated@@273 $generated@@274) ($generated@@236 $generated@@270 $generated@@273 $generated@@274)))
 :weight 0
))) (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (or true (= ($generated@@236 ($generated@@241 $generated@@276 $generated@@277 $generated@@278 $generated@@275) $generated@@279 $generated@@280) ($generated@@236 $generated@@276 $generated@@279 $generated@@280)))
 :weight 0
)))) (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 Bool) ) (! (= (type ($generated@@237 $generated@@281 $generated@@282 $generated@@283 $generated@@284)) ($generated@@238 $generated@@77 $generated@@4))
 :pattern ( ($generated@@237 $generated@@281 $generated@@282 $generated@@283 $generated@@284))
))))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 Bool) ($generated@@289 T@U) ($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@67 (type $generated@@290))))
 (=> (and (and (and (and (= (type $generated@@285) $generated@@77) (= (type $generated@@286) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@287) ($generated@@66 $generated@@4))) (= (type $generated@@289) $generated@@77)) (= (type $generated@@290) ($generated@@66 $generated@@291))) (= ($generated@@0 ($generated@@236 ($generated@@237 $generated@@285 $generated@@286 $generated@@287 $generated@@288) $generated@@289 $generated@@290))  (=> (and (not (= $generated@@289 $generated@@285)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@286 $generated@@289) $generated@@287))) $generated@@288))))
 :pattern ( ($generated@@236 ($generated@@237 $generated@@285 $generated@@286 $generated@@287 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 Bool) ) (! (= (type ($generated@@292 $generated@@293 $generated@@294 $generated@@295 $generated@@296)) ($generated@@238 $generated@@77 $generated@@4))
 :pattern ( ($generated@@292 $generated@@293 $generated@@294 $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 Bool) ($generated@@301 T@U) ($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@67 (type $generated@@302))))
 (=> (and (and (and (and (= (type $generated@@297) $generated@@77) (= (type $generated@@298) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@299) ($generated@@66 $generated@@4))) (= (type $generated@@301) $generated@@77)) (= (type $generated@@302) ($generated@@66 $generated@@303))) (= ($generated@@0 ($generated@@236 ($generated@@292 $generated@@297 $generated@@298 $generated@@299 $generated@@300) $generated@@301 $generated@@302))  (=> (and (not (= $generated@@301 $generated@@297)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@298 $generated@@301) $generated@@299))) $generated@@300))))
 :pattern ( ($generated@@236 ($generated@@292 $generated@@297 $generated@@298 $generated@@299 $generated@@300) $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@79 (type $generated@@305))))
(= (type ($generated@@304 $generated@@305 $generated@@306)) ($generated@@76 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@79 (type $generated@@308))))
 (=> (and (= (type $generated@@308) ($generated@@76 $generated@@310 $generated@@4)) (= (type $generated@@309) ($generated@@76 $generated@@310 $generated@@4))) (= ($generated@@304 ($generated@@304 $generated@@308 $generated@@309) $generated@@309) ($generated@@304 $generated@@308 $generated@@309))))
 :pattern ( ($generated@@304 ($generated@@304 $generated@@308 $generated@@309) $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (= (type ($generated@@311 $generated@@312 $generated@@313)) $generated@@218)
 :pattern ( ($generated@@311 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@64) (= (type $generated@@315) $generated@@64)) (= (type $generated@@316) $generated@@135)) (= (type $generated@@317) $generated@@135)) (= ($generated@@137 ($generated@@311 $generated@@316 $generated@@317) ($generated@@217 $generated@@314 $generated@@315))  (and ($generated@@139 $generated@@316 $generated@@314) ($generated@@139 $generated@@317 $generated@@315))))
 :pattern ( ($generated@@137 ($generated@@311 $generated@@316 $generated@@317) ($generated@@217 $generated@@314 $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@U) ) (! (let (($generated@@324 (type $generated@@323)))
(= (type ($generated@@318 $generated@@323)) $generated@@324))
 :pattern ( ($generated@@318 $generated@@323))
)) (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (! (= (type ($generated@@319 $generated@@325 $generated@@326)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@319 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (! (let (($generated@@329 (type $generated@@328)))
(= (type ($generated@@320 $generated@@327 $generated@@328)) ($generated@@76 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@330 T@T) ) (! (= (type ($generated@@321 $generated@@330)) ($generated@@76 $generated@@330 $generated@@4))
 :pattern ( ($generated@@321 $generated@@330))
))) (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (! (= (type ($generated@@322 $generated@@331 $generated@@332 $generated@@333)) ($generated@@76 $generated@@135 $generated@@135))
 :pattern ( ($generated@@322 $generated@@331 $generated@@332 $generated@@333))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@334) $generated@@64) (= (type $generated@@335) $generated@@64)) (= (type $generated@@336) ($generated@@134 $generated@@135 $generated@@135))) (= (type $generated@@337) $generated@@135)) (= (type $generated@@338) $generated@@135)) (or ($generated@@136 $generated@@334 $generated@@335 ($generated@@318 $generated@@336) ($generated@@318 $generated@@337) ($generated@@318 $generated@@338)) (and (not (= 0 $generated@@132)) (and (and ($generated@@137 $generated@@336 ($generated@@138 $generated@@334 $generated@@335)) ($generated@@139 $generated@@337 $generated@@334)) ($generated@@139 $generated@@338 $generated@@335))))) (= ($generated@@133 $generated@@334 $generated@@335 ($generated@@318 $generated@@336) ($generated@@318 $generated@@337) ($generated@@318 $generated@@338)) ($generated@@193 ($generated@@319 $generated@@334 ($generated@@304 ($generated@@320 ($generated@@321 $generated@@135) ($generated@@318 $generated@@337)) ($generated@@192 ($generated@@318 $generated@@336)))) ($generated@@322 ($generated@@318 $generated@@337) $generated@@338 ($generated@@206 ($generated@@318 $generated@@336))) ($generated@@138 $generated@@334 $generated@@335))))
 :weight 3
 :pattern ( ($generated@@133 $generated@@334 $generated@@335 ($generated@@318 $generated@@336) ($generated@@318 $generated@@337) ($generated@@318 $generated@@338)))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@218) (= (type $generated@@340) $generated@@218)) (= ($generated@@224 $generated@@339 $generated@@340) (= $generated@@339 $generated@@340)))
 :pattern ( ($generated@@224 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@64)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@344) $generated@@64)) (= ($generated@@137 $generated@@343 ($generated@@341 $generated@@344)) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@135) ($generated@@0 ($generated@@81 $generated@@343 $generated@@345))) ($generated@@139 $generated@@345 $generated@@344))
 :pattern ( ($generated@@81 $generated@@343 $generated@@345))
))))
 :pattern ( ($generated@@137 $generated@@343 ($generated@@341 $generated@@344)))
)))
(assert (forall (($generated@@347 T@U) ) (! (= (type ($generated@@346 $generated@@347)) $generated@@64)
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@349) $generated@@64)) (= ($generated@@137 $generated@@348 ($generated@@346 $generated@@349)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@135) ($generated@@0 ($generated@@81 $generated@@348 $generated@@350))) ($generated@@139 $generated@@350 $generated@@349))
 :pattern ( ($generated@@81 $generated@@348 $generated@@350))
))))
 :pattern ( ($generated@@137 $generated@@348 ($generated@@346 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ) (! (= ($generated@@318 $generated@@351) $generated@@351)
 :pattern ( ($generated@@318 $generated@@351))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@354) $generated@@64) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) $generated@@135)) (= (type $generated@@357) $generated@@135)) (= (type $generated@@358) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@352 $generated@@358)) (= ($generated@@74 ($generated@@311 $generated@@356 $generated@@357) ($generated@@217 $generated@@354 $generated@@355) $generated@@358)  (and ($generated@@353 $generated@@356 $generated@@354 $generated@@358) ($generated@@353 $generated@@357 $generated@@355 $generated@@358))))
 :pattern ( ($generated@@74 ($generated@@311 $generated@@356 $generated@@357) ($generated@@217 $generated@@354 $generated@@355) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@68)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@218) (= ($generated@@216 $generated@@361) (= ($generated@@359 $generated@@361) $generated@@61)))
 :pattern ( ($generated@@216 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@218) ($generated@@216 $generated@@362)) (exists (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (and (and (= (type $generated@@363) $generated@@135) (= (type $generated@@364) $generated@@135)) (= $generated@@362 ($generated@@311 $generated@@363 $generated@@364)))
 :no-pattern (type $generated@@363)
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
)))
 :pattern ( ($generated@@216 $generated@@362))
)))
(assert  (and (and (forall (($generated@@369 T@T) ) (= ($generated@@1 ($generated@@367 $generated@@369)) 19)) (forall (($generated@@370 T@T) ) (! (= ($generated@@368 ($generated@@367 $generated@@370)) $generated@@370)
 :pattern ( ($generated@@367 $generated@@370))
))) (forall (($generated@@371 T@T) ) (! (= (type ($generated@@365 $generated@@371)) ($generated@@367 $generated@@371))
 :pattern ( ($generated@@365 $generated@@371))
))))
(assert (forall (($generated@@372 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@372)) 0)
 :pattern ( ($generated@@365 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (= (type ($generated@@373 $generated@@374)) $generated@@135)
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@64) (= (type $generated@@377) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@353 ($generated@@373 $generated@@375) $generated@@376 $generated@@377) ($generated@@74 $generated@@375 $generated@@376 $generated@@377)))
 :pattern ( ($generated@@353 ($generated@@373 $generated@@375) $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@380 T@T) ) (! (= (type ($generated@@379 $generated@@380)) ($generated@@76 $generated@@380 $generated@@2))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@79 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@76 $generated@@382 $generated@@2)) (and (= (= ($generated@@378 $generated@@381) 0) (= $generated@@381 ($generated@@379 $generated@@382))) (=> (not (= ($generated@@378 $generated@@381) 0)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (< 0 ($generated ($generated@@81 $generated@@381 $generated@@383))))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) ($generated@@162 $generated@@385 $generated@@386))
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@T) ) (! (let (($generated@@389 (type $generated@@387)))
 (not ($generated@@0 ($generated@@81 ($generated@@160 ($generated@@384 $generated@@389 $generated@@388)) $generated@@387))))
 :pattern ( (let (($generated@@389 (type $generated@@387)))
($generated@@81 ($generated@@160 ($generated@@384 $generated@@389 $generated@@388)) $generated@@387)))
)))
(assert (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (! (= (type ($generated@@390 $generated@@391 $generated@@392)) ($generated@@134 $generated@@391 $generated@@392))
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@T) ) (! (let (($generated@@395 (type $generated@@393)))
 (not ($generated@@0 ($generated@@81 ($generated@@192 ($generated@@390 $generated@@395 $generated@@394)) $generated@@393))))
 :pattern ( (let (($generated@@395 (type $generated@@393)))
($generated@@81 ($generated@@192 ($generated@@390 $generated@@395 $generated@@394)) $generated@@393)))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@79 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@76 $generated@@397 $generated@@2)) (= ($generated@@232 $generated@@396) (forall (($generated@@398 T@U) ) (!  (=> (= (type $generated@@398) $generated@@397) (and (<= 0 ($generated ($generated@@81 $generated@@396 $generated@@398))) (<= ($generated ($generated@@81 $generated@@396 $generated@@398)) ($generated@@378 $generated@@396))))
 :pattern ( ($generated@@81 $generated@@396 $generated@@398))
)))))
 :pattern ( ($generated@@232 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@164 (type $generated@@399))))
(let (($generated@@401 ($generated@@163 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@162 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@384 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) ($generated@@0 ($generated@@81 ($generated@@160 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@160 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@164 (type $generated@@404))))
(= (type ($generated@@403 $generated@@404)) ($generated@@76 $generated@@405 $generated@@4)))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@164 (type $generated@@406))))
(let (($generated@@408 ($generated@@163 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@162 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@384 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@407) ($generated@@0 ($generated@@81 ($generated@@403 $generated@@406) $generated@@409)))
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@403 $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@141 (type $generated@@410))))
(let (($generated@@412 ($generated@@140 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@134 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@390 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) ($generated@@0 ($generated@@81 ($generated@@192 $generated@@410) $generated@@413)))
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
))))))
 :pattern ( ($generated@@192 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@141 (type $generated@@415))))
(= (type ($generated@@414 $generated@@415)) ($generated@@76 $generated@@416 $generated@@4)))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@141 (type $generated@@417))))
(let (($generated@@419 ($generated@@140 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@134 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@390 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@418) ($generated@@0 ($generated@@81 ($generated@@414 $generated@@417) $generated@@420)))
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@414 $generated@@417))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@422) $generated@@64)) (= ($generated@@137 $generated@@421 ($generated@@231 $generated@@422)) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@421 $generated@@423)))) ($generated@@139 $generated@@423 $generated@@422))
 :pattern ( ($generated@@81 $generated@@421 $generated@@423))
))))
 :pattern ( ($generated@@137 $generated@@421 ($generated@@231 $generated@@422)))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@79 (type $generated@@426))))
(= (type ($generated@@425 $generated@@426 $generated@@427)) ($generated@@76 $generated@@428 $generated@@4)))
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@79 (type $generated@@429))))
 (=> (and (and (= (type $generated@@429) ($generated@@76 $generated@@431 $generated@@4)) (= (type $generated@@430) ($generated@@76 $generated@@431 $generated@@4))) ($generated@@424 $generated@@429 $generated@@430)) (and (= ($generated@@425 ($generated@@304 $generated@@429 $generated@@430) $generated@@429) $generated@@430) (= ($generated@@425 ($generated@@304 $generated@@429 $generated@@430) $generated@@430) $generated@@429))))
 :pattern ( ($generated@@304 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
 (=> (and (= (type $generated@@432) ($generated@@76 $generated@@435 $generated@@4)) (= (type $generated@@433) ($generated@@76 $generated@@435 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@425 $generated@@432 $generated@@433) $generated@@434))  (and ($generated@@0 ($generated@@81 $generated@@432 $generated@@434)) (not ($generated@@0 ($generated@@81 $generated@@433 $generated@@434)))))))
 :pattern ( ($generated@@81 ($generated@@425 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (= (type $generated@@436) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@437) $generated@@64)) (= (type $generated@@438) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@436 ($generated@@341 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@135) ($generated@@0 ($generated@@81 $generated@@436 $generated@@439))) ($generated@@353 $generated@@439 $generated@@437 $generated@@438))
 :pattern ( ($generated@@81 $generated@@436 $generated@@439))
))))
 :pattern ( ($generated@@74 $generated@@436 ($generated@@341 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (= (type $generated@@440) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@441) $generated@@64)) (= (type $generated@@442) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@440 ($generated@@346 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@135) ($generated@@0 ($generated@@81 $generated@@440 $generated@@443))) ($generated@@353 $generated@@443 $generated@@441 $generated@@442))
 :pattern ( ($generated@@81 $generated@@440 $generated@@443))
))))
 :pattern ( ($generated@@74 $generated@@440 ($generated@@346 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 (type $generated@@444)))
(= ($generated ($generated@@81 ($generated@@379 $generated@@445) $generated@@444)) 0))
 :pattern ( (let (($generated@@445 (type $generated@@444)))
($generated@@81 ($generated@@379 $generated@@445) $generated@@444)))
)))
(assert  (and (forall (($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@448)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@446 $generated@@448))
)) (forall (($generated@@449 T@T) ($generated@@450 T@U) ) (! (= (type ($generated@@447 $generated@@449 $generated@@450)) $generated@@449)
 :pattern ( ($generated@@447 $generated@@449 $generated@@450))
))))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) ($generated@@162 $generated@@135 $generated@@135)) (= (type $generated@@452) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@446 $generated@@451) $generated@@452))  (and ($generated@@0 ($generated@@81 ($generated@@160 $generated@@451) ($generated@@225 ($generated@@447 $generated@@218 $generated@@452)))) (= ($generated@@81 ($generated@@183 $generated@@451) ($generated@@225 ($generated@@447 $generated@@218 $generated@@452))) ($generated@@226 ($generated@@447 $generated@@218 $generated@@452))))))
 :pattern ( ($generated@@81 ($generated@@446 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) ($generated@@134 $generated@@135 $generated@@135)) (= (type $generated@@456) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@453 $generated@@455) $generated@@456))  (and ($generated@@0 ($generated@@81 ($generated@@192 $generated@@455) ($generated@@225 ($generated@@447 $generated@@218 $generated@@456)))) (= ($generated@@81 ($generated@@206 $generated@@455) ($generated@@225 ($generated@@447 $generated@@218 $generated@@456))) ($generated@@226 ($generated@@447 $generated@@218 $generated@@456))))))
 :pattern ( ($generated@@81 ($generated@@453 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(let (($generated@@460 ($generated@@163 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@162 $generated@@460 $generated@@459)) (= ($generated@@0 ($generated@@81 ($generated@@403 $generated@@457) $generated@@458)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) (and ($generated@@0 ($generated@@81 ($generated@@160 $generated@@457) $generated@@461)) (= $generated@@458 ($generated@@81 ($generated@@183 $generated@@457) $generated@@461))))
 :pattern ( ($generated@@81 ($generated@@160 $generated@@457) $generated@@461))
 :pattern ( ($generated@@81 ($generated@@183 $generated@@457) $generated@@461))
))))))
 :pattern ( ($generated@@81 ($generated@@403 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (let (($generated@@464 (type $generated@@463)))
(let (($generated@@465 ($generated@@140 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@134 $generated@@465 $generated@@464)) (= ($generated@@0 ($generated@@81 ($generated@@414 $generated@@462) $generated@@463)) (exists (($generated@@466 T@U) ) (!  (and (= (type $generated@@466) $generated@@465) (and ($generated@@0 ($generated@@81 ($generated@@192 $generated@@462) $generated@@466)) (= $generated@@463 ($generated@@81 ($generated@@206 $generated@@462) $generated@@466))))
 :pattern ( ($generated@@81 ($generated@@192 $generated@@462) $generated@@466))
 :pattern ( ($generated@@81 ($generated@@206 $generated@@462) $generated@@466))
))))))
 :pattern ( ($generated@@81 ($generated@@414 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@162 $generated@@135 $generated@@135)) (= (type $generated@@471) $generated@@64)) (= (type $generated@@472) $generated@@64)) (= (type $generated@@473) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@160 $generated@@470) $generated@@474))) (and ($generated@@353 ($generated@@81 ($generated@@183 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@353 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@81 ($generated@@183 $generated@@470) $generated@@474))
 :pattern ( ($generated@@81 ($generated@@160 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@74 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (and (= (type $generated@@475) ($generated@@134 $generated@@135 $generated@@135)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) $generated@@64)) (= (type $generated@@478) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@475 ($generated@@138 $generated@@476 $generated@@477) $generated@@478) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@192 $generated@@475) $generated@@479))) (and ($generated@@353 ($generated@@81 ($generated@@206 $generated@@475) $generated@@479) $generated@@477 $generated@@478) ($generated@@353 $generated@@479 $generated@@476 $generated@@478)))
 :pattern ( ($generated@@81 ($generated@@206 $generated@@475) $generated@@479))
 :pattern ( ($generated@@81 ($generated@@192 $generated@@475) $generated@@479))
))))
 :pattern ( ($generated@@74 $generated@@475 ($generated@@138 $generated@@476 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@481)))
 (=> (and (and (= (type $generated@@480) ($generated@@76 $generated@@483 $generated@@4)) (= (type $generated@@482) $generated@@483)) ($generated@@0 ($generated@@81 $generated@@480 $generated@@482))) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@480 $generated@@481) $generated@@482))))
 :pattern ( ($generated@@320 $generated@@480 $generated@@481) ($generated@@81 $generated@@480 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
 (=> (and (and (= (type $generated@@484) ($generated@@76 $generated@@487 $generated@@4)) (= (type $generated@@485) ($generated@@76 $generated@@487 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@484 $generated@@486))) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@484 $generated@@485) $generated@@486))))
 :pattern ( ($generated@@304 $generated@@484 $generated@@485) ($generated@@81 $generated@@484 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
 (=> (and (and (= (type $generated@@488) ($generated@@76 $generated@@491 $generated@@4)) (= (type $generated@@489) ($generated@@76 $generated@@491 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@489 $generated@@490))) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@488 $generated@@489) $generated@@490))))
 :pattern ( ($generated@@304 $generated@@488 $generated@@489) ($generated@@81 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (! (let (($generated@@495 (type $generated@@493)))
 (=> (and (= (type $generated@@492) ($generated@@76 $generated@@495 $generated@@4)) (= (type $generated@@494) $generated@@495)) (= ($generated@@0 ($generated@@81 ($generated@@320 $generated@@492 $generated@@493) $generated@@494))  (or (= $generated@@494 $generated@@493) ($generated@@0 ($generated@@81 $generated@@492 $generated@@494))))))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@492 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
 (=> (and (and (= (type $generated@@496) ($generated@@76 $generated@@499 $generated@@4)) (= (type $generated@@497) ($generated@@76 $generated@@499 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@497 $generated@@498))) (not ($generated@@0 ($generated@@81 ($generated@@425 $generated@@496 $generated@@497) $generated@@498)))))
 :pattern ( ($generated@@425 $generated@@496 $generated@@497) ($generated@@81 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@141 (type $generated@@500))))
(let (($generated@@502 ($generated@@140 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@134 $generated@@502 $generated@@501)) (= (= $generated@@500 ($generated@@390 $generated@@502 $generated@@501)) (= ($generated@@192 $generated@@500) ($generated@@321 $generated@@502))))))
 :pattern ( ($generated@@192 $generated@@500))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@141 (type $generated@@503))))
(let (($generated@@505 ($generated@@140 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@134 $generated@@505 $generated@@504)) (= (= $generated@@503 ($generated@@390 $generated@@505 $generated@@504)) (= ($generated@@414 $generated@@503) ($generated@@321 $generated@@504))))))
 :pattern ( ($generated@@414 $generated@@503))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@141 (type $generated@@506))))
(let (($generated@@508 ($generated@@140 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@134 $generated@@508 $generated@@507)) (= (= $generated@@506 ($generated@@390 $generated@@508 $generated@@507)) (= ($generated@@453 $generated@@506) ($generated@@321 $generated@@135))))))
 :pattern ( ($generated@@453 $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@164 (type $generated@@509))))
(let (($generated@@511 ($generated@@163 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@162 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@384 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (and (and (= (type $generated@@512) $generated@@135) (= (type $generated@@513) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@446 $generated@@509) ($generated@@373 ($generated@@311 $generated@@512 $generated@@513)))))
 :no-pattern (type $generated@@512)
 :no-pattern (type $generated@@513)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
))))))
 :pattern ( ($generated@@446 $generated@@509))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@141 (type $generated@@514))))
(let (($generated@@516 ($generated@@140 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@134 $generated@@516 $generated@@515)) (or (= $generated@@514 ($generated@@390 $generated@@516 $generated@@515)) (exists (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (and (and (= (type $generated@@517) $generated@@135) (= (type $generated@@518) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@453 $generated@@514) ($generated@@373 ($generated@@311 $generated@@517 $generated@@518)))))
 :no-pattern (type $generated@@517)
 :no-pattern (type $generated@@518)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
))))))
 :pattern ( ($generated@@453 $generated@@514))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@135) ($generated@@139 $generated@@519 $generated@@46)) (and (= ($generated@@373 ($generated@@447 $generated@@2 $generated@@519)) $generated@@519) ($generated@@137 ($generated@@447 $generated@@2 $generated@@519) $generated@@46)))
 :pattern ( ($generated@@139 $generated@@519 $generated@@46))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@135) ($generated@@139 $generated@@520 $generated@@47)) (and (= ($generated@@373 ($generated@@447 $generated@@3 $generated@@520)) $generated@@520) ($generated@@137 ($generated@@447 $generated@@3 $generated@@520) $generated@@47)))
 :pattern ( ($generated@@139 $generated@@520 $generated@@47))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@135) ($generated@@139 $generated@@521 $generated@@44)) (and (= ($generated@@373 ($generated@@447 $generated@@4 $generated@@521)) $generated@@521) ($generated@@137 ($generated@@447 $generated@@4 $generated@@521) $generated@@44)))
 :pattern ( ($generated@@139 $generated@@521 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@522) 20))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@135) ($generated@@139 $generated@@523 $generated@@45)) (and (= ($generated@@373 ($generated@@447 $generated@@522 $generated@@523)) $generated@@523) ($generated@@137 ($generated@@447 $generated@@522 $generated@@523) $generated@@45)))
 :pattern ( ($generated@@139 $generated@@523 $generated@@45))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@139 ($generated@@373 $generated@@524) $generated@@525) ($generated@@137 $generated@@524 $generated@@525)))
 :pattern ( ($generated@@139 ($generated@@373 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 ($generated@@79 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@76 $generated@@527 $generated@@2)) (<= 0 ($generated@@378 $generated@@526))))
 :pattern ( ($generated@@378 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@368 (type $generated@@528))))
 (=> (= (type $generated@@528) ($generated@@367 $generated@@529)) (<= 0 ($generated@@366 $generated@@528))))
 :pattern ( ($generated@@366 $generated@@528))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (= ($generated@@530 ($generated@@467 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@467 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (= ($generated@@534 ($generated@@467 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@467 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (= ($generated@@72 ($generated@@467 $generated@@538 $generated@@539)) $generated@@58))
 :pattern ( ($generated@@467 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@64)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= ($generated@@540 ($generated@@138 $generated@@542 $generated@@543)) $generated@@542))
 :pattern ( ($generated@@138 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= ($generated@@544 ($generated@@138 $generated@@546 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@138 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@64) (= (type $generated@@549) $generated@@64)) (= ($generated@@72 ($generated@@138 $generated@@548 $generated@@549)) $generated@@59))
 :pattern ( ($generated@@138 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@135) (= (type $generated@@551) $generated@@135)) (= ($generated@@359 ($generated@@311 $generated@@550 $generated@@551)) $generated@@61))
 :pattern ( ($generated@@311 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@64)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@64) (= (type $generated@@555) $generated@@64)) (= ($generated@@552 ($generated@@217 $generated@@554 $generated@@555)) $generated@@554))
 :pattern ( ($generated@@217 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@64) (= (type $generated@@559) $generated@@64)) (= ($generated@@556 ($generated@@217 $generated@@558 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@217 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@135) (= (type $generated@@561) $generated@@135)) (= ($generated@@225 ($generated@@311 $generated@@560 $generated@@561)) $generated@@560))
 :pattern ( ($generated@@311 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@135) (= (type $generated@@563) $generated@@135)) (= ($generated@@226 ($generated@@311 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@311 $generated@@562 $generated@@563))
)))
(assert  (and (forall (($generated@@566 T@U) ) (! (= (type ($generated@@564 $generated@@566)) $generated@@64)
 :pattern ( ($generated@@564 $generated@@566))
)) (forall (($generated@@567 T@U) ($generated@@568 Int) ) (! (let (($generated@@569 ($generated@@368 (type $generated@@567))))
(= (type ($generated@@565 $generated@@567 $generated@@568)) $generated@@569))
 :pattern ( ($generated@@565 $generated@@567 $generated@@568))
))))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@367 $generated@@135)) (= (type $generated@@571) $generated@@64)) (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@570 ($generated@@564 $generated@@571) $generated@@572) (forall (($generated@@573 Int) ) (!  (=> (and (<= 0 $generated@@573) (< $generated@@573 ($generated@@366 $generated@@570))) ($generated@@353 ($generated@@565 $generated@@570 $generated@@573) $generated@@571 $generated@@572))
 :pattern ( ($generated@@565 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@74 $generated@@570 ($generated@@564 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
 (=> (= (type $generated@@574) ($generated@@76 $generated@@576 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@574 $generated@@575) $generated@@575))))
 :pattern ( ($generated@@320 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@577 ($generated@@75 $generated@@578)) $generated@@578)
 :pattern ( ($generated@@75 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@64)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@64) (= ($generated@@579 ($generated@@341 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@341 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@64) (= ($generated@@72 ($generated@@341 $generated@@582)) $generated@@54))
 :pattern ( ($generated@@341 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@64)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@64) (= ($generated@@583 ($generated@@346 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@346 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@64) (= ($generated@@72 ($generated@@346 $generated@@586)) $generated@@55))
 :pattern ( ($generated@@346 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@64)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@64) (= ($generated@@587 ($generated@@231 $generated@@589)) $generated@@589))
 :pattern ( ($generated@@231 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@64) (= ($generated@@72 ($generated@@231 $generated@@590)) $generated@@56))
 :pattern ( ($generated@@231 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@64)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@64) (= ($generated@@591 ($generated@@564 $generated@@593)) $generated@@593))
 :pattern ( ($generated@@564 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@64) (= ($generated@@72 ($generated@@564 $generated@@594)) $generated@@57))
 :pattern ( ($generated@@564 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 (type $generated@@595)))
(= ($generated@@447 $generated@@596 ($generated@@373 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@373 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@162 $generated@@135 $generated@@135)) (= (type $generated@@598) $generated@@64)) (= (type $generated@@599) $generated@@64)) (= ($generated@@137 $generated@@597 ($generated@@467 $generated@@598 $generated@@599)) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@160 $generated@@597) $generated@@600))) (and ($generated@@139 ($generated@@81 ($generated@@183 $generated@@597) $generated@@600) $generated@@599) ($generated@@139 $generated@@600 $generated@@598)))
 :pattern ( ($generated@@81 ($generated@@183 $generated@@597) $generated@@600))
 :pattern ( ($generated@@81 ($generated@@160 $generated@@597) $generated@@600))
))))
 :pattern ( ($generated@@137 $generated@@597 ($generated@@467 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@601) ($generated@@134 $generated@@135 $generated@@135)) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) $generated@@64)) (= ($generated@@137 $generated@@601 ($generated@@138 $generated@@602 $generated@@603)) (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@192 $generated@@601) $generated@@604))) (and ($generated@@139 ($generated@@81 ($generated@@206 $generated@@601) $generated@@604) $generated@@603) ($generated@@139 $generated@@604 $generated@@602)))
 :pattern ( ($generated@@81 ($generated@@206 $generated@@601) $generated@@604))
 :pattern ( ($generated@@81 ($generated@@192 $generated@@601) $generated@@604))
))))
 :pattern ( ($generated@@137 $generated@@601 ($generated@@138 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@135) (= (type $generated@@608) $generated@@135)) (< ($generated@@605 $generated@@607) ($generated@@606 ($generated@@311 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@311 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@135) (= (type $generated@@610) $generated@@135)) (< ($generated@@605 $generated@@610) ($generated@@606 ($generated@@311 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@311 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@79 (type $generated@@611))))
 (=> (and (= (type $generated@@611) ($generated@@76 $generated@@613 $generated@@4)) (= (type $generated@@612) ($generated@@76 $generated@@613 $generated@@4))) (= ($generated@@304 $generated@@611 ($generated@@304 $generated@@611 $generated@@612)) ($generated@@304 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@304 $generated@@611 ($generated@@304 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@64) (= (type $generated@@615) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@616) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@319 $generated@@614 $generated@@615) $generated@@616))  (and ($generated@@139 $generated@@616 $generated@@614) ($generated@@0 ($generated@@81 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@81 ($generated@@319 $generated@@614 $generated@@615) $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@135) (= (type $generated@@618) $generated@@135)) (= (type $generated@@619) ($generated@@76 $generated@@135 $generated@@135))) (= (type $generated@@620) $generated@@135)) (= ($generated@@81 ($generated@@322 $generated@@617 $generated@@618 $generated@@619) $generated@@620) (ite (= $generated@@620 $generated@@617) $generated@@618 ($generated@@81 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@617 $generated@@618 $generated@@619) $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@135) (= (type $generated@@622) $generated@@64)) (= (type $generated@@623) $generated@@64)) ($generated@@139 $generated@@621 ($generated@@467 $generated@@622 $generated@@623))) (and (= ($generated@@373 ($generated@@447 ($generated@@162 $generated@@135 $generated@@135) $generated@@621)) $generated@@621) ($generated@@137 ($generated@@447 ($generated@@162 $generated@@135 $generated@@135) $generated@@621) ($generated@@467 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@139 $generated@@621 ($generated@@467 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) $generated@@135) (= (type $generated@@625) $generated@@64)) (= (type $generated@@626) $generated@@64)) ($generated@@139 $generated@@624 ($generated@@138 $generated@@625 $generated@@626))) (and (= ($generated@@373 ($generated@@447 ($generated@@134 $generated@@135 $generated@@135) $generated@@624)) $generated@@624) ($generated@@137 ($generated@@447 ($generated@@134 $generated@@135 $generated@@135) $generated@@624) ($generated@@138 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@139 $generated@@624 ($generated@@138 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) $generated@@64) (= (type $generated@@628) $generated@@64)) (= (type $generated@@629) $generated@@135)) ($generated@@139 $generated@@629 ($generated@@217 $generated@@627 $generated@@628))) (and (= ($generated@@373 ($generated@@447 $generated@@218 $generated@@629)) $generated@@629) ($generated@@137 ($generated@@447 $generated@@218 $generated@@629) ($generated@@217 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@139 $generated@@629 ($generated@@217 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ) (! (let (($generated@@631 (type $generated@@630)))
 (not ($generated@@0 ($generated@@81 ($generated@@321 $generated@@631) $generated@@630))))
 :pattern ( (let (($generated@@631 (type $generated@@630)))
($generated@@81 ($generated@@321 $generated@@631) $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@632) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@633) ($generated@@76 $generated@@135 $generated@@135))) (= (type $generated@@634) $generated@@64)) (= (type $generated@@635) $generated@@64)) (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@135) ($generated@@0 ($generated@@81 $generated@@632 $generated@@636))) (and ($generated@@139 $generated@@636 $generated@@634) ($generated@@139 ($generated@@81 $generated@@633 $generated@@636) $generated@@635)))
 :no-pattern (type $generated@@636)
 :no-pattern ($generated $generated@@636)
 :no-pattern ($generated@@0 $generated@@636)
))) ($generated@@137 ($generated@@161 $generated@@632 $generated@@633 ($generated@@467 $generated@@634 $generated@@635)) ($generated@@467 $generated@@634 $generated@@635)))
 :pattern ( ($generated@@161 $generated@@632 $generated@@633 ($generated@@467 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@637) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@638) ($generated@@76 $generated@@135 $generated@@135))) (= (type $generated@@639) $generated@@64)) (= (type $generated@@640) $generated@@64)) (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@135) ($generated@@0 ($generated@@81 $generated@@637 $generated@@641))) (and ($generated@@139 $generated@@641 $generated@@639) ($generated@@139 ($generated@@81 $generated@@638 $generated@@641) $generated@@640)))
 :no-pattern (type $generated@@641)
 :no-pattern ($generated $generated@@641)
 :no-pattern ($generated@@0 $generated@@641)
))) ($generated@@137 ($generated@@161 $generated@@637 $generated@@638 ($generated@@138 $generated@@639 $generated@@640)) ($generated@@138 $generated@@639 $generated@@640)))
 :pattern ( ($generated@@193 $generated@@637 $generated@@638 ($generated@@138 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@643 T@U) ) (! (= (type ($generated@@642 $generated@@643)) $generated@@69)
 :pattern ( ($generated@@642 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@64) (= (type $generated@@645) $generated@@64)) (and (= ($generated@@72 ($generated@@217 $generated@@644 $generated@@645)) $generated@@62) (= ($generated@@642 ($generated@@217 $generated@@644 $generated@@645)) $generated@@63)))
 :pattern ( ($generated@@217 $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@218) (= ($generated@@605 ($generated@@373 $generated@@646)) ($generated@@606 $generated@@646)))
 :pattern ( ($generated@@605 ($generated@@373 $generated@@646)))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@647) $generated@@64) (= (type $generated@@648) $generated@@64)) (= (type $generated@@649) ($generated@@134 $generated@@135 $generated@@135))) (= (type $generated@@650) $generated@@135)) (= (type $generated@@651) $generated@@135)) (or ($generated@@136 $generated@@647 $generated@@648 $generated@@649 $generated@@650 $generated@@651) (and (not (= 0 $generated@@132)) (and (and ($generated@@137 $generated@@649 ($generated@@138 $generated@@647 $generated@@648)) ($generated@@139 $generated@@650 $generated@@647)) ($generated@@139 $generated@@651 $generated@@648))))) (= ($generated@@133 $generated@@647 $generated@@648 $generated@@649 $generated@@650 $generated@@651) ($generated@@193 ($generated@@319 $generated@@647 ($generated@@304 ($generated@@320 ($generated@@321 $generated@@135) $generated@@650) ($generated@@192 $generated@@649))) ($generated@@322 $generated@@650 $generated@@651 ($generated@@206 $generated@@649)) ($generated@@138 $generated@@647 $generated@@648))))
 :pattern ( ($generated@@133 $generated@@647 $generated@@648 $generated@@649 $generated@@650 $generated@@651))
))))
(assert (forall (($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@135) ($generated@@139 $generated@@652 ($generated@@75 0))) (and (= ($generated@@373 ($generated@@447 $generated@@2 $generated@@652)) $generated@@652) ($generated@@137 ($generated@@447 ($generated@@76 $generated@@135 $generated@@4) $generated@@652) ($generated@@75 0))))
 :pattern ( ($generated@@139 $generated@@652 ($generated@@75 0)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@653) $generated@@135) (= (type $generated@@654) $generated@@64)) ($generated@@139 $generated@@653 ($generated@@341 $generated@@654))) (and (= ($generated@@373 ($generated@@447 ($generated@@76 $generated@@135 $generated@@4) $generated@@653)) $generated@@653) ($generated@@137 ($generated@@447 ($generated@@76 $generated@@135 $generated@@4) $generated@@653) ($generated@@341 $generated@@654))))
 :pattern ( ($generated@@139 $generated@@653 ($generated@@341 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@655) $generated@@135) (= (type $generated@@656) $generated@@64)) ($generated@@139 $generated@@655 ($generated@@346 $generated@@656))) (and (= ($generated@@373 ($generated@@447 ($generated@@76 $generated@@135 $generated@@4) $generated@@655)) $generated@@655) ($generated@@137 ($generated@@447 ($generated@@76 $generated@@135 $generated@@4) $generated@@655) ($generated@@346 $generated@@656))))
 :pattern ( ($generated@@139 $generated@@655 ($generated@@346 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (= (type $generated@@657) $generated@@135) (= (type $generated@@658) $generated@@64)) ($generated@@139 $generated@@657 ($generated@@231 $generated@@658))) (and (= ($generated@@373 ($generated@@447 ($generated@@76 $generated@@135 $generated@@2) $generated@@657)) $generated@@657) ($generated@@137 ($generated@@447 ($generated@@76 $generated@@135 $generated@@2) $generated@@657) ($generated@@231 $generated@@658))))
 :pattern ( ($generated@@139 $generated@@657 ($generated@@231 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (= (type $generated@@659) $generated@@135) (= (type $generated@@660) $generated@@64)) ($generated@@139 $generated@@659 ($generated@@564 $generated@@660))) (and (= ($generated@@373 ($generated@@447 ($generated@@367 $generated@@135) $generated@@659)) $generated@@659) ($generated@@137 ($generated@@447 ($generated@@367 $generated@@135) $generated@@659) ($generated@@564 $generated@@660))))
 :pattern ( ($generated@@139 $generated@@659 ($generated@@564 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@661) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@662) $generated@@64)) (= (type $generated@@663) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@661 ($generated@@231 $generated@@662) $generated@@663) (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@661 $generated@@664)))) ($generated@@353 $generated@@664 $generated@@662 $generated@@663))
 :pattern ( ($generated@@81 $generated@@661 $generated@@664))
))))
 :pattern ( ($generated@@74 $generated@@661 ($generated@@231 $generated@@662) $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (! (let (($generated@@667 ($generated@@79 (type $generated@@665))))
 (=> (and (= (type $generated@@665) ($generated@@76 $generated@@667 $generated@@4)) (= (type $generated@@666) ($generated@@76 $generated@@667 $generated@@4))) (= ($generated@@424 $generated@@665 $generated@@666) (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@667) (or (not ($generated@@0 ($generated@@81 $generated@@665 $generated@@668))) (not ($generated@@0 ($generated@@81 $generated@@666 $generated@@668)))))
 :pattern ( ($generated@@81 $generated@@665 $generated@@668))
 :pattern ( ($generated@@81 $generated@@666 $generated@@668))
)))))
 :pattern ( ($generated@@424 $generated@@665 $generated@@666))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) $generated@@218) (= (type $generated@@670) $generated@@64)) (= (type $generated@@671) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@352 $generated@@671) (and ($generated@@216 $generated@@669) (exists (($generated@@672 T@U) ) (!  (and (= (type $generated@@672) $generated@@64) ($generated@@74 $generated@@669 ($generated@@217 $generated@@670 $generated@@672) $generated@@671))
 :pattern ( ($generated@@74 $generated@@669 ($generated@@217 $generated@@670 $generated@@672) $generated@@671))
))))) ($generated@@353 ($generated@@225 $generated@@669) $generated@@670 $generated@@671))
 :pattern ( ($generated@@353 ($generated@@225 $generated@@669) $generated@@670 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) $generated@@218) (= (type $generated@@674) $generated@@64)) (= (type $generated@@675) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@352 $generated@@675) (and ($generated@@216 $generated@@673) (exists (($generated@@676 T@U) ) (!  (and (= (type $generated@@676) $generated@@64) ($generated@@74 $generated@@673 ($generated@@217 $generated@@676 $generated@@674) $generated@@675))
 :pattern ( ($generated@@74 $generated@@673 ($generated@@217 $generated@@676 $generated@@674) $generated@@675))
))))) ($generated@@353 ($generated@@226 $generated@@673) $generated@@674 $generated@@675))
 :pattern ( ($generated@@353 ($generated@@226 $generated@@673) $generated@@674 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@135) (= (type $generated@@678) $generated@@135)) (= ($generated@@311 ($generated@@318 $generated@@677) ($generated@@318 $generated@@678)) ($generated@@318 ($generated@@311 $generated@@677 $generated@@678))))
 :pattern ( ($generated@@311 ($generated@@318 $generated@@677) ($generated@@318 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ) (! (= ($generated@@373 ($generated@@318 $generated@@679)) ($generated@@318 ($generated@@373 $generated@@679)))
 :pattern ( ($generated@@373 ($generated@@318 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ) (! (let (($generated@@681 ($generated@@368 (type $generated@@680))))
 (=> (and (= (type $generated@@680) ($generated@@367 $generated@@681)) (= ($generated@@366 $generated@@680) 0)) (= $generated@@680 ($generated@@365 $generated@@681))))
 :pattern ( ($generated@@366 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (! (let (($generated@@685 (type $generated@@683)))
 (=> (and (and (= (type $generated@@682) ($generated@@76 $generated@@685 $generated@@2)) (= (type $generated@@684) $generated@@2)) (<= 0 ($generated $generated@@684))) (= ($generated@@378 ($generated@@82 $generated@@682 $generated@@683 $generated@@684)) (+ (- ($generated@@378 $generated@@682) ($generated ($generated@@81 $generated@@682 $generated@@683))) ($generated $generated@@684)))))
 :pattern ( ($generated@@378 ($generated@@82 $generated@@682 $generated@@683 $generated@@684)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (! (let (($generated@@689 (type $generated@@688)))
 (=> (and (= (type $generated@@686) ($generated@@76 $generated@@689 $generated@@4)) (= (type $generated@@687) ($generated@@76 $generated@@689 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@304 $generated@@686 $generated@@687) $generated@@688))  (or ($generated@@0 ($generated@@81 $generated@@686 $generated@@688)) ($generated@@0 ($generated@@81 $generated@@687 $generated@@688))))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@686 $generated@@687) $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@691) $generated@@2)) ($generated@@74 $generated@@691 $generated@@46 $generated@@690))
 :pattern ( ($generated@@74 $generated@@691 $generated@@46 $generated@@690))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@692) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@693) $generated@@3)) ($generated@@74 $generated@@693 $generated@@47 $generated@@692))
 :pattern ( ($generated@@74 $generated@@693 $generated@@47 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (= (type $generated@@694) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@695) $generated@@4)) ($generated@@74 $generated@@695 $generated@@44 $generated@@694))
 :pattern ( ($generated@@74 $generated@@695 $generated@@44 $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@696) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@697) $generated@@522)) ($generated@@74 $generated@@697 $generated@@45 $generated@@696))
 :pattern ( ($generated@@74 $generated@@697 $generated@@45 $generated@@696))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@698) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@699) $generated@@135)) ($generated@@74 $generated@@699 $generated@@48 $generated@@698))
 :pattern ( ($generated@@74 $generated@@699 $generated@@48 $generated@@698))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@700) ($generated@@367 $generated@@135)) (= (type $generated@@701) $generated@@64)) (= ($generated@@137 $generated@@700 ($generated@@564 $generated@@701)) (forall (($generated@@702 Int) ) (!  (=> (and (<= 0 $generated@@702) (< $generated@@702 ($generated@@366 $generated@@700))) ($generated@@139 ($generated@@565 $generated@@700 $generated@@702) $generated@@701))
 :pattern ( ($generated@@565 $generated@@700 $generated@@702))
))))
 :pattern ( ($generated@@137 $generated@@700 ($generated@@564 $generated@@701)))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 Int) ) (!  (=> (= (type $generated@@704) ($generated@@367 $generated@@135)) (=> (and (<= 0 $generated@@705) (< $generated@@705 ($generated@@366 $generated@@704))) (< ($generated@@606 ($generated@@447 $generated@@218 ($generated@@565 $generated@@704 $generated@@705))) ($generated@@703 $generated@@704))))
 :pattern ( ($generated@@606 ($generated@@447 $generated@@218 ($generated@@565 $generated@@704 $generated@@705))))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (and (= (type $generated@@706) ($generated@@162 $generated@@135 $generated@@135)) (= (type $generated@@707) $generated@@64)) (= (type $generated@@708) $generated@@64)) ($generated@@137 $generated@@706 ($generated@@467 $generated@@707 $generated@@708))) (and (and ($generated@@137 ($generated@@160 $generated@@706) ($generated@@341 $generated@@707)) ($generated@@137 ($generated@@403 $generated@@706) ($generated@@341 $generated@@708))) ($generated@@137 ($generated@@446 $generated@@706) ($generated@@341 ($generated@@217 $generated@@707 $generated@@708)))))
 :pattern ( ($generated@@137 $generated@@706 ($generated@@467 $generated@@707 $generated@@708)))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (and (= (type $generated@@709) ($generated@@134 $generated@@135 $generated@@135)) (= (type $generated@@710) $generated@@64)) (= (type $generated@@711) $generated@@64)) ($generated@@137 $generated@@709 ($generated@@138 $generated@@710 $generated@@711))) (and (and ($generated@@137 ($generated@@192 $generated@@709) ($generated@@346 $generated@@710)) ($generated@@137 ($generated@@414 $generated@@709) ($generated@@346 $generated@@711))) ($generated@@137 ($generated@@453 $generated@@709) ($generated@@346 ($generated@@217 $generated@@710 $generated@@711)))))
 :pattern ( ($generated@@137 $generated@@709 ($generated@@138 $generated@@710 $generated@@711)))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@2) ($generated@@137 $generated@@712 $generated@@46))
 :pattern ( ($generated@@137 $generated@@712 $generated@@46))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@3) ($generated@@137 $generated@@713 $generated@@47))
 :pattern ( ($generated@@137 $generated@@713 $generated@@47))
)))
(assert (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@4) ($generated@@137 $generated@@714 $generated@@44))
 :pattern ( ($generated@@137 $generated@@714 $generated@@44))
)))
(assert (forall (($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@522) ($generated@@137 $generated@@715 $generated@@45))
 :pattern ( ($generated@@137 $generated@@715 $generated@@45))
)))
(assert (forall (($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@135) ($generated@@137 $generated@@716 $generated@@48))
 :pattern ( ($generated@@137 $generated@@716 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () T@U)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 () T@U)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 (T@U) Bool)
(declare-fun $generated@@726 () T@U)
(declare-fun $generated@@727 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@717) $generated@@135) (= (type $generated@@720) $generated@@64)) (= (type $generated@@721) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@718) $generated@@135)) (= (type $generated@@719) ($generated@@134 $generated@@135 $generated@@135))) (= (type $generated@@722) ($generated@@238 $generated@@77 $generated@@4))) (= (type $generated@@723) $generated@@77)) (= (type $generated@@724) ($generated@@238 $generated@@77 $generated@@4))) (= (type $generated@@726) $generated@@64)) (= (type $generated@@727) $generated@@135)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@728 true))
(let (($generated@@729  (=> (not (= $generated@@717 $generated@@718)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@0 ($generated@@81 ($generated@@192 $generated@@719) $generated@@717))) (=> ($generated@@0 ($generated@@81 ($generated@@192 $generated@@719) $generated@@717)) (=> (= (ControlFlow 0 6) 2) $generated@@728))))))
(let (($generated@@730  (=> (and (= $generated@@717 $generated@@718) (= (ControlFlow 0 5) 2)) $generated@@728)))
(let (($generated@@731  (=> ($generated@@0 ($generated@@81 ($generated@@304 ($generated@@320 ($generated@@321 $generated@@135) $generated@@718) ($generated@@192 $generated@@719)) $generated@@717)) (and (=> (= (ControlFlow 0 8) 5) $generated@@730) (=> (= (ControlFlow 0 8) 6) $generated@@729)))))
(let (($generated@@732  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@304 ($generated@@320 ($generated@@321 $generated@@135) $generated@@718) ($generated@@192 $generated@@719)) $generated@@717))) (= (ControlFlow 0 4) 2)) $generated@@728)))
(let (($generated@@733  (=> (and ($generated@@139 $generated@@717 $generated@@720) ($generated@@353 $generated@@717 $generated@@720 $generated@@721)) (and (=> (= (ControlFlow 0 9) 8) $generated@@731) (=> (= (ControlFlow 0 9) 4) $generated@@732)))))
(let (($generated@@734  (=> (and (not (and ($generated@@139 $generated@@717 $generated@@720) ($generated@@353 $generated@@717 $generated@@720 $generated@@721))) (= (ControlFlow 0 3) 2)) $generated@@728)))
(let (($generated@@735  (=> (= $generated@@722 ($generated@@292 $generated@@723 $generated@@721 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 9) $generated@@733) (=> (= (ControlFlow 0 10) 3) $generated@@734)))))
(let (($generated@@736 true))
(let (($generated@@737  (=> (= $generated@@724 ($generated@@237 $generated@@723 $generated@@721 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 1) $generated@@736) (=> (= (ControlFlow 0 11) 10) $generated@@735)))))
(let (($generated@@738  (=> (and (and (and ($generated@@352 $generated@@721) ($generated@@725 $generated@@721)) ($generated@@137 $generated@@719 ($generated@@138 $generated@@720 $generated@@726))) (and (and ($generated@@139 $generated@@718 $generated@@720) ($generated@@139 $generated@@727 $generated@@726)) (and (= 0 $generated@@132) (= (ControlFlow 0 12) 11)))) $generated@@737)))
$generated@@738))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U) T@U)
(declare-fun $generated@@75 (T@U Bool) T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) Bool)
(declare-fun $generated@@114 (Int) T@U)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@U T@U) T@U)
(declare-fun $generated@@118 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@T T@T) T@T)
(declare-fun $generated@@147 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@151 (T@T) T@T)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 (T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@226 (T@U) Bool)
(declare-fun $generated@@227 (T@U T@U) T@U)
(declare-fun $generated@@228 () T@T)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@248 (T@T T@T) T@T)
(declare-fun $generated@@249 (T@T) T@T)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@302 (T@U T@U) T@U)
(declare-fun $generated@@309 (T@U T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@U T@U) T@U)
(declare-fun $generated@@318 (T@U T@U) T@U)
(declare-fun $generated@@319 (T@T) T@U)
(declare-fun $generated@@320 (T@U T@U T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@349 (Int) Int)
(declare-fun $generated@@352 (T@U) Bool)
(declare-fun $generated@@353 (T@U T@U T@U) Bool)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@365 (T@T) T@U)
(declare-fun $generated@@366 (T@U) Int)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@386 (T@U) Int)
(declare-fun $generated@@387 (T@T) T@U)
(declare-fun $generated@@392 (T@T T@T) T@U)
(declare-fun $generated@@398 (T@T T@T) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) Bool)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@459 (T@T T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@479 (T@U T@U) T@U)
(declare-fun $generated@@537 () T@T)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@580 (T@U Int) T@U)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@620 (T@U) Int)
(declare-fun $generated@@621 (T@U) Int)
(declare-fun $generated@@657 (T@U) T@U)
(declare-fun $generated@@661 (Int Int) Int)
(declare-fun $generated@@722 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 11) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@82 $generated@@83)) 12))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@84 $generated@@85)) $generated@@84)
 :pattern ( ($generated@@78 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (! (= ($generated@@80 ($generated@@78 $generated@@86 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@78 $generated@@86 $generated@@87))
))) (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (let (($generated@@90 ($generated@@80 (type $generated@@88))))
(= (type ($generated@@74 $generated@@88 $generated@@89)) $generated@@90))
 :pattern ( ($generated@@74 $generated@@88 $generated@@89))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 (type $generated@@93)))
(let (($generated@@95 (type $generated@@92)))
(= (type ($generated@@81 $generated@@91 $generated@@92 $generated@@93)) ($generated@@78 $generated@@95 $generated@@94))))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92 $generated@@93))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@80 (type $generated@@96))))
 (=> (= (type $generated@@98) $generated@@99) (= ($generated@@74 ($generated@@81 $generated@@96 $generated@@97 $generated@@98) $generated@@97) $generated@@98)))
 :weight 0
))) (and (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (or (= $generated@@102 $generated@@103) (= ($generated@@74 ($generated@@81 $generated@@101 $generated@@102 $generated@@100) $generated@@103) ($generated@@74 $generated@@101 $generated@@103)))
 :weight 0
)) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or true (= ($generated@@74 ($generated@@81 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@74 $generated@@105 $generated@@107)))
 :weight 0
)))) (forall (($generated@@108 T@U) ($generated@@109 Bool) ) (! (= (type ($generated@@75 $generated@@108 $generated@@109)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@75 $generated@@108 $generated@@109))
))))
(assert (forall (($generated@@110 T@U) ($generated@@111 Bool) ($generated@@112 T@U) ) (!  (=> (and (= (type $generated@@110) $generated@@64) (= (type $generated@@112) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@75 $generated@@110 $generated@@111) $generated@@112))  (and ($generated@@77 $generated@@112 $generated@@110) $generated@@111)))
 :pattern ( ($generated@@74 ($generated@@75 $generated@@110 $generated@@111) $generated@@112))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@115) 13) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@67 (type $generated@@120))))
(= (type ($generated@@117 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@117 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@116) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@118 $generated@@122 $generated@@123 $generated@@124)) $generated@@116)
 :pattern ( ($generated@@118 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@67 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@117 ($generated@@118 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@117 ($generated@@118 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@117 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@117 ($generated@@118 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@117 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@114 $generated@@137)) $generated@@64)
 :pattern ( ($generated@@114 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@78 $generated@@115 $generated@@116))) ($generated@@113 $generated@@138 ($generated@@114 0) $generated@@139))
 :pattern ( ($generated@@113 $generated@@138 ($generated@@114 0) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@141) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@142) ($generated@@78 $generated@@115 $generated@@116))) ($generated@@140 $generated@@141 $generated@@142)) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@115) ($generated@@0 ($generated@@117 ($generated@@74 $generated@@141 $generated@@143) $generated@@60))) ($generated@@0 ($generated@@117 ($generated@@74 $generated@@142 $generated@@143) $generated@@60)))
 :pattern ( ($generated@@117 ($generated@@74 $generated@@142 $generated@@143) $generated@@60))
)))
 :pattern ( ($generated@@140 $generated@@141 $generated@@142))
)))
(assert  (and (and (and (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (= ($generated@@1 ($generated@@146 $generated@@152 $generated@@153)) 15)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@150 ($generated@@146 $generated@@154 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@146 $generated@@154 $generated@@155))
))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (! (= ($generated@@151 ($generated@@146 $generated@@156 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@146 $generated@@156 $generated@@157))
))) (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@145 $generated@@158 $generated@@159 $generated@@160 $generated@@161 $generated@@162)) ($generated@@146 $generated@@76 $generated@@76))
 :pattern ( ($generated@@145 $generated@@158 $generated@@159 $generated@@160 $generated@@161 $generated@@162))
))) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@149 $generated@@163 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@149 $generated@@163 $generated@@164))
))))
(assert  (=> (<= 0 $generated@@144) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@165) $generated@@64) (= (type $generated@@166) $generated@@64)) (= (type $generated@@167) ($generated@@146 $generated@@76 $generated@@76))) (= (type $generated@@168) $generated@@76)) (= (type $generated@@169) $generated@@76)) (or ($generated@@147 $generated@@165 $generated@@166 $generated@@167 $generated@@168 $generated@@169) (and (not (= 0 $generated@@144)) (and (and ($generated@@148 $generated@@167 ($generated@@149 $generated@@165 $generated@@166)) ($generated@@77 $generated@@168 $generated@@165)) ($generated@@77 $generated@@169 $generated@@166))))) ($generated@@148 ($generated@@145 $generated@@165 $generated@@166 $generated@@167 $generated@@168 $generated@@169) ($generated@@149 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@166 $generated@@167 $generated@@168 $generated@@169))
))))
(assert  (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@172 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@172 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@170 $generated@@181)) ($generated@@78 $generated@@182 $generated@@4)))
 :pattern ( ($generated@@170 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@80 (type $generated@@184))))
(let (($generated@@187 ($generated@@79 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) ($generated@@172 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@80 (type $generated@@189))))
(let (($generated@@192 ($generated@@79 (type $generated@@188))))
 (=> (and (and (= (type $generated@@188) ($generated@@78 $generated@@192 $generated@@4)) (= (type $generated@@189) ($generated@@78 $generated@@192 $generated@@191))) (= (type $generated@@190) $generated@@64)) (= ($generated@@170 ($generated@@171 $generated@@188 $generated@@189 $generated@@190)) $generated@@188))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@188 $generated@@189 $generated@@190)))
)))
(assert (forall (($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@174 (type $generated@@194))))
(let (($generated@@196 ($generated@@173 (type $generated@@194))))
(= (type ($generated@@193 $generated@@194)) ($generated@@78 $generated@@196 $generated@@195))))
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@80 (type $generated@@198))))
(let (($generated@@201 ($generated@@79 (type $generated@@197))))
 (=> (and (and (= (type $generated@@197) ($generated@@78 $generated@@201 $generated@@4)) (= (type $generated@@198) ($generated@@78 $generated@@201 $generated@@200))) (= (type $generated@@199) $generated@@64)) (= ($generated@@193 ($generated@@171 $generated@@197 $generated@@198 $generated@@199)) $generated@@198))))
 :pattern ( ($generated@@193 ($generated@@171 $generated@@197 $generated@@198 $generated@@199)))
)))
(assert  (and (forall (($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@150 (type $generated@@204))))
(= (type ($generated@@202 $generated@@204)) ($generated@@78 $generated@@205 $generated@@4)))
 :pattern ( ($generated@@202 $generated@@204))
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@80 (type $generated@@207))))
(let (($generated@@210 ($generated@@79 (type $generated@@206))))
(= (type ($generated@@203 $generated@@206 $generated@@207 $generated@@208)) ($generated@@146 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@203 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@80 (type $generated@@212))))
(let (($generated@@215 ($generated@@79 (type $generated@@211))))
 (=> (and (and (= (type $generated@@211) ($generated@@78 $generated@@215 $generated@@4)) (= (type $generated@@212) ($generated@@78 $generated@@215 $generated@@214))) (= (type $generated@@213) $generated@@64)) (= ($generated@@202 ($generated@@203 $generated@@211 $generated@@212 $generated@@213)) $generated@@211))))
 :pattern ( ($generated@@202 ($generated@@203 $generated@@211 $generated@@212 $generated@@213)))
)))
(assert (forall (($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@151 (type $generated@@217))))
(let (($generated@@219 ($generated@@150 (type $generated@@217))))
(= (type ($generated@@216 $generated@@217)) ($generated@@78 $generated@@219 $generated@@218))))
 :pattern ( ($generated@@216 $generated@@217))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@80 (type $generated@@221))))
(let (($generated@@224 ($generated@@79 (type $generated@@220))))
 (=> (and (and (= (type $generated@@220) ($generated@@78 $generated@@224 $generated@@4)) (= (type $generated@@221) ($generated@@78 $generated@@224 $generated@@223))) (= (type $generated@@222) $generated@@64)) (= ($generated@@216 ($generated@@203 $generated@@220 $generated@@221 $generated@@222)) $generated@@221))))
 :pattern ( ($generated@@216 ($generated@@203 $generated@@220 $generated@@221 $generated@@222)))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@2) ($generated@@148 $generated@@225 ($generated@@114 0)))
 :pattern ( ($generated@@148 $generated@@225 ($generated@@114 0)))
)))
(assert  (and (= ($generated@@1 $generated@@228) 17) (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= (type ($generated@@227 $generated@@229 $generated@@230)) $generated@@64)
 :pattern ( ($generated@@227 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (and (= (type $generated@@231) $generated@@64) (= (type $generated@@232) $generated@@64)) (= (type $generated@@233) $generated@@228)) ($generated@@148 $generated@@233 ($generated@@227 $generated@@231 $generated@@232))) ($generated@@226 $generated@@233))
 :pattern ( ($generated@@226 $generated@@233) ($generated@@148 $generated@@233 ($generated@@227 $generated@@231 $generated@@232)))
)))
(assert  (and (forall (($generated@@237 T@U) ) (! (= (type ($generated@@235 $generated@@237)) $generated@@76)
 :pattern ( ($generated@@235 $generated@@237))
)) (forall (($generated@@238 T@U) ) (! (= (type ($generated@@236 $generated@@238)) $generated@@76)
 :pattern ( ($generated@@236 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (= (type $generated@@239) $generated@@228) (= (type $generated@@240) $generated@@228)) true) (= ($generated@@234 $generated@@239 $generated@@240)  (and (= ($generated@@235 $generated@@239) ($generated@@235 $generated@@240)) (= ($generated@@236 $generated@@239) ($generated@@236 $generated@@240)))))
 :pattern ( ($generated@@234 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@241 $generated@@243)) $generated@@64)
 :pattern ( ($generated@@241 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (= (type $generated@@244) ($generated@@78 $generated@@76 $generated@@2)) (= (type $generated@@245) $generated@@64)) ($generated@@148 $generated@@244 ($generated@@241 $generated@@245))) ($generated@@242 $generated@@244))
 :pattern ( ($generated@@148 $generated@@244 ($generated@@241 $generated@@245)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (= ($generated@@1 ($generated@@248 $generated@@252 $generated@@253)) 18)) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@254 $generated@@255)) $generated@@254)
 :pattern ( ($generated@@248 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= ($generated@@250 ($generated@@248 $generated@@256 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@248 $generated@@256 $generated@@257))
))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@250 (type $generated@@258))))
(= (type ($generated@@246 $generated@@258 $generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@246 $generated@@258 $generated@@259 $generated@@260))
))) (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (! (let (($generated@@266 (type $generated@@265)))
(let (($generated@@267 (type $generated@@263)))
(= (type ($generated@@251 $generated@@262 $generated@@263 $generated@@264 $generated@@265)) ($generated@@248 $generated@@267 $generated@@266))))
 :pattern ( ($generated@@251 $generated@@262 $generated@@263 $generated@@264 $generated@@265))
))) (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@250 (type $generated@@268))))
 (=> (= (type $generated@@271) $generated@@272) (= ($generated@@246 ($generated@@251 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@269 $generated@@270) $generated@@271)))
 :weight 0
))) (and (and (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (or (= $generated@@275 $generated@@277) (= ($generated@@246 ($generated@@251 $generated@@274 $generated@@275 $generated@@276 $generated@@273) $generated@@277 $generated@@278) ($generated@@246 $generated@@274 $generated@@277 $generated@@278)))
 :weight 0
)) (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (or (= $generated@@282 $generated@@284) (= ($generated@@246 ($generated@@251 $generated@@280 $generated@@281 $generated@@282 $generated@@279) $generated@@283 $generated@@284) ($generated@@246 $generated@@280 $generated@@283 $generated@@284)))
 :weight 0
))) (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (or true (= ($generated@@246 ($generated@@251 $generated@@286 $generated@@287 $generated@@288 $generated@@285) $generated@@289 $generated@@290) ($generated@@246 $generated@@286 $generated@@289 $generated@@290)))
 :weight 0
)))) (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 Bool) ) (! (= (type ($generated@@247 $generated@@291 $generated@@292 $generated@@293 $generated@@294)) ($generated@@248 $generated@@115 $generated@@4))
 :pattern ( ($generated@@247 $generated@@291 $generated@@292 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 Bool) ($generated@@299 T@U) ($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@67 (type $generated@@300))))
 (=> (and (and (and (and (= (type $generated@@295) $generated@@115) (= (type $generated@@296) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@297) ($generated@@66 $generated@@4))) (= (type $generated@@299) $generated@@115)) (= (type $generated@@300) ($generated@@66 $generated@@301))) (= ($generated@@0 ($generated@@246 ($generated@@247 $generated@@295 $generated@@296 $generated@@297 $generated@@298) $generated@@299 $generated@@300))  (=> (and (not (= $generated@@299 $generated@@295)) ($generated@@0 ($generated@@117 ($generated@@74 $generated@@296 $generated@@299) $generated@@297))) $generated@@298))))
 :pattern ( ($generated@@246 ($generated@@247 $generated@@295 $generated@@296 $generated@@297 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@79 (type $generated@@303))))
(= (type ($generated@@302 $generated@@303 $generated@@304)) ($generated@@78 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@79 (type $generated@@306))))
 (=> (and (= (type $generated@@306) ($generated@@78 $generated@@308 $generated@@4)) (= (type $generated@@307) ($generated@@78 $generated@@308 $generated@@4))) (= ($generated@@302 ($generated@@302 $generated@@306 $generated@@307) $generated@@307) ($generated@@302 $generated@@306 $generated@@307))))
 :pattern ( ($generated@@302 ($generated@@302 $generated@@306 $generated@@307) $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (! (= (type ($generated@@309 $generated@@310 $generated@@311)) $generated@@228)
 :pattern ( ($generated@@309 $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (= (type $generated@@312) $generated@@64) (= (type $generated@@313) $generated@@64)) (= (type $generated@@314) $generated@@76)) (= (type $generated@@315) $generated@@76)) (= ($generated@@148 ($generated@@309 $generated@@314 $generated@@315) ($generated@@227 $generated@@312 $generated@@313))  (and ($generated@@77 $generated@@314 $generated@@312) ($generated@@77 $generated@@315 $generated@@313))))
 :pattern ( ($generated@@148 ($generated@@309 $generated@@314 $generated@@315) ($generated@@227 $generated@@312 $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@U) ) (! (let (($generated@@322 (type $generated@@321)))
(= (type ($generated@@316 $generated@@321)) $generated@@322))
 :pattern ( ($generated@@316 $generated@@321))
)) (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (! (= (type ($generated@@317 $generated@@323 $generated@@324)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@317 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (! (let (($generated@@327 (type $generated@@326)))
(= (type ($generated@@318 $generated@@325 $generated@@326)) ($generated@@78 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@328 T@T) ) (! (= (type ($generated@@319 $generated@@328)) ($generated@@78 $generated@@328 $generated@@4))
 :pattern ( ($generated@@319 $generated@@328))
))) (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (! (= (type ($generated@@320 $generated@@329 $generated@@330 $generated@@331)) ($generated@@78 $generated@@76 $generated@@76))
 :pattern ( ($generated@@320 $generated@@329 $generated@@330 $generated@@331))
))))
(assert  (=> (<= 0 $generated@@144) (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@332) $generated@@64) (= (type $generated@@333) $generated@@64)) (= (type $generated@@334) ($generated@@146 $generated@@76 $generated@@76))) (= (type $generated@@335) $generated@@76)) (= (type $generated@@336) $generated@@76)) (or ($generated@@147 $generated@@332 $generated@@333 ($generated@@316 $generated@@334) ($generated@@316 $generated@@335) ($generated@@316 $generated@@336)) (and (not (= 0 $generated@@144)) (and (and ($generated@@148 $generated@@334 ($generated@@149 $generated@@332 $generated@@333)) ($generated@@77 $generated@@335 $generated@@332)) ($generated@@77 $generated@@336 $generated@@333))))) (= ($generated@@145 $generated@@332 $generated@@333 ($generated@@316 $generated@@334) ($generated@@316 $generated@@335) ($generated@@316 $generated@@336)) ($generated@@203 ($generated@@317 $generated@@332 ($generated@@302 ($generated@@318 ($generated@@319 $generated@@76) ($generated@@316 $generated@@335)) ($generated@@202 ($generated@@316 $generated@@334)))) ($generated@@320 ($generated@@316 $generated@@335) $generated@@336 ($generated@@216 ($generated@@316 $generated@@334))) ($generated@@149 $generated@@332 $generated@@333))))
 :weight 3
 :pattern ( ($generated@@145 $generated@@332 $generated@@333 ($generated@@316 $generated@@334) ($generated@@316 $generated@@335) ($generated@@316 $generated@@336)))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@228) (= (type $generated@@338) $generated@@228)) (= ($generated@@234 $generated@@337 $generated@@338) (= $generated@@337 $generated@@338)))
 :pattern ( ($generated@@234 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@64)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@342) $generated@@64)) (= ($generated@@148 $generated@@341 ($generated@@339 $generated@@342)) (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@76) ($generated@@0 ($generated@@74 $generated@@341 $generated@@343))) ($generated@@77 $generated@@343 $generated@@342))
 :pattern ( ($generated@@74 $generated@@341 $generated@@343))
))))
 :pattern ( ($generated@@148 $generated@@341 ($generated@@339 $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@64)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@347) $generated@@64)) (= ($generated@@148 $generated@@346 ($generated@@344 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@76) ($generated@@0 ($generated@@74 $generated@@346 $generated@@348))) ($generated@@77 $generated@@348 $generated@@347))
 :pattern ( ($generated@@74 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@148 $generated@@346 ($generated@@344 $generated@@347)))
)))
(assert (forall (($generated@@350 Int) ) (! (= ($generated@@349 $generated@@350) $generated@@350)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (! (= ($generated@@316 $generated@@351) $generated@@351)
 :pattern ( ($generated@@316 $generated@@351))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@354) $generated@@64) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) $generated@@76)) (= (type $generated@@357) $generated@@76)) (= (type $generated@@358) ($generated@@78 $generated@@115 $generated@@116))) ($generated@@352 $generated@@358)) (= ($generated@@113 ($generated@@309 $generated@@356 $generated@@357) ($generated@@227 $generated@@354 $generated@@355) $generated@@358)  (and ($generated@@353 $generated@@356 $generated@@354 $generated@@358) ($generated@@353 $generated@@357 $generated@@355 $generated@@358))))
 :pattern ( ($generated@@113 ($generated@@309 $generated@@356 $generated@@357) ($generated@@227 $generated@@354 $generated@@355) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@68)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@228) (= ($generated@@226 $generated@@361) (= ($generated@@359 $generated@@361) $generated@@61)))
 :pattern ( ($generated@@226 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@228) ($generated@@226 $generated@@362)) (exists (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (and (and (= (type $generated@@363) $generated@@76) (= (type $generated@@364) $generated@@76)) (= $generated@@362 ($generated@@309 $generated@@363 $generated@@364)))
 :no-pattern (type $generated@@363)
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
)))
 :pattern ( ($generated@@226 $generated@@362))
)))
(assert  (and (and (forall (($generated@@369 T@T) ) (= ($generated@@1 ($generated@@367 $generated@@369)) 19)) (forall (($generated@@370 T@T) ) (! (= ($generated@@368 ($generated@@367 $generated@@370)) $generated@@370)
 :pattern ( ($generated@@367 $generated@@370))
))) (forall (($generated@@371 T@T) ) (! (= (type ($generated@@365 $generated@@371)) ($generated@@367 $generated@@371))
 :pattern ( ($generated@@365 $generated@@371))
))))
(assert (forall (($generated@@372 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@372)) 0)
 :pattern ( ($generated@@365 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (= (type ($generated@@373 $generated@@374)) $generated@@76)
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@64) (= (type $generated@@377) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@353 ($generated@@373 $generated@@375) $generated@@376 $generated@@377) ($generated@@113 $generated@@375 $generated@@376 $generated@@377)))
 :pattern ( ($generated@@353 ($generated@@373 $generated@@375) $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@378) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@379) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@380) $generated@@76)) (= (type $generated@@381) $generated@@64)) ($generated@@140 $generated@@378 $generated@@379)) ($generated@@353 $generated@@380 $generated@@381 $generated@@378)) ($generated@@353 $generated@@380 $generated@@381 $generated@@379))
 :pattern ( ($generated@@140 $generated@@378 $generated@@379) ($generated@@353 $generated@@380 $generated@@381 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@382) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@383) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@385) $generated@@64)) ($generated@@140 $generated@@382 $generated@@383)) ($generated@@113 $generated@@384 $generated@@385 $generated@@382)) ($generated@@113 $generated@@384 $generated@@385 $generated@@383))
 :pattern ( ($generated@@140 $generated@@382 $generated@@383) ($generated@@113 $generated@@384 $generated@@385 $generated@@382))
)))
(assert (forall (($generated@@388 T@T) ) (! (= (type ($generated@@387 $generated@@388)) ($generated@@78 $generated@@388 $generated@@2))
 :pattern ( ($generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@79 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@78 $generated@@390 $generated@@2)) (and (= (= ($generated@@386 $generated@@389) 0) (= $generated@@389 ($generated@@387 $generated@@390))) (=> (not (= ($generated@@386 $generated@@389) 0)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (< 0 ($generated ($generated@@74 $generated@@389 $generated@@391))))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) ($generated@@172 $generated@@393 $generated@@394))
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@T) ) (! (let (($generated@@397 (type $generated@@395)))
 (not ($generated@@0 ($generated@@74 ($generated@@170 ($generated@@392 $generated@@397 $generated@@396)) $generated@@395))))
 :pattern ( (let (($generated@@397 (type $generated@@395)))
($generated@@74 ($generated@@170 ($generated@@392 $generated@@397 $generated@@396)) $generated@@395)))
)))
(assert (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) ($generated@@146 $generated@@399 $generated@@400))
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@T) ) (! (let (($generated@@403 (type $generated@@401)))
 (not ($generated@@0 ($generated@@74 ($generated@@202 ($generated@@398 $generated@@403 $generated@@402)) $generated@@401))))
 :pattern ( (let (($generated@@403 (type $generated@@401)))
($generated@@74 ($generated@@202 ($generated@@398 $generated@@403 $generated@@402)) $generated@@401)))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@79 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@78 $generated@@405 $generated@@2)) (= ($generated@@242 $generated@@404) (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@405) (and (<= 0 ($generated ($generated@@74 $generated@@404 $generated@@406))) (<= ($generated ($generated@@74 $generated@@404 $generated@@406)) ($generated@@386 $generated@@404))))
 :pattern ( ($generated@@74 $generated@@404 $generated@@406))
)))))
 :pattern ( ($generated@@242 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@174 (type $generated@@407))))
(let (($generated@@409 ($generated@@173 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@172 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@392 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) ($generated@@0 ($generated@@74 ($generated@@170 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@170 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@174 (type $generated@@412))))
(= (type ($generated@@411 $generated@@412)) ($generated@@78 $generated@@413 $generated@@4)))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@174 (type $generated@@414))))
(let (($generated@@416 ($generated@@173 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@172 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@392 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@415) ($generated@@0 ($generated@@74 ($generated@@411 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@411 $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@151 (type $generated@@418))))
(let (($generated@@420 ($generated@@150 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@146 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@398 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) ($generated@@0 ($generated@@74 ($generated@@202 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@202 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@151 (type $generated@@423))))
(= (type ($generated@@422 $generated@@423)) ($generated@@78 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@151 (type $generated@@425))))
(let (($generated@@427 ($generated@@150 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@146 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@398 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@426) ($generated@@0 ($generated@@74 ($generated@@422 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@422 $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@78 $generated@@76 $generated@@2)) (= (type $generated@@430) $generated@@64)) (= ($generated@@148 $generated@@429 ($generated@@241 $generated@@430)) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@76) (< 0 ($generated ($generated@@74 $generated@@429 $generated@@431)))) ($generated@@77 $generated@@431 $generated@@430))
 :pattern ( ($generated@@74 $generated@@429 $generated@@431))
))))
 :pattern ( ($generated@@148 $generated@@429 ($generated@@241 $generated@@430)))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@79 (type $generated@@434))))
(= (type ($generated@@433 $generated@@434 $generated@@435)) ($generated@@78 $generated@@436 $generated@@4)))
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@79 (type $generated@@437))))
 (=> (and (and (= (type $generated@@437) ($generated@@78 $generated@@439 $generated@@4)) (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@4))) ($generated@@432 $generated@@437 $generated@@438)) (and (= ($generated@@433 ($generated@@302 $generated@@437 $generated@@438) $generated@@437) $generated@@438) (= ($generated@@433 ($generated@@302 $generated@@437 $generated@@438) $generated@@438) $generated@@437))))
 :pattern ( ($generated@@302 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@78 $generated@@76 $generated@@76))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@76) (= (type $generated@@443) $generated@@76)) (= ($generated@@74 ($generated@@440 $generated@@442) $generated@@443) $generated@@442))
 :pattern ( ($generated@@74 ($generated@@440 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
 (=> (and (= (type $generated@@444) ($generated@@78 $generated@@447 $generated@@4)) (= (type $generated@@445) ($generated@@78 $generated@@447 $generated@@4))) (= ($generated@@0 ($generated@@74 ($generated@@433 $generated@@444 $generated@@445) $generated@@446))  (and ($generated@@0 ($generated@@74 $generated@@444 $generated@@446)) (not ($generated@@0 ($generated@@74 $generated@@445 $generated@@446)))))))
 :pattern ( ($generated@@74 ($generated@@433 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@448) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@449) $generated@@64)) (= (type $generated@@450) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@448 ($generated@@339 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@76) ($generated@@0 ($generated@@74 $generated@@448 $generated@@451))) ($generated@@353 $generated@@451 $generated@@449 $generated@@450))
 :pattern ( ($generated@@74 $generated@@448 $generated@@451))
))))
 :pattern ( ($generated@@113 $generated@@448 ($generated@@339 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (= (type $generated@@452) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@453) $generated@@64)) (= (type $generated@@454) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@452 ($generated@@344 $generated@@453) $generated@@454) (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@76) ($generated@@0 ($generated@@74 $generated@@452 $generated@@455))) ($generated@@353 $generated@@455 $generated@@453 $generated@@454))
 :pattern ( ($generated@@74 $generated@@452 $generated@@455))
))))
 :pattern ( ($generated@@113 $generated@@452 ($generated@@344 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 (type $generated@@456)))
(= ($generated ($generated@@74 ($generated@@387 $generated@@457) $generated@@456)) 0))
 :pattern ( (let (($generated@@457 (type $generated@@456)))
($generated@@74 ($generated@@387 $generated@@457) $generated@@456)))
)))
(assert  (and (forall (($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@460)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@458 $generated@@460))
)) (forall (($generated@@461 T@T) ($generated@@462 T@U) ) (! (= (type ($generated@@459 $generated@@461 $generated@@462)) $generated@@461)
 :pattern ( ($generated@@459 $generated@@461 $generated@@462))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@172 $generated@@76 $generated@@76)) (= (type $generated@@464) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@458 $generated@@463) $generated@@464))  (and ($generated@@0 ($generated@@74 ($generated@@170 $generated@@463) ($generated@@235 ($generated@@459 $generated@@228 $generated@@464)))) (= ($generated@@74 ($generated@@193 $generated@@463) ($generated@@235 ($generated@@459 $generated@@228 $generated@@464))) ($generated@@236 ($generated@@459 $generated@@228 $generated@@464))))))
 :pattern ( ($generated@@74 ($generated@@458 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) ($generated@@78 $generated@@76 $generated@@4))
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) ($generated@@146 $generated@@76 $generated@@76)) (= (type $generated@@468) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@465 $generated@@467) $generated@@468))  (and ($generated@@0 ($generated@@74 ($generated@@202 $generated@@467) ($generated@@235 ($generated@@459 $generated@@228 $generated@@468)))) (= ($generated@@74 ($generated@@216 $generated@@467) ($generated@@235 ($generated@@459 $generated@@228 $generated@@468))) ($generated@@236 ($generated@@459 $generated@@228 $generated@@468))))))
 :pattern ( ($generated@@74 ($generated@@465 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (! (let (($generated@@471 (type $generated@@470)))
(let (($generated@@472 ($generated@@173 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@172 $generated@@472 $generated@@471)) (= ($generated@@0 ($generated@@74 ($generated@@411 $generated@@469) $generated@@470)) (exists (($generated@@473 T@U) ) (!  (and (= (type $generated@@473) $generated@@472) (and ($generated@@0 ($generated@@74 ($generated@@170 $generated@@469) $generated@@473)) (= $generated@@470 ($generated@@74 ($generated@@193 $generated@@469) $generated@@473))))
 :pattern ( ($generated@@74 ($generated@@170 $generated@@469) $generated@@473))
 :pattern ( ($generated@@74 ($generated@@193 $generated@@469) $generated@@473))
))))))
 :pattern ( ($generated@@74 ($generated@@411 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (! (let (($generated@@476 (type $generated@@475)))
(let (($generated@@477 ($generated@@150 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@146 $generated@@477 $generated@@476)) (= ($generated@@0 ($generated@@74 ($generated@@422 $generated@@474) $generated@@475)) (exists (($generated@@478 T@U) ) (!  (and (= (type $generated@@478) $generated@@477) (and ($generated@@0 ($generated@@74 ($generated@@202 $generated@@474) $generated@@478)) (= $generated@@475 ($generated@@74 ($generated@@216 $generated@@474) $generated@@478))))
 :pattern ( ($generated@@74 ($generated@@202 $generated@@474) $generated@@478))
 :pattern ( ($generated@@74 ($generated@@216 $generated@@474) $generated@@478))
))))))
 :pattern ( ($generated@@74 ($generated@@422 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (= (type $generated@@482) ($generated@@172 $generated@@76 $generated@@76)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@170 $generated@@482) $generated@@486))) (and ($generated@@353 ($generated@@74 ($generated@@193 $generated@@482) $generated@@486) $generated@@484 $generated@@485) ($generated@@353 $generated@@486 $generated@@483 $generated@@485)))
 :pattern ( ($generated@@74 ($generated@@193 $generated@@482) $generated@@486))
 :pattern ( ($generated@@74 ($generated@@170 $generated@@482) $generated@@486))
))))
 :pattern ( ($generated@@113 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (and (= (type $generated@@487) ($generated@@146 $generated@@76 $generated@@76)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@487 ($generated@@149 $generated@@488 $generated@@489) $generated@@490) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@202 $generated@@487) $generated@@491))) (and ($generated@@353 ($generated@@74 ($generated@@216 $generated@@487) $generated@@491) $generated@@489 $generated@@490) ($generated@@353 $generated@@491 $generated@@488 $generated@@490)))
 :pattern ( ($generated@@74 ($generated@@216 $generated@@487) $generated@@491))
 :pattern ( ($generated@@74 ($generated@@202 $generated@@487) $generated@@491))
))))
 :pattern ( ($generated@@113 $generated@@487 ($generated@@149 $generated@@488 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (! (let (($generated@@495 (type $generated@@493)))
 (=> (and (and (= (type $generated@@492) ($generated@@78 $generated@@495 $generated@@4)) (= (type $generated@@494) $generated@@495)) ($generated@@0 ($generated@@74 $generated@@492 $generated@@494))) ($generated@@0 ($generated@@74 ($generated@@318 $generated@@492 $generated@@493) $generated@@494))))
 :pattern ( ($generated@@318 $generated@@492 $generated@@493) ($generated@@74 $generated@@492 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
 (=> (and (and (= (type $generated@@496) ($generated@@78 $generated@@499 $generated@@4)) (= (type $generated@@497) ($generated@@78 $generated@@499 $generated@@4))) ($generated@@0 ($generated@@74 $generated@@496 $generated@@498))) ($generated@@0 ($generated@@74 ($generated@@302 $generated@@496 $generated@@497) $generated@@498))))
 :pattern ( ($generated@@302 $generated@@496 $generated@@497) ($generated@@74 $generated@@496 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
 (=> (and (and (= (type $generated@@500) ($generated@@78 $generated@@503 $generated@@4)) (= (type $generated@@501) ($generated@@78 $generated@@503 $generated@@4))) ($generated@@0 ($generated@@74 $generated@@501 $generated@@502))) ($generated@@0 ($generated@@74 ($generated@@302 $generated@@500 $generated@@501) $generated@@502))))
 :pattern ( ($generated@@302 $generated@@500 $generated@@501) ($generated@@74 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@505)))
 (=> (and (= (type $generated@@504) ($generated@@78 $generated@@507 $generated@@4)) (= (type $generated@@506) $generated@@507)) (= ($generated@@0 ($generated@@74 ($generated@@318 $generated@@504 $generated@@505) $generated@@506))  (or (= $generated@@506 $generated@@505) ($generated@@0 ($generated@@74 $generated@@504 $generated@@506))))))
 :pattern ( ($generated@@74 ($generated@@318 $generated@@504 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@508) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@509) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@510) ($generated@@78 $generated@@115 $generated@@116))) (not (= $generated@@508 $generated@@510))) (and ($generated@@140 $generated@@508 $generated@@509) ($generated@@140 $generated@@509 $generated@@510))) ($generated@@140 $generated@@508 $generated@@510))
 :pattern ( ($generated@@140 $generated@@508 $generated@@509) ($generated@@140 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
 (=> (and (and (= (type $generated@@511) ($generated@@78 $generated@@514 $generated@@4)) (= (type $generated@@512) ($generated@@78 $generated@@514 $generated@@4))) ($generated@@0 ($generated@@74 $generated@@512 $generated@@513))) (not ($generated@@0 ($generated@@74 ($generated@@433 $generated@@511 $generated@@512) $generated@@513)))))
 :pattern ( ($generated@@433 $generated@@511 $generated@@512) ($generated@@74 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@151 (type $generated@@515))))
(let (($generated@@517 ($generated@@150 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@146 $generated@@517 $generated@@516)) (= (= $generated@@515 ($generated@@398 $generated@@517 $generated@@516)) (= ($generated@@202 $generated@@515) ($generated@@319 $generated@@517))))))
 :pattern ( ($generated@@202 $generated@@515))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@151 (type $generated@@518))))
(let (($generated@@520 ($generated@@150 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@146 $generated@@520 $generated@@519)) (= (= $generated@@518 ($generated@@398 $generated@@520 $generated@@519)) (= ($generated@@422 $generated@@518) ($generated@@319 $generated@@519))))))
 :pattern ( ($generated@@422 $generated@@518))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@151 (type $generated@@521))))
(let (($generated@@523 ($generated@@150 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@146 $generated@@523 $generated@@522)) (= (= $generated@@521 ($generated@@398 $generated@@523 $generated@@522)) (= ($generated@@465 $generated@@521) ($generated@@319 $generated@@76))))))
 :pattern ( ($generated@@465 $generated@@521))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 ($generated@@174 (type $generated@@524))))
(let (($generated@@526 ($generated@@173 (type $generated@@524))))
 (=> (= (type $generated@@524) ($generated@@172 $generated@@526 $generated@@525)) (or (= $generated@@524 ($generated@@392 $generated@@526 $generated@@525)) (exists (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (and (and (= (type $generated@@527) $generated@@76) (= (type $generated@@528) $generated@@76)) ($generated@@0 ($generated@@74 ($generated@@458 $generated@@524) ($generated@@373 ($generated@@309 $generated@@527 $generated@@528)))))
 :no-pattern (type $generated@@527)
 :no-pattern (type $generated@@528)
 :no-pattern ($generated $generated@@527)
 :no-pattern ($generated@@0 $generated@@527)
 :no-pattern ($generated $generated@@528)
 :no-pattern ($generated@@0 $generated@@528)
))))))
 :pattern ( ($generated@@458 $generated@@524))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 ($generated@@151 (type $generated@@529))))
(let (($generated@@531 ($generated@@150 (type $generated@@529))))
 (=> (= (type $generated@@529) ($generated@@146 $generated@@531 $generated@@530)) (or (= $generated@@529 ($generated@@398 $generated@@531 $generated@@530)) (exists (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (and (and (= (type $generated@@532) $generated@@76) (= (type $generated@@533) $generated@@76)) ($generated@@0 ($generated@@74 ($generated@@465 $generated@@529) ($generated@@373 ($generated@@309 $generated@@532 $generated@@533)))))
 :no-pattern (type $generated@@532)
 :no-pattern (type $generated@@533)
 :no-pattern ($generated $generated@@532)
 :no-pattern ($generated@@0 $generated@@532)
 :no-pattern ($generated $generated@@533)
 :no-pattern ($generated@@0 $generated@@533)
))))))
 :pattern ( ($generated@@465 $generated@@529))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@76) ($generated@@77 $generated@@534 $generated@@46)) (and (= ($generated@@373 ($generated@@459 $generated@@2 $generated@@534)) $generated@@534) ($generated@@148 ($generated@@459 $generated@@2 $generated@@534) $generated@@46)))
 :pattern ( ($generated@@77 $generated@@534 $generated@@46))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@76) ($generated@@77 $generated@@535 $generated@@47)) (and (= ($generated@@373 ($generated@@459 $generated@@3 $generated@@535)) $generated@@535) ($generated@@148 ($generated@@459 $generated@@3 $generated@@535) $generated@@47)))
 :pattern ( ($generated@@77 $generated@@535 $generated@@47))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@76) ($generated@@77 $generated@@536 $generated@@44)) (and (= ($generated@@373 ($generated@@459 $generated@@4 $generated@@536)) $generated@@536) ($generated@@148 ($generated@@459 $generated@@4 $generated@@536) $generated@@44)))
 :pattern ( ($generated@@77 $generated@@536 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@537) 20))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@76) ($generated@@77 $generated@@538 $generated@@45)) (and (= ($generated@@373 ($generated@@459 $generated@@537 $generated@@538)) $generated@@538) ($generated@@148 ($generated@@459 $generated@@537 $generated@@538) $generated@@45)))
 :pattern ( ($generated@@77 $generated@@538 $generated@@45))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@64) (= ($generated@@77 ($generated@@373 $generated@@539) $generated@@540) ($generated@@148 $generated@@539 $generated@@540)))
 :pattern ( ($generated@@77 ($generated@@373 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@79 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@78 $generated@@542 $generated@@2)) (<= 0 ($generated@@386 $generated@@541))))
 :pattern ( ($generated@@386 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 ($generated@@368 (type $generated@@543))))
 (=> (= (type $generated@@543) ($generated@@367 $generated@@544)) (<= 0 ($generated@@366 $generated@@543))))
 :pattern ( ($generated@@366 $generated@@543))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@64)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (= ($generated@@545 ($generated@@479 $generated@@547 $generated@@548)) $generated@@547))
 :pattern ( ($generated@@479 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@64)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@64) (= (type $generated@@552) $generated@@64)) (= ($generated@@549 ($generated@@479 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@479 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@64) (= (type $generated@@554) $generated@@64)) (= ($generated@@72 ($generated@@479 $generated@@553 $generated@@554)) $generated@@58))
 :pattern ( ($generated@@479 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@64)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@64) (= (type $generated@@558) $generated@@64)) (= ($generated@@555 ($generated@@149 $generated@@557 $generated@@558)) $generated@@557))
 :pattern ( ($generated@@149 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@64)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@64) (= (type $generated@@562) $generated@@64)) (= ($generated@@559 ($generated@@149 $generated@@561 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@149 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@64) (= (type $generated@@564) $generated@@64)) (= ($generated@@72 ($generated@@149 $generated@@563 $generated@@564)) $generated@@59))
 :pattern ( ($generated@@149 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@76) (= (type $generated@@566) $generated@@76)) (= ($generated@@359 ($generated@@309 $generated@@565 $generated@@566)) $generated@@61))
 :pattern ( ($generated@@309 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@64)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@64) (= (type $generated@@570) $generated@@64)) (= ($generated@@567 ($generated@@227 $generated@@569 $generated@@570)) $generated@@569))
 :pattern ( ($generated@@227 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@64)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@64) (= (type $generated@@574) $generated@@64)) (= ($generated@@571 ($generated@@227 $generated@@573 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@227 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@76) (= (type $generated@@576) $generated@@76)) (= ($generated@@235 ($generated@@309 $generated@@575 $generated@@576)) $generated@@575))
 :pattern ( ($generated@@309 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@76) (= (type $generated@@578) $generated@@76)) (= ($generated@@236 ($generated@@309 $generated@@577 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@309 $generated@@577 $generated@@578))
)))
(assert  (and (forall (($generated@@581 T@U) ) (! (= (type ($generated@@579 $generated@@581)) $generated@@64)
 :pattern ( ($generated@@579 $generated@@581))
)) (forall (($generated@@582 T@U) ($generated@@583 Int) ) (! (let (($generated@@584 ($generated@@368 (type $generated@@582))))
(= (type ($generated@@580 $generated@@582 $generated@@583)) $generated@@584))
 :pattern ( ($generated@@580 $generated@@582 $generated@@583))
))))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@367 $generated@@76)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@585 ($generated@@579 $generated@@586) $generated@@587) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@366 $generated@@585))) ($generated@@353 ($generated@@580 $generated@@585 $generated@@588) $generated@@586 $generated@@587))
 :pattern ( ($generated@@580 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@113 $generated@@585 ($generated@@579 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (=> (= (type $generated@@589) ($generated@@78 $generated@@591 $generated@@4)) ($generated@@0 ($generated@@74 ($generated@@318 $generated@@589 $generated@@590) $generated@@590))))
 :pattern ( ($generated@@318 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@593 Int) ) (! (= ($generated@@592 ($generated@@114 $generated@@593)) $generated@@593)
 :pattern ( ($generated@@114 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@64)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@64) (= ($generated@@594 ($generated@@339 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@339 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@64) (= ($generated@@72 ($generated@@339 $generated@@597)) $generated@@54))
 :pattern ( ($generated@@339 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@64)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@64) (= ($generated@@598 ($generated@@344 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@344 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@64) (= ($generated@@72 ($generated@@344 $generated@@601)) $generated@@55))
 :pattern ( ($generated@@344 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@64)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@64) (= ($generated@@602 ($generated@@241 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@241 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@64) (= ($generated@@72 ($generated@@241 $generated@@605)) $generated@@56))
 :pattern ( ($generated@@241 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@64)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@64) (= ($generated@@606 ($generated@@579 $generated@@608)) $generated@@608))
 :pattern ( ($generated@@579 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@64) (= ($generated@@72 ($generated@@579 $generated@@609)) $generated@@57))
 :pattern ( ($generated@@579 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (! (let (($generated@@611 (type $generated@@610)))
(= ($generated@@459 $generated@@611 ($generated@@373 $generated@@610)) $generated@@610))
 :pattern ( ($generated@@373 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@612) ($generated@@172 $generated@@76 $generated@@76)) (= (type $generated@@613) $generated@@64)) (= (type $generated@@614) $generated@@64)) (= ($generated@@148 $generated@@612 ($generated@@479 $generated@@613 $generated@@614)) (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@170 $generated@@612) $generated@@615))) (and ($generated@@77 ($generated@@74 ($generated@@193 $generated@@612) $generated@@615) $generated@@614) ($generated@@77 $generated@@615 $generated@@613)))
 :pattern ( ($generated@@74 ($generated@@193 $generated@@612) $generated@@615))
 :pattern ( ($generated@@74 ($generated@@170 $generated@@612) $generated@@615))
))))
 :pattern ( ($generated@@148 $generated@@612 ($generated@@479 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@616) ($generated@@146 $generated@@76 $generated@@76)) (= (type $generated@@617) $generated@@64)) (= (type $generated@@618) $generated@@64)) (= ($generated@@148 $generated@@616 ($generated@@149 $generated@@617 $generated@@618)) (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@76) ($generated@@0 ($generated@@74 ($generated@@202 $generated@@616) $generated@@619))) (and ($generated@@77 ($generated@@74 ($generated@@216 $generated@@616) $generated@@619) $generated@@618) ($generated@@77 $generated@@619 $generated@@617)))
 :pattern ( ($generated@@74 ($generated@@216 $generated@@616) $generated@@619))
 :pattern ( ($generated@@74 ($generated@@202 $generated@@616) $generated@@619))
))))
 :pattern ( ($generated@@148 $generated@@616 ($generated@@149 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@76) (= (type $generated@@623) $generated@@76)) (< ($generated@@620 $generated@@622) ($generated@@621 ($generated@@309 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@309 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@76) (= (type $generated@@625) $generated@@76)) (< ($generated@@620 $generated@@625) ($generated@@621 ($generated@@309 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@309 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@79 (type $generated@@626))))
 (=> (and (= (type $generated@@626) ($generated@@78 $generated@@628 $generated@@4)) (= (type $generated@@627) ($generated@@78 $generated@@628 $generated@@4))) (= ($generated@@302 $generated@@626 ($generated@@302 $generated@@626 $generated@@627)) ($generated@@302 $generated@@626 $generated@@627))))
 :pattern ( ($generated@@302 $generated@@626 ($generated@@302 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@64) (= (type $generated@@630) ($generated@@78 $generated@@76 $generated@@4))) (= (type $generated@@631) $generated@@76)) (= ($generated@@0 ($generated@@74 ($generated@@317 $generated@@629 $generated@@630) $generated@@631))  (and ($generated@@77 $generated@@631 $generated@@629) ($generated@@0 ($generated@@74 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@74 ($generated@@317 $generated@@629 $generated@@630) $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@76) (= (type $generated@@633) $generated@@76)) (= (type $generated@@634) ($generated@@78 $generated@@76 $generated@@76))) (= (type $generated@@635) $generated@@76)) (= ($generated@@74 ($generated@@320 $generated@@632 $generated@@633 $generated@@634) $generated@@635) (ite (= $generated@@635 $generated@@632) $generated@@633 ($generated@@74 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@74 ($generated@@320 $generated@@632 $generated@@633 $generated@@634) $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@76) (= (type $generated@@637) $generated@@64)) (= (type $generated@@638) $generated@@64)) ($generated@@77 $generated@@636 ($generated@@479 $generated@@637 $generated@@638))) (and (= ($generated@@373 ($generated@@459 ($generated@@172 $generated@@76 $generated@@76) $generated@@636)) $generated@@636) ($generated@@148 ($generated@@459 ($generated@@172 $generated@@76 $generated@@76) $generated@@636) ($generated@@479 $generated@@637 $generated@@638))))
 :pattern ( ($generated@@77 $generated@@636 ($generated@@479 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) $generated@@76) (= (type $generated@@640) $generated@@64)) (= (type $generated@@641) $generated@@64)) ($generated@@77 $generated@@639 ($generated@@149 $generated@@640 $generated@@641))) (and (= ($generated@@373 ($generated@@459 ($generated@@146 $generated@@76 $generated@@76) $generated@@639)) $generated@@639) ($generated@@148 ($generated@@459 ($generated@@146 $generated@@76 $generated@@76) $generated@@639) ($generated@@149 $generated@@640 $generated@@641))))
 :pattern ( ($generated@@77 $generated@@639 ($generated@@149 $generated@@640 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) $generated@@64) (= (type $generated@@643) $generated@@64)) (= (type $generated@@644) $generated@@76)) ($generated@@77 $generated@@644 ($generated@@227 $generated@@642 $generated@@643))) (and (= ($generated@@373 ($generated@@459 $generated@@228 $generated@@644)) $generated@@644) ($generated@@148 ($generated@@459 $generated@@228 $generated@@644) ($generated@@227 $generated@@642 $generated@@643))))
 :pattern ( ($generated@@77 $generated@@644 ($generated@@227 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@645 T@U) ) (! (let (($generated@@646 (type $generated@@645)))
 (not ($generated@@0 ($generated@@74 ($generated@@319 $generated@@646) $generated@@645))))
 :pattern ( (let (($generated@@646 (type $generated@@645)))
($generated@@74 ($generated@@319 $generated@@646) $generated@@645)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@647) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@648) ($generated@@78 $generated@@76 $generated@@76))) (= (type $generated@@649) $generated@@64)) (= (type $generated@@650) $generated@@64)) (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@76) ($generated@@0 ($generated@@74 $generated@@647 $generated@@651))) (and ($generated@@77 $generated@@651 $generated@@649) ($generated@@77 ($generated@@74 $generated@@648 $generated@@651) $generated@@650)))
 :no-pattern (type $generated@@651)
 :no-pattern ($generated $generated@@651)
 :no-pattern ($generated@@0 $generated@@651)
))) ($generated@@148 ($generated@@171 $generated@@647 $generated@@648 ($generated@@479 $generated@@649 $generated@@650)) ($generated@@479 $generated@@649 $generated@@650)))
 :pattern ( ($generated@@171 $generated@@647 $generated@@648 ($generated@@479 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@652) ($generated@@78 $generated@@76 $generated@@4)) (= (type $generated@@653) ($generated@@78 $generated@@76 $generated@@76))) (= (type $generated@@654) $generated@@64)) (= (type $generated@@655) $generated@@64)) (forall (($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@76) ($generated@@0 ($generated@@74 $generated@@652 $generated@@656))) (and ($generated@@77 $generated@@656 $generated@@654) ($generated@@77 ($generated@@74 $generated@@653 $generated@@656) $generated@@655)))
 :no-pattern (type $generated@@656)
 :no-pattern ($generated $generated@@656)
 :no-pattern ($generated@@0 $generated@@656)
))) ($generated@@148 ($generated@@171 $generated@@652 $generated@@653 ($generated@@149 $generated@@654 $generated@@655)) ($generated@@149 $generated@@654 $generated@@655)))
 :pattern ( ($generated@@203 $generated@@652 $generated@@653 ($generated@@149 $generated@@654 $generated@@655)))
)))
(assert (forall (($generated@@658 T@U) ) (! (= (type ($generated@@657 $generated@@658)) $generated@@69)
 :pattern ( ($generated@@657 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@64) (= (type $generated@@660) $generated@@64)) (and (= ($generated@@72 ($generated@@227 $generated@@659 $generated@@660)) $generated@@62) (= ($generated@@657 ($generated@@227 $generated@@659 $generated@@660)) $generated@@63)))
 :pattern ( ($generated@@227 $generated@@659 $generated@@660))
)))
(assert (forall (($generated@@662 Int) ($generated@@663 Int) ) (! (= ($generated@@661 $generated@@662 $generated@@663) (* $generated@@662 $generated@@663))
 :pattern ( ($generated@@661 $generated@@662 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@228) (= ($generated@@620 ($generated@@373 $generated@@664)) ($generated@@621 $generated@@664)))
 :pattern ( ($generated@@620 ($generated@@373 $generated@@664)))
)))
(assert  (=> (<= 0 $generated@@144) (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@665) $generated@@64) (= (type $generated@@666) $generated@@64)) (= (type $generated@@667) ($generated@@146 $generated@@76 $generated@@76))) (= (type $generated@@668) $generated@@76)) (= (type $generated@@669) $generated@@76)) (or ($generated@@147 $generated@@665 $generated@@666 $generated@@667 $generated@@668 $generated@@669) (and (not (= 0 $generated@@144)) (and (and ($generated@@148 $generated@@667 ($generated@@149 $generated@@665 $generated@@666)) ($generated@@77 $generated@@668 $generated@@665)) ($generated@@77 $generated@@669 $generated@@666))))) (= ($generated@@145 $generated@@665 $generated@@666 $generated@@667 $generated@@668 $generated@@669) ($generated@@203 ($generated@@317 $generated@@665 ($generated@@302 ($generated@@318 ($generated@@319 $generated@@76) $generated@@668) ($generated@@202 $generated@@667))) ($generated@@320 $generated@@668 $generated@@669 ($generated@@216 $generated@@667)) ($generated@@149 $generated@@665 $generated@@666))))
 :pattern ( ($generated@@145 $generated@@665 $generated@@666 $generated@@667 $generated@@668 $generated@@669))
))))
(assert (forall (($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@76) ($generated@@77 $generated@@670 ($generated@@114 0))) (and (= ($generated@@373 ($generated@@459 $generated@@2 $generated@@670)) $generated@@670) ($generated@@148 ($generated@@459 ($generated@@78 $generated@@76 $generated@@4) $generated@@670) ($generated@@114 0))))
 :pattern ( ($generated@@77 $generated@@670 ($generated@@114 0)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (= (type $generated@@671) $generated@@76) (= (type $generated@@672) $generated@@64)) ($generated@@77 $generated@@671 ($generated@@339 $generated@@672))) (and (= ($generated@@373 ($generated@@459 ($generated@@78 $generated@@76 $generated@@4) $generated@@671)) $generated@@671) ($generated@@148 ($generated@@459 ($generated@@78 $generated@@76 $generated@@4) $generated@@671) ($generated@@339 $generated@@672))))
 :pattern ( ($generated@@77 $generated@@671 ($generated@@339 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (= (type $generated@@673) $generated@@76) (= (type $generated@@674) $generated@@64)) ($generated@@77 $generated@@673 ($generated@@344 $generated@@674))) (and (= ($generated@@373 ($generated@@459 ($generated@@78 $generated@@76 $generated@@4) $generated@@673)) $generated@@673) ($generated@@148 ($generated@@459 ($generated@@78 $generated@@76 $generated@@4) $generated@@673) ($generated@@344 $generated@@674))))
 :pattern ( ($generated@@77 $generated@@673 ($generated@@344 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (= (type $generated@@675) $generated@@76) (= (type $generated@@676) $generated@@64)) ($generated@@77 $generated@@675 ($generated@@241 $generated@@676))) (and (= ($generated@@373 ($generated@@459 ($generated@@78 $generated@@76 $generated@@2) $generated@@675)) $generated@@675) ($generated@@148 ($generated@@459 ($generated@@78 $generated@@76 $generated@@2) $generated@@675) ($generated@@241 $generated@@676))))
 :pattern ( ($generated@@77 $generated@@675 ($generated@@241 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@677) $generated@@76) (= (type $generated@@678) $generated@@64)) ($generated@@77 $generated@@677 ($generated@@579 $generated@@678))) (and (= ($generated@@373 ($generated@@459 ($generated@@367 $generated@@76) $generated@@677)) $generated@@677) ($generated@@148 ($generated@@459 ($generated@@367 $generated@@76) $generated@@677) ($generated@@579 $generated@@678))))
 :pattern ( ($generated@@77 $generated@@677 ($generated@@579 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (= (type $generated@@679) ($generated@@78 $generated@@76 $generated@@2)) (= (type $generated@@680) $generated@@64)) (= (type $generated@@681) ($generated@@78 $generated@@115 $generated@@116))) (= ($generated@@113 $generated@@679 ($generated@@241 $generated@@680) $generated@@681) (forall (($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@76) (< 0 ($generated ($generated@@74 $generated@@679 $generated@@682)))) ($generated@@353 $generated@@682 $generated@@680 $generated@@681))
 :pattern ( ($generated@@74 $generated@@679 $generated@@682))
))))
 :pattern ( ($generated@@113 $generated@@679 ($generated@@241 $generated@@680) $generated@@681))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (! (let (($generated@@685 ($generated@@79 (type $generated@@683))))
 (=> (and (= (type $generated@@683) ($generated@@78 $generated@@685 $generated@@4)) (= (type $generated@@684) ($generated@@78 $generated@@685 $generated@@4))) (= ($generated@@432 $generated@@683 $generated@@684) (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@685) (or (not ($generated@@0 ($generated@@74 $generated@@683 $generated@@686))) (not ($generated@@0 ($generated@@74 $generated@@684 $generated@@686)))))
 :pattern ( ($generated@@74 $generated@@683 $generated@@686))
 :pattern ( ($generated@@74 $generated@@684 $generated@@686))
)))))
 :pattern ( ($generated@@432 $generated@@683 $generated@@684))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) $generated@@228) (= (type $generated@@688) $generated@@64)) (= (type $generated@@689) ($generated@@78 $generated@@115 $generated@@116))) (and ($generated@@352 $generated@@689) (and ($generated@@226 $generated@@687) (exists (($generated@@690 T@U) ) (!  (and (= (type $generated@@690) $generated@@64) ($generated@@113 $generated@@687 ($generated@@227 $generated@@688 $generated@@690) $generated@@689))
 :pattern ( ($generated@@113 $generated@@687 ($generated@@227 $generated@@688 $generated@@690) $generated@@689))
))))) ($generated@@353 ($generated@@235 $generated@@687) $generated@@688 $generated@@689))
 :pattern ( ($generated@@353 ($generated@@235 $generated@@687) $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (and (= (type $generated@@691) $generated@@228) (= (type $generated@@692) $generated@@64)) (= (type $generated@@693) ($generated@@78 $generated@@115 $generated@@116))) (and ($generated@@352 $generated@@693) (and ($generated@@226 $generated@@691) (exists (($generated@@694 T@U) ) (!  (and (= (type $generated@@694) $generated@@64) ($generated@@113 $generated@@691 ($generated@@227 $generated@@694 $generated@@692) $generated@@693))
 :pattern ( ($generated@@113 $generated@@691 ($generated@@227 $generated@@694 $generated@@692) $generated@@693))
))))) ($generated@@353 ($generated@@236 $generated@@691) $generated@@692 $generated@@693))
 :pattern ( ($generated@@353 ($generated@@236 $generated@@691) $generated@@692 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) $generated@@76) (= (type $generated@@696) $generated@@76)) (= ($generated@@309 ($generated@@316 $generated@@695) ($generated@@316 $generated@@696)) ($generated@@316 ($generated@@309 $generated@@695 $generated@@696))))
 :pattern ( ($generated@@309 ($generated@@316 $generated@@695) ($generated@@316 $generated@@696)))
)))
(assert (forall (($generated@@697 Int) ) (! (= ($generated@@373 ($generated@@8 ($generated@@349 $generated@@697))) ($generated@@316 ($generated@@373 ($generated@@8 $generated@@697))))
 :pattern ( ($generated@@373 ($generated@@8 ($generated@@349 $generated@@697))))
)))
(assert (forall (($generated@@698 T@U) ) (! (= ($generated@@373 ($generated@@316 $generated@@698)) ($generated@@316 ($generated@@373 $generated@@698)))
 :pattern ( ($generated@@373 ($generated@@316 $generated@@698)))
)))
(assert (forall (($generated@@699 T@U) ) (! (let (($generated@@700 ($generated@@368 (type $generated@@699))))
 (=> (and (= (type $generated@@699) ($generated@@367 $generated@@700)) (= ($generated@@366 $generated@@699) 0)) (= $generated@@699 ($generated@@365 $generated@@700))))
 :pattern ( ($generated@@366 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (! (let (($generated@@704 (type $generated@@702)))
 (=> (and (and (= (type $generated@@701) ($generated@@78 $generated@@704 $generated@@2)) (= (type $generated@@703) $generated@@2)) (<= 0 ($generated $generated@@703))) (= ($generated@@386 ($generated@@81 $generated@@701 $generated@@702 $generated@@703)) (+ (- ($generated@@386 $generated@@701) ($generated ($generated@@74 $generated@@701 $generated@@702))) ($generated $generated@@703)))))
 :pattern ( ($generated@@386 ($generated@@81 $generated@@701 $generated@@702 $generated@@703)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (! (let (($generated@@708 (type $generated@@707)))
 (=> (and (= (type $generated@@705) ($generated@@78 $generated@@708 $generated@@4)) (= (type $generated@@706) ($generated@@78 $generated@@708 $generated@@4))) (= ($generated@@0 ($generated@@74 ($generated@@302 $generated@@705 $generated@@706) $generated@@707))  (or ($generated@@0 ($generated@@74 $generated@@705 $generated@@707)) ($generated@@0 ($generated@@74 $generated@@706 $generated@@707))))))
 :pattern ( ($generated@@74 ($generated@@302 $generated@@705 $generated@@706) $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@709) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@710) $generated@@2)) ($generated@@113 $generated@@710 $generated@@46 $generated@@709))
 :pattern ( ($generated@@113 $generated@@710 $generated@@46 $generated@@709))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (= (type $generated@@711) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@712) $generated@@3)) ($generated@@113 $generated@@712 $generated@@47 $generated@@711))
 :pattern ( ($generated@@113 $generated@@712 $generated@@47 $generated@@711))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (= (type $generated@@713) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@714) $generated@@4)) ($generated@@113 $generated@@714 $generated@@44 $generated@@713))
 :pattern ( ($generated@@113 $generated@@714 $generated@@44 $generated@@713))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (= (type $generated@@715) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@716) $generated@@537)) ($generated@@113 $generated@@716 $generated@@45 $generated@@715))
 :pattern ( ($generated@@113 $generated@@716 $generated@@45 $generated@@715))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (= (type $generated@@717) ($generated@@78 $generated@@115 $generated@@116)) (= (type $generated@@718) $generated@@76)) ($generated@@113 $generated@@718 $generated@@48 $generated@@717))
 :pattern ( ($generated@@113 $generated@@718 $generated@@48 $generated@@717))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (= (type $generated@@719) ($generated@@367 $generated@@76)) (= (type $generated@@720) $generated@@64)) (= ($generated@@148 $generated@@719 ($generated@@579 $generated@@720)) (forall (($generated@@721 Int) ) (!  (=> (and (<= 0 $generated@@721) (< $generated@@721 ($generated@@366 $generated@@719))) ($generated@@77 ($generated@@580 $generated@@719 $generated@@721) $generated@@720))
 :pattern ( ($generated@@580 $generated@@719 $generated@@721))
))))
 :pattern ( ($generated@@148 $generated@@719 ($generated@@579 $generated@@720)))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 Int) ) (!  (=> (= (type $generated@@723) ($generated@@367 $generated@@76)) (=> (and (<= 0 $generated@@724) (< $generated@@724 ($generated@@366 $generated@@723))) (< ($generated@@621 ($generated@@459 $generated@@228 ($generated@@580 $generated@@723 $generated@@724))) ($generated@@722 $generated@@723))))
 :pattern ( ($generated@@621 ($generated@@459 $generated@@228 ($generated@@580 $generated@@723 $generated@@724))))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (and (= (type $generated@@725) ($generated@@172 $generated@@76 $generated@@76)) (= (type $generated@@726) $generated@@64)) (= (type $generated@@727) $generated@@64)) ($generated@@148 $generated@@725 ($generated@@479 $generated@@726 $generated@@727))) (and (and ($generated@@148 ($generated@@170 $generated@@725) ($generated@@339 $generated@@726)) ($generated@@148 ($generated@@411 $generated@@725) ($generated@@339 $generated@@727))) ($generated@@148 ($generated@@458 $generated@@725) ($generated@@339 ($generated@@227 $generated@@726 $generated@@727)))))
 :pattern ( ($generated@@148 $generated@@725 ($generated@@479 $generated@@726 $generated@@727)))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (and (and (= (type $generated@@728) ($generated@@146 $generated@@76 $generated@@76)) (= (type $generated@@729) $generated@@64)) (= (type $generated@@730) $generated@@64)) ($generated@@148 $generated@@728 ($generated@@149 $generated@@729 $generated@@730))) (and (and ($generated@@148 ($generated@@202 $generated@@728) ($generated@@344 $generated@@729)) ($generated@@148 ($generated@@422 $generated@@728) ($generated@@344 $generated@@730))) ($generated@@148 ($generated@@465 $generated@@728) ($generated@@344 ($generated@@227 $generated@@729 $generated@@730)))))
 :pattern ( ($generated@@148 $generated@@728 ($generated@@149 $generated@@729 $generated@@730)))
)))
(assert (forall (($generated@@731 T@U) ) (!  (=> (= (type $generated@@731) $generated@@2) ($generated@@148 $generated@@731 $generated@@46))
 :pattern ( ($generated@@148 $generated@@731 $generated@@46))
)))
(assert (forall (($generated@@732 T@U) ) (!  (=> (= (type $generated@@732) $generated@@3) ($generated@@148 $generated@@732 $generated@@47))
 :pattern ( ($generated@@148 $generated@@732 $generated@@47))
)))
(assert (forall (($generated@@733 T@U) ) (!  (=> (= (type $generated@@733) $generated@@4) ($generated@@148 $generated@@733 $generated@@44))
 :pattern ( ($generated@@148 $generated@@733 $generated@@44))
)))
(assert (forall (($generated@@734 T@U) ) (!  (=> (= (type $generated@@734) $generated@@537) ($generated@@148 $generated@@734 $generated@@45))
 :pattern ( ($generated@@148 $generated@@734 $generated@@45))
)))
(assert (forall (($generated@@735 T@U) ) (!  (=> (= (type $generated@@735) $generated@@76) ($generated@@148 $generated@@735 $generated@@48))
 :pattern ( ($generated@@148 $generated@@735 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@736 () Int)
(declare-fun $generated@@737 () T@U)
(declare-fun $generated@@738 () Int)
(declare-fun $generated@@739 () Int)
(declare-fun $generated@@740 () Int)
(declare-fun $generated@@741 () Bool)
(declare-fun $generated@@742 () Int)
(declare-fun $generated@@743 () T@U)
(declare-fun $generated@@744 () Int)
(declare-fun $generated@@745 () T@U)
(declare-fun $generated@@746 () Int)
(declare-fun $generated@@747 () Int)
(declare-fun $generated@@748 () Int)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 () T@U)
(declare-fun $generated@@751 () T@U)
(declare-fun $generated@@752 (T@U) Bool)
(declare-fun $generated@@753 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@737) ($generated@@146 $generated@@76 $generated@@76)) (= (type $generated@@743) ($generated@@78 $generated@@115 $generated@@116))) (= (type $generated@@745) ($generated@@146 $generated@@76 $generated@@76))) (= (type $generated@@749) $generated@@115)) (= (type $generated@@750) ($generated@@248 $generated@@115 $generated@@4))) (= (type $generated@@751) ($generated@@146 $generated@@76 $generated@@76))) (= (type $generated@@753) ($generated@@146 $generated@@76 $generated@@76))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 42) (let (($generated@@754 true))
(let (($generated@@755  (=> (and (< $generated@@736 ($generated@@349 0)) (= (ControlFlow 0 18) 16)) $generated@@754)))
(let (($generated@@756  (=> (and (<= ($generated@@349 0) $generated@@736) (= (ControlFlow 0 17) 16)) $generated@@754)))
(let (($generated@@757  (and (=> (= (ControlFlow 0 19) 17) $generated@@756) (=> (= (ControlFlow 0 19) 18) $generated@@755))))
(let (($generated@@758 true))
(let (($generated@@759  (=> (forall (($generated@@760 T@U) ) (!  (=> (and (= (type $generated@@760) $generated@@2) ($generated@@0 ($generated@@74 ($generated@@202 $generated@@737) ($generated@@373 $generated@@760)))) (= ($generated ($generated@@459 $generated@@2 ($generated@@74 ($generated@@216 $generated@@737) ($generated@@373 $generated@@760)))) ($generated@@661 ($generated $generated@@760) ($generated $generated@@760))))
 :pattern ( ($generated@@459 $generated@@2 ($generated@@74 ($generated@@216 $generated@@737) ($generated@@373 $generated@@760))))
 :pattern ( ($generated@@74 ($generated@@202 $generated@@737) ($generated@@373 $generated@@760)))
)) (and (=> (= (ControlFlow 0 20) 19) $generated@@757) (=> (= (ControlFlow 0 20) 15) $generated@@758)))))
(let (($generated@@761  (=> (and (not ($generated@@0 ($generated@@74 ($generated@@202 $generated@@737) ($generated@@373 ($generated@@8 $generated@@738))))) (= (ControlFlow 0 23) 20)) $generated@@759)))
(let (($generated@@762  (=> ($generated@@0 ($generated@@74 ($generated@@202 $generated@@737) ($generated@@373 ($generated@@8 $generated@@738)))) (and (=> (= (ControlFlow 0 21) (- 0 22)) ($generated@@0 ($generated@@74 ($generated@@202 $generated@@737) ($generated@@373 ($generated@@8 $generated@@738))))) (=> (= (ControlFlow 0 21) 20) $generated@@759)))))
(let (($generated@@763  (and (=> (= (ControlFlow 0 24) 21) $generated@@762) (=> (= (ControlFlow 0 24) 23) $generated@@761))))
(let (($generated@@764 true))
(let (($generated@@765  (=> (and (<= ($generated@@349 0) $generated@@739) (<= $generated@@739 $generated@@740)) (and (=> (= (ControlFlow 0 25) 24) $generated@@763) (=> (= (ControlFlow 0 25) 14) $generated@@764)))))
(let (($generated@@766  (=> (and (< $generated@@739 ($generated@@349 0)) (= (ControlFlow 0 27) 25)) $generated@@765)))
(let (($generated@@767  (=> (and (<= ($generated@@349 0) $generated@@739) (= (ControlFlow 0 26) 25)) $generated@@765)))
(let (($generated@@768  (=> (not $generated@@741) (and (=> (= (ControlFlow 0 28) 26) $generated@@767) (=> (= (ControlFlow 0 28) 27) $generated@@766)))))
(let (($generated@@769  (=> (and (< $generated@@739 $generated@@740) (= $generated@@742 (- $generated@@740 $generated@@739))) (=> (and (and (and ($generated@@113 $generated@@737 ($generated@@149 $generated@@46 $generated@@46) $generated@@743) ($generated@@113 ($generated@@8 $generated@@739) $generated@@46 $generated@@743)) (and (= $generated@@744 ($generated@@661 $generated@@739 $generated@@739)) ($generated@@113 ($generated@@8 $generated@@744) $generated@@46 $generated@@743))) (and (and ($generated@@147 $generated@@46 $generated@@46 $generated@@737 ($generated@@373 ($generated@@8 $generated@@739)) ($generated@@373 ($generated@@8 ($generated@@661 $generated@@739 $generated@@739)))) ($generated@@147 $generated@@46 $generated@@46 $generated@@737 ($generated@@373 ($generated@@8 $generated@@739)) ($generated@@373 ($generated@@8 ($generated@@661 $generated@@739 $generated@@739))))) (and (= $generated@@745 ($generated@@145 $generated@@46 $generated@@46 $generated@@737 ($generated@@373 ($generated@@8 $generated@@739)) ($generated@@373 ($generated@@8 ($generated@@661 $generated@@739 $generated@@739))))) (= $generated@@746 (+ $generated@@739 1))))) (and (=> (= (ControlFlow 0 7) (- 0 12)) (or (<= 0 $generated@@742) (= (- $generated@@740 $generated@@746) $generated@@742))) (=> (or (<= 0 $generated@@742) (= (- $generated@@740 $generated@@746) $generated@@742)) (and (=> (= (ControlFlow 0 7) (- 0 11)) (< (- $generated@@740 $generated@@746) $generated@@742)) (=> (< (- $generated@@740 $generated@@746) $generated@@742) (and (=> (= (ControlFlow 0 7) (- 0 10)) (=> $generated@@741 (<= ($generated@@349 0) $generated@@746))) (=> (=> $generated@@741 (<= ($generated@@349 0) $generated@@746)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (=> $generated@@741 (<= $generated@@746 $generated@@740))) (=> (=> $generated@@741 (<= $generated@@746 $generated@@740)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (=> $generated@@741 (forall (($generated@@770 Int) ) (!  (=> ($generated@@0 ($generated@@74 ($generated@@202 $generated@@745) ($generated@@373 ($generated@@8 $generated@@770)))) (= ($generated ($generated@@459 $generated@@2 ($generated@@74 ($generated@@216 $generated@@745) ($generated@@373 ($generated@@8 $generated@@770))))) ($generated@@661 $generated@@770 $generated@@770)))
 :pattern ( ($generated@@459 $generated@@2 ($generated@@74 ($generated@@216 $generated@@745) ($generated@@373 ($generated@@8 $generated@@770)))))
 :pattern ( ($generated@@74 ($generated@@202 $generated@@745) ($generated@@373 ($generated@@8 $generated@@770))))
)))) (=> (=> $generated@@741 (forall (($generated@@771 T@U) ) (!  (=> (and (= (type $generated@@771) $generated@@2) ($generated@@0 ($generated@@74 ($generated@@202 $generated@@745) ($generated@@373 $generated@@771)))) (= ($generated ($generated@@459 $generated@@2 ($generated@@74 ($generated@@216 $generated@@745) ($generated@@373 $generated@@771)))) ($generated@@661 ($generated $generated@@771) ($generated $generated@@771))))
 :pattern ( ($generated@@459 $generated@@2 ($generated@@74 ($generated@@216 $generated@@745) ($generated@@373 $generated@@771))))
 :pattern ( ($generated@@74 ($generated@@202 $generated@@745) ($generated@@373 $generated@@771)))
))) (=> (= (ControlFlow 0 7) (- 0 6)) (=> $generated@@741 (forall (($generated@@772 Int) ) (!  (=> true (=  (and (<= ($generated@@349 0) $generated@@772) (< $generated@@772 $generated@@746)) ($generated@@0 ($generated@@74 ($generated@@202 $generated@@745) ($generated@@373 ($generated@@8 $generated@@772))))))
 :pattern ( ($generated@@74 ($generated@@202 $generated@@745) ($generated@@373 ($generated@@8 $generated@@772))))
))))))))))))))))))
(let (($generated@@773  (=> (and (<= $generated@@740 $generated@@739) (= (ControlFlow 0 5) (- 0 4))) (forall (($generated@@774 Int) ) (!  (=> (and (<= ($generated@@349 0) $generated@@774) (< $generated@@774 100)) (and ($generated@@0 ($generated@@74 ($generated@@202 $generated@@737) ($generated@@373 ($generated@@8 $generated@@774)))) (= ($generated ($generated@@459 $generated@@2 ($generated@@74 ($generated@@216 $generated@@737) ($generated@@373 ($generated@@8 $generated@@774))))) ($generated@@661 $generated@@774 $generated@@774))))
 :pattern ( ($generated@@459 $generated@@2 ($generated@@74 ($generated@@216 $generated@@737) ($generated@@373 ($generated@@8 $generated@@774)))))
 :pattern ( ($generated@@74 ($generated@@202 $generated@@737) ($generated@@373 ($generated@@8 $generated@@774))))
)))))
(let (($generated@@775  (=> $generated@@741 (and (=> (= (ControlFlow 0 13) 5) $generated@@773) (=> (= (ControlFlow 0 13) 7) $generated@@769)))))
(let (($generated@@776  (and (=> (= (ControlFlow 0 29) 28) $generated@@768) (=> (= (ControlFlow 0 29) 13) $generated@@775))))
(let (($generated@@777 true))
(let (($generated@@778  (=> (and ($generated@@148 $generated@@737 ($generated@@149 $generated@@46 $generated@@46)) ($generated@@113 $generated@@737 ($generated@@149 $generated@@46 $generated@@46) $generated@@743)) (=> (and (and (and (and (and (and (and (not false) (<= 0 $generated@@739)) (= $generated@@740 100)) (= $generated@@747 0)) (= $generated@@740 100)) (= $generated@@748 100)) (and (and (=> $generated@@741 true) (=> $generated@@741 (<= ($generated@@349 0) $generated@@739))) (and (=> $generated@@741 (<= $generated@@739 $generated@@740)) (=> $generated@@741 true)))) (and (and (and (=> $generated@@741 (forall (($generated@@779 T@U) ) (!  (=> (and (= (type $generated@@779) $generated@@2) ($generated@@0 ($generated@@74 ($generated@@202 $generated@@737) ($generated@@373 $generated@@779)))) (= ($generated ($generated@@459 $generated@@2 ($generated@@74 ($generated@@216 $generated@@737) ($generated@@373 $generated@@779)))) ($generated@@661 ($generated $generated@@779) ($generated $generated@@779))))
 :pattern ( ($generated@@459 $generated@@2 ($generated@@74 ($generated@@216 $generated@@737) ($generated@@373 $generated@@779))))
 :pattern ( ($generated@@74 ($generated@@202 $generated@@737) ($generated@@373 $generated@@779)))
))) (=> $generated@@741 true)) (and (=> $generated@@741 (forall (($generated@@780 T@U) ) (!  (=> (and (= (type $generated@@780) $generated@@2) true) (=  (and (<= ($generated@@349 0) ($generated $generated@@780)) (< ($generated $generated@@780) $generated@@739)) ($generated@@0 ($generated@@74 ($generated@@202 $generated@@737) ($generated@@373 $generated@@780)))))
 :pattern ( ($generated@@74 ($generated@@202 $generated@@737) ($generated@@373 $generated@@780)))
))) (forall (($generated@@781 T@U) ) (!  (=> (= (type $generated@@781) $generated@@115) (=> (and (not (= $generated@@781 $generated@@749)) ($generated@@0 ($generated@@117 ($generated@@74 $generated@@743 $generated@@781) $generated@@60))) (= ($generated@@74 $generated@@743 $generated@@781) ($generated@@74 $generated@@743 $generated@@781))))
 :pattern ( ($generated@@74 $generated@@743 $generated@@781))
)))) (and (and ($generated@@140 $generated@@743 $generated@@743) (forall (($generated@@782 T@U) ($generated@@783 T@U) ) (! (let (($generated@@784 ($generated@@67 (type $generated@@783))))
 (=> (and (and (= (type $generated@@782) $generated@@115) (= (type $generated@@783) ($generated@@66 $generated@@784))) (and (not (= $generated@@782 $generated@@749)) ($generated@@0 ($generated@@117 ($generated@@74 $generated@@743 $generated@@782) $generated@@60)))) (or (= ($generated@@117 ($generated@@74 $generated@@743 $generated@@782) $generated@@783) ($generated@@117 ($generated@@74 $generated@@743 $generated@@782) $generated@@783)) ($generated@@0 ($generated@@246 $generated@@750 $generated@@782 $generated@@783)))))
 :pattern ( ($generated@@117 ($generated@@74 $generated@@743 $generated@@782) $generated@@783))
))) (and (<= (- $generated@@740 $generated@@739) $generated@@748) (=> (= (- $generated@@740 $generated@@739) $generated@@748) true))))) (and (=> (= (ControlFlow 0 30) 3) $generated@@777) (=> (= (ControlFlow 0 30) 29) $generated@@776))))))
(let (($generated@@785  (and (=> (= (ControlFlow 0 31) (- 0 36)) (forall (($generated@@786 Int) ) (!  (=> true (not ($generated@@0 ($generated@@74 ($generated@@202 $generated@@751) ($generated@@373 ($generated@@8 $generated@@786))))))
 :pattern ( ($generated@@74 ($generated@@202 $generated@@751) ($generated@@373 ($generated@@8 $generated@@786))))
))) (=> (forall (($generated@@787 T@U) ) (!  (=> (and (= (type $generated@@787) $generated@@2) true) (not ($generated@@0 ($generated@@74 ($generated@@202 $generated@@751) ($generated@@373 $generated@@787)))))
 :pattern ( ($generated@@74 ($generated@@202 $generated@@751) ($generated@@373 $generated@@787)))
)) (=> (= $generated@@747 ($generated@@349 0)) (=> (and (= $generated@@740 ($generated@@349 100)) (= $generated@@748 (- $generated@@740 $generated@@747))) (and (=> (= (ControlFlow 0 31) (- 0 35)) (=> $generated@@741 (<= ($generated@@349 0) $generated@@747))) (=> (=> $generated@@741 (<= ($generated@@349 0) $generated@@747)) (and (=> (= (ControlFlow 0 31) (- 0 34)) (=> $generated@@741 (<= $generated@@747 $generated@@740))) (=> (=> $generated@@741 (<= $generated@@747 $generated@@740)) (and (=> (= (ControlFlow 0 31) (- 0 33)) (=> $generated@@741 (forall (($generated@@788 Int) ) (!  (=> ($generated@@0 ($generated@@74 ($generated@@202 $generated@@751) ($generated@@373 ($generated@@8 $generated@@788)))) (= ($generated ($generated@@459 $generated@@2 ($generated@@74 ($generated@@216 $generated@@751) ($generated@@373 ($generated@@8 $generated@@788))))) ($generated@@661 $generated@@788 $generated@@788)))
 :pattern ( ($generated@@459 $generated@@2 ($generated@@74 ($generated@@216 $generated@@751) ($generated@@373 ($generated@@8 $generated@@788)))))
 :pattern ( ($generated@@74 ($generated@@202 $generated@@751) ($generated@@373 ($generated@@8 $generated@@788))))
)))) (=> (=> $generated@@741 (forall (($generated@@789 T@U) ) (!  (=> (and (= (type $generated@@789) $generated@@2) ($generated@@0 ($generated@@74 ($generated@@202 $generated@@751) ($generated@@373 $generated@@789)))) (= ($generated ($generated@@459 $generated@@2 ($generated@@74 ($generated@@216 $generated@@751) ($generated@@373 $generated@@789)))) ($generated@@661 ($generated $generated@@789) ($generated $generated@@789))))
 :pattern ( ($generated@@459 $generated@@2 ($generated@@74 ($generated@@216 $generated@@751) ($generated@@373 $generated@@789))))
 :pattern ( ($generated@@74 ($generated@@202 $generated@@751) ($generated@@373 $generated@@789)))
))) (and (=> (= (ControlFlow 0 31) (- 0 32)) (=> $generated@@741 (forall (($generated@@790 Int) ) (!  (=> true (=  (and (<= ($generated@@349 0) $generated@@790) (< $generated@@790 $generated@@747)) ($generated@@0 ($generated@@74 ($generated@@202 $generated@@751) ($generated@@373 ($generated@@8 $generated@@790))))))
 :pattern ( ($generated@@74 ($generated@@202 $generated@@751) ($generated@@373 ($generated@@8 $generated@@790))))
)))) (=> (=> $generated@@741 (forall (($generated@@791 T@U) ) (!  (=> (and (= (type $generated@@791) $generated@@2) true) (=  (and (<= ($generated@@349 0) ($generated $generated@@791)) (< ($generated $generated@@791) $generated@@747)) ($generated@@0 ($generated@@74 ($generated@@202 $generated@@751) ($generated@@373 $generated@@791)))))
 :pattern ( ($generated@@74 ($generated@@202 $generated@@751) ($generated@@373 $generated@@791)))
))) (=> (= (ControlFlow 0 31) 30) $generated@@778)))))))))))))))
(let (($generated@@792 true))
(let (($generated@@793  (=> (= $generated@@751 ($generated@@203 ($generated@@75 $generated@@46 ($generated@@0 ($generated@@316 ($generated@@11 false)))) ($generated@@440 ($generated@@373 ($generated@@8 ($generated@@349 0)))) ($generated@@149 $generated@@46 $generated@@46))) (and (=> (= (ControlFlow 0 37) 31) $generated@@785) (=> (= (ControlFlow 0 37) 2) $generated@@792)))))
(let (($generated@@794  (=> (and (not ($generated@@0 ($generated@@316 ($generated@@11 false)))) (= (ControlFlow 0 39) 37)) $generated@@793)))
(let (($generated@@795  (=> (and ($generated@@0 ($generated@@316 ($generated@@11 false))) (= (ControlFlow 0 38) 37)) $generated@@793)))
(let (($generated@@796  (and (=> (= (ControlFlow 0 40) 38) $generated@@795) (=> (= (ControlFlow 0 40) 39) $generated@@794))))
(let (($generated@@797 true))
(let (($generated@@798  (=> (= $generated@@750 ($generated@@247 $generated@@749 $generated@@743 $generated@@60 false)) (and (=> (= (ControlFlow 0 41) 40) $generated@@796) (=> (= (ControlFlow 0 41) 1) $generated@@797)))))
(let (($generated@@799  (=> (and ($generated@@352 $generated@@743) ($generated@@752 $generated@@743)) (=> (and (and (and ($generated@@148 $generated@@753 ($generated@@149 $generated@@46 $generated@@46)) ($generated@@113 $generated@@753 ($generated@@149 $generated@@46 $generated@@46) $generated@@743)) true) (and (= 1 $generated@@144) (= (ControlFlow 0 42) 41))) $generated@@798))))
$generated@@799))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@196 (T@U T@U) Bool)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 (T@U T@U) T@U)
(declare-fun $generated@@200 () T@T)
(declare-fun $generated@@206 (T@U T@U) Bool)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@219 (T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@221 (T@T T@T) T@T)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@275 (T@U T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@295 (Int) Int)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Bool)
(declare-fun $generated@@302 (T@U T@U T@U) Bool)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@322 (Int) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (Int Int) Int)
(declare-fun $generated@@325 (T@T T@U) T@U)
(declare-fun $generated@@335 (T@U) Int)
(declare-fun $generated@@336 (T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@U)
(declare-fun $generated@@356 (T@U Int Int) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@137 $generated@@138)) 14)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@134 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@136 ($generated@@134 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@134 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@132 $generated@@143)) ($generated@@76 $generated@@144 $generated@@4)))
 :pattern ( ($generated@@132 $generated@@143))
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (let (($generated@@148 ($generated@@80 (type $generated@@146))))
(let (($generated@@149 ($generated@@79 (type $generated@@145))))
(= (type ($generated@@133 $generated@@145 $generated@@146 $generated@@147)) ($generated@@134 $generated@@149 $generated@@148))))
 :pattern ( ($generated@@133 $generated@@145 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@80 (type $generated@@151))))
(let (($generated@@154 ($generated@@79 (type $generated@@150))))
 (=> (and (and (= (type $generated@@150) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@151) ($generated@@76 $generated@@154 $generated@@153))) (= (type $generated@@152) $generated@@64)) (= ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)) $generated@@150))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)))
)))
(assert (forall (($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@136 (type $generated@@156))))
(let (($generated@@158 ($generated@@135 (type $generated@@156))))
(= (type ($generated@@155 $generated@@156)) ($generated@@76 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@80 (type $generated@@160))))
(let (($generated@@163 ($generated@@79 (type $generated@@159))))
 (=> (and (and (= (type $generated@@159) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@160) ($generated@@76 $generated@@163 $generated@@162))) (= (type $generated@@161) $generated@@64)) (= ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)) $generated@@160))))
 :pattern ( ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)))
)))
(assert  (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@169 $generated@@170)) 15)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@166 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@166 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@164 $generated@@175)) ($generated@@76 $generated@@176 $generated@@4)))
 :pattern ( ($generated@@164 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@80 (type $generated@@178))))
(let (($generated@@181 ($generated@@79 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) ($generated@@166 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@80 (type $generated@@183))))
(let (($generated@@186 ($generated@@79 (type $generated@@182))))
 (=> (and (and (= (type $generated@@182) ($generated@@76 $generated@@186 $generated@@4)) (= (type $generated@@183) ($generated@@76 $generated@@186 $generated@@185))) (= (type $generated@@184) $generated@@64)) (= ($generated@@164 ($generated@@165 $generated@@182 $generated@@183 $generated@@184)) $generated@@182))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@182 $generated@@183 $generated@@184)))
)))
(assert (forall (($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@168 (type $generated@@188))))
(let (($generated@@190 ($generated@@167 (type $generated@@188))))
(= (type ($generated@@187 $generated@@188)) ($generated@@76 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@80 (type $generated@@192))))
(let (($generated@@195 ($generated@@79 (type $generated@@191))))
 (=> (and (and (= (type $generated@@191) ($generated@@76 $generated@@195 $generated@@4)) (= (type $generated@@192) ($generated@@76 $generated@@195 $generated@@194))) (= (type $generated@@193) $generated@@64)) (= ($generated@@187 ($generated@@165 $generated@@191 $generated@@192 $generated@@193)) $generated@@192))))
 :pattern ( ($generated@@187 ($generated@@165 $generated@@191 $generated@@192 $generated@@193)))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> (= (type $generated@@197) $generated@@2) ($generated@@196 $generated@@197 ($generated@@75 0)))
 :pattern ( ($generated@@196 $generated@@197 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@200) 16) (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! (= (type ($generated@@199 $generated@@201 $generated@@202)) $generated@@64)
 :pattern ( ($generated@@199 $generated@@201 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (and (= (type $generated@@203) $generated@@64) (= (type $generated@@204) $generated@@64)) (= (type $generated@@205) $generated@@200)) ($generated@@196 $generated@@205 ($generated@@199 $generated@@203 $generated@@204))) ($generated@@198 $generated@@205))
 :pattern ( ($generated@@198 $generated@@205) ($generated@@196 $generated@@205 ($generated@@199 $generated@@203 $generated@@204)))
)))
(assert  (and (and (= ($generated@@1 $generated@@209) 17) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@207 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@207 $generated@@210))
))) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@208 $generated@@211)) $generated@@209)
 :pattern ( ($generated@@208 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (= (type $generated@@212) $generated@@200) (= (type $generated@@213) $generated@@200)) true) (= ($generated@@206 $generated@@212 $generated@@213)  (and (= ($generated@@207 $generated@@212) ($generated@@207 $generated@@213)) (= ($generated@@208 $generated@@212) ($generated@@208 $generated@@213)))))
 :pattern ( ($generated@@206 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 T@U) ) (! (= (type ($generated@@214 $generated@@216)) $generated@@64)
 :pattern ( ($generated@@214 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (= (type $generated@@217) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@218) $generated@@64)) ($generated@@196 $generated@@217 ($generated@@214 $generated@@218))) ($generated@@215 $generated@@217))
 :pattern ( ($generated@@196 $generated@@217 ($generated@@214 $generated@@218)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@1 ($generated@@221 $generated@@225 $generated@@226)) 18)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@221 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@223 ($generated@@221 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@221 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@223 (type $generated@@231))))
(= (type ($generated@@219 $generated@@231 $generated@@232 $generated@@233)) $generated@@234))
 :pattern ( ($generated@@219 $generated@@231 $generated@@232 $generated@@233))
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(let (($generated@@240 (type $generated@@236)))
(= (type ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@221 $generated@@240 $generated@@239))))
 :pattern ( ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@223 (type $generated@@241))))
 (=> (= (type $generated@@244) $generated@@245) (= ($generated@@219 ($generated@@224 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@242 $generated@@243) $generated@@244)))
 :weight 0
))) (and (and (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (or (= $generated@@248 $generated@@250) (= ($generated@@219 ($generated@@224 $generated@@247 $generated@@248 $generated@@249 $generated@@246) $generated@@250 $generated@@251) ($generated@@219 $generated@@247 $generated@@250 $generated@@251)))
 :weight 0
)) (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (or (= $generated@@255 $generated@@257) (= ($generated@@219 ($generated@@224 $generated@@253 $generated@@254 $generated@@255 $generated@@252) $generated@@256 $generated@@257) ($generated@@219 $generated@@253 $generated@@256 $generated@@257)))
 :weight 0
))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (or true (= ($generated@@219 ($generated@@224 $generated@@259 $generated@@260 $generated@@261 $generated@@258) $generated@@262 $generated@@263) ($generated@@219 $generated@@259 $generated@@262 $generated@@263)))
 :weight 0
)))) (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 Bool) ) (! (= (type ($generated@@220 $generated@@264 $generated@@265 $generated@@266 $generated@@267)) ($generated@@221 $generated@@77 $generated@@4))
 :pattern ( ($generated@@220 $generated@@264 $generated@@265 $generated@@266 $generated@@267))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 Bool) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@67 (type $generated@@273))))
 (=> (and (and (and (and (= (type $generated@@268) $generated@@77) (= (type $generated@@269) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@270) ($generated@@66 $generated@@4))) (= (type $generated@@272) $generated@@77)) (= (type $generated@@273) ($generated@@66 $generated@@274))) (= ($generated@@0 ($generated@@219 ($generated@@220 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@272 $generated@@273))  (=> (and (not (= $generated@@272 $generated@@268)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@269 $generated@@272) $generated@@270))) $generated@@271))))
 :pattern ( ($generated@@219 ($generated@@220 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (! (= (type ($generated@@275 $generated@@277 $generated@@278)) $generated@@200)
 :pattern ( ($generated@@275 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) $generated@@64)) (= (type $generated@@281) $generated@@209)) (= (type $generated@@282) $generated@@209)) (= ($generated@@196 ($generated@@275 $generated@@281 $generated@@282) ($generated@@199 $generated@@279 $generated@@280))  (and ($generated@@276 $generated@@281 $generated@@279) ($generated@@276 $generated@@282 $generated@@280))))
 :pattern ( ($generated@@196 ($generated@@275 $generated@@281 $generated@@282) ($generated@@199 $generated@@279 $generated@@280)))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@200) (= (type $generated@@284) $generated@@200)) (= ($generated@@206 $generated@@283 $generated@@284) (= $generated@@283 $generated@@284)))
 :pattern ( ($generated@@206 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@64)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@288) $generated@@64)) (= ($generated@@196 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@209) ($generated@@0 ($generated@@81 $generated@@287 $generated@@289))) ($generated@@276 $generated@@289 $generated@@288))
 :pattern ( ($generated@@81 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@196 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@64)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@293) $generated@@64)) (= ($generated@@196 $generated@@292 ($generated@@290 $generated@@293)) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@209) ($generated@@0 ($generated@@81 $generated@@292 $generated@@294))) ($generated@@276 $generated@@294 $generated@@293))
 :pattern ( ($generated@@81 $generated@@292 $generated@@294))
))))
 :pattern ( ($generated@@196 $generated@@292 ($generated@@290 $generated@@293)))
)))
(assert (forall (($generated@@296 Int) ) (! (= ($generated@@295 $generated@@296) $generated@@296)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 (type $generated@@298)))
(= (type ($generated@@297 $generated@@298)) $generated@@299))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= ($generated@@297 $generated@@300) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) $generated@@64) (= (type $generated@@304) $generated@@64)) (= (type $generated@@305) $generated@@209)) (= (type $generated@@306) $generated@@209)) (= (type $generated@@307) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@301 $generated@@307)) (= ($generated@@74 ($generated@@275 $generated@@305 $generated@@306) ($generated@@199 $generated@@303 $generated@@304) $generated@@307)  (and ($generated@@302 $generated@@305 $generated@@303 $generated@@307) ($generated@@302 $generated@@306 $generated@@304 $generated@@307))))
 :pattern ( ($generated@@74 ($generated@@275 $generated@@305 $generated@@306) ($generated@@199 $generated@@303 $generated@@304) $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@68)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@200) (= ($generated@@198 $generated@@310) (= ($generated@@308 $generated@@310) $generated@@61)))
 :pattern ( ($generated@@198 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@200) ($generated@@198 $generated@@311)) (exists (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (and (and (= (type $generated@@312) $generated@@209) (= (type $generated@@313) $generated@@209)) (= $generated@@311 ($generated@@275 $generated@@312 $generated@@313)))
 :no-pattern (type $generated@@312)
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
)))
 :pattern ( ($generated@@198 $generated@@311))
)))
(assert  (and (and (forall (($generated@@318 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@318)) 19)) (forall (($generated@@319 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@316 $generated@@319))
))) (forall (($generated@@320 T@T) ) (! (= (type ($generated@@314 $generated@@320)) ($generated@@316 $generated@@320))
 :pattern ( ($generated@@314 $generated@@320))
))))
(assert (forall (($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@321)) 0)
 :pattern ( ($generated@@314 $generated@@321))
)))
(assert  (and (and (forall (($generated@@326 Int) ) (! (= (type ($generated@@322 $generated@@326)) ($generated@@76 $generated@@209 $generated@@209))
 :pattern ( ($generated@@322 $generated@@326))
)) (forall (($generated@@327 T@U) ) (! (= (type ($generated@@323 $generated@@327)) $generated@@209)
 :pattern ( ($generated@@323 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@U) ) (! (= (type ($generated@@325 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@325 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 Int) ($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@209) (= ($generated@@81 ($generated@@322 $generated@@330) $generated@@331) ($generated@@323 ($generated@@8 ($generated@@324 ($generated ($generated@@325 $generated@@2 $generated@@331)) $generated@@330)))))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@330) $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@64) (= (type $generated@@334) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@302 ($generated@@323 $generated@@332) $generated@@333 $generated@@334) ($generated@@74 $generated@@332 $generated@@333 $generated@@334)))
 :pattern ( ($generated@@302 ($generated@@323 $generated@@332) $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@337 T@T) ) (! (= (type ($generated@@336 $generated@@337)) ($generated@@76 $generated@@337 $generated@@2))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@79 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@76 $generated@@339 $generated@@2)) (and (= (= ($generated@@335 $generated@@338) 0) (= $generated@@338 ($generated@@336 $generated@@339))) (=> (not (= ($generated@@335 $generated@@338) 0)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) (< 0 ($generated ($generated@@81 $generated@@338 $generated@@340))))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@341 $generated@@342 $generated@@343)) ($generated@@134 $generated@@342 $generated@@343))
 :pattern ( ($generated@@341 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@81 ($generated@@132 ($generated@@341 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@81 ($generated@@132 ($generated@@341 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@347 $generated@@348 $generated@@349)) ($generated@@166 $generated@@348 $generated@@349))
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@81 ($generated@@164 ($generated@@347 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@81 ($generated@@164 ($generated@@347 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@79 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@76 $generated@@354 $generated@@2)) (= ($generated@@215 $generated@@353) (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@354) (and (<= 0 ($generated ($generated@@81 $generated@@353 $generated@@355))) (<= ($generated ($generated@@81 $generated@@353 $generated@@355)) ($generated@@335 $generated@@353))))
 :pattern ( ($generated@@81 $generated@@353 $generated@@355))
)))))
 :pattern ( ($generated@@215 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 Int) ($generated@@359 Int) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358 $generated@@359)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@356 $generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 Int) ($generated@@362 Int) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@64) (= (type $generated@@363) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@360 $generated@@361 $generated@@362) $generated@@363))  (and ($generated@@276 $generated@@363 $generated@@360) (and (<= $generated@@361 ($generated ($generated@@325 $generated@@2 $generated@@363))) (< ($generated ($generated@@325 $generated@@2 $generated@@363)) $generated@@362)))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@360 $generated@@361 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@136 (type $generated@@364))))
(let (($generated@@366 ($generated@@135 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@134 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@341 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@132 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@136 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@76 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@136 (type $generated@@371))))
(let (($generated@@373 ($generated@@135 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@134 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@341 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@168 (type $generated@@375))))
(let (($generated@@377 ($generated@@167 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@166 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@347 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@164 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@168 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@76 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@168 (type $generated@@382))))
(let (($generated@@384 ($generated@@167 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@166 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@347 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@81 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@387) $generated@@64)) (= ($generated@@196 $generated@@386 ($generated@@214 $generated@@387)) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@209) (< 0 ($generated ($generated@@81 $generated@@386 $generated@@388)))) ($generated@@276 $generated@@388 $generated@@387))
 :pattern ( ($generated@@81 $generated@@386 $generated@@388))
))))
 :pattern ( ($generated@@196 $generated@@386 ($generated@@214 $generated@@387)))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@390) $generated@@64)) (= (type $generated@@391) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@389 ($generated@@285 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@209) ($generated@@0 ($generated@@81 $generated@@389 $generated@@392))) ($generated@@302 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@81 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@74 $generated@@389 ($generated@@285 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@393 ($generated@@290 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@209) ($generated@@0 ($generated@@81 $generated@@393 $generated@@396))) ($generated@@302 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@81 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@74 $generated@@393 ($generated@@290 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(= ($generated ($generated@@81 ($generated@@336 $generated@@398) $generated@@397)) 0))
 :pattern ( (let (($generated@@398 (type $generated@@397)))
($generated@@81 ($generated@@336 $generated@@398) $generated@@397)))
)))
(assert (forall (($generated@@400 T@U) ) (! (= (type ($generated@@399 $generated@@400)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@402) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@399 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@401) ($generated@@207 ($generated@@325 $generated@@200 $generated@@402)))) (= ($generated@@81 ($generated@@155 $generated@@401) ($generated@@207 ($generated@@325 $generated@@200 $generated@@402))) ($generated@@208 ($generated@@325 $generated@@200 $generated@@402))))))
 :pattern ( ($generated@@81 ($generated@@399 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@406) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@403 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@81 ($generated@@164 $generated@@405) ($generated@@207 ($generated@@325 $generated@@200 $generated@@406)))) (= ($generated@@81 ($generated@@187 $generated@@405) ($generated@@207 ($generated@@325 $generated@@200 $generated@@406))) ($generated@@208 ($generated@@325 $generated@@200 $generated@@406))))))
 :pattern ( ($generated@@81 ($generated@@403 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@135 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@134 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@81 ($generated@@155 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@407) $generated@@411))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@167 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@166 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@81 ($generated@@379 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@81 ($generated@@164 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@81 ($generated@@187 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@412) $generated@@416))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@64)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@421) $generated@@64)) (= (type $generated@@422) $generated@@64)) (= (type $generated@@423) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@420) $generated@@424))) (and ($generated@@302 ($generated@@81 ($generated@@155 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@302 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@420) $generated@@424))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@74 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@64)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@429) $generated@@64)) (= (type $generated@@430) $generated@@64)) (= (type $generated@@431) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@428) $generated@@432))) (and ($generated@@302 ($generated@@81 ($generated@@187 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@302 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@428) $generated@@432))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@74 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@76 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@168 (type $generated@@435))))
(let (($generated@@437 ($generated@@167 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@166 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@347 $generated@@437 $generated@@436)) (= ($generated@@164 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@164 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@168 (type $generated@@438))))
(let (($generated@@440 ($generated@@167 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@166 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@347 $generated@@440 $generated@@439)) (= ($generated@@379 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@379 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@168 (type $generated@@441))))
(let (($generated@@443 ($generated@@167 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@166 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@347 $generated@@443 $generated@@442)) (= ($generated@@403 $generated@@441) ($generated@@433 $generated@@209))))))
 :pattern ( ($generated@@403 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@136 (type $generated@@444))))
(let (($generated@@446 ($generated@@135 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@134 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@341 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@209) (= (type $generated@@448) $generated@@209)) ($generated@@0 ($generated@@81 ($generated@@399 $generated@@444) ($generated@@323 ($generated@@275 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@399 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@168 (type $generated@@449))))
(let (($generated@@451 ($generated@@167 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@166 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@347 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@209) (= (type $generated@@453) $generated@@209)) ($generated@@0 ($generated@@81 ($generated@@403 $generated@@449) ($generated@@323 ($generated@@275 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@403 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@209) ($generated@@276 $generated@@454 $generated@@46)) (and (= ($generated@@323 ($generated@@325 $generated@@2 $generated@@454)) $generated@@454) ($generated@@196 ($generated@@325 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@276 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@209) ($generated@@276 $generated@@455 $generated@@47)) (and (= ($generated@@323 ($generated@@325 $generated@@3 $generated@@455)) $generated@@455) ($generated@@196 ($generated@@325 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@276 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@209) ($generated@@276 $generated@@456 $generated@@44)) (and (= ($generated@@323 ($generated@@325 $generated@@4 $generated@@456)) $generated@@456) ($generated@@196 ($generated@@325 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@276 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@209) ($generated@@276 $generated@@458 $generated@@45)) (and (= ($generated@@323 ($generated@@325 $generated@@457 $generated@@458)) $generated@@458) ($generated@@196 ($generated@@325 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@276 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@64) (= ($generated@@276 ($generated@@323 $generated@@459) $generated@@460) ($generated@@196 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@276 ($generated@@323 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@79 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@76 $generated@@462 $generated@@2)) (<= 0 ($generated@@335 $generated@@461))))
 :pattern ( ($generated@@335 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@317 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@316 $generated@@464)) (<= 0 ($generated@@315 $generated@@463))))
 :pattern ( ($generated@@315 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@417 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@417 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@417 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@417 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@72 ($generated@@417 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@417 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@425 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@425 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@64) (= (type $generated@@482) $generated@@64)) (= ($generated@@479 ($generated@@425 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@425 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@72 ($generated@@425 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@425 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@209) (= (type $generated@@486) $generated@@209)) (= ($generated@@308 ($generated@@275 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@275 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@487 ($generated@@199 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@199 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@64) (= (type $generated@@494) $generated@@64)) (= ($generated@@491 ($generated@@199 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@199 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@209) (= (type $generated@@496) $generated@@209)) (= ($generated@@207 ($generated@@275 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@275 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@209) (= (type $generated@@498) $generated@@209)) (= ($generated@@208 ($generated@@275 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@275 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@317 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@316 $generated@@209)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@315 $generated@@505))) ($generated@@302 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@74 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@75 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@75 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@511 ($generated@@285 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@285 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@72 ($generated@@285 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@285 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@290 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@290 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@72 ($generated@@290 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@290 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@519 ($generated@@214 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@214 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@72 ($generated@@214 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@214 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@72 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@325 $generated@@528 ($generated@@323 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@323 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) (= ($generated@@196 $generated@@529 ($generated@@417 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@529) $generated@@532))) (and ($generated@@276 ($generated@@81 ($generated@@155 $generated@@529) $generated@@532) $generated@@531) ($generated@@276 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@529) $generated@@532))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@196 $generated@@529 ($generated@@417 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) (= ($generated@@196 $generated@@533 ($generated@@425 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@533) $generated@@536))) (and ($generated@@276 ($generated@@81 ($generated@@187 $generated@@533) $generated@@536) $generated@@535) ($generated@@276 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@533) $generated@@536))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@196 $generated@@533 ($generated@@425 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@209) (= (type $generated@@540) $generated@@209)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@275 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@275 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@209) (= (type $generated@@542) $generated@@209)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@275 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@275 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@209) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) $generated@@64)) ($generated@@276 $generated@@543 ($generated@@417 $generated@@544 $generated@@545))) (and (= ($generated@@323 ($generated@@325 ($generated@@134 $generated@@209 $generated@@209) $generated@@543)) $generated@@543) ($generated@@196 ($generated@@325 ($generated@@134 $generated@@209 $generated@@209) $generated@@543) ($generated@@417 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@276 $generated@@543 ($generated@@417 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@209) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) $generated@@64)) ($generated@@276 $generated@@546 ($generated@@425 $generated@@547 $generated@@548))) (and (= ($generated@@323 ($generated@@325 ($generated@@166 $generated@@209 $generated@@209) $generated@@546)) $generated@@546) ($generated@@196 ($generated@@325 ($generated@@166 $generated@@209 $generated@@209) $generated@@546) ($generated@@425 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@276 $generated@@546 ($generated@@425 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@64) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@209)) ($generated@@276 $generated@@551 ($generated@@199 $generated@@549 $generated@@550))) (and (= ($generated@@323 ($generated@@325 $generated@@200 $generated@@551)) $generated@@551) ($generated@@196 ($generated@@325 $generated@@200 $generated@@551) ($generated@@199 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@276 $generated@@551 ($generated@@199 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@81 ($generated@@433 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@81 ($generated@@433 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@554) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@555) ($generated@@76 $generated@@209 $generated@@209))) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) $generated@@64)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@209) ($generated@@0 ($generated@@81 $generated@@554 $generated@@558))) (and ($generated@@276 $generated@@558 $generated@@556) ($generated@@276 ($generated@@81 $generated@@555 $generated@@558) $generated@@557)))
 :no-pattern (type $generated@@558)
 :no-pattern ($generated $generated@@558)
 :no-pattern ($generated@@0 $generated@@558)
))) ($generated@@196 ($generated@@133 $generated@@554 $generated@@555 ($generated@@417 $generated@@556 $generated@@557)) ($generated@@417 $generated@@556 $generated@@557)))
 :pattern ( ($generated@@133 $generated@@554 $generated@@555 ($generated@@417 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@559) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@560) ($generated@@76 $generated@@209 $generated@@209))) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) $generated@@64)) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@209) ($generated@@0 ($generated@@81 $generated@@559 $generated@@563))) (and ($generated@@276 $generated@@563 $generated@@561) ($generated@@276 ($generated@@81 $generated@@560 $generated@@563) $generated@@562)))
 :no-pattern (type $generated@@563)
 :no-pattern ($generated $generated@@563)
 :no-pattern ($generated@@0 $generated@@563)
))) ($generated@@196 ($generated@@133 $generated@@559 $generated@@560 ($generated@@425 $generated@@561 $generated@@562)) ($generated@@425 $generated@@561 $generated@@562)))
 :pattern ( ($generated@@165 $generated@@559 $generated@@560 ($generated@@425 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@69)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@64) (= (type $generated@@567) $generated@@64)) (and (= ($generated@@72 ($generated@@199 $generated@@566 $generated@@567)) $generated@@62) (= ($generated@@564 ($generated@@199 $generated@@566 $generated@@567)) $generated@@63)))
 :pattern ( ($generated@@199 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 Int) ($generated@@569 Int) ) (! (= ($generated@@324 $generated@@568 $generated@@569) (* $generated@@568 $generated@@569))
 :pattern ( ($generated@@324 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@200) (= ($generated@@537 ($generated@@323 $generated@@570)) ($generated@@538 $generated@@570)))
 :pattern ( ($generated@@537 ($generated@@323 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@209) ($generated@@276 $generated@@571 ($generated@@75 0))) (and (= ($generated@@323 ($generated@@325 $generated@@2 $generated@@571)) $generated@@571) ($generated@@196 ($generated@@325 ($generated@@76 $generated@@209 $generated@@4) $generated@@571) ($generated@@75 0))))
 :pattern ( ($generated@@276 $generated@@571 ($generated@@75 0)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@209) (= (type $generated@@573) $generated@@64)) ($generated@@276 $generated@@572 ($generated@@285 $generated@@573))) (and (= ($generated@@323 ($generated@@325 ($generated@@76 $generated@@209 $generated@@4) $generated@@572)) $generated@@572) ($generated@@196 ($generated@@325 ($generated@@76 $generated@@209 $generated@@4) $generated@@572) ($generated@@285 $generated@@573))))
 :pattern ( ($generated@@276 $generated@@572 ($generated@@285 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@209) (= (type $generated@@575) $generated@@64)) ($generated@@276 $generated@@574 ($generated@@290 $generated@@575))) (and (= ($generated@@323 ($generated@@325 ($generated@@76 $generated@@209 $generated@@4) $generated@@574)) $generated@@574) ($generated@@196 ($generated@@325 ($generated@@76 $generated@@209 $generated@@4) $generated@@574) ($generated@@290 $generated@@575))))
 :pattern ( ($generated@@276 $generated@@574 ($generated@@290 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@209) (= (type $generated@@577) $generated@@64)) ($generated@@276 $generated@@576 ($generated@@214 $generated@@577))) (and (= ($generated@@323 ($generated@@325 ($generated@@76 $generated@@209 $generated@@2) $generated@@576)) $generated@@576) ($generated@@196 ($generated@@325 ($generated@@76 $generated@@209 $generated@@2) $generated@@576) ($generated@@214 $generated@@577))))
 :pattern ( ($generated@@276 $generated@@576 ($generated@@214 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@209) (= (type $generated@@579) $generated@@64)) ($generated@@276 $generated@@578 ($generated@@499 $generated@@579))) (and (= ($generated@@323 ($generated@@325 ($generated@@316 $generated@@209) $generated@@578)) $generated@@578) ($generated@@196 ($generated@@325 ($generated@@316 $generated@@209) $generated@@578) ($generated@@499 $generated@@579))))
 :pattern ( ($generated@@276 $generated@@578 ($generated@@499 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@581) $generated@@64)) (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@580 ($generated@@214 $generated@@581) $generated@@582) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@209) (< 0 ($generated ($generated@@81 $generated@@580 $generated@@583)))) ($generated@@302 $generated@@583 $generated@@581 $generated@@582))
 :pattern ( ($generated@@81 $generated@@580 $generated@@583))
))))
 :pattern ( ($generated@@74 $generated@@580 ($generated@@214 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@200) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@301 $generated@@586) (and ($generated@@198 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@64) ($generated@@74 $generated@@584 ($generated@@199 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@74 $generated@@584 ($generated@@199 $generated@@585 $generated@@587) $generated@@586))
))))) ($generated@@302 ($generated@@207 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@302 ($generated@@207 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@200) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@301 $generated@@590) (and ($generated@@198 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@64) ($generated@@74 $generated@@588 ($generated@@199 $generated@@591 $generated@@589) $generated@@590))
 :pattern ( ($generated@@74 $generated@@588 ($generated@@199 $generated@@591 $generated@@589) $generated@@590))
))))) ($generated@@302 ($generated@@208 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@302 ($generated@@208 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@209) (= (type $generated@@593) $generated@@209)) (= ($generated@@275 ($generated@@297 $generated@@592) ($generated@@297 $generated@@593)) ($generated@@297 ($generated@@275 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@275 ($generated@@297 $generated@@592) ($generated@@297 $generated@@593)))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@323 ($generated@@8 ($generated@@295 $generated@@594))) ($generated@@297 ($generated@@323 ($generated@@8 $generated@@594))))
 :pattern ( ($generated@@323 ($generated@@8 ($generated@@295 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@323 ($generated@@297 $generated@@595)) ($generated@@297 ($generated@@323 $generated@@595)))
 :pattern ( ($generated@@323 ($generated@@297 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@317 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@316 $generated@@597)) (= ($generated@@315 $generated@@596) 0)) (= $generated@@596 ($generated@@314 $generated@@597))))
 :pattern ( ($generated@@315 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@76 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@335 ($generated@@82 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@335 $generated@@598) ($generated ($generated@@81 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@335 ($generated@@82 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@603) $generated@@2)) ($generated@@74 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@74 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@605) $generated@@3)) ($generated@@74 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@74 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@607) $generated@@4)) ($generated@@74 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@74 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@609) $generated@@457)) ($generated@@74 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@74 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@611) $generated@@209)) ($generated@@74 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@74 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@316 $generated@@209)) (= (type $generated@@613) $generated@@64)) (= ($generated@@196 $generated@@612 ($generated@@499 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@315 $generated@@612))) ($generated@@276 ($generated@@500 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@500 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@196 $generated@@612 ($generated@@499 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (= (type $generated@@616) ($generated@@316 $generated@@209)) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@315 $generated@@616))) (< ($generated@@538 ($generated@@325 $generated@@200 ($generated@@500 $generated@@616 $generated@@617))) ($generated@@615 $generated@@616))))
 :pattern ( ($generated@@538 ($generated@@325 $generated@@200 ($generated@@500 $generated@@616 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@619) $generated@@64)) (= (type $generated@@620) $generated@@64)) ($generated@@196 $generated@@618 ($generated@@417 $generated@@619 $generated@@620))) (and (and ($generated@@196 ($generated@@132 $generated@@618) ($generated@@285 $generated@@619)) ($generated@@196 ($generated@@368 $generated@@618) ($generated@@285 $generated@@620))) ($generated@@196 ($generated@@399 $generated@@618) ($generated@@285 ($generated@@199 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@196 $generated@@618 ($generated@@417 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@622) $generated@@64)) (= (type $generated@@623) $generated@@64)) ($generated@@196 $generated@@621 ($generated@@425 $generated@@622 $generated@@623))) (and (and ($generated@@196 ($generated@@164 $generated@@621) ($generated@@290 $generated@@622)) ($generated@@196 ($generated@@379 $generated@@621) ($generated@@290 $generated@@623))) ($generated@@196 ($generated@@403 $generated@@621) ($generated@@290 ($generated@@199 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@196 $generated@@621 ($generated@@425 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) ($generated@@196 $generated@@624 $generated@@46))
 :pattern ( ($generated@@196 $generated@@624 $generated@@46))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@3) ($generated@@196 $generated@@625 $generated@@47))
 :pattern ( ($generated@@196 $generated@@625 $generated@@47))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@4) ($generated@@196 $generated@@626 $generated@@44))
 :pattern ( ($generated@@196 $generated@@626 $generated@@44))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@457) ($generated@@196 $generated@@627 $generated@@45))
 :pattern ( ($generated@@196 $generated@@627 $generated@@45))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@209) ($generated@@196 $generated@@628 $generated@@48))
 :pattern ( ($generated@@196 $generated@@628 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 (T@U) Bool)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Int)
(assert  (and (and (and (and (= (type $generated@@629) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@631) ($generated@@221 $generated@@77 $generated@@4))) (= (type $generated@@632) $generated@@77)) (= (type $generated@@633) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@635) ($generated@@166 $generated@@209 $generated@@209))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@637  (and (=> (= (ControlFlow 0 3) (- 0 4)) (= ($generated ($generated@@325 $generated@@2 ($generated@@81 ($generated@@187 $generated@@629) ($generated@@323 ($generated@@8 ($generated@@295 0)))))) ($generated@@295 0))) (=> (= (ControlFlow 0 3) (- 0 2)) (= ($generated ($generated@@325 $generated@@2 ($generated@@81 ($generated@@187 $generated@@629) ($generated@@323 ($generated@@8 ($generated@@295 2)))))) ($generated@@295 4))))))
(let (($generated@@638  (=> (and (not (= ($generated ($generated@@325 $generated@@2 ($generated@@81 ($generated@@187 $generated@@629) ($generated@@323 ($generated@@8 ($generated@@295 0)))))) ($generated@@295 0))) (= (ControlFlow 0 7) 3)) $generated@@637)))
(let (($generated@@639  (=> (= ($generated ($generated@@325 $generated@@2 ($generated@@81 ($generated@@187 $generated@@629) ($generated@@323 ($generated@@8 ($generated@@295 0)))))) ($generated@@295 0)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@629) ($generated@@323 ($generated@@8 ($generated@@295 2)))))) (=> (= (ControlFlow 0 5) 3) $generated@@637)))))
(let (($generated@@640  (=> (= $generated@@629 ($generated@@165 ($generated@@356 $generated@@46 ($generated@@295 0) 10) ($generated@@322 ($generated@@295 2)) ($generated@@425 $generated@@46 $generated@@46))) (and (=> (= (ControlFlow 0 8) (- 0 12)) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@629) ($generated@@323 ($generated@@8 0))))) (=> ($generated@@0 ($generated@@81 ($generated@@164 $generated@@629) ($generated@@323 ($generated@@8 0)))) (and (=> (= (ControlFlow 0 8) (- 0 11)) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@629) ($generated@@323 ($generated@@8 1))))) (=> ($generated@@0 ($generated@@81 ($generated@@164 $generated@@629) ($generated@@323 ($generated@@8 1)))) (and (=> (= (ControlFlow 0 8) (- 0 10)) (not ($generated@@0 ($generated@@81 ($generated@@164 $generated@@629) ($generated@@323 ($generated@@8 10)))))) (=> (not ($generated@@0 ($generated@@81 ($generated@@164 $generated@@629) ($generated@@323 ($generated@@8 10))))) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@629) ($generated@@323 ($generated@@8 ($generated@@295 0)))))) (and (=> (= (ControlFlow 0 8) 5) $generated@@639) (=> (= (ControlFlow 0 8) 7) $generated@@638))))))))))))
(let (($generated@@641  (=> (and (not (and (<= ($generated@@295 0) $generated@@630) (< $generated@@630 10))) (= (ControlFlow 0 14) 8)) $generated@@640)))
(let (($generated@@642  (=> (and (and (<= ($generated@@295 0) $generated@@630) (< $generated@@630 10)) (= (ControlFlow 0 13) 8)) $generated@@640)))
(let (($generated@@643  (=> (< $generated@@630 ($generated@@295 0)) (and (=> (= (ControlFlow 0 16) 13) $generated@@642) (=> (= (ControlFlow 0 16) 14) $generated@@641)))))
(let (($generated@@644  (=> (<= ($generated@@295 0) $generated@@630) (and (=> (= (ControlFlow 0 15) 13) $generated@@642) (=> (= (ControlFlow 0 15) 14) $generated@@641)))))
(let (($generated@@645  (and (=> (= (ControlFlow 0 17) 15) $generated@@644) (=> (= (ControlFlow 0 17) 16) $generated@@643))))
(let (($generated@@646 true))
(let (($generated@@647  (=> (= $generated@@631 ($generated@@220 $generated@@632 $generated@@633 $generated@@60 false)) (and (=> (= (ControlFlow 0 18) 17) $generated@@645) (=> (= (ControlFlow 0 18) 1) $generated@@646)))))
(let (($generated@@648  (=> (and ($generated@@301 $generated@@633) ($generated@@634 $generated@@633)) (=> (and (and (and ($generated@@196 $generated@@635 ($generated@@425 $generated@@46 $generated@@46)) ($generated@@74 $generated@@635 ($generated@@425 $generated@@46 $generated@@46) $generated@@633)) true) (and (= 0 $generated@@636) (= (ControlFlow 0 19) 18))) $generated@@647))))
$generated@@648)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@196 (T@U T@U) Bool)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 (T@U T@U) T@U)
(declare-fun $generated@@200 () T@T)
(declare-fun $generated@@206 (T@U T@U) Bool)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@219 (T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@221 (T@T T@T) T@T)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@275 (T@U T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@295 (Int) Int)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Bool)
(declare-fun $generated@@302 (T@U T@U T@U) Bool)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@327 (T@U) Int)
(declare-fun $generated@@328 (T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@381 () T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@547 (T@U T@U) T@U)
(declare-fun $generated@@562 (T@T) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@627 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@137 $generated@@138)) 14)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@134 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@136 ($generated@@134 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@134 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@132 $generated@@143)) ($generated@@76 $generated@@144 $generated@@4)))
 :pattern ( ($generated@@132 $generated@@143))
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (let (($generated@@148 ($generated@@80 (type $generated@@146))))
(let (($generated@@149 ($generated@@79 (type $generated@@145))))
(= (type ($generated@@133 $generated@@145 $generated@@146 $generated@@147)) ($generated@@134 $generated@@149 $generated@@148))))
 :pattern ( ($generated@@133 $generated@@145 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@80 (type $generated@@151))))
(let (($generated@@154 ($generated@@79 (type $generated@@150))))
 (=> (and (and (= (type $generated@@150) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@151) ($generated@@76 $generated@@154 $generated@@153))) (= (type $generated@@152) $generated@@64)) (= ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)) $generated@@150))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)))
)))
(assert (forall (($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@136 (type $generated@@156))))
(let (($generated@@158 ($generated@@135 (type $generated@@156))))
(= (type ($generated@@155 $generated@@156)) ($generated@@76 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@80 (type $generated@@160))))
(let (($generated@@163 ($generated@@79 (type $generated@@159))))
 (=> (and (and (= (type $generated@@159) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@160) ($generated@@76 $generated@@163 $generated@@162))) (= (type $generated@@161) $generated@@64)) (= ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)) $generated@@160))))
 :pattern ( ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)))
)))
(assert  (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@169 $generated@@170)) 15)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@166 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@166 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@164 $generated@@175)) ($generated@@76 $generated@@176 $generated@@4)))
 :pattern ( ($generated@@164 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@80 (type $generated@@178))))
(let (($generated@@181 ($generated@@79 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) ($generated@@166 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@80 (type $generated@@183))))
(let (($generated@@186 ($generated@@79 (type $generated@@182))))
 (=> (and (and (= (type $generated@@182) ($generated@@76 $generated@@186 $generated@@4)) (= (type $generated@@183) ($generated@@76 $generated@@186 $generated@@185))) (= (type $generated@@184) $generated@@64)) (= ($generated@@164 ($generated@@165 $generated@@182 $generated@@183 $generated@@184)) $generated@@182))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@182 $generated@@183 $generated@@184)))
)))
(assert (forall (($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@168 (type $generated@@188))))
(let (($generated@@190 ($generated@@167 (type $generated@@188))))
(= (type ($generated@@187 $generated@@188)) ($generated@@76 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@80 (type $generated@@192))))
(let (($generated@@195 ($generated@@79 (type $generated@@191))))
 (=> (and (and (= (type $generated@@191) ($generated@@76 $generated@@195 $generated@@4)) (= (type $generated@@192) ($generated@@76 $generated@@195 $generated@@194))) (= (type $generated@@193) $generated@@64)) (= ($generated@@187 ($generated@@165 $generated@@191 $generated@@192 $generated@@193)) $generated@@192))))
 :pattern ( ($generated@@187 ($generated@@165 $generated@@191 $generated@@192 $generated@@193)))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> (= (type $generated@@197) $generated@@2) ($generated@@196 $generated@@197 ($generated@@75 0)))
 :pattern ( ($generated@@196 $generated@@197 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@200) 16) (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! (= (type ($generated@@199 $generated@@201 $generated@@202)) $generated@@64)
 :pattern ( ($generated@@199 $generated@@201 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (and (= (type $generated@@203) $generated@@64) (= (type $generated@@204) $generated@@64)) (= (type $generated@@205) $generated@@200)) ($generated@@196 $generated@@205 ($generated@@199 $generated@@203 $generated@@204))) ($generated@@198 $generated@@205))
 :pattern ( ($generated@@198 $generated@@205) ($generated@@196 $generated@@205 ($generated@@199 $generated@@203 $generated@@204)))
)))
(assert  (and (and (= ($generated@@1 $generated@@209) 17) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@207 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@207 $generated@@210))
))) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@208 $generated@@211)) $generated@@209)
 :pattern ( ($generated@@208 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (= (type $generated@@212) $generated@@200) (= (type $generated@@213) $generated@@200)) true) (= ($generated@@206 $generated@@212 $generated@@213)  (and (= ($generated@@207 $generated@@212) ($generated@@207 $generated@@213)) (= ($generated@@208 $generated@@212) ($generated@@208 $generated@@213)))))
 :pattern ( ($generated@@206 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 T@U) ) (! (= (type ($generated@@214 $generated@@216)) $generated@@64)
 :pattern ( ($generated@@214 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (= (type $generated@@217) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@218) $generated@@64)) ($generated@@196 $generated@@217 ($generated@@214 $generated@@218))) ($generated@@215 $generated@@217))
 :pattern ( ($generated@@196 $generated@@217 ($generated@@214 $generated@@218)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@1 ($generated@@221 $generated@@225 $generated@@226)) 18)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@221 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@223 ($generated@@221 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@221 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@223 (type $generated@@231))))
(= (type ($generated@@219 $generated@@231 $generated@@232 $generated@@233)) $generated@@234))
 :pattern ( ($generated@@219 $generated@@231 $generated@@232 $generated@@233))
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(let (($generated@@240 (type $generated@@236)))
(= (type ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@221 $generated@@240 $generated@@239))))
 :pattern ( ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@223 (type $generated@@241))))
 (=> (= (type $generated@@244) $generated@@245) (= ($generated@@219 ($generated@@224 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@242 $generated@@243) $generated@@244)))
 :weight 0
))) (and (and (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (or (= $generated@@248 $generated@@250) (= ($generated@@219 ($generated@@224 $generated@@247 $generated@@248 $generated@@249 $generated@@246) $generated@@250 $generated@@251) ($generated@@219 $generated@@247 $generated@@250 $generated@@251)))
 :weight 0
)) (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (or (= $generated@@255 $generated@@257) (= ($generated@@219 ($generated@@224 $generated@@253 $generated@@254 $generated@@255 $generated@@252) $generated@@256 $generated@@257) ($generated@@219 $generated@@253 $generated@@256 $generated@@257)))
 :weight 0
))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (or true (= ($generated@@219 ($generated@@224 $generated@@259 $generated@@260 $generated@@261 $generated@@258) $generated@@262 $generated@@263) ($generated@@219 $generated@@259 $generated@@262 $generated@@263)))
 :weight 0
)))) (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 Bool) ) (! (= (type ($generated@@220 $generated@@264 $generated@@265 $generated@@266 $generated@@267)) ($generated@@221 $generated@@77 $generated@@4))
 :pattern ( ($generated@@220 $generated@@264 $generated@@265 $generated@@266 $generated@@267))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 Bool) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@67 (type $generated@@273))))
 (=> (and (and (and (and (= (type $generated@@268) $generated@@77) (= (type $generated@@269) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@270) ($generated@@66 $generated@@4))) (= (type $generated@@272) $generated@@77)) (= (type $generated@@273) ($generated@@66 $generated@@274))) (= ($generated@@0 ($generated@@219 ($generated@@220 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@272 $generated@@273))  (=> (and (not (= $generated@@272 $generated@@268)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@269 $generated@@272) $generated@@270))) $generated@@271))))
 :pattern ( ($generated@@219 ($generated@@220 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (! (= (type ($generated@@275 $generated@@277 $generated@@278)) $generated@@200)
 :pattern ( ($generated@@275 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) $generated@@64)) (= (type $generated@@281) $generated@@209)) (= (type $generated@@282) $generated@@209)) (= ($generated@@196 ($generated@@275 $generated@@281 $generated@@282) ($generated@@199 $generated@@279 $generated@@280))  (and ($generated@@276 $generated@@281 $generated@@279) ($generated@@276 $generated@@282 $generated@@280))))
 :pattern ( ($generated@@196 ($generated@@275 $generated@@281 $generated@@282) ($generated@@199 $generated@@279 $generated@@280)))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@200) (= (type $generated@@284) $generated@@200)) (= ($generated@@206 $generated@@283 $generated@@284) (= $generated@@283 $generated@@284)))
 :pattern ( ($generated@@206 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@64)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@288) $generated@@64)) (= ($generated@@196 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@209) ($generated@@0 ($generated@@81 $generated@@287 $generated@@289))) ($generated@@276 $generated@@289 $generated@@288))
 :pattern ( ($generated@@81 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@196 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@64)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@293) $generated@@64)) (= ($generated@@196 $generated@@292 ($generated@@290 $generated@@293)) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@209) ($generated@@0 ($generated@@81 $generated@@292 $generated@@294))) ($generated@@276 $generated@@294 $generated@@293))
 :pattern ( ($generated@@81 $generated@@292 $generated@@294))
))))
 :pattern ( ($generated@@196 $generated@@292 ($generated@@290 $generated@@293)))
)))
(assert (forall (($generated@@296 Int) ) (! (= ($generated@@295 $generated@@296) $generated@@296)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 (type $generated@@298)))
(= (type ($generated@@297 $generated@@298)) $generated@@299))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= ($generated@@297 $generated@@300) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) $generated@@64) (= (type $generated@@304) $generated@@64)) (= (type $generated@@305) $generated@@209)) (= (type $generated@@306) $generated@@209)) (= (type $generated@@307) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@301 $generated@@307)) (= ($generated@@74 ($generated@@275 $generated@@305 $generated@@306) ($generated@@199 $generated@@303 $generated@@304) $generated@@307)  (and ($generated@@302 $generated@@305 $generated@@303 $generated@@307) ($generated@@302 $generated@@306 $generated@@304 $generated@@307))))
 :pattern ( ($generated@@74 ($generated@@275 $generated@@305 $generated@@306) ($generated@@199 $generated@@303 $generated@@304) $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@68)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@200) (= ($generated@@198 $generated@@310) (= ($generated@@308 $generated@@310) $generated@@61)))
 :pattern ( ($generated@@198 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@200) ($generated@@198 $generated@@311)) (exists (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (and (and (= (type $generated@@312) $generated@@209) (= (type $generated@@313) $generated@@209)) (= $generated@@311 ($generated@@275 $generated@@312 $generated@@313)))
 :no-pattern (type $generated@@312)
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
)))
 :pattern ( ($generated@@198 $generated@@311))
)))
(assert  (and (and (forall (($generated@@318 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@318)) 19)) (forall (($generated@@319 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@316 $generated@@319))
))) (forall (($generated@@320 T@T) ) (! (= (type ($generated@@314 $generated@@320)) ($generated@@316 $generated@@320))
 :pattern ( ($generated@@314 $generated@@320))
))))
(assert (forall (($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@321)) 0)
 :pattern ( ($generated@@314 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@209)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@64) (= (type $generated@@326) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@302 ($generated@@322 $generated@@324) $generated@@325 $generated@@326) ($generated@@74 $generated@@324 $generated@@325 $generated@@326)))
 :pattern ( ($generated@@302 ($generated@@322 $generated@@324) $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@329 T@T) ) (! (= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@329 $generated@@2))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@79 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@76 $generated@@331 $generated@@2)) (and (= (= ($generated@@327 $generated@@330) 0) (= $generated@@330 ($generated@@328 $generated@@331))) (=> (not (= ($generated@@327 $generated@@330) 0)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332))))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@333 $generated@@334 $generated@@335)) ($generated@@134 $generated@@334 $generated@@335))
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@81 ($generated@@132 ($generated@@333 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@81 ($generated@@132 ($generated@@333 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) ($generated@@166 $generated@@340 $generated@@341))
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@81 ($generated@@164 ($generated@@339 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@81 ($generated@@164 ($generated@@339 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@79 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@76 $generated@@346 $generated@@2)) (= ($generated@@215 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@81 $generated@@345 $generated@@347))) (<= ($generated ($generated@@81 $generated@@345 $generated@@347)) ($generated@@327 $generated@@345))))
 :pattern ( ($generated@@81 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@215 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@136 (type $generated@@348))))
(let (($generated@@350 ($generated@@135 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@134 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@333 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@132 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@136 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@76 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@136 (type $generated@@355))))
(let (($generated@@357 ($generated@@135 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@134 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@333 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@168 (type $generated@@359))))
(let (($generated@@361 ($generated@@167 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@166 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@339 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@164 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@168 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@76 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@168 (type $generated@@366))))
(let (($generated@@368 ($generated@@167 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@166 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@339 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@81 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@371) $generated@@64)) (= ($generated@@196 $generated@@370 ($generated@@214 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@209) (< 0 ($generated ($generated@@81 $generated@@370 $generated@@372)))) ($generated@@276 $generated@@372 $generated@@371))
 :pattern ( ($generated@@81 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@196 $generated@@370 ($generated@@214 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@374) $generated@@64)) (= (type $generated@@375) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@373 ($generated@@285 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@209) ($generated@@0 ($generated@@81 $generated@@373 $generated@@376))) ($generated@@302 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@81 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@74 $generated@@373 ($generated@@285 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@378) $generated@@64)) (= (type $generated@@379) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@377 ($generated@@290 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@209) ($generated@@0 ($generated@@81 $generated@@377 $generated@@380))) ($generated@@302 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@81 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@74 $generated@@377 ($generated@@290 $generated@@378) $generated@@379))
)))
(assert (= (type $generated@@381) ($generated@@76 $generated@@209 $generated@@209)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (= (type $generated@@382) $generated@@209) (= ($generated@@81 $generated@@381 $generated@@382) $generated@@382))
 :pattern ( ($generated@@81 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@81 ($generated@@328 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@81 ($generated@@328 $generated@@384) $generated@@383)))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@T) ($generated@@389 T@U) ) (! (= (type ($generated@@386 $generated@@388 $generated@@389)) $generated@@388)
 :pattern ( ($generated@@386 $generated@@388 $generated@@389))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@391) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@390) ($generated@@207 ($generated@@386 $generated@@200 $generated@@391)))) (= ($generated@@81 ($generated@@155 $generated@@390) ($generated@@207 ($generated@@386 $generated@@200 $generated@@391))) ($generated@@208 ($generated@@386 $generated@@200 $generated@@391))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (= (type ($generated@@392 $generated@@393)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@395) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@392 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@81 ($generated@@164 $generated@@394) ($generated@@207 ($generated@@386 $generated@@200 $generated@@395)))) (= ($generated@@81 ($generated@@187 $generated@@394) ($generated@@207 ($generated@@386 $generated@@200 $generated@@395))) ($generated@@208 ($generated@@386 $generated@@200 $generated@@395))))))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@135 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@134 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@81 ($generated@@155 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@396) $generated@@400))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@167 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@166 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@81 ($generated@@363 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@81 ($generated@@164 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@81 ($generated@@187 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@64)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@409) $generated@@413))) (and ($generated@@302 ($generated@@81 ($generated@@155 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@302 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@409) $generated@@413))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@74 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@64)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@417) $generated@@421))) (and ($generated@@302 ($generated@@81 ($generated@@187 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@302 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@417) $generated@@421))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(= (type ($generated@@422 $generated@@423 $generated@@424)) ($generated@@76 $generated@@425 $generated@@4)))
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@427)))
 (=> (and (and (= (type $generated@@426) ($generated@@76 $generated@@429 $generated@@4)) (= (type $generated@@428) $generated@@429)) ($generated@@0 ($generated@@81 $generated@@426 $generated@@428))) ($generated@@0 ($generated@@81 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))))
 :pattern ( ($generated@@422 $generated@@426 $generated@@427) ($generated@@81 $generated@@426 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@431)))
 (=> (and (= (type $generated@@430) ($generated@@76 $generated@@433 $generated@@4)) (= (type $generated@@432) $generated@@433)) (= ($generated@@0 ($generated@@81 ($generated@@422 $generated@@430 $generated@@431) $generated@@432))  (or (= $generated@@432 $generated@@431) ($generated@@0 ($generated@@81 $generated@@430 $generated@@432))))))
 :pattern ( ($generated@@81 ($generated@@422 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@76 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@168 (type $generated@@436))))
(let (($generated@@438 ($generated@@167 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@166 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@339 $generated@@438 $generated@@437)) (= ($generated@@164 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@164 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@168 (type $generated@@439))))
(let (($generated@@441 ($generated@@167 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@166 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@339 $generated@@441 $generated@@440)) (= ($generated@@363 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@363 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@168 (type $generated@@442))))
(let (($generated@@444 ($generated@@167 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@166 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@339 $generated@@444 $generated@@443)) (= ($generated@@392 $generated@@442) ($generated@@434 $generated@@209))))))
 :pattern ( ($generated@@392 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@136 (type $generated@@445))))
(let (($generated@@447 ($generated@@135 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@134 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@333 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@209) (= (type $generated@@449) $generated@@209)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@445) ($generated@@322 ($generated@@275 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@385 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@168 (type $generated@@450))))
(let (($generated@@452 ($generated@@167 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@166 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@339 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@209) (= (type $generated@@454) $generated@@209)) ($generated@@0 ($generated@@81 ($generated@@392 $generated@@450) ($generated@@322 ($generated@@275 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@392 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@209) ($generated@@276 $generated@@455 $generated@@46)) (and (= ($generated@@322 ($generated@@386 $generated@@2 $generated@@455)) $generated@@455) ($generated@@196 ($generated@@386 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@276 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@209) ($generated@@276 $generated@@456 $generated@@47)) (and (= ($generated@@322 ($generated@@386 $generated@@3 $generated@@456)) $generated@@456) ($generated@@196 ($generated@@386 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@276 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@209) ($generated@@276 $generated@@457 $generated@@44)) (and (= ($generated@@322 ($generated@@386 $generated@@4 $generated@@457)) $generated@@457) ($generated@@196 ($generated@@386 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@276 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 20))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@209) ($generated@@276 $generated@@459 $generated@@45)) (and (= ($generated@@322 ($generated@@386 $generated@@458 $generated@@459)) $generated@@459) ($generated@@196 ($generated@@386 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@276 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@64) (= ($generated@@276 ($generated@@322 $generated@@460) $generated@@461) ($generated@@196 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@276 ($generated@@322 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@79 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@76 $generated@@463 $generated@@2)) (<= 0 ($generated@@327 $generated@@462))))
 :pattern ( ($generated@@327 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@317 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@316 $generated@@465)) (<= 0 ($generated@@315 $generated@@464))))
 :pattern ( ($generated@@315 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@406 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@406 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@406 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@406 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@72 ($generated@@406 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@414 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@414 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@480 ($generated@@414 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@414 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@72 ($generated@@414 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@209) (= (type $generated@@487) $generated@@209)) (= ($generated@@308 ($generated@@275 $generated@@486 $generated@@487)) $generated@@61))
 :pattern ( ($generated@@275 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@199 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@199 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@64) (= (type $generated@@495) $generated@@64)) (= ($generated@@492 ($generated@@199 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@199 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@209) (= (type $generated@@497) $generated@@209)) (= ($generated@@207 ($generated@@275 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@275 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@209) (= (type $generated@@499) $generated@@209)) (= ($generated@@208 ($generated@@275 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@275 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@317 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@316 $generated@@209)) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@315 $generated@@506))) ($generated@@302 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@74 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
 (=> (= (type $generated@@510) ($generated@@76 $generated@@512 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@422 $generated@@510 $generated@@511) $generated@@511))))
 :pattern ( ($generated@@422 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@514 Int) ) (! (= ($generated@@513 ($generated@@75 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@75 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@285 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@285 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@72 ($generated@@285 $generated@@518)) $generated@@54))
 :pattern ( ($generated@@285 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@519 ($generated@@290 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@290 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@72 ($generated@@290 $generated@@522)) $generated@@55))
 :pattern ( ($generated@@290 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@523 ($generated@@214 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@214 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@72 ($generated@@214 $generated@@526)) $generated@@56))
 :pattern ( ($generated@@214 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@64)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@527 ($generated@@500 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@500 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@64) (= ($generated@@72 ($generated@@500 $generated@@530)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(= ($generated@@386 $generated@@532 ($generated@@322 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@322 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) (= ($generated@@196 $generated@@533 ($generated@@406 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@533) $generated@@536))) (and ($generated@@276 ($generated@@81 ($generated@@155 $generated@@533) $generated@@536) $generated@@535) ($generated@@276 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@533) $generated@@536))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@196 $generated@@533 ($generated@@406 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@64)) (= ($generated@@196 $generated@@537 ($generated@@414 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@537) $generated@@540))) (and ($generated@@276 ($generated@@81 ($generated@@187 $generated@@537) $generated@@540) $generated@@539) ($generated@@276 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@537) $generated@@540))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@196 $generated@@537 ($generated@@414 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@209) (= (type $generated@@544) $generated@@209)) (< ($generated@@541 $generated@@543) ($generated@@542 ($generated@@275 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@275 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@209) (= (type $generated@@546) $generated@@209)) (< ($generated@@541 $generated@@546) ($generated@@542 ($generated@@275 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@275 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (! (= (type ($generated@@547 $generated@@548 $generated@@549)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@547 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) ($generated@@76 $generated@@209 $generated@@4))) (= (type $generated@@552) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@547 $generated@@550 $generated@@551) $generated@@552))  (and ($generated@@276 $generated@@552 $generated@@550) ($generated@@0 ($generated@@81 $generated@@551 $generated@@552)))))
 :pattern ( ($generated@@81 ($generated@@547 $generated@@550 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@209) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) $generated@@64)) ($generated@@276 $generated@@553 ($generated@@406 $generated@@554 $generated@@555))) (and (= ($generated@@322 ($generated@@386 ($generated@@134 $generated@@209 $generated@@209) $generated@@553)) $generated@@553) ($generated@@196 ($generated@@386 ($generated@@134 $generated@@209 $generated@@209) $generated@@553) ($generated@@406 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@276 $generated@@553 ($generated@@406 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@209) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) $generated@@64)) ($generated@@276 $generated@@556 ($generated@@414 $generated@@557 $generated@@558))) (and (= ($generated@@322 ($generated@@386 ($generated@@166 $generated@@209 $generated@@209) $generated@@556)) $generated@@556) ($generated@@196 ($generated@@386 ($generated@@166 $generated@@209 $generated@@209) $generated@@556) ($generated@@414 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@276 $generated@@556 ($generated@@414 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@64) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) $generated@@209)) ($generated@@276 $generated@@561 ($generated@@199 $generated@@559 $generated@@560))) (and (= ($generated@@322 ($generated@@386 $generated@@200 $generated@@561)) $generated@@561) ($generated@@196 ($generated@@386 $generated@@200 $generated@@561) ($generated@@199 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@276 $generated@@561 ($generated@@199 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@563 T@T) ) (! (= (type ($generated@@562 $generated@@563)) ($generated@@76 $generated@@563 $generated@@4))
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@564)))
 (not ($generated@@0 ($generated@@81 ($generated@@562 $generated@@565) $generated@@564))))
 :pattern ( (let (($generated@@565 (type $generated@@564)))
($generated@@81 ($generated@@562 $generated@@565) $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
 (not ($generated@@0 ($generated@@81 ($generated@@434 $generated@@567) $generated@@566))))
 :pattern ( (let (($generated@@567 (type $generated@@566)))
($generated@@81 ($generated@@434 $generated@@567) $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@568) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@569) ($generated@@76 $generated@@209 $generated@@209))) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@64)) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@209) ($generated@@0 ($generated@@81 $generated@@568 $generated@@572))) (and ($generated@@276 $generated@@572 $generated@@570) ($generated@@276 ($generated@@81 $generated@@569 $generated@@572) $generated@@571)))
 :no-pattern (type $generated@@572)
 :no-pattern ($generated $generated@@572)
 :no-pattern ($generated@@0 $generated@@572)
))) ($generated@@196 ($generated@@133 $generated@@568 $generated@@569 ($generated@@406 $generated@@570 $generated@@571)) ($generated@@406 $generated@@570 $generated@@571)))
 :pattern ( ($generated@@133 $generated@@568 $generated@@569 ($generated@@406 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@573) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@574) ($generated@@76 $generated@@209 $generated@@209))) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) $generated@@64)) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@209) ($generated@@0 ($generated@@81 $generated@@573 $generated@@577))) (and ($generated@@276 $generated@@577 $generated@@575) ($generated@@276 ($generated@@81 $generated@@574 $generated@@577) $generated@@576)))
 :no-pattern (type $generated@@577)
 :no-pattern ($generated $generated@@577)
 :no-pattern ($generated@@0 $generated@@577)
))) ($generated@@196 ($generated@@133 $generated@@573 $generated@@574 ($generated@@414 $generated@@575 $generated@@576)) ($generated@@414 $generated@@575 $generated@@576)))
 :pattern ( ($generated@@165 $generated@@573 $generated@@574 ($generated@@414 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@69)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@64) (= (type $generated@@581) $generated@@64)) (and (= ($generated@@72 ($generated@@199 $generated@@580 $generated@@581)) $generated@@62) (= ($generated@@578 ($generated@@199 $generated@@580 $generated@@581)) $generated@@63)))
 :pattern ( ($generated@@199 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@200) (= ($generated@@541 ($generated@@322 $generated@@582)) ($generated@@542 $generated@@582)))
 :pattern ( ($generated@@541 ($generated@@322 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@209) ($generated@@276 $generated@@583 ($generated@@75 0))) (and (= ($generated@@322 ($generated@@386 $generated@@2 $generated@@583)) $generated@@583) ($generated@@196 ($generated@@386 ($generated@@76 $generated@@209 $generated@@4) $generated@@583) ($generated@@75 0))))
 :pattern ( ($generated@@276 $generated@@583 ($generated@@75 0)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@209) (= (type $generated@@585) $generated@@64)) ($generated@@276 $generated@@584 ($generated@@285 $generated@@585))) (and (= ($generated@@322 ($generated@@386 ($generated@@76 $generated@@209 $generated@@4) $generated@@584)) $generated@@584) ($generated@@196 ($generated@@386 ($generated@@76 $generated@@209 $generated@@4) $generated@@584) ($generated@@285 $generated@@585))))
 :pattern ( ($generated@@276 $generated@@584 ($generated@@285 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@209) (= (type $generated@@587) $generated@@64)) ($generated@@276 $generated@@586 ($generated@@290 $generated@@587))) (and (= ($generated@@322 ($generated@@386 ($generated@@76 $generated@@209 $generated@@4) $generated@@586)) $generated@@586) ($generated@@196 ($generated@@386 ($generated@@76 $generated@@209 $generated@@4) $generated@@586) ($generated@@290 $generated@@587))))
 :pattern ( ($generated@@276 $generated@@586 ($generated@@290 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@209) (= (type $generated@@589) $generated@@64)) ($generated@@276 $generated@@588 ($generated@@214 $generated@@589))) (and (= ($generated@@322 ($generated@@386 ($generated@@76 $generated@@209 $generated@@2) $generated@@588)) $generated@@588) ($generated@@196 ($generated@@386 ($generated@@76 $generated@@209 $generated@@2) $generated@@588) ($generated@@214 $generated@@589))))
 :pattern ( ($generated@@276 $generated@@588 ($generated@@214 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@209) (= (type $generated@@591) $generated@@64)) ($generated@@276 $generated@@590 ($generated@@500 $generated@@591))) (and (= ($generated@@322 ($generated@@386 ($generated@@316 $generated@@209) $generated@@590)) $generated@@590) ($generated@@196 ($generated@@386 ($generated@@316 $generated@@209) $generated@@590) ($generated@@500 $generated@@591))))
 :pattern ( ($generated@@276 $generated@@590 ($generated@@500 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@592 ($generated@@214 $generated@@593) $generated@@594) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@209) (< 0 ($generated ($generated@@81 $generated@@592 $generated@@595)))) ($generated@@302 $generated@@595 $generated@@593 $generated@@594))
 :pattern ( ($generated@@81 $generated@@592 $generated@@595))
))))
 :pattern ( ($generated@@74 $generated@@592 ($generated@@214 $generated@@593) $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@200) (= (type $generated@@597) $generated@@64)) (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@301 $generated@@598) (and ($generated@@198 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@64) ($generated@@74 $generated@@596 ($generated@@199 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@74 $generated@@596 ($generated@@199 $generated@@597 $generated@@599) $generated@@598))
))))) ($generated@@302 ($generated@@207 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@302 ($generated@@207 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@200) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@301 $generated@@602) (and ($generated@@198 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@64) ($generated@@74 $generated@@600 ($generated@@199 $generated@@603 $generated@@601) $generated@@602))
 :pattern ( ($generated@@74 $generated@@600 ($generated@@199 $generated@@603 $generated@@601) $generated@@602))
))))) ($generated@@302 ($generated@@208 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@302 ($generated@@208 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@209) (= (type $generated@@605) $generated@@209)) (= ($generated@@275 ($generated@@297 $generated@@604) ($generated@@297 $generated@@605)) ($generated@@297 ($generated@@275 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@275 ($generated@@297 $generated@@604) ($generated@@297 $generated@@605)))
)))
(assert (forall (($generated@@606 Int) ) (! (= ($generated@@322 ($generated@@8 ($generated@@295 $generated@@606))) ($generated@@297 ($generated@@322 ($generated@@8 $generated@@606))))
 :pattern ( ($generated@@322 ($generated@@8 ($generated@@295 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ) (! (= ($generated@@322 ($generated@@297 $generated@@607)) ($generated@@297 ($generated@@322 $generated@@607)))
 :pattern ( ($generated@@322 ($generated@@297 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@317 (type $generated@@608))))
 (=> (and (= (type $generated@@608) ($generated@@316 $generated@@609)) (= ($generated@@315 $generated@@608) 0)) (= $generated@@608 ($generated@@314 $generated@@609))))
 :pattern ( ($generated@@315 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@611)))
 (=> (and (and (= (type $generated@@610) ($generated@@76 $generated@@613 $generated@@2)) (= (type $generated@@612) $generated@@2)) (<= 0 ($generated $generated@@612))) (= ($generated@@327 ($generated@@82 $generated@@610 $generated@@611 $generated@@612)) (+ (- ($generated@@327 $generated@@610) ($generated ($generated@@81 $generated@@610 $generated@@611))) ($generated $generated@@612)))))
 :pattern ( ($generated@@327 ($generated@@82 $generated@@610 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@615) $generated@@2)) ($generated@@74 $generated@@615 $generated@@46 $generated@@614))
 :pattern ( ($generated@@74 $generated@@615 $generated@@46 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@617) $generated@@3)) ($generated@@74 $generated@@617 $generated@@47 $generated@@616))
 :pattern ( ($generated@@74 $generated@@617 $generated@@47 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@619) $generated@@4)) ($generated@@74 $generated@@619 $generated@@44 $generated@@618))
 :pattern ( ($generated@@74 $generated@@619 $generated@@44 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@621) $generated@@458)) ($generated@@74 $generated@@621 $generated@@45 $generated@@620))
 :pattern ( ($generated@@74 $generated@@621 $generated@@45 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@623) $generated@@209)) ($generated@@74 $generated@@623 $generated@@48 $generated@@622))
 :pattern ( ($generated@@74 $generated@@623 $generated@@48 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@316 $generated@@209)) (= (type $generated@@625) $generated@@64)) (= ($generated@@196 $generated@@624 ($generated@@500 $generated@@625)) (forall (($generated@@626 Int) ) (!  (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@315 $generated@@624))) ($generated@@276 ($generated@@501 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@501 $generated@@624 $generated@@626))
))))
 :pattern ( ($generated@@196 $generated@@624 ($generated@@500 $generated@@625)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (= (type $generated@@628) ($generated@@316 $generated@@209)) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@315 $generated@@628))) (< ($generated@@542 ($generated@@386 $generated@@200 ($generated@@501 $generated@@628 $generated@@629))) ($generated@@627 $generated@@628))))
 :pattern ( ($generated@@542 ($generated@@386 $generated@@200 ($generated@@501 $generated@@628 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@631) $generated@@64)) (= (type $generated@@632) $generated@@64)) ($generated@@196 $generated@@630 ($generated@@406 $generated@@631 $generated@@632))) (and (and ($generated@@196 ($generated@@132 $generated@@630) ($generated@@285 $generated@@631)) ($generated@@196 ($generated@@352 $generated@@630) ($generated@@285 $generated@@632))) ($generated@@196 ($generated@@385 $generated@@630) ($generated@@285 ($generated@@199 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@196 $generated@@630 ($generated@@406 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@634) $generated@@64)) (= (type $generated@@635) $generated@@64)) ($generated@@196 $generated@@633 ($generated@@414 $generated@@634 $generated@@635))) (and (and ($generated@@196 ($generated@@164 $generated@@633) ($generated@@290 $generated@@634)) ($generated@@196 ($generated@@363 $generated@@633) ($generated@@290 $generated@@635))) ($generated@@196 ($generated@@392 $generated@@633) ($generated@@290 ($generated@@199 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@196 $generated@@633 ($generated@@414 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@2) ($generated@@196 $generated@@636 $generated@@46))
 :pattern ( ($generated@@196 $generated@@636 $generated@@46))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@3) ($generated@@196 $generated@@637 $generated@@47))
 :pattern ( ($generated@@196 $generated@@637 $generated@@47))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@4) ($generated@@196 $generated@@638 $generated@@44))
 :pattern ( ($generated@@196 $generated@@638 $generated@@44))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@458) ($generated@@196 $generated@@639 $generated@@45))
 :pattern ( ($generated@@196 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@209) ($generated@@196 $generated@@640 $generated@@48))
 :pattern ( ($generated@@196 $generated@@640 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 (T@U) Bool)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@641) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@643) ($generated@@76 $generated@@209 $generated@@4))) (= (type $generated@@645) ($generated@@221 $generated@@77 $generated@@4))) (= (type $generated@@646) $generated@@77)) (= (type $generated@@647) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@649) ($generated@@76 $generated@@209 $generated@@4))) (= (type $generated@@650) ($generated@@166 $generated@@209 $generated@@209))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@652  (=> (= (ControlFlow 0 4) (- 0 3)) (forall (($generated@@653 Int) ) (!  (=> ($generated@@0 ($generated@@81 ($generated@@164 $generated@@641) ($generated@@322 ($generated@@8 $generated@@653)))) (= ($generated ($generated@@386 $generated@@2 ($generated@@81 ($generated@@187 $generated@@641) ($generated@@322 ($generated@@8 $generated@@653))))) $generated@@653))
 :pattern ( ($generated@@386 $generated@@2 ($generated@@81 ($generated@@187 $generated@@641) ($generated@@322 ($generated@@8 $generated@@653)))))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@641) ($generated@@322 ($generated@@8 $generated@@653))))
)))))
(let (($generated@@654  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@164 $generated@@641) ($generated@@322 ($generated@@8 $generated@@642))))) (= (ControlFlow 0 7) 4)) $generated@@652)))
(let (($generated@@655  (=> ($generated@@0 ($generated@@81 ($generated@@164 $generated@@641) ($generated@@322 ($generated@@8 $generated@@642)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@641) ($generated@@322 ($generated@@8 $generated@@642))))) (=> (= (ControlFlow 0 5) 4) $generated@@652)))))
(let (($generated@@656  (and (=> (= (ControlFlow 0 8) 5) $generated@@655) (=> (= (ControlFlow 0 8) 7) $generated@@654))))
(let (($generated@@657 true))
(let (($generated@@658  (=> (= $generated@@641 ($generated@@165 ($generated@@547 $generated@@46 $generated@@643) $generated@@381 ($generated@@414 $generated@@46 $generated@@46))) (and (=> (= (ControlFlow 0 9) 8) $generated@@656) (=> (= (ControlFlow 0 9) 2) $generated@@657)))))
(let (($generated@@659  (=> (and (not ($generated@@0 ($generated@@81 $generated@@643 ($generated@@322 ($generated@@8 $generated@@644))))) (= (ControlFlow 0 11) 9)) $generated@@658)))
(let (($generated@@660  (=> (and ($generated@@0 ($generated@@81 $generated@@643 ($generated@@322 ($generated@@8 $generated@@644)))) (= (ControlFlow 0 10) 9)) $generated@@658)))
(let (($generated@@661  (and (=> (= (ControlFlow 0 12) 10) $generated@@660) (=> (= (ControlFlow 0 12) 11) $generated@@659))))
(let (($generated@@662 true))
(let (($generated@@663  (=> (and (= $generated@@645 ($generated@@220 $generated@@646 $generated@@647 $generated@@60 false)) (= $generated@@643 ($generated@@297 ($generated@@422 ($generated@@422 ($generated@@422 ($generated@@422 ($generated@@562 $generated@@209) ($generated@@322 ($generated@@8 ($generated@@295 0)))) ($generated@@322 ($generated@@8 ($generated@@295 1)))) ($generated@@322 ($generated@@8 ($generated@@295 3)))) ($generated@@322 ($generated@@8 ($generated@@295 4))))))) (and (=> (= (ControlFlow 0 13) 12) $generated@@661) (=> (= (ControlFlow 0 13) 1) $generated@@662)))))
(let (($generated@@664  (=> (and ($generated@@301 $generated@@647) ($generated@@648 $generated@@647)) (=> (and (and ($generated@@196 $generated@@649 ($generated@@285 $generated@@46)) ($generated@@74 $generated@@649 ($generated@@285 $generated@@46) $generated@@647)) true) (=> (and (and (and ($generated@@196 $generated@@650 ($generated@@414 $generated@@46 $generated@@46)) ($generated@@74 $generated@@650 ($generated@@414 $generated@@46 $generated@@46) $generated@@647)) true) (and (= 0 $generated@@651) (= (ControlFlow 0 14) 13))) $generated@@663)))))
$generated@@664)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@T T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@T T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@213 (T@U) T@U)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 () T@T)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 () T@T)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@245 (T@U T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@247 (T@T T@T) T@T)
(declare-fun $generated@@248 (T@T) T@T)
(declare-fun $generated@@249 (T@T) T@T)
(declare-fun $generated@@250 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@301 () T@U)
(declare-fun $generated@@304 (T@U T@U) T@U)
(declare-fun $generated@@305 (T@U T@U) Bool)
(declare-fun $generated@@312 (T@T T@U T@U) T@U)
(declare-fun $generated@@316 (T@U) Bool)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@333 (T@U T@U T@U) Bool)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@345 (T@T) T@U)
(declare-fun $generated@@346 (T@U) Int)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@368 (T@U) Int)
(declare-fun $generated@@369 (T@T) T@U)
(declare-fun $generated@@374 (T@T T@T) T@U)
(declare-fun $generated@@380 (T@T T@T) T@U)
(declare-fun $generated@@386 (T@U T@U) Bool)
(declare-fun $generated@@395 (T@T T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@473 (T@T) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@502 () T@T)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@545 (T@U Int) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@582 (T@U) Int)
(declare-fun $generated@@583 (T@U) Int)
(declare-fun $generated@@588 (T@U T@U) T@U)
(declare-fun $generated@@594 (T@U T@U) T@U)
(declare-fun $generated@@621 (T@U) T@U)
(declare-fun $generated@@674 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert  (and (and (and (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@1 ($generated@@160 $generated@@163 $generated@@164)) 16)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@161 ($generated@@160 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@160 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@160 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@160 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@161 (type $generated@@169))))
(= (type ($generated@@158 $generated@@169)) ($generated@@87 $generated@@170 $generated@@4)))
 :pattern ( ($generated@@158 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@91 (type $generated@@172))))
(let (($generated@@175 ($generated@@90 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) ($generated@@160 $generated@@175 $generated@@174))))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@91 (type $generated@@177))))
(let (($generated@@180 ($generated@@90 (type $generated@@176))))
 (=> (and (and (= (type $generated@@176) ($generated@@87 $generated@@180 $generated@@4)) (= (type $generated@@177) ($generated@@87 $generated@@180 $generated@@179))) (= (type $generated@@178) $generated@@70)) (= ($generated@@158 ($generated@@159 $generated@@176 $generated@@177 $generated@@178)) $generated@@176))))
 :pattern ( ($generated@@158 ($generated@@159 $generated@@176 $generated@@177 $generated@@178)))
)))
(assert (forall (($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@162 (type $generated@@182))))
(let (($generated@@184 ($generated@@161 (type $generated@@182))))
(= (type ($generated@@181 $generated@@182)) ($generated@@87 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@181 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@91 (type $generated@@186))))
(let (($generated@@189 ($generated@@90 (type $generated@@185))))
 (=> (and (and (= (type $generated@@185) ($generated@@87 $generated@@189 $generated@@4)) (= (type $generated@@186) ($generated@@87 $generated@@189 $generated@@188))) (= (type $generated@@187) $generated@@70)) (= ($generated@@181 ($generated@@159 $generated@@185 $generated@@186 $generated@@187)) $generated@@186))))
 :pattern ( ($generated@@181 ($generated@@159 $generated@@185 $generated@@186 $generated@@187)))
)))
(assert  (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@192 $generated@@195 $generated@@196)) 17)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@193 ($generated@@192 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@192 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@192 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@192 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@190 $generated@@201)) ($generated@@87 $generated@@202 $generated@@4)))
 :pattern ( ($generated@@190 $generated@@201))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@91 (type $generated@@204))))
(let (($generated@@207 ($generated@@90 (type $generated@@203))))
(= (type ($generated@@191 $generated@@203 $generated@@204 $generated@@205)) ($generated@@192 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@91 (type $generated@@209))))
(let (($generated@@212 ($generated@@90 (type $generated@@208))))
 (=> (and (and (= (type $generated@@208) ($generated@@87 $generated@@212 $generated@@4)) (= (type $generated@@209) ($generated@@87 $generated@@212 $generated@@211))) (= (type $generated@@210) $generated@@70)) (= ($generated@@190 ($generated@@191 $generated@@208 $generated@@209 $generated@@210)) $generated@@208))))
 :pattern ( ($generated@@190 ($generated@@191 $generated@@208 $generated@@209 $generated@@210)))
)))
(assert (forall (($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@194 (type $generated@@214))))
(let (($generated@@216 ($generated@@193 (type $generated@@214))))
(= (type ($generated@@213 $generated@@214)) ($generated@@87 $generated@@216 $generated@@215))))
 :pattern ( ($generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@91 (type $generated@@218))))
(let (($generated@@221 ($generated@@90 (type $generated@@217))))
 (=> (and (and (= (type $generated@@217) ($generated@@87 $generated@@221 $generated@@4)) (= (type $generated@@218) ($generated@@87 $generated@@221 $generated@@220))) (= (type $generated@@219) $generated@@70)) (= ($generated@@213 ($generated@@191 $generated@@217 $generated@@218 $generated@@219)) $generated@@218))))
 :pattern ( ($generated@@213 ($generated@@191 $generated@@217 $generated@@218 $generated@@219)))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (= (type $generated@@222) $generated@@2) ($generated@@154 $generated@@222 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@222 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@225) 18) (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@70)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@70) (= (type $generated@@229) $generated@@70)) (= (type $generated@@230) $generated@@225)) ($generated@@154 $generated@@230 ($generated@@224 $generated@@228 $generated@@229))) ($generated@@223 $generated@@230))
 :pattern ( ($generated@@223 $generated@@230) ($generated@@154 $generated@@230 ($generated@@224 $generated@@228 $generated@@229)))
)))
(assert  (and (and (= ($generated@@1 $generated@@234) 19) (forall (($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@235)) $generated@@234)
 :pattern ( ($generated@@232 $generated@@235))
))) (forall (($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@236)) $generated@@234)
 :pattern ( ($generated@@233 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (= (type $generated@@237) $generated@@225) (= (type $generated@@238) $generated@@225)) true) (= ($generated@@231 $generated@@237 $generated@@238)  (and (= ($generated@@232 $generated@@237) ($generated@@232 $generated@@238)) (= ($generated@@233 $generated@@237) ($generated@@233 $generated@@238)))))
 :pattern ( ($generated@@231 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@239 $generated@@241)) $generated@@70)
 :pattern ( ($generated@@239 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (= (type $generated@@242) ($generated@@87 $generated@@234 $generated@@2)) (= (type $generated@@243) $generated@@70)) ($generated@@154 $generated@@242 ($generated@@239 $generated@@243))) ($generated@@240 $generated@@242))
 :pattern ( ($generated@@154 $generated@@242 ($generated@@239 $generated@@243)))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@88) (= ($generated@@154 $generated@@244 $generated@@147)  (or (= $generated@@244 $generated@@148) (= ($generated@@153 $generated@@244) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@244 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (= ($generated@@1 ($generated@@247 $generated@@251 $generated@@252)) 20)) (forall (($generated@@253 T@T) ($generated@@254 T@T) ) (! (= ($generated@@248 ($generated@@247 $generated@@253 $generated@@254)) $generated@@253)
 :pattern ( ($generated@@247 $generated@@253 $generated@@254))
))) (forall (($generated@@255 T@T) ($generated@@256 T@T) ) (! (= ($generated@@249 ($generated@@247 $generated@@255 $generated@@256)) $generated@@256)
 :pattern ( ($generated@@247 $generated@@255 $generated@@256))
))) (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@249 (type $generated@@257))))
(= (type ($generated@@245 $generated@@257 $generated@@258 $generated@@259)) $generated@@260))
 :pattern ( ($generated@@245 $generated@@257 $generated@@258 $generated@@259))
))) (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(let (($generated@@266 (type $generated@@262)))
(= (type ($generated@@250 $generated@@261 $generated@@262 $generated@@263 $generated@@264)) ($generated@@247 $generated@@266 $generated@@265))))
 :pattern ( ($generated@@250 $generated@@261 $generated@@262 $generated@@263 $generated@@264))
))) (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (! (let (($generated@@271 ($generated@@249 (type $generated@@267))))
 (=> (= (type $generated@@270) $generated@@271) (= ($generated@@245 ($generated@@250 $generated@@267 $generated@@268 $generated@@269 $generated@@270) $generated@@268 $generated@@269) $generated@@270)))
 :weight 0
))) (and (and (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (or (= $generated@@274 $generated@@276) (= ($generated@@245 ($generated@@250 $generated@@273 $generated@@274 $generated@@275 $generated@@272) $generated@@276 $generated@@277) ($generated@@245 $generated@@273 $generated@@276 $generated@@277)))
 :weight 0
)) (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (or (= $generated@@281 $generated@@283) (= ($generated@@245 ($generated@@250 $generated@@279 $generated@@280 $generated@@281 $generated@@278) $generated@@282 $generated@@283) ($generated@@245 $generated@@279 $generated@@282 $generated@@283)))
 :weight 0
))) (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (or true (= ($generated@@245 ($generated@@250 $generated@@285 $generated@@286 $generated@@287 $generated@@284) $generated@@288 $generated@@289) ($generated@@245 $generated@@285 $generated@@288 $generated@@289)))
 :weight 0
)))) (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 Bool) ) (! (= (type ($generated@@246 $generated@@290 $generated@@291 $generated@@292 $generated@@293)) ($generated@@247 $generated@@88 $generated@@4))
 :pattern ( ($generated@@246 $generated@@290 $generated@@291 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 Bool) ($generated@@298 T@U) ($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@73 (type $generated@@299))))
 (=> (and (and (and (and (= (type $generated@@294) $generated@@88) (= (type $generated@@295) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@296) ($generated@@72 $generated@@4))) (= (type $generated@@298) $generated@@88)) (= (type $generated@@299) ($generated@@72 $generated@@300))) (= ($generated@@0 ($generated@@245 ($generated@@246 $generated@@294 $generated@@295 $generated@@296 $generated@@297) $generated@@298 $generated@@299))  (=> (and (not (= $generated@@298 $generated@@294)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@295 $generated@@298) $generated@@296))) $generated@@297))))
 :pattern ( ($generated@@245 ($generated@@246 $generated@@294 $generated@@295 $generated@@296 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (= (type $generated@@301) $generated@@70))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@88) (= (type $generated@@303) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@302 $generated@@301 $generated@@303) ($generated@@85 $generated@@302 $generated@@147 $generated@@303)))
 :pattern ( ($generated@@85 $generated@@302 $generated@@301 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (= (type ($generated@@304 $generated@@306 $generated@@307)) $generated@@225)
 :pattern ( ($generated@@304 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@308) $generated@@70) (= (type $generated@@309) $generated@@70)) (= (type $generated@@310) $generated@@234)) (= (type $generated@@311) $generated@@234)) (= ($generated@@154 ($generated@@304 $generated@@310 $generated@@311) ($generated@@224 $generated@@308 $generated@@309))  (and ($generated@@305 $generated@@310 $generated@@308) ($generated@@305 $generated@@311 $generated@@309))))
 :pattern ( ($generated@@154 ($generated@@304 $generated@@310 $generated@@311) ($generated@@224 $generated@@308 $generated@@309)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@313 T@T) ($generated@@314 T@U) ($generated@@315 T@U) ) (! (= (type ($generated@@312 $generated@@313 $generated@@314 $generated@@315)) ($generated@@72 $generated@@313))
 :pattern ( ($generated@@312 $generated@@313 $generated@@314 $generated@@315))
)))
(assert (= ($generated@@312 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@316 $generated@@151)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@225) (= (type $generated@@318) $generated@@225)) (= ($generated@@231 $generated@@317 $generated@@318) (= $generated@@317 $generated@@318)))
 :pattern ( ($generated@@231 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@70)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) ($generated@@87 $generated@@234 $generated@@4)) (= (type $generated@@322) $generated@@70)) (= ($generated@@154 $generated@@321 ($generated@@319 $generated@@322)) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@234) ($generated@@0 ($generated@@92 $generated@@321 $generated@@323))) ($generated@@305 $generated@@323 $generated@@322))
 :pattern ( ($generated@@92 $generated@@321 $generated@@323))
))))
 :pattern ( ($generated@@154 $generated@@321 ($generated@@319 $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@70)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) ($generated@@87 $generated@@234 $generated@@4)) (= (type $generated@@327) $generated@@70)) (= ($generated@@154 $generated@@326 ($generated@@324 $generated@@327)) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@234) ($generated@@0 ($generated@@92 $generated@@326 $generated@@328))) ($generated@@305 $generated@@328 $generated@@327))
 :pattern ( ($generated@@92 $generated@@326 $generated@@328))
))))
 :pattern ( ($generated@@154 $generated@@326 ($generated@@324 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 (type $generated@@330)))
(= (type ($generated@@329 $generated@@330)) $generated@@331))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= ($generated@@329 $generated@@332) $generated@@332)
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@334) $generated@@70) (= (type $generated@@335) $generated@@70)) (= (type $generated@@336) $generated@@234)) (= (type $generated@@337) $generated@@234)) (= (type $generated@@338) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@338)) (= ($generated@@85 ($generated@@304 $generated@@336 $generated@@337) ($generated@@224 $generated@@334 $generated@@335) $generated@@338)  (and ($generated@@333 $generated@@336 $generated@@334 $generated@@338) ($generated@@333 $generated@@337 $generated@@335 $generated@@338))))
 :pattern ( ($generated@@85 ($generated@@304 $generated@@336 $generated@@337) ($generated@@224 $generated@@334 $generated@@335) $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@75)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@225) (= ($generated@@223 $generated@@341) (= ($generated@@339 $generated@@341) $generated@@62)))
 :pattern ( ($generated@@223 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@225) ($generated@@223 $generated@@342)) (exists (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (and (and (= (type $generated@@343) $generated@@234) (= (type $generated@@344) $generated@@234)) (= $generated@@342 ($generated@@304 $generated@@343 $generated@@344)))
 :no-pattern (type $generated@@343)
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
)))
 :pattern ( ($generated@@223 $generated@@342))
)))
(assert  (and (and (forall (($generated@@349 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@349)) 21)) (forall (($generated@@350 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@347 $generated@@350))
))) (forall (($generated@@351 T@T) ) (! (= (type ($generated@@345 $generated@@351)) ($generated@@347 $generated@@351))
 :pattern ( ($generated@@345 $generated@@351))
))))
(assert (forall (($generated@@352 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@352)) 0)
 :pattern ( ($generated@@345 $generated@@352))
)))
(assert ($generated@@316 $generated@@60))
(assert (forall (($generated@@354 T@U) ) (! (= (type ($generated@@353 $generated@@354)) $generated@@234)
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@70) (= (type $generated@@357) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@333 ($generated@@353 $generated@@355) $generated@@356 $generated@@357) ($generated@@85 $generated@@355 $generated@@356 $generated@@357)))
 :pattern ( ($generated@@333 ($generated@@353 $generated@@355) $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@358) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@359) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@360) $generated@@234)) (= (type $generated@@361) $generated@@70)) ($generated@@143 $generated@@358 $generated@@359)) ($generated@@333 $generated@@360 $generated@@361 $generated@@358)) ($generated@@333 $generated@@360 $generated@@361 $generated@@359))
 :pattern ( ($generated@@143 $generated@@358 $generated@@359) ($generated@@333 $generated@@360 $generated@@361 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@362) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@363) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@365) $generated@@70)) ($generated@@143 $generated@@362 $generated@@363)) ($generated@@85 $generated@@364 $generated@@365 $generated@@362)) ($generated@@85 $generated@@364 $generated@@365 $generated@@363))
 :pattern ( ($generated@@143 $generated@@362 $generated@@363) ($generated@@85 $generated@@364 $generated@@365 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@367) $generated@@88)) (=> (and (and ($generated@@152 $generated@@366) (and (not (= $generated@@367 $generated@@148)) (= ($generated@@153 $generated@@367) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@366 $generated@@367) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@366 $generated@@367) $generated@@151) $generated@@46 $generated@@366)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@366 $generated@@367) $generated@@151))
)))
(assert (forall (($generated@@370 T@T) ) (! (= (type ($generated@@369 $generated@@370)) ($generated@@87 $generated@@370 $generated@@2))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@90 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@87 $generated@@372 $generated@@2)) (and (= (= ($generated@@368 $generated@@371) 0) (= $generated@@371 ($generated@@369 $generated@@372))) (=> (not (= ($generated@@368 $generated@@371) 0)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (< 0 ($generated ($generated@@92 $generated@@371 $generated@@373))))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) ($generated@@160 $generated@@375 $generated@@376))
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@T) ) (! (let (($generated@@379 (type $generated@@377)))
 (not ($generated@@0 ($generated@@92 ($generated@@158 ($generated@@374 $generated@@379 $generated@@378)) $generated@@377))))
 :pattern ( (let (($generated@@379 (type $generated@@377)))
($generated@@92 ($generated@@158 ($generated@@374 $generated@@379 $generated@@378)) $generated@@377)))
)))
(assert (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) ($generated@@192 $generated@@381 $generated@@382))
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@T) ) (! (let (($generated@@385 (type $generated@@383)))
 (not ($generated@@0 ($generated@@92 ($generated@@190 ($generated@@380 $generated@@385 $generated@@384)) $generated@@383))))
 :pattern ( (let (($generated@@385 (type $generated@@383)))
($generated@@92 ($generated@@190 ($generated@@380 $generated@@385 $generated@@384)) $generated@@383)))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@388) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@386 $generated@@387 $generated@@388)) (and ($generated@@143 $generated@@387 $generated@@388) (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@73 (type $generated@@390))))
 (=> (and (and (= (type $generated@@389) $generated@@88) (= (type $generated@@390) ($generated@@72 $generated@@391))) (not ($generated@@316 $generated@@390))) (= ($generated@@94 ($generated@@92 $generated@@387 $generated@@389) $generated@@390) ($generated@@94 ($generated@@92 $generated@@388 $generated@@389) $generated@@390))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@388 $generated@@389) $generated@@390))
))))
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@90 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@87 $generated@@393 $generated@@2)) (= ($generated@@240 $generated@@392) (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@393) (and (<= 0 ($generated ($generated@@92 $generated@@392 $generated@@394))) (<= ($generated ($generated@@92 $generated@@392 $generated@@394)) ($generated@@368 $generated@@392))))
 :pattern ( ($generated@@92 $generated@@392 $generated@@394))
)))))
 :pattern ( ($generated@@240 $generated@@392))
)))
(assert (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@234) ($generated@@305 $generated@@398 $generated@@147)) (and (= ($generated@@353 ($generated@@395 $generated@@88 $generated@@398)) $generated@@398) ($generated@@154 ($generated@@395 $generated@@88 $generated@@398) $generated@@147)))
 :pattern ( ($generated@@305 $generated@@398 $generated@@147))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@234) ($generated@@305 $generated@@399 $generated@@301)) (and (= ($generated@@353 ($generated@@395 $generated@@88 $generated@@399)) $generated@@399) ($generated@@154 ($generated@@395 $generated@@88 $generated@@399) $generated@@301)))
 :pattern ( ($generated@@305 $generated@@399 $generated@@301))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (= (type $generated@@400) $generated@@88) (= ($generated@@154 $generated@@400 $generated@@301)  (and ($generated@@154 $generated@@400 $generated@@147) (not (= $generated@@400 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@400 $generated@@301))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@162 (type $generated@@401))))
(let (($generated@@403 ($generated@@161 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@160 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@374 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) ($generated@@0 ($generated@@92 ($generated@@158 $generated@@401) $generated@@404)))
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@158 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@162 (type $generated@@406))))
(= (type ($generated@@405 $generated@@406)) ($generated@@87 $generated@@407 $generated@@4)))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@162 (type $generated@@408))))
(let (($generated@@410 ($generated@@161 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@160 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@374 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@409) ($generated@@0 ($generated@@92 ($generated@@405 $generated@@408) $generated@@411)))
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@405 $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@194 (type $generated@@412))))
(let (($generated@@414 ($generated@@193 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@192 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@380 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) ($generated@@0 ($generated@@92 ($generated@@190 $generated@@412) $generated@@415)))
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@190 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@194 (type $generated@@417))))
(= (type ($generated@@416 $generated@@417)) ($generated@@87 $generated@@418 $generated@@4)))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@194 (type $generated@@419))))
(let (($generated@@421 ($generated@@193 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@192 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@380 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@420) ($generated@@0 ($generated@@92 ($generated@@416 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@416 $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@87 $generated@@234 $generated@@2)) (= (type $generated@@424) $generated@@70)) (= ($generated@@154 $generated@@423 ($generated@@239 $generated@@424)) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@234) (< 0 ($generated ($generated@@92 $generated@@423 $generated@@425)))) ($generated@@305 $generated@@425 $generated@@424))
 :pattern ( ($generated@@92 $generated@@423 $generated@@425))
))))
 :pattern ( ($generated@@154 $generated@@423 ($generated@@239 $generated@@424)))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@426) ($generated@@87 $generated@@234 $generated@@4)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@426 ($generated@@319 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@234) ($generated@@0 ($generated@@92 $generated@@426 $generated@@429))) ($generated@@333 $generated@@429 $generated@@427 $generated@@428))
 :pattern ( ($generated@@92 $generated@@426 $generated@@429))
))))
 :pattern ( ($generated@@85 $generated@@426 ($generated@@319 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (= (type $generated@@430) ($generated@@87 $generated@@234 $generated@@4)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@430 ($generated@@324 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@234) ($generated@@0 ($generated@@92 $generated@@430 $generated@@433))) ($generated@@333 $generated@@433 $generated@@431 $generated@@432))
 :pattern ( ($generated@@92 $generated@@430 $generated@@433))
))))
 :pattern ( ($generated@@85 $generated@@430 ($generated@@324 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(= ($generated ($generated@@92 ($generated@@369 $generated@@435) $generated@@434)) 0))
 :pattern ( (let (($generated@@435 (type $generated@@434)))
($generated@@92 ($generated@@369 $generated@@435) $generated@@434)))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) ($generated@@87 $generated@@234 $generated@@4))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@160 $generated@@234 $generated@@234)) (= (type $generated@@439) $generated@@234)) (= ($generated@@0 ($generated@@92 ($generated@@436 $generated@@438) $generated@@439))  (and ($generated@@0 ($generated@@92 ($generated@@158 $generated@@438) ($generated@@232 ($generated@@395 $generated@@225 $generated@@439)))) (= ($generated@@92 ($generated@@181 $generated@@438) ($generated@@232 ($generated@@395 $generated@@225 $generated@@439))) ($generated@@233 ($generated@@395 $generated@@225 $generated@@439))))))
 :pattern ( ($generated@@92 ($generated@@436 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@87 $generated@@234 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@192 $generated@@234 $generated@@234)) (= (type $generated@@443) $generated@@234)) (= ($generated@@0 ($generated@@92 ($generated@@440 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@92 ($generated@@190 $generated@@442) ($generated@@232 ($generated@@395 $generated@@225 $generated@@443)))) (= ($generated@@92 ($generated@@213 $generated@@442) ($generated@@232 ($generated@@395 $generated@@225 $generated@@443))) ($generated@@233 ($generated@@395 $generated@@225 $generated@@443))))))
 :pattern ( ($generated@@92 ($generated@@440 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@161 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@160 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@92 ($generated@@405 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@92 ($generated@@158 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@92 ($generated@@181 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@92 ($generated@@158 $generated@@444) $generated@@448))
 :pattern ( ($generated@@92 ($generated@@181 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@193 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@192 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@92 ($generated@@416 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@92 ($generated@@190 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@92 ($generated@@213 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@92 ($generated@@190 $generated@@449) $generated@@453))
 :pattern ( ($generated@@92 ($generated@@213 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@92 ($generated@@416 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@70)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@160 $generated@@234 $generated@@234)) (= (type $generated@@458) $generated@@70)) (= (type $generated@@459) $generated@@70)) (= (type $generated@@460) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@234) ($generated@@0 ($generated@@92 ($generated@@158 $generated@@457) $generated@@461))) (and ($generated@@333 ($generated@@92 ($generated@@181 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@333 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@92 ($generated@@181 $generated@@457) $generated@@461))
 :pattern ( ($generated@@92 ($generated@@158 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@85 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@70)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@192 $generated@@234 $generated@@234)) (= (type $generated@@466) $generated@@70)) (= (type $generated@@467) $generated@@70)) (= (type $generated@@468) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@234) ($generated@@0 ($generated@@92 ($generated@@190 $generated@@465) $generated@@469))) (and ($generated@@333 ($generated@@92 ($generated@@213 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@333 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@92 ($generated@@213 $generated@@465) $generated@@469))
 :pattern ( ($generated@@92 ($generated@@190 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@85 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@470) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@471) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@472) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@470 $generated@@472))) (and ($generated@@143 $generated@@470 $generated@@471) ($generated@@143 $generated@@471 $generated@@472))) ($generated@@143 $generated@@470 $generated@@472))
 :pattern ( ($generated@@143 $generated@@470 $generated@@471) ($generated@@143 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@T) ) (! (= (type ($generated@@473 $generated@@474)) ($generated@@87 $generated@@474 $generated@@4))
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@194 (type $generated@@475))))
(let (($generated@@477 ($generated@@193 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@192 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@380 $generated@@477 $generated@@476)) (= ($generated@@190 $generated@@475) ($generated@@473 $generated@@477))))))
 :pattern ( ($generated@@190 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@194 (type $generated@@478))))
(let (($generated@@480 ($generated@@193 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@192 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@380 $generated@@480 $generated@@479)) (= ($generated@@416 $generated@@478) ($generated@@473 $generated@@479))))))
 :pattern ( ($generated@@416 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@194 (type $generated@@481))))
(let (($generated@@483 ($generated@@193 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@192 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@380 $generated@@483 $generated@@482)) (= ($generated@@440 $generated@@481) ($generated@@473 $generated@@234))))))
 :pattern ( ($generated@@440 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@162 (type $generated@@484))))
(let (($generated@@486 ($generated@@161 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@160 $generated@@486 $generated@@485)) (or (= $generated@@484 ($generated@@374 $generated@@486 $generated@@485)) (exists (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (and (and (= (type $generated@@487) $generated@@234) (= (type $generated@@488) $generated@@234)) ($generated@@0 ($generated@@92 ($generated@@436 $generated@@484) ($generated@@353 ($generated@@304 $generated@@487 $generated@@488)))))
 :no-pattern (type $generated@@487)
 :no-pattern (type $generated@@488)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
))))))
 :pattern ( ($generated@@436 $generated@@484))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@194 (type $generated@@489))))
(let (($generated@@491 ($generated@@193 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@192 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@380 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (and (and (= (type $generated@@492) $generated@@234) (= (type $generated@@493) $generated@@234)) ($generated@@0 ($generated@@92 ($generated@@440 $generated@@489) ($generated@@353 ($generated@@304 $generated@@492 $generated@@493)))))
 :no-pattern (type $generated@@492)
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@440 $generated@@489))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@76)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@T) ) (!  (=> (and (= (type $generated@@496) $generated@@76) (= (type $generated@@497) $generated@@74)) (and (= ($generated@@494 ($generated@@312 $generated@@498 $generated@@496 $generated@@497)) $generated@@496) (= ($generated@@83 ($generated@@312 $generated@@498 $generated@@496 $generated@@497)) $generated@@497)))
 :pattern ( ($generated@@312 $generated@@498 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@234) ($generated@@305 $generated@@499 $generated@@46)) (and (= ($generated@@353 ($generated@@395 $generated@@2 $generated@@499)) $generated@@499) ($generated@@154 ($generated@@395 $generated@@2 $generated@@499) $generated@@46)))
 :pattern ( ($generated@@305 $generated@@499 $generated@@46))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@234) ($generated@@305 $generated@@500 $generated@@47)) (and (= ($generated@@353 ($generated@@395 $generated@@3 $generated@@500)) $generated@@500) ($generated@@154 ($generated@@395 $generated@@3 $generated@@500) $generated@@47)))
 :pattern ( ($generated@@305 $generated@@500 $generated@@47))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@234) ($generated@@305 $generated@@501 $generated@@44)) (and (= ($generated@@353 ($generated@@395 $generated@@4 $generated@@501)) $generated@@501) ($generated@@154 ($generated@@395 $generated@@4 $generated@@501) $generated@@44)))
 :pattern ( ($generated@@305 $generated@@501 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@502) 22))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@234) ($generated@@305 $generated@@503 $generated@@45)) (and (= ($generated@@353 ($generated@@395 $generated@@502 $generated@@503)) $generated@@503) ($generated@@154 ($generated@@395 $generated@@502 $generated@@503) $generated@@45)))
 :pattern ( ($generated@@305 $generated@@503 $generated@@45))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@70) (= ($generated@@305 ($generated@@353 $generated@@504) $generated@@505) ($generated@@154 $generated@@504 $generated@@505)))
 :pattern ( ($generated@@305 ($generated@@353 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@90 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@87 $generated@@507 $generated@@2)) (<= 0 ($generated@@368 $generated@@506))))
 :pattern ( ($generated@@368 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@348 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@347 $generated@@509)) (<= 0 ($generated@@346 $generated@@508))))
 :pattern ( ($generated@@346 $generated@@508))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@70) (= (type $generated@@513) $generated@@70)) (= ($generated@@510 ($generated@@454 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@454 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@70)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@70) (= (type $generated@@517) $generated@@70)) (= ($generated@@514 ($generated@@454 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@454 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@70) (= (type $generated@@519) $generated@@70)) (= ($generated@@81 ($generated@@454 $generated@@518 $generated@@519)) $generated@@58))
 :pattern ( ($generated@@454 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@70) (= (type $generated@@523) $generated@@70)) (= ($generated@@520 ($generated@@462 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@462 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@70) (= (type $generated@@527) $generated@@70)) (= ($generated@@524 ($generated@@462 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@462 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@70) (= (type $generated@@529) $generated@@70)) (= ($generated@@81 ($generated@@462 $generated@@528 $generated@@529)) $generated@@59))
 :pattern ( ($generated@@462 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@234) (= (type $generated@@531) $generated@@234)) (= ($generated@@339 ($generated@@304 $generated@@530 $generated@@531)) $generated@@62))
 :pattern ( ($generated@@304 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@70) (= (type $generated@@535) $generated@@70)) (= ($generated@@532 ($generated@@224 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@224 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@70) (= (type $generated@@539) $generated@@70)) (= ($generated@@536 ($generated@@224 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@224 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@234) (= (type $generated@@541) $generated@@234)) (= ($generated@@232 ($generated@@304 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@304 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@234) (= (type $generated@@543) $generated@@234)) (= ($generated@@233 ($generated@@304 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@304 $generated@@542 $generated@@543))
)))
(assert  (and (forall (($generated@@546 T@U) ) (! (= (type ($generated@@544 $generated@@546)) $generated@@70)
 :pattern ( ($generated@@544 $generated@@546))
)) (forall (($generated@@547 T@U) ($generated@@548 Int) ) (! (let (($generated@@549 ($generated@@348 (type $generated@@547))))
(= (type ($generated@@545 $generated@@547 $generated@@548)) $generated@@549))
 :pattern ( ($generated@@545 $generated@@547 $generated@@548))
))))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@347 $generated@@234)) (= (type $generated@@551) $generated@@70)) (= (type $generated@@552) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@550 ($generated@@544 $generated@@551) $generated@@552) (forall (($generated@@553 Int) ) (!  (=> (and (<= 0 $generated@@553) (< $generated@@553 ($generated@@346 $generated@@550))) ($generated@@333 ($generated@@545 $generated@@550 $generated@@553) $generated@@551 $generated@@552))
 :pattern ( ($generated@@545 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@85 $generated@@550 ($generated@@544 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@554 ($generated@@86 $generated@@555)) $generated@@555)
 :pattern ( ($generated@@86 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@70)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@70) (= ($generated@@556 ($generated@@319 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@319 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@70) (= ($generated@@81 ($generated@@319 $generated@@559)) $generated@@54))
 :pattern ( ($generated@@319 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@70)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@70) (= ($generated@@560 ($generated@@324 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@324 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@70) (= ($generated@@81 ($generated@@324 $generated@@563)) $generated@@55))
 :pattern ( ($generated@@324 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@70)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@70) (= ($generated@@564 ($generated@@239 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@239 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@70) (= ($generated@@81 ($generated@@239 $generated@@567)) $generated@@56))
 :pattern ( ($generated@@239 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@70)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@70) (= ($generated@@568 ($generated@@544 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@544 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@70) (= ($generated@@81 ($generated@@544 $generated@@571)) $generated@@57))
 :pattern ( ($generated@@544 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
(= ($generated@@395 $generated@@573 ($generated@@353 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@353 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@160 $generated@@234 $generated@@234)) (= (type $generated@@575) $generated@@70)) (= (type $generated@@576) $generated@@70)) (= ($generated@@154 $generated@@574 ($generated@@454 $generated@@575 $generated@@576)) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@234) ($generated@@0 ($generated@@92 ($generated@@158 $generated@@574) $generated@@577))) (and ($generated@@305 ($generated@@92 ($generated@@181 $generated@@574) $generated@@577) $generated@@576) ($generated@@305 $generated@@577 $generated@@575)))
 :pattern ( ($generated@@92 ($generated@@181 $generated@@574) $generated@@577))
 :pattern ( ($generated@@92 ($generated@@158 $generated@@574) $generated@@577))
))))
 :pattern ( ($generated@@154 $generated@@574 ($generated@@454 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@192 $generated@@234 $generated@@234)) (= (type $generated@@579) $generated@@70)) (= (type $generated@@580) $generated@@70)) (= ($generated@@154 $generated@@578 ($generated@@462 $generated@@579 $generated@@580)) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@234) ($generated@@0 ($generated@@92 ($generated@@190 $generated@@578) $generated@@581))) (and ($generated@@305 ($generated@@92 ($generated@@213 $generated@@578) $generated@@581) $generated@@580) ($generated@@305 $generated@@581 $generated@@579)))
 :pattern ( ($generated@@92 ($generated@@213 $generated@@578) $generated@@581))
 :pattern ( ($generated@@92 ($generated@@190 $generated@@578) $generated@@581))
))))
 :pattern ( ($generated@@154 $generated@@578 ($generated@@462 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@234) (= (type $generated@@585) $generated@@234)) (< ($generated@@582 $generated@@584) ($generated@@583 ($generated@@304 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@304 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@234) (= (type $generated@@587) $generated@@234)) (< ($generated@@582 $generated@@587) ($generated@@583 ($generated@@304 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@304 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (! (= (type ($generated@@588 $generated@@589 $generated@@590)) ($generated@@87 $generated@@234 $generated@@234))
 :pattern ( ($generated@@588 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@592) ($generated@@72 $generated@@2))) (= (type $generated@@593) $generated@@234)) (= ($generated@@92 ($generated@@588 $generated@@591 $generated@@592) $generated@@593) ($generated@@353 ($generated@@94 ($generated@@92 $generated@@591 ($generated@@395 $generated@@88 $generated@@593)) $generated@@592))))
 :pattern ( ($generated@@92 ($generated@@588 $generated@@591 $generated@@592) $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (! (= (type ($generated@@594 $generated@@595 $generated@@596)) ($generated@@87 $generated@@234 $generated@@4))
 :pattern ( ($generated@@594 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@70) (= (type $generated@@598) ($generated@@87 $generated@@234 $generated@@4))) (= (type $generated@@599) $generated@@234)) (= ($generated@@0 ($generated@@92 ($generated@@594 $generated@@597 $generated@@598) $generated@@599))  (and ($generated@@305 $generated@@599 $generated@@597) ($generated@@0 ($generated@@92 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@92 ($generated@@594 $generated@@597 $generated@@598) $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@234) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) $generated@@70)) ($generated@@305 $generated@@600 ($generated@@454 $generated@@601 $generated@@602))) (and (= ($generated@@353 ($generated@@395 ($generated@@160 $generated@@234 $generated@@234) $generated@@600)) $generated@@600) ($generated@@154 ($generated@@395 ($generated@@160 $generated@@234 $generated@@234) $generated@@600) ($generated@@454 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@305 $generated@@600 ($generated@@454 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@234) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) $generated@@70)) ($generated@@305 $generated@@603 ($generated@@462 $generated@@604 $generated@@605))) (and (= ($generated@@353 ($generated@@395 ($generated@@192 $generated@@234 $generated@@234) $generated@@603)) $generated@@603) ($generated@@154 ($generated@@395 ($generated@@192 $generated@@234 $generated@@234) $generated@@603) ($generated@@462 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@305 $generated@@603 ($generated@@462 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@70) (= (type $generated@@607) $generated@@70)) (= (type $generated@@608) $generated@@234)) ($generated@@305 $generated@@608 ($generated@@224 $generated@@606 $generated@@607))) (and (= ($generated@@353 ($generated@@395 $generated@@225 $generated@@608)) $generated@@608) ($generated@@154 ($generated@@395 $generated@@225 $generated@@608) ($generated@@224 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@305 $generated@@608 ($generated@@224 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (not ($generated@@0 ($generated@@92 ($generated@@473 $generated@@610) $generated@@609))))
 :pattern ( (let (($generated@@610 (type $generated@@609)))
($generated@@92 ($generated@@473 $generated@@610) $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@611) ($generated@@87 $generated@@234 $generated@@4)) (= (type $generated@@612) ($generated@@87 $generated@@234 $generated@@234))) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@234) ($generated@@0 ($generated@@92 $generated@@611 $generated@@615))) (and ($generated@@305 $generated@@615 $generated@@613) ($generated@@305 ($generated@@92 $generated@@612 $generated@@615) $generated@@614)))
 :no-pattern (type $generated@@615)
 :no-pattern ($generated $generated@@615)
 :no-pattern ($generated@@0 $generated@@615)
))) ($generated@@154 ($generated@@159 $generated@@611 $generated@@612 ($generated@@454 $generated@@613 $generated@@614)) ($generated@@454 $generated@@613 $generated@@614)))
 :pattern ( ($generated@@159 $generated@@611 $generated@@612 ($generated@@454 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@616) ($generated@@87 $generated@@234 $generated@@4)) (= (type $generated@@617) ($generated@@87 $generated@@234 $generated@@234))) (= (type $generated@@618) $generated@@70)) (= (type $generated@@619) $generated@@70)) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@234) ($generated@@0 ($generated@@92 $generated@@616 $generated@@620))) (and ($generated@@305 $generated@@620 $generated@@618) ($generated@@305 ($generated@@92 $generated@@617 $generated@@620) $generated@@619)))
 :no-pattern (type $generated@@620)
 :no-pattern ($generated $generated@@620)
 :no-pattern ($generated@@0 $generated@@620)
))) ($generated@@154 ($generated@@159 $generated@@616 $generated@@617 ($generated@@462 $generated@@618 $generated@@619)) ($generated@@462 $generated@@618 $generated@@619)))
 :pattern ( ($generated@@191 $generated@@616 $generated@@617 ($generated@@462 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ) (! (= (type ($generated@@621 $generated@@622)) $generated@@77)
 :pattern ( ($generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@70) (= (type $generated@@624) $generated@@70)) (and (= ($generated@@81 ($generated@@224 $generated@@623 $generated@@624)) $generated@@63) (= ($generated@@621 ($generated@@224 $generated@@623 $generated@@624)) $generated@@67)))
 :pattern ( ($generated@@224 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@225) (= ($generated@@582 ($generated@@353 $generated@@625)) ($generated@@583 $generated@@625)))
 :pattern ( ($generated@@582 ($generated@@353 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@234) ($generated@@305 $generated@@626 ($generated@@86 0))) (and (= ($generated@@353 ($generated@@395 $generated@@2 $generated@@626)) $generated@@626) ($generated@@154 ($generated@@395 ($generated@@87 $generated@@234 $generated@@4) $generated@@626) ($generated@@86 0))))
 :pattern ( ($generated@@305 $generated@@626 ($generated@@86 0)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@234) (= (type $generated@@628) $generated@@70)) ($generated@@305 $generated@@627 ($generated@@319 $generated@@628))) (and (= ($generated@@353 ($generated@@395 ($generated@@87 $generated@@234 $generated@@4) $generated@@627)) $generated@@627) ($generated@@154 ($generated@@395 ($generated@@87 $generated@@234 $generated@@4) $generated@@627) ($generated@@319 $generated@@628))))
 :pattern ( ($generated@@305 $generated@@627 ($generated@@319 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@234) (= (type $generated@@630) $generated@@70)) ($generated@@305 $generated@@629 ($generated@@324 $generated@@630))) (and (= ($generated@@353 ($generated@@395 ($generated@@87 $generated@@234 $generated@@4) $generated@@629)) $generated@@629) ($generated@@154 ($generated@@395 ($generated@@87 $generated@@234 $generated@@4) $generated@@629) ($generated@@324 $generated@@630))))
 :pattern ( ($generated@@305 $generated@@629 ($generated@@324 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@234) (= (type $generated@@632) $generated@@70)) ($generated@@305 $generated@@631 ($generated@@239 $generated@@632))) (and (= ($generated@@353 ($generated@@395 ($generated@@87 $generated@@234 $generated@@2) $generated@@631)) $generated@@631) ($generated@@154 ($generated@@395 ($generated@@87 $generated@@234 $generated@@2) $generated@@631) ($generated@@239 $generated@@632))))
 :pattern ( ($generated@@305 $generated@@631 ($generated@@239 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@234) (= (type $generated@@634) $generated@@70)) ($generated@@305 $generated@@633 ($generated@@544 $generated@@634))) (and (= ($generated@@353 ($generated@@395 ($generated@@347 $generated@@234) $generated@@633)) $generated@@633) ($generated@@154 ($generated@@395 ($generated@@347 $generated@@234) $generated@@633) ($generated@@544 $generated@@634))))
 :pattern ( ($generated@@305 $generated@@633 ($generated@@544 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (! (let (($generated@@639 (type $generated@@638)))
 (=> (and (and (and (= (type $generated@@635) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@636) $generated@@88)) (= (type $generated@@637) ($generated@@72 $generated@@639))) ($generated@@152 ($generated@@93 $generated@@635 $generated@@636 ($generated@@95 ($generated@@92 $generated@@635 $generated@@636) $generated@@637 $generated@@638)))) ($generated@@143 $generated@@635 ($generated@@93 $generated@@635 $generated@@636 ($generated@@95 ($generated@@92 $generated@@635 $generated@@636) $generated@@637 $generated@@638)))))
 :pattern ( ($generated@@93 $generated@@635 $generated@@636 ($generated@@95 ($generated@@92 $generated@@635 $generated@@636) $generated@@637 $generated@@638)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@621 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@301) $generated@@66))
(assert (= ($generated@@621 $generated@@301) $generated@@68))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@640) ($generated@@87 $generated@@234 $generated@@2)) (= (type $generated@@641) $generated@@70)) (= (type $generated@@642) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@640 ($generated@@239 $generated@@641) $generated@@642) (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@234) (< 0 ($generated ($generated@@92 $generated@@640 $generated@@643)))) ($generated@@333 $generated@@643 $generated@@641 $generated@@642))
 :pattern ( ($generated@@92 $generated@@640 $generated@@643))
))))
 :pattern ( ($generated@@85 $generated@@640 ($generated@@239 $generated@@641) $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) $generated@@225) (= (type $generated@@645) $generated@@70)) (= (type $generated@@646) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@646) (and ($generated@@223 $generated@@644) (exists (($generated@@647 T@U) ) (!  (and (= (type $generated@@647) $generated@@70) ($generated@@85 $generated@@644 ($generated@@224 $generated@@645 $generated@@647) $generated@@646))
 :pattern ( ($generated@@85 $generated@@644 ($generated@@224 $generated@@645 $generated@@647) $generated@@646))
))))) ($generated@@333 ($generated@@232 $generated@@644) $generated@@645 $generated@@646))
 :pattern ( ($generated@@333 ($generated@@232 $generated@@644) $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) $generated@@225) (= (type $generated@@649) $generated@@70)) (= (type $generated@@650) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@650) (and ($generated@@223 $generated@@648) (exists (($generated@@651 T@U) ) (!  (and (= (type $generated@@651) $generated@@70) ($generated@@85 $generated@@648 ($generated@@224 $generated@@651 $generated@@649) $generated@@650))
 :pattern ( ($generated@@85 $generated@@648 ($generated@@224 $generated@@651 $generated@@649) $generated@@650))
))))) ($generated@@333 ($generated@@233 $generated@@648) $generated@@649 $generated@@650))
 :pattern ( ($generated@@333 ($generated@@233 $generated@@648) $generated@@649 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@234) (= (type $generated@@653) $generated@@234)) (= ($generated@@304 ($generated@@329 $generated@@652) ($generated@@329 $generated@@653)) ($generated@@329 ($generated@@304 $generated@@652 $generated@@653))))
 :pattern ( ($generated@@304 ($generated@@329 $generated@@652) ($generated@@329 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ) (! (= ($generated@@353 ($generated@@329 $generated@@654)) ($generated@@329 ($generated@@353 $generated@@654)))
 :pattern ( ($generated@@353 ($generated@@329 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@348 (type $generated@@655))))
 (=> (and (= (type $generated@@655) ($generated@@347 $generated@@656)) (= ($generated@@346 $generated@@655) 0)) (= $generated@@655 ($generated@@345 $generated@@656))))
 :pattern ( ($generated@@346 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@658)))
 (=> (and (and (= (type $generated@@657) ($generated@@87 $generated@@660 $generated@@2)) (= (type $generated@@659) $generated@@2)) (<= 0 ($generated $generated@@659))) (= ($generated@@368 ($generated@@93 $generated@@657 $generated@@658 $generated@@659)) (+ (- ($generated@@368 $generated@@657) ($generated ($generated@@92 $generated@@657 $generated@@658))) ($generated $generated@@659)))))
 :pattern ( ($generated@@368 ($generated@@93 $generated@@657 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@662) $generated@@2)) ($generated@@85 $generated@@662 $generated@@46 $generated@@661))
 :pattern ( ($generated@@85 $generated@@662 $generated@@46 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@664) $generated@@3)) ($generated@@85 $generated@@664 $generated@@47 $generated@@663))
 :pattern ( ($generated@@85 $generated@@664 $generated@@47 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@666) $generated@@4)) ($generated@@85 $generated@@666 $generated@@44 $generated@@665))
 :pattern ( ($generated@@85 $generated@@666 $generated@@44 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@668) $generated@@502)) ($generated@@85 $generated@@668 $generated@@45 $generated@@667))
 :pattern ( ($generated@@85 $generated@@668 $generated@@45 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@670) $generated@@234)) ($generated@@85 $generated@@670 $generated@@48 $generated@@669))
 :pattern ( ($generated@@85 $generated@@670 $generated@@48 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@347 $generated@@234)) (= (type $generated@@672) $generated@@70)) (= ($generated@@154 $generated@@671 ($generated@@544 $generated@@672)) (forall (($generated@@673 Int) ) (!  (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@346 $generated@@671))) ($generated@@305 ($generated@@545 $generated@@671 $generated@@673) $generated@@672))
 :pattern ( ($generated@@545 $generated@@671 $generated@@673))
))))
 :pattern ( ($generated@@154 $generated@@671 ($generated@@544 $generated@@672)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 Int) ) (!  (=> (= (type $generated@@675) ($generated@@347 $generated@@234)) (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@346 $generated@@675))) (< ($generated@@583 ($generated@@395 $generated@@225 ($generated@@545 $generated@@675 $generated@@676))) ($generated@@674 $generated@@675))))
 :pattern ( ($generated@@583 ($generated@@395 $generated@@225 ($generated@@545 $generated@@675 $generated@@676))))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@160 $generated@@234 $generated@@234)) (= (type $generated@@678) $generated@@70)) (= (type $generated@@679) $generated@@70)) ($generated@@154 $generated@@677 ($generated@@454 $generated@@678 $generated@@679))) (and (and ($generated@@154 ($generated@@158 $generated@@677) ($generated@@319 $generated@@678)) ($generated@@154 ($generated@@405 $generated@@677) ($generated@@319 $generated@@679))) ($generated@@154 ($generated@@436 $generated@@677) ($generated@@319 ($generated@@224 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@154 $generated@@677 ($generated@@454 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@192 $generated@@234 $generated@@234)) (= (type $generated@@681) $generated@@70)) (= (type $generated@@682) $generated@@70)) ($generated@@154 $generated@@680 ($generated@@462 $generated@@681 $generated@@682))) (and (and ($generated@@154 ($generated@@190 $generated@@680) ($generated@@324 $generated@@681)) ($generated@@154 ($generated@@416 $generated@@680) ($generated@@324 $generated@@682))) ($generated@@154 ($generated@@440 $generated@@680) ($generated@@324 ($generated@@224 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@154 $generated@@680 ($generated@@462 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@2) ($generated@@154 $generated@@683 $generated@@46))
 :pattern ( ($generated@@154 $generated@@683 $generated@@46))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@3) ($generated@@154 $generated@@684 $generated@@47))
 :pattern ( ($generated@@154 $generated@@684 $generated@@47))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@4) ($generated@@154 $generated@@685 $generated@@44))
 :pattern ( ($generated@@154 $generated@@685 $generated@@44))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@502) ($generated@@154 $generated@@686 $generated@@45))
 :pattern ( ($generated@@154 $generated@@686 $generated@@45))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@234) ($generated@@154 $generated@@687 $generated@@48))
 :pattern ( ($generated@@154 $generated@@687 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 (T@U) Bool)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Bool)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@688) ($generated@@192 $generated@@234 $generated@@234)) (= (type $generated@@689) ($generated@@87 $generated@@234 $generated@@4))) (= (type $generated@@690) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@691) $generated@@88)) (= (type $generated@@692) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@694) $generated@@88)) (= (type $generated@@695) ($generated@@247 $generated@@88 $generated@@4))) (= (type $generated@@696) ($generated@@192 $generated@@234 $generated@@234))) (= (type $generated@@698) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@700  (=> (= $generated@@688 ($generated@@191 ($generated@@594 $generated@@301 $generated@@689) ($generated@@588 $generated@@690 $generated@@151) ($generated@@462 $generated@@301 $generated@@46))) (=> (and (not (= $generated@@691 $generated@@148)) (= ($generated@@153 $generated@@691) $generated@@147)) (=> (and (and (not ($generated@@0 ($generated@@94 ($generated@@92 $generated@@690 $generated@@691) $generated@@60))) (= $generated@@692 ($generated@@93 $generated@@690 $generated@@691 ($generated@@95 ($generated@@92 $generated@@690 $generated@@691) $generated@@60 ($generated@@11 true))))) (and ($generated@@152 $generated@@692) ($generated@@693 $generated@@692))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (not ($generated@@0 ($generated@@92 ($generated@@190 $generated@@688) ($generated@@353 $generated@@691)))))))))))
(let (($generated@@701  (=> (and (not ($generated@@0 ($generated@@92 $generated@@689 ($generated@@353 $generated@@694)))) (= (ControlFlow 0 7) 2)) $generated@@700)))
(let (($generated@@702  (=> ($generated@@0 ($generated@@92 $generated@@689 ($generated@@353 $generated@@694))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not (= $generated@@694 $generated@@148))) (=> (not (= $generated@@694 $generated@@148)) (=> (= (ControlFlow 0 5) 2) $generated@@700))))))
(let (($generated@@703  (=> (and ($generated@@154 $generated@@694 $generated@@301) ($generated@@85 $generated@@694 $generated@@301 $generated@@690)) (and (=> (= (ControlFlow 0 8) 5) $generated@@702) (=> (= (ControlFlow 0 8) 7) $generated@@701)))))
(let (($generated@@704  (=> (and (not (and ($generated@@154 $generated@@694 $generated@@301) ($generated@@85 $generated@@694 $generated@@301 $generated@@690))) (= (ControlFlow 0 4) 2)) $generated@@700)))
(let (($generated@@705  (=> (= $generated@@695 ($generated@@246 $generated@@148 $generated@@690 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@703) (=> (= (ControlFlow 0 9) 4) $generated@@704)))))
(let (($generated@@706  (=> (and (and ($generated@@152 $generated@@690) ($generated@@693 $generated@@690)) (and ($generated@@154 $generated@@689 ($generated@@319 $generated@@301)) ($generated@@85 $generated@@689 ($generated@@319 $generated@@301) $generated@@690))) (=> (and (and (and ($generated@@154 $generated@@696 ($generated@@462 $generated@@301 $generated@@46)) ($generated@@85 $generated@@696 ($generated@@462 $generated@@301 $generated@@46) $generated@@690)) true) (and (and (=> $generated@@697 (and ($generated@@154 $generated@@698 $generated@@301) ($generated@@85 $generated@@698 $generated@@301 $generated@@690))) true) (and (= 1 $generated@@699) (= (ControlFlow 0 10) 9)))) $generated@@705))))
$generated@@706))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@196 (T@U T@U) Bool)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 (T@U T@U) T@U)
(declare-fun $generated@@200 () T@T)
(declare-fun $generated@@206 (T@U T@U) Bool)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@219 (T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@221 (T@T T@T) T@T)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@275 (T@U T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@295 (Int) Int)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@301 (T@U Int) T@U)
(declare-fun $generated@@302 (T@T T@U) T@U)
(declare-fun $generated@@310 (T@U) Bool)
(declare-fun $generated@@311 (T@U T@U T@U) Bool)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@323 (T@T) T@U)
(declare-fun $generated@@324 (T@U) Int)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@336 (T@U) Int)
(declare-fun $generated@@337 (T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@T) T@U)
(declare-fun $generated@@450 () T@T)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@493 (T@U Int) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (Int Int) Int)
(declare-fun $generated@@574 (Int) T@U)
(declare-fun $generated@@613 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@137 $generated@@138)) 14)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@134 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@136 ($generated@@134 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@134 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@132 $generated@@143)) ($generated@@76 $generated@@144 $generated@@4)))
 :pattern ( ($generated@@132 $generated@@143))
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (let (($generated@@148 ($generated@@80 (type $generated@@146))))
(let (($generated@@149 ($generated@@79 (type $generated@@145))))
(= (type ($generated@@133 $generated@@145 $generated@@146 $generated@@147)) ($generated@@134 $generated@@149 $generated@@148))))
 :pattern ( ($generated@@133 $generated@@145 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@80 (type $generated@@151))))
(let (($generated@@154 ($generated@@79 (type $generated@@150))))
 (=> (and (and (= (type $generated@@150) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@151) ($generated@@76 $generated@@154 $generated@@153))) (= (type $generated@@152) $generated@@64)) (= ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)) $generated@@150))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)))
)))
(assert (forall (($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@136 (type $generated@@156))))
(let (($generated@@158 ($generated@@135 (type $generated@@156))))
(= (type ($generated@@155 $generated@@156)) ($generated@@76 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@80 (type $generated@@160))))
(let (($generated@@163 ($generated@@79 (type $generated@@159))))
 (=> (and (and (= (type $generated@@159) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@160) ($generated@@76 $generated@@163 $generated@@162))) (= (type $generated@@161) $generated@@64)) (= ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)) $generated@@160))))
 :pattern ( ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)))
)))
(assert  (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@169 $generated@@170)) 15)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@166 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@166 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@164 $generated@@175)) ($generated@@76 $generated@@176 $generated@@4)))
 :pattern ( ($generated@@164 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@80 (type $generated@@178))))
(let (($generated@@181 ($generated@@79 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) ($generated@@166 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@80 (type $generated@@183))))
(let (($generated@@186 ($generated@@79 (type $generated@@182))))
 (=> (and (and (= (type $generated@@182) ($generated@@76 $generated@@186 $generated@@4)) (= (type $generated@@183) ($generated@@76 $generated@@186 $generated@@185))) (= (type $generated@@184) $generated@@64)) (= ($generated@@164 ($generated@@165 $generated@@182 $generated@@183 $generated@@184)) $generated@@182))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@182 $generated@@183 $generated@@184)))
)))
(assert (forall (($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@168 (type $generated@@188))))
(let (($generated@@190 ($generated@@167 (type $generated@@188))))
(= (type ($generated@@187 $generated@@188)) ($generated@@76 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@80 (type $generated@@192))))
(let (($generated@@195 ($generated@@79 (type $generated@@191))))
 (=> (and (and (= (type $generated@@191) ($generated@@76 $generated@@195 $generated@@4)) (= (type $generated@@192) ($generated@@76 $generated@@195 $generated@@194))) (= (type $generated@@193) $generated@@64)) (= ($generated@@187 ($generated@@165 $generated@@191 $generated@@192 $generated@@193)) $generated@@192))))
 :pattern ( ($generated@@187 ($generated@@165 $generated@@191 $generated@@192 $generated@@193)))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> (= (type $generated@@197) $generated@@2) ($generated@@196 $generated@@197 ($generated@@75 0)))
 :pattern ( ($generated@@196 $generated@@197 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@200) 16) (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! (= (type ($generated@@199 $generated@@201 $generated@@202)) $generated@@64)
 :pattern ( ($generated@@199 $generated@@201 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (and (= (type $generated@@203) $generated@@64) (= (type $generated@@204) $generated@@64)) (= (type $generated@@205) $generated@@200)) ($generated@@196 $generated@@205 ($generated@@199 $generated@@203 $generated@@204))) ($generated@@198 $generated@@205))
 :pattern ( ($generated@@198 $generated@@205) ($generated@@196 $generated@@205 ($generated@@199 $generated@@203 $generated@@204)))
)))
(assert  (and (and (= ($generated@@1 $generated@@209) 17) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@207 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@207 $generated@@210))
))) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@208 $generated@@211)) $generated@@209)
 :pattern ( ($generated@@208 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (= (type $generated@@212) $generated@@200) (= (type $generated@@213) $generated@@200)) true) (= ($generated@@206 $generated@@212 $generated@@213)  (and (= ($generated@@207 $generated@@212) ($generated@@207 $generated@@213)) (= ($generated@@208 $generated@@212) ($generated@@208 $generated@@213)))))
 :pattern ( ($generated@@206 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 T@U) ) (! (= (type ($generated@@214 $generated@@216)) $generated@@64)
 :pattern ( ($generated@@214 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (= (type $generated@@217) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@218) $generated@@64)) ($generated@@196 $generated@@217 ($generated@@214 $generated@@218))) ($generated@@215 $generated@@217))
 :pattern ( ($generated@@196 $generated@@217 ($generated@@214 $generated@@218)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@1 ($generated@@221 $generated@@225 $generated@@226)) 18)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@221 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@223 ($generated@@221 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@221 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@223 (type $generated@@231))))
(= (type ($generated@@219 $generated@@231 $generated@@232 $generated@@233)) $generated@@234))
 :pattern ( ($generated@@219 $generated@@231 $generated@@232 $generated@@233))
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(let (($generated@@240 (type $generated@@236)))
(= (type ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@221 $generated@@240 $generated@@239))))
 :pattern ( ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@223 (type $generated@@241))))
 (=> (= (type $generated@@244) $generated@@245) (= ($generated@@219 ($generated@@224 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@242 $generated@@243) $generated@@244)))
 :weight 0
))) (and (and (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (or (= $generated@@248 $generated@@250) (= ($generated@@219 ($generated@@224 $generated@@247 $generated@@248 $generated@@249 $generated@@246) $generated@@250 $generated@@251) ($generated@@219 $generated@@247 $generated@@250 $generated@@251)))
 :weight 0
)) (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (or (= $generated@@255 $generated@@257) (= ($generated@@219 ($generated@@224 $generated@@253 $generated@@254 $generated@@255 $generated@@252) $generated@@256 $generated@@257) ($generated@@219 $generated@@253 $generated@@256 $generated@@257)))
 :weight 0
))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (or true (= ($generated@@219 ($generated@@224 $generated@@259 $generated@@260 $generated@@261 $generated@@258) $generated@@262 $generated@@263) ($generated@@219 $generated@@259 $generated@@262 $generated@@263)))
 :weight 0
)))) (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 Bool) ) (! (= (type ($generated@@220 $generated@@264 $generated@@265 $generated@@266 $generated@@267)) ($generated@@221 $generated@@77 $generated@@4))
 :pattern ( ($generated@@220 $generated@@264 $generated@@265 $generated@@266 $generated@@267))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 Bool) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@67 (type $generated@@273))))
 (=> (and (and (and (and (= (type $generated@@268) $generated@@77) (= (type $generated@@269) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@270) ($generated@@66 $generated@@4))) (= (type $generated@@272) $generated@@77)) (= (type $generated@@273) ($generated@@66 $generated@@274))) (= ($generated@@0 ($generated@@219 ($generated@@220 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@272 $generated@@273))  (=> (and (not (= $generated@@272 $generated@@268)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@269 $generated@@272) $generated@@270))) $generated@@271))))
 :pattern ( ($generated@@219 ($generated@@220 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (! (= (type ($generated@@275 $generated@@277 $generated@@278)) $generated@@200)
 :pattern ( ($generated@@275 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) $generated@@64)) (= (type $generated@@281) $generated@@209)) (= (type $generated@@282) $generated@@209)) (= ($generated@@196 ($generated@@275 $generated@@281 $generated@@282) ($generated@@199 $generated@@279 $generated@@280))  (and ($generated@@276 $generated@@281 $generated@@279) ($generated@@276 $generated@@282 $generated@@280))))
 :pattern ( ($generated@@196 ($generated@@275 $generated@@281 $generated@@282) ($generated@@199 $generated@@279 $generated@@280)))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@200) (= (type $generated@@284) $generated@@200)) (= ($generated@@206 $generated@@283 $generated@@284) (= $generated@@283 $generated@@284)))
 :pattern ( ($generated@@206 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@64)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@288) $generated@@64)) (= ($generated@@196 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@209) ($generated@@0 ($generated@@81 $generated@@287 $generated@@289))) ($generated@@276 $generated@@289 $generated@@288))
 :pattern ( ($generated@@81 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@196 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@64)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@293) $generated@@64)) (= ($generated@@196 $generated@@292 ($generated@@290 $generated@@293)) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@209) ($generated@@0 ($generated@@81 $generated@@292 $generated@@294))) ($generated@@276 $generated@@294 $generated@@293))
 :pattern ( ($generated@@81 $generated@@292 $generated@@294))
))))
 :pattern ( ($generated@@196 $generated@@292 ($generated@@290 $generated@@293)))
)))
(assert (forall (($generated@@296 Int) ) (! (= ($generated@@295 $generated@@296) $generated@@296)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 (type $generated@@298)))
(= (type ($generated@@297 $generated@@298)) $generated@@299))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= ($generated@@297 $generated@@300) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (forall (($generated@@303 T@U) ($generated@@304 Int) ) (! (= (type ($generated@@301 $generated@@303 $generated@@304)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@301 $generated@@303 $generated@@304))
)) (forall (($generated@@305 T@T) ($generated@@306 T@U) ) (! (= (type ($generated@@302 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@302 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 Int) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@64) (= (type $generated@@309) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@301 $generated@@307 $generated@@308) $generated@@309))  (and ($generated@@276 $generated@@309 $generated@@307) (> ($generated ($generated@@302 $generated@@2 $generated@@309)) $generated@@308))))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@307 $generated@@308) $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@312) $generated@@64) (= (type $generated@@313) $generated@@64)) (= (type $generated@@314) $generated@@209)) (= (type $generated@@315) $generated@@209)) (= (type $generated@@316) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@310 $generated@@316)) (= ($generated@@74 ($generated@@275 $generated@@314 $generated@@315) ($generated@@199 $generated@@312 $generated@@313) $generated@@316)  (and ($generated@@311 $generated@@314 $generated@@312 $generated@@316) ($generated@@311 $generated@@315 $generated@@313 $generated@@316))))
 :pattern ( ($generated@@74 ($generated@@275 $generated@@314 $generated@@315) ($generated@@199 $generated@@312 $generated@@313) $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@68)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@200) (= ($generated@@198 $generated@@319) (= ($generated@@317 $generated@@319) $generated@@61)))
 :pattern ( ($generated@@198 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@200) ($generated@@198 $generated@@320)) (exists (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (and (and (= (type $generated@@321) $generated@@209) (= (type $generated@@322) $generated@@209)) (= $generated@@320 ($generated@@275 $generated@@321 $generated@@322)))
 :no-pattern (type $generated@@321)
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
)))
 :pattern ( ($generated@@198 $generated@@320))
)))
(assert  (and (and (forall (($generated@@327 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@327)) 19)) (forall (($generated@@328 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@325 $generated@@328))
))) (forall (($generated@@329 T@T) ) (! (= (type ($generated@@323 $generated@@329)) ($generated@@325 $generated@@329))
 :pattern ( ($generated@@323 $generated@@329))
))))
(assert (forall (($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@330)) 0)
 :pattern ( ($generated@@323 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@209)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@64) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@311 ($generated@@331 $generated@@333) $generated@@334 $generated@@335) ($generated@@74 $generated@@333 $generated@@334 $generated@@335)))
 :pattern ( ($generated@@311 ($generated@@331 $generated@@333) $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@338 T@T) ) (! (= (type ($generated@@337 $generated@@338)) ($generated@@76 $generated@@338 $generated@@2))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@79 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@76 $generated@@340 $generated@@2)) (and (= (= ($generated@@336 $generated@@339) 0) (= $generated@@339 ($generated@@337 $generated@@340))) (=> (not (= ($generated@@336 $generated@@339) 0)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) (< 0 ($generated ($generated@@81 $generated@@339 $generated@@341))))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) ($generated@@134 $generated@@343 $generated@@344))
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@81 ($generated@@132 ($generated@@342 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@81 ($generated@@132 ($generated@@342 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@348 $generated@@349 $generated@@350)) ($generated@@166 $generated@@349 $generated@@350))
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@81 ($generated@@164 ($generated@@348 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@81 ($generated@@164 ($generated@@348 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@79 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@76 $generated@@355 $generated@@2)) (= ($generated@@215 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@81 $generated@@354 $generated@@356))) (<= ($generated ($generated@@81 $generated@@354 $generated@@356)) ($generated@@336 $generated@@354))))
 :pattern ( ($generated@@81 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@215 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@136 (type $generated@@357))))
(let (($generated@@359 ($generated@@135 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@134 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@342 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@132 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@136 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@76 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@136 (type $generated@@364))))
(let (($generated@@366 ($generated@@135 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@134 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@342 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@168 (type $generated@@368))))
(let (($generated@@370 ($generated@@167 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@166 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@348 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@164 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@168 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@76 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@168 (type $generated@@375))))
(let (($generated@@377 ($generated@@167 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@166 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@348 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@81 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@380) $generated@@64)) (= ($generated@@196 $generated@@379 ($generated@@214 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@209) (< 0 ($generated ($generated@@81 $generated@@379 $generated@@381)))) ($generated@@276 $generated@@381 $generated@@380))
 :pattern ( ($generated@@81 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@196 $generated@@379 ($generated@@214 $generated@@380)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@383) $generated@@64)) (= (type $generated@@384) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@382 ($generated@@285 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@209) ($generated@@0 ($generated@@81 $generated@@382 $generated@@385))) ($generated@@311 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@81 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@74 $generated@@382 ($generated@@285 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@290 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@209) ($generated@@0 ($generated@@81 $generated@@386 $generated@@389))) ($generated@@311 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@81 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@290 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@81 ($generated@@337 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@81 ($generated@@337 $generated@@391) $generated@@390)))
)))
(assert (forall (($generated@@393 T@U) ) (! (= (type ($generated@@392 $generated@@393)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@395) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@392 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@394) ($generated@@207 ($generated@@302 $generated@@200 $generated@@395)))) (= ($generated@@81 ($generated@@155 $generated@@394) ($generated@@207 ($generated@@302 $generated@@200 $generated@@395))) ($generated@@208 ($generated@@302 $generated@@200 $generated@@395))))))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@76 $generated@@209 $generated@@4))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@399) $generated@@209)) (= ($generated@@0 ($generated@@81 ($generated@@396 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@81 ($generated@@164 $generated@@398) ($generated@@207 ($generated@@302 $generated@@200 $generated@@399)))) (= ($generated@@81 ($generated@@187 $generated@@398) ($generated@@207 ($generated@@302 $generated@@200 $generated@@399))) ($generated@@208 ($generated@@302 $generated@@200 $generated@@399))))))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@135 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@134 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@81 ($generated@@155 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@167 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@166 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@81 ($generated@@372 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@81 ($generated@@164 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@81 ($generated@@187 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@64)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@414) $generated@@64)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@413) $generated@@417))) (and ($generated@@311 ($generated@@81 ($generated@@155 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@311 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@413) $generated@@417))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@74 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@64)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@422) $generated@@64)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@421) $generated@@425))) (and ($generated@@311 ($generated@@81 ($generated@@187 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@311 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@421) $generated@@425))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@74 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@T) ) (! (= (type ($generated@@426 $generated@@427)) ($generated@@76 $generated@@427 $generated@@4))
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@168 (type $generated@@428))))
(let (($generated@@430 ($generated@@167 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@166 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@348 $generated@@430 $generated@@429)) (= ($generated@@164 $generated@@428) ($generated@@426 $generated@@430))))))
 :pattern ( ($generated@@164 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@168 (type $generated@@431))))
(let (($generated@@433 ($generated@@167 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@166 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@348 $generated@@433 $generated@@432)) (= ($generated@@372 $generated@@431) ($generated@@426 $generated@@432))))))
 :pattern ( ($generated@@372 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@168 (type $generated@@434))))
(let (($generated@@436 ($generated@@167 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@166 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@348 $generated@@436 $generated@@435)) (= ($generated@@396 $generated@@434) ($generated@@426 $generated@@209))))))
 :pattern ( ($generated@@396 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@136 (type $generated@@437))))
(let (($generated@@439 ($generated@@135 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@134 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@342 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@209) (= (type $generated@@441) $generated@@209)) ($generated@@0 ($generated@@81 ($generated@@392 $generated@@437) ($generated@@331 ($generated@@275 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@392 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@168 (type $generated@@442))))
(let (($generated@@444 ($generated@@167 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@166 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@348 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@209) (= (type $generated@@446) $generated@@209)) ($generated@@0 ($generated@@81 ($generated@@396 $generated@@442) ($generated@@331 ($generated@@275 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@396 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@209) ($generated@@276 $generated@@447 $generated@@46)) (and (= ($generated@@331 ($generated@@302 $generated@@2 $generated@@447)) $generated@@447) ($generated@@196 ($generated@@302 $generated@@2 $generated@@447) $generated@@46)))
 :pattern ( ($generated@@276 $generated@@447 $generated@@46))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@209) ($generated@@276 $generated@@448 $generated@@47)) (and (= ($generated@@331 ($generated@@302 $generated@@3 $generated@@448)) $generated@@448) ($generated@@196 ($generated@@302 $generated@@3 $generated@@448) $generated@@47)))
 :pattern ( ($generated@@276 $generated@@448 $generated@@47))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@209) ($generated@@276 $generated@@449 $generated@@44)) (and (= ($generated@@331 ($generated@@302 $generated@@4 $generated@@449)) $generated@@449) ($generated@@196 ($generated@@302 $generated@@4 $generated@@449) $generated@@44)))
 :pattern ( ($generated@@276 $generated@@449 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@450) 20))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@209) ($generated@@276 $generated@@451 $generated@@45)) (and (= ($generated@@331 ($generated@@302 $generated@@450 $generated@@451)) $generated@@451) ($generated@@196 ($generated@@302 $generated@@450 $generated@@451) $generated@@45)))
 :pattern ( ($generated@@276 $generated@@451 $generated@@45))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (= (type $generated@@453) $generated@@64) (= ($generated@@276 ($generated@@331 $generated@@452) $generated@@453) ($generated@@196 $generated@@452 $generated@@453)))
 :pattern ( ($generated@@276 ($generated@@331 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@79 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@76 $generated@@455 $generated@@2)) (<= 0 ($generated@@336 $generated@@454))))
 :pattern ( ($generated@@336 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@326 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@325 $generated@@457)) (<= 0 ($generated@@324 $generated@@456))))
 :pattern ( ($generated@@324 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@410 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@410 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@410 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@410 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@72 ($generated@@410 $generated@@466 $generated@@467)) $generated@@58))
 :pattern ( ($generated@@410 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@418 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@418 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@418 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@418 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@72 ($generated@@418 $generated@@476 $generated@@477)) $generated@@59))
 :pattern ( ($generated@@418 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@209) (= (type $generated@@479) $generated@@209)) (= ($generated@@317 ($generated@@275 $generated@@478 $generated@@479)) $generated@@61))
 :pattern ( ($generated@@275 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@480 ($generated@@199 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@199 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@199 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@199 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@209) (= (type $generated@@489) $generated@@209)) (= ($generated@@207 ($generated@@275 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@275 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@209) (= (type $generated@@491) $generated@@209)) (= ($generated@@208 ($generated@@275 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@275 $generated@@490 $generated@@491))
)))
(assert  (and (forall (($generated@@494 T@U) ) (! (= (type ($generated@@492 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@494))
)) (forall (($generated@@495 T@U) ($generated@@496 Int) ) (! (let (($generated@@497 ($generated@@326 (type $generated@@495))))
(= (type ($generated@@493 $generated@@495 $generated@@496)) $generated@@497))
 :pattern ( ($generated@@493 $generated@@495 $generated@@496))
))))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@325 $generated@@209)) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@498 ($generated@@492 $generated@@499) $generated@@500) (forall (($generated@@501 Int) ) (!  (=> (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@324 $generated@@498))) ($generated@@311 ($generated@@493 $generated@@498 $generated@@501) $generated@@499 $generated@@500))
 :pattern ( ($generated@@493 $generated@@498 $generated@@501))
))))
 :pattern ( ($generated@@74 $generated@@498 ($generated@@492 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@502 ($generated@@75 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@75 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@285 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@285 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@285 $generated@@507)) $generated@@54))
 :pattern ( ($generated@@285 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@290 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@290 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@290 $generated@@511)) $generated@@55))
 :pattern ( ($generated@@290 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@512 ($generated@@214 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@214 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@72 ($generated@@214 $generated@@515)) $generated@@56))
 :pattern ( ($generated@@214 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@64)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@516 ($generated@@492 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@492 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@72 ($generated@@492 $generated@@519)) $generated@@57))
 :pattern ( ($generated@@492 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
(= ($generated@@302 $generated@@521 ($generated@@331 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@331 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) (= ($generated@@196 $generated@@522 ($generated@@410 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@522) $generated@@525))) (and ($generated@@276 ($generated@@81 ($generated@@155 $generated@@522) $generated@@525) $generated@@524) ($generated@@276 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@522) $generated@@525))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@196 $generated@@522 ($generated@@410 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) (= ($generated@@196 $generated@@526 ($generated@@418 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@209) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@526) $generated@@529))) (and ($generated@@276 ($generated@@81 ($generated@@187 $generated@@526) $generated@@529) $generated@@528) ($generated@@276 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@526) $generated@@529))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@196 $generated@@526 ($generated@@418 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@209) (= (type $generated@@533) $generated@@209)) (< ($generated@@530 $generated@@532) ($generated@@531 ($generated@@275 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@275 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@209) (= (type $generated@@535) $generated@@209)) (< ($generated@@530 $generated@@535) ($generated@@531 ($generated@@275 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@275 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@209) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@64)) ($generated@@276 $generated@@536 ($generated@@410 $generated@@537 $generated@@538))) (and (= ($generated@@331 ($generated@@302 ($generated@@134 $generated@@209 $generated@@209) $generated@@536)) $generated@@536) ($generated@@196 ($generated@@302 ($generated@@134 $generated@@209 $generated@@209) $generated@@536) ($generated@@410 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@276 $generated@@536 ($generated@@410 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@209) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@64)) ($generated@@276 $generated@@539 ($generated@@418 $generated@@540 $generated@@541))) (and (= ($generated@@331 ($generated@@302 ($generated@@166 $generated@@209 $generated@@209) $generated@@539)) $generated@@539) ($generated@@196 ($generated@@302 ($generated@@166 $generated@@209 $generated@@209) $generated@@539) ($generated@@418 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@276 $generated@@539 ($generated@@418 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@209)) ($generated@@276 $generated@@544 ($generated@@199 $generated@@542 $generated@@543))) (and (= ($generated@@331 ($generated@@302 $generated@@200 $generated@@544)) $generated@@544) ($generated@@196 ($generated@@302 $generated@@200 $generated@@544) ($generated@@199 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@276 $generated@@544 ($generated@@199 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (not ($generated@@0 ($generated@@81 ($generated@@426 $generated@@546) $generated@@545))))
 :pattern ( (let (($generated@@546 (type $generated@@545)))
($generated@@81 ($generated@@426 $generated@@546) $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@547) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@548) ($generated@@76 $generated@@209 $generated@@209))) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) $generated@@64)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@209) ($generated@@0 ($generated@@81 $generated@@547 $generated@@551))) (and ($generated@@276 $generated@@551 $generated@@549) ($generated@@276 ($generated@@81 $generated@@548 $generated@@551) $generated@@550)))
 :no-pattern (type $generated@@551)
 :no-pattern ($generated $generated@@551)
 :no-pattern ($generated@@0 $generated@@551)
))) ($generated@@196 ($generated@@133 $generated@@547 $generated@@548 ($generated@@410 $generated@@549 $generated@@550)) ($generated@@410 $generated@@549 $generated@@550)))
 :pattern ( ($generated@@133 $generated@@547 $generated@@548 ($generated@@410 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@552) ($generated@@76 $generated@@209 $generated@@4)) (= (type $generated@@553) ($generated@@76 $generated@@209 $generated@@209))) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) $generated@@64)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@209) ($generated@@0 ($generated@@81 $generated@@552 $generated@@556))) (and ($generated@@276 $generated@@556 $generated@@554) ($generated@@276 ($generated@@81 $generated@@553 $generated@@556) $generated@@555)))
 :no-pattern (type $generated@@556)
 :no-pattern ($generated $generated@@556)
 :no-pattern ($generated@@0 $generated@@556)
))) ($generated@@196 ($generated@@133 $generated@@552 $generated@@553 ($generated@@418 $generated@@554 $generated@@555)) ($generated@@418 $generated@@554 $generated@@555)))
 :pattern ( ($generated@@165 $generated@@552 $generated@@553 ($generated@@418 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@69)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@64) (= (type $generated@@560) $generated@@64)) (and (= ($generated@@72 ($generated@@199 $generated@@559 $generated@@560)) $generated@@62) (= ($generated@@557 ($generated@@199 $generated@@559 $generated@@560)) $generated@@63)))
 :pattern ( ($generated@@199 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 Int) ($generated@@563 Int) ) (! (= ($generated@@561 $generated@@562 $generated@@563) (* $generated@@562 $generated@@563))
 :pattern ( ($generated@@561 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@200) (= ($generated@@530 ($generated@@331 $generated@@564)) ($generated@@531 $generated@@564)))
 :pattern ( ($generated@@530 ($generated@@331 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@209) ($generated@@276 $generated@@565 ($generated@@75 0))) (and (= ($generated@@331 ($generated@@302 $generated@@2 $generated@@565)) $generated@@565) ($generated@@196 ($generated@@302 ($generated@@76 $generated@@209 $generated@@4) $generated@@565) ($generated@@75 0))))
 :pattern ( ($generated@@276 $generated@@565 ($generated@@75 0)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@209) (= (type $generated@@567) $generated@@64)) ($generated@@276 $generated@@566 ($generated@@285 $generated@@567))) (and (= ($generated@@331 ($generated@@302 ($generated@@76 $generated@@209 $generated@@4) $generated@@566)) $generated@@566) ($generated@@196 ($generated@@302 ($generated@@76 $generated@@209 $generated@@4) $generated@@566) ($generated@@285 $generated@@567))))
 :pattern ( ($generated@@276 $generated@@566 ($generated@@285 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@209) (= (type $generated@@569) $generated@@64)) ($generated@@276 $generated@@568 ($generated@@290 $generated@@569))) (and (= ($generated@@331 ($generated@@302 ($generated@@76 $generated@@209 $generated@@4) $generated@@568)) $generated@@568) ($generated@@196 ($generated@@302 ($generated@@76 $generated@@209 $generated@@4) $generated@@568) ($generated@@290 $generated@@569))))
 :pattern ( ($generated@@276 $generated@@568 ($generated@@290 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@209) (= (type $generated@@571) $generated@@64)) ($generated@@276 $generated@@570 ($generated@@214 $generated@@571))) (and (= ($generated@@331 ($generated@@302 ($generated@@76 $generated@@209 $generated@@2) $generated@@570)) $generated@@570) ($generated@@196 ($generated@@302 ($generated@@76 $generated@@209 $generated@@2) $generated@@570) ($generated@@214 $generated@@571))))
 :pattern ( ($generated@@276 $generated@@570 ($generated@@214 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@209) (= (type $generated@@573) $generated@@64)) ($generated@@276 $generated@@572 ($generated@@492 $generated@@573))) (and (= ($generated@@331 ($generated@@302 ($generated@@325 $generated@@209) $generated@@572)) $generated@@572) ($generated@@196 ($generated@@302 ($generated@@325 $generated@@209) $generated@@572) ($generated@@492 $generated@@573))))
 :pattern ( ($generated@@276 $generated@@572 ($generated@@492 $generated@@573)))
)))
(assert (forall (($generated@@575 Int) ) (! (= (type ($generated@@574 $generated@@575)) ($generated@@76 $generated@@209 $generated@@209))
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 Int) ($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@209) (= ($generated@@81 ($generated@@574 $generated@@576) $generated@@577) ($generated@@331 ($generated@@8 ($generated@@561 $generated@@576 ($generated ($generated@@302 $generated@@2 $generated@@577)))))))
 :pattern ( ($generated@@81 ($generated@@574 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@76 $generated@@209 $generated@@2)) (= (type $generated@@579) $generated@@64)) (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@578 ($generated@@214 $generated@@579) $generated@@580) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@209) (< 0 ($generated ($generated@@81 $generated@@578 $generated@@581)))) ($generated@@311 $generated@@581 $generated@@579 $generated@@580))
 :pattern ( ($generated@@81 $generated@@578 $generated@@581))
))))
 :pattern ( ($generated@@74 $generated@@578 ($generated@@214 $generated@@579) $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@200) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@310 $generated@@584) (and ($generated@@198 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@64) ($generated@@74 $generated@@582 ($generated@@199 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@74 $generated@@582 ($generated@@199 $generated@@583 $generated@@585) $generated@@584))
))))) ($generated@@311 ($generated@@207 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@311 ($generated@@207 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@200) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@310 $generated@@588) (and ($generated@@198 $generated@@586) (exists (($generated@@589 T@U) ) (!  (and (= (type $generated@@589) $generated@@64) ($generated@@74 $generated@@586 ($generated@@199 $generated@@589 $generated@@587) $generated@@588))
 :pattern ( ($generated@@74 $generated@@586 ($generated@@199 $generated@@589 $generated@@587) $generated@@588))
))))) ($generated@@311 ($generated@@208 $generated@@586) $generated@@587 $generated@@588))
 :pattern ( ($generated@@311 ($generated@@208 $generated@@586) $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@209) (= (type $generated@@591) $generated@@209)) (= ($generated@@275 ($generated@@297 $generated@@590) ($generated@@297 $generated@@591)) ($generated@@297 ($generated@@275 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@275 ($generated@@297 $generated@@590) ($generated@@297 $generated@@591)))
)))
(assert (forall (($generated@@592 Int) ) (! (= ($generated@@331 ($generated@@8 ($generated@@295 $generated@@592))) ($generated@@297 ($generated@@331 ($generated@@8 $generated@@592))))
 :pattern ( ($generated@@331 ($generated@@8 ($generated@@295 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ) (! (= ($generated@@331 ($generated@@297 $generated@@593)) ($generated@@297 ($generated@@331 $generated@@593)))
 :pattern ( ($generated@@331 ($generated@@297 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@326 (type $generated@@594))))
 (=> (and (= (type $generated@@594) ($generated@@325 $generated@@595)) (= ($generated@@324 $generated@@594) 0)) (= $generated@@594 ($generated@@323 $generated@@595))))
 :pattern ( ($generated@@324 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@597)))
 (=> (and (and (= (type $generated@@596) ($generated@@76 $generated@@599 $generated@@2)) (= (type $generated@@598) $generated@@2)) (<= 0 ($generated $generated@@598))) (= ($generated@@336 ($generated@@82 $generated@@596 $generated@@597 $generated@@598)) (+ (- ($generated@@336 $generated@@596) ($generated ($generated@@81 $generated@@596 $generated@@597))) ($generated $generated@@598)))))
 :pattern ( ($generated@@336 ($generated@@82 $generated@@596 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@601) $generated@@2)) ($generated@@74 $generated@@601 $generated@@46 $generated@@600))
 :pattern ( ($generated@@74 $generated@@601 $generated@@46 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@603) $generated@@3)) ($generated@@74 $generated@@603 $generated@@47 $generated@@602))
 :pattern ( ($generated@@74 $generated@@603 $generated@@47 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@605) $generated@@4)) ($generated@@74 $generated@@605 $generated@@44 $generated@@604))
 :pattern ( ($generated@@74 $generated@@605 $generated@@44 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@607) $generated@@450)) ($generated@@74 $generated@@607 $generated@@45 $generated@@606))
 :pattern ( ($generated@@74 $generated@@607 $generated@@45 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@609) $generated@@209)) ($generated@@74 $generated@@609 $generated@@48 $generated@@608))
 :pattern ( ($generated@@74 $generated@@609 $generated@@48 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@325 $generated@@209)) (= (type $generated@@611) $generated@@64)) (= ($generated@@196 $generated@@610 ($generated@@492 $generated@@611)) (forall (($generated@@612 Int) ) (!  (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@324 $generated@@610))) ($generated@@276 ($generated@@493 $generated@@610 $generated@@612) $generated@@611))
 :pattern ( ($generated@@493 $generated@@610 $generated@@612))
))))
 :pattern ( ($generated@@196 $generated@@610 ($generated@@492 $generated@@611)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 Int) ) (!  (=> (= (type $generated@@614) ($generated@@325 $generated@@209)) (=> (and (<= 0 $generated@@615) (< $generated@@615 ($generated@@324 $generated@@614))) (< ($generated@@531 ($generated@@302 $generated@@200 ($generated@@493 $generated@@614 $generated@@615))) ($generated@@613 $generated@@614))))
 :pattern ( ($generated@@531 ($generated@@302 $generated@@200 ($generated@@493 $generated@@614 $generated@@615))))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) ($generated@@134 $generated@@209 $generated@@209)) (= (type $generated@@617) $generated@@64)) (= (type $generated@@618) $generated@@64)) ($generated@@196 $generated@@616 ($generated@@410 $generated@@617 $generated@@618))) (and (and ($generated@@196 ($generated@@132 $generated@@616) ($generated@@285 $generated@@617)) ($generated@@196 ($generated@@361 $generated@@616) ($generated@@285 $generated@@618))) ($generated@@196 ($generated@@392 $generated@@616) ($generated@@285 ($generated@@199 $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@196 $generated@@616 ($generated@@410 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@620) $generated@@64)) (= (type $generated@@621) $generated@@64)) ($generated@@196 $generated@@619 ($generated@@418 $generated@@620 $generated@@621))) (and (and ($generated@@196 ($generated@@164 $generated@@619) ($generated@@290 $generated@@620)) ($generated@@196 ($generated@@372 $generated@@619) ($generated@@290 $generated@@621))) ($generated@@196 ($generated@@396 $generated@@619) ($generated@@290 ($generated@@199 $generated@@620 $generated@@621)))))
 :pattern ( ($generated@@196 $generated@@619 ($generated@@418 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@2) ($generated@@196 $generated@@622 $generated@@46))
 :pattern ( ($generated@@196 $generated@@622 $generated@@46))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@3) ($generated@@196 $generated@@623 $generated@@47))
 :pattern ( ($generated@@196 $generated@@623 $generated@@47))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@4) ($generated@@196 $generated@@624 $generated@@44))
 :pattern ( ($generated@@196 $generated@@624 $generated@@44))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@450) ($generated@@196 $generated@@625 $generated@@45))
 :pattern ( ($generated@@196 $generated@@625 $generated@@45))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@209) ($generated@@196 $generated@@626 $generated@@48))
 :pattern ( ($generated@@196 $generated@@626 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 (T@U) Bool)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () Int)
(assert  (and (and (and (and (= (type $generated@@627) ($generated@@166 $generated@@209 $generated@@209)) (= (type $generated@@630) ($generated@@221 $generated@@77 $generated@@4))) (= (type $generated@@631) $generated@@77)) (= (type $generated@@632) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@634) ($generated@@166 $generated@@209 $generated@@209))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@636  (=> (= (ControlFlow 0 4) (- 0 3)) (forall (($generated@@637 Int) ) (!  (=> true (=> (> $generated@@637 200) (= ($generated ($generated@@302 $generated@@2 ($generated@@81 ($generated@@187 $generated@@627) ($generated@@331 ($generated@@8 $generated@@637))))) ($generated@@561 ($generated@@295 2) $generated@@637))))
 :pattern ( ($generated@@302 $generated@@2 ($generated@@81 ($generated@@187 $generated@@627) ($generated@@331 ($generated@@8 $generated@@637)))))
)))))
(let (($generated@@638  (=> (and (>= 200 $generated@@628) (= (ControlFlow 0 7) 4)) $generated@@636)))
(let (($generated@@639  (=> (> $generated@@628 200) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@627) ($generated@@331 ($generated@@8 $generated@@628))))) (=> (= (ControlFlow 0 5) 4) $generated@@636)))))
(let (($generated@@640  (and (=> (= (ControlFlow 0 8) 5) $generated@@639) (=> (= (ControlFlow 0 8) 7) $generated@@638))))
(let (($generated@@641 true))
(let (($generated@@642  (=> (= $generated@@627 ($generated@@165 ($generated@@301 $generated@@46 100) ($generated@@574 ($generated@@295 2)) ($generated@@418 $generated@@46 $generated@@46))) (and (=> (= (ControlFlow 0 9) (- 0 13)) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@627) ($generated@@331 ($generated@@8 101))))) (=> ($generated@@0 ($generated@@81 ($generated@@164 $generated@@627) ($generated@@331 ($generated@@8 101)))) (and (=> (= (ControlFlow 0 9) (- 0 12)) (not ($generated@@0 ($generated@@81 ($generated@@164 $generated@@627) ($generated@@331 ($generated@@8 99)))))) (=> (not ($generated@@0 ($generated@@81 ($generated@@164 $generated@@627) ($generated@@331 ($generated@@8 99))))) (and (=> (= (ControlFlow 0 9) (- 0 11)) ($generated@@0 ($generated@@81 ($generated@@164 $generated@@627) ($generated@@331 ($generated@@8 ($generated@@295 101)))))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (= ($generated ($generated@@302 $generated@@2 ($generated@@81 ($generated@@187 $generated@@627) ($generated@@331 ($generated@@8 ($generated@@295 101)))))) ($generated@@295 202))) (=> (= ($generated ($generated@@302 $generated@@2 ($generated@@81 ($generated@@187 $generated@@627) ($generated@@331 ($generated@@8 ($generated@@295 101)))))) ($generated@@295 202)) (and (=> (= (ControlFlow 0 9) 8) $generated@@640) (=> (= (ControlFlow 0 9) 2) $generated@@641))))))))))))
(let (($generated@@643  (=> (and (>= 100 $generated@@629) (= (ControlFlow 0 15) 9)) $generated@@642)))
(let (($generated@@644  (=> (and (> $generated@@629 100) (= (ControlFlow 0 14) 9)) $generated@@642)))
(let (($generated@@645  (and (=> (= (ControlFlow 0 16) 14) $generated@@644) (=> (= (ControlFlow 0 16) 15) $generated@@643))))
(let (($generated@@646 true))
(let (($generated@@647  (=> (= $generated@@630 ($generated@@220 $generated@@631 $generated@@632 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) 16) $generated@@645) (=> (= (ControlFlow 0 17) 1) $generated@@646)))))
(let (($generated@@648  (=> (and ($generated@@310 $generated@@632) ($generated@@633 $generated@@632)) (=> (and (and (and ($generated@@196 $generated@@634 ($generated@@418 $generated@@46 $generated@@46)) ($generated@@74 $generated@@634 ($generated@@418 $generated@@46 $generated@@46) $generated@@632)) true) (and (= 0 $generated@@635) (= (ControlFlow 0 18) 17))) $generated@@647))))
$generated@@648)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
