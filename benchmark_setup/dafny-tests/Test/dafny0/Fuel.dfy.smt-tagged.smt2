(set-logic UFNIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int) Int)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@134 $generated@@139)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@139))
))) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@138 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@138 $generated@@140))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@142 T@U) ($generated@@143 Int) ) (!  (=> (and (= (type $generated@@142) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@143)) (not (= 0 $generated@@132)))) (and (=> (not ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@143 0))))) ($generated@@137 ($generated@@135 (- $generated@@143 1)))) (= ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)) (ite (< $generated@@143 0) 0 (+ 1 ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 (- $generated@@143 1))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)))
))))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@75 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@64)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 17)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@67 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@77) (= (type $generated@@229) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@230) ($generated@@66 $generated@@4))) (= (type $generated@@232) $generated@@77)) (= (type $generated@@233) ($generated@@66 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@148)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@157)) (= (type $generated@@242) $generated@@157)) (= ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@148) (= (type $generated@@244) $generated@@148)) (= ($generated@@154 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@154 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) ($generated@@0 ($generated@@81 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@81 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@253) $generated@@64)) (= ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@157) ($generated@@0 ($generated@@81 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@81 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@135 $generated@@255) $generated@@255)
 :pattern ( ($generated@@135 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@138 $generated@@256) $generated@@256)
 :pattern ( ($generated@@138 $generated@@256))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@136) (or ($generated@@137 $generated@@258) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@133 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@157)) (= (type $generated@@264) $generated@@157)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@148) (= ($generated@@146 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@148) ($generated@@146 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@157) (= (type $generated@@271) $generated@@157)) (= $generated@@269 ($generated@@235 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@146 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 18)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@157)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@74 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@76 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@79 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@76 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@81 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 19)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 20)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@76 $generated@@328 $generated@@2)) (= ($generated@@163 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@81 $generated@@327 $generated@@329))) (<= ($generated ($generated@@81 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@163 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@295 (type $generated@@330))))
(let (($generated@@332 ($generated@@294 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@293 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@292 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@291 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@295 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@295 (type $generated@@337))))
(let (($generated@@339 ($generated@@294 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@293 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@292 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@313 (type $generated@@341))))
(let (($generated@@343 ($generated@@312 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@311 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@310 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@309 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@313 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@313 (type $generated@@348))))
(let (($generated@@350 ($generated@@312 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@311 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@310 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@353) $generated@@64)) (= ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@352 $generated@@354)))) ($generated@@236 $generated@@354 $generated@@353))
 :pattern ( ($generated@@81 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@157) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@260 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@157) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@260 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@81 ($generated@@286 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@81 ($generated@@286 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@295 (type $generated@@371))))
(let (($generated@@373 ($generated@@294 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@375) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375)))) (= ($generated@@81 ($generated@@367 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@313 (type $generated@@379))))
(let (($generated@@381 ($generated@@312 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@383) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383)))) (= ($generated@@81 ($generated@@377 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@294 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@293 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@312 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@311 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))) (and ($generated@@260 ($generated@@81 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@260 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@64)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))) (and ($generated@@260 ($generated@@81 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@260 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@313 (type $generated@@412))))
(let (($generated@@414 ($generated@@312 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@311 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@310 $generated@@414 $generated@@413)) (= ($generated@@309 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@309 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@313 (type $generated@@415))))
(let (($generated@@417 ($generated@@312 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@311 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@310 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@313 (type $generated@@418))))
(let (($generated@@420 ($generated@@312 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@311 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@310 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@157))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@295 (type $generated@@421))))
(let (($generated@@423 ($generated@@294 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@293 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@292 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@157) (= (type $generated@@425) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@421) ($generated@@280 ($generated@@235 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@313 (type $generated@@426))))
(let (($generated@@428 ($generated@@312 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@311 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@310 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@157) (= (type $generated@@430) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@426) ($generated@@280 ($generated@@235 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@157) ($generated@@236 $generated@@431 $generated@@46)) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@144 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@157) ($generated@@236 $generated@@432 $generated@@47)) (and (= ($generated@@280 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@144 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@157) ($generated@@236 $generated@@433 $generated@@44)) (and (= ($generated@@280 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@144 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 21))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@236 $generated@@435 $generated@@45)) (and (= ($generated@@280 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@144 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@236 ($generated@@280 $generated@@436) $generated@@437) ($generated@@144 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@236 ($generated@@280 $generated@@436) $generated@@437))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (= (type $generated@@438) $generated@@136) (or ($generated@@137 $generated@@439) (not (= 0 $generated@@132)))) (and (=> (<= 0 $generated@@439) ($generated@@137 (- $generated@@439 1))) (= ($generated@@133 ($generated@@134 $generated@@438) $generated@@439) (ite (< $generated@@439 0) 0 (+ 1 ($generated@@133 $generated@@438 (- $generated@@439 1)))))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@438) $generated@@439))
))))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@79 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@76 $generated@@441 $generated@@2)) (<= 0 ($generated@@285 $generated@@440))))
 :pattern ( ($generated@@285 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@275 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@274 $generated@@443)) (<= 0 ($generated@@273 $generated@@442))))
 :pattern ( ($generated@@273 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@394 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@394 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@394 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@402 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@72 ($generated@@402 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@157) (= (type $generated@@465) $generated@@157)) (= ($generated@@266 ($generated@@235 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@147 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@147 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@147 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@147 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) (= (type $generated@@475) $generated@@157)) (= ($generated@@155 ($generated@@235 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@235 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@157) (= (type $generated@@477) $generated@@157)) (= ($generated@@156 ($generated@@235 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@235 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@136)
 :pattern ( ($generated@@478 $generated@@480))
)) (= (type $generated@@479) $generated@@136)))
(assert (forall (($generated@@481 T@U) ($generated@@482 Int) ) (!  (=> (= (type $generated@@481) $generated@@136) (= ($generated@@133 $generated@@481 $generated@@482) ($generated@@133 $generated@@479 $generated@@482)))
 :pattern ( ($generated@@133 ($generated@@478 $generated@@481) $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@275 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@274 $generated@@157)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@273 $generated@@489))) ($generated@@260 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@245 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@245 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@250 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@250 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@250 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@162 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@162 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@162 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@366 $generated@@512 ($generated@@280 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@280 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))) (and ($generated@@236 ($generated@@81 ($generated@@367 $generated@@513) $generated@@516) $generated@@515) ($generated@@236 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))) (and ($generated@@236 ($generated@@81 ($generated@@377 $generated@@517) $generated@@520) $generated@@519) ($generated@@236 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@157) (= (type $generated@@524) $generated@@157)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@235 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@235 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@157) (= (type $generated@@526) $generated@@157)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@235 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@235 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 Int) ) (!  (=> (= (type $generated@@527) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@527) $generated@@528) ($generated@@133 $generated@@527 $generated@@528)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@157) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529)) $generated@@529) ($generated@@144 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529) ($generated@@394 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@157) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534))) (and (= ($generated@@280 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532)) $generated@@532) ($generated@@144 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532) ($generated@@402 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@157)) ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536))) (and (= ($generated@@280 ($generated@@366 $generated@@148 $generated@@537)) $generated@@537) ($generated@@144 ($generated@@366 $generated@@148 $generated@@537) ($generated@@147 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@410 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@147 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@148) (= ($generated@@521 ($generated@@280 $generated@@544)) ($generated@@522 $generated@@544)))
 :pattern ( ($generated@@521 ($generated@@280 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) ($generated@@236 $generated@@545 ($generated@@75 0))) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@545)) $generated@@545) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@236 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@157) (= (type $generated@@547) $generated@@64)) ($generated@@236 $generated@@546 ($generated@@245 $generated@@547))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546)) $generated@@546) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546) ($generated@@245 $generated@@547))))
 :pattern ( ($generated@@236 $generated@@546 ($generated@@245 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@157) (= (type $generated@@549) $generated@@64)) ($generated@@236 $generated@@548 ($generated@@250 $generated@@549))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548)) $generated@@548) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548) ($generated@@250 $generated@@549))))
 :pattern ( ($generated@@236 $generated@@548 ($generated@@250 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@157) (= (type $generated@@551) $generated@@64)) ($generated@@236 $generated@@550 ($generated@@162 $generated@@551))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550)) $generated@@550) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550) ($generated@@162 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@162 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@157) (= (type $generated@@553) $generated@@64)) ($generated@@236 $generated@@552 ($generated@@483 $generated@@553))) (and (= ($generated@@280 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552)) $generated@@552) ($generated@@144 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552) ($generated@@483 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 ($generated@@483 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@260 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@148) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@560) (and ($generated@@146 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@148) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@564) (and ($generated@@146 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@157) (= (type $generated@@567) $generated@@157)) (= ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)) ($generated@@138 ($generated@@235 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))) ($generated@@138 ($generated@@280 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@280 ($generated@@138 $generated@@569)) ($generated@@138 ($generated@@280 $generated@@569)))
 :pattern ( ($generated@@280 ($generated@@138 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@275 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@274 $generated@@571)) (= ($generated@@273 $generated@@570) 0)) (= $generated@@570 ($generated@@272 $generated@@571))))
 :pattern ( ($generated@@273 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@285 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@434)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@157)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@274 $generated@@157)) (= (type $generated@@587) $generated@@64)) (= ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@273 $generated@@586))) ($generated@@236 ($generated@@484 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@484 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@274 $generated@@157)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@273 $generated@@590))) (< ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594))) (and (and ($generated@@144 ($generated@@291 $generated@@592) ($generated@@245 $generated@@593)) ($generated@@144 ($generated@@334 $generated@@592) ($generated@@245 $generated@@594))) ($generated@@144 ($generated@@365 $generated@@592) ($generated@@245 ($generated@@147 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597))) (and (and ($generated@@144 ($generated@@309 $generated@@595) ($generated@@250 $generated@@596)) ($generated@@144 ($generated@@345 $generated@@595) ($generated@@250 $generated@@597))) ($generated@@144 ($generated@@376 $generated@@595) ($generated@@250 ($generated@@147 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@144 $generated@@598 $generated@@46))
 :pattern ( ($generated@@144 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@144 $generated@@599 $generated@@47))
 :pattern ( ($generated@@144 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@144 $generated@@600 $generated@@44))
 :pattern ( ($generated@@144 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@434) ($generated@@144 $generated@@601 $generated@@45))
 :pattern ( ($generated@@144 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@157) ($generated@@144 $generated@@602 $generated@@48))
 :pattern ( ($generated@@144 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@607) $generated@@77)) (= (type $generated@@608) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@136)) (= (type $generated@@610) $generated@@136)) (= (type $generated@@611) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@613  (=> (<= 0 $generated@@603) (=> (and (= $generated@@604 (- $generated@@603 1)) ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@605)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603))) (=> (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@604 $generated@@603))))))))
(let (($generated@@614 true))
(let (($generated@@615  (=> (= $generated@@606 ($generated@@223 $generated@@607 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@614) (=> (= (ControlFlow 0 6) 4) $generated@@613)))))
(let (($generated@@616 true))
(let (($generated@@617  (=> (and (and (= $generated@@608 ($generated@@168 $generated@@607 $generated@@605 $generated@@60 false)) (= $generated@@609 ($generated@@134 $generated@@610))) (and (= $generated@@611 ($generated@@134 ($generated@@134 $generated@@610))) (= ($generated@@478 $generated@@610) $generated@@610))) (and (=> (= (ControlFlow 0 7) 1) $generated@@616) (=> (= (ControlFlow 0 7) 6) $generated@@615)))))
(let (($generated@@618  (=> (and (and ($generated@@259 $generated@@605) ($generated@@612 $generated@@605)) (and (= 0 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@617)))
$generated@@618)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int) Int)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@134 $generated@@139)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@139))
))) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@138 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@138 $generated@@140))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@142 T@U) ($generated@@143 Int) ) (!  (=> (and (= (type $generated@@142) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@143)) (not (= 0 $generated@@132)))) (and (=> (not ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@143 0))))) ($generated@@137 ($generated@@135 (- $generated@@143 1)))) (= ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)) (ite (< $generated@@143 0) 0 (+ 1 ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 (- $generated@@143 1))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)))
))))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@75 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@64)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 17)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@67 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@77) (= (type $generated@@229) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@230) ($generated@@66 $generated@@4))) (= (type $generated@@232) $generated@@77)) (= (type $generated@@233) ($generated@@66 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@148)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@157)) (= (type $generated@@242) $generated@@157)) (= ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@148) (= (type $generated@@244) $generated@@148)) (= ($generated@@154 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@154 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) ($generated@@0 ($generated@@81 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@81 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@253) $generated@@64)) (= ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@157) ($generated@@0 ($generated@@81 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@81 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@135 $generated@@255) $generated@@255)
 :pattern ( ($generated@@135 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@138 $generated@@256) $generated@@256)
 :pattern ( ($generated@@138 $generated@@256))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@136) (or ($generated@@137 $generated@@258) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@133 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@157)) (= (type $generated@@264) $generated@@157)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@148) (= ($generated@@146 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@148) ($generated@@146 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@157) (= (type $generated@@271) $generated@@157)) (= $generated@@269 ($generated@@235 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@146 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 18)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@157)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@74 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@76 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@79 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@76 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@81 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 19)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 20)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@76 $generated@@328 $generated@@2)) (= ($generated@@163 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@81 $generated@@327 $generated@@329))) (<= ($generated ($generated@@81 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@163 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@295 (type $generated@@330))))
(let (($generated@@332 ($generated@@294 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@293 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@292 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@291 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@295 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@295 (type $generated@@337))))
(let (($generated@@339 ($generated@@294 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@293 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@292 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@313 (type $generated@@341))))
(let (($generated@@343 ($generated@@312 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@311 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@310 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@309 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@313 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@313 (type $generated@@348))))
(let (($generated@@350 ($generated@@312 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@311 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@310 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@353) $generated@@64)) (= ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@352 $generated@@354)))) ($generated@@236 $generated@@354 $generated@@353))
 :pattern ( ($generated@@81 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@157) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@260 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@157) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@260 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@81 ($generated@@286 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@81 ($generated@@286 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@295 (type $generated@@371))))
(let (($generated@@373 ($generated@@294 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@375) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375)))) (= ($generated@@81 ($generated@@367 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@313 (type $generated@@379))))
(let (($generated@@381 ($generated@@312 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@383) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383)))) (= ($generated@@81 ($generated@@377 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@294 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@293 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@312 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@311 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))) (and ($generated@@260 ($generated@@81 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@260 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@64)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))) (and ($generated@@260 ($generated@@81 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@260 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@313 (type $generated@@412))))
(let (($generated@@414 ($generated@@312 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@311 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@310 $generated@@414 $generated@@413)) (= ($generated@@309 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@309 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@313 (type $generated@@415))))
(let (($generated@@417 ($generated@@312 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@311 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@310 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@313 (type $generated@@418))))
(let (($generated@@420 ($generated@@312 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@311 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@310 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@157))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@295 (type $generated@@421))))
(let (($generated@@423 ($generated@@294 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@293 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@292 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@157) (= (type $generated@@425) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@421) ($generated@@280 ($generated@@235 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@313 (type $generated@@426))))
(let (($generated@@428 ($generated@@312 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@311 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@310 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@157) (= (type $generated@@430) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@426) ($generated@@280 ($generated@@235 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@157) ($generated@@236 $generated@@431 $generated@@46)) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@144 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@157) ($generated@@236 $generated@@432 $generated@@47)) (and (= ($generated@@280 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@144 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@157) ($generated@@236 $generated@@433 $generated@@44)) (and (= ($generated@@280 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@144 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 21))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@236 $generated@@435 $generated@@45)) (and (= ($generated@@280 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@144 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@236 ($generated@@280 $generated@@436) $generated@@437) ($generated@@144 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@236 ($generated@@280 $generated@@436) $generated@@437))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (= (type $generated@@438) $generated@@136) (or ($generated@@137 $generated@@439) (not (= 0 $generated@@132)))) (and (=> (<= 0 $generated@@439) ($generated@@137 (- $generated@@439 1))) (= ($generated@@133 ($generated@@134 $generated@@438) $generated@@439) (ite (< $generated@@439 0) 0 (+ 1 ($generated@@133 $generated@@438 (- $generated@@439 1)))))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@438) $generated@@439))
))))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@79 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@76 $generated@@441 $generated@@2)) (<= 0 ($generated@@285 $generated@@440))))
 :pattern ( ($generated@@285 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@275 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@274 $generated@@443)) (<= 0 ($generated@@273 $generated@@442))))
 :pattern ( ($generated@@273 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@394 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@394 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@394 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@402 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@72 ($generated@@402 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@157) (= (type $generated@@465) $generated@@157)) (= ($generated@@266 ($generated@@235 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@147 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@147 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@147 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@147 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) (= (type $generated@@475) $generated@@157)) (= ($generated@@155 ($generated@@235 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@235 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@157) (= (type $generated@@477) $generated@@157)) (= ($generated@@156 ($generated@@235 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@235 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@136)
 :pattern ( ($generated@@478 $generated@@480))
)) (= (type $generated@@479) $generated@@136)))
(assert (forall (($generated@@481 T@U) ($generated@@482 Int) ) (!  (=> (= (type $generated@@481) $generated@@136) (= ($generated@@133 $generated@@481 $generated@@482) ($generated@@133 $generated@@479 $generated@@482)))
 :pattern ( ($generated@@133 ($generated@@478 $generated@@481) $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@275 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@274 $generated@@157)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@273 $generated@@489))) ($generated@@260 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@245 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@245 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@250 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@250 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@250 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@162 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@162 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@162 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@366 $generated@@512 ($generated@@280 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@280 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))) (and ($generated@@236 ($generated@@81 ($generated@@367 $generated@@513) $generated@@516) $generated@@515) ($generated@@236 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))) (and ($generated@@236 ($generated@@81 ($generated@@377 $generated@@517) $generated@@520) $generated@@519) ($generated@@236 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@157) (= (type $generated@@524) $generated@@157)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@235 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@235 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@157) (= (type $generated@@526) $generated@@157)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@235 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@235 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 Int) ) (!  (=> (= (type $generated@@527) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@527) $generated@@528) ($generated@@133 $generated@@527 $generated@@528)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@157) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529)) $generated@@529) ($generated@@144 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529) ($generated@@394 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@157) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534))) (and (= ($generated@@280 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532)) $generated@@532) ($generated@@144 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532) ($generated@@402 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@157)) ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536))) (and (= ($generated@@280 ($generated@@366 $generated@@148 $generated@@537)) $generated@@537) ($generated@@144 ($generated@@366 $generated@@148 $generated@@537) ($generated@@147 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@410 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@147 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@148) (= ($generated@@521 ($generated@@280 $generated@@544)) ($generated@@522 $generated@@544)))
 :pattern ( ($generated@@521 ($generated@@280 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) ($generated@@236 $generated@@545 ($generated@@75 0))) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@545)) $generated@@545) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@236 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@157) (= (type $generated@@547) $generated@@64)) ($generated@@236 $generated@@546 ($generated@@245 $generated@@547))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546)) $generated@@546) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546) ($generated@@245 $generated@@547))))
 :pattern ( ($generated@@236 $generated@@546 ($generated@@245 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@157) (= (type $generated@@549) $generated@@64)) ($generated@@236 $generated@@548 ($generated@@250 $generated@@549))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548)) $generated@@548) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548) ($generated@@250 $generated@@549))))
 :pattern ( ($generated@@236 $generated@@548 ($generated@@250 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@157) (= (type $generated@@551) $generated@@64)) ($generated@@236 $generated@@550 ($generated@@162 $generated@@551))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550)) $generated@@550) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550) ($generated@@162 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@162 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@157) (= (type $generated@@553) $generated@@64)) ($generated@@236 $generated@@552 ($generated@@483 $generated@@553))) (and (= ($generated@@280 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552)) $generated@@552) ($generated@@144 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552) ($generated@@483 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 ($generated@@483 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@260 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@148) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@560) (and ($generated@@146 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@148) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@564) (and ($generated@@146 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@157) (= (type $generated@@567) $generated@@157)) (= ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)) ($generated@@138 ($generated@@235 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))) ($generated@@138 ($generated@@280 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@280 ($generated@@138 $generated@@569)) ($generated@@138 ($generated@@280 $generated@@569)))
 :pattern ( ($generated@@280 ($generated@@138 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@275 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@274 $generated@@571)) (= ($generated@@273 $generated@@570) 0)) (= $generated@@570 ($generated@@272 $generated@@571))))
 :pattern ( ($generated@@273 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@285 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@434)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@157)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@274 $generated@@157)) (= (type $generated@@587) $generated@@64)) (= ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@273 $generated@@586))) ($generated@@236 ($generated@@484 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@484 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@274 $generated@@157)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@273 $generated@@590))) (< ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594))) (and (and ($generated@@144 ($generated@@291 $generated@@592) ($generated@@245 $generated@@593)) ($generated@@144 ($generated@@334 $generated@@592) ($generated@@245 $generated@@594))) ($generated@@144 ($generated@@365 $generated@@592) ($generated@@245 ($generated@@147 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597))) (and (and ($generated@@144 ($generated@@309 $generated@@595) ($generated@@250 $generated@@596)) ($generated@@144 ($generated@@345 $generated@@595) ($generated@@250 $generated@@597))) ($generated@@144 ($generated@@376 $generated@@595) ($generated@@250 ($generated@@147 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@144 $generated@@598 $generated@@46))
 :pattern ( ($generated@@144 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@144 $generated@@599 $generated@@47))
 :pattern ( ($generated@@144 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@144 $generated@@600 $generated@@44))
 :pattern ( ($generated@@144 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@434) ($generated@@144 $generated@@601 $generated@@45))
 :pattern ( ($generated@@144 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@157) ($generated@@144 $generated@@602 $generated@@48))
 :pattern ( ($generated@@144 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@607) $generated@@77)) (= (type $generated@@608) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@136)) (= (type $generated@@610) $generated@@136)) (= (type $generated@@611) $generated@@136)) (= (type $generated@@612) $generated@@136)) (= (type $generated@@613) $generated@@136)) (= (type $generated@@614) $generated@@136)) (= (type $generated@@615) $generated@@136)) (= (type $generated@@616) $generated@@136)) (= (type $generated@@617) $generated@@136)) (= (type $generated@@618) $generated@@136)) (= (type $generated@@619) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@621  (=> (<= 0 $generated@@603) (=> (and (= $generated@@604 (- $generated@@603 1)) ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@605)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603))) (=> (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@604 $generated@@603))))))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (= $generated@@606 ($generated@@223 $generated@@607 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@622) (=> (= (ControlFlow 0 6) 4) $generated@@621)))))
(let (($generated@@624 true))
(let (($generated@@625  (=> (and (and (= $generated@@608 ($generated@@168 $generated@@607 $generated@@605 $generated@@60 false)) (= $generated@@609 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@610))))) (and (= $generated@@611 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@610))))) (= ($generated@@478 $generated@@610) $generated@@610))) (=> (and (and (and (= $generated@@612 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@613))))) (= $generated@@614 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@613))))))) (and (= ($generated@@478 $generated@@613) $generated@@613) (= $generated@@615 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@616))))))) (and (and (= $generated@@617 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@616)))))) (= ($generated@@478 $generated@@616) $generated@@616)) (and (= ($generated@@478 $generated@@618) $generated@@618) (= ($generated@@478 $generated@@619) $generated@@619)))) (and (=> (= (ControlFlow 0 7) 1) $generated@@624) (=> (= (ControlFlow 0 7) 6) $generated@@623))))))
(let (($generated@@626  (=> (and (and ($generated@@259 $generated@@605) ($generated@@620 $generated@@605)) (and (= 0 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@625)))
$generated@@626)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 (T@U Int) Int)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 () T@T)
(declare-fun $generated@@192 (Int) Bool)
(declare-fun $generated@@196 (T@T) T@U)
(declare-fun $generated@@197 (T@U) Int)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@204 (T@U T@U T@U) Bool)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 () T@T)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@212 (T@T T@T) T@U)
(declare-fun $generated@@213 (T@T T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@215 (T@T) T@T)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@T T@T) T@U)
(declare-fun $generated@@231 (T@T T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 () T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@U Int) T@U)
(declare-fun $generated@@335 (T@U) Int)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@380 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert  (and (= ($generated@@1 $generated@@191) 13) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@193)) $generated@@191)
 :pattern ( ($generated@@190 $generated@@193))
))))
(assert  (=> true (forall (($generated@@194 T@U) ($generated@@195 Int) ) (!  (=> (and (= (type $generated@@194) $generated@@191) true) (and (=> (<= 0 $generated@@195) ($generated@@192 (- $generated@@195 1))) (= ($generated@@189 ($generated@@190 $generated@@194) $generated@@195) (ite (< $generated@@195 0) 0 (+ 1 ($generated@@189 $generated@@194 (- $generated@@195 1)))))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@194) $generated@@195))
))))
(assert  (and (and (forall (($generated@@200 T@T) ) (= ($generated@@1 ($generated@@198 $generated@@200)) 14)) (forall (($generated@@201 T@T) ) (! (= ($generated@@199 ($generated@@198 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@198 $generated@@201))
))) (forall (($generated@@202 T@T) ) (! (= (type ($generated@@196 $generated@@202)) ($generated@@198 $generated@@202))
 :pattern ( ($generated@@196 $generated@@202))
))))
(assert (forall (($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@203)) 0)
 :pattern ( ($generated@@196 $generated@@203))
)))
(assert  (and (= ($generated@@1 $generated@@206) 15) (forall (($generated@@207 T@U) ) (! (= (type ($generated@@205 $generated@@207)) $generated@@206)
 :pattern ( ($generated@@205 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and (= (type $generated@@209) $generated@@61) (= (type $generated@@210) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@204 ($generated@@205 $generated@@208) $generated@@209 $generated@@210) ($generated@@69 $generated@@208 $generated@@209 $generated@@210)))
 :pattern ( ($generated@@204 ($generated@@205 $generated@@208) $generated@@209 $generated@@210))
)))
(assert  (and (and (and (and (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (= ($generated@@1 ($generated@@213 $generated@@216 $generated@@217)) 16)) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@218 $generated@@219)) $generated@@218)
 :pattern ( ($generated@@213 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (! (= ($generated@@215 ($generated@@213 $generated@@220 $generated@@221)) $generated@@221)
 :pattern ( ($generated@@213 $generated@@220 $generated@@221))
))) (forall (($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@214 (type $generated@@222))))
(= (type ($generated@@211 $generated@@222)) ($generated@@71 $generated@@223 $generated@@4)))
 :pattern ( ($generated@@211 $generated@@222))
))) (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (! (= (type ($generated@@212 $generated@@224 $generated@@225)) ($generated@@213 $generated@@224 $generated@@225))
 :pattern ( ($generated@@212 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@T) ) (! (let (($generated@@228 (type $generated@@226)))
 (not ($generated@@0 ($generated@@76 ($generated@@211 ($generated@@212 $generated@@228 $generated@@227)) $generated@@226))))
 :pattern ( (let (($generated@@228 (type $generated@@226)))
($generated@@76 ($generated@@211 ($generated@@212 $generated@@228 $generated@@227)) $generated@@226)))
)))
(assert  (and (and (and (and (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (= ($generated@@1 ($generated@@231 $generated@@234 $generated@@235)) 17)) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@236 $generated@@237)) $generated@@236)
 :pattern ( ($generated@@231 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@231 $generated@@238 $generated@@239)) $generated@@239)
 :pattern ( ($generated@@231 $generated@@238 $generated@@239))
))) (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@232 (type $generated@@240))))
(= (type ($generated@@229 $generated@@240)) ($generated@@71 $generated@@241 $generated@@4)))
 :pattern ( ($generated@@229 $generated@@240))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= (type ($generated@@230 $generated@@242 $generated@@243)) ($generated@@231 $generated@@242 $generated@@243))
 :pattern ( ($generated@@230 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (let (($generated@@246 (type $generated@@244)))
 (not ($generated@@0 ($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244))))
 :pattern ( (let (($generated@@246 (type $generated@@244)))
($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@215 (type $generated@@247))))
(let (($generated@@249 ($generated@@214 (type $generated@@247))))
 (=> (= (type $generated@@247) ($generated@@213 $generated@@249 $generated@@248)) (or (= $generated@@247 ($generated@@212 $generated@@249 $generated@@248)) (exists (($generated@@250 T@U) ) (!  (and (= (type $generated@@250) $generated@@249) ($generated@@0 ($generated@@76 ($generated@@211 $generated@@247) $generated@@250)))
 :no-pattern (type $generated@@250)
 :no-pattern ($generated $generated@@250)
 :no-pattern ($generated@@0 $generated@@250)
))))))
 :pattern ( ($generated@@211 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@233 (type $generated@@251))))
(let (($generated@@253 ($generated@@232 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@231 $generated@@253 $generated@@252)) (or (= $generated@@251 ($generated@@230 $generated@@253 $generated@@252)) (exists (($generated@@254 T@U) ) (!  (and (= (type $generated@@254) $generated@@253) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@251) $generated@@254)))
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
))))))
 :pattern ( ($generated@@229 $generated@@251))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@61)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@257) ($generated@@71 $generated@@206 $generated@@4)) (= (type $generated@@258) $generated@@61)) (= (type $generated@@259) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@257 ($generated@@255 $generated@@258) $generated@@259) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@206) ($generated@@0 ($generated@@76 $generated@@257 $generated@@260))) ($generated@@204 $generated@@260 $generated@@258 $generated@@259))
 :pattern ( ($generated@@76 $generated@@257 $generated@@260))
))))
 :pattern ( ($generated@@69 $generated@@257 ($generated@@255 $generated@@258) $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@61)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@263) ($generated@@71 $generated@@206 $generated@@4)) (= (type $generated@@264) $generated@@61)) (= (type $generated@@265) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@263 ($generated@@261 $generated@@264) $generated@@265) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@206) ($generated@@0 ($generated@@76 $generated@@263 $generated@@266))) ($generated@@204 $generated@@266 $generated@@264 $generated@@265))
 :pattern ( ($generated@@76 $generated@@263 $generated@@266))
))))
 :pattern ( ($generated@@69 $generated@@263 ($generated@@261 $generated@@264) $generated@@265))
)))
(assert  (and (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@267 $generated@@269 $generated@@270)) $generated@@61)
 :pattern ( ($generated@@267 $generated@@269 $generated@@270))
)) (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@215 (type $generated@@271))))
(let (($generated@@273 ($generated@@214 (type $generated@@271))))
(= (type ($generated@@268 $generated@@271)) ($generated@@71 $generated@@273 $generated@@272))))
 :pattern ( ($generated@@268 $generated@@271))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (= (type $generated@@274) ($generated@@213 $generated@@206 $generated@@206)) (= (type $generated@@275) $generated@@61)) (= (type $generated@@276) $generated@@61)) (= (type $generated@@277) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@274 ($generated@@267 $generated@@275 $generated@@276) $generated@@277) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@206) ($generated@@0 ($generated@@76 ($generated@@211 $generated@@274) $generated@@278))) (and ($generated@@204 ($generated@@76 ($generated@@268 $generated@@274) $generated@@278) $generated@@276 $generated@@277) ($generated@@204 $generated@@278 $generated@@275 $generated@@277)))
 :pattern ( ($generated@@76 ($generated@@268 $generated@@274) $generated@@278))
 :pattern ( ($generated@@76 ($generated@@211 $generated@@274) $generated@@278))
))))
 :pattern ( ($generated@@69 $generated@@274 ($generated@@267 $generated@@275 $generated@@276) $generated@@277))
)))
(assert  (and (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! (= (type ($generated@@279 $generated@@281 $generated@@282)) $generated@@61)
 :pattern ( ($generated@@279 $generated@@281 $generated@@282))
)) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@233 (type $generated@@283))))
(let (($generated@@285 ($generated@@232 (type $generated@@283))))
(= (type ($generated@@280 $generated@@283)) ($generated@@71 $generated@@285 $generated@@284))))
 :pattern ( ($generated@@280 $generated@@283))
))))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (= (type $generated@@286) ($generated@@231 $generated@@206 $generated@@206)) (= (type $generated@@287) $generated@@61)) (= (type $generated@@288) $generated@@61)) (= (type $generated@@289) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@286 ($generated@@279 $generated@@287 $generated@@288) $generated@@289) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@206) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@286) $generated@@290))) (and ($generated@@204 ($generated@@76 ($generated@@280 $generated@@286) $generated@@290) $generated@@288 $generated@@289) ($generated@@204 $generated@@290 $generated@@287 $generated@@289)))
 :pattern ( ($generated@@76 ($generated@@280 $generated@@286) $generated@@290))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@286) $generated@@290))
))))
 :pattern ( ($generated@@69 $generated@@286 ($generated@@279 $generated@@287 $generated@@288) $generated@@289))
)))
(assert  (=> true (forall (($generated@@291 T@U) ($generated@@292 Int) ) (!  (=> (and (= (type $generated@@291) $generated@@191) true) (and (=> (not ($generated@@0 ($generated@@185 ($generated@@11 (< $generated@@292 0))))) ($generated@@192 ($generated@@183 (- $generated@@292 1)))) (= ($generated@@189 ($generated@@190 $generated@@291) ($generated@@183 $generated@@292)) (ite (< $generated@@292 0) 0 (+ 1 ($generated@@189 ($generated@@190 $generated@@291) ($generated@@183 (- $generated@@292 1))))))))
 :weight 3
 :pattern ( ($generated@@189 ($generated@@190 $generated@@291) ($generated@@183 $generated@@292)))
))))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@71 $generated@@294 $generated@@4))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@233 (type $generated@@295))))
(let (($generated@@297 ($generated@@232 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@231 $generated@@297 $generated@@296)) (= (= $generated@@295 ($generated@@230 $generated@@297 $generated@@296)) (= ($generated@@229 $generated@@295) ($generated@@293 $generated@@297))))))
 :pattern ( ($generated@@229 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@199 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@198 $generated@@299)) (<= 0 ($generated@@197 $generated@@298))))
 :pattern ( ($generated@@197 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@61)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@61) (= (type $generated@@303) $generated@@61)) (= ($generated@@300 ($generated@@267 $generated@@302 $generated@@303)) $generated@@302))
 :pattern ( ($generated@@267 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@61)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@61) (= (type $generated@@307) $generated@@61)) (= ($generated@@304 ($generated@@267 $generated@@306 $generated@@307)) $generated@@307))
 :pattern ( ($generated@@267 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@61) (= (type $generated@@309) $generated@@61)) (= ($generated@@67 ($generated@@267 $generated@@308 $generated@@309)) $generated@@58))
 :pattern ( ($generated@@267 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@61)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@61) (= (type $generated@@313) $generated@@61)) (= ($generated@@310 ($generated@@279 $generated@@312 $generated@@313)) $generated@@312))
 :pattern ( ($generated@@279 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@61)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@61) (= (type $generated@@317) $generated@@61)) (= ($generated@@314 ($generated@@279 $generated@@316 $generated@@317)) $generated@@317))
 :pattern ( ($generated@@279 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@61) (= (type $generated@@319) $generated@@61)) (= ($generated@@67 ($generated@@279 $generated@@318 $generated@@319)) $generated@@59))
 :pattern ( ($generated@@279 $generated@@318 $generated@@319))
)))
(assert  (and (forall (($generated@@322 T@U) ) (! (= (type ($generated@@320 $generated@@322)) $generated@@191)
 :pattern ( ($generated@@320 $generated@@322))
)) (= (type $generated@@321) $generated@@191)))
(assert (forall (($generated@@323 T@U) ($generated@@324 Int) ) (!  (=> (= (type $generated@@323) $generated@@191) (= ($generated@@189 $generated@@323 $generated@@324) ($generated@@189 $generated@@321 $generated@@324)))
 :pattern ( ($generated@@189 ($generated@@320 $generated@@323) $generated@@324))
)))
(assert  (and (forall (($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@325 $generated@@327))
)) (forall (($generated@@328 T@U) ($generated@@329 Int) ) (! (let (($generated@@330 ($generated@@199 (type $generated@@328))))
(= (type ($generated@@326 $generated@@328 $generated@@329)) $generated@@330))
 :pattern ( ($generated@@326 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@331) ($generated@@198 $generated@@206)) (= (type $generated@@332) $generated@@61)) (= (type $generated@@333) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@331 ($generated@@325 $generated@@332) $generated@@333) (forall (($generated@@334 Int) ) (!  (=> (and (<= 0 $generated@@334) (< $generated@@334 ($generated@@197 $generated@@331))) ($generated@@204 ($generated@@326 $generated@@331 $generated@@334) $generated@@332 $generated@@333))
 :pattern ( ($generated@@326 $generated@@331 $generated@@334))
))))
 :pattern ( ($generated@@69 $generated@@331 ($generated@@325 $generated@@332) $generated@@333))
)))
(assert (forall (($generated@@336 Int) ) (! (= ($generated@@335 ($generated@@70 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@70 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@61) (= ($generated@@337 ($generated@@255 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@255 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@61) (= ($generated@@67 ($generated@@255 $generated@@340)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@341 ($generated@@261 $generated@@343)) $generated@@343))
 :pattern ( ($generated@@261 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@67 ($generated@@261 $generated@@344)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@344))
)))
(assert  (and (forall (($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@347)) $generated@@61)
 :pattern ( ($generated@@345 $generated@@347))
)) (forall (($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@348)) $generated@@61)
 :pattern ( ($generated@@346 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@61) (= ($generated@@346 ($generated@@345 $generated@@349)) $generated@@349))
 :pattern ( ($generated@@345 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@61) (= ($generated@@67 ($generated@@345 $generated@@350)) $generated@@56))
 :pattern ( ($generated@@345 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (= (type ($generated@@351 $generated@@352)) $generated@@61)
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@351 ($generated@@325 $generated@@353)) $generated@@353))
 :pattern ( ($generated@@325 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@61) (= ($generated@@67 ($generated@@325 $generated@@354)) $generated@@57))
 :pattern ( ($generated@@325 $generated@@354))
)))
(assert (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
(= ($generated@@355 $generated@@359 ($generated@@205 $generated@@358)) $generated@@358))
 :pattern ( ($generated@@205 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 Int) ) (!  (=> (= (type $generated@@360) $generated@@191) (= ($generated@@189 ($generated@@190 $generated@@360) $generated@@361) ($generated@@189 $generated@@360 $generated@@361)))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
 (not ($generated@@0 ($generated@@76 ($generated@@293 $generated@@363) $generated@@362))))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@76 ($generated@@293 $generated@@363) $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@71 $generated@@206 $generated@@2)) (= (type $generated@@365) $generated@@61)) (= (type $generated@@366) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@364 ($generated@@345 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@206) (< 0 ($generated ($generated@@76 $generated@@364 $generated@@367)))) ($generated@@204 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@76 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@69 $generated@@364 ($generated@@345 $generated@@365) $generated@@366))
)))
(assert  (=> true (forall (($generated@@368 T@U) ($generated@@369 Int) ) (!  (=> (and (= (type $generated@@368) $generated@@191) true) true)
 :pattern ( ($generated@@189 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@370 Int) ) (! (= ($generated@@205 ($generated@@8 ($generated@@183 $generated@@370))) ($generated@@185 ($generated@@205 ($generated@@8 $generated@@370))))
 :pattern ( ($generated@@205 ($generated@@8 ($generated@@183 $generated@@370))))
)))
(assert (forall (($generated@@371 T@U) ) (! (= ($generated@@205 ($generated@@185 $generated@@371)) ($generated@@185 ($generated@@205 $generated@@371)))
 :pattern ( ($generated@@205 ($generated@@185 $generated@@371)))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@199 (type $generated@@372))))
 (=> (and (= (type $generated@@372) ($generated@@198 $generated@@373)) (= ($generated@@197 $generated@@372) 0)) (= $generated@@372 ($generated@@196 $generated@@373))))
 :pattern ( ($generated@@197 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@375) $generated@@2)) ($generated@@69 $generated@@375 $generated@@46 $generated@@374))
 :pattern ( ($generated@@69 $generated@@375 $generated@@46 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@377) $generated@@3)) ($generated@@69 $generated@@377 $generated@@47 $generated@@376))
 :pattern ( ($generated@@69 $generated@@377 $generated@@47 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@379) $generated@@4)) ($generated@@69 $generated@@379 $generated@@44 $generated@@378))
 :pattern ( ($generated@@69 $generated@@379 $generated@@44 $generated@@378))
)))
(assert (= ($generated@@1 $generated@@380) 18))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@382) $generated@@380)) ($generated@@69 $generated@@382 $generated@@45 $generated@@381))
 :pattern ( ($generated@@69 $generated@@382 $generated@@45 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@384) $generated@@206)) ($generated@@69 $generated@@384 $generated@@48 $generated@@383))
 :pattern ( ($generated@@69 $generated@@384 $generated@@48 $generated@@383))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@385 () T@U)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 () T@U)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () Int)
(declare-fun $generated@@392 () Int)
(declare-fun $generated@@393 () Int)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 (T@U) Bool)
(declare-fun $generated@@396 (T@U) Bool)
(declare-fun $generated@@397 () Int)
(assert  (and (and (and (and (and (= (type $generated@@385) $generated@@191) (= (type $generated@@386) $generated@@191)) (= (type $generated@@387) $generated@@191)) (= (type $generated@@388) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@389) $generated@@72)) (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@398  (=> (= $generated@@385 ($generated@@190 ($generated@@190 ($generated@@190 $generated@@386)))) (=> (and (= $generated@@387 ($generated@@190 ($generated@@190 ($generated@@190 ($generated@@190 $generated@@386))))) (= ($generated@@320 $generated@@386) $generated@@386)) (=> (and (and (= $generated@@388 ($generated@@128 $generated@@389 $generated@@390 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@391) $generated@@46 $generated@@390)) (and ($generated@@192 $generated@@391) ($generated@@192 $generated@@391))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@189 $generated@@387 $generated@@391) ($generated@@183 0))) (=> (= ($generated@@189 $generated@@387 $generated@@391) ($generated@@183 0)) (=> (and (and (= $generated@@392 ($generated@@183 (- 0 1))) ($generated@@69 ($generated@@8 $generated@@392) $generated@@46 $generated@@390)) (and ($generated@@192 ($generated@@183 (- 0 1))) ($generated@@192 ($generated@@183 (- 0 1))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@183 ($generated@@189 $generated@@387 ($generated@@183 (- 0 1)))) ($generated@@183 0))) (=> (and (= ($generated@@183 ($generated@@189 $generated@@387 ($generated@@183 (- 0 1)))) ($generated@@183 0)) ($generated@@69 ($generated@@8 $generated@@393) $generated@@46 $generated@@390)) (=> (and (and (and ($generated@@192 $generated@@393) (= $generated@@394 (- $generated@@393 3))) (and ($generated@@69 ($generated@@8 $generated@@394) $generated@@46 $generated@@390) ($generated@@192 (- $generated@@393 3)))) (and (and ($generated@@192 $generated@@393) ($generated@@192 (- $generated@@393 3))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@189 $generated@@387 $generated@@393) (+ 3 ($generated@@189 $generated@@387 (- $generated@@393 3)))))))))))))))
(let (($generated@@399  (=> (and ($generated@@395 $generated@@390) ($generated@@396 $generated@@390)) (=> (and (and (= 0 $generated@@397) (> $generated@@393 5)) (and (< $generated@@391 0) (= (ControlFlow 0 5) 2))) $generated@@398))))
$generated@@399)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int) Int)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@134 $generated@@139)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@139))
))) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@138 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@138 $generated@@140))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@142 T@U) ($generated@@143 Int) ) (!  (=> (and (= (type $generated@@142) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@143)) (not (= 0 $generated@@132)))) (and (=> (not ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@143 0))))) ($generated@@137 ($generated@@135 (- $generated@@143 1)))) (= ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)) (ite (< $generated@@143 0) 0 (+ 1 ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 (- $generated@@143 1))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)))
))))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@75 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@64)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 17)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@67 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@77) (= (type $generated@@229) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@230) ($generated@@66 $generated@@4))) (= (type $generated@@232) $generated@@77)) (= (type $generated@@233) ($generated@@66 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@148)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@157)) (= (type $generated@@242) $generated@@157)) (= ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@148) (= (type $generated@@244) $generated@@148)) (= ($generated@@154 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@154 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) ($generated@@0 ($generated@@81 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@81 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@253) $generated@@64)) (= ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@157) ($generated@@0 ($generated@@81 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@81 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@135 $generated@@255) $generated@@255)
 :pattern ( ($generated@@135 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@138 $generated@@256) $generated@@256)
 :pattern ( ($generated@@138 $generated@@256))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@136) (or ($generated@@137 $generated@@258) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@133 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@157)) (= (type $generated@@264) $generated@@157)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@148) (= ($generated@@146 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@148) ($generated@@146 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@157) (= (type $generated@@271) $generated@@157)) (= $generated@@269 ($generated@@235 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@146 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 18)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@157)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@74 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@76 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@79 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@76 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@81 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 19)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 20)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@76 $generated@@328 $generated@@2)) (= ($generated@@163 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@81 $generated@@327 $generated@@329))) (<= ($generated ($generated@@81 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@163 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@295 (type $generated@@330))))
(let (($generated@@332 ($generated@@294 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@293 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@292 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@291 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@295 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@295 (type $generated@@337))))
(let (($generated@@339 ($generated@@294 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@293 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@292 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@313 (type $generated@@341))))
(let (($generated@@343 ($generated@@312 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@311 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@310 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@309 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@313 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@313 (type $generated@@348))))
(let (($generated@@350 ($generated@@312 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@311 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@310 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@353) $generated@@64)) (= ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@352 $generated@@354)))) ($generated@@236 $generated@@354 $generated@@353))
 :pattern ( ($generated@@81 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@157) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@260 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@157) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@260 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@81 ($generated@@286 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@81 ($generated@@286 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@295 (type $generated@@371))))
(let (($generated@@373 ($generated@@294 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@375) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375)))) (= ($generated@@81 ($generated@@367 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@313 (type $generated@@379))))
(let (($generated@@381 ($generated@@312 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@383) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383)))) (= ($generated@@81 ($generated@@377 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@294 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@293 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@312 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@311 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))) (and ($generated@@260 ($generated@@81 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@260 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@64)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))) (and ($generated@@260 ($generated@@81 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@260 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@313 (type $generated@@412))))
(let (($generated@@414 ($generated@@312 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@311 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@310 $generated@@414 $generated@@413)) (= ($generated@@309 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@309 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@313 (type $generated@@415))))
(let (($generated@@417 ($generated@@312 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@311 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@310 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@313 (type $generated@@418))))
(let (($generated@@420 ($generated@@312 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@311 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@310 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@157))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@295 (type $generated@@421))))
(let (($generated@@423 ($generated@@294 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@293 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@292 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@157) (= (type $generated@@425) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@421) ($generated@@280 ($generated@@235 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@313 (type $generated@@426))))
(let (($generated@@428 ($generated@@312 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@311 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@310 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@157) (= (type $generated@@430) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@426) ($generated@@280 ($generated@@235 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@157) ($generated@@236 $generated@@431 $generated@@46)) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@144 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@157) ($generated@@236 $generated@@432 $generated@@47)) (and (= ($generated@@280 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@144 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@157) ($generated@@236 $generated@@433 $generated@@44)) (and (= ($generated@@280 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@144 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 21))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@236 $generated@@435 $generated@@45)) (and (= ($generated@@280 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@144 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@236 ($generated@@280 $generated@@436) $generated@@437) ($generated@@144 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@236 ($generated@@280 $generated@@436) $generated@@437))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (= (type $generated@@438) $generated@@136) (or ($generated@@137 $generated@@439) (not (= 0 $generated@@132)))) (and (=> (<= 0 $generated@@439) ($generated@@137 (- $generated@@439 1))) (= ($generated@@133 ($generated@@134 $generated@@438) $generated@@439) (ite (< $generated@@439 0) 0 (+ 1 ($generated@@133 $generated@@438 (- $generated@@439 1)))))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@438) $generated@@439))
))))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@79 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@76 $generated@@441 $generated@@2)) (<= 0 ($generated@@285 $generated@@440))))
 :pattern ( ($generated@@285 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@275 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@274 $generated@@443)) (<= 0 ($generated@@273 $generated@@442))))
 :pattern ( ($generated@@273 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@394 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@394 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@394 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@402 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@72 ($generated@@402 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@157) (= (type $generated@@465) $generated@@157)) (= ($generated@@266 ($generated@@235 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@147 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@147 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@147 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@147 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) (= (type $generated@@475) $generated@@157)) (= ($generated@@155 ($generated@@235 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@235 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@157) (= (type $generated@@477) $generated@@157)) (= ($generated@@156 ($generated@@235 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@235 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@136)
 :pattern ( ($generated@@478 $generated@@480))
)) (= (type $generated@@479) $generated@@136)))
(assert (forall (($generated@@481 T@U) ($generated@@482 Int) ) (!  (=> (= (type $generated@@481) $generated@@136) (= ($generated@@133 $generated@@481 $generated@@482) ($generated@@133 $generated@@479 $generated@@482)))
 :pattern ( ($generated@@133 ($generated@@478 $generated@@481) $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@275 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@274 $generated@@157)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@273 $generated@@489))) ($generated@@260 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@245 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@245 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@250 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@250 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@250 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@162 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@162 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@162 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@366 $generated@@512 ($generated@@280 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@280 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))) (and ($generated@@236 ($generated@@81 ($generated@@367 $generated@@513) $generated@@516) $generated@@515) ($generated@@236 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))) (and ($generated@@236 ($generated@@81 ($generated@@377 $generated@@517) $generated@@520) $generated@@519) ($generated@@236 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@157) (= (type $generated@@524) $generated@@157)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@235 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@235 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@157) (= (type $generated@@526) $generated@@157)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@235 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@235 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 Int) ) (!  (=> (= (type $generated@@527) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@527) $generated@@528) ($generated@@133 $generated@@527 $generated@@528)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@157) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529)) $generated@@529) ($generated@@144 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529) ($generated@@394 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@157) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534))) (and (= ($generated@@280 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532)) $generated@@532) ($generated@@144 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532) ($generated@@402 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@157)) ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536))) (and (= ($generated@@280 ($generated@@366 $generated@@148 $generated@@537)) $generated@@537) ($generated@@144 ($generated@@366 $generated@@148 $generated@@537) ($generated@@147 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@410 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@147 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@148) (= ($generated@@521 ($generated@@280 $generated@@544)) ($generated@@522 $generated@@544)))
 :pattern ( ($generated@@521 ($generated@@280 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) ($generated@@236 $generated@@545 ($generated@@75 0))) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@545)) $generated@@545) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@236 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@157) (= (type $generated@@547) $generated@@64)) ($generated@@236 $generated@@546 ($generated@@245 $generated@@547))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546)) $generated@@546) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546) ($generated@@245 $generated@@547))))
 :pattern ( ($generated@@236 $generated@@546 ($generated@@245 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@157) (= (type $generated@@549) $generated@@64)) ($generated@@236 $generated@@548 ($generated@@250 $generated@@549))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548)) $generated@@548) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548) ($generated@@250 $generated@@549))))
 :pattern ( ($generated@@236 $generated@@548 ($generated@@250 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@157) (= (type $generated@@551) $generated@@64)) ($generated@@236 $generated@@550 ($generated@@162 $generated@@551))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550)) $generated@@550) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550) ($generated@@162 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@162 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@157) (= (type $generated@@553) $generated@@64)) ($generated@@236 $generated@@552 ($generated@@483 $generated@@553))) (and (= ($generated@@280 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552)) $generated@@552) ($generated@@144 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552) ($generated@@483 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 ($generated@@483 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@260 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@148) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@560) (and ($generated@@146 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@148) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@564) (and ($generated@@146 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@157) (= (type $generated@@567) $generated@@157)) (= ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)) ($generated@@138 ($generated@@235 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))) ($generated@@138 ($generated@@280 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@280 ($generated@@138 $generated@@569)) ($generated@@138 ($generated@@280 $generated@@569)))
 :pattern ( ($generated@@280 ($generated@@138 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@275 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@274 $generated@@571)) (= ($generated@@273 $generated@@570) 0)) (= $generated@@570 ($generated@@272 $generated@@571))))
 :pattern ( ($generated@@273 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@285 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@434)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@157)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@274 $generated@@157)) (= (type $generated@@587) $generated@@64)) (= ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@273 $generated@@586))) ($generated@@236 ($generated@@484 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@484 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@274 $generated@@157)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@273 $generated@@590))) (< ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594))) (and (and ($generated@@144 ($generated@@291 $generated@@592) ($generated@@245 $generated@@593)) ($generated@@144 ($generated@@334 $generated@@592) ($generated@@245 $generated@@594))) ($generated@@144 ($generated@@365 $generated@@592) ($generated@@245 ($generated@@147 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597))) (and (and ($generated@@144 ($generated@@309 $generated@@595) ($generated@@250 $generated@@596)) ($generated@@144 ($generated@@345 $generated@@595) ($generated@@250 $generated@@597))) ($generated@@144 ($generated@@376 $generated@@595) ($generated@@250 ($generated@@147 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@144 $generated@@598 $generated@@46))
 :pattern ( ($generated@@144 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@144 $generated@@599 $generated@@47))
 :pattern ( ($generated@@144 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@144 $generated@@600 $generated@@44))
 :pattern ( ($generated@@144 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@434) ($generated@@144 $generated@@601 $generated@@45))
 :pattern ( ($generated@@144 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@157) ($generated@@144 $generated@@602 $generated@@48))
 :pattern ( ($generated@@144 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@607) $generated@@77)) (= (type $generated@@608) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@136)) (= (type $generated@@610) $generated@@136)) (= (type $generated@@611) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@613  (=> (<= 0 $generated@@603) (=> (and (= $generated@@604 (- $generated@@603 1)) ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@605)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603))) (=> (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@604 $generated@@603))))))))
(let (($generated@@614 true))
(let (($generated@@615  (=> (= $generated@@606 ($generated@@223 $generated@@607 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@614) (=> (= (ControlFlow 0 6) 4) $generated@@613)))))
(let (($generated@@616 true))
(let (($generated@@617  (=> (and (and (= $generated@@608 ($generated@@168 $generated@@607 $generated@@605 $generated@@60 false)) (= $generated@@609 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@610))))) (and (= $generated@@611 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@610))))) (= ($generated@@478 $generated@@610) $generated@@610))) (and (=> (= (ControlFlow 0 7) 1) $generated@@616) (=> (= (ControlFlow 0 7) 6) $generated@@615)))))
(let (($generated@@618  (=> (and (and ($generated@@259 $generated@@605) ($generated@@612 $generated@@605)) (and (= 0 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@617)))
$generated@@618)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int) Int)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@134 $generated@@139)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@139))
))) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@138 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@138 $generated@@140))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@142 T@U) ($generated@@143 Int) ) (!  (=> (and (= (type $generated@@142) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@143)) (not (= 0 $generated@@132)))) (and (=> (not ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@143 0))))) ($generated@@137 ($generated@@135 (- $generated@@143 1)))) (= ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)) (ite (< $generated@@143 0) 0 (+ 1 ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 (- $generated@@143 1))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)))
))))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@75 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@64)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 17)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@67 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@77) (= (type $generated@@229) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@230) ($generated@@66 $generated@@4))) (= (type $generated@@232) $generated@@77)) (= (type $generated@@233) ($generated@@66 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@148)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@157)) (= (type $generated@@242) $generated@@157)) (= ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@148) (= (type $generated@@244) $generated@@148)) (= ($generated@@154 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@154 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) ($generated@@0 ($generated@@81 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@81 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@253) $generated@@64)) (= ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@157) ($generated@@0 ($generated@@81 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@81 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@135 $generated@@255) $generated@@255)
 :pattern ( ($generated@@135 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@138 $generated@@256) $generated@@256)
 :pattern ( ($generated@@138 $generated@@256))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@136) (or ($generated@@137 $generated@@258) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@133 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@157)) (= (type $generated@@264) $generated@@157)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@148) (= ($generated@@146 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@148) ($generated@@146 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@157) (= (type $generated@@271) $generated@@157)) (= $generated@@269 ($generated@@235 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@146 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 18)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@157)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@74 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@76 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@79 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@76 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@81 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 19)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 20)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@76 $generated@@328 $generated@@2)) (= ($generated@@163 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@81 $generated@@327 $generated@@329))) (<= ($generated ($generated@@81 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@163 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@295 (type $generated@@330))))
(let (($generated@@332 ($generated@@294 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@293 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@292 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@291 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@295 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@295 (type $generated@@337))))
(let (($generated@@339 ($generated@@294 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@293 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@292 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@313 (type $generated@@341))))
(let (($generated@@343 ($generated@@312 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@311 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@310 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@309 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@313 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@313 (type $generated@@348))))
(let (($generated@@350 ($generated@@312 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@311 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@310 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@353) $generated@@64)) (= ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@352 $generated@@354)))) ($generated@@236 $generated@@354 $generated@@353))
 :pattern ( ($generated@@81 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@157) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@260 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@157) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@260 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@81 ($generated@@286 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@81 ($generated@@286 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@295 (type $generated@@371))))
(let (($generated@@373 ($generated@@294 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@375) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375)))) (= ($generated@@81 ($generated@@367 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@313 (type $generated@@379))))
(let (($generated@@381 ($generated@@312 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@383) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383)))) (= ($generated@@81 ($generated@@377 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@294 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@293 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@312 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@311 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))) (and ($generated@@260 ($generated@@81 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@260 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@64)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))) (and ($generated@@260 ($generated@@81 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@260 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@313 (type $generated@@412))))
(let (($generated@@414 ($generated@@312 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@311 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@310 $generated@@414 $generated@@413)) (= ($generated@@309 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@309 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@313 (type $generated@@415))))
(let (($generated@@417 ($generated@@312 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@311 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@310 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@313 (type $generated@@418))))
(let (($generated@@420 ($generated@@312 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@311 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@310 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@157))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@295 (type $generated@@421))))
(let (($generated@@423 ($generated@@294 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@293 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@292 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@157) (= (type $generated@@425) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@421) ($generated@@280 ($generated@@235 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@313 (type $generated@@426))))
(let (($generated@@428 ($generated@@312 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@311 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@310 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@157) (= (type $generated@@430) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@426) ($generated@@280 ($generated@@235 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@157) ($generated@@236 $generated@@431 $generated@@46)) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@144 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@157) ($generated@@236 $generated@@432 $generated@@47)) (and (= ($generated@@280 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@144 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@157) ($generated@@236 $generated@@433 $generated@@44)) (and (= ($generated@@280 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@144 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 21))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@236 $generated@@435 $generated@@45)) (and (= ($generated@@280 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@144 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@236 ($generated@@280 $generated@@436) $generated@@437) ($generated@@144 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@236 ($generated@@280 $generated@@436) $generated@@437))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (= (type $generated@@438) $generated@@136) (or ($generated@@137 $generated@@439) (not (= 0 $generated@@132)))) (and (=> (<= 0 $generated@@439) ($generated@@137 (- $generated@@439 1))) (= ($generated@@133 ($generated@@134 $generated@@438) $generated@@439) (ite (< $generated@@439 0) 0 (+ 1 ($generated@@133 $generated@@438 (- $generated@@439 1)))))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@438) $generated@@439))
))))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@79 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@76 $generated@@441 $generated@@2)) (<= 0 ($generated@@285 $generated@@440))))
 :pattern ( ($generated@@285 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@275 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@274 $generated@@443)) (<= 0 ($generated@@273 $generated@@442))))
 :pattern ( ($generated@@273 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@394 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@394 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@394 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@402 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@72 ($generated@@402 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@157) (= (type $generated@@465) $generated@@157)) (= ($generated@@266 ($generated@@235 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@147 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@147 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@147 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@147 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) (= (type $generated@@475) $generated@@157)) (= ($generated@@155 ($generated@@235 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@235 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@157) (= (type $generated@@477) $generated@@157)) (= ($generated@@156 ($generated@@235 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@235 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@136)
 :pattern ( ($generated@@478 $generated@@480))
)) (= (type $generated@@479) $generated@@136)))
(assert (forall (($generated@@481 T@U) ($generated@@482 Int) ) (!  (=> (= (type $generated@@481) $generated@@136) (= ($generated@@133 $generated@@481 $generated@@482) ($generated@@133 $generated@@479 $generated@@482)))
 :pattern ( ($generated@@133 ($generated@@478 $generated@@481) $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@275 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@274 $generated@@157)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@273 $generated@@489))) ($generated@@260 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@245 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@245 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@250 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@250 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@250 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@162 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@162 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@162 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@366 $generated@@512 ($generated@@280 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@280 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))) (and ($generated@@236 ($generated@@81 ($generated@@367 $generated@@513) $generated@@516) $generated@@515) ($generated@@236 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))) (and ($generated@@236 ($generated@@81 ($generated@@377 $generated@@517) $generated@@520) $generated@@519) ($generated@@236 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@157) (= (type $generated@@524) $generated@@157)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@235 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@235 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@157) (= (type $generated@@526) $generated@@157)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@235 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@235 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 Int) ) (!  (=> (= (type $generated@@527) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@527) $generated@@528) ($generated@@133 $generated@@527 $generated@@528)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@157) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529)) $generated@@529) ($generated@@144 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529) ($generated@@394 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@157) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534))) (and (= ($generated@@280 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532)) $generated@@532) ($generated@@144 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532) ($generated@@402 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@157)) ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536))) (and (= ($generated@@280 ($generated@@366 $generated@@148 $generated@@537)) $generated@@537) ($generated@@144 ($generated@@366 $generated@@148 $generated@@537) ($generated@@147 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@410 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@147 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@148) (= ($generated@@521 ($generated@@280 $generated@@544)) ($generated@@522 $generated@@544)))
 :pattern ( ($generated@@521 ($generated@@280 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) ($generated@@236 $generated@@545 ($generated@@75 0))) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@545)) $generated@@545) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@236 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@157) (= (type $generated@@547) $generated@@64)) ($generated@@236 $generated@@546 ($generated@@245 $generated@@547))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546)) $generated@@546) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546) ($generated@@245 $generated@@547))))
 :pattern ( ($generated@@236 $generated@@546 ($generated@@245 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@157) (= (type $generated@@549) $generated@@64)) ($generated@@236 $generated@@548 ($generated@@250 $generated@@549))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548)) $generated@@548) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548) ($generated@@250 $generated@@549))))
 :pattern ( ($generated@@236 $generated@@548 ($generated@@250 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@157) (= (type $generated@@551) $generated@@64)) ($generated@@236 $generated@@550 ($generated@@162 $generated@@551))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550)) $generated@@550) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550) ($generated@@162 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@162 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@157) (= (type $generated@@553) $generated@@64)) ($generated@@236 $generated@@552 ($generated@@483 $generated@@553))) (and (= ($generated@@280 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552)) $generated@@552) ($generated@@144 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552) ($generated@@483 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 ($generated@@483 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@260 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@148) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@560) (and ($generated@@146 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@148) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@564) (and ($generated@@146 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@157) (= (type $generated@@567) $generated@@157)) (= ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)) ($generated@@138 ($generated@@235 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))) ($generated@@138 ($generated@@280 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@280 ($generated@@138 $generated@@569)) ($generated@@138 ($generated@@280 $generated@@569)))
 :pattern ( ($generated@@280 ($generated@@138 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@275 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@274 $generated@@571)) (= ($generated@@273 $generated@@570) 0)) (= $generated@@570 ($generated@@272 $generated@@571))))
 :pattern ( ($generated@@273 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@285 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@434)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@157)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@274 $generated@@157)) (= (type $generated@@587) $generated@@64)) (= ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@273 $generated@@586))) ($generated@@236 ($generated@@484 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@484 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@274 $generated@@157)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@273 $generated@@590))) (< ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594))) (and (and ($generated@@144 ($generated@@291 $generated@@592) ($generated@@245 $generated@@593)) ($generated@@144 ($generated@@334 $generated@@592) ($generated@@245 $generated@@594))) ($generated@@144 ($generated@@365 $generated@@592) ($generated@@245 ($generated@@147 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597))) (and (and ($generated@@144 ($generated@@309 $generated@@595) ($generated@@250 $generated@@596)) ($generated@@144 ($generated@@345 $generated@@595) ($generated@@250 $generated@@597))) ($generated@@144 ($generated@@376 $generated@@595) ($generated@@250 ($generated@@147 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@144 $generated@@598 $generated@@46))
 :pattern ( ($generated@@144 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@144 $generated@@599 $generated@@47))
 :pattern ( ($generated@@144 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@144 $generated@@600 $generated@@44))
 :pattern ( ($generated@@144 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@434) ($generated@@144 $generated@@601 $generated@@45))
 :pattern ( ($generated@@144 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@157) ($generated@@144 $generated@@602 $generated@@48))
 :pattern ( ($generated@@144 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@607) $generated@@77)) (= (type $generated@@608) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@136)) (= (type $generated@@610) $generated@@136)) (= (type $generated@@611) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@613  (=> (<= 0 $generated@@603) (=> (and (= $generated@@604 (- $generated@@603 1)) ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@605)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603))) (=> (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@604 $generated@@603))))))))
(let (($generated@@614 true))
(let (($generated@@615  (=> (= $generated@@606 ($generated@@223 $generated@@607 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@614) (=> (= (ControlFlow 0 6) 4) $generated@@613)))))
(let (($generated@@616 true))
(let (($generated@@617  (=> (and (and (= $generated@@608 ($generated@@168 $generated@@607 $generated@@605 $generated@@60 false)) (= $generated@@609 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@610))))) (and (= $generated@@611 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@610))))) (= ($generated@@478 $generated@@610) $generated@@610))) (and (=> (= (ControlFlow 0 7) 1) $generated@@616) (=> (= (ControlFlow 0 7) 6) $generated@@615)))))
(let (($generated@@618  (=> (and (and ($generated@@259 $generated@@605) ($generated@@612 $generated@@605)) (and (= 0 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@617)))
$generated@@618)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 (T@U Int) Int)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 () T@T)
(declare-fun $generated@@192 (Int) Bool)
(declare-fun $generated@@196 (T@T) T@U)
(declare-fun $generated@@197 (T@U) Int)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@204 (T@U T@U T@U) Bool)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 () T@T)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@212 (T@T T@T) T@U)
(declare-fun $generated@@213 (T@T T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@215 (T@T) T@T)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@T T@T) T@U)
(declare-fun $generated@@231 (T@T T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 () T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@U Int) T@U)
(declare-fun $generated@@335 (T@U) Int)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@380 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert  (and (= ($generated@@1 $generated@@191) 13) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@193)) $generated@@191)
 :pattern ( ($generated@@190 $generated@@193))
))))
(assert  (=> true (forall (($generated@@194 T@U) ($generated@@195 Int) ) (!  (=> (and (= (type $generated@@194) $generated@@191) true) (and (=> (<= 0 $generated@@195) ($generated@@192 (- $generated@@195 1))) (= ($generated@@189 ($generated@@190 $generated@@194) $generated@@195) (ite (< $generated@@195 0) 0 (+ 1 ($generated@@189 $generated@@194 (- $generated@@195 1)))))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@194) $generated@@195))
))))
(assert  (and (and (forall (($generated@@200 T@T) ) (= ($generated@@1 ($generated@@198 $generated@@200)) 14)) (forall (($generated@@201 T@T) ) (! (= ($generated@@199 ($generated@@198 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@198 $generated@@201))
))) (forall (($generated@@202 T@T) ) (! (= (type ($generated@@196 $generated@@202)) ($generated@@198 $generated@@202))
 :pattern ( ($generated@@196 $generated@@202))
))))
(assert (forall (($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@203)) 0)
 :pattern ( ($generated@@196 $generated@@203))
)))
(assert  (and (= ($generated@@1 $generated@@206) 15) (forall (($generated@@207 T@U) ) (! (= (type ($generated@@205 $generated@@207)) $generated@@206)
 :pattern ( ($generated@@205 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and (= (type $generated@@209) $generated@@61) (= (type $generated@@210) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@204 ($generated@@205 $generated@@208) $generated@@209 $generated@@210) ($generated@@69 $generated@@208 $generated@@209 $generated@@210)))
 :pattern ( ($generated@@204 ($generated@@205 $generated@@208) $generated@@209 $generated@@210))
)))
(assert  (and (and (and (and (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (= ($generated@@1 ($generated@@213 $generated@@216 $generated@@217)) 16)) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@214 ($generated@@213 $generated@@218 $generated@@219)) $generated@@218)
 :pattern ( ($generated@@213 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (! (= ($generated@@215 ($generated@@213 $generated@@220 $generated@@221)) $generated@@221)
 :pattern ( ($generated@@213 $generated@@220 $generated@@221))
))) (forall (($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@214 (type $generated@@222))))
(= (type ($generated@@211 $generated@@222)) ($generated@@71 $generated@@223 $generated@@4)))
 :pattern ( ($generated@@211 $generated@@222))
))) (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (! (= (type ($generated@@212 $generated@@224 $generated@@225)) ($generated@@213 $generated@@224 $generated@@225))
 :pattern ( ($generated@@212 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@T) ) (! (let (($generated@@228 (type $generated@@226)))
 (not ($generated@@0 ($generated@@76 ($generated@@211 ($generated@@212 $generated@@228 $generated@@227)) $generated@@226))))
 :pattern ( (let (($generated@@228 (type $generated@@226)))
($generated@@76 ($generated@@211 ($generated@@212 $generated@@228 $generated@@227)) $generated@@226)))
)))
(assert  (and (and (and (and (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (= ($generated@@1 ($generated@@231 $generated@@234 $generated@@235)) 17)) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@236 $generated@@237)) $generated@@236)
 :pattern ( ($generated@@231 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@231 $generated@@238 $generated@@239)) $generated@@239)
 :pattern ( ($generated@@231 $generated@@238 $generated@@239))
))) (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@232 (type $generated@@240))))
(= (type ($generated@@229 $generated@@240)) ($generated@@71 $generated@@241 $generated@@4)))
 :pattern ( ($generated@@229 $generated@@240))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= (type ($generated@@230 $generated@@242 $generated@@243)) ($generated@@231 $generated@@242 $generated@@243))
 :pattern ( ($generated@@230 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (let (($generated@@246 (type $generated@@244)))
 (not ($generated@@0 ($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244))))
 :pattern ( (let (($generated@@246 (type $generated@@244)))
($generated@@76 ($generated@@229 ($generated@@230 $generated@@246 $generated@@245)) $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@215 (type $generated@@247))))
(let (($generated@@249 ($generated@@214 (type $generated@@247))))
 (=> (= (type $generated@@247) ($generated@@213 $generated@@249 $generated@@248)) (or (= $generated@@247 ($generated@@212 $generated@@249 $generated@@248)) (exists (($generated@@250 T@U) ) (!  (and (= (type $generated@@250) $generated@@249) ($generated@@0 ($generated@@76 ($generated@@211 $generated@@247) $generated@@250)))
 :no-pattern (type $generated@@250)
 :no-pattern ($generated $generated@@250)
 :no-pattern ($generated@@0 $generated@@250)
))))))
 :pattern ( ($generated@@211 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@233 (type $generated@@251))))
(let (($generated@@253 ($generated@@232 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@231 $generated@@253 $generated@@252)) (or (= $generated@@251 ($generated@@230 $generated@@253 $generated@@252)) (exists (($generated@@254 T@U) ) (!  (and (= (type $generated@@254) $generated@@253) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@251) $generated@@254)))
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
))))))
 :pattern ( ($generated@@229 $generated@@251))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@61)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@257) ($generated@@71 $generated@@206 $generated@@4)) (= (type $generated@@258) $generated@@61)) (= (type $generated@@259) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@257 ($generated@@255 $generated@@258) $generated@@259) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@206) ($generated@@0 ($generated@@76 $generated@@257 $generated@@260))) ($generated@@204 $generated@@260 $generated@@258 $generated@@259))
 :pattern ( ($generated@@76 $generated@@257 $generated@@260))
))))
 :pattern ( ($generated@@69 $generated@@257 ($generated@@255 $generated@@258) $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@61)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@263) ($generated@@71 $generated@@206 $generated@@4)) (= (type $generated@@264) $generated@@61)) (= (type $generated@@265) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@263 ($generated@@261 $generated@@264) $generated@@265) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@206) ($generated@@0 ($generated@@76 $generated@@263 $generated@@266))) ($generated@@204 $generated@@266 $generated@@264 $generated@@265))
 :pattern ( ($generated@@76 $generated@@263 $generated@@266))
))))
 :pattern ( ($generated@@69 $generated@@263 ($generated@@261 $generated@@264) $generated@@265))
)))
(assert  (and (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@267 $generated@@269 $generated@@270)) $generated@@61)
 :pattern ( ($generated@@267 $generated@@269 $generated@@270))
)) (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@215 (type $generated@@271))))
(let (($generated@@273 ($generated@@214 (type $generated@@271))))
(= (type ($generated@@268 $generated@@271)) ($generated@@71 $generated@@273 $generated@@272))))
 :pattern ( ($generated@@268 $generated@@271))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (= (type $generated@@274) ($generated@@213 $generated@@206 $generated@@206)) (= (type $generated@@275) $generated@@61)) (= (type $generated@@276) $generated@@61)) (= (type $generated@@277) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@274 ($generated@@267 $generated@@275 $generated@@276) $generated@@277) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@206) ($generated@@0 ($generated@@76 ($generated@@211 $generated@@274) $generated@@278))) (and ($generated@@204 ($generated@@76 ($generated@@268 $generated@@274) $generated@@278) $generated@@276 $generated@@277) ($generated@@204 $generated@@278 $generated@@275 $generated@@277)))
 :pattern ( ($generated@@76 ($generated@@268 $generated@@274) $generated@@278))
 :pattern ( ($generated@@76 ($generated@@211 $generated@@274) $generated@@278))
))))
 :pattern ( ($generated@@69 $generated@@274 ($generated@@267 $generated@@275 $generated@@276) $generated@@277))
)))
(assert  (and (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! (= (type ($generated@@279 $generated@@281 $generated@@282)) $generated@@61)
 :pattern ( ($generated@@279 $generated@@281 $generated@@282))
)) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@233 (type $generated@@283))))
(let (($generated@@285 ($generated@@232 (type $generated@@283))))
(= (type ($generated@@280 $generated@@283)) ($generated@@71 $generated@@285 $generated@@284))))
 :pattern ( ($generated@@280 $generated@@283))
))))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (= (type $generated@@286) ($generated@@231 $generated@@206 $generated@@206)) (= (type $generated@@287) $generated@@61)) (= (type $generated@@288) $generated@@61)) (= (type $generated@@289) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@286 ($generated@@279 $generated@@287 $generated@@288) $generated@@289) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@206) ($generated@@0 ($generated@@76 ($generated@@229 $generated@@286) $generated@@290))) (and ($generated@@204 ($generated@@76 ($generated@@280 $generated@@286) $generated@@290) $generated@@288 $generated@@289) ($generated@@204 $generated@@290 $generated@@287 $generated@@289)))
 :pattern ( ($generated@@76 ($generated@@280 $generated@@286) $generated@@290))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@286) $generated@@290))
))))
 :pattern ( ($generated@@69 $generated@@286 ($generated@@279 $generated@@287 $generated@@288) $generated@@289))
)))
(assert  (=> true (forall (($generated@@291 T@U) ($generated@@292 Int) ) (!  (=> (and (= (type $generated@@291) $generated@@191) true) (and (=> (not ($generated@@0 ($generated@@185 ($generated@@11 (< $generated@@292 0))))) ($generated@@192 ($generated@@183 (- $generated@@292 1)))) (= ($generated@@189 ($generated@@190 $generated@@291) ($generated@@183 $generated@@292)) (ite (< $generated@@292 0) 0 (+ 1 ($generated@@189 ($generated@@190 $generated@@291) ($generated@@183 (- $generated@@292 1))))))))
 :weight 3
 :pattern ( ($generated@@189 ($generated@@190 $generated@@291) ($generated@@183 $generated@@292)))
))))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@71 $generated@@294 $generated@@4))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@233 (type $generated@@295))))
(let (($generated@@297 ($generated@@232 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@231 $generated@@297 $generated@@296)) (= (= $generated@@295 ($generated@@230 $generated@@297 $generated@@296)) (= ($generated@@229 $generated@@295) ($generated@@293 $generated@@297))))))
 :pattern ( ($generated@@229 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@199 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@198 $generated@@299)) (<= 0 ($generated@@197 $generated@@298))))
 :pattern ( ($generated@@197 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@61)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@61) (= (type $generated@@303) $generated@@61)) (= ($generated@@300 ($generated@@267 $generated@@302 $generated@@303)) $generated@@302))
 :pattern ( ($generated@@267 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@61)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@61) (= (type $generated@@307) $generated@@61)) (= ($generated@@304 ($generated@@267 $generated@@306 $generated@@307)) $generated@@307))
 :pattern ( ($generated@@267 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@61) (= (type $generated@@309) $generated@@61)) (= ($generated@@67 ($generated@@267 $generated@@308 $generated@@309)) $generated@@58))
 :pattern ( ($generated@@267 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@61)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@61) (= (type $generated@@313) $generated@@61)) (= ($generated@@310 ($generated@@279 $generated@@312 $generated@@313)) $generated@@312))
 :pattern ( ($generated@@279 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@61)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@61) (= (type $generated@@317) $generated@@61)) (= ($generated@@314 ($generated@@279 $generated@@316 $generated@@317)) $generated@@317))
 :pattern ( ($generated@@279 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@61) (= (type $generated@@319) $generated@@61)) (= ($generated@@67 ($generated@@279 $generated@@318 $generated@@319)) $generated@@59))
 :pattern ( ($generated@@279 $generated@@318 $generated@@319))
)))
(assert  (and (forall (($generated@@322 T@U) ) (! (= (type ($generated@@320 $generated@@322)) $generated@@191)
 :pattern ( ($generated@@320 $generated@@322))
)) (= (type $generated@@321) $generated@@191)))
(assert (forall (($generated@@323 T@U) ($generated@@324 Int) ) (!  (=> (= (type $generated@@323) $generated@@191) (= ($generated@@189 $generated@@323 $generated@@324) ($generated@@189 $generated@@321 $generated@@324)))
 :pattern ( ($generated@@189 ($generated@@320 $generated@@323) $generated@@324))
)))
(assert  (and (forall (($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@325 $generated@@327))
)) (forall (($generated@@328 T@U) ($generated@@329 Int) ) (! (let (($generated@@330 ($generated@@199 (type $generated@@328))))
(= (type ($generated@@326 $generated@@328 $generated@@329)) $generated@@330))
 :pattern ( ($generated@@326 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@331) ($generated@@198 $generated@@206)) (= (type $generated@@332) $generated@@61)) (= (type $generated@@333) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@331 ($generated@@325 $generated@@332) $generated@@333) (forall (($generated@@334 Int) ) (!  (=> (and (<= 0 $generated@@334) (< $generated@@334 ($generated@@197 $generated@@331))) ($generated@@204 ($generated@@326 $generated@@331 $generated@@334) $generated@@332 $generated@@333))
 :pattern ( ($generated@@326 $generated@@331 $generated@@334))
))))
 :pattern ( ($generated@@69 $generated@@331 ($generated@@325 $generated@@332) $generated@@333))
)))
(assert (forall (($generated@@336 Int) ) (! (= ($generated@@335 ($generated@@70 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@70 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@61) (= ($generated@@337 ($generated@@255 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@255 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@61) (= ($generated@@67 ($generated@@255 $generated@@340)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@341 ($generated@@261 $generated@@343)) $generated@@343))
 :pattern ( ($generated@@261 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@67 ($generated@@261 $generated@@344)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@344))
)))
(assert  (and (forall (($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@347)) $generated@@61)
 :pattern ( ($generated@@345 $generated@@347))
)) (forall (($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@348)) $generated@@61)
 :pattern ( ($generated@@346 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@61) (= ($generated@@346 ($generated@@345 $generated@@349)) $generated@@349))
 :pattern ( ($generated@@345 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@61) (= ($generated@@67 ($generated@@345 $generated@@350)) $generated@@56))
 :pattern ( ($generated@@345 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (= (type ($generated@@351 $generated@@352)) $generated@@61)
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@351 ($generated@@325 $generated@@353)) $generated@@353))
 :pattern ( ($generated@@325 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@61) (= ($generated@@67 ($generated@@325 $generated@@354)) $generated@@57))
 :pattern ( ($generated@@325 $generated@@354))
)))
(assert (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
(= ($generated@@355 $generated@@359 ($generated@@205 $generated@@358)) $generated@@358))
 :pattern ( ($generated@@205 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 Int) ) (!  (=> (= (type $generated@@360) $generated@@191) (= ($generated@@189 ($generated@@190 $generated@@360) $generated@@361) ($generated@@189 $generated@@360 $generated@@361)))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
 (not ($generated@@0 ($generated@@76 ($generated@@293 $generated@@363) $generated@@362))))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@76 ($generated@@293 $generated@@363) $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@71 $generated@@206 $generated@@2)) (= (type $generated@@365) $generated@@61)) (= (type $generated@@366) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@364 ($generated@@345 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@206) (< 0 ($generated ($generated@@76 $generated@@364 $generated@@367)))) ($generated@@204 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@76 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@69 $generated@@364 ($generated@@345 $generated@@365) $generated@@366))
)))
(assert  (=> true (forall (($generated@@368 T@U) ($generated@@369 Int) ) (!  (=> (and (= (type $generated@@368) $generated@@191) true) true)
 :pattern ( ($generated@@189 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@370 Int) ) (! (= ($generated@@205 ($generated@@8 ($generated@@183 $generated@@370))) ($generated@@185 ($generated@@205 ($generated@@8 $generated@@370))))
 :pattern ( ($generated@@205 ($generated@@8 ($generated@@183 $generated@@370))))
)))
(assert (forall (($generated@@371 T@U) ) (! (= ($generated@@205 ($generated@@185 $generated@@371)) ($generated@@185 ($generated@@205 $generated@@371)))
 :pattern ( ($generated@@205 ($generated@@185 $generated@@371)))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@199 (type $generated@@372))))
 (=> (and (= (type $generated@@372) ($generated@@198 $generated@@373)) (= ($generated@@197 $generated@@372) 0)) (= $generated@@372 ($generated@@196 $generated@@373))))
 :pattern ( ($generated@@197 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@375) $generated@@2)) ($generated@@69 $generated@@375 $generated@@46 $generated@@374))
 :pattern ( ($generated@@69 $generated@@375 $generated@@46 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@377) $generated@@3)) ($generated@@69 $generated@@377 $generated@@47 $generated@@376))
 :pattern ( ($generated@@69 $generated@@377 $generated@@47 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@379) $generated@@4)) ($generated@@69 $generated@@379 $generated@@44 $generated@@378))
 :pattern ( ($generated@@69 $generated@@379 $generated@@44 $generated@@378))
)))
(assert (= ($generated@@1 $generated@@380) 18))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@382) $generated@@380)) ($generated@@69 $generated@@382 $generated@@45 $generated@@381))
 :pattern ( ($generated@@69 $generated@@382 $generated@@45 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@384) $generated@@206)) ($generated@@69 $generated@@384 $generated@@48 $generated@@383))
 :pattern ( ($generated@@69 $generated@@384 $generated@@48 $generated@@383))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@385 () T@U)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 () T@U)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () Int)
(declare-fun $generated@@392 () Int)
(declare-fun $generated@@393 () Int)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 (T@U) Bool)
(declare-fun $generated@@396 (T@U) Bool)
(declare-fun $generated@@397 () Int)
(assert  (and (and (and (and (and (= (type $generated@@385) $generated@@191) (= (type $generated@@386) $generated@@191)) (= (type $generated@@387) $generated@@191)) (= (type $generated@@388) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@389) $generated@@72)) (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@398  (=> (= $generated@@385 ($generated@@190 $generated@@386)) (=> (and (= $generated@@387 ($generated@@190 ($generated@@190 $generated@@386))) (= ($generated@@320 $generated@@386) $generated@@386)) (=> (and (and (= $generated@@388 ($generated@@128 $generated@@389 $generated@@390 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@391) $generated@@46 $generated@@390)) (and ($generated@@192 $generated@@391) ($generated@@192 $generated@@391))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@189 $generated@@387 $generated@@391) ($generated@@183 0))) (=> (= ($generated@@189 $generated@@385 $generated@@391) ($generated@@183 0)) (=> (and (and (= $generated@@392 ($generated@@183 (- 0 1))) ($generated@@69 ($generated@@8 $generated@@392) $generated@@46 $generated@@390)) (and ($generated@@192 ($generated@@183 (- 0 1))) ($generated@@192 ($generated@@183 (- 0 1))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@183 ($generated@@189 $generated@@387 ($generated@@183 (- 0 1)))) ($generated@@183 0))) (=> (and (= ($generated@@183 ($generated@@189 $generated@@385 ($generated@@183 (- 0 1)))) ($generated@@183 0)) ($generated@@69 ($generated@@8 $generated@@393) $generated@@46 $generated@@390)) (=> (and (and (and ($generated@@192 $generated@@393) (= $generated@@394 (- $generated@@393 3))) (and ($generated@@69 ($generated@@8 $generated@@394) $generated@@46 $generated@@390) ($generated@@192 (- $generated@@393 3)))) (and (and ($generated@@192 $generated@@393) ($generated@@192 (- $generated@@393 3))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@189 $generated@@387 $generated@@393) (+ 3 ($generated@@189 $generated@@387 (- $generated@@393 3)))))))))))))))
(let (($generated@@399  (=> (and ($generated@@395 $generated@@390) ($generated@@396 $generated@@390)) (=> (and (and (= 0 $generated@@397) (> $generated@@393 5)) (and (< $generated@@391 0) (= (ControlFlow 0 5) 2))) $generated@@398))))
$generated@@399)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int) Int)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@134 $generated@@139)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@139))
))) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@138 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@138 $generated@@140))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@142 T@U) ($generated@@143 Int) ) (!  (=> (and (= (type $generated@@142) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@143)) (not (= 0 $generated@@132)))) (and (=> (not ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@143 0))))) ($generated@@137 ($generated@@135 (- $generated@@143 1)))) (= ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)) (ite (< $generated@@143 0) 0 (+ 1 ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 (- $generated@@143 1))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)))
))))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@75 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@64)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 17)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@67 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@77) (= (type $generated@@229) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@230) ($generated@@66 $generated@@4))) (= (type $generated@@232) $generated@@77)) (= (type $generated@@233) ($generated@@66 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@148)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@157)) (= (type $generated@@242) $generated@@157)) (= ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@148) (= (type $generated@@244) $generated@@148)) (= ($generated@@154 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@154 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) ($generated@@0 ($generated@@81 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@81 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@253) $generated@@64)) (= ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@157) ($generated@@0 ($generated@@81 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@81 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@135 $generated@@255) $generated@@255)
 :pattern ( ($generated@@135 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@138 $generated@@256) $generated@@256)
 :pattern ( ($generated@@138 $generated@@256))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@136) (or ($generated@@137 $generated@@258) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@133 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@157)) (= (type $generated@@264) $generated@@157)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@148) (= ($generated@@146 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@148) ($generated@@146 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@157) (= (type $generated@@271) $generated@@157)) (= $generated@@269 ($generated@@235 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@146 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 18)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@157)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@74 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@76 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@79 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@76 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@81 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 19)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 20)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@76 $generated@@328 $generated@@2)) (= ($generated@@163 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@81 $generated@@327 $generated@@329))) (<= ($generated ($generated@@81 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@163 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@295 (type $generated@@330))))
(let (($generated@@332 ($generated@@294 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@293 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@292 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@291 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@295 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@295 (type $generated@@337))))
(let (($generated@@339 ($generated@@294 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@293 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@292 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@313 (type $generated@@341))))
(let (($generated@@343 ($generated@@312 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@311 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@310 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@309 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@313 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@313 (type $generated@@348))))
(let (($generated@@350 ($generated@@312 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@311 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@310 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@353) $generated@@64)) (= ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@352 $generated@@354)))) ($generated@@236 $generated@@354 $generated@@353))
 :pattern ( ($generated@@81 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@157) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@260 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@157) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@260 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@81 ($generated@@286 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@81 ($generated@@286 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@295 (type $generated@@371))))
(let (($generated@@373 ($generated@@294 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@375) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375)))) (= ($generated@@81 ($generated@@367 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@313 (type $generated@@379))))
(let (($generated@@381 ($generated@@312 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@383) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383)))) (= ($generated@@81 ($generated@@377 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@294 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@293 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@312 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@311 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))) (and ($generated@@260 ($generated@@81 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@260 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@64)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))) (and ($generated@@260 ($generated@@81 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@260 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@313 (type $generated@@412))))
(let (($generated@@414 ($generated@@312 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@311 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@310 $generated@@414 $generated@@413)) (= ($generated@@309 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@309 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@313 (type $generated@@415))))
(let (($generated@@417 ($generated@@312 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@311 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@310 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@313 (type $generated@@418))))
(let (($generated@@420 ($generated@@312 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@311 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@310 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@157))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@295 (type $generated@@421))))
(let (($generated@@423 ($generated@@294 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@293 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@292 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@157) (= (type $generated@@425) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@421) ($generated@@280 ($generated@@235 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@313 (type $generated@@426))))
(let (($generated@@428 ($generated@@312 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@311 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@310 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@157) (= (type $generated@@430) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@426) ($generated@@280 ($generated@@235 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@157) ($generated@@236 $generated@@431 $generated@@46)) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@144 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@157) ($generated@@236 $generated@@432 $generated@@47)) (and (= ($generated@@280 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@144 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@157) ($generated@@236 $generated@@433 $generated@@44)) (and (= ($generated@@280 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@144 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 21))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@236 $generated@@435 $generated@@45)) (and (= ($generated@@280 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@144 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@236 ($generated@@280 $generated@@436) $generated@@437) ($generated@@144 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@236 ($generated@@280 $generated@@436) $generated@@437))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (= (type $generated@@438) $generated@@136) (or ($generated@@137 $generated@@439) (not (= 0 $generated@@132)))) (and (=> (<= 0 $generated@@439) ($generated@@137 (- $generated@@439 1))) (= ($generated@@133 ($generated@@134 $generated@@438) $generated@@439) (ite (< $generated@@439 0) 0 (+ 1 ($generated@@133 $generated@@438 (- $generated@@439 1)))))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@438) $generated@@439))
))))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@79 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@76 $generated@@441 $generated@@2)) (<= 0 ($generated@@285 $generated@@440))))
 :pattern ( ($generated@@285 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@275 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@274 $generated@@443)) (<= 0 ($generated@@273 $generated@@442))))
 :pattern ( ($generated@@273 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@394 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@394 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@394 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@402 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@72 ($generated@@402 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@157) (= (type $generated@@465) $generated@@157)) (= ($generated@@266 ($generated@@235 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@147 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@147 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@147 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@147 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) (= (type $generated@@475) $generated@@157)) (= ($generated@@155 ($generated@@235 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@235 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@157) (= (type $generated@@477) $generated@@157)) (= ($generated@@156 ($generated@@235 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@235 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@136)
 :pattern ( ($generated@@478 $generated@@480))
)) (= (type $generated@@479) $generated@@136)))
(assert (forall (($generated@@481 T@U) ($generated@@482 Int) ) (!  (=> (= (type $generated@@481) $generated@@136) (= ($generated@@133 $generated@@481 $generated@@482) ($generated@@133 $generated@@479 $generated@@482)))
 :pattern ( ($generated@@133 ($generated@@478 $generated@@481) $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@275 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@274 $generated@@157)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@273 $generated@@489))) ($generated@@260 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@245 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@245 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@250 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@250 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@250 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@162 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@162 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@162 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@366 $generated@@512 ($generated@@280 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@280 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))) (and ($generated@@236 ($generated@@81 ($generated@@367 $generated@@513) $generated@@516) $generated@@515) ($generated@@236 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))) (and ($generated@@236 ($generated@@81 ($generated@@377 $generated@@517) $generated@@520) $generated@@519) ($generated@@236 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@157) (= (type $generated@@524) $generated@@157)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@235 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@235 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@157) (= (type $generated@@526) $generated@@157)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@235 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@235 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 Int) ) (!  (=> (= (type $generated@@527) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@527) $generated@@528) ($generated@@133 $generated@@527 $generated@@528)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@157) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529)) $generated@@529) ($generated@@144 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529) ($generated@@394 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@157) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534))) (and (= ($generated@@280 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532)) $generated@@532) ($generated@@144 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532) ($generated@@402 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@157)) ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536))) (and (= ($generated@@280 ($generated@@366 $generated@@148 $generated@@537)) $generated@@537) ($generated@@144 ($generated@@366 $generated@@148 $generated@@537) ($generated@@147 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@410 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@147 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@148) (= ($generated@@521 ($generated@@280 $generated@@544)) ($generated@@522 $generated@@544)))
 :pattern ( ($generated@@521 ($generated@@280 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) ($generated@@236 $generated@@545 ($generated@@75 0))) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@545)) $generated@@545) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@236 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@157) (= (type $generated@@547) $generated@@64)) ($generated@@236 $generated@@546 ($generated@@245 $generated@@547))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546)) $generated@@546) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546) ($generated@@245 $generated@@547))))
 :pattern ( ($generated@@236 $generated@@546 ($generated@@245 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@157) (= (type $generated@@549) $generated@@64)) ($generated@@236 $generated@@548 ($generated@@250 $generated@@549))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548)) $generated@@548) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548) ($generated@@250 $generated@@549))))
 :pattern ( ($generated@@236 $generated@@548 ($generated@@250 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@157) (= (type $generated@@551) $generated@@64)) ($generated@@236 $generated@@550 ($generated@@162 $generated@@551))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550)) $generated@@550) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550) ($generated@@162 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@162 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@157) (= (type $generated@@553) $generated@@64)) ($generated@@236 $generated@@552 ($generated@@483 $generated@@553))) (and (= ($generated@@280 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552)) $generated@@552) ($generated@@144 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552) ($generated@@483 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 ($generated@@483 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@260 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@148) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@560) (and ($generated@@146 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@148) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@564) (and ($generated@@146 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@157) (= (type $generated@@567) $generated@@157)) (= ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)) ($generated@@138 ($generated@@235 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))) ($generated@@138 ($generated@@280 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@280 ($generated@@138 $generated@@569)) ($generated@@138 ($generated@@280 $generated@@569)))
 :pattern ( ($generated@@280 ($generated@@138 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@275 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@274 $generated@@571)) (= ($generated@@273 $generated@@570) 0)) (= $generated@@570 ($generated@@272 $generated@@571))))
 :pattern ( ($generated@@273 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@285 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@434)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@157)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@274 $generated@@157)) (= (type $generated@@587) $generated@@64)) (= ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@273 $generated@@586))) ($generated@@236 ($generated@@484 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@484 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@274 $generated@@157)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@273 $generated@@590))) (< ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594))) (and (and ($generated@@144 ($generated@@291 $generated@@592) ($generated@@245 $generated@@593)) ($generated@@144 ($generated@@334 $generated@@592) ($generated@@245 $generated@@594))) ($generated@@144 ($generated@@365 $generated@@592) ($generated@@245 ($generated@@147 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597))) (and (and ($generated@@144 ($generated@@309 $generated@@595) ($generated@@250 $generated@@596)) ($generated@@144 ($generated@@345 $generated@@595) ($generated@@250 $generated@@597))) ($generated@@144 ($generated@@376 $generated@@595) ($generated@@250 ($generated@@147 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@144 $generated@@598 $generated@@46))
 :pattern ( ($generated@@144 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@144 $generated@@599 $generated@@47))
 :pattern ( ($generated@@144 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@144 $generated@@600 $generated@@44))
 :pattern ( ($generated@@144 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@434) ($generated@@144 $generated@@601 $generated@@45))
 :pattern ( ($generated@@144 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@157) ($generated@@144 $generated@@602 $generated@@48))
 :pattern ( ($generated@@144 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@607) $generated@@77)) (= (type $generated@@608) ($generated@@169 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@610  (=> (<= 0 $generated@@603) (=> (and (= $generated@@604 (- $generated@@603 1)) ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@605)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603))) (=> (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@604 $generated@@603))))))))
(let (($generated@@611 true))
(let (($generated@@612  (=> (= $generated@@606 ($generated@@223 $generated@@607 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@611) (=> (= (ControlFlow 0 6) 4) $generated@@610)))))
(let (($generated@@613 true))
(let (($generated@@614  (=> (= $generated@@608 ($generated@@168 $generated@@607 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@613) (=> (= (ControlFlow 0 7) 6) $generated@@612)))))
(let (($generated@@615  (=> (and (and ($generated@@259 $generated@@605) ($generated@@609 $generated@@605)) (and (= 0 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@614)))
$generated@@615)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int) Int)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@134 $generated@@139)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@139))
))) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@138 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@138 $generated@@140))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@142 T@U) ($generated@@143 Int) ) (!  (=> (and (= (type $generated@@142) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@143)) (not (= 0 $generated@@132)))) (and (=> (not ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@143 0))))) ($generated@@137 ($generated@@135 (- $generated@@143 1)))) (= ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)) (ite (< $generated@@143 0) 0 (+ 1 ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 (- $generated@@143 1))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)))
))))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@75 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@64)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 17)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@67 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@77) (= (type $generated@@229) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@230) ($generated@@66 $generated@@4))) (= (type $generated@@232) $generated@@77)) (= (type $generated@@233) ($generated@@66 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@148)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@157)) (= (type $generated@@242) $generated@@157)) (= ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@148) (= (type $generated@@244) $generated@@148)) (= ($generated@@154 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@154 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) ($generated@@0 ($generated@@81 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@81 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@253) $generated@@64)) (= ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@157) ($generated@@0 ($generated@@81 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@81 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@135 $generated@@255) $generated@@255)
 :pattern ( ($generated@@135 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@138 $generated@@256) $generated@@256)
 :pattern ( ($generated@@138 $generated@@256))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@136) (or ($generated@@137 $generated@@258) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@133 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@157)) (= (type $generated@@264) $generated@@157)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@148) (= ($generated@@146 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@148) ($generated@@146 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@157) (= (type $generated@@271) $generated@@157)) (= $generated@@269 ($generated@@235 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@146 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 18)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@157)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@74 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@76 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@79 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@76 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@81 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 19)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 20)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@76 $generated@@328 $generated@@2)) (= ($generated@@163 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@81 $generated@@327 $generated@@329))) (<= ($generated ($generated@@81 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@163 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@295 (type $generated@@330))))
(let (($generated@@332 ($generated@@294 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@293 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@292 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@291 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@295 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@295 (type $generated@@337))))
(let (($generated@@339 ($generated@@294 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@293 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@292 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@313 (type $generated@@341))))
(let (($generated@@343 ($generated@@312 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@311 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@310 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@309 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@313 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@313 (type $generated@@348))))
(let (($generated@@350 ($generated@@312 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@311 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@310 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@353) $generated@@64)) (= ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@352 $generated@@354)))) ($generated@@236 $generated@@354 $generated@@353))
 :pattern ( ($generated@@81 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@157) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@260 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@157) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@260 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@81 ($generated@@286 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@81 ($generated@@286 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@295 (type $generated@@371))))
(let (($generated@@373 ($generated@@294 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@375) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375)))) (= ($generated@@81 ($generated@@367 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@313 (type $generated@@379))))
(let (($generated@@381 ($generated@@312 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@383) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383)))) (= ($generated@@81 ($generated@@377 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@294 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@293 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@312 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@311 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))) (and ($generated@@260 ($generated@@81 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@260 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@64)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))) (and ($generated@@260 ($generated@@81 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@260 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@313 (type $generated@@412))))
(let (($generated@@414 ($generated@@312 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@311 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@310 $generated@@414 $generated@@413)) (= ($generated@@309 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@309 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@313 (type $generated@@415))))
(let (($generated@@417 ($generated@@312 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@311 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@310 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@313 (type $generated@@418))))
(let (($generated@@420 ($generated@@312 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@311 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@310 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@157))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@295 (type $generated@@421))))
(let (($generated@@423 ($generated@@294 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@293 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@292 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@157) (= (type $generated@@425) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@421) ($generated@@280 ($generated@@235 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@313 (type $generated@@426))))
(let (($generated@@428 ($generated@@312 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@311 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@310 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@157) (= (type $generated@@430) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@426) ($generated@@280 ($generated@@235 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@157) ($generated@@236 $generated@@431 $generated@@46)) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@144 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@157) ($generated@@236 $generated@@432 $generated@@47)) (and (= ($generated@@280 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@144 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@157) ($generated@@236 $generated@@433 $generated@@44)) (and (= ($generated@@280 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@144 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 21))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@236 $generated@@435 $generated@@45)) (and (= ($generated@@280 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@144 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@236 ($generated@@280 $generated@@436) $generated@@437) ($generated@@144 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@236 ($generated@@280 $generated@@436) $generated@@437))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (= (type $generated@@438) $generated@@136) (or ($generated@@137 $generated@@439) (not (= 0 $generated@@132)))) (and (=> (<= 0 $generated@@439) ($generated@@137 (- $generated@@439 1))) (= ($generated@@133 ($generated@@134 $generated@@438) $generated@@439) (ite (< $generated@@439 0) 0 (+ 1 ($generated@@133 $generated@@438 (- $generated@@439 1)))))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@438) $generated@@439))
))))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@79 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@76 $generated@@441 $generated@@2)) (<= 0 ($generated@@285 $generated@@440))))
 :pattern ( ($generated@@285 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@275 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@274 $generated@@443)) (<= 0 ($generated@@273 $generated@@442))))
 :pattern ( ($generated@@273 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@394 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@394 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@394 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@402 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@72 ($generated@@402 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@157) (= (type $generated@@465) $generated@@157)) (= ($generated@@266 ($generated@@235 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@147 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@147 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@147 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@147 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) (= (type $generated@@475) $generated@@157)) (= ($generated@@155 ($generated@@235 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@235 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@157) (= (type $generated@@477) $generated@@157)) (= ($generated@@156 ($generated@@235 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@235 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@136)
 :pattern ( ($generated@@478 $generated@@480))
)) (= (type $generated@@479) $generated@@136)))
(assert (forall (($generated@@481 T@U) ($generated@@482 Int) ) (!  (=> (= (type $generated@@481) $generated@@136) (= ($generated@@133 $generated@@481 $generated@@482) ($generated@@133 $generated@@479 $generated@@482)))
 :pattern ( ($generated@@133 ($generated@@478 $generated@@481) $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@275 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@274 $generated@@157)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@273 $generated@@489))) ($generated@@260 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@245 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@245 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@250 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@250 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@250 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@162 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@162 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@162 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@366 $generated@@512 ($generated@@280 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@280 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))) (and ($generated@@236 ($generated@@81 ($generated@@367 $generated@@513) $generated@@516) $generated@@515) ($generated@@236 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))) (and ($generated@@236 ($generated@@81 ($generated@@377 $generated@@517) $generated@@520) $generated@@519) ($generated@@236 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@157) (= (type $generated@@524) $generated@@157)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@235 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@235 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@157) (= (type $generated@@526) $generated@@157)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@235 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@235 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 Int) ) (!  (=> (= (type $generated@@527) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@527) $generated@@528) ($generated@@133 $generated@@527 $generated@@528)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@157) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529)) $generated@@529) ($generated@@144 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529) ($generated@@394 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@157) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534))) (and (= ($generated@@280 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532)) $generated@@532) ($generated@@144 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532) ($generated@@402 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@157)) ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536))) (and (= ($generated@@280 ($generated@@366 $generated@@148 $generated@@537)) $generated@@537) ($generated@@144 ($generated@@366 $generated@@148 $generated@@537) ($generated@@147 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@410 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@147 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@148) (= ($generated@@521 ($generated@@280 $generated@@544)) ($generated@@522 $generated@@544)))
 :pattern ( ($generated@@521 ($generated@@280 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) ($generated@@236 $generated@@545 ($generated@@75 0))) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@545)) $generated@@545) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@236 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@157) (= (type $generated@@547) $generated@@64)) ($generated@@236 $generated@@546 ($generated@@245 $generated@@547))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546)) $generated@@546) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546) ($generated@@245 $generated@@547))))
 :pattern ( ($generated@@236 $generated@@546 ($generated@@245 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@157) (= (type $generated@@549) $generated@@64)) ($generated@@236 $generated@@548 ($generated@@250 $generated@@549))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548)) $generated@@548) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548) ($generated@@250 $generated@@549))))
 :pattern ( ($generated@@236 $generated@@548 ($generated@@250 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@157) (= (type $generated@@551) $generated@@64)) ($generated@@236 $generated@@550 ($generated@@162 $generated@@551))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550)) $generated@@550) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550) ($generated@@162 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@162 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@157) (= (type $generated@@553) $generated@@64)) ($generated@@236 $generated@@552 ($generated@@483 $generated@@553))) (and (= ($generated@@280 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552)) $generated@@552) ($generated@@144 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552) ($generated@@483 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 ($generated@@483 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@260 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@148) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@560) (and ($generated@@146 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@148) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@564) (and ($generated@@146 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@157) (= (type $generated@@567) $generated@@157)) (= ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)) ($generated@@138 ($generated@@235 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))) ($generated@@138 ($generated@@280 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@280 ($generated@@138 $generated@@569)) ($generated@@138 ($generated@@280 $generated@@569)))
 :pattern ( ($generated@@280 ($generated@@138 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@275 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@274 $generated@@571)) (= ($generated@@273 $generated@@570) 0)) (= $generated@@570 ($generated@@272 $generated@@571))))
 :pattern ( ($generated@@273 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@285 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@434)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@157)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@274 $generated@@157)) (= (type $generated@@587) $generated@@64)) (= ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@273 $generated@@586))) ($generated@@236 ($generated@@484 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@484 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@274 $generated@@157)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@273 $generated@@590))) (< ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594))) (and (and ($generated@@144 ($generated@@291 $generated@@592) ($generated@@245 $generated@@593)) ($generated@@144 ($generated@@334 $generated@@592) ($generated@@245 $generated@@594))) ($generated@@144 ($generated@@365 $generated@@592) ($generated@@245 ($generated@@147 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597))) (and (and ($generated@@144 ($generated@@309 $generated@@595) ($generated@@250 $generated@@596)) ($generated@@144 ($generated@@345 $generated@@595) ($generated@@250 $generated@@597))) ($generated@@144 ($generated@@376 $generated@@595) ($generated@@250 ($generated@@147 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@144 $generated@@598 $generated@@46))
 :pattern ( ($generated@@144 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@144 $generated@@599 $generated@@47))
 :pattern ( ($generated@@144 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@144 $generated@@600 $generated@@44))
 :pattern ( ($generated@@144 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@434) ($generated@@144 $generated@@601 $generated@@45))
 :pattern ( ($generated@@144 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@157) ($generated@@144 $generated@@602 $generated@@48))
 :pattern ( ($generated@@144 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@607) $generated@@77)) (= (type $generated@@608) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@136)) (= (type $generated@@610) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@612  (=> (<= 0 $generated@@603) (=> (and (= $generated@@604 (- $generated@@603 1)) ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@605)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603))) (=> (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@604 $generated@@603))))))))
(let (($generated@@613 true))
(let (($generated@@614  (=> (= $generated@@606 ($generated@@223 $generated@@607 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@613) (=> (= (ControlFlow 0 6) 4) $generated@@612)))))
(let (($generated@@615 true))
(let (($generated@@616  (=> (= $generated@@608 ($generated@@168 $generated@@607 $generated@@605 $generated@@60 false)) (=> (and (= ($generated@@478 $generated@@609) $generated@@609) (= ($generated@@478 $generated@@610) $generated@@610)) (and (=> (= (ControlFlow 0 7) 1) $generated@@615) (=> (= (ControlFlow 0 7) 6) $generated@@614))))))
(let (($generated@@617  (=> (and (and ($generated@@259 $generated@@605) ($generated@@611 $generated@@605)) (and (= 0 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@616)))
$generated@@617)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@T) T@U)
(declare-fun $generated@@200 (T@U) Int)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@207 (T@U T@U T@U) Bool)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@T T@T) T@U)
(declare-fun $generated@@216 (T@T T@T) T@T)
(declare-fun $generated@@217 (T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@233 (T@T T@T) T@U)
(declare-fun $generated@@234 (T@T T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 () T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@U Int) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@381 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))) (forall (($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(= (type ($generated@@133 $generated@@135)) $generated@@136))
 :pattern ( ($generated@@133 $generated@@135))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@137 T@U) ($generated@@138 Int) ) (!  (=> (and (= (type $generated@@137) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@138)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@138 0))))) ($generated@@132 ($generated@@130 (- $generated@@138 1)))) (= ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)) (ite (< $generated@@138 0) 0 (+ 1 ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 (- $generated@@138 1))))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@1 ($generated@@141 $generated@@145 $generated@@146)) 13)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@142 ($generated@@141 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@143 ($generated@@141 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@141 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@143 (type $generated@@151))))
(= (type ($generated@@139 $generated@@151 $generated@@152 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@139 $generated@@151 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(let (($generated@@160 (type $generated@@156)))
(= (type ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158)) ($generated@@141 $generated@@160 $generated@@159))))
 :pattern ( ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@143 (type $generated@@161))))
 (=> (= (type $generated@@164) $generated@@165) (= ($generated@@139 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@162 $generated@@163) $generated@@164)))
 :weight 0
))) (and (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@139 ($generated@@144 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@139 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@139 ($generated@@144 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@139 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or true (= ($generated@@139 ($generated@@144 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@139 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ) (! (= (type ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@141 $generated@@72 $generated@@4))
 :pattern ( ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@64 (type $generated@@193))))
 (=> (and (and (and (and (= (type $generated@@188) $generated@@72) (= (type $generated@@189) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@190) ($generated@@63 $generated@@4))) (= (type $generated@@192) $generated@@72)) (= (type $generated@@193) ($generated@@63 $generated@@194))) (= ($generated@@0 ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (not (= $generated@@192 $generated@@188)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@189 $generated@@192) $generated@@190))) $generated@@191))))
 :pattern ( ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@195 Int) ) (! (= ($generated@@130 $generated@@195) $generated@@195)
 :pattern ( ($generated@@130 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@133 $generated@@196) $generated@@196)
 :pattern ( ($generated@@133 $generated@@196))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@197 T@U) ($generated@@198 Int) ) (!  (=> (and (= (type $generated@@197) $generated@@131) (or ($generated@@132 $generated@@198) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@197 $generated@@198))
))))
(assert  (and (and (forall (($generated@@203 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@203)) 14)) (forall (($generated@@204 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@201 $generated@@204))
))) (forall (($generated@@205 T@T) ) (! (= (type ($generated@@199 $generated@@205)) ($generated@@201 $generated@@205))
 :pattern ( ($generated@@199 $generated@@205))
))))
(assert (forall (($generated@@206 T@T) ) (! (= ($generated@@200 ($generated@@199 $generated@@206)) 0)
 :pattern ( ($generated@@199 $generated@@206))
)))
(assert  (and (= ($generated@@1 $generated@@209) 15) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@208 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@208 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) $generated@@61) (= (type $generated@@213) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213) ($generated@@69 $generated@@211 $generated@@212 $generated@@213)))
 :pattern ( ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213))
)))
(assert  (and (and (and (and (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (= ($generated@@1 ($generated@@216 $generated@@219 $generated@@220)) 16)) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@217 ($generated@@216 $generated@@221 $generated@@222)) $generated@@221)
 :pattern ( ($generated@@216 $generated@@221 $generated@@222))
))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@218 ($generated@@216 $generated@@223 $generated@@224)) $generated@@224)
 :pattern ( ($generated@@216 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@217 (type $generated@@225))))
(= (type ($generated@@214 $generated@@225)) ($generated@@71 $generated@@226 $generated@@4)))
 :pattern ( ($generated@@214 $generated@@225))
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= (type ($generated@@215 $generated@@227 $generated@@228)) ($generated@@216 $generated@@227 $generated@@228))
 :pattern ( ($generated@@215 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@T) ) (! (let (($generated@@231 (type $generated@@229)))
 (not ($generated@@0 ($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229))))
 :pattern ( (let (($generated@@231 (type $generated@@229)))
($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229)))
)))
(assert  (and (and (and (and (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@237 $generated@@238)) 17)) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@239 $generated@@240)) $generated@@239)
 :pattern ( ($generated@@234 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@236 ($generated@@234 $generated@@241 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@234 $generated@@241 $generated@@242))
))) (forall (($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@235 (type $generated@@243))))
(= (type ($generated@@232 $generated@@243)) ($generated@@71 $generated@@244 $generated@@4)))
 :pattern ( ($generated@@232 $generated@@243))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= (type ($generated@@233 $generated@@245 $generated@@246)) ($generated@@234 $generated@@245 $generated@@246))
 :pattern ( ($generated@@233 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@T) ) (! (let (($generated@@249 (type $generated@@247)))
 (not ($generated@@0 ($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247))))
 :pattern ( (let (($generated@@249 (type $generated@@247)))
($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@218 (type $generated@@250))))
(let (($generated@@252 ($generated@@217 (type $generated@@250))))
 (=> (= (type $generated@@250) ($generated@@216 $generated@@252 $generated@@251)) (or (= $generated@@250 ($generated@@215 $generated@@252 $generated@@251)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@250) $generated@@253)))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@214 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@236 (type $generated@@254))))
(let (($generated@@256 ($generated@@235 (type $generated@@254))))
 (=> (= (type $generated@@254) ($generated@@234 $generated@@256 $generated@@255)) (or (= $generated@@254 ($generated@@233 $generated@@256 $generated@@255)) (exists (($generated@@257 T@U) ) (!  (and (= (type $generated@@257) $generated@@256) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@254) $generated@@257)))
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
))))))
 :pattern ( ($generated@@232 $generated@@254))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@209) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@207 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@267) $generated@@61)) (= (type $generated@@268) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@209) ($generated@@0 ($generated@@76 $generated@@266 $generated@@269))) ($generated@@207 $generated@@269 $generated@@267 $generated@@268))
 :pattern ( ($generated@@76 $generated@@266 $generated@@269))
))))
 :pattern ( ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268))
)))
(assert  (and (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273)) $generated@@61)
 :pattern ( ($generated@@270 $generated@@272 $generated@@273))
)) (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@218 (type $generated@@274))))
(let (($generated@@276 ($generated@@217 (type $generated@@274))))
(= (type ($generated@@271 $generated@@274)) ($generated@@71 $generated@@276 $generated@@275))))
 :pattern ( ($generated@@271 $generated@@274))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (= (type $generated@@277) ($generated@@216 $generated@@209 $generated@@209)) (= (type $generated@@278) $generated@@61)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))) (and ($generated@@207 ($generated@@76 ($generated@@271 $generated@@277) $generated@@281) $generated@@279 $generated@@280) ($generated@@207 $generated@@281 $generated@@278 $generated@@280)))
 :pattern ( ($generated@@76 ($generated@@271 $generated@@277) $generated@@281))
 :pattern ( ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280))
)))
(assert  (and (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (= (type ($generated@@282 $generated@@284 $generated@@285)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@284 $generated@@285))
)) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@236 (type $generated@@286))))
(let (($generated@@288 ($generated@@235 (type $generated@@286))))
(= (type ($generated@@283 $generated@@286)) ($generated@@71 $generated@@288 $generated@@287))))
 :pattern ( ($generated@@283 $generated@@286))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (= (type $generated@@289) ($generated@@234 $generated@@209 $generated@@209)) (= (type $generated@@290) $generated@@61)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))) (and ($generated@@207 ($generated@@76 ($generated@@283 $generated@@289) $generated@@293) $generated@@291 $generated@@292) ($generated@@207 $generated@@293 $generated@@290 $generated@@292)))
 :pattern ( ($generated@@76 ($generated@@283 $generated@@289) $generated@@293))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))
))))
 :pattern ( ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@71 $generated@@295 $generated@@4))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@236 (type $generated@@296))))
(let (($generated@@298 ($generated@@235 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@234 $generated@@298 $generated@@297)) (= (= $generated@@296 ($generated@@233 $generated@@298 $generated@@297)) (= ($generated@@232 $generated@@296) ($generated@@294 $generated@@298))))))
 :pattern ( ($generated@@232 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@299 T@U) ($generated@@300 Int) ) (!  (=> (and (= (type $generated@@299) $generated@@131) (or ($generated@@132 $generated@@300) (not (= 0 $generated@@127)))) (and (=> (<= 0 $generated@@300) ($generated@@132 (- $generated@@300 1))) (= ($generated@@128 ($generated@@129 $generated@@299) $generated@@300) (ite (< $generated@@300 0) 0 (+ 1 ($generated@@128 $generated@@299 (- $generated@@300 1)))))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@299) $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@202 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@201 $generated@@302)) (<= 0 ($generated@@200 $generated@@301))))
 :pattern ( ($generated@@200 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@61) (= (type $generated@@306) $generated@@61)) (= ($generated@@303 ($generated@@270 $generated@@305 $generated@@306)) $generated@@305))
 :pattern ( ($generated@@270 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@61)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@61) (= (type $generated@@310) $generated@@61)) (= ($generated@@307 ($generated@@270 $generated@@309 $generated@@310)) $generated@@310))
 :pattern ( ($generated@@270 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@67 ($generated@@270 $generated@@311 $generated@@312)) $generated@@58))
 :pattern ( ($generated@@270 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@61)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@61) (= (type $generated@@316) $generated@@61)) (= ($generated@@313 ($generated@@282 $generated@@315 $generated@@316)) $generated@@315))
 :pattern ( ($generated@@282 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@317 ($generated@@282 $generated@@319 $generated@@320)) $generated@@320))
 :pattern ( ($generated@@282 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@61) (= (type $generated@@322) $generated@@61)) (= ($generated@@67 ($generated@@282 $generated@@321 $generated@@322)) $generated@@59))
 :pattern ( ($generated@@282 $generated@@321 $generated@@322))
)))
(assert  (and (forall (($generated@@325 T@U) ) (! (= (type ($generated@@323 $generated@@325)) $generated@@131)
 :pattern ( ($generated@@323 $generated@@325))
)) (= (type $generated@@324) $generated@@131)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ) (!  (=> (= (type $generated@@326) $generated@@131) (= ($generated@@128 $generated@@326 $generated@@327) ($generated@@128 $generated@@324 $generated@@327)))
 :pattern ( ($generated@@128 ($generated@@323 $generated@@326) $generated@@327))
)))
(assert  (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@330)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@330))
)) (forall (($generated@@331 T@U) ($generated@@332 Int) ) (! (let (($generated@@333 ($generated@@202 (type $generated@@331))))
(= (type ($generated@@329 $generated@@331 $generated@@332)) $generated@@333))
 :pattern ( ($generated@@329 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@201 $generated@@209)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@334 ($generated@@328 $generated@@335) $generated@@336) (forall (($generated@@337 Int) ) (!  (=> (and (<= 0 $generated@@337) (< $generated@@337 ($generated@@200 $generated@@334))) ($generated@@207 ($generated@@329 $generated@@334 $generated@@337) $generated@@335 $generated@@336))
 :pattern ( ($generated@@329 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@334 ($generated@@328 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@339 Int) ) (! (= ($generated@@338 ($generated@@70 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@70 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@340 ($generated@@258 $generated@@342)) $generated@@342))
 :pattern ( ($generated@@258 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@343)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@344 ($generated@@264 $generated@@346)) $generated@@346))
 :pattern ( ($generated@@264 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@61) (= ($generated@@67 ($generated@@264 $generated@@347)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@349 ($generated@@348 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@348 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@67 ($generated@@348 $generated@@353)) $generated@@56))
 :pattern ( ($generated@@348 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@328 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@328 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@328 $generated@@357)) $generated@@57))
 :pattern ( ($generated@@328 $generated@@357))
)))
(assert (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated@@358 $generated@@362 ($generated@@208 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@208 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ) (!  (=> (= (type $generated@@363) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@363) $generated@@364) ($generated@@128 $generated@@363 $generated@@364)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (not ($generated@@0 ($generated@@76 ($generated@@294 $generated@@366) $generated@@365))))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@76 ($generated@@294 $generated@@366) $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@71 $generated@@209 $generated@@2)) (= (type $generated@@368) $generated@@61)) (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@367 ($generated@@348 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@209) (< 0 ($generated ($generated@@76 $generated@@367 $generated@@370)))) ($generated@@207 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@76 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@69 $generated@@367 ($generated@@348 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 Int) ) (! (= ($generated@@208 ($generated@@8 ($generated@@130 $generated@@371))) ($generated@@133 ($generated@@208 ($generated@@8 $generated@@371))))
 :pattern ( ($generated@@208 ($generated@@8 ($generated@@130 $generated@@371))))
)))
(assert (forall (($generated@@372 T@U) ) (! (= ($generated@@208 ($generated@@133 $generated@@372)) ($generated@@133 ($generated@@208 $generated@@372)))
 :pattern ( ($generated@@208 ($generated@@133 $generated@@372)))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@202 (type $generated@@373))))
 (=> (and (= (type $generated@@373) ($generated@@201 $generated@@374)) (= ($generated@@200 $generated@@373) 0)) (= $generated@@373 ($generated@@199 $generated@@374))))
 :pattern ( ($generated@@200 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@376) $generated@@2)) ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
 :pattern ( ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@378) $generated@@3)) ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
 :pattern ( ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) $generated@@4)) ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
 :pattern ( ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
)))
(assert (= ($generated@@1 $generated@@381) 18))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@381)) ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@385) $generated@@209)) ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
 :pattern ( ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 () T@U)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () T@U)
(declare-fun $generated@@392 () Int)
(declare-fun $generated@@393 () Int)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 () Int)
(declare-fun $generated@@396 (T@U) Bool)
(declare-fun $generated@@397 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@386) $generated@@131) (= (type $generated@@387) $generated@@131)) (= (type $generated@@388) $generated@@131)) (= (type $generated@@389) ($generated@@141 $generated@@72 $generated@@4))) (= (type $generated@@390) $generated@@72)) (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@398  (=> (= $generated@@386 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@387)))) (=> (and (= $generated@@388 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@387))))) (= ($generated@@323 $generated@@387) $generated@@387)) (=> (and (and (= $generated@@389 ($generated@@140 $generated@@390 $generated@@391 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@392) $generated@@46 $generated@@391)) (and ($generated@@132 $generated@@392) ($generated@@132 $generated@@392))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@128 $generated@@388 $generated@@392) ($generated@@130 0))) (=> (= ($generated@@128 $generated@@388 $generated@@392) ($generated@@130 0)) (=> (and (and (= $generated@@393 ($generated@@130 (- 0 1))) ($generated@@69 ($generated@@8 $generated@@393) $generated@@46 $generated@@391)) (and ($generated@@132 ($generated@@130 (- 0 1))) ($generated@@132 ($generated@@130 (- 0 1))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@130 ($generated@@128 $generated@@388 ($generated@@130 (- 0 1)))) ($generated@@130 0))) (=> (and (= ($generated@@130 ($generated@@128 $generated@@388 ($generated@@130 (- 0 1)))) ($generated@@130 0)) ($generated@@69 ($generated@@8 $generated@@394) $generated@@46 $generated@@391)) (=> (and (and (and ($generated@@132 $generated@@394) (= $generated@@395 (- $generated@@394 3))) (and ($generated@@69 ($generated@@8 $generated@@395) $generated@@46 $generated@@391) ($generated@@132 (- $generated@@394 3)))) (and (and ($generated@@132 $generated@@394) ($generated@@132 (- $generated@@394 3))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@128 $generated@@388 $generated@@394) (+ 3 ($generated@@128 $generated@@388 (- $generated@@394 3)))))))))))))))
(let (($generated@@399  (=> (and ($generated@@396 $generated@@391) ($generated@@397 $generated@@391)) (=> (and (and (= 1 $generated@@127) (> $generated@@394 5)) (and (< $generated@@392 0) (= (ControlFlow 0 5) 2))) $generated@@398))))
$generated@@399)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@T) T@U)
(declare-fun $generated@@200 (T@U) Int)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@207 (T@U T@U T@U) Bool)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@T T@T) T@U)
(declare-fun $generated@@216 (T@T T@T) T@T)
(declare-fun $generated@@217 (T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@233 (T@T T@T) T@U)
(declare-fun $generated@@234 (T@T T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 () T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@U Int) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@381 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))) (forall (($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(= (type ($generated@@133 $generated@@135)) $generated@@136))
 :pattern ( ($generated@@133 $generated@@135))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@137 T@U) ($generated@@138 Int) ) (!  (=> (and (= (type $generated@@137) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@138)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@138 0))))) ($generated@@132 ($generated@@130 (- $generated@@138 1)))) (= ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)) (ite (< $generated@@138 0) 0 (+ 1 ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 (- $generated@@138 1))))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@1 ($generated@@141 $generated@@145 $generated@@146)) 13)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@142 ($generated@@141 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@143 ($generated@@141 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@141 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@143 (type $generated@@151))))
(= (type ($generated@@139 $generated@@151 $generated@@152 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@139 $generated@@151 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(let (($generated@@160 (type $generated@@156)))
(= (type ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158)) ($generated@@141 $generated@@160 $generated@@159))))
 :pattern ( ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@143 (type $generated@@161))))
 (=> (= (type $generated@@164) $generated@@165) (= ($generated@@139 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@162 $generated@@163) $generated@@164)))
 :weight 0
))) (and (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@139 ($generated@@144 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@139 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@139 ($generated@@144 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@139 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or true (= ($generated@@139 ($generated@@144 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@139 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ) (! (= (type ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@141 $generated@@72 $generated@@4))
 :pattern ( ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@64 (type $generated@@193))))
 (=> (and (and (and (and (= (type $generated@@188) $generated@@72) (= (type $generated@@189) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@190) ($generated@@63 $generated@@4))) (= (type $generated@@192) $generated@@72)) (= (type $generated@@193) ($generated@@63 $generated@@194))) (= ($generated@@0 ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (not (= $generated@@192 $generated@@188)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@189 $generated@@192) $generated@@190))) $generated@@191))))
 :pattern ( ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@195 Int) ) (! (= ($generated@@130 $generated@@195) $generated@@195)
 :pattern ( ($generated@@130 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@133 $generated@@196) $generated@@196)
 :pattern ( ($generated@@133 $generated@@196))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@197 T@U) ($generated@@198 Int) ) (!  (=> (and (= (type $generated@@197) $generated@@131) (or ($generated@@132 $generated@@198) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@197 $generated@@198))
))))
(assert  (and (and (forall (($generated@@203 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@203)) 14)) (forall (($generated@@204 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@201 $generated@@204))
))) (forall (($generated@@205 T@T) ) (! (= (type ($generated@@199 $generated@@205)) ($generated@@201 $generated@@205))
 :pattern ( ($generated@@199 $generated@@205))
))))
(assert (forall (($generated@@206 T@T) ) (! (= ($generated@@200 ($generated@@199 $generated@@206)) 0)
 :pattern ( ($generated@@199 $generated@@206))
)))
(assert  (and (= ($generated@@1 $generated@@209) 15) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@208 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@208 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) $generated@@61) (= (type $generated@@213) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213) ($generated@@69 $generated@@211 $generated@@212 $generated@@213)))
 :pattern ( ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213))
)))
(assert  (and (and (and (and (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (= ($generated@@1 ($generated@@216 $generated@@219 $generated@@220)) 16)) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@217 ($generated@@216 $generated@@221 $generated@@222)) $generated@@221)
 :pattern ( ($generated@@216 $generated@@221 $generated@@222))
))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@218 ($generated@@216 $generated@@223 $generated@@224)) $generated@@224)
 :pattern ( ($generated@@216 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@217 (type $generated@@225))))
(= (type ($generated@@214 $generated@@225)) ($generated@@71 $generated@@226 $generated@@4)))
 :pattern ( ($generated@@214 $generated@@225))
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= (type ($generated@@215 $generated@@227 $generated@@228)) ($generated@@216 $generated@@227 $generated@@228))
 :pattern ( ($generated@@215 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@T) ) (! (let (($generated@@231 (type $generated@@229)))
 (not ($generated@@0 ($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229))))
 :pattern ( (let (($generated@@231 (type $generated@@229)))
($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229)))
)))
(assert  (and (and (and (and (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@237 $generated@@238)) 17)) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@239 $generated@@240)) $generated@@239)
 :pattern ( ($generated@@234 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@236 ($generated@@234 $generated@@241 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@234 $generated@@241 $generated@@242))
))) (forall (($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@235 (type $generated@@243))))
(= (type ($generated@@232 $generated@@243)) ($generated@@71 $generated@@244 $generated@@4)))
 :pattern ( ($generated@@232 $generated@@243))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= (type ($generated@@233 $generated@@245 $generated@@246)) ($generated@@234 $generated@@245 $generated@@246))
 :pattern ( ($generated@@233 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@T) ) (! (let (($generated@@249 (type $generated@@247)))
 (not ($generated@@0 ($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247))))
 :pattern ( (let (($generated@@249 (type $generated@@247)))
($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@218 (type $generated@@250))))
(let (($generated@@252 ($generated@@217 (type $generated@@250))))
 (=> (= (type $generated@@250) ($generated@@216 $generated@@252 $generated@@251)) (or (= $generated@@250 ($generated@@215 $generated@@252 $generated@@251)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@250) $generated@@253)))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@214 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@236 (type $generated@@254))))
(let (($generated@@256 ($generated@@235 (type $generated@@254))))
 (=> (= (type $generated@@254) ($generated@@234 $generated@@256 $generated@@255)) (or (= $generated@@254 ($generated@@233 $generated@@256 $generated@@255)) (exists (($generated@@257 T@U) ) (!  (and (= (type $generated@@257) $generated@@256) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@254) $generated@@257)))
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
))))))
 :pattern ( ($generated@@232 $generated@@254))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@209) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@207 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@267) $generated@@61)) (= (type $generated@@268) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@209) ($generated@@0 ($generated@@76 $generated@@266 $generated@@269))) ($generated@@207 $generated@@269 $generated@@267 $generated@@268))
 :pattern ( ($generated@@76 $generated@@266 $generated@@269))
))))
 :pattern ( ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268))
)))
(assert  (and (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273)) $generated@@61)
 :pattern ( ($generated@@270 $generated@@272 $generated@@273))
)) (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@218 (type $generated@@274))))
(let (($generated@@276 ($generated@@217 (type $generated@@274))))
(= (type ($generated@@271 $generated@@274)) ($generated@@71 $generated@@276 $generated@@275))))
 :pattern ( ($generated@@271 $generated@@274))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (= (type $generated@@277) ($generated@@216 $generated@@209 $generated@@209)) (= (type $generated@@278) $generated@@61)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))) (and ($generated@@207 ($generated@@76 ($generated@@271 $generated@@277) $generated@@281) $generated@@279 $generated@@280) ($generated@@207 $generated@@281 $generated@@278 $generated@@280)))
 :pattern ( ($generated@@76 ($generated@@271 $generated@@277) $generated@@281))
 :pattern ( ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280))
)))
(assert  (and (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (= (type ($generated@@282 $generated@@284 $generated@@285)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@284 $generated@@285))
)) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@236 (type $generated@@286))))
(let (($generated@@288 ($generated@@235 (type $generated@@286))))
(= (type ($generated@@283 $generated@@286)) ($generated@@71 $generated@@288 $generated@@287))))
 :pattern ( ($generated@@283 $generated@@286))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (= (type $generated@@289) ($generated@@234 $generated@@209 $generated@@209)) (= (type $generated@@290) $generated@@61)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))) (and ($generated@@207 ($generated@@76 ($generated@@283 $generated@@289) $generated@@293) $generated@@291 $generated@@292) ($generated@@207 $generated@@293 $generated@@290 $generated@@292)))
 :pattern ( ($generated@@76 ($generated@@283 $generated@@289) $generated@@293))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))
))))
 :pattern ( ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@71 $generated@@295 $generated@@4))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@236 (type $generated@@296))))
(let (($generated@@298 ($generated@@235 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@234 $generated@@298 $generated@@297)) (= (= $generated@@296 ($generated@@233 $generated@@298 $generated@@297)) (= ($generated@@232 $generated@@296) ($generated@@294 $generated@@298))))))
 :pattern ( ($generated@@232 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@299 T@U) ($generated@@300 Int) ) (!  (=> (and (= (type $generated@@299) $generated@@131) (or ($generated@@132 $generated@@300) (not (= 0 $generated@@127)))) (and (=> (<= 0 $generated@@300) ($generated@@132 (- $generated@@300 1))) (= ($generated@@128 ($generated@@129 $generated@@299) $generated@@300) (ite (< $generated@@300 0) 0 (+ 1 ($generated@@128 $generated@@299 (- $generated@@300 1)))))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@299) $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@202 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@201 $generated@@302)) (<= 0 ($generated@@200 $generated@@301))))
 :pattern ( ($generated@@200 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@61) (= (type $generated@@306) $generated@@61)) (= ($generated@@303 ($generated@@270 $generated@@305 $generated@@306)) $generated@@305))
 :pattern ( ($generated@@270 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@61)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@61) (= (type $generated@@310) $generated@@61)) (= ($generated@@307 ($generated@@270 $generated@@309 $generated@@310)) $generated@@310))
 :pattern ( ($generated@@270 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@67 ($generated@@270 $generated@@311 $generated@@312)) $generated@@58))
 :pattern ( ($generated@@270 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@61)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@61) (= (type $generated@@316) $generated@@61)) (= ($generated@@313 ($generated@@282 $generated@@315 $generated@@316)) $generated@@315))
 :pattern ( ($generated@@282 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@317 ($generated@@282 $generated@@319 $generated@@320)) $generated@@320))
 :pattern ( ($generated@@282 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@61) (= (type $generated@@322) $generated@@61)) (= ($generated@@67 ($generated@@282 $generated@@321 $generated@@322)) $generated@@59))
 :pattern ( ($generated@@282 $generated@@321 $generated@@322))
)))
(assert  (and (forall (($generated@@325 T@U) ) (! (= (type ($generated@@323 $generated@@325)) $generated@@131)
 :pattern ( ($generated@@323 $generated@@325))
)) (= (type $generated@@324) $generated@@131)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ) (!  (=> (= (type $generated@@326) $generated@@131) (= ($generated@@128 $generated@@326 $generated@@327) ($generated@@128 $generated@@324 $generated@@327)))
 :pattern ( ($generated@@128 ($generated@@323 $generated@@326) $generated@@327))
)))
(assert  (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@330)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@330))
)) (forall (($generated@@331 T@U) ($generated@@332 Int) ) (! (let (($generated@@333 ($generated@@202 (type $generated@@331))))
(= (type ($generated@@329 $generated@@331 $generated@@332)) $generated@@333))
 :pattern ( ($generated@@329 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@201 $generated@@209)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@334 ($generated@@328 $generated@@335) $generated@@336) (forall (($generated@@337 Int) ) (!  (=> (and (<= 0 $generated@@337) (< $generated@@337 ($generated@@200 $generated@@334))) ($generated@@207 ($generated@@329 $generated@@334 $generated@@337) $generated@@335 $generated@@336))
 :pattern ( ($generated@@329 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@334 ($generated@@328 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@339 Int) ) (! (= ($generated@@338 ($generated@@70 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@70 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@340 ($generated@@258 $generated@@342)) $generated@@342))
 :pattern ( ($generated@@258 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@343)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@344 ($generated@@264 $generated@@346)) $generated@@346))
 :pattern ( ($generated@@264 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@61) (= ($generated@@67 ($generated@@264 $generated@@347)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@349 ($generated@@348 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@348 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@67 ($generated@@348 $generated@@353)) $generated@@56))
 :pattern ( ($generated@@348 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@328 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@328 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@328 $generated@@357)) $generated@@57))
 :pattern ( ($generated@@328 $generated@@357))
)))
(assert (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated@@358 $generated@@362 ($generated@@208 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@208 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ) (!  (=> (= (type $generated@@363) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@363) $generated@@364) ($generated@@128 $generated@@363 $generated@@364)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (not ($generated@@0 ($generated@@76 ($generated@@294 $generated@@366) $generated@@365))))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@76 ($generated@@294 $generated@@366) $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@71 $generated@@209 $generated@@2)) (= (type $generated@@368) $generated@@61)) (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@367 ($generated@@348 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@209) (< 0 ($generated ($generated@@76 $generated@@367 $generated@@370)))) ($generated@@207 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@76 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@69 $generated@@367 ($generated@@348 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 Int) ) (! (= ($generated@@208 ($generated@@8 ($generated@@130 $generated@@371))) ($generated@@133 ($generated@@208 ($generated@@8 $generated@@371))))
 :pattern ( ($generated@@208 ($generated@@8 ($generated@@130 $generated@@371))))
)))
(assert (forall (($generated@@372 T@U) ) (! (= ($generated@@208 ($generated@@133 $generated@@372)) ($generated@@133 ($generated@@208 $generated@@372)))
 :pattern ( ($generated@@208 ($generated@@133 $generated@@372)))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@202 (type $generated@@373))))
 (=> (and (= (type $generated@@373) ($generated@@201 $generated@@374)) (= ($generated@@200 $generated@@373) 0)) (= $generated@@373 ($generated@@199 $generated@@374))))
 :pattern ( ($generated@@200 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@376) $generated@@2)) ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
 :pattern ( ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@378) $generated@@3)) ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
 :pattern ( ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) $generated@@4)) ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
 :pattern ( ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
)))
(assert (= ($generated@@1 $generated@@381) 18))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@381)) ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@385) $generated@@209)) ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
 :pattern ( ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 () T@U)
(declare-fun $generated@@389 () Int)
(declare-fun $generated@@390 () Int)
(declare-fun $generated@@391 () Int)
(declare-fun $generated@@392 () Int)
(declare-fun $generated@@393 () Int)
(declare-fun $generated@@394 (T@U) Bool)
(declare-fun $generated@@395 (T@U) Bool)
(assert  (and (and (= (type $generated@@386) ($generated@@141 $generated@@72 $generated@@4)) (= (type $generated@@387) $generated@@72)) (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@396  (=> (and (and (= $generated@@386 ($generated@@140 $generated@@387 $generated@@388 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@389) $generated@@46 $generated@@388)) (and ($generated@@132 $generated@@389) ($generated@@132 $generated@@389))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (= ($generated@@128 ($generated@@129 ($generated@@129 $generated@@324)) $generated@@389) ($generated@@130 0))) (=> (= ($generated@@128 ($generated@@129 $generated@@324) $generated@@389) ($generated@@130 0)) (=> (and (and (= $generated@@390 ($generated@@130 (- 0 1))) ($generated@@69 ($generated@@8 $generated@@390) $generated@@46 $generated@@388)) (and ($generated@@132 ($generated@@130 (- 0 1))) ($generated@@132 ($generated@@130 (- 0 1))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@130 ($generated@@128 ($generated@@129 ($generated@@129 $generated@@324)) ($generated@@130 (- 0 1)))) ($generated@@130 0))) (=> (and (and (and (= ($generated@@130 ($generated@@128 ($generated@@129 $generated@@324) ($generated@@130 (- 0 1)))) ($generated@@130 0)) ($generated@@69 ($generated@@8 $generated@@391) $generated@@46 $generated@@388)) (and ($generated@@132 $generated@@391) (= $generated@@392 (- $generated@@391 3)))) (and (and ($generated@@69 ($generated@@8 $generated@@392) $generated@@46 $generated@@388) ($generated@@132 (- $generated@@391 3))) (and ($generated@@132 $generated@@391) ($generated@@132 (- $generated@@391 3))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@128 ($generated@@129 ($generated@@129 $generated@@324)) $generated@@391) (+ 3 ($generated@@128 ($generated@@129 ($generated@@129 $generated@@324)) (- $generated@@391 3))))) (=> (and (= ($generated@@128 ($generated@@129 $generated@@324) $generated@@391) (+ 3 ($generated@@128 ($generated@@129 $generated@@324) (- $generated@@391 3)))) ($generated@@69 ($generated@@8 $generated@@391) $generated@@46 $generated@@388)) (=> (and (and (and ($generated@@132 $generated@@391) (= $generated@@393 (- $generated@@391 4))) (and ($generated@@69 ($generated@@8 $generated@@393) $generated@@46 $generated@@388) ($generated@@132 (- $generated@@391 4)))) (and (and ($generated@@132 $generated@@391) ($generated@@132 (- $generated@@391 4))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@128 ($generated@@129 ($generated@@129 $generated@@324)) $generated@@391) (+ 4 ($generated@@128 ($generated@@129 ($generated@@129 $generated@@324)) (- $generated@@391 4)))))))))))))))
(let (($generated@@397  (=> (and ($generated@@394 $generated@@388) ($generated@@395 $generated@@388)) (=> (and (and (= 1 $generated@@127) (> $generated@@391 5)) (and (< $generated@@389 0) (= (ControlFlow 0 6) 2))) $generated@@396))))
$generated@@397)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@T) T@U)
(declare-fun $generated@@200 (T@U) Int)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@207 (T@U T@U T@U) Bool)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@T T@T) T@U)
(declare-fun $generated@@216 (T@T T@T) T@T)
(declare-fun $generated@@217 (T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@233 (T@T T@T) T@U)
(declare-fun $generated@@234 (T@T T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 () T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@U Int) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@381 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))) (forall (($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(= (type ($generated@@133 $generated@@135)) $generated@@136))
 :pattern ( ($generated@@133 $generated@@135))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@137 T@U) ($generated@@138 Int) ) (!  (=> (and (= (type $generated@@137) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@138)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@138 0))))) ($generated@@132 ($generated@@130 (- $generated@@138 1)))) (= ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)) (ite (< $generated@@138 0) 0 (+ 1 ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 (- $generated@@138 1))))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@1 ($generated@@141 $generated@@145 $generated@@146)) 13)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@142 ($generated@@141 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@143 ($generated@@141 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@141 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@143 (type $generated@@151))))
(= (type ($generated@@139 $generated@@151 $generated@@152 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@139 $generated@@151 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(let (($generated@@160 (type $generated@@156)))
(= (type ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158)) ($generated@@141 $generated@@160 $generated@@159))))
 :pattern ( ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@143 (type $generated@@161))))
 (=> (= (type $generated@@164) $generated@@165) (= ($generated@@139 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@162 $generated@@163) $generated@@164)))
 :weight 0
))) (and (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@139 ($generated@@144 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@139 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@139 ($generated@@144 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@139 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or true (= ($generated@@139 ($generated@@144 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@139 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ) (! (= (type ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@141 $generated@@72 $generated@@4))
 :pattern ( ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@64 (type $generated@@193))))
 (=> (and (and (and (and (= (type $generated@@188) $generated@@72) (= (type $generated@@189) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@190) ($generated@@63 $generated@@4))) (= (type $generated@@192) $generated@@72)) (= (type $generated@@193) ($generated@@63 $generated@@194))) (= ($generated@@0 ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (not (= $generated@@192 $generated@@188)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@189 $generated@@192) $generated@@190))) $generated@@191))))
 :pattern ( ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@195 Int) ) (! (= ($generated@@130 $generated@@195) $generated@@195)
 :pattern ( ($generated@@130 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@133 $generated@@196) $generated@@196)
 :pattern ( ($generated@@133 $generated@@196))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@197 T@U) ($generated@@198 Int) ) (!  (=> (and (= (type $generated@@197) $generated@@131) (or ($generated@@132 $generated@@198) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@197 $generated@@198))
))))
(assert  (and (and (forall (($generated@@203 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@203)) 14)) (forall (($generated@@204 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@201 $generated@@204))
))) (forall (($generated@@205 T@T) ) (! (= (type ($generated@@199 $generated@@205)) ($generated@@201 $generated@@205))
 :pattern ( ($generated@@199 $generated@@205))
))))
(assert (forall (($generated@@206 T@T) ) (! (= ($generated@@200 ($generated@@199 $generated@@206)) 0)
 :pattern ( ($generated@@199 $generated@@206))
)))
(assert  (and (= ($generated@@1 $generated@@209) 15) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@208 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@208 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) $generated@@61) (= (type $generated@@213) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213) ($generated@@69 $generated@@211 $generated@@212 $generated@@213)))
 :pattern ( ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213))
)))
(assert  (and (and (and (and (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (= ($generated@@1 ($generated@@216 $generated@@219 $generated@@220)) 16)) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@217 ($generated@@216 $generated@@221 $generated@@222)) $generated@@221)
 :pattern ( ($generated@@216 $generated@@221 $generated@@222))
))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@218 ($generated@@216 $generated@@223 $generated@@224)) $generated@@224)
 :pattern ( ($generated@@216 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@217 (type $generated@@225))))
(= (type ($generated@@214 $generated@@225)) ($generated@@71 $generated@@226 $generated@@4)))
 :pattern ( ($generated@@214 $generated@@225))
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= (type ($generated@@215 $generated@@227 $generated@@228)) ($generated@@216 $generated@@227 $generated@@228))
 :pattern ( ($generated@@215 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@T) ) (! (let (($generated@@231 (type $generated@@229)))
 (not ($generated@@0 ($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229))))
 :pattern ( (let (($generated@@231 (type $generated@@229)))
($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229)))
)))
(assert  (and (and (and (and (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@237 $generated@@238)) 17)) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@239 $generated@@240)) $generated@@239)
 :pattern ( ($generated@@234 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@236 ($generated@@234 $generated@@241 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@234 $generated@@241 $generated@@242))
))) (forall (($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@235 (type $generated@@243))))
(= (type ($generated@@232 $generated@@243)) ($generated@@71 $generated@@244 $generated@@4)))
 :pattern ( ($generated@@232 $generated@@243))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= (type ($generated@@233 $generated@@245 $generated@@246)) ($generated@@234 $generated@@245 $generated@@246))
 :pattern ( ($generated@@233 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@T) ) (! (let (($generated@@249 (type $generated@@247)))
 (not ($generated@@0 ($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247))))
 :pattern ( (let (($generated@@249 (type $generated@@247)))
($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@218 (type $generated@@250))))
(let (($generated@@252 ($generated@@217 (type $generated@@250))))
 (=> (= (type $generated@@250) ($generated@@216 $generated@@252 $generated@@251)) (or (= $generated@@250 ($generated@@215 $generated@@252 $generated@@251)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@250) $generated@@253)))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@214 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@236 (type $generated@@254))))
(let (($generated@@256 ($generated@@235 (type $generated@@254))))
 (=> (= (type $generated@@254) ($generated@@234 $generated@@256 $generated@@255)) (or (= $generated@@254 ($generated@@233 $generated@@256 $generated@@255)) (exists (($generated@@257 T@U) ) (!  (and (= (type $generated@@257) $generated@@256) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@254) $generated@@257)))
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
))))))
 :pattern ( ($generated@@232 $generated@@254))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@209) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@207 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@267) $generated@@61)) (= (type $generated@@268) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@209) ($generated@@0 ($generated@@76 $generated@@266 $generated@@269))) ($generated@@207 $generated@@269 $generated@@267 $generated@@268))
 :pattern ( ($generated@@76 $generated@@266 $generated@@269))
))))
 :pattern ( ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268))
)))
(assert  (and (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273)) $generated@@61)
 :pattern ( ($generated@@270 $generated@@272 $generated@@273))
)) (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@218 (type $generated@@274))))
(let (($generated@@276 ($generated@@217 (type $generated@@274))))
(= (type ($generated@@271 $generated@@274)) ($generated@@71 $generated@@276 $generated@@275))))
 :pattern ( ($generated@@271 $generated@@274))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (= (type $generated@@277) ($generated@@216 $generated@@209 $generated@@209)) (= (type $generated@@278) $generated@@61)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))) (and ($generated@@207 ($generated@@76 ($generated@@271 $generated@@277) $generated@@281) $generated@@279 $generated@@280) ($generated@@207 $generated@@281 $generated@@278 $generated@@280)))
 :pattern ( ($generated@@76 ($generated@@271 $generated@@277) $generated@@281))
 :pattern ( ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280))
)))
(assert  (and (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (= (type ($generated@@282 $generated@@284 $generated@@285)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@284 $generated@@285))
)) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@236 (type $generated@@286))))
(let (($generated@@288 ($generated@@235 (type $generated@@286))))
(= (type ($generated@@283 $generated@@286)) ($generated@@71 $generated@@288 $generated@@287))))
 :pattern ( ($generated@@283 $generated@@286))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (= (type $generated@@289) ($generated@@234 $generated@@209 $generated@@209)) (= (type $generated@@290) $generated@@61)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))) (and ($generated@@207 ($generated@@76 ($generated@@283 $generated@@289) $generated@@293) $generated@@291 $generated@@292) ($generated@@207 $generated@@293 $generated@@290 $generated@@292)))
 :pattern ( ($generated@@76 ($generated@@283 $generated@@289) $generated@@293))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))
))))
 :pattern ( ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@71 $generated@@295 $generated@@4))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@236 (type $generated@@296))))
(let (($generated@@298 ($generated@@235 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@234 $generated@@298 $generated@@297)) (= (= $generated@@296 ($generated@@233 $generated@@298 $generated@@297)) (= ($generated@@232 $generated@@296) ($generated@@294 $generated@@298))))))
 :pattern ( ($generated@@232 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@299 T@U) ($generated@@300 Int) ) (!  (=> (and (= (type $generated@@299) $generated@@131) (or ($generated@@132 $generated@@300) (not (= 0 $generated@@127)))) (and (=> (<= 0 $generated@@300) ($generated@@132 (- $generated@@300 1))) (= ($generated@@128 ($generated@@129 $generated@@299) $generated@@300) (ite (< $generated@@300 0) 0 (+ 1 ($generated@@128 $generated@@299 (- $generated@@300 1)))))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@299) $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@202 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@201 $generated@@302)) (<= 0 ($generated@@200 $generated@@301))))
 :pattern ( ($generated@@200 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@61) (= (type $generated@@306) $generated@@61)) (= ($generated@@303 ($generated@@270 $generated@@305 $generated@@306)) $generated@@305))
 :pattern ( ($generated@@270 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@61)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@61) (= (type $generated@@310) $generated@@61)) (= ($generated@@307 ($generated@@270 $generated@@309 $generated@@310)) $generated@@310))
 :pattern ( ($generated@@270 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@67 ($generated@@270 $generated@@311 $generated@@312)) $generated@@58))
 :pattern ( ($generated@@270 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@61)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@61) (= (type $generated@@316) $generated@@61)) (= ($generated@@313 ($generated@@282 $generated@@315 $generated@@316)) $generated@@315))
 :pattern ( ($generated@@282 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@317 ($generated@@282 $generated@@319 $generated@@320)) $generated@@320))
 :pattern ( ($generated@@282 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@61) (= (type $generated@@322) $generated@@61)) (= ($generated@@67 ($generated@@282 $generated@@321 $generated@@322)) $generated@@59))
 :pattern ( ($generated@@282 $generated@@321 $generated@@322))
)))
(assert  (and (forall (($generated@@325 T@U) ) (! (= (type ($generated@@323 $generated@@325)) $generated@@131)
 :pattern ( ($generated@@323 $generated@@325))
)) (= (type $generated@@324) $generated@@131)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ) (!  (=> (= (type $generated@@326) $generated@@131) (= ($generated@@128 $generated@@326 $generated@@327) ($generated@@128 $generated@@324 $generated@@327)))
 :pattern ( ($generated@@128 ($generated@@323 $generated@@326) $generated@@327))
)))
(assert  (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@330)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@330))
)) (forall (($generated@@331 T@U) ($generated@@332 Int) ) (! (let (($generated@@333 ($generated@@202 (type $generated@@331))))
(= (type ($generated@@329 $generated@@331 $generated@@332)) $generated@@333))
 :pattern ( ($generated@@329 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@201 $generated@@209)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@334 ($generated@@328 $generated@@335) $generated@@336) (forall (($generated@@337 Int) ) (!  (=> (and (<= 0 $generated@@337) (< $generated@@337 ($generated@@200 $generated@@334))) ($generated@@207 ($generated@@329 $generated@@334 $generated@@337) $generated@@335 $generated@@336))
 :pattern ( ($generated@@329 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@334 ($generated@@328 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@339 Int) ) (! (= ($generated@@338 ($generated@@70 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@70 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@340 ($generated@@258 $generated@@342)) $generated@@342))
 :pattern ( ($generated@@258 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@343)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@344 ($generated@@264 $generated@@346)) $generated@@346))
 :pattern ( ($generated@@264 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@61) (= ($generated@@67 ($generated@@264 $generated@@347)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@349 ($generated@@348 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@348 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@67 ($generated@@348 $generated@@353)) $generated@@56))
 :pattern ( ($generated@@348 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@328 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@328 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@328 $generated@@357)) $generated@@57))
 :pattern ( ($generated@@328 $generated@@357))
)))
(assert (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated@@358 $generated@@362 ($generated@@208 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@208 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ) (!  (=> (= (type $generated@@363) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@363) $generated@@364) ($generated@@128 $generated@@363 $generated@@364)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (not ($generated@@0 ($generated@@76 ($generated@@294 $generated@@366) $generated@@365))))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@76 ($generated@@294 $generated@@366) $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@71 $generated@@209 $generated@@2)) (= (type $generated@@368) $generated@@61)) (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@367 ($generated@@348 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@209) (< 0 ($generated ($generated@@76 $generated@@367 $generated@@370)))) ($generated@@207 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@76 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@69 $generated@@367 ($generated@@348 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 Int) ) (! (= ($generated@@208 ($generated@@8 ($generated@@130 $generated@@371))) ($generated@@133 ($generated@@208 ($generated@@8 $generated@@371))))
 :pattern ( ($generated@@208 ($generated@@8 ($generated@@130 $generated@@371))))
)))
(assert (forall (($generated@@372 T@U) ) (! (= ($generated@@208 ($generated@@133 $generated@@372)) ($generated@@133 ($generated@@208 $generated@@372)))
 :pattern ( ($generated@@208 ($generated@@133 $generated@@372)))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@202 (type $generated@@373))))
 (=> (and (= (type $generated@@373) ($generated@@201 $generated@@374)) (= ($generated@@200 $generated@@373) 0)) (= $generated@@373 ($generated@@199 $generated@@374))))
 :pattern ( ($generated@@200 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@376) $generated@@2)) ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
 :pattern ( ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@378) $generated@@3)) ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
 :pattern ( ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) $generated@@4)) ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
 :pattern ( ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
)))
(assert (= ($generated@@1 $generated@@381) 18))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@381)) ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@385) $generated@@209)) ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
 :pattern ( ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 () T@U)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () T@U)
(declare-fun $generated@@392 () Int)
(declare-fun $generated@@393 () Int)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 () Int)
(declare-fun $generated@@396 (T@U) Bool)
(declare-fun $generated@@397 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@386) $generated@@131) (= (type $generated@@387) $generated@@131)) (= (type $generated@@388) $generated@@131)) (= (type $generated@@389) ($generated@@141 $generated@@72 $generated@@4))) (= (type $generated@@390) $generated@@72)) (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@398  (=> (= $generated@@386 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@387)))) (=> (and (= $generated@@388 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@387))))) (= ($generated@@323 $generated@@387) $generated@@387)) (=> (and (and (= $generated@@389 ($generated@@140 $generated@@390 $generated@@391 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@392) $generated@@46 $generated@@391)) (and ($generated@@132 $generated@@392) ($generated@@132 $generated@@392))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@128 $generated@@388 $generated@@392) ($generated@@130 0))) (=> (= ($generated@@128 $generated@@388 $generated@@392) ($generated@@130 0)) (=> (and (and (= $generated@@393 ($generated@@130 (- 0 1))) ($generated@@69 ($generated@@8 $generated@@393) $generated@@46 $generated@@391)) (and ($generated@@132 ($generated@@130 (- 0 1))) ($generated@@132 ($generated@@130 (- 0 1))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@130 ($generated@@128 $generated@@388 ($generated@@130 (- 0 1)))) ($generated@@130 0))) (=> (and (= ($generated@@130 ($generated@@128 $generated@@388 ($generated@@130 (- 0 1)))) ($generated@@130 0)) ($generated@@69 ($generated@@8 $generated@@394) $generated@@46 $generated@@391)) (=> (and (and (and ($generated@@132 $generated@@394) (= $generated@@395 (- $generated@@394 3))) (and ($generated@@69 ($generated@@8 $generated@@395) $generated@@46 $generated@@391) ($generated@@132 (- $generated@@394 3)))) (and (and ($generated@@132 $generated@@394) ($generated@@132 (- $generated@@394 3))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@128 $generated@@388 $generated@@394) (+ 3 ($generated@@128 $generated@@388 (- $generated@@394 3)))))))))))))))
(let (($generated@@399  (=> (and ($generated@@396 $generated@@391) ($generated@@397 $generated@@391)) (=> (and (and (= 1 $generated@@127) (> $generated@@394 5)) (and (< $generated@@392 0) (= (ControlFlow 0 5) 2))) $generated@@398))))
$generated@@399)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@T) T@U)
(declare-fun $generated@@200 (T@U) Int)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@207 (T@U T@U T@U) Bool)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@T T@T) T@U)
(declare-fun $generated@@216 (T@T T@T) T@T)
(declare-fun $generated@@217 (T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@233 (T@T T@T) T@U)
(declare-fun $generated@@234 (T@T T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 () T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@U Int) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@381 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))) (forall (($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(= (type ($generated@@133 $generated@@135)) $generated@@136))
 :pattern ( ($generated@@133 $generated@@135))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@137 T@U) ($generated@@138 Int) ) (!  (=> (and (= (type $generated@@137) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@138)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@138 0))))) ($generated@@132 ($generated@@130 (- $generated@@138 1)))) (= ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)) (ite (< $generated@@138 0) 0 (+ 1 ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 (- $generated@@138 1))))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@1 ($generated@@141 $generated@@145 $generated@@146)) 13)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@142 ($generated@@141 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@143 ($generated@@141 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@141 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@143 (type $generated@@151))))
(= (type ($generated@@139 $generated@@151 $generated@@152 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@139 $generated@@151 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(let (($generated@@160 (type $generated@@156)))
(= (type ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158)) ($generated@@141 $generated@@160 $generated@@159))))
 :pattern ( ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@143 (type $generated@@161))))
 (=> (= (type $generated@@164) $generated@@165) (= ($generated@@139 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@162 $generated@@163) $generated@@164)))
 :weight 0
))) (and (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@139 ($generated@@144 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@139 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@139 ($generated@@144 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@139 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or true (= ($generated@@139 ($generated@@144 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@139 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ) (! (= (type ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@141 $generated@@72 $generated@@4))
 :pattern ( ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@64 (type $generated@@193))))
 (=> (and (and (and (and (= (type $generated@@188) $generated@@72) (= (type $generated@@189) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@190) ($generated@@63 $generated@@4))) (= (type $generated@@192) $generated@@72)) (= (type $generated@@193) ($generated@@63 $generated@@194))) (= ($generated@@0 ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (not (= $generated@@192 $generated@@188)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@189 $generated@@192) $generated@@190))) $generated@@191))))
 :pattern ( ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@195 Int) ) (! (= ($generated@@130 $generated@@195) $generated@@195)
 :pattern ( ($generated@@130 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@133 $generated@@196) $generated@@196)
 :pattern ( ($generated@@133 $generated@@196))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@197 T@U) ($generated@@198 Int) ) (!  (=> (and (= (type $generated@@197) $generated@@131) (or ($generated@@132 $generated@@198) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@197 $generated@@198))
))))
(assert  (and (and (forall (($generated@@203 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@203)) 14)) (forall (($generated@@204 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@201 $generated@@204))
))) (forall (($generated@@205 T@T) ) (! (= (type ($generated@@199 $generated@@205)) ($generated@@201 $generated@@205))
 :pattern ( ($generated@@199 $generated@@205))
))))
(assert (forall (($generated@@206 T@T) ) (! (= ($generated@@200 ($generated@@199 $generated@@206)) 0)
 :pattern ( ($generated@@199 $generated@@206))
)))
(assert  (and (= ($generated@@1 $generated@@209) 15) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@208 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@208 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) $generated@@61) (= (type $generated@@213) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213) ($generated@@69 $generated@@211 $generated@@212 $generated@@213)))
 :pattern ( ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213))
)))
(assert  (and (and (and (and (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (= ($generated@@1 ($generated@@216 $generated@@219 $generated@@220)) 16)) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@217 ($generated@@216 $generated@@221 $generated@@222)) $generated@@221)
 :pattern ( ($generated@@216 $generated@@221 $generated@@222))
))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@218 ($generated@@216 $generated@@223 $generated@@224)) $generated@@224)
 :pattern ( ($generated@@216 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@217 (type $generated@@225))))
(= (type ($generated@@214 $generated@@225)) ($generated@@71 $generated@@226 $generated@@4)))
 :pattern ( ($generated@@214 $generated@@225))
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= (type ($generated@@215 $generated@@227 $generated@@228)) ($generated@@216 $generated@@227 $generated@@228))
 :pattern ( ($generated@@215 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@T) ) (! (let (($generated@@231 (type $generated@@229)))
 (not ($generated@@0 ($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229))))
 :pattern ( (let (($generated@@231 (type $generated@@229)))
($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229)))
)))
(assert  (and (and (and (and (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@237 $generated@@238)) 17)) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@239 $generated@@240)) $generated@@239)
 :pattern ( ($generated@@234 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@236 ($generated@@234 $generated@@241 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@234 $generated@@241 $generated@@242))
))) (forall (($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@235 (type $generated@@243))))
(= (type ($generated@@232 $generated@@243)) ($generated@@71 $generated@@244 $generated@@4)))
 :pattern ( ($generated@@232 $generated@@243))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= (type ($generated@@233 $generated@@245 $generated@@246)) ($generated@@234 $generated@@245 $generated@@246))
 :pattern ( ($generated@@233 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@T) ) (! (let (($generated@@249 (type $generated@@247)))
 (not ($generated@@0 ($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247))))
 :pattern ( (let (($generated@@249 (type $generated@@247)))
($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@218 (type $generated@@250))))
(let (($generated@@252 ($generated@@217 (type $generated@@250))))
 (=> (= (type $generated@@250) ($generated@@216 $generated@@252 $generated@@251)) (or (= $generated@@250 ($generated@@215 $generated@@252 $generated@@251)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@250) $generated@@253)))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@214 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@236 (type $generated@@254))))
(let (($generated@@256 ($generated@@235 (type $generated@@254))))
 (=> (= (type $generated@@254) ($generated@@234 $generated@@256 $generated@@255)) (or (= $generated@@254 ($generated@@233 $generated@@256 $generated@@255)) (exists (($generated@@257 T@U) ) (!  (and (= (type $generated@@257) $generated@@256) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@254) $generated@@257)))
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
))))))
 :pattern ( ($generated@@232 $generated@@254))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@209) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@207 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@267) $generated@@61)) (= (type $generated@@268) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@209) ($generated@@0 ($generated@@76 $generated@@266 $generated@@269))) ($generated@@207 $generated@@269 $generated@@267 $generated@@268))
 :pattern ( ($generated@@76 $generated@@266 $generated@@269))
))))
 :pattern ( ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268))
)))
(assert  (and (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273)) $generated@@61)
 :pattern ( ($generated@@270 $generated@@272 $generated@@273))
)) (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@218 (type $generated@@274))))
(let (($generated@@276 ($generated@@217 (type $generated@@274))))
(= (type ($generated@@271 $generated@@274)) ($generated@@71 $generated@@276 $generated@@275))))
 :pattern ( ($generated@@271 $generated@@274))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (= (type $generated@@277) ($generated@@216 $generated@@209 $generated@@209)) (= (type $generated@@278) $generated@@61)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))) (and ($generated@@207 ($generated@@76 ($generated@@271 $generated@@277) $generated@@281) $generated@@279 $generated@@280) ($generated@@207 $generated@@281 $generated@@278 $generated@@280)))
 :pattern ( ($generated@@76 ($generated@@271 $generated@@277) $generated@@281))
 :pattern ( ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280))
)))
(assert  (and (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (= (type ($generated@@282 $generated@@284 $generated@@285)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@284 $generated@@285))
)) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@236 (type $generated@@286))))
(let (($generated@@288 ($generated@@235 (type $generated@@286))))
(= (type ($generated@@283 $generated@@286)) ($generated@@71 $generated@@288 $generated@@287))))
 :pattern ( ($generated@@283 $generated@@286))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (= (type $generated@@289) ($generated@@234 $generated@@209 $generated@@209)) (= (type $generated@@290) $generated@@61)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))) (and ($generated@@207 ($generated@@76 ($generated@@283 $generated@@289) $generated@@293) $generated@@291 $generated@@292) ($generated@@207 $generated@@293 $generated@@290 $generated@@292)))
 :pattern ( ($generated@@76 ($generated@@283 $generated@@289) $generated@@293))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))
))))
 :pattern ( ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@71 $generated@@295 $generated@@4))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@236 (type $generated@@296))))
(let (($generated@@298 ($generated@@235 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@234 $generated@@298 $generated@@297)) (= (= $generated@@296 ($generated@@233 $generated@@298 $generated@@297)) (= ($generated@@232 $generated@@296) ($generated@@294 $generated@@298))))))
 :pattern ( ($generated@@232 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@299 T@U) ($generated@@300 Int) ) (!  (=> (and (= (type $generated@@299) $generated@@131) (or ($generated@@132 $generated@@300) (not (= 0 $generated@@127)))) (and (=> (<= 0 $generated@@300) ($generated@@132 (- $generated@@300 1))) (= ($generated@@128 ($generated@@129 $generated@@299) $generated@@300) (ite (< $generated@@300 0) 0 (+ 1 ($generated@@128 $generated@@299 (- $generated@@300 1)))))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@299) $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@202 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@201 $generated@@302)) (<= 0 ($generated@@200 $generated@@301))))
 :pattern ( ($generated@@200 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@61) (= (type $generated@@306) $generated@@61)) (= ($generated@@303 ($generated@@270 $generated@@305 $generated@@306)) $generated@@305))
 :pattern ( ($generated@@270 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@61)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@61) (= (type $generated@@310) $generated@@61)) (= ($generated@@307 ($generated@@270 $generated@@309 $generated@@310)) $generated@@310))
 :pattern ( ($generated@@270 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@67 ($generated@@270 $generated@@311 $generated@@312)) $generated@@58))
 :pattern ( ($generated@@270 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@61)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@61) (= (type $generated@@316) $generated@@61)) (= ($generated@@313 ($generated@@282 $generated@@315 $generated@@316)) $generated@@315))
 :pattern ( ($generated@@282 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@317 ($generated@@282 $generated@@319 $generated@@320)) $generated@@320))
 :pattern ( ($generated@@282 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@61) (= (type $generated@@322) $generated@@61)) (= ($generated@@67 ($generated@@282 $generated@@321 $generated@@322)) $generated@@59))
 :pattern ( ($generated@@282 $generated@@321 $generated@@322))
)))
(assert  (and (forall (($generated@@325 T@U) ) (! (= (type ($generated@@323 $generated@@325)) $generated@@131)
 :pattern ( ($generated@@323 $generated@@325))
)) (= (type $generated@@324) $generated@@131)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ) (!  (=> (= (type $generated@@326) $generated@@131) (= ($generated@@128 $generated@@326 $generated@@327) ($generated@@128 $generated@@324 $generated@@327)))
 :pattern ( ($generated@@128 ($generated@@323 $generated@@326) $generated@@327))
)))
(assert  (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@330)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@330))
)) (forall (($generated@@331 T@U) ($generated@@332 Int) ) (! (let (($generated@@333 ($generated@@202 (type $generated@@331))))
(= (type ($generated@@329 $generated@@331 $generated@@332)) $generated@@333))
 :pattern ( ($generated@@329 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@201 $generated@@209)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@334 ($generated@@328 $generated@@335) $generated@@336) (forall (($generated@@337 Int) ) (!  (=> (and (<= 0 $generated@@337) (< $generated@@337 ($generated@@200 $generated@@334))) ($generated@@207 ($generated@@329 $generated@@334 $generated@@337) $generated@@335 $generated@@336))
 :pattern ( ($generated@@329 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@334 ($generated@@328 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@339 Int) ) (! (= ($generated@@338 ($generated@@70 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@70 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@340 ($generated@@258 $generated@@342)) $generated@@342))
 :pattern ( ($generated@@258 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@343)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@344 ($generated@@264 $generated@@346)) $generated@@346))
 :pattern ( ($generated@@264 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@61) (= ($generated@@67 ($generated@@264 $generated@@347)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@349 ($generated@@348 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@348 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@67 ($generated@@348 $generated@@353)) $generated@@56))
 :pattern ( ($generated@@348 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@328 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@328 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@328 $generated@@357)) $generated@@57))
 :pattern ( ($generated@@328 $generated@@357))
)))
(assert (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated@@358 $generated@@362 ($generated@@208 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@208 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ) (!  (=> (= (type $generated@@363) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@363) $generated@@364) ($generated@@128 $generated@@363 $generated@@364)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (not ($generated@@0 ($generated@@76 ($generated@@294 $generated@@366) $generated@@365))))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@76 ($generated@@294 $generated@@366) $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@71 $generated@@209 $generated@@2)) (= (type $generated@@368) $generated@@61)) (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@367 ($generated@@348 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@209) (< 0 ($generated ($generated@@76 $generated@@367 $generated@@370)))) ($generated@@207 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@76 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@69 $generated@@367 ($generated@@348 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 Int) ) (! (= ($generated@@208 ($generated@@8 ($generated@@130 $generated@@371))) ($generated@@133 ($generated@@208 ($generated@@8 $generated@@371))))
 :pattern ( ($generated@@208 ($generated@@8 ($generated@@130 $generated@@371))))
)))
(assert (forall (($generated@@372 T@U) ) (! (= ($generated@@208 ($generated@@133 $generated@@372)) ($generated@@133 ($generated@@208 $generated@@372)))
 :pattern ( ($generated@@208 ($generated@@133 $generated@@372)))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@202 (type $generated@@373))))
 (=> (and (= (type $generated@@373) ($generated@@201 $generated@@374)) (= ($generated@@200 $generated@@373) 0)) (= $generated@@373 ($generated@@199 $generated@@374))))
 :pattern ( ($generated@@200 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@376) $generated@@2)) ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
 :pattern ( ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@378) $generated@@3)) ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
 :pattern ( ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) $generated@@4)) ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
 :pattern ( ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
)))
(assert (= ($generated@@1 $generated@@381) 18))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@381)) ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@385) $generated@@209)) ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
 :pattern ( ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 () T@U)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () Int)
(declare-fun $generated@@392 () Int)
(declare-fun $generated@@393 () Int)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 (T@U) Bool)
(declare-fun $generated@@396 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@386) $generated@@131) (= (type $generated@@387) $generated@@131)) (= (type $generated@@388) ($generated@@141 $generated@@72 $generated@@4))) (= (type $generated@@389) $generated@@72)) (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@397  (=> (and (= ($generated@@323 $generated@@386) $generated@@386) (= ($generated@@323 $generated@@387) $generated@@387)) (=> (and (and (= $generated@@388 ($generated@@140 $generated@@389 $generated@@390 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@391) $generated@@46 $generated@@390)) (and ($generated@@132 $generated@@391) ($generated@@132 $generated@@391))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@128 $generated@@387 $generated@@391) ($generated@@130 0))) (=> (= ($generated@@128 $generated@@386 $generated@@391) ($generated@@130 0)) (=> (and (and (= $generated@@392 ($generated@@130 (- 0 1))) ($generated@@69 ($generated@@8 $generated@@392) $generated@@46 $generated@@390)) (and ($generated@@132 ($generated@@130 (- 0 1))) ($generated@@132 ($generated@@130 (- 0 1))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@130 ($generated@@128 $generated@@387 ($generated@@130 (- 0 1)))) ($generated@@130 0))) (=> (and (= ($generated@@130 ($generated@@128 $generated@@386 ($generated@@130 (- 0 1)))) ($generated@@130 0)) ($generated@@69 ($generated@@8 $generated@@393) $generated@@46 $generated@@390)) (=> (and (and (and ($generated@@132 $generated@@393) (= $generated@@394 (- $generated@@393 3))) (and ($generated@@69 ($generated@@8 $generated@@394) $generated@@46 $generated@@390) ($generated@@132 (- $generated@@393 3)))) (and (and ($generated@@132 $generated@@393) ($generated@@132 (- $generated@@393 3))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@128 $generated@@387 $generated@@393) (+ 3 ($generated@@128 $generated@@387 (- $generated@@393 3))))))))))))))
(let (($generated@@398  (=> (and ($generated@@395 $generated@@390) ($generated@@396 $generated@@390)) (=> (and (and (= 1 $generated@@127) (> $generated@@393 5)) (and (< $generated@@391 0) (= (ControlFlow 0 5) 2))) $generated@@397))))
$generated@@398)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int) Int)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@134 $generated@@139)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@139))
))) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@138 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@138 $generated@@140))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@142 T@U) ($generated@@143 Int) ) (!  (=> (and (= (type $generated@@142) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@143)) (not (= 0 $generated@@132)))) (and (=> (not ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@143 0))))) ($generated@@137 ($generated@@135 (- $generated@@143 1)))) (= ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)) (ite (< $generated@@143 0) 0 (+ 1 ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 (- $generated@@143 1))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)))
))))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@75 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@64)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 17)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@67 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@77) (= (type $generated@@229) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@230) ($generated@@66 $generated@@4))) (= (type $generated@@232) $generated@@77)) (= (type $generated@@233) ($generated@@66 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@148)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@157)) (= (type $generated@@242) $generated@@157)) (= ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@148) (= (type $generated@@244) $generated@@148)) (= ($generated@@154 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@154 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) ($generated@@0 ($generated@@81 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@81 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@253) $generated@@64)) (= ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@157) ($generated@@0 ($generated@@81 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@81 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@135 $generated@@255) $generated@@255)
 :pattern ( ($generated@@135 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@138 $generated@@256) $generated@@256)
 :pattern ( ($generated@@138 $generated@@256))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@136) (or ($generated@@137 $generated@@258) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@133 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@157)) (= (type $generated@@264) $generated@@157)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@148) (= ($generated@@146 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@148) ($generated@@146 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@157) (= (type $generated@@271) $generated@@157)) (= $generated@@269 ($generated@@235 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@146 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 18)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@157)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@74 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@76 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@79 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@76 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@81 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 19)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 20)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@76 $generated@@328 $generated@@2)) (= ($generated@@163 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@81 $generated@@327 $generated@@329))) (<= ($generated ($generated@@81 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@163 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@295 (type $generated@@330))))
(let (($generated@@332 ($generated@@294 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@293 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@292 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@291 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@295 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@295 (type $generated@@337))))
(let (($generated@@339 ($generated@@294 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@293 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@292 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@313 (type $generated@@341))))
(let (($generated@@343 ($generated@@312 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@311 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@310 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@309 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@313 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@313 (type $generated@@348))))
(let (($generated@@350 ($generated@@312 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@311 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@310 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@353) $generated@@64)) (= ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@352 $generated@@354)))) ($generated@@236 $generated@@354 $generated@@353))
 :pattern ( ($generated@@81 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@157) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@260 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@157) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@260 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@81 ($generated@@286 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@81 ($generated@@286 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@295 (type $generated@@371))))
(let (($generated@@373 ($generated@@294 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@375) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375)))) (= ($generated@@81 ($generated@@367 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@313 (type $generated@@379))))
(let (($generated@@381 ($generated@@312 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@383) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383)))) (= ($generated@@81 ($generated@@377 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@294 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@293 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@312 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@311 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))) (and ($generated@@260 ($generated@@81 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@260 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@64)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))) (and ($generated@@260 ($generated@@81 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@260 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@313 (type $generated@@412))))
(let (($generated@@414 ($generated@@312 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@311 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@310 $generated@@414 $generated@@413)) (= ($generated@@309 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@309 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@313 (type $generated@@415))))
(let (($generated@@417 ($generated@@312 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@311 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@310 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@313 (type $generated@@418))))
(let (($generated@@420 ($generated@@312 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@311 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@310 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@157))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@295 (type $generated@@421))))
(let (($generated@@423 ($generated@@294 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@293 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@292 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@157) (= (type $generated@@425) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@421) ($generated@@280 ($generated@@235 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@313 (type $generated@@426))))
(let (($generated@@428 ($generated@@312 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@311 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@310 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@157) (= (type $generated@@430) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@426) ($generated@@280 ($generated@@235 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@157) ($generated@@236 $generated@@431 $generated@@46)) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@144 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@157) ($generated@@236 $generated@@432 $generated@@47)) (and (= ($generated@@280 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@144 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@157) ($generated@@236 $generated@@433 $generated@@44)) (and (= ($generated@@280 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@144 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 21))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@236 $generated@@435 $generated@@45)) (and (= ($generated@@280 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@144 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@236 ($generated@@280 $generated@@436) $generated@@437) ($generated@@144 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@236 ($generated@@280 $generated@@436) $generated@@437))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (= (type $generated@@438) $generated@@136) (or ($generated@@137 $generated@@439) (not (= 0 $generated@@132)))) (and (=> (<= 0 $generated@@439) ($generated@@137 (- $generated@@439 1))) (= ($generated@@133 ($generated@@134 $generated@@438) $generated@@439) (ite (< $generated@@439 0) 0 (+ 1 ($generated@@133 $generated@@438 (- $generated@@439 1)))))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@438) $generated@@439))
))))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@79 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@76 $generated@@441 $generated@@2)) (<= 0 ($generated@@285 $generated@@440))))
 :pattern ( ($generated@@285 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@275 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@274 $generated@@443)) (<= 0 ($generated@@273 $generated@@442))))
 :pattern ( ($generated@@273 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@394 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@394 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@394 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@402 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@72 ($generated@@402 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@157) (= (type $generated@@465) $generated@@157)) (= ($generated@@266 ($generated@@235 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@147 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@147 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@147 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@147 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) (= (type $generated@@475) $generated@@157)) (= ($generated@@155 ($generated@@235 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@235 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@157) (= (type $generated@@477) $generated@@157)) (= ($generated@@156 ($generated@@235 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@235 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@136)
 :pattern ( ($generated@@478 $generated@@480))
)) (= (type $generated@@479) $generated@@136)))
(assert (forall (($generated@@481 T@U) ($generated@@482 Int) ) (!  (=> (= (type $generated@@481) $generated@@136) (= ($generated@@133 $generated@@481 $generated@@482) ($generated@@133 $generated@@479 $generated@@482)))
 :pattern ( ($generated@@133 ($generated@@478 $generated@@481) $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@275 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@274 $generated@@157)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@273 $generated@@489))) ($generated@@260 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@245 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@245 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@250 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@250 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@250 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@162 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@162 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@162 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@366 $generated@@512 ($generated@@280 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@280 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))) (and ($generated@@236 ($generated@@81 ($generated@@367 $generated@@513) $generated@@516) $generated@@515) ($generated@@236 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))) (and ($generated@@236 ($generated@@81 ($generated@@377 $generated@@517) $generated@@520) $generated@@519) ($generated@@236 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@157) (= (type $generated@@524) $generated@@157)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@235 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@235 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@157) (= (type $generated@@526) $generated@@157)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@235 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@235 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 Int) ) (!  (=> (= (type $generated@@527) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@527) $generated@@528) ($generated@@133 $generated@@527 $generated@@528)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@157) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529)) $generated@@529) ($generated@@144 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529) ($generated@@394 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@157) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534))) (and (= ($generated@@280 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532)) $generated@@532) ($generated@@144 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532) ($generated@@402 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@157)) ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536))) (and (= ($generated@@280 ($generated@@366 $generated@@148 $generated@@537)) $generated@@537) ($generated@@144 ($generated@@366 $generated@@148 $generated@@537) ($generated@@147 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@410 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@147 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@148) (= ($generated@@521 ($generated@@280 $generated@@544)) ($generated@@522 $generated@@544)))
 :pattern ( ($generated@@521 ($generated@@280 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) ($generated@@236 $generated@@545 ($generated@@75 0))) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@545)) $generated@@545) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@236 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@157) (= (type $generated@@547) $generated@@64)) ($generated@@236 $generated@@546 ($generated@@245 $generated@@547))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546)) $generated@@546) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546) ($generated@@245 $generated@@547))))
 :pattern ( ($generated@@236 $generated@@546 ($generated@@245 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@157) (= (type $generated@@549) $generated@@64)) ($generated@@236 $generated@@548 ($generated@@250 $generated@@549))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548)) $generated@@548) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548) ($generated@@250 $generated@@549))))
 :pattern ( ($generated@@236 $generated@@548 ($generated@@250 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@157) (= (type $generated@@551) $generated@@64)) ($generated@@236 $generated@@550 ($generated@@162 $generated@@551))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550)) $generated@@550) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550) ($generated@@162 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@162 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@157) (= (type $generated@@553) $generated@@64)) ($generated@@236 $generated@@552 ($generated@@483 $generated@@553))) (and (= ($generated@@280 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552)) $generated@@552) ($generated@@144 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552) ($generated@@483 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 ($generated@@483 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@260 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@148) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@560) (and ($generated@@146 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@148) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@564) (and ($generated@@146 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@157) (= (type $generated@@567) $generated@@157)) (= ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)) ($generated@@138 ($generated@@235 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))) ($generated@@138 ($generated@@280 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@280 ($generated@@138 $generated@@569)) ($generated@@138 ($generated@@280 $generated@@569)))
 :pattern ( ($generated@@280 ($generated@@138 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@275 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@274 $generated@@571)) (= ($generated@@273 $generated@@570) 0)) (= $generated@@570 ($generated@@272 $generated@@571))))
 :pattern ( ($generated@@273 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@285 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@434)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@157)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@274 $generated@@157)) (= (type $generated@@587) $generated@@64)) (= ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@273 $generated@@586))) ($generated@@236 ($generated@@484 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@484 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@274 $generated@@157)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@273 $generated@@590))) (< ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594))) (and (and ($generated@@144 ($generated@@291 $generated@@592) ($generated@@245 $generated@@593)) ($generated@@144 ($generated@@334 $generated@@592) ($generated@@245 $generated@@594))) ($generated@@144 ($generated@@365 $generated@@592) ($generated@@245 ($generated@@147 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597))) (and (and ($generated@@144 ($generated@@309 $generated@@595) ($generated@@250 $generated@@596)) ($generated@@144 ($generated@@345 $generated@@595) ($generated@@250 $generated@@597))) ($generated@@144 ($generated@@376 $generated@@595) ($generated@@250 ($generated@@147 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@144 $generated@@598 $generated@@46))
 :pattern ( ($generated@@144 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@144 $generated@@599 $generated@@47))
 :pattern ( ($generated@@144 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@144 $generated@@600 $generated@@44))
 :pattern ( ($generated@@144 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@434) ($generated@@144 $generated@@601 $generated@@45))
 :pattern ( ($generated@@144 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@157) ($generated@@144 $generated@@602 $generated@@48))
 :pattern ( ($generated@@144 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@607) $generated@@77)) (= (type $generated@@608) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@136)) (= (type $generated@@610) $generated@@136)) (= (type $generated@@611) $generated@@136)) (= (type $generated@@612) $generated@@136)) (= (type $generated@@613) $generated@@136)) (= (type $generated@@614) $generated@@136)) (= (type $generated@@615) $generated@@136)) (= (type $generated@@616) $generated@@136)) (= (type $generated@@617) $generated@@136)) (= (type $generated@@618) $generated@@136)) (= (type $generated@@619) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@621  (=> (<= 0 $generated@@603) (=> (and (= $generated@@604 (- $generated@@603 1)) ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@605)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603))) (=> (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@604 $generated@@603))))))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (= $generated@@606 ($generated@@223 $generated@@607 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@622) (=> (= (ControlFlow 0 6) 4) $generated@@621)))))
(let (($generated@@624 true))
(let (($generated@@625  (=> (and (and (= $generated@@608 ($generated@@168 $generated@@607 $generated@@605 $generated@@60 false)) (= $generated@@609 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@610))))) (and (= $generated@@611 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@610))))) (= ($generated@@478 $generated@@610) $generated@@610))) (=> (and (and (and (= $generated@@612 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@613))))) (= $generated@@614 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@613))))))) (and (= ($generated@@478 $generated@@613) $generated@@613) (= $generated@@615 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@616))))))) (and (and (= $generated@@617 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@616)))))) (= ($generated@@478 $generated@@616) $generated@@616)) (and (= ($generated@@478 $generated@@618) $generated@@618) (= ($generated@@478 $generated@@619) $generated@@619)))) (and (=> (= (ControlFlow 0 7) 1) $generated@@624) (=> (= (ControlFlow 0 7) 6) $generated@@623))))))
(let (($generated@@626  (=> (and (and ($generated@@259 $generated@@605) ($generated@@620 $generated@@605)) (and (= 0 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@625)))
$generated@@626)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int) Int)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@134 $generated@@139)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@139))
))) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@138 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@138 $generated@@140))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@142 T@U) ($generated@@143 Int) ) (!  (=> (and (= (type $generated@@142) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@143)) (not (= 0 $generated@@132)))) (and (=> (not ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@143 0))))) ($generated@@137 ($generated@@135 (- $generated@@143 1)))) (= ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)) (ite (< $generated@@143 0) 0 (+ 1 ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 (- $generated@@143 1))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)))
))))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@75 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@64)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 17)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@67 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@77) (= (type $generated@@229) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@230) ($generated@@66 $generated@@4))) (= (type $generated@@232) $generated@@77)) (= (type $generated@@233) ($generated@@66 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@148)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@157)) (= (type $generated@@242) $generated@@157)) (= ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@148) (= (type $generated@@244) $generated@@148)) (= ($generated@@154 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@154 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) ($generated@@0 ($generated@@81 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@81 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@253) $generated@@64)) (= ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@157) ($generated@@0 ($generated@@81 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@81 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@135 $generated@@255) $generated@@255)
 :pattern ( ($generated@@135 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@138 $generated@@256) $generated@@256)
 :pattern ( ($generated@@138 $generated@@256))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@136) (or ($generated@@137 $generated@@258) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@133 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@157)) (= (type $generated@@264) $generated@@157)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@148) (= ($generated@@146 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@148) ($generated@@146 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@157) (= (type $generated@@271) $generated@@157)) (= $generated@@269 ($generated@@235 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@146 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 18)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@157)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@74 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@76 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@79 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@76 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@81 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 19)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 20)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@76 $generated@@328 $generated@@2)) (= ($generated@@163 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@81 $generated@@327 $generated@@329))) (<= ($generated ($generated@@81 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@163 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@295 (type $generated@@330))))
(let (($generated@@332 ($generated@@294 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@293 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@292 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@291 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@295 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@295 (type $generated@@337))))
(let (($generated@@339 ($generated@@294 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@293 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@292 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@313 (type $generated@@341))))
(let (($generated@@343 ($generated@@312 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@311 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@310 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@309 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@313 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@313 (type $generated@@348))))
(let (($generated@@350 ($generated@@312 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@311 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@310 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@353) $generated@@64)) (= ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@352 $generated@@354)))) ($generated@@236 $generated@@354 $generated@@353))
 :pattern ( ($generated@@81 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@157) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@260 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@157) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@260 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@81 ($generated@@286 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@81 ($generated@@286 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@295 (type $generated@@371))))
(let (($generated@@373 ($generated@@294 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@375) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375)))) (= ($generated@@81 ($generated@@367 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@313 (type $generated@@379))))
(let (($generated@@381 ($generated@@312 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@383) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383)))) (= ($generated@@81 ($generated@@377 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@294 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@293 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@312 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@311 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))) (and ($generated@@260 ($generated@@81 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@260 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@64)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))) (and ($generated@@260 ($generated@@81 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@260 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@313 (type $generated@@412))))
(let (($generated@@414 ($generated@@312 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@311 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@310 $generated@@414 $generated@@413)) (= ($generated@@309 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@309 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@313 (type $generated@@415))))
(let (($generated@@417 ($generated@@312 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@311 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@310 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@313 (type $generated@@418))))
(let (($generated@@420 ($generated@@312 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@311 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@310 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@157))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@295 (type $generated@@421))))
(let (($generated@@423 ($generated@@294 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@293 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@292 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@157) (= (type $generated@@425) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@421) ($generated@@280 ($generated@@235 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@313 (type $generated@@426))))
(let (($generated@@428 ($generated@@312 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@311 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@310 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@157) (= (type $generated@@430) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@426) ($generated@@280 ($generated@@235 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@157) ($generated@@236 $generated@@431 $generated@@46)) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@144 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@157) ($generated@@236 $generated@@432 $generated@@47)) (and (= ($generated@@280 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@144 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@157) ($generated@@236 $generated@@433 $generated@@44)) (and (= ($generated@@280 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@144 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 21))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@236 $generated@@435 $generated@@45)) (and (= ($generated@@280 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@144 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@236 ($generated@@280 $generated@@436) $generated@@437) ($generated@@144 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@236 ($generated@@280 $generated@@436) $generated@@437))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (= (type $generated@@438) $generated@@136) (or ($generated@@137 $generated@@439) (not (= 0 $generated@@132)))) (and (=> (<= 0 $generated@@439) ($generated@@137 (- $generated@@439 1))) (= ($generated@@133 ($generated@@134 $generated@@438) $generated@@439) (ite (< $generated@@439 0) 0 (+ 1 ($generated@@133 $generated@@438 (- $generated@@439 1)))))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@438) $generated@@439))
))))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@79 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@76 $generated@@441 $generated@@2)) (<= 0 ($generated@@285 $generated@@440))))
 :pattern ( ($generated@@285 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@275 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@274 $generated@@443)) (<= 0 ($generated@@273 $generated@@442))))
 :pattern ( ($generated@@273 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@394 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@394 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@394 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@402 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@72 ($generated@@402 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@157) (= (type $generated@@465) $generated@@157)) (= ($generated@@266 ($generated@@235 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@147 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@147 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@147 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@147 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) (= (type $generated@@475) $generated@@157)) (= ($generated@@155 ($generated@@235 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@235 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@157) (= (type $generated@@477) $generated@@157)) (= ($generated@@156 ($generated@@235 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@235 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@136)
 :pattern ( ($generated@@478 $generated@@480))
)) (= (type $generated@@479) $generated@@136)))
(assert (forall (($generated@@481 T@U) ($generated@@482 Int) ) (!  (=> (= (type $generated@@481) $generated@@136) (= ($generated@@133 $generated@@481 $generated@@482) ($generated@@133 $generated@@479 $generated@@482)))
 :pattern ( ($generated@@133 ($generated@@478 $generated@@481) $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@275 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@274 $generated@@157)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@273 $generated@@489))) ($generated@@260 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@245 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@245 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@250 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@250 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@250 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@162 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@162 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@162 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@366 $generated@@512 ($generated@@280 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@280 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))) (and ($generated@@236 ($generated@@81 ($generated@@367 $generated@@513) $generated@@516) $generated@@515) ($generated@@236 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))) (and ($generated@@236 ($generated@@81 ($generated@@377 $generated@@517) $generated@@520) $generated@@519) ($generated@@236 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@157) (= (type $generated@@524) $generated@@157)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@235 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@235 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@157) (= (type $generated@@526) $generated@@157)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@235 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@235 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 Int) ) (!  (=> (= (type $generated@@527) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@527) $generated@@528) ($generated@@133 $generated@@527 $generated@@528)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@157) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529)) $generated@@529) ($generated@@144 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529) ($generated@@394 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@157) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534))) (and (= ($generated@@280 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532)) $generated@@532) ($generated@@144 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532) ($generated@@402 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@157)) ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536))) (and (= ($generated@@280 ($generated@@366 $generated@@148 $generated@@537)) $generated@@537) ($generated@@144 ($generated@@366 $generated@@148 $generated@@537) ($generated@@147 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@410 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@147 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@148) (= ($generated@@521 ($generated@@280 $generated@@544)) ($generated@@522 $generated@@544)))
 :pattern ( ($generated@@521 ($generated@@280 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) ($generated@@236 $generated@@545 ($generated@@75 0))) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@545)) $generated@@545) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@236 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@157) (= (type $generated@@547) $generated@@64)) ($generated@@236 $generated@@546 ($generated@@245 $generated@@547))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546)) $generated@@546) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546) ($generated@@245 $generated@@547))))
 :pattern ( ($generated@@236 $generated@@546 ($generated@@245 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@157) (= (type $generated@@549) $generated@@64)) ($generated@@236 $generated@@548 ($generated@@250 $generated@@549))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548)) $generated@@548) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548) ($generated@@250 $generated@@549))))
 :pattern ( ($generated@@236 $generated@@548 ($generated@@250 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@157) (= (type $generated@@551) $generated@@64)) ($generated@@236 $generated@@550 ($generated@@162 $generated@@551))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550)) $generated@@550) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550) ($generated@@162 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@162 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@157) (= (type $generated@@553) $generated@@64)) ($generated@@236 $generated@@552 ($generated@@483 $generated@@553))) (and (= ($generated@@280 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552)) $generated@@552) ($generated@@144 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552) ($generated@@483 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 ($generated@@483 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@260 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@148) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@560) (and ($generated@@146 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@148) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@564) (and ($generated@@146 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@157) (= (type $generated@@567) $generated@@157)) (= ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)) ($generated@@138 ($generated@@235 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))) ($generated@@138 ($generated@@280 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@280 ($generated@@138 $generated@@569)) ($generated@@138 ($generated@@280 $generated@@569)))
 :pattern ( ($generated@@280 ($generated@@138 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@275 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@274 $generated@@571)) (= ($generated@@273 $generated@@570) 0)) (= $generated@@570 ($generated@@272 $generated@@571))))
 :pattern ( ($generated@@273 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@285 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@434)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@157)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@274 $generated@@157)) (= (type $generated@@587) $generated@@64)) (= ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@273 $generated@@586))) ($generated@@236 ($generated@@484 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@484 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@274 $generated@@157)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@273 $generated@@590))) (< ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594))) (and (and ($generated@@144 ($generated@@291 $generated@@592) ($generated@@245 $generated@@593)) ($generated@@144 ($generated@@334 $generated@@592) ($generated@@245 $generated@@594))) ($generated@@144 ($generated@@365 $generated@@592) ($generated@@245 ($generated@@147 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597))) (and (and ($generated@@144 ($generated@@309 $generated@@595) ($generated@@250 $generated@@596)) ($generated@@144 ($generated@@345 $generated@@595) ($generated@@250 $generated@@597))) ($generated@@144 ($generated@@376 $generated@@595) ($generated@@250 ($generated@@147 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@144 $generated@@598 $generated@@46))
 :pattern ( ($generated@@144 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@144 $generated@@599 $generated@@47))
 :pattern ( ($generated@@144 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@144 $generated@@600 $generated@@44))
 :pattern ( ($generated@@144 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@434) ($generated@@144 $generated@@601 $generated@@45))
 :pattern ( ($generated@@144 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@157) ($generated@@144 $generated@@602 $generated@@48))
 :pattern ( ($generated@@144 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@607) $generated@@77)) (= (type $generated@@608) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@136)) (= (type $generated@@610) $generated@@136)) (= (type $generated@@611) $generated@@136)) (= (type $generated@@612) $generated@@136)) (= (type $generated@@613) $generated@@136)) (= (type $generated@@614) $generated@@136)) (= (type $generated@@615) $generated@@136)) (= (type $generated@@616) $generated@@136)) (= (type $generated@@617) $generated@@136)) (= (type $generated@@618) $generated@@136)) (= (type $generated@@619) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@621  (=> (<= 0 $generated@@603) (=> (and (= $generated@@604 (- $generated@@603 1)) ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@605)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603))) (=> (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@604 $generated@@603))))))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (= $generated@@606 ($generated@@223 $generated@@607 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@622) (=> (= (ControlFlow 0 6) 4) $generated@@621)))))
(let (($generated@@624 true))
(let (($generated@@625  (=> (and (and (= $generated@@608 ($generated@@168 $generated@@607 $generated@@605 $generated@@60 false)) (= $generated@@609 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@610))))) (and (= $generated@@611 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@610))))) (= ($generated@@478 $generated@@610) $generated@@610))) (=> (and (and (and (= $generated@@612 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@613))))) (= $generated@@614 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@613))))))) (and (= ($generated@@478 $generated@@613) $generated@@613) (= $generated@@615 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@616))))))) (and (and (= $generated@@617 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@616)))))) (= ($generated@@478 $generated@@616) $generated@@616)) (and (= ($generated@@478 $generated@@618) $generated@@618) (= ($generated@@478 $generated@@619) $generated@@619)))) (and (=> (= (ControlFlow 0 7) 1) $generated@@624) (=> (= (ControlFlow 0 7) 6) $generated@@623))))))
(let (($generated@@626  (=> (and (and ($generated@@259 $generated@@605) ($generated@@620 $generated@@605)) (and (= 0 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@625)))
$generated@@626)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@139 (T@U Int) Int)
(declare-fun $generated@@140 (Int) Bool)
(declare-fun $generated@@143 (T@U Int) Int)
(declare-fun $generated@@144 (Int) Bool)
(declare-fun $generated@@147 (T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@149 (T@T T@T) T@T)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@151 (T@T) T@T)
(declare-fun $generated@@152 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U Int) Int)
(declare-fun $generated@@212 (Int) Bool)
(declare-fun $generated@@215 (T@T) T@U)
(declare-fun $generated@@216 (T@U) Int)
(declare-fun $generated@@217 (T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@223 (T@U T@U T@U) Bool)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@225 () T@T)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@231 (T@T T@T) T@U)
(declare-fun $generated@@232 (T@T T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@234 (T@T) T@T)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@249 (T@T T@T) T@U)
(declare-fun $generated@@250 (T@T T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@298 (T@U T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@321 () T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 () T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@U Int) T@U)
(declare-fun $generated@@367 (T@U) Int)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@U) T@U)
(declare-fun $generated@@416 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))) (forall (($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(= (type ($generated@@133 $generated@@135)) $generated@@136))
 :pattern ( ($generated@@133 $generated@@135))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@137 T@U) ($generated@@138 Int) ) (!  (=> (and (= (type $generated@@137) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@138)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@138 0))))) ($generated@@132 ($generated@@130 (- $generated@@138 1)))) (= ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)) (ite (< $generated@@138 0) 0 (+ 1 ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 (- $generated@@138 1))))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@141 T@U) ($generated@@142 Int) ) (!  (=> (and (= (type $generated@@141) $generated@@131) (or ($generated@@140 ($generated@@130 $generated@@142)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@142 0))))) ($generated@@140 ($generated@@130 (- $generated@@142 1)))) (= ($generated@@139 ($generated@@129 $generated@@141) ($generated@@130 $generated@@142)) (ite (< $generated@@142 0) 0 (+ 1 ($generated@@139 ($generated@@129 $generated@@141) ($generated@@130 (- $generated@@142 1))))))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@129 $generated@@141) ($generated@@130 $generated@@142)))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@145 T@U) ($generated@@146 Int) ) (!  (=> (and (= (type $generated@@145) $generated@@131) (or ($generated@@144 ($generated@@130 $generated@@146)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@146 0))))) ($generated@@144 ($generated@@130 (- $generated@@146 1)))) (= ($generated@@143 ($generated@@129 $generated@@145) ($generated@@130 $generated@@146)) (ite (< $generated@@146 0) 0 (+ 1 ($generated@@143 ($generated@@129 $generated@@145) ($generated@@130 (- $generated@@146 1))))))))
 :weight 3
 :pattern ( ($generated@@143 ($generated@@129 $generated@@145) ($generated@@130 $generated@@146)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (= ($generated@@1 ($generated@@149 $generated@@153 $generated@@154)) 13)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (! (= ($generated@@150 ($generated@@149 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@151 ($generated@@149 $generated@@157 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@149 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@151 (type $generated@@159))))
(= (type ($generated@@147 $generated@@159 $generated@@160 $generated@@161)) $generated@@162))
 :pattern ( ($generated@@147 $generated@@159 $generated@@160 $generated@@161))
))) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (let (($generated@@167 (type $generated@@166)))
(let (($generated@@168 (type $generated@@164)))
(= (type ($generated@@152 $generated@@163 $generated@@164 $generated@@165 $generated@@166)) ($generated@@149 $generated@@168 $generated@@167))))
 :pattern ( ($generated@@152 $generated@@163 $generated@@164 $generated@@165 $generated@@166))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 ($generated@@151 (type $generated@@169))))
 (=> (= (type $generated@@172) $generated@@173) (= ($generated@@147 ($generated@@152 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@170 $generated@@171) $generated@@172)))
 :weight 0
))) (and (and (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@176 $generated@@178) (= ($generated@@147 ($generated@@152 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@147 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@183 $generated@@185) (= ($generated@@147 ($generated@@152 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@147 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or true (= ($generated@@147 ($generated@@152 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@147 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ) (! (= (type ($generated@@148 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@149 $generated@@72 $generated@@4))
 :pattern ( ($generated@@148 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 Bool) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@64 (type $generated@@201))))
 (=> (and (and (and (and (= (type $generated@@196) $generated@@72) (= (type $generated@@197) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@198) ($generated@@63 $generated@@4))) (= (type $generated@@200) $generated@@72)) (= (type $generated@@201) ($generated@@63 $generated@@202))) (= ($generated@@0 ($generated@@147 ($generated@@148 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))  (=> (and (not (= $generated@@200 $generated@@196)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@197 $generated@@200) $generated@@198))) $generated@@199))))
 :pattern ( ($generated@@147 ($generated@@148 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@203 Int) ) (! (= ($generated@@130 $generated@@203) $generated@@203)
 :pattern ( ($generated@@130 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ) (! (= ($generated@@133 $generated@@204) $generated@@204)
 :pattern ( ($generated@@133 $generated@@204))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@205 T@U) ($generated@@206 Int) ) (!  (=> (and (= (type $generated@@205) $generated@@131) (or ($generated@@132 $generated@@206) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@205 $generated@@206))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@207 T@U) ($generated@@208 Int) ) (!  (=> (and (= (type $generated@@207) $generated@@131) (or ($generated@@140 $generated@@208) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@139 $generated@@207 $generated@@208))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@209 T@U) ($generated@@210 Int) ) (!  (=> (and (= (type $generated@@209) $generated@@131) (or ($generated@@144 $generated@@210) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@143 $generated@@209 $generated@@210))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@213 T@U) ($generated@@214 Int) ) (!  (=> (and (= (type $generated@@213) $generated@@131) (or ($generated@@212 $generated@@214) (not (= 1 $generated@@127)))) true)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
))))
(assert  (and (and (forall (($generated@@219 T@T) ) (= ($generated@@1 ($generated@@217 $generated@@219)) 14)) (forall (($generated@@220 T@T) ) (! (= ($generated@@218 ($generated@@217 $generated@@220)) $generated@@220)
 :pattern ( ($generated@@217 $generated@@220))
))) (forall (($generated@@221 T@T) ) (! (= (type ($generated@@215 $generated@@221)) ($generated@@217 $generated@@221))
 :pattern ( ($generated@@215 $generated@@221))
))))
(assert (forall (($generated@@222 T@T) ) (! (= ($generated@@216 ($generated@@215 $generated@@222)) 0)
 :pattern ( ($generated@@215 $generated@@222))
)))
(assert  (and (= ($generated@@1 $generated@@225) 15) (forall (($generated@@226 T@U) ) (! (= (type ($generated@@224 $generated@@226)) $generated@@225)
 :pattern ( ($generated@@224 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@61) (= (type $generated@@229) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@223 ($generated@@224 $generated@@227) $generated@@228 $generated@@229) ($generated@@69 $generated@@227 $generated@@228 $generated@@229)))
 :pattern ( ($generated@@223 ($generated@@224 $generated@@227) $generated@@228 $generated@@229))
)))
(assert  (and (and (and (and (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (= ($generated@@1 ($generated@@232 $generated@@235 $generated@@236)) 16)) (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (! (= ($generated@@233 ($generated@@232 $generated@@237 $generated@@238)) $generated@@237)
 :pattern ( ($generated@@232 $generated@@237 $generated@@238))
))) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= ($generated@@234 ($generated@@232 $generated@@239 $generated@@240)) $generated@@240)
 :pattern ( ($generated@@232 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@233 (type $generated@@241))))
(= (type ($generated@@230 $generated@@241)) ($generated@@71 $generated@@242 $generated@@4)))
 :pattern ( ($generated@@230 $generated@@241))
))) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= (type ($generated@@231 $generated@@243 $generated@@244)) ($generated@@232 $generated@@243 $generated@@244))
 :pattern ( ($generated@@231 $generated@@243 $generated@@244))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@T) ) (! (let (($generated@@247 (type $generated@@245)))
 (not ($generated@@0 ($generated@@76 ($generated@@230 ($generated@@231 $generated@@247 $generated@@246)) $generated@@245))))
 :pattern ( (let (($generated@@247 (type $generated@@245)))
($generated@@76 ($generated@@230 ($generated@@231 $generated@@247 $generated@@246)) $generated@@245)))
)))
(assert  (and (and (and (and (forall (($generated@@253 T@T) ($generated@@254 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@253 $generated@@254)) 17)) (forall (($generated@@255 T@T) ($generated@@256 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@255 $generated@@256)) $generated@@255)
 :pattern ( ($generated@@250 $generated@@255 $generated@@256))
))) (forall (($generated@@257 T@T) ($generated@@258 T@T) ) (! (= ($generated@@252 ($generated@@250 $generated@@257 $generated@@258)) $generated@@258)
 :pattern ( ($generated@@250 $generated@@257 $generated@@258))
))) (forall (($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@251 (type $generated@@259))))
(= (type ($generated@@248 $generated@@259)) ($generated@@71 $generated@@260 $generated@@4)))
 :pattern ( ($generated@@248 $generated@@259))
))) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= (type ($generated@@249 $generated@@261 $generated@@262)) ($generated@@250 $generated@@261 $generated@@262))
 :pattern ( ($generated@@249 $generated@@261 $generated@@262))
))))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@T) ) (! (let (($generated@@265 (type $generated@@263)))
 (not ($generated@@0 ($generated@@76 ($generated@@248 ($generated@@249 $generated@@265 $generated@@264)) $generated@@263))))
 :pattern ( (let (($generated@@265 (type $generated@@263)))
($generated@@76 ($generated@@248 ($generated@@249 $generated@@265 $generated@@264)) $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@234 (type $generated@@266))))
(let (($generated@@268 ($generated@@233 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@232 $generated@@268 $generated@@267)) (or (= $generated@@266 ($generated@@231 $generated@@268 $generated@@267)) (exists (($generated@@269 T@U) ) (!  (and (= (type $generated@@269) $generated@@268) ($generated@@0 ($generated@@76 ($generated@@230 $generated@@266) $generated@@269)))
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
))))))
 :pattern ( ($generated@@230 $generated@@266))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 ($generated@@252 (type $generated@@270))))
(let (($generated@@272 ($generated@@251 (type $generated@@270))))
 (=> (= (type $generated@@270) ($generated@@250 $generated@@272 $generated@@271)) (or (= $generated@@270 ($generated@@249 $generated@@272 $generated@@271)) (exists (($generated@@273 T@U) ) (!  (and (= (type $generated@@273) $generated@@272) ($generated@@0 ($generated@@76 ($generated@@248 $generated@@270) $generated@@273)))
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
))))))
 :pattern ( ($generated@@248 $generated@@270))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@61)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@276) ($generated@@71 $generated@@225 $generated@@4)) (= (type $generated@@277) $generated@@61)) (= (type $generated@@278) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@276 ($generated@@274 $generated@@277) $generated@@278) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@225) ($generated@@0 ($generated@@76 $generated@@276 $generated@@279))) ($generated@@223 $generated@@279 $generated@@277 $generated@@278))
 :pattern ( ($generated@@76 $generated@@276 $generated@@279))
))))
 :pattern ( ($generated@@69 $generated@@276 ($generated@@274 $generated@@277) $generated@@278))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@61)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@282) ($generated@@71 $generated@@225 $generated@@4)) (= (type $generated@@283) $generated@@61)) (= (type $generated@@284) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@225) ($generated@@0 ($generated@@76 $generated@@282 $generated@@285))) ($generated@@223 $generated@@285 $generated@@283 $generated@@284))
 :pattern ( ($generated@@76 $generated@@282 $generated@@285))
))))
 :pattern ( ($generated@@69 $generated@@282 ($generated@@280 $generated@@283) $generated@@284))
)))
(assert  (and (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (= (type ($generated@@286 $generated@@288 $generated@@289)) $generated@@61)
 :pattern ( ($generated@@286 $generated@@288 $generated@@289))
)) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@234 (type $generated@@290))))
(let (($generated@@292 ($generated@@233 (type $generated@@290))))
(= (type ($generated@@287 $generated@@290)) ($generated@@71 $generated@@292 $generated@@291))))
 :pattern ( ($generated@@287 $generated@@290))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (= (type $generated@@293) ($generated@@232 $generated@@225 $generated@@225)) (= (type $generated@@294) $generated@@61)) (= (type $generated@@295) $generated@@61)) (= (type $generated@@296) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@293 ($generated@@286 $generated@@294 $generated@@295) $generated@@296) (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@225) ($generated@@0 ($generated@@76 ($generated@@230 $generated@@293) $generated@@297))) (and ($generated@@223 ($generated@@76 ($generated@@287 $generated@@293) $generated@@297) $generated@@295 $generated@@296) ($generated@@223 $generated@@297 $generated@@294 $generated@@296)))
 :pattern ( ($generated@@76 ($generated@@287 $generated@@293) $generated@@297))
 :pattern ( ($generated@@76 ($generated@@230 $generated@@293) $generated@@297))
))))
 :pattern ( ($generated@@69 $generated@@293 ($generated@@286 $generated@@294 $generated@@295) $generated@@296))
)))
(assert  (and (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (= (type ($generated@@298 $generated@@300 $generated@@301)) $generated@@61)
 :pattern ( ($generated@@298 $generated@@300 $generated@@301))
)) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@252 (type $generated@@302))))
(let (($generated@@304 ($generated@@251 (type $generated@@302))))
(= (type ($generated@@299 $generated@@302)) ($generated@@71 $generated@@304 $generated@@303))))
 :pattern ( ($generated@@299 $generated@@302))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (= (type $generated@@305) ($generated@@250 $generated@@225 $generated@@225)) (= (type $generated@@306) $generated@@61)) (= (type $generated@@307) $generated@@61)) (= (type $generated@@308) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@305 ($generated@@298 $generated@@306 $generated@@307) $generated@@308) (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@225) ($generated@@0 ($generated@@76 ($generated@@248 $generated@@305) $generated@@309))) (and ($generated@@223 ($generated@@76 ($generated@@299 $generated@@305) $generated@@309) $generated@@307 $generated@@308) ($generated@@223 $generated@@309 $generated@@306 $generated@@308)))
 :pattern ( ($generated@@76 ($generated@@299 $generated@@305) $generated@@309))
 :pattern ( ($generated@@76 ($generated@@248 $generated@@305) $generated@@309))
))))
 :pattern ( ($generated@@69 $generated@@305 ($generated@@298 $generated@@306 $generated@@307) $generated@@308))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@71 $generated@@311 $generated@@4))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@252 (type $generated@@312))))
(let (($generated@@314 ($generated@@251 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@250 $generated@@314 $generated@@313)) (= (= $generated@@312 ($generated@@249 $generated@@314 $generated@@313)) (= ($generated@@248 $generated@@312) ($generated@@310 $generated@@314))))))
 :pattern ( ($generated@@248 $generated@@312))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@315 T@U) ($generated@@316 Int) ) (!  (=> (and (= (type $generated@@315) $generated@@131) (or ($generated@@132 $generated@@316) (not (= 0 $generated@@127)))) (and (=> (<= 0 $generated@@316) ($generated@@132 (- $generated@@316 1))) (= ($generated@@128 ($generated@@129 $generated@@315) $generated@@316) (ite (< $generated@@316 0) 0 (+ 1 ($generated@@128 $generated@@315 (- $generated@@316 1)))))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@315) $generated@@316))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@317 T@U) ($generated@@318 Int) ) (!  (=> (and (= (type $generated@@317) $generated@@131) (or ($generated@@140 $generated@@318) (not (= 0 $generated@@127)))) (and (=> (<= 0 $generated@@318) ($generated@@140 (- $generated@@318 1))) (= ($generated@@139 ($generated@@129 $generated@@317) $generated@@318) (ite (< $generated@@318 0) 0 (+ 1 ($generated@@139 $generated@@317 (- $generated@@318 1)))))))
 :pattern ( ($generated@@139 ($generated@@129 $generated@@317) $generated@@318))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@319 T@U) ($generated@@320 Int) ) (!  (=> (and (= (type $generated@@319) $generated@@131) (or ($generated@@144 $generated@@320) (not (= 0 $generated@@127)))) (and (=> (<= 0 $generated@@320) ($generated@@144 (- $generated@@320 1))) (= ($generated@@143 ($generated@@129 $generated@@319) $generated@@320) (ite (< $generated@@320 0) 0 (+ 1 ($generated@@143 $generated@@319 (- $generated@@320 1)))))))
 :pattern ( ($generated@@143 ($generated@@129 $generated@@319) $generated@@320))
))))
(assert (= (type $generated@@321) $generated@@131))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@322 T@U) ($generated@@323 Int) ) (!  (=> (and (= (type $generated@@322) $generated@@131) (or ($generated@@212 $generated@@323) (not (= 1 $generated@@127)))) (and (=> (<= 0 $generated@@323) ($generated@@144 (- $generated@@323 1))) (= ($generated@@211 ($generated@@129 $generated@@322) $generated@@323) (ite (< $generated@@323 0) 0 (+ 1 ($generated@@143 $generated@@321 (- $generated@@323 1)))))))
 :pattern ( ($generated@@211 ($generated@@129 $generated@@322) $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@218 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@217 $generated@@325)) (<= 0 ($generated@@216 $generated@@324))))
 :pattern ( ($generated@@216 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@326 ($generated@@286 $generated@@328 $generated@@329)) $generated@@328))
 :pattern ( ($generated@@286 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (= (type ($generated@@330 $generated@@331)) $generated@@61)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@61) (= (type $generated@@333) $generated@@61)) (= ($generated@@330 ($generated@@286 $generated@@332 $generated@@333)) $generated@@333))
 :pattern ( ($generated@@286 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@67 ($generated@@286 $generated@@334 $generated@@335)) $generated@@58))
 :pattern ( ($generated@@286 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@61) (= (type $generated@@339) $generated@@61)) (= ($generated@@336 ($generated@@298 $generated@@338 $generated@@339)) $generated@@338))
 :pattern ( ($generated@@298 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@61) (= (type $generated@@343) $generated@@61)) (= ($generated@@340 ($generated@@298 $generated@@342 $generated@@343)) $generated@@343))
 :pattern ( ($generated@@298 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@61) (= (type $generated@@345) $generated@@61)) (= ($generated@@67 ($generated@@298 $generated@@344 $generated@@345)) $generated@@59))
 :pattern ( ($generated@@298 $generated@@344 $generated@@345))
)))
(assert  (and (forall (($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@348)) $generated@@131)
 :pattern ( ($generated@@346 $generated@@348))
)) (= (type $generated@@347) $generated@@131)))
(assert (forall (($generated@@349 T@U) ($generated@@350 Int) ) (!  (=> (= (type $generated@@349) $generated@@131) (= ($generated@@128 $generated@@349 $generated@@350) ($generated@@128 $generated@@347 $generated@@350)))
 :pattern ( ($generated@@128 ($generated@@346 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 Int) ) (!  (=> (= (type $generated@@351) $generated@@131) (= ($generated@@139 $generated@@351 $generated@@352) ($generated@@139 $generated@@347 $generated@@352)))
 :pattern ( ($generated@@139 ($generated@@346 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 Int) ) (!  (=> (= (type $generated@@353) $generated@@131) (= ($generated@@143 $generated@@353 $generated@@354) ($generated@@143 $generated@@347 $generated@@354)))
 :pattern ( ($generated@@143 ($generated@@346 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 Int) ) (!  (=> (= (type $generated@@355) $generated@@131) (= ($generated@@211 $generated@@355 $generated@@356) ($generated@@211 $generated@@347 $generated@@356)))
 :pattern ( ($generated@@211 ($generated@@346 $generated@@355) $generated@@356))
)))
(assert  (and (forall (($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@359)) $generated@@61)
 :pattern ( ($generated@@357 $generated@@359))
)) (forall (($generated@@360 T@U) ($generated@@361 Int) ) (! (let (($generated@@362 ($generated@@218 (type $generated@@360))))
(= (type ($generated@@358 $generated@@360 $generated@@361)) $generated@@362))
 :pattern ( ($generated@@358 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@217 $generated@@225)) (= (type $generated@@364) $generated@@61)) (= (type $generated@@365) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@363 ($generated@@357 $generated@@364) $generated@@365) (forall (($generated@@366 Int) ) (!  (=> (and (<= 0 $generated@@366) (< $generated@@366 ($generated@@216 $generated@@363))) ($generated@@223 ($generated@@358 $generated@@363 $generated@@366) $generated@@364 $generated@@365))
 :pattern ( ($generated@@358 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@69 $generated@@363 ($generated@@357 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@368 Int) ) (! (= ($generated@@367 ($generated@@70 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@70 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (= (type ($generated@@369 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@61) (= ($generated@@369 ($generated@@274 $generated@@371)) $generated@@371))
 :pattern ( ($generated@@274 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@67 ($generated@@274 $generated@@372)) $generated@@54))
 :pattern ( ($generated@@274 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (= (type ($generated@@373 $generated@@374)) $generated@@61)
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (= (type $generated@@375) $generated@@61) (= ($generated@@373 ($generated@@280 $generated@@375)) $generated@@375))
 :pattern ( ($generated@@280 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@61) (= ($generated@@67 ($generated@@280 $generated@@376)) $generated@@55))
 :pattern ( ($generated@@280 $generated@@376))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) $generated@@61)
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) $generated@@61)
 :pattern ( ($generated@@378 $generated@@380))
))))
(assert (forall (($generated@@381 T@U) ) (!  (=> (= (type $generated@@381) $generated@@61) (= ($generated@@378 ($generated@@377 $generated@@381)) $generated@@381))
 :pattern ( ($generated@@377 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (= (type $generated@@382) $generated@@61) (= ($generated@@67 ($generated@@377 $generated@@382)) $generated@@56))
 :pattern ( ($generated@@377 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (= (type ($generated@@383 $generated@@384)) $generated@@61)
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@61) (= ($generated@@383 ($generated@@357 $generated@@385)) $generated@@385))
 :pattern ( ($generated@@357 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (!  (=> (= (type $generated@@386) $generated@@61) (= ($generated@@67 ($generated@@357 $generated@@386)) $generated@@57))
 :pattern ( ($generated@@357 $generated@@386))
)))
(assert (forall (($generated@@388 T@T) ($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@388 $generated@@389)) $generated@@388)
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated@@387 $generated@@391 ($generated@@224 $generated@@390)) $generated@@390))
 :pattern ( ($generated@@224 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (= (type $generated@@392) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@392) $generated@@393) ($generated@@128 $generated@@392 $generated@@393)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 Int) ) (!  (=> (= (type $generated@@394) $generated@@131) (= ($generated@@139 ($generated@@129 $generated@@394) $generated@@395) ($generated@@139 $generated@@394 $generated@@395)))
 :pattern ( ($generated@@139 ($generated@@129 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 Int) ) (!  (=> (= (type $generated@@396) $generated@@131) (= ($generated@@143 ($generated@@129 $generated@@396) $generated@@397) ($generated@@143 $generated@@396 $generated@@397)))
 :pattern ( ($generated@@143 ($generated@@129 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 Int) ) (!  (=> (= (type $generated@@398) $generated@@131) (= ($generated@@211 ($generated@@129 $generated@@398) $generated@@399) ($generated@@211 $generated@@398 $generated@@399)))
 :pattern ( ($generated@@211 ($generated@@129 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
 (not ($generated@@0 ($generated@@76 ($generated@@310 $generated@@401) $generated@@400))))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@76 ($generated@@310 $generated@@401) $generated@@400)))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@71 $generated@@225 $generated@@2)) (= (type $generated@@403) $generated@@61)) (= (type $generated@@404) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@402 ($generated@@377 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@225) (< 0 ($generated ($generated@@76 $generated@@402 $generated@@405)))) ($generated@@223 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@76 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@69 $generated@@402 ($generated@@377 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 Int) ) (! (= ($generated@@224 ($generated@@8 ($generated@@130 $generated@@406))) ($generated@@133 ($generated@@224 ($generated@@8 $generated@@406))))
 :pattern ( ($generated@@224 ($generated@@8 ($generated@@130 $generated@@406))))
)))
(assert (forall (($generated@@407 T@U) ) (! (= ($generated@@224 ($generated@@133 $generated@@407)) ($generated@@133 ($generated@@224 $generated@@407)))
 :pattern ( ($generated@@224 ($generated@@133 $generated@@407)))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@218 (type $generated@@408))))
 (=> (and (= (type $generated@@408) ($generated@@217 $generated@@409)) (= ($generated@@216 $generated@@408) 0)) (= $generated@@408 ($generated@@215 $generated@@409))))
 :pattern ( ($generated@@216 $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@411) $generated@@2)) ($generated@@69 $generated@@411 $generated@@46 $generated@@410))
 :pattern ( ($generated@@69 $generated@@411 $generated@@46 $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@413) $generated@@3)) ($generated@@69 $generated@@413 $generated@@47 $generated@@412))
 :pattern ( ($generated@@69 $generated@@413 $generated@@47 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@415) $generated@@4)) ($generated@@69 $generated@@415 $generated@@44 $generated@@414))
 :pattern ( ($generated@@69 $generated@@415 $generated@@44 $generated@@414))
)))
(assert (= ($generated@@1 $generated@@416) 18))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@418) $generated@@416)) ($generated@@69 $generated@@418 $generated@@45 $generated@@417))
 :pattern ( ($generated@@69 $generated@@418 $generated@@45 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@420) $generated@@225)) ($generated@@69 $generated@@420 $generated@@48 $generated@@419))
 :pattern ( ($generated@@69 $generated@@420 $generated@@48 $generated@@419))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@421 T@U) ($generated@@422 Int) ) (!  (=> (and (= (type $generated@@421) $generated@@131) (or ($generated@@212 ($generated@@130 $generated@@422)) (not (= 1 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@422 0))))) ($generated@@144 ($generated@@130 (- $generated@@422 1)))) (= ($generated@@211 ($generated@@129 $generated@@421) ($generated@@130 $generated@@422)) (ite (< $generated@@422 0) 0 (+ 1 ($generated@@143 $generated@@321 ($generated@@130 (- $generated@@422 1))))))))
 :weight 3
 :pattern ( ($generated@@211 ($generated@@129 $generated@@421) ($generated@@130 $generated@@422)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@423 (T@U) Bool)
(declare-fun $generated@@424 () T@U)
(declare-fun $generated@@425 (T@U) Bool)
(declare-fun $generated@@426 () T@U)
(declare-fun $generated@@427 () T@U)
(declare-fun $generated@@428 () T@U)
(declare-fun $generated@@429 () T@U)
(declare-fun $generated@@430 () Int)
(declare-fun $generated@@431 () Int)
(declare-fun $generated@@432 () Int)
(declare-fun $generated@@433 () Int)
(declare-fun $generated@@434 () Int)
(declare-fun $generated@@435 () T@U)
(declare-fun $generated@@436 () T@U)
(declare-fun $generated@@437 () T@U)
(declare-fun $generated@@438 () T@U)
(declare-fun $generated@@439 () T@U)
(declare-fun $generated@@440 () T@U)
(declare-fun $generated@@441 () T@U)
(declare-fun $generated@@442 () T@U)
(declare-fun $generated@@443 () T@U)
(declare-fun $generated@@444 () T@U)
(declare-fun $generated@@445 () Int)
(declare-fun $generated@@446 () Int)
(declare-fun $generated@@447 () Int)
(declare-fun $generated@@448 () Int)
(declare-fun $generated@@449 () Int)
(declare-fun $generated@@450 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@426) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@429) $generated@@131)) (= (type $generated@@424) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@427) $generated@@131)) (= (type $generated@@428) $generated@@131)) (= (type $generated@@435) $generated@@131)) (= (type $generated@@436) $generated@@131)) (= (type $generated@@437) $generated@@131)) (= (type $generated@@438) $generated@@131)) (= (type $generated@@439) $generated@@131)) (= (type $generated@@440) $generated@@131)) (= (type $generated@@441) $generated@@131)) (= (type $generated@@442) $generated@@131)) (= (type $generated@@443) ($generated@@149 $generated@@72 $generated@@4))) (= (type $generated@@444) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@451  (=> (and (and (and (and ($generated@@423 $generated@@424) ($generated@@425 $generated@@424)) (= $generated@@426 $generated@@424)) (and (and (= $generated@@427 ($generated@@129 $generated@@428)) (= $generated@@429 ($generated@@129 ($generated@@129 $generated@@428)))) (and (= ($generated@@346 $generated@@428) $generated@@428) ($generated@@69 ($generated@@8 $generated@@430) $generated@@46 $generated@@424)))) (and (and (and ($generated@@212 $generated@@430) (= $generated@@431 (- $generated@@430 5))) (and ($generated@@69 ($generated@@8 $generated@@431) $generated@@46 $generated@@424) ($generated@@212 (- $generated@@430 5)))) (and (and ($generated@@212 $generated@@430) ($generated@@212 (- $generated@@430 5))) (= (ControlFlow 0 4) (- 0 3))))) (= ($generated@@211 $generated@@429 $generated@@430) (+ 5 ($generated@@211 $generated@@429 (- $generated@@430 5)))))))
(let (($generated@@452  (=> (and (and ($generated@@69 ($generated@@8 $generated@@432) $generated@@46 $generated@@426) ($generated@@212 $generated@@432)) (and ($generated@@212 $generated@@432) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@211 $generated@@429 $generated@@432) ($generated@@130 0)))))
(let (($generated@@453  (=> ($generated@@69 ($generated@@8 $generated@@430) $generated@@46 $generated@@426) (=> (and ($generated@@144 $generated@@430) (= $generated@@433 (- $generated@@430 6))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@433) $generated@@46 $generated@@426) ($generated@@144 (- $generated@@430 6))) (and ($generated@@144 $generated@@430) ($generated@@144 (- $generated@@430 6)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (= ($generated@@143 $generated@@321 $generated@@430) (+ 6 ($generated@@143 $generated@@321 (- $generated@@430 6))))) (=> (= ($generated@@143 $generated@@321 $generated@@430) (+ 6 ($generated@@143 $generated@@321 (- $generated@@430 6)))) (and (=> (= (ControlFlow 0 7) 2) $generated@@452) (=> (= (ControlFlow 0 7) 4) $generated@@451)))))))))
(let (($generated@@454  (=> ($generated@@69 ($generated@@8 $generated@@430) $generated@@46 $generated@@426) (=> (and ($generated@@144 $generated@@430) (= $generated@@434 (- $generated@@430 5))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@434) $generated@@46 $generated@@426) ($generated@@144 (- $generated@@430 5))) (and ($generated@@144 $generated@@430) ($generated@@144 (- $generated@@430 5)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (= ($generated@@143 $generated@@321 $generated@@430) (+ 5 ($generated@@143 $generated@@321 (- $generated@@430 5))))) (=> (= ($generated@@143 $generated@@321 $generated@@430) (+ 5 ($generated@@143 $generated@@321 (- $generated@@430 5)))) (and (=> (= (ControlFlow 0 5) 2) $generated@@452) (=> (= (ControlFlow 0 5) 4) $generated@@451)))))))))
(let (($generated@@455  (=> (= $generated@@435 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@436)))) (=> (and (= $generated@@437 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@436))))) (= ($generated@@346 $generated@@436) $generated@@436)) (=> (and (and (= $generated@@438 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@439))))) (= $generated@@440 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@439))))))) (and (= ($generated@@346 $generated@@439) $generated@@439) (= $generated@@441 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@442))))))) (=> (and (and (and (= $generated@@321 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@442)))))) (= ($generated@@346 $generated@@442) $generated@@442)) (and (= ($generated@@346 $generated@@427) $generated@@427) (= ($generated@@346 $generated@@429) $generated@@429))) (and (and (= $generated@@443 ($generated@@148 $generated@@444 $generated@@426 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@432) $generated@@46 $generated@@426)) (and ($generated@@132 $generated@@432) ($generated@@132 $generated@@432)))) (and (=> (= (ControlFlow 0 9) (- 0 17)) (= ($generated@@128 $generated@@437 $generated@@432) ($generated@@130 0))) (=> (= ($generated@@128 $generated@@437 $generated@@432) ($generated@@130 0)) (=> (and (and (= $generated@@445 ($generated@@130 (- 0 1))) ($generated@@69 ($generated@@8 $generated@@445) $generated@@46 $generated@@426)) (and ($generated@@132 ($generated@@130 (- 0 1))) ($generated@@132 ($generated@@130 (- 0 1))))) (and (=> (= (ControlFlow 0 9) (- 0 16)) (= ($generated@@130 ($generated@@128 $generated@@437 ($generated@@130 (- 0 1)))) ($generated@@130 0))) (=> (and (and (and (= ($generated@@130 ($generated@@128 $generated@@437 ($generated@@130 (- 0 1)))) ($generated@@130 0)) ($generated@@69 ($generated@@8 $generated@@430) $generated@@46 $generated@@426)) (and ($generated@@132 $generated@@430) (= $generated@@446 (- $generated@@430 3)))) (and (and ($generated@@69 ($generated@@8 $generated@@446) $generated@@46 $generated@@426) ($generated@@132 (- $generated@@430 3))) (and ($generated@@132 $generated@@430) ($generated@@132 (- $generated@@430 3))))) (and (=> (= (ControlFlow 0 9) (- 0 15)) (= ($generated@@128 $generated@@437 $generated@@430) (+ 3 ($generated@@128 $generated@@437 (- $generated@@430 3))))) (=> (and (and (and (= ($generated@@128 $generated@@437 $generated@@430) (+ 3 ($generated@@128 $generated@@437 (- $generated@@430 3)))) ($generated@@69 ($generated@@8 $generated@@430) $generated@@46 $generated@@426)) (and ($generated@@132 $generated@@430) (= $generated@@447 (- $generated@@430 4)))) (and (and ($generated@@69 ($generated@@8 $generated@@447) $generated@@46 $generated@@426) ($generated@@132 (- $generated@@430 4))) (and ($generated@@132 $generated@@430) ($generated@@132 (- $generated@@430 4))))) (and (=> (= (ControlFlow 0 9) (- 0 14)) (= ($generated@@128 $generated@@437 $generated@@430) (+ 4 ($generated@@128 $generated@@437 (- $generated@@430 4))))) (=> (and (and (= ($generated@@128 $generated@@437 $generated@@430) (+ 4 ($generated@@128 $generated@@437 (- $generated@@430 4)))) ($generated@@69 ($generated@@8 $generated@@432) $generated@@46 $generated@@426)) (and ($generated@@140 $generated@@432) ($generated@@140 $generated@@432))) (and (=> (= (ControlFlow 0 9) (- 0 13)) (= ($generated@@139 $generated@@440 $generated@@432) ($generated@@130 0))) (=> (= ($generated@@139 $generated@@440 $generated@@432) ($generated@@130 0)) (=> (and (and (= $generated@@448 ($generated@@130 (- 0 1))) ($generated@@69 ($generated@@8 $generated@@448) $generated@@46 $generated@@426)) (and ($generated@@140 ($generated@@130 (- 0 1))) ($generated@@140 ($generated@@130 (- 0 1))))) (and (=> (= (ControlFlow 0 9) (- 0 12)) (= ($generated@@130 ($generated@@139 $generated@@440 ($generated@@130 (- 0 1)))) ($generated@@130 0))) (=> (and (and (and (= ($generated@@130 ($generated@@139 $generated@@440 ($generated@@130 (- 0 1)))) ($generated@@130 0)) ($generated@@69 ($generated@@8 $generated@@430) $generated@@46 $generated@@426)) (and ($generated@@140 $generated@@430) (= $generated@@449 (- $generated@@430 3)))) (and (and ($generated@@69 ($generated@@8 $generated@@449) $generated@@46 $generated@@426) ($generated@@140 (- $generated@@430 3))) (and ($generated@@140 $generated@@430) ($generated@@140 (- $generated@@430 3))))) (and (=> (= (ControlFlow 0 9) (- 0 11)) (= ($generated@@139 $generated@@440 $generated@@430) (+ 3 ($generated@@139 $generated@@440 (- $generated@@430 3))))) (=> (and (and (and (= ($generated@@139 $generated@@440 $generated@@430) (+ 3 ($generated@@139 $generated@@440 (- $generated@@430 3)))) ($generated@@69 ($generated@@8 $generated@@430) $generated@@46 $generated@@426)) (and ($generated@@140 $generated@@430) (= $generated@@450 (- $generated@@430 4)))) (and (and ($generated@@69 ($generated@@8 $generated@@450) $generated@@46 $generated@@426) ($generated@@140 (- $generated@@430 4))) (and ($generated@@140 $generated@@430) ($generated@@140 (- $generated@@430 4))))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (= ($generated@@139 $generated@@440 $generated@@430) (+ 4 ($generated@@139 $generated@@440 (- $generated@@430 4))))) (=> (= ($generated@@139 $generated@@440 $generated@@430) (+ 4 ($generated@@139 $generated@@440 (- $generated@@430 4)))) (and (=> (= (ControlFlow 0 9) 5) $generated@@454) (=> (= (ControlFlow 0 9) 7) $generated@@453))))))))))))))))))))))))))
(let (($generated@@456  (=> (and ($generated@@423 $generated@@426) ($generated@@425 $generated@@426)) (=> (and (and (= 2 $generated@@127) (> $generated@@430 5)) (and (< $generated@@432 0) (= (ControlFlow 0 18) 9))) $generated@@455))))
$generated@@456)))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 7) (- 8))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@T) T@U)
(declare-fun $generated@@200 (T@U) Int)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@207 (T@U T@U T@U) Bool)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@T T@T) T@U)
(declare-fun $generated@@216 (T@T T@T) T@T)
(declare-fun $generated@@217 (T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@233 (T@T T@T) T@U)
(declare-fun $generated@@234 (T@T T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 () T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@U Int) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@381 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))) (forall (($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(= (type ($generated@@133 $generated@@135)) $generated@@136))
 :pattern ( ($generated@@133 $generated@@135))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@137 T@U) ($generated@@138 Int) ) (!  (=> (and (= (type $generated@@137) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@138)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@138 0))))) ($generated@@132 ($generated@@130 (- $generated@@138 1)))) (= ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)) (ite (< $generated@@138 0) 0 (+ 1 ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 (- $generated@@138 1))))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@1 ($generated@@141 $generated@@145 $generated@@146)) 13)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@142 ($generated@@141 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@143 ($generated@@141 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@141 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@143 (type $generated@@151))))
(= (type ($generated@@139 $generated@@151 $generated@@152 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@139 $generated@@151 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(let (($generated@@160 (type $generated@@156)))
(= (type ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158)) ($generated@@141 $generated@@160 $generated@@159))))
 :pattern ( ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@143 (type $generated@@161))))
 (=> (= (type $generated@@164) $generated@@165) (= ($generated@@139 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@162 $generated@@163) $generated@@164)))
 :weight 0
))) (and (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@139 ($generated@@144 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@139 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@139 ($generated@@144 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@139 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or true (= ($generated@@139 ($generated@@144 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@139 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ) (! (= (type ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@141 $generated@@72 $generated@@4))
 :pattern ( ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@64 (type $generated@@193))))
 (=> (and (and (and (and (= (type $generated@@188) $generated@@72) (= (type $generated@@189) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@190) ($generated@@63 $generated@@4))) (= (type $generated@@192) $generated@@72)) (= (type $generated@@193) ($generated@@63 $generated@@194))) (= ($generated@@0 ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (not (= $generated@@192 $generated@@188)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@189 $generated@@192) $generated@@190))) $generated@@191))))
 :pattern ( ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@195 Int) ) (! (= ($generated@@130 $generated@@195) $generated@@195)
 :pattern ( ($generated@@130 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@133 $generated@@196) $generated@@196)
 :pattern ( ($generated@@133 $generated@@196))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@197 T@U) ($generated@@198 Int) ) (!  (=> (and (= (type $generated@@197) $generated@@131) (or ($generated@@132 $generated@@198) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@197 $generated@@198))
))))
(assert  (and (and (forall (($generated@@203 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@203)) 14)) (forall (($generated@@204 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@201 $generated@@204))
))) (forall (($generated@@205 T@T) ) (! (= (type ($generated@@199 $generated@@205)) ($generated@@201 $generated@@205))
 :pattern ( ($generated@@199 $generated@@205))
))))
(assert (forall (($generated@@206 T@T) ) (! (= ($generated@@200 ($generated@@199 $generated@@206)) 0)
 :pattern ( ($generated@@199 $generated@@206))
)))
(assert  (and (= ($generated@@1 $generated@@209) 15) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@208 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@208 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) $generated@@61) (= (type $generated@@213) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213) ($generated@@69 $generated@@211 $generated@@212 $generated@@213)))
 :pattern ( ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213))
)))
(assert  (and (and (and (and (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (= ($generated@@1 ($generated@@216 $generated@@219 $generated@@220)) 16)) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@217 ($generated@@216 $generated@@221 $generated@@222)) $generated@@221)
 :pattern ( ($generated@@216 $generated@@221 $generated@@222))
))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@218 ($generated@@216 $generated@@223 $generated@@224)) $generated@@224)
 :pattern ( ($generated@@216 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@217 (type $generated@@225))))
(= (type ($generated@@214 $generated@@225)) ($generated@@71 $generated@@226 $generated@@4)))
 :pattern ( ($generated@@214 $generated@@225))
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= (type ($generated@@215 $generated@@227 $generated@@228)) ($generated@@216 $generated@@227 $generated@@228))
 :pattern ( ($generated@@215 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@T) ) (! (let (($generated@@231 (type $generated@@229)))
 (not ($generated@@0 ($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229))))
 :pattern ( (let (($generated@@231 (type $generated@@229)))
($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229)))
)))
(assert  (and (and (and (and (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@237 $generated@@238)) 17)) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@239 $generated@@240)) $generated@@239)
 :pattern ( ($generated@@234 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@236 ($generated@@234 $generated@@241 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@234 $generated@@241 $generated@@242))
))) (forall (($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@235 (type $generated@@243))))
(= (type ($generated@@232 $generated@@243)) ($generated@@71 $generated@@244 $generated@@4)))
 :pattern ( ($generated@@232 $generated@@243))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= (type ($generated@@233 $generated@@245 $generated@@246)) ($generated@@234 $generated@@245 $generated@@246))
 :pattern ( ($generated@@233 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@T) ) (! (let (($generated@@249 (type $generated@@247)))
 (not ($generated@@0 ($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247))))
 :pattern ( (let (($generated@@249 (type $generated@@247)))
($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@218 (type $generated@@250))))
(let (($generated@@252 ($generated@@217 (type $generated@@250))))
 (=> (= (type $generated@@250) ($generated@@216 $generated@@252 $generated@@251)) (or (= $generated@@250 ($generated@@215 $generated@@252 $generated@@251)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@250) $generated@@253)))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@214 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@236 (type $generated@@254))))
(let (($generated@@256 ($generated@@235 (type $generated@@254))))
 (=> (= (type $generated@@254) ($generated@@234 $generated@@256 $generated@@255)) (or (= $generated@@254 ($generated@@233 $generated@@256 $generated@@255)) (exists (($generated@@257 T@U) ) (!  (and (= (type $generated@@257) $generated@@256) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@254) $generated@@257)))
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
))))))
 :pattern ( ($generated@@232 $generated@@254))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@209) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@207 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@267) $generated@@61)) (= (type $generated@@268) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@209) ($generated@@0 ($generated@@76 $generated@@266 $generated@@269))) ($generated@@207 $generated@@269 $generated@@267 $generated@@268))
 :pattern ( ($generated@@76 $generated@@266 $generated@@269))
))))
 :pattern ( ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268))
)))
(assert  (and (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273)) $generated@@61)
 :pattern ( ($generated@@270 $generated@@272 $generated@@273))
)) (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@218 (type $generated@@274))))
(let (($generated@@276 ($generated@@217 (type $generated@@274))))
(= (type ($generated@@271 $generated@@274)) ($generated@@71 $generated@@276 $generated@@275))))
 :pattern ( ($generated@@271 $generated@@274))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (= (type $generated@@277) ($generated@@216 $generated@@209 $generated@@209)) (= (type $generated@@278) $generated@@61)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))) (and ($generated@@207 ($generated@@76 ($generated@@271 $generated@@277) $generated@@281) $generated@@279 $generated@@280) ($generated@@207 $generated@@281 $generated@@278 $generated@@280)))
 :pattern ( ($generated@@76 ($generated@@271 $generated@@277) $generated@@281))
 :pattern ( ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280))
)))
(assert  (and (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (= (type ($generated@@282 $generated@@284 $generated@@285)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@284 $generated@@285))
)) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@236 (type $generated@@286))))
(let (($generated@@288 ($generated@@235 (type $generated@@286))))
(= (type ($generated@@283 $generated@@286)) ($generated@@71 $generated@@288 $generated@@287))))
 :pattern ( ($generated@@283 $generated@@286))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (= (type $generated@@289) ($generated@@234 $generated@@209 $generated@@209)) (= (type $generated@@290) $generated@@61)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))) (and ($generated@@207 ($generated@@76 ($generated@@283 $generated@@289) $generated@@293) $generated@@291 $generated@@292) ($generated@@207 $generated@@293 $generated@@290 $generated@@292)))
 :pattern ( ($generated@@76 ($generated@@283 $generated@@289) $generated@@293))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))
))))
 :pattern ( ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@71 $generated@@295 $generated@@4))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@236 (type $generated@@296))))
(let (($generated@@298 ($generated@@235 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@234 $generated@@298 $generated@@297)) (= (= $generated@@296 ($generated@@233 $generated@@298 $generated@@297)) (= ($generated@@232 $generated@@296) ($generated@@294 $generated@@298))))))
 :pattern ( ($generated@@232 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@299 T@U) ($generated@@300 Int) ) (!  (=> (and (= (type $generated@@299) $generated@@131) (or ($generated@@132 $generated@@300) (not (= 0 $generated@@127)))) (and (=> (<= 0 $generated@@300) ($generated@@132 (- $generated@@300 1))) (= ($generated@@128 ($generated@@129 $generated@@299) $generated@@300) (ite (< $generated@@300 0) 0 (+ 1 ($generated@@128 $generated@@299 (- $generated@@300 1)))))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@299) $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@202 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@201 $generated@@302)) (<= 0 ($generated@@200 $generated@@301))))
 :pattern ( ($generated@@200 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@61) (= (type $generated@@306) $generated@@61)) (= ($generated@@303 ($generated@@270 $generated@@305 $generated@@306)) $generated@@305))
 :pattern ( ($generated@@270 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@61)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@61) (= (type $generated@@310) $generated@@61)) (= ($generated@@307 ($generated@@270 $generated@@309 $generated@@310)) $generated@@310))
 :pattern ( ($generated@@270 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@67 ($generated@@270 $generated@@311 $generated@@312)) $generated@@58))
 :pattern ( ($generated@@270 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@61)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@61) (= (type $generated@@316) $generated@@61)) (= ($generated@@313 ($generated@@282 $generated@@315 $generated@@316)) $generated@@315))
 :pattern ( ($generated@@282 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@317 ($generated@@282 $generated@@319 $generated@@320)) $generated@@320))
 :pattern ( ($generated@@282 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@61) (= (type $generated@@322) $generated@@61)) (= ($generated@@67 ($generated@@282 $generated@@321 $generated@@322)) $generated@@59))
 :pattern ( ($generated@@282 $generated@@321 $generated@@322))
)))
(assert  (and (forall (($generated@@325 T@U) ) (! (= (type ($generated@@323 $generated@@325)) $generated@@131)
 :pattern ( ($generated@@323 $generated@@325))
)) (= (type $generated@@324) $generated@@131)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ) (!  (=> (= (type $generated@@326) $generated@@131) (= ($generated@@128 $generated@@326 $generated@@327) ($generated@@128 $generated@@324 $generated@@327)))
 :pattern ( ($generated@@128 ($generated@@323 $generated@@326) $generated@@327))
)))
(assert  (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@330)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@330))
)) (forall (($generated@@331 T@U) ($generated@@332 Int) ) (! (let (($generated@@333 ($generated@@202 (type $generated@@331))))
(= (type ($generated@@329 $generated@@331 $generated@@332)) $generated@@333))
 :pattern ( ($generated@@329 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@201 $generated@@209)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@334 ($generated@@328 $generated@@335) $generated@@336) (forall (($generated@@337 Int) ) (!  (=> (and (<= 0 $generated@@337) (< $generated@@337 ($generated@@200 $generated@@334))) ($generated@@207 ($generated@@329 $generated@@334 $generated@@337) $generated@@335 $generated@@336))
 :pattern ( ($generated@@329 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@334 ($generated@@328 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@339 Int) ) (! (= ($generated@@338 ($generated@@70 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@70 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@340 ($generated@@258 $generated@@342)) $generated@@342))
 :pattern ( ($generated@@258 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@343)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@344 ($generated@@264 $generated@@346)) $generated@@346))
 :pattern ( ($generated@@264 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@61) (= ($generated@@67 ($generated@@264 $generated@@347)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@349 ($generated@@348 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@348 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@67 ($generated@@348 $generated@@353)) $generated@@56))
 :pattern ( ($generated@@348 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@328 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@328 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@328 $generated@@357)) $generated@@57))
 :pattern ( ($generated@@328 $generated@@357))
)))
(assert (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated@@358 $generated@@362 ($generated@@208 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@208 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ) (!  (=> (= (type $generated@@363) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@363) $generated@@364) ($generated@@128 $generated@@363 $generated@@364)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (not ($generated@@0 ($generated@@76 ($generated@@294 $generated@@366) $generated@@365))))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@76 ($generated@@294 $generated@@366) $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@71 $generated@@209 $generated@@2)) (= (type $generated@@368) $generated@@61)) (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@367 ($generated@@348 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@209) (< 0 ($generated ($generated@@76 $generated@@367 $generated@@370)))) ($generated@@207 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@76 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@69 $generated@@367 ($generated@@348 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 Int) ) (! (= ($generated@@208 ($generated@@8 ($generated@@130 $generated@@371))) ($generated@@133 ($generated@@208 ($generated@@8 $generated@@371))))
 :pattern ( ($generated@@208 ($generated@@8 ($generated@@130 $generated@@371))))
)))
(assert (forall (($generated@@372 T@U) ) (! (= ($generated@@208 ($generated@@133 $generated@@372)) ($generated@@133 ($generated@@208 $generated@@372)))
 :pattern ( ($generated@@208 ($generated@@133 $generated@@372)))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@202 (type $generated@@373))))
 (=> (and (= (type $generated@@373) ($generated@@201 $generated@@374)) (= ($generated@@200 $generated@@373) 0)) (= $generated@@373 ($generated@@199 $generated@@374))))
 :pattern ( ($generated@@200 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@376) $generated@@2)) ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
 :pattern ( ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@378) $generated@@3)) ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
 :pattern ( ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) $generated@@4)) ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
 :pattern ( ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
)))
(assert (= ($generated@@1 $generated@@381) 18))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@381)) ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@385) $generated@@209)) ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
 :pattern ( ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 () T@U)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () Int)
(declare-fun $generated@@392 () Int)
(declare-fun $generated@@393 () Int)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 (T@U) Bool)
(declare-fun $generated@@396 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@386) $generated@@131) (= (type $generated@@387) $generated@@131)) (= (type $generated@@388) ($generated@@141 $generated@@72 $generated@@4))) (= (type $generated@@389) $generated@@72)) (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@397  (=> (and (= ($generated@@323 $generated@@386) $generated@@386) (= ($generated@@323 $generated@@387) $generated@@387)) (=> (and (and (= $generated@@388 ($generated@@140 $generated@@389 $generated@@390 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@391) $generated@@46 $generated@@390)) (and ($generated@@132 $generated@@391) ($generated@@132 $generated@@391))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@128 $generated@@387 $generated@@391) ($generated@@130 0))) (=> (= ($generated@@128 $generated@@386 $generated@@391) ($generated@@130 0)) (=> (and (and (= $generated@@392 ($generated@@130 (- 0 1))) ($generated@@69 ($generated@@8 $generated@@392) $generated@@46 $generated@@390)) (and ($generated@@132 ($generated@@130 (- 0 1))) ($generated@@132 ($generated@@130 (- 0 1))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@130 ($generated@@128 $generated@@387 ($generated@@130 (- 0 1)))) ($generated@@130 0))) (=> (and (= ($generated@@130 ($generated@@128 $generated@@386 ($generated@@130 (- 0 1)))) ($generated@@130 0)) ($generated@@69 ($generated@@8 $generated@@393) $generated@@46 $generated@@390)) (=> (and (and (and ($generated@@132 $generated@@393) (= $generated@@394 (- $generated@@393 3))) (and ($generated@@69 ($generated@@8 $generated@@394) $generated@@46 $generated@@390) ($generated@@132 (- $generated@@393 3)))) (and (and ($generated@@132 $generated@@393) ($generated@@132 (- $generated@@393 3))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@128 $generated@@387 $generated@@393) (+ 3 ($generated@@128 $generated@@387 (- $generated@@393 3))))))))))))))
(let (($generated@@398  (=> (and ($generated@@395 $generated@@390) ($generated@@396 $generated@@390)) (=> (and (and (= 1 $generated@@127) (> $generated@@393 5)) (and (< $generated@@391 0) (= (ControlFlow 0 5) 2))) $generated@@397))))
$generated@@398)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@T) T@U)
(declare-fun $generated@@200 (T@U) Int)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@207 (T@U T@U T@U) Bool)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@T T@T) T@U)
(declare-fun $generated@@216 (T@T T@T) T@T)
(declare-fun $generated@@217 (T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@233 (T@T T@T) T@U)
(declare-fun $generated@@234 (T@T T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 () T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@U Int) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@381 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))) (forall (($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(= (type ($generated@@133 $generated@@135)) $generated@@136))
 :pattern ( ($generated@@133 $generated@@135))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@137 T@U) ($generated@@138 Int) ) (!  (=> (and (= (type $generated@@137) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@138)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@138 0))))) ($generated@@132 ($generated@@130 (- $generated@@138 1)))) (= ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)) (ite (< $generated@@138 0) 0 (+ 1 ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 (- $generated@@138 1))))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@1 ($generated@@141 $generated@@145 $generated@@146)) 13)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@142 ($generated@@141 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@143 ($generated@@141 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@141 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@143 (type $generated@@151))))
(= (type ($generated@@139 $generated@@151 $generated@@152 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@139 $generated@@151 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(let (($generated@@160 (type $generated@@156)))
(= (type ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158)) ($generated@@141 $generated@@160 $generated@@159))))
 :pattern ( ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@143 (type $generated@@161))))
 (=> (= (type $generated@@164) $generated@@165) (= ($generated@@139 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@162 $generated@@163) $generated@@164)))
 :weight 0
))) (and (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@139 ($generated@@144 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@139 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@139 ($generated@@144 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@139 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or true (= ($generated@@139 ($generated@@144 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@139 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ) (! (= (type ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@141 $generated@@72 $generated@@4))
 :pattern ( ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@64 (type $generated@@193))))
 (=> (and (and (and (and (= (type $generated@@188) $generated@@72) (= (type $generated@@189) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@190) ($generated@@63 $generated@@4))) (= (type $generated@@192) $generated@@72)) (= (type $generated@@193) ($generated@@63 $generated@@194))) (= ($generated@@0 ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (not (= $generated@@192 $generated@@188)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@189 $generated@@192) $generated@@190))) $generated@@191))))
 :pattern ( ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@195 Int) ) (! (= ($generated@@130 $generated@@195) $generated@@195)
 :pattern ( ($generated@@130 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@133 $generated@@196) $generated@@196)
 :pattern ( ($generated@@133 $generated@@196))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@197 T@U) ($generated@@198 Int) ) (!  (=> (and (= (type $generated@@197) $generated@@131) (or ($generated@@132 $generated@@198) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@197 $generated@@198))
))))
(assert  (and (and (forall (($generated@@203 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@203)) 14)) (forall (($generated@@204 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@201 $generated@@204))
))) (forall (($generated@@205 T@T) ) (! (= (type ($generated@@199 $generated@@205)) ($generated@@201 $generated@@205))
 :pattern ( ($generated@@199 $generated@@205))
))))
(assert (forall (($generated@@206 T@T) ) (! (= ($generated@@200 ($generated@@199 $generated@@206)) 0)
 :pattern ( ($generated@@199 $generated@@206))
)))
(assert  (and (= ($generated@@1 $generated@@209) 15) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@208 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@208 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) $generated@@61) (= (type $generated@@213) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213) ($generated@@69 $generated@@211 $generated@@212 $generated@@213)))
 :pattern ( ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213))
)))
(assert  (and (and (and (and (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (= ($generated@@1 ($generated@@216 $generated@@219 $generated@@220)) 16)) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@217 ($generated@@216 $generated@@221 $generated@@222)) $generated@@221)
 :pattern ( ($generated@@216 $generated@@221 $generated@@222))
))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@218 ($generated@@216 $generated@@223 $generated@@224)) $generated@@224)
 :pattern ( ($generated@@216 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@217 (type $generated@@225))))
(= (type ($generated@@214 $generated@@225)) ($generated@@71 $generated@@226 $generated@@4)))
 :pattern ( ($generated@@214 $generated@@225))
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= (type ($generated@@215 $generated@@227 $generated@@228)) ($generated@@216 $generated@@227 $generated@@228))
 :pattern ( ($generated@@215 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@T) ) (! (let (($generated@@231 (type $generated@@229)))
 (not ($generated@@0 ($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229))))
 :pattern ( (let (($generated@@231 (type $generated@@229)))
($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229)))
)))
(assert  (and (and (and (and (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@237 $generated@@238)) 17)) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@239 $generated@@240)) $generated@@239)
 :pattern ( ($generated@@234 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@236 ($generated@@234 $generated@@241 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@234 $generated@@241 $generated@@242))
))) (forall (($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@235 (type $generated@@243))))
(= (type ($generated@@232 $generated@@243)) ($generated@@71 $generated@@244 $generated@@4)))
 :pattern ( ($generated@@232 $generated@@243))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= (type ($generated@@233 $generated@@245 $generated@@246)) ($generated@@234 $generated@@245 $generated@@246))
 :pattern ( ($generated@@233 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@T) ) (! (let (($generated@@249 (type $generated@@247)))
 (not ($generated@@0 ($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247))))
 :pattern ( (let (($generated@@249 (type $generated@@247)))
($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@218 (type $generated@@250))))
(let (($generated@@252 ($generated@@217 (type $generated@@250))))
 (=> (= (type $generated@@250) ($generated@@216 $generated@@252 $generated@@251)) (or (= $generated@@250 ($generated@@215 $generated@@252 $generated@@251)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@250) $generated@@253)))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@214 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@236 (type $generated@@254))))
(let (($generated@@256 ($generated@@235 (type $generated@@254))))
 (=> (= (type $generated@@254) ($generated@@234 $generated@@256 $generated@@255)) (or (= $generated@@254 ($generated@@233 $generated@@256 $generated@@255)) (exists (($generated@@257 T@U) ) (!  (and (= (type $generated@@257) $generated@@256) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@254) $generated@@257)))
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
))))))
 :pattern ( ($generated@@232 $generated@@254))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@209) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@207 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@267) $generated@@61)) (= (type $generated@@268) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@209) ($generated@@0 ($generated@@76 $generated@@266 $generated@@269))) ($generated@@207 $generated@@269 $generated@@267 $generated@@268))
 :pattern ( ($generated@@76 $generated@@266 $generated@@269))
))))
 :pattern ( ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268))
)))
(assert  (and (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273)) $generated@@61)
 :pattern ( ($generated@@270 $generated@@272 $generated@@273))
)) (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@218 (type $generated@@274))))
(let (($generated@@276 ($generated@@217 (type $generated@@274))))
(= (type ($generated@@271 $generated@@274)) ($generated@@71 $generated@@276 $generated@@275))))
 :pattern ( ($generated@@271 $generated@@274))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (= (type $generated@@277) ($generated@@216 $generated@@209 $generated@@209)) (= (type $generated@@278) $generated@@61)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))) (and ($generated@@207 ($generated@@76 ($generated@@271 $generated@@277) $generated@@281) $generated@@279 $generated@@280) ($generated@@207 $generated@@281 $generated@@278 $generated@@280)))
 :pattern ( ($generated@@76 ($generated@@271 $generated@@277) $generated@@281))
 :pattern ( ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280))
)))
(assert  (and (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (= (type ($generated@@282 $generated@@284 $generated@@285)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@284 $generated@@285))
)) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@236 (type $generated@@286))))
(let (($generated@@288 ($generated@@235 (type $generated@@286))))
(= (type ($generated@@283 $generated@@286)) ($generated@@71 $generated@@288 $generated@@287))))
 :pattern ( ($generated@@283 $generated@@286))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (= (type $generated@@289) ($generated@@234 $generated@@209 $generated@@209)) (= (type $generated@@290) $generated@@61)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))) (and ($generated@@207 ($generated@@76 ($generated@@283 $generated@@289) $generated@@293) $generated@@291 $generated@@292) ($generated@@207 $generated@@293 $generated@@290 $generated@@292)))
 :pattern ( ($generated@@76 ($generated@@283 $generated@@289) $generated@@293))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))
))))
 :pattern ( ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@71 $generated@@295 $generated@@4))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@236 (type $generated@@296))))
(let (($generated@@298 ($generated@@235 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@234 $generated@@298 $generated@@297)) (= (= $generated@@296 ($generated@@233 $generated@@298 $generated@@297)) (= ($generated@@232 $generated@@296) ($generated@@294 $generated@@298))))))
 :pattern ( ($generated@@232 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@299 T@U) ($generated@@300 Int) ) (!  (=> (and (= (type $generated@@299) $generated@@131) (or ($generated@@132 $generated@@300) (not (= 0 $generated@@127)))) (and (=> (<= 0 $generated@@300) ($generated@@132 (- $generated@@300 1))) (= ($generated@@128 ($generated@@129 $generated@@299) $generated@@300) (ite (< $generated@@300 0) 0 (+ 1 ($generated@@128 $generated@@299 (- $generated@@300 1)))))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@299) $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@202 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@201 $generated@@302)) (<= 0 ($generated@@200 $generated@@301))))
 :pattern ( ($generated@@200 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@61) (= (type $generated@@306) $generated@@61)) (= ($generated@@303 ($generated@@270 $generated@@305 $generated@@306)) $generated@@305))
 :pattern ( ($generated@@270 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@61)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@61) (= (type $generated@@310) $generated@@61)) (= ($generated@@307 ($generated@@270 $generated@@309 $generated@@310)) $generated@@310))
 :pattern ( ($generated@@270 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@67 ($generated@@270 $generated@@311 $generated@@312)) $generated@@58))
 :pattern ( ($generated@@270 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@61)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@61) (= (type $generated@@316) $generated@@61)) (= ($generated@@313 ($generated@@282 $generated@@315 $generated@@316)) $generated@@315))
 :pattern ( ($generated@@282 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@317 ($generated@@282 $generated@@319 $generated@@320)) $generated@@320))
 :pattern ( ($generated@@282 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@61) (= (type $generated@@322) $generated@@61)) (= ($generated@@67 ($generated@@282 $generated@@321 $generated@@322)) $generated@@59))
 :pattern ( ($generated@@282 $generated@@321 $generated@@322))
)))
(assert  (and (forall (($generated@@325 T@U) ) (! (= (type ($generated@@323 $generated@@325)) $generated@@131)
 :pattern ( ($generated@@323 $generated@@325))
)) (= (type $generated@@324) $generated@@131)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ) (!  (=> (= (type $generated@@326) $generated@@131) (= ($generated@@128 $generated@@326 $generated@@327) ($generated@@128 $generated@@324 $generated@@327)))
 :pattern ( ($generated@@128 ($generated@@323 $generated@@326) $generated@@327))
)))
(assert  (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@330)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@330))
)) (forall (($generated@@331 T@U) ($generated@@332 Int) ) (! (let (($generated@@333 ($generated@@202 (type $generated@@331))))
(= (type ($generated@@329 $generated@@331 $generated@@332)) $generated@@333))
 :pattern ( ($generated@@329 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@201 $generated@@209)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@334 ($generated@@328 $generated@@335) $generated@@336) (forall (($generated@@337 Int) ) (!  (=> (and (<= 0 $generated@@337) (< $generated@@337 ($generated@@200 $generated@@334))) ($generated@@207 ($generated@@329 $generated@@334 $generated@@337) $generated@@335 $generated@@336))
 :pattern ( ($generated@@329 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@334 ($generated@@328 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@339 Int) ) (! (= ($generated@@338 ($generated@@70 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@70 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@340 ($generated@@258 $generated@@342)) $generated@@342))
 :pattern ( ($generated@@258 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@343)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@344 ($generated@@264 $generated@@346)) $generated@@346))
 :pattern ( ($generated@@264 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@61) (= ($generated@@67 ($generated@@264 $generated@@347)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@349 ($generated@@348 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@348 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@67 ($generated@@348 $generated@@353)) $generated@@56))
 :pattern ( ($generated@@348 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@328 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@328 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@328 $generated@@357)) $generated@@57))
 :pattern ( ($generated@@328 $generated@@357))
)))
(assert (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated@@358 $generated@@362 ($generated@@208 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@208 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ) (!  (=> (= (type $generated@@363) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@363) $generated@@364) ($generated@@128 $generated@@363 $generated@@364)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (not ($generated@@0 ($generated@@76 ($generated@@294 $generated@@366) $generated@@365))))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@76 ($generated@@294 $generated@@366) $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@71 $generated@@209 $generated@@2)) (= (type $generated@@368) $generated@@61)) (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@367 ($generated@@348 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@209) (< 0 ($generated ($generated@@76 $generated@@367 $generated@@370)))) ($generated@@207 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@76 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@69 $generated@@367 ($generated@@348 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 Int) ) (! (= ($generated@@208 ($generated@@8 ($generated@@130 $generated@@371))) ($generated@@133 ($generated@@208 ($generated@@8 $generated@@371))))
 :pattern ( ($generated@@208 ($generated@@8 ($generated@@130 $generated@@371))))
)))
(assert (forall (($generated@@372 T@U) ) (! (= ($generated@@208 ($generated@@133 $generated@@372)) ($generated@@133 ($generated@@208 $generated@@372)))
 :pattern ( ($generated@@208 ($generated@@133 $generated@@372)))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@202 (type $generated@@373))))
 (=> (and (= (type $generated@@373) ($generated@@201 $generated@@374)) (= ($generated@@200 $generated@@373) 0)) (= $generated@@373 ($generated@@199 $generated@@374))))
 :pattern ( ($generated@@200 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@376) $generated@@2)) ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
 :pattern ( ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@378) $generated@@3)) ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
 :pattern ( ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) $generated@@4)) ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
 :pattern ( ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
)))
(assert (= ($generated@@1 $generated@@381) 18))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@381)) ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@385) $generated@@209)) ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
 :pattern ( ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 () T@U)
(declare-fun $generated@@389 () Int)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () Int)
(declare-fun $generated@@392 () T@U)
(declare-fun $generated@@393 () Int)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 () Int)
(declare-fun $generated@@396 () Int)
(declare-fun $generated@@397 () Int)
(declare-fun $generated@@398 () T@U)
(declare-fun $generated@@399 () T@U)
(declare-fun $generated@@400 () T@U)
(declare-fun $generated@@401 () T@U)
(declare-fun $generated@@402 (T@U) Bool)
(declare-fun $generated@@403 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@388) $generated@@131)) (= (type $generated@@386) $generated@@131)) (= (type $generated@@387) $generated@@131)) (= (type $generated@@392) $generated@@131)) (= (type $generated@@398) $generated@@131)) (= (type $generated@@399) $generated@@131)) (= (type $generated@@400) ($generated@@141 $generated@@72 $generated@@4))) (= (type $generated@@401) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@404 true))
(let (($generated@@405  (=> (= $generated@@386 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@387)))) (=> (and (and (and (= $generated@@388 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@387))))) ($generated@@69 ($generated@@8 $generated@@389) $generated@@46 $generated@@390)) (and ($generated@@132 $generated@@389) (= $generated@@391 (- $generated@@389 6)))) (and (and ($generated@@69 ($generated@@8 $generated@@391) $generated@@46 $generated@@390) ($generated@@132 (- $generated@@389 6))) (and ($generated@@132 $generated@@389) ($generated@@132 (- $generated@@389 6))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (= ($generated@@128 $generated@@388 $generated@@389) (+ 6 ($generated@@128 $generated@@388 (- $generated@@389 6))))) (=> (= (ControlFlow 0 5) 4) $generated@@404))))))
(let (($generated@@406  (=> (= ($generated@@128 $generated@@388 $generated@@389) (+ 3 ($generated@@128 $generated@@388 (- $generated@@389 3)))) (and (=> (= (ControlFlow 0 7) 5) $generated@@405) (=> (= (ControlFlow 0 7) 4) $generated@@404)))))
(let (($generated@@407  (=> (= $generated@@386 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@392)))) (=> (and (and (and (= $generated@@388 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@392))))) ($generated@@69 ($generated@@8 $generated@@389) $generated@@46 $generated@@390)) (and ($generated@@132 $generated@@389) (= $generated@@393 (- $generated@@389 3)))) (and (and ($generated@@69 ($generated@@8 $generated@@393) $generated@@46 $generated@@390) ($generated@@132 (- $generated@@389 3))) (and ($generated@@132 $generated@@389) ($generated@@132 (- $generated@@389 3))))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (= ($generated@@128 $generated@@388 $generated@@389) (+ 3 ($generated@@128 $generated@@388 (- $generated@@389 3))))) (=> (= (ControlFlow 0 8) 7) $generated@@406))))))
(let (($generated@@408  (=> ($generated@@69 ($generated@@8 $generated@@389) $generated@@46 $generated@@390) (=> (and ($generated@@132 $generated@@389) (= $generated@@394 (- $generated@@389 3))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@394) $generated@@46 $generated@@390) ($generated@@132 (- $generated@@389 3))) (and ($generated@@132 $generated@@389) ($generated@@132 (- $generated@@389 3)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@128 $generated@@388 $generated@@389) (+ 3 ($generated@@128 $generated@@388 (- $generated@@389 3))))) (=> (and (= ($generated@@128 $generated@@386 $generated@@389) (+ 3 ($generated@@128 $generated@@386 (- $generated@@389 3)))) ($generated@@69 ($generated@@8 $generated@@389) $generated@@46 $generated@@390)) (=> (and (and (and ($generated@@132 $generated@@389) (= $generated@@395 (- $generated@@389 6))) (and ($generated@@69 ($generated@@8 $generated@@395) $generated@@46 $generated@@390) ($generated@@132 (- $generated@@389 6)))) (and (and ($generated@@132 $generated@@389) ($generated@@132 (- $generated@@389 6))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@128 $generated@@388 $generated@@389) (+ 6 ($generated@@128 $generated@@388 (- $generated@@389 6))))))))))))
(let (($generated@@409  (=> (= ($generated@@128 $generated@@386 $generated@@396) ($generated@@130 0)) (=> (and (and (= $generated@@397 ($generated@@130 (- 0 1))) ($generated@@69 ($generated@@8 $generated@@397) $generated@@46 $generated@@390)) (and ($generated@@132 ($generated@@130 (- 0 1))) ($generated@@132 ($generated@@130 (- 0 1))))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (= ($generated@@130 ($generated@@128 $generated@@388 ($generated@@130 (- 0 1)))) ($generated@@130 0))) (=> (= ($generated@@130 ($generated@@128 $generated@@386 ($generated@@130 (- 0 1)))) ($generated@@130 0)) (and (and (=> (= (ControlFlow 0 10) 2) $generated@@408) (=> (= (ControlFlow 0 10) 8) $generated@@407)) (=> (= (ControlFlow 0 10) 7) $generated@@406))))))))
(let (($generated@@410  (=> (= $generated@@386 $generated@@398) (=> (and (and (= $generated@@388 $generated@@398) ($generated@@69 ($generated@@8 $generated@@396) $generated@@46 $generated@@390)) (and ($generated@@132 $generated@@396) ($generated@@132 $generated@@396))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (= ($generated@@128 $generated@@388 $generated@@396) ($generated@@130 0))) (=> (= (ControlFlow 0 12) 10) $generated@@409))))))
(let (($generated@@411  (=> (and (and (= $generated@@386 ($generated@@129 $generated@@399)) (= $generated@@388 ($generated@@129 ($generated@@129 $generated@@399)))) (and (= ($generated@@323 $generated@@399) $generated@@399) (= $generated@@400 ($generated@@140 $generated@@401 $generated@@390 $generated@@60 false)))) (and (=> (= (ControlFlow 0 14) 12) $generated@@410) (=> (= (ControlFlow 0 14) 10) $generated@@409)))))
(let (($generated@@412  (=> (and ($generated@@402 $generated@@390) ($generated@@403 $generated@@390)) (=> (and (and (= 1 $generated@@127) (> $generated@@389 5)) (and (< $generated@@396 0) (= (ControlFlow 0 15) 14))) $generated@@411))))
$generated@@412))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@T) T@U)
(declare-fun $generated@@200 (T@U) Int)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@207 (T@U T@U T@U) Bool)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@T T@T) T@U)
(declare-fun $generated@@216 (T@T T@T) T@T)
(declare-fun $generated@@217 (T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@233 (T@T T@T) T@U)
(declare-fun $generated@@234 (T@T T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 () T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@U Int) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@381 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))) (forall (($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(= (type ($generated@@133 $generated@@135)) $generated@@136))
 :pattern ( ($generated@@133 $generated@@135))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@137 T@U) ($generated@@138 Int) ) (!  (=> (and (= (type $generated@@137) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@138)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@138 0))))) ($generated@@132 ($generated@@130 (- $generated@@138 1)))) (= ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)) (ite (< $generated@@138 0) 0 (+ 1 ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 (- $generated@@138 1))))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@1 ($generated@@141 $generated@@145 $generated@@146)) 13)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@142 ($generated@@141 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@143 ($generated@@141 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@141 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@143 (type $generated@@151))))
(= (type ($generated@@139 $generated@@151 $generated@@152 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@139 $generated@@151 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(let (($generated@@160 (type $generated@@156)))
(= (type ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158)) ($generated@@141 $generated@@160 $generated@@159))))
 :pattern ( ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@143 (type $generated@@161))))
 (=> (= (type $generated@@164) $generated@@165) (= ($generated@@139 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@162 $generated@@163) $generated@@164)))
 :weight 0
))) (and (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@139 ($generated@@144 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@139 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@139 ($generated@@144 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@139 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or true (= ($generated@@139 ($generated@@144 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@139 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ) (! (= (type ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@141 $generated@@72 $generated@@4))
 :pattern ( ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@64 (type $generated@@193))))
 (=> (and (and (and (and (= (type $generated@@188) $generated@@72) (= (type $generated@@189) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@190) ($generated@@63 $generated@@4))) (= (type $generated@@192) $generated@@72)) (= (type $generated@@193) ($generated@@63 $generated@@194))) (= ($generated@@0 ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (not (= $generated@@192 $generated@@188)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@189 $generated@@192) $generated@@190))) $generated@@191))))
 :pattern ( ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@195 Int) ) (! (= ($generated@@130 $generated@@195) $generated@@195)
 :pattern ( ($generated@@130 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@133 $generated@@196) $generated@@196)
 :pattern ( ($generated@@133 $generated@@196))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@197 T@U) ($generated@@198 Int) ) (!  (=> (and (= (type $generated@@197) $generated@@131) (or ($generated@@132 $generated@@198) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@197 $generated@@198))
))))
(assert  (and (and (forall (($generated@@203 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@203)) 14)) (forall (($generated@@204 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@201 $generated@@204))
))) (forall (($generated@@205 T@T) ) (! (= (type ($generated@@199 $generated@@205)) ($generated@@201 $generated@@205))
 :pattern ( ($generated@@199 $generated@@205))
))))
(assert (forall (($generated@@206 T@T) ) (! (= ($generated@@200 ($generated@@199 $generated@@206)) 0)
 :pattern ( ($generated@@199 $generated@@206))
)))
(assert  (and (= ($generated@@1 $generated@@209) 15) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@208 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@208 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) $generated@@61) (= (type $generated@@213) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213) ($generated@@69 $generated@@211 $generated@@212 $generated@@213)))
 :pattern ( ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213))
)))
(assert  (and (and (and (and (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (= ($generated@@1 ($generated@@216 $generated@@219 $generated@@220)) 16)) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@217 ($generated@@216 $generated@@221 $generated@@222)) $generated@@221)
 :pattern ( ($generated@@216 $generated@@221 $generated@@222))
))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@218 ($generated@@216 $generated@@223 $generated@@224)) $generated@@224)
 :pattern ( ($generated@@216 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@217 (type $generated@@225))))
(= (type ($generated@@214 $generated@@225)) ($generated@@71 $generated@@226 $generated@@4)))
 :pattern ( ($generated@@214 $generated@@225))
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= (type ($generated@@215 $generated@@227 $generated@@228)) ($generated@@216 $generated@@227 $generated@@228))
 :pattern ( ($generated@@215 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@T) ) (! (let (($generated@@231 (type $generated@@229)))
 (not ($generated@@0 ($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229))))
 :pattern ( (let (($generated@@231 (type $generated@@229)))
($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229)))
)))
(assert  (and (and (and (and (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@237 $generated@@238)) 17)) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@239 $generated@@240)) $generated@@239)
 :pattern ( ($generated@@234 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@236 ($generated@@234 $generated@@241 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@234 $generated@@241 $generated@@242))
))) (forall (($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@235 (type $generated@@243))))
(= (type ($generated@@232 $generated@@243)) ($generated@@71 $generated@@244 $generated@@4)))
 :pattern ( ($generated@@232 $generated@@243))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= (type ($generated@@233 $generated@@245 $generated@@246)) ($generated@@234 $generated@@245 $generated@@246))
 :pattern ( ($generated@@233 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@T) ) (! (let (($generated@@249 (type $generated@@247)))
 (not ($generated@@0 ($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247))))
 :pattern ( (let (($generated@@249 (type $generated@@247)))
($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@218 (type $generated@@250))))
(let (($generated@@252 ($generated@@217 (type $generated@@250))))
 (=> (= (type $generated@@250) ($generated@@216 $generated@@252 $generated@@251)) (or (= $generated@@250 ($generated@@215 $generated@@252 $generated@@251)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@250) $generated@@253)))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@214 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@236 (type $generated@@254))))
(let (($generated@@256 ($generated@@235 (type $generated@@254))))
 (=> (= (type $generated@@254) ($generated@@234 $generated@@256 $generated@@255)) (or (= $generated@@254 ($generated@@233 $generated@@256 $generated@@255)) (exists (($generated@@257 T@U) ) (!  (and (= (type $generated@@257) $generated@@256) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@254) $generated@@257)))
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
))))))
 :pattern ( ($generated@@232 $generated@@254))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@209) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@207 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@267) $generated@@61)) (= (type $generated@@268) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@209) ($generated@@0 ($generated@@76 $generated@@266 $generated@@269))) ($generated@@207 $generated@@269 $generated@@267 $generated@@268))
 :pattern ( ($generated@@76 $generated@@266 $generated@@269))
))))
 :pattern ( ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268))
)))
(assert  (and (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273)) $generated@@61)
 :pattern ( ($generated@@270 $generated@@272 $generated@@273))
)) (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@218 (type $generated@@274))))
(let (($generated@@276 ($generated@@217 (type $generated@@274))))
(= (type ($generated@@271 $generated@@274)) ($generated@@71 $generated@@276 $generated@@275))))
 :pattern ( ($generated@@271 $generated@@274))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (= (type $generated@@277) ($generated@@216 $generated@@209 $generated@@209)) (= (type $generated@@278) $generated@@61)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))) (and ($generated@@207 ($generated@@76 ($generated@@271 $generated@@277) $generated@@281) $generated@@279 $generated@@280) ($generated@@207 $generated@@281 $generated@@278 $generated@@280)))
 :pattern ( ($generated@@76 ($generated@@271 $generated@@277) $generated@@281))
 :pattern ( ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280))
)))
(assert  (and (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (= (type ($generated@@282 $generated@@284 $generated@@285)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@284 $generated@@285))
)) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@236 (type $generated@@286))))
(let (($generated@@288 ($generated@@235 (type $generated@@286))))
(= (type ($generated@@283 $generated@@286)) ($generated@@71 $generated@@288 $generated@@287))))
 :pattern ( ($generated@@283 $generated@@286))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (= (type $generated@@289) ($generated@@234 $generated@@209 $generated@@209)) (= (type $generated@@290) $generated@@61)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))) (and ($generated@@207 ($generated@@76 ($generated@@283 $generated@@289) $generated@@293) $generated@@291 $generated@@292) ($generated@@207 $generated@@293 $generated@@290 $generated@@292)))
 :pattern ( ($generated@@76 ($generated@@283 $generated@@289) $generated@@293))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))
))))
 :pattern ( ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@71 $generated@@295 $generated@@4))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@236 (type $generated@@296))))
(let (($generated@@298 ($generated@@235 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@234 $generated@@298 $generated@@297)) (= (= $generated@@296 ($generated@@233 $generated@@298 $generated@@297)) (= ($generated@@232 $generated@@296) ($generated@@294 $generated@@298))))))
 :pattern ( ($generated@@232 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@299 T@U) ($generated@@300 Int) ) (!  (=> (and (= (type $generated@@299) $generated@@131) (or ($generated@@132 $generated@@300) (not (= 0 $generated@@127)))) (and (=> (<= 0 $generated@@300) ($generated@@132 (- $generated@@300 1))) (= ($generated@@128 ($generated@@129 $generated@@299) $generated@@300) (ite (< $generated@@300 0) 0 (+ 1 ($generated@@128 $generated@@299 (- $generated@@300 1)))))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@299) $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@202 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@201 $generated@@302)) (<= 0 ($generated@@200 $generated@@301))))
 :pattern ( ($generated@@200 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@61) (= (type $generated@@306) $generated@@61)) (= ($generated@@303 ($generated@@270 $generated@@305 $generated@@306)) $generated@@305))
 :pattern ( ($generated@@270 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@61)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@61) (= (type $generated@@310) $generated@@61)) (= ($generated@@307 ($generated@@270 $generated@@309 $generated@@310)) $generated@@310))
 :pattern ( ($generated@@270 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@67 ($generated@@270 $generated@@311 $generated@@312)) $generated@@58))
 :pattern ( ($generated@@270 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@61)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@61) (= (type $generated@@316) $generated@@61)) (= ($generated@@313 ($generated@@282 $generated@@315 $generated@@316)) $generated@@315))
 :pattern ( ($generated@@282 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@317 ($generated@@282 $generated@@319 $generated@@320)) $generated@@320))
 :pattern ( ($generated@@282 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@61) (= (type $generated@@322) $generated@@61)) (= ($generated@@67 ($generated@@282 $generated@@321 $generated@@322)) $generated@@59))
 :pattern ( ($generated@@282 $generated@@321 $generated@@322))
)))
(assert  (and (forall (($generated@@325 T@U) ) (! (= (type ($generated@@323 $generated@@325)) $generated@@131)
 :pattern ( ($generated@@323 $generated@@325))
)) (= (type $generated@@324) $generated@@131)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ) (!  (=> (= (type $generated@@326) $generated@@131) (= ($generated@@128 $generated@@326 $generated@@327) ($generated@@128 $generated@@324 $generated@@327)))
 :pattern ( ($generated@@128 ($generated@@323 $generated@@326) $generated@@327))
)))
(assert  (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@330)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@330))
)) (forall (($generated@@331 T@U) ($generated@@332 Int) ) (! (let (($generated@@333 ($generated@@202 (type $generated@@331))))
(= (type ($generated@@329 $generated@@331 $generated@@332)) $generated@@333))
 :pattern ( ($generated@@329 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@201 $generated@@209)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@334 ($generated@@328 $generated@@335) $generated@@336) (forall (($generated@@337 Int) ) (!  (=> (and (<= 0 $generated@@337) (< $generated@@337 ($generated@@200 $generated@@334))) ($generated@@207 ($generated@@329 $generated@@334 $generated@@337) $generated@@335 $generated@@336))
 :pattern ( ($generated@@329 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@334 ($generated@@328 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@339 Int) ) (! (= ($generated@@338 ($generated@@70 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@70 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@340 ($generated@@258 $generated@@342)) $generated@@342))
 :pattern ( ($generated@@258 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@343)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@344 ($generated@@264 $generated@@346)) $generated@@346))
 :pattern ( ($generated@@264 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@61) (= ($generated@@67 ($generated@@264 $generated@@347)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@349 ($generated@@348 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@348 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@67 ($generated@@348 $generated@@353)) $generated@@56))
 :pattern ( ($generated@@348 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@328 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@328 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@328 $generated@@357)) $generated@@57))
 :pattern ( ($generated@@328 $generated@@357))
)))
(assert (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated@@358 $generated@@362 ($generated@@208 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@208 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ) (!  (=> (= (type $generated@@363) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@363) $generated@@364) ($generated@@128 $generated@@363 $generated@@364)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (not ($generated@@0 ($generated@@76 ($generated@@294 $generated@@366) $generated@@365))))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@76 ($generated@@294 $generated@@366) $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@71 $generated@@209 $generated@@2)) (= (type $generated@@368) $generated@@61)) (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@367 ($generated@@348 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@209) (< 0 ($generated ($generated@@76 $generated@@367 $generated@@370)))) ($generated@@207 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@76 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@69 $generated@@367 ($generated@@348 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 Int) ) (! (= ($generated@@208 ($generated@@8 ($generated@@130 $generated@@371))) ($generated@@133 ($generated@@208 ($generated@@8 $generated@@371))))
 :pattern ( ($generated@@208 ($generated@@8 ($generated@@130 $generated@@371))))
)))
(assert (forall (($generated@@372 T@U) ) (! (= ($generated@@208 ($generated@@133 $generated@@372)) ($generated@@133 ($generated@@208 $generated@@372)))
 :pattern ( ($generated@@208 ($generated@@133 $generated@@372)))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@202 (type $generated@@373))))
 (=> (and (= (type $generated@@373) ($generated@@201 $generated@@374)) (= ($generated@@200 $generated@@373) 0)) (= $generated@@373 ($generated@@199 $generated@@374))))
 :pattern ( ($generated@@200 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@376) $generated@@2)) ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
 :pattern ( ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@378) $generated@@3)) ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
 :pattern ( ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) $generated@@4)) ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
 :pattern ( ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
)))
(assert (= ($generated@@1 $generated@@381) 18))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@381)) ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@385) $generated@@209)) ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
 :pattern ( ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@386 () Int)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 () Int)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () T@U)
(declare-fun $generated@@392 () Int)
(declare-fun $generated@@393 () Int)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 () T@U)
(declare-fun $generated@@396 () T@U)
(declare-fun $generated@@397 () T@U)
(declare-fun $generated@@398 () T@U)
(declare-fun $generated@@399 (T@U) Bool)
(declare-fun $generated@@400 (T@U) Bool)
(declare-fun $generated@@401 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@387) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@389) $generated@@131)) (= (type $generated@@390) $generated@@131)) (= (type $generated@@395) $generated@@131)) (= (type $generated@@391) $generated@@131)) (= (type $generated@@396) $generated@@131)) (= (type $generated@@397) ($generated@@141 $generated@@72 $generated@@4))) (= (type $generated@@398) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@402  (=> ($generated@@69 ($generated@@8 $generated@@386) $generated@@46 $generated@@387) (=> (and ($generated@@132 $generated@@386) (= $generated@@388 (- $generated@@386 3))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@388) $generated@@46 $generated@@387) ($generated@@132 (- $generated@@386 3))) (and ($generated@@132 $generated@@386) ($generated@@132 (- $generated@@386 3)))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (= ($generated@@128 $generated@@389 $generated@@386) (+ 3 ($generated@@128 $generated@@389 (- $generated@@386 3))))) (=> (and (= ($generated@@128 $generated@@389 $generated@@386) (+ 3 ($generated@@128 $generated@@389 (- $generated@@386 3)))) (= (ControlFlow 0 11) (- 0 10))) ($generated@@0 ($generated@@133 ($generated@@11 true))))))))))
(let (($generated@@403 true))
(let (($generated@@404  (=> (= $generated@@390 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@391)))) (=> (and (= $generated@@389 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@391))))) (> $generated@@392 0)) (and (=> (= (ControlFlow 0 13) 9) $generated@@403) (=> (= (ControlFlow 0 13) 11) $generated@@402))))))
(let (($generated@@405  (=> (and (and (and ($generated@@69 ($generated@@8 $generated@@386) $generated@@46 $generated@@387) ($generated@@132 $generated@@386)) (and ($generated@@132 $generated@@386) (= $generated@@393 (- $generated@@386 3)))) (and (and ($generated@@69 ($generated@@8 $generated@@393) $generated@@46 $generated@@387) ($generated@@132 (- $generated@@386 3))) (and ($generated@@132 (- $generated@@386 3)) (= (ControlFlow 0 5) (- 0 4))))) (= ($generated@@128 $generated@@389 $generated@@386) (+ 3 ($generated@@128 $generated@@389 (- $generated@@386 3)))))))
(let (($generated@@406 true))
(let (($generated@@407  (=> ($generated@@69 ($generated@@8 $generated@@386) $generated@@46 $generated@@387) (=> (and (and (and ($generated@@132 $generated@@386) (= $generated@@394 (- $generated@@386 3))) (and ($generated@@69 ($generated@@8 $generated@@394) $generated@@46 $generated@@387) ($generated@@132 (- $generated@@386 3)))) (and (and ($generated@@132 $generated@@386) ($generated@@132 (- $generated@@386 3))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@128 $generated@@389 $generated@@386) (+ 3 ($generated@@128 $generated@@389 (- $generated@@386 3))))))))
(let (($generated@@408  (=> (and (= ($generated@@128 $generated@@389 $generated@@386) (+ 3 ($generated@@128 $generated@@389 (- $generated@@386 3)))) (= (ControlFlow 0 6) 2)) $generated@@407)))
(let (($generated@@409  (=> (and (= $generated@@390 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@395)))) (= $generated@@389 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@395)))))) (and (and (=> (= (ControlFlow 0 7) 3) $generated@@406) (=> (= (ControlFlow 0 7) 5) $generated@@405)) (=> (= (ControlFlow 0 7) 6) $generated@@408)))))
(let (($generated@@410  (=> (forall (($generated@@411 Int) )  (=> (> $generated@@411 0) ($generated@@0 ($generated@@133 ($generated@@11 true))))) (and (=> (= (ControlFlow 0 8) 7) $generated@@409) (=> (= (ControlFlow 0 8) 2) $generated@@407)))))
(let (($generated@@412  (=> (and (and (= $generated@@390 ($generated@@129 $generated@@396)) (= $generated@@389 ($generated@@129 ($generated@@129 $generated@@396)))) (and (= ($generated@@323 $generated@@396) $generated@@396) (= $generated@@397 ($generated@@140 $generated@@398 $generated@@387 $generated@@60 false)))) (and (=> (= (ControlFlow 0 14) 13) $generated@@404) (=> (= (ControlFlow 0 14) 8) $generated@@410)))))
(let (($generated@@413  (=> (and ($generated@@399 $generated@@387) ($generated@@400 $generated@@387)) (=> (and (and (= 1 $generated@@127) (> $generated@@386 5)) (and (< $generated@@401 0) (= (ControlFlow 0 15) 14))) $generated@@412))))
$generated@@413))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@T) T@U)
(declare-fun $generated@@200 (T@U) Int)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@207 (T@U T@U T@U) Bool)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@T T@T) T@U)
(declare-fun $generated@@216 (T@T T@T) T@T)
(declare-fun $generated@@217 (T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@233 (T@T T@T) T@U)
(declare-fun $generated@@234 (T@T T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 () T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@U Int) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@381 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))) (forall (($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(= (type ($generated@@133 $generated@@135)) $generated@@136))
 :pattern ( ($generated@@133 $generated@@135))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@137 T@U) ($generated@@138 Int) ) (!  (=> (and (= (type $generated@@137) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@138)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@138 0))))) ($generated@@132 ($generated@@130 (- $generated@@138 1)))) (= ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)) (ite (< $generated@@138 0) 0 (+ 1 ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 (- $generated@@138 1))))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@1 ($generated@@141 $generated@@145 $generated@@146)) 13)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@142 ($generated@@141 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@143 ($generated@@141 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@141 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@143 (type $generated@@151))))
(= (type ($generated@@139 $generated@@151 $generated@@152 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@139 $generated@@151 $generated@@152 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(let (($generated@@160 (type $generated@@156)))
(= (type ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158)) ($generated@@141 $generated@@160 $generated@@159))))
 :pattern ( ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@158))
))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@143 (type $generated@@161))))
 (=> (= (type $generated@@164) $generated@@165) (= ($generated@@139 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@162 $generated@@163) $generated@@164)))
 :weight 0
))) (and (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@139 ($generated@@144 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@139 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@139 ($generated@@144 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@139 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or true (= ($generated@@139 ($generated@@144 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@139 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ) (! (= (type ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@141 $generated@@72 $generated@@4))
 :pattern ( ($generated@@140 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@64 (type $generated@@193))))
 (=> (and (and (and (and (= (type $generated@@188) $generated@@72) (= (type $generated@@189) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@190) ($generated@@63 $generated@@4))) (= (type $generated@@192) $generated@@72)) (= (type $generated@@193) ($generated@@63 $generated@@194))) (= ($generated@@0 ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (not (= $generated@@192 $generated@@188)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@189 $generated@@192) $generated@@190))) $generated@@191))))
 :pattern ( ($generated@@139 ($generated@@140 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@195 Int) ) (! (= ($generated@@130 $generated@@195) $generated@@195)
 :pattern ( ($generated@@130 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@133 $generated@@196) $generated@@196)
 :pattern ( ($generated@@133 $generated@@196))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@197 T@U) ($generated@@198 Int) ) (!  (=> (and (= (type $generated@@197) $generated@@131) (or ($generated@@132 $generated@@198) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@197 $generated@@198))
))))
(assert  (and (and (forall (($generated@@203 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@203)) 14)) (forall (($generated@@204 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@201 $generated@@204))
))) (forall (($generated@@205 T@T) ) (! (= (type ($generated@@199 $generated@@205)) ($generated@@201 $generated@@205))
 :pattern ( ($generated@@199 $generated@@205))
))))
(assert (forall (($generated@@206 T@T) ) (! (= ($generated@@200 ($generated@@199 $generated@@206)) 0)
 :pattern ( ($generated@@199 $generated@@206))
)))
(assert  (and (= ($generated@@1 $generated@@209) 15) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@208 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@208 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) $generated@@61) (= (type $generated@@213) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213) ($generated@@69 $generated@@211 $generated@@212 $generated@@213)))
 :pattern ( ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213))
)))
(assert  (and (and (and (and (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (= ($generated@@1 ($generated@@216 $generated@@219 $generated@@220)) 16)) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@217 ($generated@@216 $generated@@221 $generated@@222)) $generated@@221)
 :pattern ( ($generated@@216 $generated@@221 $generated@@222))
))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@218 ($generated@@216 $generated@@223 $generated@@224)) $generated@@224)
 :pattern ( ($generated@@216 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@217 (type $generated@@225))))
(= (type ($generated@@214 $generated@@225)) ($generated@@71 $generated@@226 $generated@@4)))
 :pattern ( ($generated@@214 $generated@@225))
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= (type ($generated@@215 $generated@@227 $generated@@228)) ($generated@@216 $generated@@227 $generated@@228))
 :pattern ( ($generated@@215 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@T) ) (! (let (($generated@@231 (type $generated@@229)))
 (not ($generated@@0 ($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229))))
 :pattern ( (let (($generated@@231 (type $generated@@229)))
($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229)))
)))
(assert  (and (and (and (and (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@237 $generated@@238)) 17)) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@239 $generated@@240)) $generated@@239)
 :pattern ( ($generated@@234 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@236 ($generated@@234 $generated@@241 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@234 $generated@@241 $generated@@242))
))) (forall (($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@235 (type $generated@@243))))
(= (type ($generated@@232 $generated@@243)) ($generated@@71 $generated@@244 $generated@@4)))
 :pattern ( ($generated@@232 $generated@@243))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= (type ($generated@@233 $generated@@245 $generated@@246)) ($generated@@234 $generated@@245 $generated@@246))
 :pattern ( ($generated@@233 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@T) ) (! (let (($generated@@249 (type $generated@@247)))
 (not ($generated@@0 ($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247))))
 :pattern ( (let (($generated@@249 (type $generated@@247)))
($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@218 (type $generated@@250))))
(let (($generated@@252 ($generated@@217 (type $generated@@250))))
 (=> (= (type $generated@@250) ($generated@@216 $generated@@252 $generated@@251)) (or (= $generated@@250 ($generated@@215 $generated@@252 $generated@@251)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@250) $generated@@253)))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@214 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@236 (type $generated@@254))))
(let (($generated@@256 ($generated@@235 (type $generated@@254))))
 (=> (= (type $generated@@254) ($generated@@234 $generated@@256 $generated@@255)) (or (= $generated@@254 ($generated@@233 $generated@@256 $generated@@255)) (exists (($generated@@257 T@U) ) (!  (and (= (type $generated@@257) $generated@@256) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@254) $generated@@257)))
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
))))))
 :pattern ( ($generated@@232 $generated@@254))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@209) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@207 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@267) $generated@@61)) (= (type $generated@@268) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@209) ($generated@@0 ($generated@@76 $generated@@266 $generated@@269))) ($generated@@207 $generated@@269 $generated@@267 $generated@@268))
 :pattern ( ($generated@@76 $generated@@266 $generated@@269))
))))
 :pattern ( ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268))
)))
(assert  (and (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273)) $generated@@61)
 :pattern ( ($generated@@270 $generated@@272 $generated@@273))
)) (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@218 (type $generated@@274))))
(let (($generated@@276 ($generated@@217 (type $generated@@274))))
(= (type ($generated@@271 $generated@@274)) ($generated@@71 $generated@@276 $generated@@275))))
 :pattern ( ($generated@@271 $generated@@274))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (= (type $generated@@277) ($generated@@216 $generated@@209 $generated@@209)) (= (type $generated@@278) $generated@@61)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))) (and ($generated@@207 ($generated@@76 ($generated@@271 $generated@@277) $generated@@281) $generated@@279 $generated@@280) ($generated@@207 $generated@@281 $generated@@278 $generated@@280)))
 :pattern ( ($generated@@76 ($generated@@271 $generated@@277) $generated@@281))
 :pattern ( ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280))
)))
(assert  (and (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (= (type ($generated@@282 $generated@@284 $generated@@285)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@284 $generated@@285))
)) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@236 (type $generated@@286))))
(let (($generated@@288 ($generated@@235 (type $generated@@286))))
(= (type ($generated@@283 $generated@@286)) ($generated@@71 $generated@@288 $generated@@287))))
 :pattern ( ($generated@@283 $generated@@286))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (= (type $generated@@289) ($generated@@234 $generated@@209 $generated@@209)) (= (type $generated@@290) $generated@@61)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))) (and ($generated@@207 ($generated@@76 ($generated@@283 $generated@@289) $generated@@293) $generated@@291 $generated@@292) ($generated@@207 $generated@@293 $generated@@290 $generated@@292)))
 :pattern ( ($generated@@76 ($generated@@283 $generated@@289) $generated@@293))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))
))))
 :pattern ( ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@71 $generated@@295 $generated@@4))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@236 (type $generated@@296))))
(let (($generated@@298 ($generated@@235 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@234 $generated@@298 $generated@@297)) (= (= $generated@@296 ($generated@@233 $generated@@298 $generated@@297)) (= ($generated@@232 $generated@@296) ($generated@@294 $generated@@298))))))
 :pattern ( ($generated@@232 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@299 T@U) ($generated@@300 Int) ) (!  (=> (and (= (type $generated@@299) $generated@@131) (or ($generated@@132 $generated@@300) (not (= 0 $generated@@127)))) (and (=> (<= 0 $generated@@300) ($generated@@132 (- $generated@@300 1))) (= ($generated@@128 ($generated@@129 $generated@@299) $generated@@300) (ite (< $generated@@300 0) 0 (+ 1 ($generated@@128 $generated@@299 (- $generated@@300 1)))))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@299) $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@202 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@201 $generated@@302)) (<= 0 ($generated@@200 $generated@@301))))
 :pattern ( ($generated@@200 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@61) (= (type $generated@@306) $generated@@61)) (= ($generated@@303 ($generated@@270 $generated@@305 $generated@@306)) $generated@@305))
 :pattern ( ($generated@@270 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@61)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@61) (= (type $generated@@310) $generated@@61)) (= ($generated@@307 ($generated@@270 $generated@@309 $generated@@310)) $generated@@310))
 :pattern ( ($generated@@270 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@67 ($generated@@270 $generated@@311 $generated@@312)) $generated@@58))
 :pattern ( ($generated@@270 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@61)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@61) (= (type $generated@@316) $generated@@61)) (= ($generated@@313 ($generated@@282 $generated@@315 $generated@@316)) $generated@@315))
 :pattern ( ($generated@@282 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@317 ($generated@@282 $generated@@319 $generated@@320)) $generated@@320))
 :pattern ( ($generated@@282 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@61) (= (type $generated@@322) $generated@@61)) (= ($generated@@67 ($generated@@282 $generated@@321 $generated@@322)) $generated@@59))
 :pattern ( ($generated@@282 $generated@@321 $generated@@322))
)))
(assert  (and (forall (($generated@@325 T@U) ) (! (= (type ($generated@@323 $generated@@325)) $generated@@131)
 :pattern ( ($generated@@323 $generated@@325))
)) (= (type $generated@@324) $generated@@131)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ) (!  (=> (= (type $generated@@326) $generated@@131) (= ($generated@@128 $generated@@326 $generated@@327) ($generated@@128 $generated@@324 $generated@@327)))
 :pattern ( ($generated@@128 ($generated@@323 $generated@@326) $generated@@327))
)))
(assert  (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@330)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@330))
)) (forall (($generated@@331 T@U) ($generated@@332 Int) ) (! (let (($generated@@333 ($generated@@202 (type $generated@@331))))
(= (type ($generated@@329 $generated@@331 $generated@@332)) $generated@@333))
 :pattern ( ($generated@@329 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@201 $generated@@209)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@334 ($generated@@328 $generated@@335) $generated@@336) (forall (($generated@@337 Int) ) (!  (=> (and (<= 0 $generated@@337) (< $generated@@337 ($generated@@200 $generated@@334))) ($generated@@207 ($generated@@329 $generated@@334 $generated@@337) $generated@@335 $generated@@336))
 :pattern ( ($generated@@329 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@69 $generated@@334 ($generated@@328 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@339 Int) ) (! (= ($generated@@338 ($generated@@70 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@70 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@340 ($generated@@258 $generated@@342)) $generated@@342))
 :pattern ( ($generated@@258 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@343)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@344 ($generated@@264 $generated@@346)) $generated@@346))
 :pattern ( ($generated@@264 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@61) (= ($generated@@67 ($generated@@264 $generated@@347)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@349 ($generated@@348 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@348 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@67 ($generated@@348 $generated@@353)) $generated@@56))
 :pattern ( ($generated@@348 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@328 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@328 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@328 $generated@@357)) $generated@@57))
 :pattern ( ($generated@@328 $generated@@357))
)))
(assert (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated@@358 $generated@@362 ($generated@@208 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@208 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ) (!  (=> (= (type $generated@@363) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@363) $generated@@364) ($generated@@128 $generated@@363 $generated@@364)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (not ($generated@@0 ($generated@@76 ($generated@@294 $generated@@366) $generated@@365))))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@76 ($generated@@294 $generated@@366) $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@71 $generated@@209 $generated@@2)) (= (type $generated@@368) $generated@@61)) (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@367 ($generated@@348 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@209) (< 0 ($generated ($generated@@76 $generated@@367 $generated@@370)))) ($generated@@207 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@76 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@69 $generated@@367 ($generated@@348 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 Int) ) (! (= ($generated@@208 ($generated@@8 ($generated@@130 $generated@@371))) ($generated@@133 ($generated@@208 ($generated@@8 $generated@@371))))
 :pattern ( ($generated@@208 ($generated@@8 ($generated@@130 $generated@@371))))
)))
(assert (forall (($generated@@372 T@U) ) (! (= ($generated@@208 ($generated@@133 $generated@@372)) ($generated@@133 ($generated@@208 $generated@@372)))
 :pattern ( ($generated@@208 ($generated@@133 $generated@@372)))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@202 (type $generated@@373))))
 (=> (and (= (type $generated@@373) ($generated@@201 $generated@@374)) (= ($generated@@200 $generated@@373) 0)) (= $generated@@373 ($generated@@199 $generated@@374))))
 :pattern ( ($generated@@200 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@376) $generated@@2)) ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
 :pattern ( ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@378) $generated@@3)) ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
 :pattern ( ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) $generated@@4)) ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
 :pattern ( ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
)))
(assert (= ($generated@@1 $generated@@381) 18))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@381)) ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@385) $generated@@209)) ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
 :pattern ( ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 () T@U)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () T@U)
(declare-fun $generated@@392 () Int)
(declare-fun $generated@@393 () Int)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 () Int)
(declare-fun $generated@@396 (T@U) Bool)
(declare-fun $generated@@397 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@386) $generated@@131) (= (type $generated@@387) $generated@@131)) (= (type $generated@@388) $generated@@131)) (= (type $generated@@389) ($generated@@141 $generated@@72 $generated@@4))) (= (type $generated@@390) $generated@@72)) (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@398  (=> (= $generated@@386 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@387)))) (=> (and (= $generated@@388 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@387))))) (= ($generated@@323 $generated@@387) $generated@@387)) (=> (and (and (= $generated@@389 ($generated@@140 $generated@@390 $generated@@391 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@392) $generated@@46 $generated@@391)) (and ($generated@@132 $generated@@392) ($generated@@132 $generated@@392))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@128 $generated@@388 $generated@@392) ($generated@@130 0))) (=> (= ($generated@@128 $generated@@388 $generated@@392) ($generated@@130 0)) (=> (and (and (= $generated@@393 ($generated@@130 (- 0 1))) ($generated@@69 ($generated@@8 $generated@@393) $generated@@46 $generated@@391)) (and ($generated@@132 ($generated@@130 (- 0 1))) ($generated@@132 ($generated@@130 (- 0 1))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@130 ($generated@@128 $generated@@388 ($generated@@130 (- 0 1)))) ($generated@@130 0))) (=> (and (= ($generated@@130 ($generated@@128 $generated@@388 ($generated@@130 (- 0 1)))) ($generated@@130 0)) ($generated@@69 ($generated@@8 $generated@@394) $generated@@46 $generated@@391)) (=> (and (and (and ($generated@@132 $generated@@394) (= $generated@@395 (- $generated@@394 3))) (and ($generated@@69 ($generated@@8 $generated@@395) $generated@@46 $generated@@391) ($generated@@132 (- $generated@@394 3)))) (and (and ($generated@@132 $generated@@394) ($generated@@132 (- $generated@@394 3))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@128 $generated@@388 $generated@@394) (+ 3 ($generated@@128 $generated@@388 (- $generated@@394 3)))))))))))))))
(let (($generated@@399  (=> (and ($generated@@396 $generated@@391) ($generated@@397 $generated@@391)) (=> (and (and (= 1 $generated@@127) (> $generated@@394 5)) (and (< $generated@@392 0) (= (ControlFlow 0 5) 2))) $generated@@398))))
$generated@@399)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (Int Int) Int)
(declare-fun $generated@@137 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T) T@T)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@141 (T@T) T@T)
(declare-fun $generated@@142 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@193 (Int) Int)
(declare-fun $generated@@194 (Int) Bool)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@205 (T@T) T@U)
(declare-fun $generated@@206 (T@U) Int)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@213 (T@U T@U T@U) Bool)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 () T@T)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@221 (T@T T@T) T@U)
(declare-fun $generated@@222 (T@T T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@T T@T) T@U)
(declare-fun $generated@@240 (T@T T@T) T@T)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@242 (T@T) T@T)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@U T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@289 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 () T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@U Int) T@U)
(declare-fun $generated@@343 (T@U) Int)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@390 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@135 T@U) ($generated@@136 Int) ) (!  (=> (and (= (type $generated@@135) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@136)) (not (= 0 $generated@@127)))) (= ($generated@@128 ($generated@@129 $generated@@135) ($generated@@130 $generated@@136)) (ite (< $generated@@136 0) ($generated@@133 ($generated@@130 (- 0 1)) ($generated@@130 $generated@@136)) $generated@@136)))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@135) ($generated@@130 $generated@@136)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (= ($generated@@1 ($generated@@139 $generated@@143 $generated@@144)) 13)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@140 ($generated@@139 $generated@@145 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@139 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@141 ($generated@@139 $generated@@147 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@139 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (let (($generated@@152 ($generated@@141 (type $generated@@149))))
(= (type ($generated@@137 $generated@@149 $generated@@150 $generated@@151)) $generated@@152))
 :pattern ( ($generated@@137 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 (type $generated@@156)))
(let (($generated@@158 (type $generated@@154)))
(= (type ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@156)) ($generated@@139 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@156))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 ($generated@@141 (type $generated@@159))))
 (=> (= (type $generated@@162) $generated@@163) (= ($generated@@137 ($generated@@142 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@160 $generated@@161) $generated@@162)))
 :weight 0
))) (and (and (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@137 ($generated@@142 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@137 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@173 $generated@@175) (= ($generated@@137 ($generated@@142 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@137 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or true (= ($generated@@137 ($generated@@142 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@137 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Bool) ) (! (= (type ($generated@@138 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@139 $generated@@72 $generated@@4))
 :pattern ( ($generated@@138 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Bool) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@64 (type $generated@@191))))
 (=> (and (and (and (and (= (type $generated@@186) $generated@@72) (= (type $generated@@187) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@188) ($generated@@63 $generated@@4))) (= (type $generated@@190) $generated@@72)) (= (type $generated@@191) ($generated@@63 $generated@@192))) (= ($generated@@0 ($generated@@137 ($generated@@138 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))  (=> (and (not (= $generated@@190 $generated@@186)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@187 $generated@@190) $generated@@188))) $generated@@189))))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))
)))
(assert (= (type $generated@@195) $generated@@131))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@196 Int) ) (!  (=> (or ($generated@@194 $generated@@196) (not (= 1 $generated@@127))) (and ($generated@@132 $generated@@196) (= ($generated@@193 $generated@@196) ($generated@@128 $generated@@195 $generated@@196))))
 :pattern ( ($generated@@193 $generated@@196))
))))
(assert (forall (($generated@@197 Int) ) (! (= ($generated@@130 $generated@@197) $generated@@197)
 :pattern ( ($generated@@130 $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@199)))
(= (type ($generated@@198 $generated@@199)) $generated@@200))
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ) (! (= ($generated@@198 $generated@@201) $generated@@201)
 :pattern ( ($generated@@198 $generated@@201))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@202 T@U) ($generated@@203 Int) ) (!  (=> (and (= (type $generated@@202) $generated@@131) (or ($generated@@132 $generated@@203) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@202 $generated@@203))
))))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@204 Int) ) (!  (=> (or ($generated@@194 $generated@@204) (not (= 1 $generated@@127))) true)
 :pattern ( ($generated@@193 $generated@@204))
))))
(assert  (and (and (forall (($generated@@209 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@209)) 14)) (forall (($generated@@210 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@207 $generated@@210))
))) (forall (($generated@@211 T@T) ) (! (= (type ($generated@@205 $generated@@211)) ($generated@@207 $generated@@211))
 :pattern ( ($generated@@205 $generated@@211))
))))
(assert (forall (($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@212)) 0)
 :pattern ( ($generated@@205 $generated@@212))
)))
(assert  (and (= ($generated@@1 $generated@@215) 15) (forall (($generated@@216 T@U) ) (! (= (type ($generated@@214 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@214 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@61) (= (type $generated@@219) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@213 ($generated@@214 $generated@@217) $generated@@218 $generated@@219) ($generated@@69 $generated@@217 $generated@@218 $generated@@219)))
 :pattern ( ($generated@@213 ($generated@@214 $generated@@217) $generated@@218 $generated@@219))
)))
(assert  (and (and (and (and (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@1 ($generated@@222 $generated@@225 $generated@@226)) 16)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@223 ($generated@@222 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@222 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@224 ($generated@@222 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@222 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@223 (type $generated@@231))))
(= (type ($generated@@220 $generated@@231)) ($generated@@71 $generated@@232 $generated@@4)))
 :pattern ( ($generated@@220 $generated@@231))
))) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= (type ($generated@@221 $generated@@233 $generated@@234)) ($generated@@222 $generated@@233 $generated@@234))
 :pattern ( ($generated@@221 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@T) ) (! (let (($generated@@237 (type $generated@@235)))
 (not ($generated@@0 ($generated@@76 ($generated@@220 ($generated@@221 $generated@@237 $generated@@236)) $generated@@235))))
 :pattern ( (let (($generated@@237 (type $generated@@235)))
($generated@@76 ($generated@@220 ($generated@@221 $generated@@237 $generated@@236)) $generated@@235)))
)))
(assert  (and (and (and (and (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (= ($generated@@1 ($generated@@240 $generated@@243 $generated@@244)) 17)) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@241 ($generated@@240 $generated@@245 $generated@@246)) $generated@@245)
 :pattern ( ($generated@@240 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (! (= ($generated@@242 ($generated@@240 $generated@@247 $generated@@248)) $generated@@248)
 :pattern ( ($generated@@240 $generated@@247 $generated@@248))
))) (forall (($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@241 (type $generated@@249))))
(= (type ($generated@@238 $generated@@249)) ($generated@@71 $generated@@250 $generated@@4)))
 :pattern ( ($generated@@238 $generated@@249))
))) (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (! (= (type ($generated@@239 $generated@@251 $generated@@252)) ($generated@@240 $generated@@251 $generated@@252))
 :pattern ( ($generated@@239 $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@T) ) (! (let (($generated@@255 (type $generated@@253)))
 (not ($generated@@0 ($generated@@76 ($generated@@238 ($generated@@239 $generated@@255 $generated@@254)) $generated@@253))))
 :pattern ( (let (($generated@@255 (type $generated@@253)))
($generated@@76 ($generated@@238 ($generated@@239 $generated@@255 $generated@@254)) $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@224 (type $generated@@256))))
(let (($generated@@258 ($generated@@223 (type $generated@@256))))
 (=> (= (type $generated@@256) ($generated@@222 $generated@@258 $generated@@257)) (or (= $generated@@256 ($generated@@221 $generated@@258 $generated@@257)) (exists (($generated@@259 T@U) ) (!  (and (= (type $generated@@259) $generated@@258) ($generated@@0 ($generated@@76 ($generated@@220 $generated@@256) $generated@@259)))
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
))))))
 :pattern ( ($generated@@220 $generated@@256))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@242 (type $generated@@260))))
(let (($generated@@262 ($generated@@241 (type $generated@@260))))
 (=> (= (type $generated@@260) ($generated@@240 $generated@@262 $generated@@261)) (or (= $generated@@260 ($generated@@239 $generated@@262 $generated@@261)) (exists (($generated@@263 T@U) ) (!  (and (= (type $generated@@263) $generated@@262) ($generated@@0 ($generated@@76 ($generated@@238 $generated@@260) $generated@@263)))
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
))))))
 :pattern ( ($generated@@238 $generated@@260))
)))
(assert  (=> (<= 1 $generated@@127) (forall (($generated@@264 Int) ) (!  (=> (or ($generated@@194 ($generated@@130 $generated@@264)) (not (= 1 $generated@@127))) (and ($generated@@132 ($generated@@130 $generated@@264)) (= ($generated@@193 ($generated@@130 $generated@@264)) ($generated@@130 ($generated@@128 $generated@@195 ($generated@@130 $generated@@264))))))
 :weight 3
 :pattern ( ($generated@@193 ($generated@@130 $generated@@264)))
))))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@61)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (= (type $generated@@267) ($generated@@71 $generated@@215 $generated@@4)) (= (type $generated@@268) $generated@@61)) (= (type $generated@@269) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@215) ($generated@@0 ($generated@@76 $generated@@267 $generated@@270))) ($generated@@213 $generated@@270 $generated@@268 $generated@@269))
 :pattern ( ($generated@@76 $generated@@267 $generated@@270))
))))
 :pattern ( ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@61)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@273) ($generated@@71 $generated@@215 $generated@@4)) (= (type $generated@@274) $generated@@61)) (= (type $generated@@275) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@273 ($generated@@271 $generated@@274) $generated@@275) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@215) ($generated@@0 ($generated@@76 $generated@@273 $generated@@276))) ($generated@@213 $generated@@276 $generated@@274 $generated@@275))
 :pattern ( ($generated@@76 $generated@@273 $generated@@276))
))))
 :pattern ( ($generated@@69 $generated@@273 ($generated@@271 $generated@@274) $generated@@275))
)))
(assert  (and (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (= (type ($generated@@277 $generated@@279 $generated@@280)) $generated@@61)
 :pattern ( ($generated@@277 $generated@@279 $generated@@280))
)) (forall (($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@224 (type $generated@@281))))
(let (($generated@@283 ($generated@@223 (type $generated@@281))))
(= (type ($generated@@278 $generated@@281)) ($generated@@71 $generated@@283 $generated@@282))))
 :pattern ( ($generated@@278 $generated@@281))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (= (type $generated@@284) ($generated@@222 $generated@@215 $generated@@215)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) $generated@@61)) (= (type $generated@@287) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@284 ($generated@@277 $generated@@285 $generated@@286) $generated@@287) (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@215) ($generated@@0 ($generated@@76 ($generated@@220 $generated@@284) $generated@@288))) (and ($generated@@213 ($generated@@76 ($generated@@278 $generated@@284) $generated@@288) $generated@@286 $generated@@287) ($generated@@213 $generated@@288 $generated@@285 $generated@@287)))
 :pattern ( ($generated@@76 ($generated@@278 $generated@@284) $generated@@288))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@284) $generated@@288))
))))
 :pattern ( ($generated@@69 $generated@@284 ($generated@@277 $generated@@285 $generated@@286) $generated@@287))
)))
(assert  (and (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@289 $generated@@291 $generated@@292)) $generated@@61)
 :pattern ( ($generated@@289 $generated@@291 $generated@@292))
)) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@242 (type $generated@@293))))
(let (($generated@@295 ($generated@@241 (type $generated@@293))))
(= (type ($generated@@290 $generated@@293)) ($generated@@71 $generated@@295 $generated@@294))))
 :pattern ( ($generated@@290 $generated@@293))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (= (type $generated@@296) ($generated@@240 $generated@@215 $generated@@215)) (= (type $generated@@297) $generated@@61)) (= (type $generated@@298) $generated@@61)) (= (type $generated@@299) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@296 ($generated@@289 $generated@@297 $generated@@298) $generated@@299) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@215) ($generated@@0 ($generated@@76 ($generated@@238 $generated@@296) $generated@@300))) (and ($generated@@213 ($generated@@76 ($generated@@290 $generated@@296) $generated@@300) $generated@@298 $generated@@299) ($generated@@213 $generated@@300 $generated@@297 $generated@@299)))
 :pattern ( ($generated@@76 ($generated@@290 $generated@@296) $generated@@300))
 :pattern ( ($generated@@76 ($generated@@238 $generated@@296) $generated@@300))
))))
 :pattern ( ($generated@@69 $generated@@296 ($generated@@289 $generated@@297 $generated@@298) $generated@@299))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@71 $generated@@302 $generated@@4))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@242 (type $generated@@303))))
(let (($generated@@305 ($generated@@241 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@240 $generated@@305 $generated@@304)) (= (= $generated@@303 ($generated@@239 $generated@@305 $generated@@304)) (= ($generated@@238 $generated@@303) ($generated@@301 $generated@@305))))))
 :pattern ( ($generated@@238 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@208 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@207 $generated@@307)) (<= 0 ($generated@@206 $generated@@306))))
 :pattern ( ($generated@@206 $generated@@306))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@61)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@61) (= (type $generated@@311) $generated@@61)) (= ($generated@@308 ($generated@@277 $generated@@310 $generated@@311)) $generated@@310))
 :pattern ( ($generated@@277 $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@61)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@61) (= (type $generated@@315) $generated@@61)) (= ($generated@@312 ($generated@@277 $generated@@314 $generated@@315)) $generated@@315))
 :pattern ( ($generated@@277 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@61) (= (type $generated@@317) $generated@@61)) (= ($generated@@67 ($generated@@277 $generated@@316 $generated@@317)) $generated@@58))
 :pattern ( ($generated@@277 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (! (= (type ($generated@@318 $generated@@319)) $generated@@61)
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@61) (= (type $generated@@321) $generated@@61)) (= ($generated@@318 ($generated@@289 $generated@@320 $generated@@321)) $generated@@320))
 :pattern ( ($generated@@289 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@61)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@61) (= (type $generated@@325) $generated@@61)) (= ($generated@@322 ($generated@@289 $generated@@324 $generated@@325)) $generated@@325))
 :pattern ( ($generated@@289 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@61) (= (type $generated@@327) $generated@@61)) (= ($generated@@67 ($generated@@289 $generated@@326 $generated@@327)) $generated@@59))
 :pattern ( ($generated@@289 $generated@@326 $generated@@327))
)))
(assert  (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@330)) $generated@@131)
 :pattern ( ($generated@@328 $generated@@330))
)) (= (type $generated@@329) $generated@@131)))
(assert (forall (($generated@@331 T@U) ($generated@@332 Int) ) (!  (=> (= (type $generated@@331) $generated@@131) (= ($generated@@128 $generated@@331 $generated@@332) ($generated@@128 $generated@@329 $generated@@332)))
 :pattern ( ($generated@@128 ($generated@@328 $generated@@331) $generated@@332))
)))
(assert  (and (forall (($generated@@335 T@U) ) (! (= (type ($generated@@333 $generated@@335)) $generated@@61)
 :pattern ( ($generated@@333 $generated@@335))
)) (forall (($generated@@336 T@U) ($generated@@337 Int) ) (! (let (($generated@@338 ($generated@@208 (type $generated@@336))))
(= (type ($generated@@334 $generated@@336 $generated@@337)) $generated@@338))
 :pattern ( ($generated@@334 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@339) ($generated@@207 $generated@@215)) (= (type $generated@@340) $generated@@61)) (= (type $generated@@341) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@339 ($generated@@333 $generated@@340) $generated@@341) (forall (($generated@@342 Int) ) (!  (=> (and (<= 0 $generated@@342) (< $generated@@342 ($generated@@206 $generated@@339))) ($generated@@213 ($generated@@334 $generated@@339 $generated@@342) $generated@@340 $generated@@341))
 :pattern ( ($generated@@334 $generated@@339 $generated@@342))
))))
 :pattern ( ($generated@@69 $generated@@339 ($generated@@333 $generated@@340) $generated@@341))
)))
(assert (forall (($generated@@344 Int) ) (! (= ($generated@@343 ($generated@@70 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@70 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@61)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@61) (= ($generated@@345 ($generated@@265 $generated@@347)) $generated@@347))
 :pattern ( ($generated@@265 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@61) (= ($generated@@67 ($generated@@265 $generated@@348)) $generated@@54))
 :pattern ( ($generated@@265 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@61) (= ($generated@@349 ($generated@@271 $generated@@351)) $generated@@351))
 :pattern ( ($generated@@271 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@67 ($generated@@271 $generated@@352)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@352))
)))
(assert  (and (forall (($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@353 $generated@@355))
)) (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@354 ($generated@@353 $generated@@357)) $generated@@357))
 :pattern ( ($generated@@353 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@61) (= ($generated@@67 ($generated@@353 $generated@@358)) $generated@@56))
 :pattern ( ($generated@@353 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@359 ($generated@@333 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@333 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@67 ($generated@@333 $generated@@362)) $generated@@57))
 :pattern ( ($generated@@333 $generated@@362))
)))
(assert (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(= ($generated@@363 $generated@@367 ($generated@@214 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@214 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 Int) ) (!  (=> (= (type $generated@@368) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@368) $generated@@369) ($generated@@128 $generated@@368 $generated@@369)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
 (not ($generated@@0 ($generated@@76 ($generated@@301 $generated@@371) $generated@@370))))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@76 ($generated@@301 $generated@@371) $generated@@370)))
)))
(assert (forall (($generated@@372 Int) ($generated@@373 Int) ) (! (= ($generated@@133 $generated@@372 $generated@@373) (* $generated@@372 $generated@@373))
 :pattern ( ($generated@@133 $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@71 $generated@@215 $generated@@2)) (= (type $generated@@375) $generated@@61)) (= (type $generated@@376) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@374 ($generated@@353 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@215) (< 0 ($generated ($generated@@76 $generated@@374 $generated@@377)))) ($generated@@213 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@76 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@69 $generated@@374 ($generated@@353 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 Int) ) (! (= ($generated@@214 ($generated@@8 ($generated@@130 $generated@@378))) ($generated@@198 ($generated@@214 ($generated@@8 $generated@@378))))
 :pattern ( ($generated@@214 ($generated@@8 ($generated@@130 $generated@@378))))
)))
(assert (forall (($generated@@379 T@U) ) (! (= ($generated@@214 ($generated@@198 $generated@@379)) ($generated@@198 ($generated@@214 $generated@@379)))
 :pattern ( ($generated@@214 ($generated@@198 $generated@@379)))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@208 (type $generated@@380))))
 (=> (and (= (type $generated@@380) ($generated@@207 $generated@@381)) (= ($generated@@206 $generated@@380) 0)) (= $generated@@380 ($generated@@205 $generated@@381))))
 :pattern ( ($generated@@206 $generated@@380))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@382 T@U) ($generated@@383 Int) ) (!  (=> (and (= (type $generated@@382) $generated@@131) (or ($generated@@132 $generated@@383) (not (= 0 $generated@@127)))) (= ($generated@@128 ($generated@@129 $generated@@382) $generated@@383) (ite (< $generated@@383 0) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@383) $generated@@383)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@382) $generated@@383))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@385) $generated@@2)) ($generated@@69 $generated@@385 $generated@@46 $generated@@384))
 :pattern ( ($generated@@69 $generated@@385 $generated@@46 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@387) $generated@@3)) ($generated@@69 $generated@@387 $generated@@47 $generated@@386))
 :pattern ( ($generated@@69 $generated@@387 $generated@@47 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@389) $generated@@4)) ($generated@@69 $generated@@389 $generated@@44 $generated@@388))
 :pattern ( ($generated@@69 $generated@@389 $generated@@44 $generated@@388))
)))
(assert (= ($generated@@1 $generated@@390) 18))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@392) $generated@@390)) ($generated@@69 $generated@@392 $generated@@45 $generated@@391))
 :pattern ( ($generated@@69 $generated@@392 $generated@@45 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@394) $generated@@215)) ($generated@@69 $generated@@394 $generated@@48 $generated@@393))
 :pattern ( ($generated@@69 $generated@@394 $generated@@48 $generated@@393))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@395 () T@U)
(declare-fun $generated@@396 () T@U)
(declare-fun $generated@@397 () T@U)
(declare-fun $generated@@398 () T@U)
(declare-fun $generated@@399 () T@U)
(declare-fun $generated@@400 () Int)
(declare-fun $generated@@401 () Int)
(declare-fun $generated@@402 () Int)
(declare-fun $generated@@403 (T@U) Bool)
(declare-fun $generated@@404 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@395) $generated@@131) (= (type $generated@@396) $generated@@131)) (= (type $generated@@397) ($generated@@139 $generated@@72 $generated@@4))) (= (type $generated@@398) $generated@@72)) (= (type $generated@@399) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@405  (=> (= $generated@@195 ($generated@@129 $generated@@395)) (=> (and (= $generated@@396 ($generated@@129 ($generated@@129 $generated@@395))) (= ($generated@@328 $generated@@395) $generated@@395)) (=> (and (and (= $generated@@397 ($generated@@138 $generated@@398 $generated@@399 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@400) $generated@@46 $generated@@399)) (and ($generated@@194 $generated@@400) ($generated@@194 $generated@@400))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@193 $generated@@400) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@400))) (=> (= ($generated@@193 $generated@@400) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@400)) (=> ($generated@@69 ($generated@@8 $generated@@401) $generated@@46 $generated@@399) (=> (and ($generated@@194 $generated@@401) ($generated@@194 $generated@@401)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@193 $generated@@401) $generated@@401)) (=> (= ($generated@@193 $generated@@401) $generated@@401) (=> (= $generated@@402 ($generated@@130 (- 0 1))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@402) $generated@@46 $generated@@399) ($generated@@194 ($generated@@130 (- 0 1)))) (and ($generated@@194 ($generated@@130 (- 0 1))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@130 ($generated@@193 ($generated@@130 (- 0 1)))) ($generated@@130 1)))))))))))))))
(let (($generated@@406  (=> (and ($generated@@403 $generated@@399) ($generated@@404 $generated@@399)) (=> (and (and (= 2 $generated@@127) (> $generated@@401 5)) (and (< $generated@@400 0) (= (ControlFlow 0 5) 2))) $generated@@405))))
$generated@@406)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (Int Int) Int)
(declare-fun $generated@@137 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T) T@T)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@141 (T@T) T@T)
(declare-fun $generated@@142 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@200 (T@T) T@U)
(declare-fun $generated@@201 (T@U) Int)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@208 (T@U T@U T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@210 () T@T)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@T T@T) T@U)
(declare-fun $generated@@217 (T@T T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@219 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 (T@T T@T) T@U)
(declare-fun $generated@@235 (T@T T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@283 (T@U T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 () T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@U Int) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@384 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@135 T@U) ($generated@@136 Int) ) (!  (=> (and (= (type $generated@@135) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@136)) (not (= 0 $generated@@127)))) (= ($generated@@128 ($generated@@129 $generated@@135) ($generated@@130 $generated@@136)) (ite (< $generated@@136 0) ($generated@@133 ($generated@@130 (- 0 1)) ($generated@@130 $generated@@136)) $generated@@136)))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@135) ($generated@@130 $generated@@136)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (= ($generated@@1 ($generated@@139 $generated@@143 $generated@@144)) 13)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@140 ($generated@@139 $generated@@145 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@139 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@141 ($generated@@139 $generated@@147 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@139 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (let (($generated@@152 ($generated@@141 (type $generated@@149))))
(= (type ($generated@@137 $generated@@149 $generated@@150 $generated@@151)) $generated@@152))
 :pattern ( ($generated@@137 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 (type $generated@@156)))
(let (($generated@@158 (type $generated@@154)))
(= (type ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@156)) ($generated@@139 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@156))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 ($generated@@141 (type $generated@@159))))
 (=> (= (type $generated@@162) $generated@@163) (= ($generated@@137 ($generated@@142 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@160 $generated@@161) $generated@@162)))
 :weight 0
))) (and (and (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@137 ($generated@@142 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@137 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@173 $generated@@175) (= ($generated@@137 ($generated@@142 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@137 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or true (= ($generated@@137 ($generated@@142 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@137 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Bool) ) (! (= (type ($generated@@138 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@139 $generated@@72 $generated@@4))
 :pattern ( ($generated@@138 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Bool) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@64 (type $generated@@191))))
 (=> (and (and (and (and (= (type $generated@@186) $generated@@72) (= (type $generated@@187) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@188) ($generated@@63 $generated@@4))) (= (type $generated@@190) $generated@@72)) (= (type $generated@@191) ($generated@@63 $generated@@192))) (= ($generated@@0 ($generated@@137 ($generated@@138 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))  (=> (and (not (= $generated@@190 $generated@@186)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@187 $generated@@190) $generated@@188))) $generated@@189))))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@130 $generated@@193) $generated@@193)
 :pattern ( ($generated@@130 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(= (type ($generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@194 $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@194 $generated@@197) $generated@@197)
 :pattern ( ($generated@@194 $generated@@197))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@198 T@U) ($generated@@199 Int) ) (!  (=> (and (= (type $generated@@198) $generated@@131) (or ($generated@@132 $generated@@199) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@198 $generated@@199))
))))
(assert  (and (and (forall (($generated@@204 T@T) ) (= ($generated@@1 ($generated@@202 $generated@@204)) 14)) (forall (($generated@@205 T@T) ) (! (= ($generated@@203 ($generated@@202 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@202 $generated@@205))
))) (forall (($generated@@206 T@T) ) (! (= (type ($generated@@200 $generated@@206)) ($generated@@202 $generated@@206))
 :pattern ( ($generated@@200 $generated@@206))
))))
(assert (forall (($generated@@207 T@T) ) (! (= ($generated@@201 ($generated@@200 $generated@@207)) 0)
 :pattern ( ($generated@@200 $generated@@207))
)))
(assert  (and (= ($generated@@1 $generated@@210) 15) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@209 $generated@@211)) $generated@@210)
 :pattern ( ($generated@@209 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@61) (= (type $generated@@214) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@208 ($generated@@209 $generated@@212) $generated@@213 $generated@@214) ($generated@@69 $generated@@212 $generated@@213 $generated@@214)))
 :pattern ( ($generated@@208 ($generated@@209 $generated@@212) $generated@@213 $generated@@214))
)))
(assert  (and (and (and (and (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (= ($generated@@1 ($generated@@217 $generated@@220 $generated@@221)) 16)) (forall (($generated@@222 T@T) ($generated@@223 T@T) ) (! (= ($generated@@218 ($generated@@217 $generated@@222 $generated@@223)) $generated@@222)
 :pattern ( ($generated@@217 $generated@@222 $generated@@223))
))) (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (! (= ($generated@@219 ($generated@@217 $generated@@224 $generated@@225)) $generated@@225)
 :pattern ( ($generated@@217 $generated@@224 $generated@@225))
))) (forall (($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@218 (type $generated@@226))))
(= (type ($generated@@215 $generated@@226)) ($generated@@71 $generated@@227 $generated@@4)))
 :pattern ( ($generated@@215 $generated@@226))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= (type ($generated@@216 $generated@@228 $generated@@229)) ($generated@@217 $generated@@228 $generated@@229))
 :pattern ( ($generated@@216 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@T) ) (! (let (($generated@@232 (type $generated@@230)))
 (not ($generated@@0 ($generated@@76 ($generated@@215 ($generated@@216 $generated@@232 $generated@@231)) $generated@@230))))
 :pattern ( (let (($generated@@232 (type $generated@@230)))
($generated@@76 ($generated@@215 ($generated@@216 $generated@@232 $generated@@231)) $generated@@230)))
)))
(assert  (and (and (and (and (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (= ($generated@@1 ($generated@@235 $generated@@238 $generated@@239)) 17)) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= ($generated@@236 ($generated@@235 $generated@@240 $generated@@241)) $generated@@240)
 :pattern ( ($generated@@235 $generated@@240 $generated@@241))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= ($generated@@237 ($generated@@235 $generated@@242 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@235 $generated@@242 $generated@@243))
))) (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@236 (type $generated@@244))))
(= (type ($generated@@233 $generated@@244)) ($generated@@71 $generated@@245 $generated@@4)))
 :pattern ( ($generated@@233 $generated@@244))
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= (type ($generated@@234 $generated@@246 $generated@@247)) ($generated@@235 $generated@@246 $generated@@247))
 :pattern ( ($generated@@234 $generated@@246 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@T) ) (! (let (($generated@@250 (type $generated@@248)))
 (not ($generated@@0 ($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248))))
 :pattern ( (let (($generated@@250 (type $generated@@248)))
($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@219 (type $generated@@251))))
(let (($generated@@253 ($generated@@218 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@217 $generated@@253 $generated@@252)) (or (= $generated@@251 ($generated@@216 $generated@@253 $generated@@252)) (exists (($generated@@254 T@U) ) (!  (and (= (type $generated@@254) $generated@@253) ($generated@@0 ($generated@@76 ($generated@@215 $generated@@251) $generated@@254)))
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
))))))
 :pattern ( ($generated@@215 $generated@@251))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@237 (type $generated@@255))))
(let (($generated@@257 ($generated@@236 (type $generated@@255))))
 (=> (= (type $generated@@255) ($generated@@235 $generated@@257 $generated@@256)) (or (= $generated@@255 ($generated@@234 $generated@@257 $generated@@256)) (exists (($generated@@258 T@U) ) (!  (and (= (type $generated@@258) $generated@@257) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@255) $generated@@258)))
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
))))))
 :pattern ( ($generated@@233 $generated@@255))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@61)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@261) ($generated@@71 $generated@@210 $generated@@4)) (= (type $generated@@262) $generated@@61)) (= (type $generated@@263) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@261 ($generated@@259 $generated@@262) $generated@@263) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@210) ($generated@@0 ($generated@@76 $generated@@261 $generated@@264))) ($generated@@208 $generated@@264 $generated@@262 $generated@@263))
 :pattern ( ($generated@@76 $generated@@261 $generated@@264))
))))
 :pattern ( ($generated@@69 $generated@@261 ($generated@@259 $generated@@262) $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@61)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (= (type $generated@@267) ($generated@@71 $generated@@210 $generated@@4)) (= (type $generated@@268) $generated@@61)) (= (type $generated@@269) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@210) ($generated@@0 ($generated@@76 $generated@@267 $generated@@270))) ($generated@@208 $generated@@270 $generated@@268 $generated@@269))
 :pattern ( ($generated@@76 $generated@@267 $generated@@270))
))))
 :pattern ( ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269))
)))
(assert  (and (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (! (= (type ($generated@@271 $generated@@273 $generated@@274)) $generated@@61)
 :pattern ( ($generated@@271 $generated@@273 $generated@@274))
)) (forall (($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@219 (type $generated@@275))))
(let (($generated@@277 ($generated@@218 (type $generated@@275))))
(= (type ($generated@@272 $generated@@275)) ($generated@@71 $generated@@277 $generated@@276))))
 :pattern ( ($generated@@272 $generated@@275))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (= (type $generated@@278) ($generated@@217 $generated@@210 $generated@@210)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@278 ($generated@@271 $generated@@279 $generated@@280) $generated@@281) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@210) ($generated@@0 ($generated@@76 ($generated@@215 $generated@@278) $generated@@282))) (and ($generated@@208 ($generated@@76 ($generated@@272 $generated@@278) $generated@@282) $generated@@280 $generated@@281) ($generated@@208 $generated@@282 $generated@@279 $generated@@281)))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@278) $generated@@282))
 :pattern ( ($generated@@76 ($generated@@215 $generated@@278) $generated@@282))
))))
 :pattern ( ($generated@@69 $generated@@278 ($generated@@271 $generated@@279 $generated@@280) $generated@@281))
)))
(assert  (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (= (type ($generated@@283 $generated@@285 $generated@@286)) $generated@@61)
 :pattern ( ($generated@@283 $generated@@285 $generated@@286))
)) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@237 (type $generated@@287))))
(let (($generated@@289 ($generated@@236 (type $generated@@287))))
(= (type ($generated@@284 $generated@@287)) ($generated@@71 $generated@@289 $generated@@288))))
 :pattern ( ($generated@@284 $generated@@287))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (= (type $generated@@290) ($generated@@235 $generated@@210 $generated@@210)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) $generated@@61)) (= (type $generated@@293) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@210) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@290) $generated@@294))) (and ($generated@@208 ($generated@@76 ($generated@@284 $generated@@290) $generated@@294) $generated@@292 $generated@@293) ($generated@@208 $generated@@294 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@76 ($generated@@284 $generated@@290) $generated@@294))
 :pattern ( ($generated@@76 ($generated@@233 $generated@@290) $generated@@294))
))))
 :pattern ( ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@71 $generated@@296 $generated@@4))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@237 (type $generated@@297))))
(let (($generated@@299 ($generated@@236 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@235 $generated@@299 $generated@@298)) (= (= $generated@@297 ($generated@@234 $generated@@299 $generated@@298)) (= ($generated@@233 $generated@@297) ($generated@@295 $generated@@299))))))
 :pattern ( ($generated@@233 $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@203 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@202 $generated@@301)) (<= 0 ($generated@@201 $generated@@300))))
 :pattern ( ($generated@@201 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@61)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@61) (= (type $generated@@305) $generated@@61)) (= ($generated@@302 ($generated@@271 $generated@@304 $generated@@305)) $generated@@304))
 :pattern ( ($generated@@271 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@61) (= (type $generated@@309) $generated@@61)) (= ($generated@@306 ($generated@@271 $generated@@308 $generated@@309)) $generated@@309))
 :pattern ( ($generated@@271 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@61) (= (type $generated@@311) $generated@@61)) (= ($generated@@67 ($generated@@271 $generated@@310 $generated@@311)) $generated@@58))
 :pattern ( ($generated@@271 $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@61)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@61) (= (type $generated@@315) $generated@@61)) (= ($generated@@312 ($generated@@283 $generated@@314 $generated@@315)) $generated@@314))
 :pattern ( ($generated@@283 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@61) (= (type $generated@@319) $generated@@61)) (= ($generated@@316 ($generated@@283 $generated@@318 $generated@@319)) $generated@@319))
 :pattern ( ($generated@@283 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@61) (= (type $generated@@321) $generated@@61)) (= ($generated@@67 ($generated@@283 $generated@@320 $generated@@321)) $generated@@59))
 :pattern ( ($generated@@283 $generated@@320 $generated@@321))
)))
(assert  (and (forall (($generated@@324 T@U) ) (! (= (type ($generated@@322 $generated@@324)) $generated@@131)
 :pattern ( ($generated@@322 $generated@@324))
)) (= (type $generated@@323) $generated@@131)))
(assert (forall (($generated@@325 T@U) ($generated@@326 Int) ) (!  (=> (= (type $generated@@325) $generated@@131) (= ($generated@@128 $generated@@325 $generated@@326) ($generated@@128 $generated@@323 $generated@@326)))
 :pattern ( ($generated@@128 ($generated@@322 $generated@@325) $generated@@326))
)))
(assert  (and (forall (($generated@@329 T@U) ) (! (= (type ($generated@@327 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@329))
)) (forall (($generated@@330 T@U) ($generated@@331 Int) ) (! (let (($generated@@332 ($generated@@203 (type $generated@@330))))
(= (type ($generated@@328 $generated@@330 $generated@@331)) $generated@@332))
 :pattern ( ($generated@@328 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@202 $generated@@210)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@327 $generated@@334) $generated@@335) (forall (($generated@@336 Int) ) (!  (=> (and (<= 0 $generated@@336) (< $generated@@336 ($generated@@201 $generated@@333))) ($generated@@208 ($generated@@328 $generated@@333 $generated@@336) $generated@@334 $generated@@335))
 :pattern ( ($generated@@328 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@327 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@338 Int) ) (! (= ($generated@@337 ($generated@@70 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@70 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@61) (= ($generated@@339 ($generated@@259 $generated@@341)) $generated@@341))
 :pattern ( ($generated@@259 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@67 ($generated@@259 $generated@@342)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@343 ($generated@@265 $generated@@345)) $generated@@345))
 :pattern ( ($generated@@265 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@67 ($generated@@265 $generated@@346)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@346))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) $generated@@61)
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@61) (= ($generated@@348 ($generated@@347 $generated@@351)) $generated@@351))
 :pattern ( ($generated@@347 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@67 ($generated@@347 $generated@@352)) $generated@@56))
 :pattern ( ($generated@@347 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (= (type ($generated@@353 $generated@@354)) $generated@@61)
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@61) (= ($generated@@353 ($generated@@327 $generated@@355)) $generated@@355))
 :pattern ( ($generated@@327 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@67 ($generated@@327 $generated@@356)) $generated@@57))
 :pattern ( ($generated@@327 $generated@@356))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated@@357 $generated@@361 ($generated@@209 $generated@@360)) $generated@@360))
 :pattern ( ($generated@@209 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 Int) ) (!  (=> (= (type $generated@@362) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@362) $generated@@363) ($generated@@128 $generated@@362 $generated@@363)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
 (not ($generated@@0 ($generated@@76 ($generated@@295 $generated@@365) $generated@@364))))
 :pattern ( (let (($generated@@365 (type $generated@@364)))
($generated@@76 ($generated@@295 $generated@@365) $generated@@364)))
)))
(assert (forall (($generated@@366 Int) ($generated@@367 Int) ) (! (= ($generated@@133 $generated@@366 $generated@@367) (* $generated@@366 $generated@@367))
 :pattern ( ($generated@@133 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@71 $generated@@210 $generated@@2)) (= (type $generated@@369) $generated@@61)) (= (type $generated@@370) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@368 ($generated@@347 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@210) (< 0 ($generated ($generated@@76 $generated@@368 $generated@@371)))) ($generated@@208 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@76 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@69 $generated@@368 ($generated@@347 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 Int) ) (! (= ($generated@@209 ($generated@@8 ($generated@@130 $generated@@372))) ($generated@@194 ($generated@@209 ($generated@@8 $generated@@372))))
 :pattern ( ($generated@@209 ($generated@@8 ($generated@@130 $generated@@372))))
)))
(assert (forall (($generated@@373 T@U) ) (! (= ($generated@@209 ($generated@@194 $generated@@373)) ($generated@@194 ($generated@@209 $generated@@373)))
 :pattern ( ($generated@@209 ($generated@@194 $generated@@373)))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@203 (type $generated@@374))))
 (=> (and (= (type $generated@@374) ($generated@@202 $generated@@375)) (= ($generated@@201 $generated@@374) 0)) (= $generated@@374 ($generated@@200 $generated@@375))))
 :pattern ( ($generated@@201 $generated@@374))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@376 T@U) ($generated@@377 Int) ) (!  (=> (and (= (type $generated@@376) $generated@@131) (or ($generated@@132 $generated@@377) (not (= 0 $generated@@127)))) (= ($generated@@128 ($generated@@129 $generated@@376) $generated@@377) (ite (< $generated@@377 0) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@377) $generated@@377)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@376) $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@379) $generated@@2)) ($generated@@69 $generated@@379 $generated@@46 $generated@@378))
 :pattern ( ($generated@@69 $generated@@379 $generated@@46 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@381) $generated@@3)) ($generated@@69 $generated@@381 $generated@@47 $generated@@380))
 :pattern ( ($generated@@69 $generated@@381 $generated@@47 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@4)) ($generated@@69 $generated@@383 $generated@@44 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@44 $generated@@382))
)))
(assert (= ($generated@@1 $generated@@384) 18))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@386) $generated@@384)) ($generated@@69 $generated@@386 $generated@@45 $generated@@385))
 :pattern ( ($generated@@69 $generated@@386 $generated@@45 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@388) $generated@@210)) ($generated@@69 $generated@@388 $generated@@48 $generated@@387))
 :pattern ( ($generated@@69 $generated@@388 $generated@@48 $generated@@387))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () T@U)
(declare-fun $generated@@392 () T@U)
(declare-fun $generated@@393 () T@U)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 () Int)
(declare-fun $generated@@396 () Int)
(declare-fun $generated@@397 (T@U) Bool)
(declare-fun $generated@@398 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@389) $generated@@131) (= (type $generated@@390) $generated@@131)) (= (type $generated@@391) ($generated@@139 $generated@@72 $generated@@4))) (= (type $generated@@392) $generated@@72)) (= (type $generated@@393) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@399  (=> (and (= ($generated@@322 $generated@@389) $generated@@389) (= ($generated@@322 $generated@@390) $generated@@390)) (=> (and (and (= $generated@@391 ($generated@@138 $generated@@392 $generated@@393 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@394) $generated@@46 $generated@@393)) (and ($generated@@132 $generated@@394) ($generated@@132 $generated@@394))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@128 $generated@@390 $generated@@394) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@394))) (=> (and (and (= ($generated@@128 $generated@@389 $generated@@394) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@394)) ($generated@@69 ($generated@@8 $generated@@395) $generated@@46 $generated@@393)) (and ($generated@@132 $generated@@395) ($generated@@132 $generated@@395))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@128 $generated@@390 $generated@@395) $generated@@395)) (=> (and (= ($generated@@128 $generated@@389 $generated@@395) $generated@@395) (= $generated@@396 ($generated@@130 (- 0 1)))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@396) $generated@@46 $generated@@393) ($generated@@132 ($generated@@130 (- 0 1)))) (and ($generated@@132 ($generated@@130 (- 0 1))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@130 ($generated@@128 $generated@@390 ($generated@@130 (- 0 1)))) ($generated@@130 1)))))))))))
(let (($generated@@400  (=> (and ($generated@@397 $generated@@393) ($generated@@398 $generated@@393)) (=> (and (and (= 1 $generated@@127) (> $generated@@395 5)) (and (< $generated@@394 0) (= (ControlFlow 0 5) 2))) $generated@@399))))
$generated@@400)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int) Int)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (Int) Bool)
(declare-fun $generated@@140 (T@U Int) Int)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@T) T@U)
(declare-fun $generated@@440 () T@T)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 () T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@494 (T@U Int) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@601 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@134 $generated@@141)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@141))
))) (forall (($generated@@142 T@U) ) (! (let (($generated@@143 (type $generated@@142)))
(= (type ($generated@@138 $generated@@142)) $generated@@143))
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@144 T@U) ($generated@@145 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@145)) (not (= 0 $generated@@132)))) (and (=> (not ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@145 0))))) ($generated@@139 ($generated@@135 (- $generated@@145 1)))) (= ($generated@@133 ($generated@@134 $generated@@144) ($generated@@135 $generated@@145)) (ite (< $generated@@145 0) 0 (+ 1 ($generated@@140 ($generated@@134 $generated@@144) ($generated@@135 (- $generated@@145 1))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@144) ($generated@@135 $generated@@145)))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@146 T@U) ($generated@@147 Int) ) (!  (=> (and (= (type $generated@@146) $generated@@136) (or ($generated@@139 ($generated@@135 $generated@@147)) (not (= 0 $generated@@132)))) (and (=> (not ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@147 0))))) ($generated@@137 ($generated@@135 (- $generated@@147 1)))) (= ($generated@@140 ($generated@@134 $generated@@146) ($generated@@135 $generated@@147)) (ite (< $generated@@147 0) 0 (+ 1 ($generated@@133 ($generated@@134 $generated@@146) ($generated@@135 (- $generated@@147 1))))))))
 :weight 3
 :pattern ( ($generated@@140 ($generated@@134 $generated@@146) ($generated@@135 $generated@@147)))
))))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@75 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@153 $generated@@154)) $generated@@64)
 :pattern ( ($generated@@151 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@64) (= (type $generated@@156) $generated@@64)) (= (type $generated@@157) $generated@@152)) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156))) ($generated@@150 $generated@@157))
 :pattern ( ($generated@@150 $generated@@157) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156)))
)))
(assert  (and (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@162))
))) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@161)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@152) (= (type $generated@@165) $generated@@152)) true) (= ($generated@@158 $generated@@164 $generated@@165)  (and (= ($generated@@159 $generated@@164) ($generated@@159 $generated@@165)) (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)))))
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@64)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@76 $generated@@161 $generated@@2)) (= (type $generated@@170) $generated@@64)) ($generated@@148 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@148 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 17)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@77 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@67 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@77) (= (type $generated@@221) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@222) ($generated@@66 $generated@@4))) (= (type $generated@@224) $generated@@77)) (= (type $generated@@225) ($generated@@66 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@173 $generated@@77 $generated@@4))
 :pattern ( ($generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@67 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@77) (= (type $generated@@233) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@234) ($generated@@66 $generated@@4))) (= (type $generated@@236) $generated@@77)) (= (type $generated@@237) ($generated@@66 $generated@@238))) (= ($generated@@0 ($generated@@171 ($generated@@227 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@171 ($generated@@227 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@152)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@161)) (= (type $generated@@246) $generated@@161)) (= ($generated@@148 ($generated@@239 $generated@@245 $generated@@246) ($generated@@151 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@148 ($generated@@239 $generated@@245 $generated@@246) ($generated@@151 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@152) (= (type $generated@@248) $generated@@152)) (= ($generated@@158 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@158 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@76 $generated@@161 $generated@@4)) (= (type $generated@@252) $generated@@64)) (= ($generated@@148 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@161) ($generated@@0 ($generated@@81 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@81 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@148 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@76 $generated@@161 $generated@@4)) (= (type $generated@@257) $generated@@64)) (= ($generated@@148 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@161) ($generated@@0 ($generated@@81 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@81 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@148 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@135 $generated@@259) $generated@@259)
 :pattern ( ($generated@@135 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@138 $generated@@260) $generated@@260)
 :pattern ( ($generated@@138 $generated@@260))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@261 T@U) ($generated@@262 Int) ) (!  (=> (and (= (type $generated@@261) $generated@@136) (or ($generated@@137 $generated@@262) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@133 $generated@@261 $generated@@262))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@263 T@U) ($generated@@264 Int) ) (!  (=> (and (= (type $generated@@263) $generated@@136) (or ($generated@@139 $generated@@264) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@140 $generated@@263 $generated@@264))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@64) (= (type $generated@@268) $generated@@64)) (= (type $generated@@269) $generated@@161)) (= (type $generated@@270) $generated@@161)) (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@265 $generated@@271)) (= ($generated@@74 ($generated@@239 $generated@@269 $generated@@270) ($generated@@151 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@74 ($generated@@239 $generated@@269 $generated@@270) ($generated@@151 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@152) (= ($generated@@150 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@150 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@152) ($generated@@150 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@161) (= (type $generated@@277) $generated@@161)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@150 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 18)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@161)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@64) (= (type $generated@@290) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@74 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@76 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@79 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@76 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@81 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@76 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 20)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@76 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@79 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@76 $generated@@334 $generated@@2)) (= ($generated@@167 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@81 $generated@@333 $generated@@335))) (<= ($generated ($generated@@81 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@167 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@301 (type $generated@@336))))
(let (($generated@@338 ($generated@@300 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@299 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@298 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@297 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@301 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@301 (type $generated@@343))))
(let (($generated@@345 ($generated@@300 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@299 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@298 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@319 (type $generated@@347))))
(let (($generated@@349 ($generated@@318 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@317 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@316 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@315 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@319 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@76 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@319 (type $generated@@354))))
(let (($generated@@356 ($generated@@318 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@317 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@316 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@76 $generated@@161 $generated@@2)) (= (type $generated@@359) $generated@@64)) (= ($generated@@148 $generated@@358 ($generated@@166 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@161) (< 0 ($generated ($generated@@81 $generated@@358 $generated@@360)))) ($generated@@240 $generated@@360 $generated@@359))
 :pattern ( ($generated@@81 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@148 $generated@@358 ($generated@@166 $generated@@359)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@76 $generated@@161 $generated@@4)) (= (type $generated@@362) $generated@@64)) (= (type $generated@@363) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@361 ($generated@@249 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@161) ($generated@@0 ($generated@@81 $generated@@361 $generated@@364))) ($generated@@266 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@81 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@74 $generated@@361 ($generated@@249 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@76 $generated@@161 $generated@@4)) (= (type $generated@@366) $generated@@64)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@365 ($generated@@254 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@161) ($generated@@0 ($generated@@81 $generated@@365 $generated@@368))) ($generated@@266 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@81 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@74 $generated@@365 ($generated@@254 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@81 ($generated@@292 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@81 ($generated@@292 $generated@@370) $generated@@369)))
)))
(assert  (and (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@371 $generated@@374)) ($generated@@76 $generated@@161 $generated@@4))
 :pattern ( ($generated@@371 $generated@@374))
)) (forall (($generated@@375 T@T) ($generated@@376 T@U) ) (! (= (type ($generated@@372 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@372 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@301 (type $generated@@377))))
(let (($generated@@379 ($generated@@300 (type $generated@@377))))
(= (type ($generated@@373 $generated@@377)) ($generated@@76 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@373 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@299 $generated@@161 $generated@@161)) (= (type $generated@@381) $generated@@161)) (= ($generated@@0 ($generated@@81 ($generated@@371 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@380) ($generated@@159 ($generated@@372 $generated@@152 $generated@@381)))) (= ($generated@@81 ($generated@@373 $generated@@380) ($generated@@159 ($generated@@372 $generated@@152 $generated@@381))) ($generated@@160 ($generated@@372 $generated@@152 $generated@@381))))))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@76 $generated@@161 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@319 (type $generated@@385))))
(let (($generated@@387 ($generated@@318 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@76 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@317 $generated@@161 $generated@@161)) (= (type $generated@@389) $generated@@161)) (= ($generated@@0 ($generated@@81 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@388) ($generated@@159 ($generated@@372 $generated@@152 $generated@@389)))) (= ($generated@@81 ($generated@@383 $generated@@388) ($generated@@159 ($generated@@372 $generated@@152 $generated@@389))) ($generated@@160 ($generated@@372 $generated@@152 $generated@@389))))))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@300 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@299 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@81 ($generated@@373 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@318 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@317 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@81 ($generated@@351 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@81 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@64)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@299 $generated@@161 $generated@@161)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@161) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@403) $generated@@407))) (and ($generated@@266 ($generated@@81 ($generated@@373 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@266 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@64)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@317 $generated@@161 $generated@@161)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@161) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@411) $generated@@415))) (and ($generated@@266 ($generated@@81 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@266 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@T) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@76 $generated@@417 $generated@@4))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@319 (type $generated@@418))))
(let (($generated@@420 ($generated@@318 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@317 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@316 $generated@@420 $generated@@419)) (= ($generated@@315 $generated@@418) ($generated@@416 $generated@@420))))))
 :pattern ( ($generated@@315 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@319 (type $generated@@421))))
(let (($generated@@423 ($generated@@318 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@317 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@316 $generated@@423 $generated@@422)) (= ($generated@@351 $generated@@421) ($generated@@416 $generated@@422))))))
 :pattern ( ($generated@@351 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@319 (type $generated@@424))))
(let (($generated@@426 ($generated@@318 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@317 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@316 $generated@@426 $generated@@425)) (= ($generated@@382 $generated@@424) ($generated@@416 $generated@@161))))))
 :pattern ( ($generated@@382 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@301 (type $generated@@427))))
(let (($generated@@429 ($generated@@300 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@299 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@298 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@161) (= (type $generated@@431) $generated@@161)) ($generated@@0 ($generated@@81 ($generated@@371 $generated@@427) ($generated@@286 ($generated@@239 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@371 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@319 (type $generated@@432))))
(let (($generated@@434 ($generated@@318 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@317 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@316 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@161) (= (type $generated@@436) $generated@@161)) ($generated@@0 ($generated@@81 ($generated@@382 $generated@@432) ($generated@@286 ($generated@@239 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@382 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@161) ($generated@@240 $generated@@437 $generated@@46)) (and (= ($generated@@286 ($generated@@372 $generated@@2 $generated@@437)) $generated@@437) ($generated@@148 ($generated@@372 $generated@@2 $generated@@437) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@437 $generated@@46))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@161) ($generated@@240 $generated@@438 $generated@@47)) (and (= ($generated@@286 ($generated@@372 $generated@@3 $generated@@438)) $generated@@438) ($generated@@148 ($generated@@372 $generated@@3 $generated@@438) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@438 $generated@@47))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@161) ($generated@@240 $generated@@439 $generated@@44)) (and (= ($generated@@286 ($generated@@372 $generated@@4 $generated@@439)) $generated@@439) ($generated@@148 ($generated@@372 $generated@@4 $generated@@439) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@439 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@440) 21))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@161) ($generated@@240 $generated@@441 $generated@@45)) (and (= ($generated@@286 ($generated@@372 $generated@@440 $generated@@441)) $generated@@441) ($generated@@148 ($generated@@372 $generated@@440 $generated@@441) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@441 $generated@@45))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (= (type $generated@@443) $generated@@64) (= ($generated@@240 ($generated@@286 $generated@@442) $generated@@443) ($generated@@148 $generated@@442 $generated@@443)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@442) $generated@@443))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@444 T@U) ($generated@@445 Int) ) (!  (=> (and (= (type $generated@@444) $generated@@136) (or ($generated@@137 $generated@@445) (not (= 0 $generated@@132)))) (and (=> (<= 0 $generated@@445) ($generated@@139 (- $generated@@445 1))) (= ($generated@@133 ($generated@@134 $generated@@444) $generated@@445) (ite (< $generated@@445 0) 0 (+ 1 ($generated@@140 $generated@@444 (- $generated@@445 1)))))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@444) $generated@@445))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@446 T@U) ($generated@@447 Int) ) (!  (=> (and (= (type $generated@@446) $generated@@136) (or ($generated@@139 $generated@@447) (not (= 0 $generated@@132)))) (and (=> (<= 0 $generated@@447) ($generated@@137 (- $generated@@447 1))) (= ($generated@@140 ($generated@@134 $generated@@446) $generated@@447) (ite (< $generated@@447 0) 0 (+ 1 ($generated@@133 $generated@@446 (- $generated@@447 1)))))))
 :pattern ( ($generated@@140 ($generated@@134 $generated@@446) $generated@@447))
))))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@79 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@76 $generated@@449 $generated@@2)) (<= 0 ($generated@@291 $generated@@448))))
 :pattern ( ($generated@@291 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@281 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@280 $generated@@451)) (<= 0 ($generated@@279 $generated@@450))))
 :pattern ( ($generated@@279 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@400 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@400 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@400 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@400 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@72 ($generated@@400 $generated@@460 $generated@@461)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@408 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@408 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@408 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@72 ($generated@@408 $generated@@470 $generated@@471)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@161) (= (type $generated@@473) $generated@@161)) (= ($generated@@272 ($generated@@239 $generated@@472 $generated@@473)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@474 ($generated@@151 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@151 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@151 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@151 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@161) (= (type $generated@@483) $generated@@161)) (= ($generated@@159 ($generated@@239 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@239 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@161) (= (type $generated@@485) $generated@@161)) (= ($generated@@160 ($generated@@239 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@239 $generated@@484 $generated@@485))
)))
(assert  (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@488)) $generated@@136)
 :pattern ( ($generated@@486 $generated@@488))
)) (= (type $generated@@487) $generated@@136)))
(assert (forall (($generated@@489 T@U) ($generated@@490 Int) ) (!  (=> (= (type $generated@@489) $generated@@136) (= ($generated@@133 $generated@@489 $generated@@490) ($generated@@133 $generated@@487 $generated@@490)))
 :pattern ( ($generated@@133 ($generated@@486 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 Int) ) (!  (=> (= (type $generated@@491) $generated@@136) (= ($generated@@140 $generated@@491 $generated@@492) ($generated@@140 $generated@@487 $generated@@492)))
 :pattern ( ($generated@@140 ($generated@@486 $generated@@491) $generated@@492))
)))
(assert  (and (forall (($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@495))
)) (forall (($generated@@496 T@U) ($generated@@497 Int) ) (! (let (($generated@@498 ($generated@@281 (type $generated@@496))))
(= (type ($generated@@494 $generated@@496 $generated@@497)) $generated@@498))
 :pattern ( ($generated@@494 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@280 $generated@@161)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@499 ($generated@@493 $generated@@500) $generated@@501) (forall (($generated@@502 Int) ) (!  (=> (and (<= 0 $generated@@502) (< $generated@@502 ($generated@@279 $generated@@499))) ($generated@@266 ($generated@@494 $generated@@499 $generated@@502) $generated@@500 $generated@@501))
 :pattern ( ($generated@@494 $generated@@499 $generated@@502))
))))
 :pattern ( ($generated@@74 $generated@@499 ($generated@@493 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@504 Int) ) (! (= ($generated@@503 ($generated@@75 $generated@@504)) $generated@@504)
 :pattern ( ($generated@@75 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@249 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@249 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@508)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@254 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@254 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@512)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@513 ($generated@@166 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@166 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@72 ($generated@@166 $generated@@516)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@517 ($generated@@493 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@493 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@72 ($generated@@493 $generated@@520)) $generated@@57))
 :pattern ( ($generated@@493 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
(= ($generated@@372 $generated@@522 ($generated@@286 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@286 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@299 $generated@@161 $generated@@161)) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) (= ($generated@@148 $generated@@523 ($generated@@400 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@161) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@523) $generated@@526))) (and ($generated@@240 ($generated@@81 ($generated@@373 $generated@@523) $generated@@526) $generated@@525) ($generated@@240 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@523) $generated@@526))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@148 $generated@@523 ($generated@@400 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@317 $generated@@161 $generated@@161)) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) (= ($generated@@148 $generated@@527 ($generated@@408 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@161) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@527) $generated@@530))) (and ($generated@@240 ($generated@@81 ($generated@@383 $generated@@527) $generated@@530) $generated@@529) ($generated@@240 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@527) $generated@@530))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@148 $generated@@527 ($generated@@408 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@161) (= (type $generated@@534) $generated@@161)) (< ($generated@@531 $generated@@533) ($generated@@532 ($generated@@239 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@239 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@161) (= (type $generated@@536) $generated@@161)) (< ($generated@@531 $generated@@536) ($generated@@532 ($generated@@239 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@239 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 Int) ) (!  (=> (= (type $generated@@537) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@537) $generated@@538) ($generated@@133 $generated@@537 $generated@@538)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 Int) ) (!  (=> (= (type $generated@@539) $generated@@136) (= ($generated@@140 ($generated@@134 $generated@@539) $generated@@540) ($generated@@140 $generated@@539 $generated@@540)))
 :pattern ( ($generated@@140 ($generated@@134 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@161) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) $generated@@64)) ($generated@@240 $generated@@541 ($generated@@400 $generated@@542 $generated@@543))) (and (= ($generated@@286 ($generated@@372 ($generated@@299 $generated@@161 $generated@@161) $generated@@541)) $generated@@541) ($generated@@148 ($generated@@372 ($generated@@299 $generated@@161 $generated@@161) $generated@@541) ($generated@@400 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@240 $generated@@541 ($generated@@400 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@161) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) $generated@@64)) ($generated@@240 $generated@@544 ($generated@@408 $generated@@545 $generated@@546))) (and (= ($generated@@286 ($generated@@372 ($generated@@317 $generated@@161 $generated@@161) $generated@@544)) $generated@@544) ($generated@@148 ($generated@@372 ($generated@@317 $generated@@161 $generated@@161) $generated@@544) ($generated@@408 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@240 $generated@@544 ($generated@@408 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) $generated@@161)) ($generated@@240 $generated@@549 ($generated@@151 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@372 $generated@@152 $generated@@549)) $generated@@549) ($generated@@148 ($generated@@372 $generated@@152 $generated@@549) ($generated@@151 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@549 ($generated@@151 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
 (not ($generated@@0 ($generated@@81 ($generated@@416 $generated@@551) $generated@@550))))
 :pattern ( (let (($generated@@551 (type $generated@@550)))
($generated@@81 ($generated@@416 $generated@@551) $generated@@550)))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@69)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@64) (= (type $generated@@555) $generated@@64)) (and (= ($generated@@72 ($generated@@151 $generated@@554 $generated@@555)) $generated@@62) (= ($generated@@552 ($generated@@151 $generated@@554 $generated@@555)) $generated@@63)))
 :pattern ( ($generated@@151 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@152) (= ($generated@@531 ($generated@@286 $generated@@556)) ($generated@@532 $generated@@556)))
 :pattern ( ($generated@@531 ($generated@@286 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@161) ($generated@@240 $generated@@557 ($generated@@75 0))) (and (= ($generated@@286 ($generated@@372 $generated@@2 $generated@@557)) $generated@@557) ($generated@@148 ($generated@@372 ($generated@@76 $generated@@161 $generated@@4) $generated@@557) ($generated@@75 0))))
 :pattern ( ($generated@@240 $generated@@557 ($generated@@75 0)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@161) (= (type $generated@@559) $generated@@64)) ($generated@@240 $generated@@558 ($generated@@249 $generated@@559))) (and (= ($generated@@286 ($generated@@372 ($generated@@76 $generated@@161 $generated@@4) $generated@@558)) $generated@@558) ($generated@@148 ($generated@@372 ($generated@@76 $generated@@161 $generated@@4) $generated@@558) ($generated@@249 $generated@@559))))
 :pattern ( ($generated@@240 $generated@@558 ($generated@@249 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@161) (= (type $generated@@561) $generated@@64)) ($generated@@240 $generated@@560 ($generated@@254 $generated@@561))) (and (= ($generated@@286 ($generated@@372 ($generated@@76 $generated@@161 $generated@@4) $generated@@560)) $generated@@560) ($generated@@148 ($generated@@372 ($generated@@76 $generated@@161 $generated@@4) $generated@@560) ($generated@@254 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@254 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@161) (= (type $generated@@563) $generated@@64)) ($generated@@240 $generated@@562 ($generated@@166 $generated@@563))) (and (= ($generated@@286 ($generated@@372 ($generated@@76 $generated@@161 $generated@@2) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@372 ($generated@@76 $generated@@161 $generated@@2) $generated@@562) ($generated@@166 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@166 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@161) (= (type $generated@@565) $generated@@64)) ($generated@@240 $generated@@564 ($generated@@493 $generated@@565))) (and (= ($generated@@286 ($generated@@372 ($generated@@280 $generated@@161) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@372 ($generated@@280 $generated@@161) $generated@@564) ($generated@@493 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@493 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@76 $generated@@161 $generated@@2)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@566 ($generated@@166 $generated@@567) $generated@@568) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@161) (< 0 ($generated ($generated@@81 $generated@@566 $generated@@569)))) ($generated@@266 $generated@@569 $generated@@567 $generated@@568))
 :pattern ( ($generated@@81 $generated@@566 $generated@@569))
))))
 :pattern ( ($generated@@74 $generated@@566 ($generated@@166 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@152) (= (type $generated@@571) $generated@@64)) (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@572) (and ($generated@@150 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@64) ($generated@@74 $generated@@570 ($generated@@151 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@74 $generated@@570 ($generated@@151 $generated@@571 $generated@@573) $generated@@572))
))))) ($generated@@266 ($generated@@159 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@266 ($generated@@159 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@152) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@576) (and ($generated@@150 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@64) ($generated@@74 $generated@@574 ($generated@@151 $generated@@577 $generated@@575) $generated@@576))
 :pattern ( ($generated@@74 $generated@@574 ($generated@@151 $generated@@577 $generated@@575) $generated@@576))
))))) ($generated@@266 ($generated@@160 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@266 ($generated@@160 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@161) (= (type $generated@@579) $generated@@161)) (= ($generated@@239 ($generated@@138 $generated@@578) ($generated@@138 $generated@@579)) ($generated@@138 ($generated@@239 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@239 ($generated@@138 $generated@@578) ($generated@@138 $generated@@579)))
)))
(assert (forall (($generated@@580 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@135 $generated@@580))) ($generated@@138 ($generated@@286 ($generated@@8 $generated@@580))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@135 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@286 ($generated@@138 $generated@@581)) ($generated@@138 ($generated@@286 $generated@@581)))
 :pattern ( ($generated@@286 ($generated@@138 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@281 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@280 $generated@@583)) (= ($generated@@279 $generated@@582) 0)) (= $generated@@582 ($generated@@278 $generated@@583))))
 :pattern ( ($generated@@279 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@585)))
 (=> (and (and (= (type $generated@@584) ($generated@@76 $generated@@587 $generated@@2)) (= (type $generated@@586) $generated@@2)) (<= 0 ($generated $generated@@586))) (= ($generated@@291 ($generated@@82 $generated@@584 $generated@@585 $generated@@586)) (+ (- ($generated@@291 $generated@@584) ($generated ($generated@@81 $generated@@584 $generated@@585))) ($generated $generated@@586)))))
 :pattern ( ($generated@@291 ($generated@@82 $generated@@584 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@2)) ($generated@@74 $generated@@589 $generated@@46 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@3)) ($generated@@74 $generated@@591 $generated@@47 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@47 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@4)) ($generated@@74 $generated@@593 $generated@@44 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@44 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@440)) ($generated@@74 $generated@@595 $generated@@45 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@45 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@597) $generated@@161)) ($generated@@74 $generated@@597 $generated@@48 $generated@@596))
 :pattern ( ($generated@@74 $generated@@597 $generated@@48 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@280 $generated@@161)) (= (type $generated@@599) $generated@@64)) (= ($generated@@148 $generated@@598 ($generated@@493 $generated@@599)) (forall (($generated@@600 Int) ) (!  (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@279 $generated@@598))) ($generated@@240 ($generated@@494 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@494 $generated@@598 $generated@@600))
))))
 :pattern ( ($generated@@148 $generated@@598 ($generated@@493 $generated@@599)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 Int) ) (!  (=> (= (type $generated@@602) ($generated@@280 $generated@@161)) (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@279 $generated@@602))) (< ($generated@@532 ($generated@@372 $generated@@152 ($generated@@494 $generated@@602 $generated@@603))) ($generated@@601 $generated@@602))))
 :pattern ( ($generated@@532 ($generated@@372 $generated@@152 ($generated@@494 $generated@@602 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@299 $generated@@161 $generated@@161)) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) $generated@@64)) ($generated@@148 $generated@@604 ($generated@@400 $generated@@605 $generated@@606))) (and (and ($generated@@148 ($generated@@297 $generated@@604) ($generated@@249 $generated@@605)) ($generated@@148 ($generated@@340 $generated@@604) ($generated@@249 $generated@@606))) ($generated@@148 ($generated@@371 $generated@@604) ($generated@@249 ($generated@@151 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@148 $generated@@604 ($generated@@400 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@317 $generated@@161 $generated@@161)) (= (type $generated@@608) $generated@@64)) (= (type $generated@@609) $generated@@64)) ($generated@@148 $generated@@607 ($generated@@408 $generated@@608 $generated@@609))) (and (and ($generated@@148 ($generated@@315 $generated@@607) ($generated@@254 $generated@@608)) ($generated@@148 ($generated@@351 $generated@@607) ($generated@@254 $generated@@609))) ($generated@@148 ($generated@@382 $generated@@607) ($generated@@254 ($generated@@151 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@148 $generated@@607 ($generated@@408 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@2) ($generated@@148 $generated@@610 $generated@@46))
 :pattern ( ($generated@@148 $generated@@610 $generated@@46))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@3) ($generated@@148 $generated@@611 $generated@@47))
 :pattern ( ($generated@@148 $generated@@611 $generated@@47))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@4) ($generated@@148 $generated@@612 $generated@@44))
 :pattern ( ($generated@@148 $generated@@612 $generated@@44))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@440) ($generated@@148 $generated@@613 $generated@@45))
 :pattern ( ($generated@@148 $generated@@613 $generated@@45))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@161) ($generated@@148 $generated@@614 $generated@@48))
 :pattern ( ($generated@@148 $generated@@614 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@617) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@618) ($generated@@173 $generated@@77 $generated@@4))) (= (type $generated@@619) $generated@@77)) (= (type $generated@@620) ($generated@@173 $generated@@77 $generated@@4))) (= (type $generated@@621) $generated@@136)) (= (type $generated@@622) $generated@@136)) (= (type $generated@@623) $generated@@136)) (= (type $generated@@624) $generated@@136)) (= (type $generated@@625) $generated@@136)) (= (type $generated@@626) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@628  (=> (<= 0 $generated@@615) (=> (and (= $generated@@616 (- $generated@@615 1)) ($generated@@74 ($generated@@8 $generated@@616) $generated@@46 $generated@@617)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@615) (= $generated@@616 $generated@@615))) (=> (or (<= 0 $generated@@615) (= $generated@@616 $generated@@615)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@616 $generated@@615))))))))
(let (($generated@@629 true))
(let (($generated@@630  (=> (= $generated@@618 ($generated@@227 $generated@@619 $generated@@617 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@629) (=> (= (ControlFlow 0 6) 4) $generated@@628)))))
(let (($generated@@631 true))
(let (($generated@@632  (=> (= $generated@@620 ($generated@@172 $generated@@619 $generated@@617 $generated@@60 false)) (=> (and (= $generated@@621 ($generated@@134 $generated@@622)) (= $generated@@623 ($generated@@134 ($generated@@134 $generated@@622)))) (=> (and (and (= ($generated@@486 $generated@@622) $generated@@622) (= $generated@@624 ($generated@@134 $generated@@625))) (and (= $generated@@626 ($generated@@134 ($generated@@134 $generated@@625))) (= ($generated@@486 $generated@@625) $generated@@625))) (and (=> (= (ControlFlow 0 7) 1) $generated@@631) (=> (= (ControlFlow 0 7) 6) $generated@@630)))))))
(let (($generated@@633  (=> (and (and ($generated@@265 $generated@@617) ($generated@@627 $generated@@617)) (and (= 0 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@632)))
$generated@@633)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int) Int)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (Int) Bool)
(declare-fun $generated@@140 (T@U Int) Int)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@T) T@U)
(declare-fun $generated@@440 () T@T)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 () T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@494 (T@U Int) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@601 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@134 $generated@@141)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@141))
))) (forall (($generated@@142 T@U) ) (! (let (($generated@@143 (type $generated@@142)))
(= (type ($generated@@138 $generated@@142)) $generated@@143))
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@144 T@U) ($generated@@145 Int) ) (!  (=> (and (= (type $generated@@144) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@145)) (not (= 0 $generated@@132)))) (and (=> (not ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@145 0))))) ($generated@@139 ($generated@@135 (- $generated@@145 1)))) (= ($generated@@133 ($generated@@134 $generated@@144) ($generated@@135 $generated@@145)) (ite (< $generated@@145 0) 0 (+ 1 ($generated@@140 ($generated@@134 $generated@@144) ($generated@@135 (- $generated@@145 1))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@144) ($generated@@135 $generated@@145)))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@146 T@U) ($generated@@147 Int) ) (!  (=> (and (= (type $generated@@146) $generated@@136) (or ($generated@@139 ($generated@@135 $generated@@147)) (not (= 0 $generated@@132)))) (and (=> (not ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@147 0))))) ($generated@@137 ($generated@@135 (- $generated@@147 1)))) (= ($generated@@140 ($generated@@134 $generated@@146) ($generated@@135 $generated@@147)) (ite (< $generated@@147 0) 0 (+ 1 ($generated@@133 ($generated@@134 $generated@@146) ($generated@@135 (- $generated@@147 1))))))))
 :weight 3
 :pattern ( ($generated@@140 ($generated@@134 $generated@@146) ($generated@@135 $generated@@147)))
))))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@75 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@153 $generated@@154)) $generated@@64)
 :pattern ( ($generated@@151 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@64) (= (type $generated@@156) $generated@@64)) (= (type $generated@@157) $generated@@152)) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156))) ($generated@@150 $generated@@157))
 :pattern ( ($generated@@150 $generated@@157) ($generated@@148 $generated@@157 ($generated@@151 $generated@@155 $generated@@156)))
)))
(assert  (and (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@162))
))) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@161)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@152) (= (type $generated@@165) $generated@@152)) true) (= ($generated@@158 $generated@@164 $generated@@165)  (and (= ($generated@@159 $generated@@164) ($generated@@159 $generated@@165)) (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)))))
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@64)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@76 $generated@@161 $generated@@2)) (= (type $generated@@170) $generated@@64)) ($generated@@148 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@148 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 17)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@77 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@67 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@77) (= (type $generated@@221) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@222) ($generated@@66 $generated@@4))) (= (type $generated@@224) $generated@@77)) (= (type $generated@@225) ($generated@@66 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@173 $generated@@77 $generated@@4))
 :pattern ( ($generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@67 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@77) (= (type $generated@@233) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@234) ($generated@@66 $generated@@4))) (= (type $generated@@236) $generated@@77)) (= (type $generated@@237) ($generated@@66 $generated@@238))) (= ($generated@@0 ($generated@@171 ($generated@@227 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@171 ($generated@@227 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@152)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@161)) (= (type $generated@@246) $generated@@161)) (= ($generated@@148 ($generated@@239 $generated@@245 $generated@@246) ($generated@@151 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@148 ($generated@@239 $generated@@245 $generated@@246) ($generated@@151 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@152) (= (type $generated@@248) $generated@@152)) (= ($generated@@158 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@158 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@76 $generated@@161 $generated@@4)) (= (type $generated@@252) $generated@@64)) (= ($generated@@148 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@161) ($generated@@0 ($generated@@81 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@81 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@148 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@76 $generated@@161 $generated@@4)) (= (type $generated@@257) $generated@@64)) (= ($generated@@148 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@161) ($generated@@0 ($generated@@81 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@81 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@148 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@135 $generated@@259) $generated@@259)
 :pattern ( ($generated@@135 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@138 $generated@@260) $generated@@260)
 :pattern ( ($generated@@138 $generated@@260))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@261 T@U) ($generated@@262 Int) ) (!  (=> (and (= (type $generated@@261) $generated@@136) (or ($generated@@137 $generated@@262) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@133 $generated@@261 $generated@@262))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@263 T@U) ($generated@@264 Int) ) (!  (=> (and (= (type $generated@@263) $generated@@136) (or ($generated@@139 $generated@@264) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@140 $generated@@263 $generated@@264))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@64) (= (type $generated@@268) $generated@@64)) (= (type $generated@@269) $generated@@161)) (= (type $generated@@270) $generated@@161)) (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@265 $generated@@271)) (= ($generated@@74 ($generated@@239 $generated@@269 $generated@@270) ($generated@@151 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@74 ($generated@@239 $generated@@269 $generated@@270) ($generated@@151 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@152) (= ($generated@@150 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@150 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@152) ($generated@@150 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@161) (= (type $generated@@277) $generated@@161)) (= $generated@@275 ($generated@@239 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@150 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 18)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@161)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@64) (= (type $generated@@290) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@74 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@76 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@79 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@76 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@81 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@76 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 20)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@76 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@79 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@76 $generated@@334 $generated@@2)) (= ($generated@@167 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@81 $generated@@333 $generated@@335))) (<= ($generated ($generated@@81 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@167 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@301 (type $generated@@336))))
(let (($generated@@338 ($generated@@300 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@299 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@298 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@297 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@301 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@301 (type $generated@@343))))
(let (($generated@@345 ($generated@@300 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@299 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@298 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@319 (type $generated@@347))))
(let (($generated@@349 ($generated@@318 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@317 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@316 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@315 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@319 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@76 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@319 (type $generated@@354))))
(let (($generated@@356 ($generated@@318 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@317 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@316 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@76 $generated@@161 $generated@@2)) (= (type $generated@@359) $generated@@64)) (= ($generated@@148 $generated@@358 ($generated@@166 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@161) (< 0 ($generated ($generated@@81 $generated@@358 $generated@@360)))) ($generated@@240 $generated@@360 $generated@@359))
 :pattern ( ($generated@@81 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@148 $generated@@358 ($generated@@166 $generated@@359)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@76 $generated@@161 $generated@@4)) (= (type $generated@@362) $generated@@64)) (= (type $generated@@363) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@361 ($generated@@249 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@161) ($generated@@0 ($generated@@81 $generated@@361 $generated@@364))) ($generated@@266 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@81 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@74 $generated@@361 ($generated@@249 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@76 $generated@@161 $generated@@4)) (= (type $generated@@366) $generated@@64)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@365 ($generated@@254 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@161) ($generated@@0 ($generated@@81 $generated@@365 $generated@@368))) ($generated@@266 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@81 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@74 $generated@@365 ($generated@@254 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@81 ($generated@@292 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@81 ($generated@@292 $generated@@370) $generated@@369)))
)))
(assert  (and (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@371 $generated@@374)) ($generated@@76 $generated@@161 $generated@@4))
 :pattern ( ($generated@@371 $generated@@374))
)) (forall (($generated@@375 T@T) ($generated@@376 T@U) ) (! (= (type ($generated@@372 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@372 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@301 (type $generated@@377))))
(let (($generated@@379 ($generated@@300 (type $generated@@377))))
(= (type ($generated@@373 $generated@@377)) ($generated@@76 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@373 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@299 $generated@@161 $generated@@161)) (= (type $generated@@381) $generated@@161)) (= ($generated@@0 ($generated@@81 ($generated@@371 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@380) ($generated@@159 ($generated@@372 $generated@@152 $generated@@381)))) (= ($generated@@81 ($generated@@373 $generated@@380) ($generated@@159 ($generated@@372 $generated@@152 $generated@@381))) ($generated@@160 ($generated@@372 $generated@@152 $generated@@381))))))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@76 $generated@@161 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@319 (type $generated@@385))))
(let (($generated@@387 ($generated@@318 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@76 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@317 $generated@@161 $generated@@161)) (= (type $generated@@389) $generated@@161)) (= ($generated@@0 ($generated@@81 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@388) ($generated@@159 ($generated@@372 $generated@@152 $generated@@389)))) (= ($generated@@81 ($generated@@383 $generated@@388) ($generated@@159 ($generated@@372 $generated@@152 $generated@@389))) ($generated@@160 ($generated@@372 $generated@@152 $generated@@389))))))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@300 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@299 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@81 ($generated@@373 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@318 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@317 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@81 ($generated@@351 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@81 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@64)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@299 $generated@@161 $generated@@161)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@161) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@403) $generated@@407))) (and ($generated@@266 ($generated@@81 ($generated@@373 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@266 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@64)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@317 $generated@@161 $generated@@161)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@161) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@411) $generated@@415))) (and ($generated@@266 ($generated@@81 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@266 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@T) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@76 $generated@@417 $generated@@4))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@319 (type $generated@@418))))
(let (($generated@@420 ($generated@@318 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@317 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@316 $generated@@420 $generated@@419)) (= ($generated@@315 $generated@@418) ($generated@@416 $generated@@420))))))
 :pattern ( ($generated@@315 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@319 (type $generated@@421))))
(let (($generated@@423 ($generated@@318 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@317 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@316 $generated@@423 $generated@@422)) (= ($generated@@351 $generated@@421) ($generated@@416 $generated@@422))))))
 :pattern ( ($generated@@351 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@319 (type $generated@@424))))
(let (($generated@@426 ($generated@@318 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@317 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@316 $generated@@426 $generated@@425)) (= ($generated@@382 $generated@@424) ($generated@@416 $generated@@161))))))
 :pattern ( ($generated@@382 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@301 (type $generated@@427))))
(let (($generated@@429 ($generated@@300 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@299 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@298 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@161) (= (type $generated@@431) $generated@@161)) ($generated@@0 ($generated@@81 ($generated@@371 $generated@@427) ($generated@@286 ($generated@@239 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@371 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@319 (type $generated@@432))))
(let (($generated@@434 ($generated@@318 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@317 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@316 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@161) (= (type $generated@@436) $generated@@161)) ($generated@@0 ($generated@@81 ($generated@@382 $generated@@432) ($generated@@286 ($generated@@239 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@382 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@161) ($generated@@240 $generated@@437 $generated@@46)) (and (= ($generated@@286 ($generated@@372 $generated@@2 $generated@@437)) $generated@@437) ($generated@@148 ($generated@@372 $generated@@2 $generated@@437) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@437 $generated@@46))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@161) ($generated@@240 $generated@@438 $generated@@47)) (and (= ($generated@@286 ($generated@@372 $generated@@3 $generated@@438)) $generated@@438) ($generated@@148 ($generated@@372 $generated@@3 $generated@@438) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@438 $generated@@47))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@161) ($generated@@240 $generated@@439 $generated@@44)) (and (= ($generated@@286 ($generated@@372 $generated@@4 $generated@@439)) $generated@@439) ($generated@@148 ($generated@@372 $generated@@4 $generated@@439) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@439 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@440) 21))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@161) ($generated@@240 $generated@@441 $generated@@45)) (and (= ($generated@@286 ($generated@@372 $generated@@440 $generated@@441)) $generated@@441) ($generated@@148 ($generated@@372 $generated@@440 $generated@@441) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@441 $generated@@45))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (= (type $generated@@443) $generated@@64) (= ($generated@@240 ($generated@@286 $generated@@442) $generated@@443) ($generated@@148 $generated@@442 $generated@@443)))
 :pattern ( ($generated@@240 ($generated@@286 $generated@@442) $generated@@443))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@444 T@U) ($generated@@445 Int) ) (!  (=> (and (= (type $generated@@444) $generated@@136) (or ($generated@@137 $generated@@445) (not (= 0 $generated@@132)))) (and (=> (<= 0 $generated@@445) ($generated@@139 (- $generated@@445 1))) (= ($generated@@133 ($generated@@134 $generated@@444) $generated@@445) (ite (< $generated@@445 0) 0 (+ 1 ($generated@@140 $generated@@444 (- $generated@@445 1)))))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@444) $generated@@445))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@446 T@U) ($generated@@447 Int) ) (!  (=> (and (= (type $generated@@446) $generated@@136) (or ($generated@@139 $generated@@447) (not (= 0 $generated@@132)))) (and (=> (<= 0 $generated@@447) ($generated@@137 (- $generated@@447 1))) (= ($generated@@140 ($generated@@134 $generated@@446) $generated@@447) (ite (< $generated@@447 0) 0 (+ 1 ($generated@@133 $generated@@446 (- $generated@@447 1)))))))
 :pattern ( ($generated@@140 ($generated@@134 $generated@@446) $generated@@447))
))))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@79 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@76 $generated@@449 $generated@@2)) (<= 0 ($generated@@291 $generated@@448))))
 :pattern ( ($generated@@291 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@281 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@280 $generated@@451)) (<= 0 ($generated@@279 $generated@@450))))
 :pattern ( ($generated@@279 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@400 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@400 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@400 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@400 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@72 ($generated@@400 $generated@@460 $generated@@461)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@408 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@408 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@408 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@72 ($generated@@408 $generated@@470 $generated@@471)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@161) (= (type $generated@@473) $generated@@161)) (= ($generated@@272 ($generated@@239 $generated@@472 $generated@@473)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@474 ($generated@@151 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@151 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@151 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@151 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@161) (= (type $generated@@483) $generated@@161)) (= ($generated@@159 ($generated@@239 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@239 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@161) (= (type $generated@@485) $generated@@161)) (= ($generated@@160 ($generated@@239 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@239 $generated@@484 $generated@@485))
)))
(assert  (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@488)) $generated@@136)
 :pattern ( ($generated@@486 $generated@@488))
)) (= (type $generated@@487) $generated@@136)))
(assert (forall (($generated@@489 T@U) ($generated@@490 Int) ) (!  (=> (= (type $generated@@489) $generated@@136) (= ($generated@@133 $generated@@489 $generated@@490) ($generated@@133 $generated@@487 $generated@@490)))
 :pattern ( ($generated@@133 ($generated@@486 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 Int) ) (!  (=> (= (type $generated@@491) $generated@@136) (= ($generated@@140 $generated@@491 $generated@@492) ($generated@@140 $generated@@487 $generated@@492)))
 :pattern ( ($generated@@140 ($generated@@486 $generated@@491) $generated@@492))
)))
(assert  (and (forall (($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@495))
)) (forall (($generated@@496 T@U) ($generated@@497 Int) ) (! (let (($generated@@498 ($generated@@281 (type $generated@@496))))
(= (type ($generated@@494 $generated@@496 $generated@@497)) $generated@@498))
 :pattern ( ($generated@@494 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@280 $generated@@161)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@499 ($generated@@493 $generated@@500) $generated@@501) (forall (($generated@@502 Int) ) (!  (=> (and (<= 0 $generated@@502) (< $generated@@502 ($generated@@279 $generated@@499))) ($generated@@266 ($generated@@494 $generated@@499 $generated@@502) $generated@@500 $generated@@501))
 :pattern ( ($generated@@494 $generated@@499 $generated@@502))
))))
 :pattern ( ($generated@@74 $generated@@499 ($generated@@493 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@504 Int) ) (! (= ($generated@@503 ($generated@@75 $generated@@504)) $generated@@504)
 :pattern ( ($generated@@75 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@249 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@249 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@508)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@254 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@254 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@512)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@513 ($generated@@166 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@166 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@72 ($generated@@166 $generated@@516)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@517 ($generated@@493 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@493 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@72 ($generated@@493 $generated@@520)) $generated@@57))
 :pattern ( ($generated@@493 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
(= ($generated@@372 $generated@@522 ($generated@@286 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@286 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@299 $generated@@161 $generated@@161)) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) (= ($generated@@148 $generated@@523 ($generated@@400 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@161) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@523) $generated@@526))) (and ($generated@@240 ($generated@@81 ($generated@@373 $generated@@523) $generated@@526) $generated@@525) ($generated@@240 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@523) $generated@@526))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@148 $generated@@523 ($generated@@400 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@317 $generated@@161 $generated@@161)) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) (= ($generated@@148 $generated@@527 ($generated@@408 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@161) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@527) $generated@@530))) (and ($generated@@240 ($generated@@81 ($generated@@383 $generated@@527) $generated@@530) $generated@@529) ($generated@@240 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@527) $generated@@530))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@148 $generated@@527 ($generated@@408 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@161) (= (type $generated@@534) $generated@@161)) (< ($generated@@531 $generated@@533) ($generated@@532 ($generated@@239 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@239 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@161) (= (type $generated@@536) $generated@@161)) (< ($generated@@531 $generated@@536) ($generated@@532 ($generated@@239 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@239 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 Int) ) (!  (=> (= (type $generated@@537) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@537) $generated@@538) ($generated@@133 $generated@@537 $generated@@538)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 Int) ) (!  (=> (= (type $generated@@539) $generated@@136) (= ($generated@@140 ($generated@@134 $generated@@539) $generated@@540) ($generated@@140 $generated@@539 $generated@@540)))
 :pattern ( ($generated@@140 ($generated@@134 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@161) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) $generated@@64)) ($generated@@240 $generated@@541 ($generated@@400 $generated@@542 $generated@@543))) (and (= ($generated@@286 ($generated@@372 ($generated@@299 $generated@@161 $generated@@161) $generated@@541)) $generated@@541) ($generated@@148 ($generated@@372 ($generated@@299 $generated@@161 $generated@@161) $generated@@541) ($generated@@400 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@240 $generated@@541 ($generated@@400 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@161) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) $generated@@64)) ($generated@@240 $generated@@544 ($generated@@408 $generated@@545 $generated@@546))) (and (= ($generated@@286 ($generated@@372 ($generated@@317 $generated@@161 $generated@@161) $generated@@544)) $generated@@544) ($generated@@148 ($generated@@372 ($generated@@317 $generated@@161 $generated@@161) $generated@@544) ($generated@@408 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@240 $generated@@544 ($generated@@408 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) $generated@@161)) ($generated@@240 $generated@@549 ($generated@@151 $generated@@547 $generated@@548))) (and (= ($generated@@286 ($generated@@372 $generated@@152 $generated@@549)) $generated@@549) ($generated@@148 ($generated@@372 $generated@@152 $generated@@549) ($generated@@151 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@549 ($generated@@151 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
 (not ($generated@@0 ($generated@@81 ($generated@@416 $generated@@551) $generated@@550))))
 :pattern ( (let (($generated@@551 (type $generated@@550)))
($generated@@81 ($generated@@416 $generated@@551) $generated@@550)))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@69)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@64) (= (type $generated@@555) $generated@@64)) (and (= ($generated@@72 ($generated@@151 $generated@@554 $generated@@555)) $generated@@62) (= ($generated@@552 ($generated@@151 $generated@@554 $generated@@555)) $generated@@63)))
 :pattern ( ($generated@@151 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@152) (= ($generated@@531 ($generated@@286 $generated@@556)) ($generated@@532 $generated@@556)))
 :pattern ( ($generated@@531 ($generated@@286 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@161) ($generated@@240 $generated@@557 ($generated@@75 0))) (and (= ($generated@@286 ($generated@@372 $generated@@2 $generated@@557)) $generated@@557) ($generated@@148 ($generated@@372 ($generated@@76 $generated@@161 $generated@@4) $generated@@557) ($generated@@75 0))))
 :pattern ( ($generated@@240 $generated@@557 ($generated@@75 0)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@161) (= (type $generated@@559) $generated@@64)) ($generated@@240 $generated@@558 ($generated@@249 $generated@@559))) (and (= ($generated@@286 ($generated@@372 ($generated@@76 $generated@@161 $generated@@4) $generated@@558)) $generated@@558) ($generated@@148 ($generated@@372 ($generated@@76 $generated@@161 $generated@@4) $generated@@558) ($generated@@249 $generated@@559))))
 :pattern ( ($generated@@240 $generated@@558 ($generated@@249 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@161) (= (type $generated@@561) $generated@@64)) ($generated@@240 $generated@@560 ($generated@@254 $generated@@561))) (and (= ($generated@@286 ($generated@@372 ($generated@@76 $generated@@161 $generated@@4) $generated@@560)) $generated@@560) ($generated@@148 ($generated@@372 ($generated@@76 $generated@@161 $generated@@4) $generated@@560) ($generated@@254 $generated@@561))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@254 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@161) (= (type $generated@@563) $generated@@64)) ($generated@@240 $generated@@562 ($generated@@166 $generated@@563))) (and (= ($generated@@286 ($generated@@372 ($generated@@76 $generated@@161 $generated@@2) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@372 ($generated@@76 $generated@@161 $generated@@2) $generated@@562) ($generated@@166 $generated@@563))))
 :pattern ( ($generated@@240 $generated@@562 ($generated@@166 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@161) (= (type $generated@@565) $generated@@64)) ($generated@@240 $generated@@564 ($generated@@493 $generated@@565))) (and (= ($generated@@286 ($generated@@372 ($generated@@280 $generated@@161) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@372 ($generated@@280 $generated@@161) $generated@@564) ($generated@@493 $generated@@565))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@493 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@76 $generated@@161 $generated@@2)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@566 ($generated@@166 $generated@@567) $generated@@568) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@161) (< 0 ($generated ($generated@@81 $generated@@566 $generated@@569)))) ($generated@@266 $generated@@569 $generated@@567 $generated@@568))
 :pattern ( ($generated@@81 $generated@@566 $generated@@569))
))))
 :pattern ( ($generated@@74 $generated@@566 ($generated@@166 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@152) (= (type $generated@@571) $generated@@64)) (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@572) (and ($generated@@150 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@64) ($generated@@74 $generated@@570 ($generated@@151 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@74 $generated@@570 ($generated@@151 $generated@@571 $generated@@573) $generated@@572))
))))) ($generated@@266 ($generated@@159 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@266 ($generated@@159 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@152) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@576) (and ($generated@@150 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@64) ($generated@@74 $generated@@574 ($generated@@151 $generated@@577 $generated@@575) $generated@@576))
 :pattern ( ($generated@@74 $generated@@574 ($generated@@151 $generated@@577 $generated@@575) $generated@@576))
))))) ($generated@@266 ($generated@@160 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@266 ($generated@@160 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@161) (= (type $generated@@579) $generated@@161)) (= ($generated@@239 ($generated@@138 $generated@@578) ($generated@@138 $generated@@579)) ($generated@@138 ($generated@@239 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@239 ($generated@@138 $generated@@578) ($generated@@138 $generated@@579)))
)))
(assert (forall (($generated@@580 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@135 $generated@@580))) ($generated@@138 ($generated@@286 ($generated@@8 $generated@@580))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@135 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@286 ($generated@@138 $generated@@581)) ($generated@@138 ($generated@@286 $generated@@581)))
 :pattern ( ($generated@@286 ($generated@@138 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@281 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@280 $generated@@583)) (= ($generated@@279 $generated@@582) 0)) (= $generated@@582 ($generated@@278 $generated@@583))))
 :pattern ( ($generated@@279 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@585)))
 (=> (and (and (= (type $generated@@584) ($generated@@76 $generated@@587 $generated@@2)) (= (type $generated@@586) $generated@@2)) (<= 0 ($generated $generated@@586))) (= ($generated@@291 ($generated@@82 $generated@@584 $generated@@585 $generated@@586)) (+ (- ($generated@@291 $generated@@584) ($generated ($generated@@81 $generated@@584 $generated@@585))) ($generated $generated@@586)))))
 :pattern ( ($generated@@291 ($generated@@82 $generated@@584 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@2)) ($generated@@74 $generated@@589 $generated@@46 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@3)) ($generated@@74 $generated@@591 $generated@@47 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@47 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@4)) ($generated@@74 $generated@@593 $generated@@44 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@44 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@440)) ($generated@@74 $generated@@595 $generated@@45 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@45 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@597) $generated@@161)) ($generated@@74 $generated@@597 $generated@@48 $generated@@596))
 :pattern ( ($generated@@74 $generated@@597 $generated@@48 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@280 $generated@@161)) (= (type $generated@@599) $generated@@64)) (= ($generated@@148 $generated@@598 ($generated@@493 $generated@@599)) (forall (($generated@@600 Int) ) (!  (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@279 $generated@@598))) ($generated@@240 ($generated@@494 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@494 $generated@@598 $generated@@600))
))))
 :pattern ( ($generated@@148 $generated@@598 ($generated@@493 $generated@@599)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 Int) ) (!  (=> (= (type $generated@@602) ($generated@@280 $generated@@161)) (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@279 $generated@@602))) (< ($generated@@532 ($generated@@372 $generated@@152 ($generated@@494 $generated@@602 $generated@@603))) ($generated@@601 $generated@@602))))
 :pattern ( ($generated@@532 ($generated@@372 $generated@@152 ($generated@@494 $generated@@602 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@299 $generated@@161 $generated@@161)) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) $generated@@64)) ($generated@@148 $generated@@604 ($generated@@400 $generated@@605 $generated@@606))) (and (and ($generated@@148 ($generated@@297 $generated@@604) ($generated@@249 $generated@@605)) ($generated@@148 ($generated@@340 $generated@@604) ($generated@@249 $generated@@606))) ($generated@@148 ($generated@@371 $generated@@604) ($generated@@249 ($generated@@151 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@148 $generated@@604 ($generated@@400 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@317 $generated@@161 $generated@@161)) (= (type $generated@@608) $generated@@64)) (= (type $generated@@609) $generated@@64)) ($generated@@148 $generated@@607 ($generated@@408 $generated@@608 $generated@@609))) (and (and ($generated@@148 ($generated@@315 $generated@@607) ($generated@@254 $generated@@608)) ($generated@@148 ($generated@@351 $generated@@607) ($generated@@254 $generated@@609))) ($generated@@148 ($generated@@382 $generated@@607) ($generated@@254 ($generated@@151 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@148 $generated@@607 ($generated@@408 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@2) ($generated@@148 $generated@@610 $generated@@46))
 :pattern ( ($generated@@148 $generated@@610 $generated@@46))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@3) ($generated@@148 $generated@@611 $generated@@47))
 :pattern ( ($generated@@148 $generated@@611 $generated@@47))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@4) ($generated@@148 $generated@@612 $generated@@44))
 :pattern ( ($generated@@148 $generated@@612 $generated@@44))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@440) ($generated@@148 $generated@@613 $generated@@45))
 :pattern ( ($generated@@148 $generated@@613 $generated@@45))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@161) ($generated@@148 $generated@@614 $generated@@48))
 :pattern ( ($generated@@148 $generated@@614 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@617) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@618) ($generated@@173 $generated@@77 $generated@@4))) (= (type $generated@@619) $generated@@77)) (= (type $generated@@620) ($generated@@173 $generated@@77 $generated@@4))) (= (type $generated@@621) $generated@@136)) (= (type $generated@@622) $generated@@136)) (= (type $generated@@623) $generated@@136)) (= (type $generated@@624) $generated@@136)) (= (type $generated@@625) $generated@@136)) (= (type $generated@@626) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@628  (=> (<= 0 $generated@@615) (=> (and (= $generated@@616 (- $generated@@615 1)) ($generated@@74 ($generated@@8 $generated@@616) $generated@@46 $generated@@617)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@615) (= $generated@@616 $generated@@615))) (=> (or (<= 0 $generated@@615) (= $generated@@616 $generated@@615)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@616 $generated@@615))))))))
(let (($generated@@629 true))
(let (($generated@@630  (=> (= $generated@@618 ($generated@@227 $generated@@619 $generated@@617 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@629) (=> (= (ControlFlow 0 6) 4) $generated@@628)))))
(let (($generated@@631 true))
(let (($generated@@632  (=> (= $generated@@620 ($generated@@172 $generated@@619 $generated@@617 $generated@@60 false)) (=> (and (= $generated@@621 ($generated@@134 $generated@@622)) (= $generated@@623 ($generated@@134 ($generated@@134 $generated@@622)))) (=> (and (and (= ($generated@@486 $generated@@622) $generated@@622) (= $generated@@624 ($generated@@134 $generated@@625))) (and (= $generated@@626 ($generated@@134 ($generated@@134 $generated@@625))) (= ($generated@@486 $generated@@625) $generated@@625))) (and (=> (= (ControlFlow 0 7) 1) $generated@@631) (=> (= (ControlFlow 0 7) 6) $generated@@630)))))))
(let (($generated@@633  (=> (and (and ($generated@@265 $generated@@617) ($generated@@627 $generated@@617)) (and (= 0 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@632)))
$generated@@633)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (Int) Bool)
(declare-fun $generated@@135 (T@U Int) Int)
(declare-fun $generated@@143 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@205 (T@T) T@U)
(declare-fun $generated@@206 (T@U) Int)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@213 (T@U T@U T@U) Bool)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 () T@T)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@221 (T@T T@T) T@U)
(declare-fun $generated@@222 (T@T T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@T T@T) T@U)
(declare-fun $generated@@240 (T@T T@T) T@T)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@242 (T@T) T@T)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (T@U T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 () T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@U Int) T@U)
(declare-fun $generated@@348 (T@U) Int)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@393 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@129 $generated@@136)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@133 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@139 T@U) ($generated@@140 Int) ) (!  (=> (and (= (type $generated@@139) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@140)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@140 0))))) ($generated@@134 ($generated@@130 (- $generated@@140 1)))) (= ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140)) (ite (< $generated@@140 0) 0 (+ 1 ($generated@@135 ($generated@@129 $generated@@139) ($generated@@130 (- $generated@@140 1))))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@139) ($generated@@130 $generated@@140)))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@141 T@U) ($generated@@142 Int) ) (!  (=> (and (= (type $generated@@141) $generated@@131) (or ($generated@@134 ($generated@@130 $generated@@142)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@142 0))))) ($generated@@132 ($generated@@130 (- $generated@@142 1)))) (= ($generated@@135 ($generated@@129 $generated@@141) ($generated@@130 $generated@@142)) (ite (< $generated@@142 0) 0 (+ 1 ($generated@@128 ($generated@@129 $generated@@141) ($generated@@130 (- $generated@@142 1))))))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@129 $generated@@141) ($generated@@130 $generated@@142)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (= ($generated@@1 ($generated@@145 $generated@@149 $generated@@150)) 13)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@146 ($generated@@145 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@147 ($generated@@145 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@145 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@147 (type $generated@@155))))
(= (type ($generated@@143 $generated@@155 $generated@@156 $generated@@157)) $generated@@158))
 :pattern ( ($generated@@143 $generated@@155 $generated@@156 $generated@@157))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 (type $generated@@162)))
(let (($generated@@164 (type $generated@@160)))
(= (type ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@162)) ($generated@@145 $generated@@164 $generated@@163))))
 :pattern ( ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@162))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 ($generated@@147 (type $generated@@165))))
 (=> (= (type $generated@@168) $generated@@169) (= ($generated@@143 ($generated@@148 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@166 $generated@@167) $generated@@168)))
 :weight 0
))) (and (and (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@143 ($generated@@148 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@143 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@143 ($generated@@148 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@143 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or true (= ($generated@@143 ($generated@@148 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@143 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ) (! (= (type ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@145 $generated@@72 $generated@@4))
 :pattern ( ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@64 (type $generated@@197))))
 (=> (and (and (and (and (= (type $generated@@192) $generated@@72) (= (type $generated@@193) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@194) ($generated@@63 $generated@@4))) (= (type $generated@@196) $generated@@72)) (= (type $generated@@197) ($generated@@63 $generated@@198))) (= ($generated@@0 ($generated@@143 ($generated@@144 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))  (=> (and (not (= $generated@@196 $generated@@192)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@193 $generated@@196) $generated@@194))) $generated@@195))))
 :pattern ( ($generated@@143 ($generated@@144 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@199 Int) ) (! (= ($generated@@130 $generated@@199) $generated@@199)
 :pattern ( ($generated@@130 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@133 $generated@@200) $generated@@200)
 :pattern ( ($generated@@133 $generated@@200))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@201 T@U) ($generated@@202 Int) ) (!  (=> (and (= (type $generated@@201) $generated@@131) (or ($generated@@132 $generated@@202) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@201 $generated@@202))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@203 T@U) ($generated@@204 Int) ) (!  (=> (and (= (type $generated@@203) $generated@@131) (or ($generated@@134 $generated@@204) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@135 $generated@@203 $generated@@204))
))))
(assert  (and (and (forall (($generated@@209 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@209)) 14)) (forall (($generated@@210 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@207 $generated@@210))
))) (forall (($generated@@211 T@T) ) (! (= (type ($generated@@205 $generated@@211)) ($generated@@207 $generated@@211))
 :pattern ( ($generated@@205 $generated@@211))
))))
(assert (forall (($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@212)) 0)
 :pattern ( ($generated@@205 $generated@@212))
)))
(assert  (and (= ($generated@@1 $generated@@215) 15) (forall (($generated@@216 T@U) ) (! (= (type ($generated@@214 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@214 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@61) (= (type $generated@@219) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@213 ($generated@@214 $generated@@217) $generated@@218 $generated@@219) ($generated@@69 $generated@@217 $generated@@218 $generated@@219)))
 :pattern ( ($generated@@213 ($generated@@214 $generated@@217) $generated@@218 $generated@@219))
)))
(assert  (and (and (and (and (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@1 ($generated@@222 $generated@@225 $generated@@226)) 16)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@223 ($generated@@222 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@222 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@224 ($generated@@222 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@222 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@223 (type $generated@@231))))
(= (type ($generated@@220 $generated@@231)) ($generated@@71 $generated@@232 $generated@@4)))
 :pattern ( ($generated@@220 $generated@@231))
))) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= (type ($generated@@221 $generated@@233 $generated@@234)) ($generated@@222 $generated@@233 $generated@@234))
 :pattern ( ($generated@@221 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@T) ) (! (let (($generated@@237 (type $generated@@235)))
 (not ($generated@@0 ($generated@@76 ($generated@@220 ($generated@@221 $generated@@237 $generated@@236)) $generated@@235))))
 :pattern ( (let (($generated@@237 (type $generated@@235)))
($generated@@76 ($generated@@220 ($generated@@221 $generated@@237 $generated@@236)) $generated@@235)))
)))
(assert  (and (and (and (and (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (= ($generated@@1 ($generated@@240 $generated@@243 $generated@@244)) 17)) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@241 ($generated@@240 $generated@@245 $generated@@246)) $generated@@245)
 :pattern ( ($generated@@240 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (! (= ($generated@@242 ($generated@@240 $generated@@247 $generated@@248)) $generated@@248)
 :pattern ( ($generated@@240 $generated@@247 $generated@@248))
))) (forall (($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@241 (type $generated@@249))))
(= (type ($generated@@238 $generated@@249)) ($generated@@71 $generated@@250 $generated@@4)))
 :pattern ( ($generated@@238 $generated@@249))
))) (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (! (= (type ($generated@@239 $generated@@251 $generated@@252)) ($generated@@240 $generated@@251 $generated@@252))
 :pattern ( ($generated@@239 $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@T) ) (! (let (($generated@@255 (type $generated@@253)))
 (not ($generated@@0 ($generated@@76 ($generated@@238 ($generated@@239 $generated@@255 $generated@@254)) $generated@@253))))
 :pattern ( (let (($generated@@255 (type $generated@@253)))
($generated@@76 ($generated@@238 ($generated@@239 $generated@@255 $generated@@254)) $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@224 (type $generated@@256))))
(let (($generated@@258 ($generated@@223 (type $generated@@256))))
 (=> (= (type $generated@@256) ($generated@@222 $generated@@258 $generated@@257)) (or (= $generated@@256 ($generated@@221 $generated@@258 $generated@@257)) (exists (($generated@@259 T@U) ) (!  (and (= (type $generated@@259) $generated@@258) ($generated@@0 ($generated@@76 ($generated@@220 $generated@@256) $generated@@259)))
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
))))))
 :pattern ( ($generated@@220 $generated@@256))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@242 (type $generated@@260))))
(let (($generated@@262 ($generated@@241 (type $generated@@260))))
 (=> (= (type $generated@@260) ($generated@@240 $generated@@262 $generated@@261)) (or (= $generated@@260 ($generated@@239 $generated@@262 $generated@@261)) (exists (($generated@@263 T@U) ) (!  (and (= (type $generated@@263) $generated@@262) ($generated@@0 ($generated@@76 ($generated@@238 $generated@@260) $generated@@263)))
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
))))))
 :pattern ( ($generated@@238 $generated@@260))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) ($generated@@71 $generated@@215 $generated@@4)) (= (type $generated@@267) $generated@@61)) (= (type $generated@@268) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@215) ($generated@@0 ($generated@@76 $generated@@266 $generated@@269))) ($generated@@213 $generated@@269 $generated@@267 $generated@@268))
 :pattern ( ($generated@@76 $generated@@266 $generated@@269))
))))
 :pattern ( ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@61)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@272) ($generated@@71 $generated@@215 $generated@@4)) (= (type $generated@@273) $generated@@61)) (= (type $generated@@274) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@272 ($generated@@270 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@215) ($generated@@0 ($generated@@76 $generated@@272 $generated@@275))) ($generated@@213 $generated@@275 $generated@@273 $generated@@274))
 :pattern ( ($generated@@76 $generated@@272 $generated@@275))
))))
 :pattern ( ($generated@@69 $generated@@272 ($generated@@270 $generated@@273) $generated@@274))
)))
(assert  (and (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@224 (type $generated@@280))))
(let (($generated@@282 ($generated@@223 (type $generated@@280))))
(= (type ($generated@@277 $generated@@280)) ($generated@@71 $generated@@282 $generated@@281))))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) ($generated@@222 $generated@@215 $generated@@215)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@215) ($generated@@0 ($generated@@76 ($generated@@220 $generated@@283) $generated@@287))) (and ($generated@@213 ($generated@@76 ($generated@@277 $generated@@283) $generated@@287) $generated@@285 $generated@@286) ($generated@@213 $generated@@287 $generated@@284 $generated@@286)))
 :pattern ( ($generated@@76 ($generated@@277 $generated@@283) $generated@@287))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@283) $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286))
)))
(assert  (and (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (= (type ($generated@@288 $generated@@290 $generated@@291)) $generated@@61)
 :pattern ( ($generated@@288 $generated@@290 $generated@@291))
)) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@242 (type $generated@@292))))
(let (($generated@@294 ($generated@@241 (type $generated@@292))))
(= (type ($generated@@289 $generated@@292)) ($generated@@71 $generated@@294 $generated@@293))))
 :pattern ( ($generated@@289 $generated@@292))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (= (type $generated@@295) ($generated@@240 $generated@@215 $generated@@215)) (= (type $generated@@296) $generated@@61)) (= (type $generated@@297) $generated@@61)) (= (type $generated@@298) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@295 ($generated@@288 $generated@@296 $generated@@297) $generated@@298) (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@215) ($generated@@0 ($generated@@76 ($generated@@238 $generated@@295) $generated@@299))) (and ($generated@@213 ($generated@@76 ($generated@@289 $generated@@295) $generated@@299) $generated@@297 $generated@@298) ($generated@@213 $generated@@299 $generated@@296 $generated@@298)))
 :pattern ( ($generated@@76 ($generated@@289 $generated@@295) $generated@@299))
 :pattern ( ($generated@@76 ($generated@@238 $generated@@295) $generated@@299))
))))
 :pattern ( ($generated@@69 $generated@@295 ($generated@@288 $generated@@296 $generated@@297) $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@71 $generated@@301 $generated@@4))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@242 (type $generated@@302))))
(let (($generated@@304 ($generated@@241 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@240 $generated@@304 $generated@@303)) (= (= $generated@@302 ($generated@@239 $generated@@304 $generated@@303)) (= ($generated@@238 $generated@@302) ($generated@@300 $generated@@304))))))
 :pattern ( ($generated@@238 $generated@@302))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@305 T@U) ($generated@@306 Int) ) (!  (=> (and (= (type $generated@@305) $generated@@131) (or ($generated@@132 $generated@@306) (not (= 0 $generated@@127)))) (and (=> (<= 0 $generated@@306) ($generated@@134 (- $generated@@306 1))) (= ($generated@@128 ($generated@@129 $generated@@305) $generated@@306) (ite (< $generated@@306 0) 0 (+ 1 ($generated@@135 $generated@@305 (- $generated@@306 1)))))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@305) $generated@@306))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@307 T@U) ($generated@@308 Int) ) (!  (=> (and (= (type $generated@@307) $generated@@131) (or ($generated@@134 $generated@@308) (not (= 0 $generated@@127)))) (and (=> (<= 0 $generated@@308) ($generated@@132 (- $generated@@308 1))) (= ($generated@@135 ($generated@@129 $generated@@307) $generated@@308) (ite (< $generated@@308 0) 0 (+ 1 ($generated@@128 $generated@@307 (- $generated@@308 1)))))))
 :pattern ( ($generated@@135 ($generated@@129 $generated@@307) $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@208 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@207 $generated@@310)) (<= 0 ($generated@@206 $generated@@309))))
 :pattern ( ($generated@@206 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@61)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@311 ($generated@@276 $generated@@313 $generated@@314)) $generated@@313))
 :pattern ( ($generated@@276 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@61) (= (type $generated@@318) $generated@@61)) (= ($generated@@315 ($generated@@276 $generated@@317 $generated@@318)) $generated@@318))
 :pattern ( ($generated@@276 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@67 ($generated@@276 $generated@@319 $generated@@320)) $generated@@58))
 :pattern ( ($generated@@276 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@61)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@61) (= (type $generated@@324) $generated@@61)) (= ($generated@@321 ($generated@@288 $generated@@323 $generated@@324)) $generated@@323))
 :pattern ( ($generated@@288 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@61)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@61) (= (type $generated@@328) $generated@@61)) (= ($generated@@325 ($generated@@288 $generated@@327 $generated@@328)) $generated@@328))
 :pattern ( ($generated@@288 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@67 ($generated@@288 $generated@@329 $generated@@330)) $generated@@59))
 :pattern ( ($generated@@288 $generated@@329 $generated@@330))
)))
(assert  (and (forall (($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@333)) $generated@@131)
 :pattern ( ($generated@@331 $generated@@333))
)) (= (type $generated@@332) $generated@@131)))
(assert (forall (($generated@@334 T@U) ($generated@@335 Int) ) (!  (=> (= (type $generated@@334) $generated@@131) (= ($generated@@128 $generated@@334 $generated@@335) ($generated@@128 $generated@@332 $generated@@335)))
 :pattern ( ($generated@@128 ($generated@@331 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 Int) ) (!  (=> (= (type $generated@@336) $generated@@131) (= ($generated@@135 $generated@@336 $generated@@337) ($generated@@135 $generated@@332 $generated@@337)))
 :pattern ( ($generated@@135 ($generated@@331 $generated@@336) $generated@@337))
)))
(assert  (and (forall (($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@340))
)) (forall (($generated@@341 T@U) ($generated@@342 Int) ) (! (let (($generated@@343 ($generated@@208 (type $generated@@341))))
(= (type ($generated@@339 $generated@@341 $generated@@342)) $generated@@343))
 :pattern ( ($generated@@339 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@344) ($generated@@207 $generated@@215)) (= (type $generated@@345) $generated@@61)) (= (type $generated@@346) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@344 ($generated@@338 $generated@@345) $generated@@346) (forall (($generated@@347 Int) ) (!  (=> (and (<= 0 $generated@@347) (< $generated@@347 ($generated@@206 $generated@@344))) ($generated@@213 ($generated@@339 $generated@@344 $generated@@347) $generated@@345 $generated@@346))
 :pattern ( ($generated@@339 $generated@@344 $generated@@347))
))))
 :pattern ( ($generated@@69 $generated@@344 ($generated@@338 $generated@@345) $generated@@346))
)))
(assert (forall (($generated@@349 Int) ) (! (= ($generated@@348 ($generated@@70 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@70 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (= (type ($generated@@350 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@350 ($generated@@264 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@264 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@67 ($generated@@264 $generated@@353)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@270 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@270 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@270 $generated@@357)) $generated@@55))
 :pattern ( ($generated@@270 $generated@@357))
)))
(assert  (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@358 $generated@@360))
)) (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@359 ($generated@@358 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@358 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@61) (= ($generated@@67 ($generated@@358 $generated@@363)) $generated@@56))
 :pattern ( ($generated@@358 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@364 ($generated@@338 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@338 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@338 $generated@@367)) $generated@@57))
 :pattern ( ($generated@@338 $generated@@367))
)))
(assert (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@368 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
(= ($generated@@368 $generated@@372 ($generated@@214 $generated@@371)) $generated@@371))
 :pattern ( ($generated@@214 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (= (type $generated@@373) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@373) $generated@@374) ($generated@@128 $generated@@373 $generated@@374)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 Int) ) (!  (=> (= (type $generated@@375) $generated@@131) (= ($generated@@135 ($generated@@129 $generated@@375) $generated@@376) ($generated@@135 $generated@@375 $generated@@376)))
 :pattern ( ($generated@@135 ($generated@@129 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
 (not ($generated@@0 ($generated@@76 ($generated@@300 $generated@@378) $generated@@377))))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@76 ($generated@@300 $generated@@378) $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@71 $generated@@215 $generated@@2)) (= (type $generated@@380) $generated@@61)) (= (type $generated@@381) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@379 ($generated@@358 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@215) (< 0 ($generated ($generated@@76 $generated@@379 $generated@@382)))) ($generated@@213 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@76 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@69 $generated@@379 ($generated@@358 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 Int) ) (! (= ($generated@@214 ($generated@@8 ($generated@@130 $generated@@383))) ($generated@@133 ($generated@@214 ($generated@@8 $generated@@383))))
 :pattern ( ($generated@@214 ($generated@@8 ($generated@@130 $generated@@383))))
)))
(assert (forall (($generated@@384 T@U) ) (! (= ($generated@@214 ($generated@@133 $generated@@384)) ($generated@@133 ($generated@@214 $generated@@384)))
 :pattern ( ($generated@@214 ($generated@@133 $generated@@384)))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@208 (type $generated@@385))))
 (=> (and (= (type $generated@@385) ($generated@@207 $generated@@386)) (= ($generated@@206 $generated@@385) 0)) (= $generated@@385 ($generated@@205 $generated@@386))))
 :pattern ( ($generated@@206 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@388) $generated@@2)) ($generated@@69 $generated@@388 $generated@@46 $generated@@387))
 :pattern ( ($generated@@69 $generated@@388 $generated@@46 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@390) $generated@@3)) ($generated@@69 $generated@@390 $generated@@47 $generated@@389))
 :pattern ( ($generated@@69 $generated@@390 $generated@@47 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@392) $generated@@4)) ($generated@@69 $generated@@392 $generated@@44 $generated@@391))
 :pattern ( ($generated@@69 $generated@@392 $generated@@44 $generated@@391))
)))
(assert (= ($generated@@1 $generated@@393) 18))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@395) $generated@@393)) ($generated@@69 $generated@@395 $generated@@45 $generated@@394))
 :pattern ( ($generated@@69 $generated@@395 $generated@@45 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@397) $generated@@215)) ($generated@@69 $generated@@397 $generated@@48 $generated@@396))
 :pattern ( ($generated@@69 $generated@@397 $generated@@48 $generated@@396))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@398 () T@U)
(declare-fun $generated@@399 () T@U)
(declare-fun $generated@@400 () T@U)
(declare-fun $generated@@401 () T@U)
(declare-fun $generated@@402 () T@U)
(declare-fun $generated@@403 () T@U)
(declare-fun $generated@@404 () T@U)
(declare-fun $generated@@405 () T@U)
(declare-fun $generated@@406 () T@U)
(declare-fun $generated@@407 () Int)
(declare-fun $generated@@408 () Int)
(declare-fun $generated@@409 (T@U) Bool)
(declare-fun $generated@@410 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@398) $generated@@131) (= (type $generated@@399) $generated@@131)) (= (type $generated@@400) $generated@@131)) (= (type $generated@@401) $generated@@131)) (= (type $generated@@402) $generated@@131)) (= (type $generated@@403) $generated@@131)) (= (type $generated@@404) ($generated@@145 $generated@@72 $generated@@4))) (= (type $generated@@405) $generated@@72)) (= (type $generated@@406) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@411  (=> (and (and (and (and (= $generated@@398 ($generated@@129 ($generated@@129 $generated@@399))) (= $generated@@400 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@399))))) (and (= ($generated@@331 $generated@@399) $generated@@399) (= $generated@@401 ($generated@@129 ($generated@@129 $generated@@402))))) (and (and (= $generated@@403 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@402)))) (= ($generated@@331 $generated@@402) $generated@@402)) (and (= $generated@@404 ($generated@@144 $generated@@405 $generated@@406 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@407) $generated@@46 $generated@@406)))) (and (and (and ($generated@@132 $generated@@407) (= $generated@@408 (- $generated@@407 3))) (and ($generated@@69 ($generated@@8 $generated@@408) $generated@@46 $generated@@406) ($generated@@134 (- $generated@@407 3)))) (and (and ($generated@@132 $generated@@407) ($generated@@134 (- $generated@@407 3))) (= (ControlFlow 0 2) (- 0 1))))) (= ($generated@@128 $generated@@400 $generated@@407) (+ 3 ($generated@@135 $generated@@403 (- $generated@@407 3)))))))
(let (($generated@@412  (=> (and (and (and ($generated@@409 $generated@@406) ($generated@@410 $generated@@406)) (= 1 $generated@@127)) (and (> $generated@@407 3) (= (ControlFlow 0 3) 2))) $generated@@411)))
$generated@@412)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int) Int)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@134 $generated@@139)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@139))
))) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@138 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@138 $generated@@140))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@142 T@U) ($generated@@143 Int) ) (!  (=> (and (= (type $generated@@142) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@143)) (not (= 0 $generated@@132)))) (and (=> (not ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@143 0))))) ($generated@@137 ($generated@@135 (- $generated@@143 1)))) (= ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)) (ite (< $generated@@143 0) 0 (+ 1 ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 (- $generated@@143 1))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)))
))))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@75 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@64)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 17)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@67 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@77) (= (type $generated@@229) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@230) ($generated@@66 $generated@@4))) (= (type $generated@@232) $generated@@77)) (= (type $generated@@233) ($generated@@66 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@148)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@157)) (= (type $generated@@242) $generated@@157)) (= ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@148) (= (type $generated@@244) $generated@@148)) (= ($generated@@154 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@154 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) ($generated@@0 ($generated@@81 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@81 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@253) $generated@@64)) (= ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@157) ($generated@@0 ($generated@@81 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@81 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@135 $generated@@255) $generated@@255)
 :pattern ( ($generated@@135 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@138 $generated@@256) $generated@@256)
 :pattern ( ($generated@@138 $generated@@256))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@136) (or ($generated@@137 $generated@@258) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@133 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@157)) (= (type $generated@@264) $generated@@157)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@148) (= ($generated@@146 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@148) ($generated@@146 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@157) (= (type $generated@@271) $generated@@157)) (= $generated@@269 ($generated@@235 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@146 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 18)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@157)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@74 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@76 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@79 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@76 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@81 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 19)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 20)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@76 $generated@@328 $generated@@2)) (= ($generated@@163 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@81 $generated@@327 $generated@@329))) (<= ($generated ($generated@@81 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@163 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@295 (type $generated@@330))))
(let (($generated@@332 ($generated@@294 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@293 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@292 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@291 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@295 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@295 (type $generated@@337))))
(let (($generated@@339 ($generated@@294 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@293 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@292 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@313 (type $generated@@341))))
(let (($generated@@343 ($generated@@312 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@311 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@310 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@309 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@313 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@313 (type $generated@@348))))
(let (($generated@@350 ($generated@@312 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@311 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@310 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@353) $generated@@64)) (= ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@352 $generated@@354)))) ($generated@@236 $generated@@354 $generated@@353))
 :pattern ( ($generated@@81 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@157) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@260 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@157) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@260 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@81 ($generated@@286 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@81 ($generated@@286 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@295 (type $generated@@371))))
(let (($generated@@373 ($generated@@294 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@375) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375)))) (= ($generated@@81 ($generated@@367 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@313 (type $generated@@379))))
(let (($generated@@381 ($generated@@312 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@383) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383)))) (= ($generated@@81 ($generated@@377 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@294 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@293 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@312 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@311 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))) (and ($generated@@260 ($generated@@81 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@260 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@64)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))) (and ($generated@@260 ($generated@@81 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@260 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@313 (type $generated@@412))))
(let (($generated@@414 ($generated@@312 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@311 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@310 $generated@@414 $generated@@413)) (= ($generated@@309 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@309 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@313 (type $generated@@415))))
(let (($generated@@417 ($generated@@312 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@311 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@310 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@313 (type $generated@@418))))
(let (($generated@@420 ($generated@@312 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@311 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@310 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@157))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@295 (type $generated@@421))))
(let (($generated@@423 ($generated@@294 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@293 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@292 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@157) (= (type $generated@@425) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@421) ($generated@@280 ($generated@@235 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@313 (type $generated@@426))))
(let (($generated@@428 ($generated@@312 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@311 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@310 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@157) (= (type $generated@@430) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@426) ($generated@@280 ($generated@@235 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@157) ($generated@@236 $generated@@431 $generated@@46)) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@144 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@157) ($generated@@236 $generated@@432 $generated@@47)) (and (= ($generated@@280 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@144 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@157) ($generated@@236 $generated@@433 $generated@@44)) (and (= ($generated@@280 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@144 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 21))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@236 $generated@@435 $generated@@45)) (and (= ($generated@@280 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@144 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@236 ($generated@@280 $generated@@436) $generated@@437) ($generated@@144 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@236 ($generated@@280 $generated@@436) $generated@@437))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (= (type $generated@@438) $generated@@136) (or ($generated@@137 $generated@@439) (not (= 0 $generated@@132)))) (and (=> (<= 0 $generated@@439) ($generated@@137 (- $generated@@439 1))) (= ($generated@@133 ($generated@@134 $generated@@438) $generated@@439) (ite (< $generated@@439 0) 0 (+ 1 ($generated@@133 $generated@@438 (- $generated@@439 1)))))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@438) $generated@@439))
))))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@79 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@76 $generated@@441 $generated@@2)) (<= 0 ($generated@@285 $generated@@440))))
 :pattern ( ($generated@@285 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@275 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@274 $generated@@443)) (<= 0 ($generated@@273 $generated@@442))))
 :pattern ( ($generated@@273 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@394 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@394 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@394 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@402 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@72 ($generated@@402 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@157) (= (type $generated@@465) $generated@@157)) (= ($generated@@266 ($generated@@235 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@147 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@147 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@147 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@147 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) (= (type $generated@@475) $generated@@157)) (= ($generated@@155 ($generated@@235 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@235 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@157) (= (type $generated@@477) $generated@@157)) (= ($generated@@156 ($generated@@235 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@235 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@136)
 :pattern ( ($generated@@478 $generated@@480))
)) (= (type $generated@@479) $generated@@136)))
(assert (forall (($generated@@481 T@U) ($generated@@482 Int) ) (!  (=> (= (type $generated@@481) $generated@@136) (= ($generated@@133 $generated@@481 $generated@@482) ($generated@@133 $generated@@479 $generated@@482)))
 :pattern ( ($generated@@133 ($generated@@478 $generated@@481) $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@275 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@274 $generated@@157)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@273 $generated@@489))) ($generated@@260 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@245 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@245 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@250 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@250 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@250 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@162 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@162 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@162 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@366 $generated@@512 ($generated@@280 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@280 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))) (and ($generated@@236 ($generated@@81 ($generated@@367 $generated@@513) $generated@@516) $generated@@515) ($generated@@236 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))) (and ($generated@@236 ($generated@@81 ($generated@@377 $generated@@517) $generated@@520) $generated@@519) ($generated@@236 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@157) (= (type $generated@@524) $generated@@157)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@235 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@235 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@157) (= (type $generated@@526) $generated@@157)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@235 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@235 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 Int) ) (!  (=> (= (type $generated@@527) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@527) $generated@@528) ($generated@@133 $generated@@527 $generated@@528)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@157) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529)) $generated@@529) ($generated@@144 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529) ($generated@@394 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@157) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534))) (and (= ($generated@@280 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532)) $generated@@532) ($generated@@144 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532) ($generated@@402 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@157)) ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536))) (and (= ($generated@@280 ($generated@@366 $generated@@148 $generated@@537)) $generated@@537) ($generated@@144 ($generated@@366 $generated@@148 $generated@@537) ($generated@@147 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@410 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@147 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@148) (= ($generated@@521 ($generated@@280 $generated@@544)) ($generated@@522 $generated@@544)))
 :pattern ( ($generated@@521 ($generated@@280 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) ($generated@@236 $generated@@545 ($generated@@75 0))) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@545)) $generated@@545) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@236 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@157) (= (type $generated@@547) $generated@@64)) ($generated@@236 $generated@@546 ($generated@@245 $generated@@547))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546)) $generated@@546) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546) ($generated@@245 $generated@@547))))
 :pattern ( ($generated@@236 $generated@@546 ($generated@@245 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@157) (= (type $generated@@549) $generated@@64)) ($generated@@236 $generated@@548 ($generated@@250 $generated@@549))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548)) $generated@@548) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548) ($generated@@250 $generated@@549))))
 :pattern ( ($generated@@236 $generated@@548 ($generated@@250 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@157) (= (type $generated@@551) $generated@@64)) ($generated@@236 $generated@@550 ($generated@@162 $generated@@551))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550)) $generated@@550) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550) ($generated@@162 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@162 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@157) (= (type $generated@@553) $generated@@64)) ($generated@@236 $generated@@552 ($generated@@483 $generated@@553))) (and (= ($generated@@280 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552)) $generated@@552) ($generated@@144 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552) ($generated@@483 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 ($generated@@483 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@260 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@148) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@560) (and ($generated@@146 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@148) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@564) (and ($generated@@146 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@157) (= (type $generated@@567) $generated@@157)) (= ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)) ($generated@@138 ($generated@@235 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))) ($generated@@138 ($generated@@280 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@280 ($generated@@138 $generated@@569)) ($generated@@138 ($generated@@280 $generated@@569)))
 :pattern ( ($generated@@280 ($generated@@138 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@275 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@274 $generated@@571)) (= ($generated@@273 $generated@@570) 0)) (= $generated@@570 ($generated@@272 $generated@@571))))
 :pattern ( ($generated@@273 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@285 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@434)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@157)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@274 $generated@@157)) (= (type $generated@@587) $generated@@64)) (= ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@273 $generated@@586))) ($generated@@236 ($generated@@484 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@484 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@274 $generated@@157)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@273 $generated@@590))) (< ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594))) (and (and ($generated@@144 ($generated@@291 $generated@@592) ($generated@@245 $generated@@593)) ($generated@@144 ($generated@@334 $generated@@592) ($generated@@245 $generated@@594))) ($generated@@144 ($generated@@365 $generated@@592) ($generated@@245 ($generated@@147 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597))) (and (and ($generated@@144 ($generated@@309 $generated@@595) ($generated@@250 $generated@@596)) ($generated@@144 ($generated@@345 $generated@@595) ($generated@@250 $generated@@597))) ($generated@@144 ($generated@@376 $generated@@595) ($generated@@250 ($generated@@147 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@144 $generated@@598 $generated@@46))
 :pattern ( ($generated@@144 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@144 $generated@@599 $generated@@47))
 :pattern ( ($generated@@144 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@144 $generated@@600 $generated@@44))
 :pattern ( ($generated@@144 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@434) ($generated@@144 $generated@@601 $generated@@45))
 :pattern ( ($generated@@144 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@157) ($generated@@144 $generated@@602 $generated@@48))
 :pattern ( ($generated@@144 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@607) $generated@@77)) (= (type $generated@@608) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@136)) (= (type $generated@@610) $generated@@136)) (= (type $generated@@611) $generated@@136)) (= (type $generated@@612) $generated@@136)) (= (type $generated@@613) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@615  (=> (<= 0 $generated@@603) (=> (and (= $generated@@604 (- $generated@@603 1)) ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@605)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603))) (=> (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@604 $generated@@603))))))))
(let (($generated@@616 true))
(let (($generated@@617  (=> (= $generated@@606 ($generated@@223 $generated@@607 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@616) (=> (= (ControlFlow 0 6) 4) $generated@@615)))))
(let (($generated@@618 true))
(let (($generated@@619  (=> (and (= $generated@@608 ($generated@@168 $generated@@607 $generated@@605 $generated@@60 false)) (= $generated@@609 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@610))))) (=> (and (and (= $generated@@611 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@610))))) (= ($generated@@478 $generated@@610) $generated@@610)) (and (= ($generated@@478 $generated@@612) $generated@@612) (= ($generated@@478 $generated@@613) $generated@@613))) (and (=> (= (ControlFlow 0 7) 1) $generated@@618) (=> (= (ControlFlow 0 7) 6) $generated@@617))))))
(let (($generated@@620  (=> (and (and ($generated@@259 $generated@@605) ($generated@@614 $generated@@605)) (and (= 0 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@619)))
$generated@@620)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int) Int)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@134 $generated@@139)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@139))
))) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@138 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@138 $generated@@140))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@142 T@U) ($generated@@143 Int) ) (!  (=> (and (= (type $generated@@142) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@143)) (not (= 0 $generated@@132)))) (and (=> (not ($generated@@0 ($generated@@138 ($generated@@11 (> $generated@@143 0))))) ($generated@@137 ($generated@@135 (+ $generated@@143 1)))) (= ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)) (ite (> $generated@@143 0) 0 (+ 1 ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 (+ $generated@@143 1))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)))
))))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@75 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@64)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 17)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@67 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@77) (= (type $generated@@229) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@230) ($generated@@66 $generated@@4))) (= (type $generated@@232) $generated@@77)) (= (type $generated@@233) ($generated@@66 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@148)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@157)) (= (type $generated@@242) $generated@@157)) (= ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@148) (= (type $generated@@244) $generated@@148)) (= ($generated@@154 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@154 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) ($generated@@0 ($generated@@81 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@81 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@253) $generated@@64)) (= ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@157) ($generated@@0 ($generated@@81 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@81 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@135 $generated@@255) $generated@@255)
 :pattern ( ($generated@@135 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@138 $generated@@256) $generated@@256)
 :pattern ( ($generated@@138 $generated@@256))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@136) (or ($generated@@137 $generated@@258) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@133 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@157)) (= (type $generated@@264) $generated@@157)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@148) (= ($generated@@146 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@148) ($generated@@146 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@157) (= (type $generated@@271) $generated@@157)) (= $generated@@269 ($generated@@235 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@146 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 18)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@157)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@74 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@76 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@79 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@76 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@81 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 19)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 20)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@76 $generated@@328 $generated@@2)) (= ($generated@@163 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@81 $generated@@327 $generated@@329))) (<= ($generated ($generated@@81 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@163 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@295 (type $generated@@330))))
(let (($generated@@332 ($generated@@294 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@293 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@292 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@291 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@295 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@295 (type $generated@@337))))
(let (($generated@@339 ($generated@@294 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@293 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@292 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@313 (type $generated@@341))))
(let (($generated@@343 ($generated@@312 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@311 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@310 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@309 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@313 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@313 (type $generated@@348))))
(let (($generated@@350 ($generated@@312 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@311 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@310 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@353) $generated@@64)) (= ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@352 $generated@@354)))) ($generated@@236 $generated@@354 $generated@@353))
 :pattern ( ($generated@@81 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@157) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@260 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@157) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@260 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@81 ($generated@@286 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@81 ($generated@@286 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@295 (type $generated@@371))))
(let (($generated@@373 ($generated@@294 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@375) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375)))) (= ($generated@@81 ($generated@@367 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@313 (type $generated@@379))))
(let (($generated@@381 ($generated@@312 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@383) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383)))) (= ($generated@@81 ($generated@@377 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@294 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@293 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@312 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@311 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))) (and ($generated@@260 ($generated@@81 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@260 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@64)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))) (and ($generated@@260 ($generated@@81 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@260 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@313 (type $generated@@412))))
(let (($generated@@414 ($generated@@312 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@311 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@310 $generated@@414 $generated@@413)) (= ($generated@@309 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@309 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@313 (type $generated@@415))))
(let (($generated@@417 ($generated@@312 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@311 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@310 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@313 (type $generated@@418))))
(let (($generated@@420 ($generated@@312 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@311 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@310 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@157))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@295 (type $generated@@421))))
(let (($generated@@423 ($generated@@294 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@293 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@292 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@157) (= (type $generated@@425) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@421) ($generated@@280 ($generated@@235 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@313 (type $generated@@426))))
(let (($generated@@428 ($generated@@312 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@311 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@310 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@157) (= (type $generated@@430) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@426) ($generated@@280 ($generated@@235 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@157) ($generated@@236 $generated@@431 $generated@@46)) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@144 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@157) ($generated@@236 $generated@@432 $generated@@47)) (and (= ($generated@@280 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@144 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@157) ($generated@@236 $generated@@433 $generated@@44)) (and (= ($generated@@280 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@144 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 21))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@236 $generated@@435 $generated@@45)) (and (= ($generated@@280 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@144 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@236 ($generated@@280 $generated@@436) $generated@@437) ($generated@@144 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@236 ($generated@@280 $generated@@436) $generated@@437))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (= (type $generated@@438) $generated@@136) (or ($generated@@137 $generated@@439) (not (= 0 $generated@@132)))) (and (=> (>= 0 $generated@@439) ($generated@@137 (+ $generated@@439 1))) (= ($generated@@133 ($generated@@134 $generated@@438) $generated@@439) (ite (> $generated@@439 0) 0 (+ 1 ($generated@@133 $generated@@438 (+ $generated@@439 1)))))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@438) $generated@@439))
))))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@79 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@76 $generated@@441 $generated@@2)) (<= 0 ($generated@@285 $generated@@440))))
 :pattern ( ($generated@@285 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@275 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@274 $generated@@443)) (<= 0 ($generated@@273 $generated@@442))))
 :pattern ( ($generated@@273 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@394 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@394 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@394 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@402 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@72 ($generated@@402 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@157) (= (type $generated@@465) $generated@@157)) (= ($generated@@266 ($generated@@235 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@147 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@147 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@147 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@147 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) (= (type $generated@@475) $generated@@157)) (= ($generated@@155 ($generated@@235 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@235 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@157) (= (type $generated@@477) $generated@@157)) (= ($generated@@156 ($generated@@235 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@235 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@136)
 :pattern ( ($generated@@478 $generated@@480))
)) (= (type $generated@@479) $generated@@136)))
(assert (forall (($generated@@481 T@U) ($generated@@482 Int) ) (!  (=> (= (type $generated@@481) $generated@@136) (= ($generated@@133 $generated@@481 $generated@@482) ($generated@@133 $generated@@479 $generated@@482)))
 :pattern ( ($generated@@133 ($generated@@478 $generated@@481) $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@275 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@274 $generated@@157)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@273 $generated@@489))) ($generated@@260 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@245 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@245 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@250 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@250 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@250 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@162 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@162 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@162 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@366 $generated@@512 ($generated@@280 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@280 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))) (and ($generated@@236 ($generated@@81 ($generated@@367 $generated@@513) $generated@@516) $generated@@515) ($generated@@236 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))) (and ($generated@@236 ($generated@@81 ($generated@@377 $generated@@517) $generated@@520) $generated@@519) ($generated@@236 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@157) (= (type $generated@@524) $generated@@157)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@235 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@235 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@157) (= (type $generated@@526) $generated@@157)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@235 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@235 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 Int) ) (!  (=> (= (type $generated@@527) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@527) $generated@@528) ($generated@@133 $generated@@527 $generated@@528)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@157) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529)) $generated@@529) ($generated@@144 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529) ($generated@@394 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@157) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534))) (and (= ($generated@@280 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532)) $generated@@532) ($generated@@144 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532) ($generated@@402 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@157)) ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536))) (and (= ($generated@@280 ($generated@@366 $generated@@148 $generated@@537)) $generated@@537) ($generated@@144 ($generated@@366 $generated@@148 $generated@@537) ($generated@@147 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@410 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@147 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@148) (= ($generated@@521 ($generated@@280 $generated@@544)) ($generated@@522 $generated@@544)))
 :pattern ( ($generated@@521 ($generated@@280 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) ($generated@@236 $generated@@545 ($generated@@75 0))) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@545)) $generated@@545) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@236 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@157) (= (type $generated@@547) $generated@@64)) ($generated@@236 $generated@@546 ($generated@@245 $generated@@547))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546)) $generated@@546) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546) ($generated@@245 $generated@@547))))
 :pattern ( ($generated@@236 $generated@@546 ($generated@@245 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@157) (= (type $generated@@549) $generated@@64)) ($generated@@236 $generated@@548 ($generated@@250 $generated@@549))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548)) $generated@@548) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548) ($generated@@250 $generated@@549))))
 :pattern ( ($generated@@236 $generated@@548 ($generated@@250 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@157) (= (type $generated@@551) $generated@@64)) ($generated@@236 $generated@@550 ($generated@@162 $generated@@551))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550)) $generated@@550) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550) ($generated@@162 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@162 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@157) (= (type $generated@@553) $generated@@64)) ($generated@@236 $generated@@552 ($generated@@483 $generated@@553))) (and (= ($generated@@280 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552)) $generated@@552) ($generated@@144 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552) ($generated@@483 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 ($generated@@483 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@260 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@148) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@560) (and ($generated@@146 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@148) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@564) (and ($generated@@146 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@157) (= (type $generated@@567) $generated@@157)) (= ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)) ($generated@@138 ($generated@@235 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))) ($generated@@138 ($generated@@280 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@280 ($generated@@138 $generated@@569)) ($generated@@138 ($generated@@280 $generated@@569)))
 :pattern ( ($generated@@280 ($generated@@138 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@275 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@274 $generated@@571)) (= ($generated@@273 $generated@@570) 0)) (= $generated@@570 ($generated@@272 $generated@@571))))
 :pattern ( ($generated@@273 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@285 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@434)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@157)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@274 $generated@@157)) (= (type $generated@@587) $generated@@64)) (= ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@273 $generated@@586))) ($generated@@236 ($generated@@484 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@484 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@274 $generated@@157)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@273 $generated@@590))) (< ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594))) (and (and ($generated@@144 ($generated@@291 $generated@@592) ($generated@@245 $generated@@593)) ($generated@@144 ($generated@@334 $generated@@592) ($generated@@245 $generated@@594))) ($generated@@144 ($generated@@365 $generated@@592) ($generated@@245 ($generated@@147 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597))) (and (and ($generated@@144 ($generated@@309 $generated@@595) ($generated@@250 $generated@@596)) ($generated@@144 ($generated@@345 $generated@@595) ($generated@@250 $generated@@597))) ($generated@@144 ($generated@@376 $generated@@595) ($generated@@250 ($generated@@147 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@144 $generated@@598 $generated@@46))
 :pattern ( ($generated@@144 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@144 $generated@@599 $generated@@47))
 :pattern ( ($generated@@144 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@144 $generated@@600 $generated@@44))
 :pattern ( ($generated@@144 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@434) ($generated@@144 $generated@@601 $generated@@45))
 :pattern ( ($generated@@144 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@157) ($generated@@144 $generated@@602 $generated@@48))
 :pattern ( ($generated@@144 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@607) $generated@@77)) (= (type $generated@@608) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@136)) (= (type $generated@@610) $generated@@136)) (= (type $generated@@611) $generated@@136)) (= (type $generated@@612) $generated@@136)) (= (type $generated@@613) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@615  (=> (>= 0 $generated@@603) (=> (and (= $generated@@604 (+ $generated@@603 1)) ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@605)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 (- 1 $generated@@603)) (= (- 1 $generated@@604) (- 1 $generated@@603)))) (=> (or (<= 0 (- 1 $generated@@603)) (= (- 1 $generated@@604) (- 1 $generated@@603))) (=> (= (ControlFlow 0 4) (- 0 3)) (< (- 1 $generated@@604) (- 1 $generated@@603)))))))))
(let (($generated@@616 true))
(let (($generated@@617  (=> (= $generated@@606 ($generated@@223 $generated@@607 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@616) (=> (= (ControlFlow 0 6) 4) $generated@@615)))))
(let (($generated@@618 true))
(let (($generated@@619  (=> (and (= $generated@@608 ($generated@@168 $generated@@607 $generated@@605 $generated@@60 false)) (= $generated@@609 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@610))))) (=> (and (and (= $generated@@611 ($generated@@134 ($generated@@134 ($generated@@134 ($generated@@134 $generated@@610))))) (= ($generated@@478 $generated@@610) $generated@@610)) (and (= ($generated@@478 $generated@@612) $generated@@612) (= ($generated@@478 $generated@@613) $generated@@613))) (and (=> (= (ControlFlow 0 7) 1) $generated@@618) (=> (= (ControlFlow 0 7) 6) $generated@@617))))))
(let (($generated@@620  (=> (and (and ($generated@@259 $generated@@605) ($generated@@614 $generated@@605)) (and (= 0 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@619)))
$generated@@620)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@139 (T@U Int) Int)
(declare-fun $generated@@140 (Int) Bool)
(declare-fun $generated@@143 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@205 (T@T) T@U)
(declare-fun $generated@@206 (T@U) Int)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@213 (T@U T@U T@U) Bool)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 () T@T)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@221 (T@T T@T) T@U)
(declare-fun $generated@@222 (T@T T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@T T@T) T@U)
(declare-fun $generated@@240 (T@T T@T) T@T)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@242 (T@T) T@T)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (T@U T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 () T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@U Int) T@U)
(declare-fun $generated@@348 (T@U) Int)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@393 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))) (forall (($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(= (type ($generated@@133 $generated@@135)) $generated@@136))
 :pattern ( ($generated@@133 $generated@@135))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@137 T@U) ($generated@@138 Int) ) (!  (=> (and (= (type $generated@@137) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@138)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@138 0))))) ($generated@@132 ($generated@@130 (- $generated@@138 1)))) (= ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)) (ite (< $generated@@138 0) 0 (+ 1 ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 (- $generated@@138 1))))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@141 T@U) ($generated@@142 Int) ) (!  (=> (and (= (type $generated@@141) $generated@@131) (or ($generated@@140 ($generated@@130 $generated@@142)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@142 0))))) ($generated@@140 ($generated@@130 (+ $generated@@142 1)))) (= ($generated@@139 ($generated@@129 $generated@@141) ($generated@@130 $generated@@142)) (ite (> $generated@@142 0) 0 (+ 1 ($generated@@139 ($generated@@129 $generated@@141) ($generated@@130 (+ $generated@@142 1))))))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@129 $generated@@141) ($generated@@130 $generated@@142)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (= ($generated@@1 ($generated@@145 $generated@@149 $generated@@150)) 13)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@146 ($generated@@145 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@147 ($generated@@145 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@145 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@147 (type $generated@@155))))
(= (type ($generated@@143 $generated@@155 $generated@@156 $generated@@157)) $generated@@158))
 :pattern ( ($generated@@143 $generated@@155 $generated@@156 $generated@@157))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 (type $generated@@162)))
(let (($generated@@164 (type $generated@@160)))
(= (type ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@162)) ($generated@@145 $generated@@164 $generated@@163))))
 :pattern ( ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@162))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 ($generated@@147 (type $generated@@165))))
 (=> (= (type $generated@@168) $generated@@169) (= ($generated@@143 ($generated@@148 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@166 $generated@@167) $generated@@168)))
 :weight 0
))) (and (and (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@143 ($generated@@148 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@143 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@143 ($generated@@148 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@143 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or true (= ($generated@@143 ($generated@@148 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@143 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ) (! (= (type ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@145 $generated@@72 $generated@@4))
 :pattern ( ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@64 (type $generated@@197))))
 (=> (and (and (and (and (= (type $generated@@192) $generated@@72) (= (type $generated@@193) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@194) ($generated@@63 $generated@@4))) (= (type $generated@@196) $generated@@72)) (= (type $generated@@197) ($generated@@63 $generated@@198))) (= ($generated@@0 ($generated@@143 ($generated@@144 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))  (=> (and (not (= $generated@@196 $generated@@192)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@193 $generated@@196) $generated@@194))) $generated@@195))))
 :pattern ( ($generated@@143 ($generated@@144 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@199 Int) ) (! (= ($generated@@130 $generated@@199) $generated@@199)
 :pattern ( ($generated@@130 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@133 $generated@@200) $generated@@200)
 :pattern ( ($generated@@133 $generated@@200))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@201 T@U) ($generated@@202 Int) ) (!  (=> (and (= (type $generated@@201) $generated@@131) (or ($generated@@132 $generated@@202) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@201 $generated@@202))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@203 T@U) ($generated@@204 Int) ) (!  (=> (and (= (type $generated@@203) $generated@@131) (or ($generated@@140 $generated@@204) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@139 $generated@@203 $generated@@204))
))))
(assert  (and (and (forall (($generated@@209 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@209)) 14)) (forall (($generated@@210 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@207 $generated@@210))
))) (forall (($generated@@211 T@T) ) (! (= (type ($generated@@205 $generated@@211)) ($generated@@207 $generated@@211))
 :pattern ( ($generated@@205 $generated@@211))
))))
(assert (forall (($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@212)) 0)
 :pattern ( ($generated@@205 $generated@@212))
)))
(assert  (and (= ($generated@@1 $generated@@215) 15) (forall (($generated@@216 T@U) ) (! (= (type ($generated@@214 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@214 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@61) (= (type $generated@@219) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@213 ($generated@@214 $generated@@217) $generated@@218 $generated@@219) ($generated@@69 $generated@@217 $generated@@218 $generated@@219)))
 :pattern ( ($generated@@213 ($generated@@214 $generated@@217) $generated@@218 $generated@@219))
)))
(assert  (and (and (and (and (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@1 ($generated@@222 $generated@@225 $generated@@226)) 16)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@223 ($generated@@222 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@222 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@224 ($generated@@222 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@222 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@223 (type $generated@@231))))
(= (type ($generated@@220 $generated@@231)) ($generated@@71 $generated@@232 $generated@@4)))
 :pattern ( ($generated@@220 $generated@@231))
))) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= (type ($generated@@221 $generated@@233 $generated@@234)) ($generated@@222 $generated@@233 $generated@@234))
 :pattern ( ($generated@@221 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@T) ) (! (let (($generated@@237 (type $generated@@235)))
 (not ($generated@@0 ($generated@@76 ($generated@@220 ($generated@@221 $generated@@237 $generated@@236)) $generated@@235))))
 :pattern ( (let (($generated@@237 (type $generated@@235)))
($generated@@76 ($generated@@220 ($generated@@221 $generated@@237 $generated@@236)) $generated@@235)))
)))
(assert  (and (and (and (and (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (= ($generated@@1 ($generated@@240 $generated@@243 $generated@@244)) 17)) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@241 ($generated@@240 $generated@@245 $generated@@246)) $generated@@245)
 :pattern ( ($generated@@240 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (! (= ($generated@@242 ($generated@@240 $generated@@247 $generated@@248)) $generated@@248)
 :pattern ( ($generated@@240 $generated@@247 $generated@@248))
))) (forall (($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@241 (type $generated@@249))))
(= (type ($generated@@238 $generated@@249)) ($generated@@71 $generated@@250 $generated@@4)))
 :pattern ( ($generated@@238 $generated@@249))
))) (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (! (= (type ($generated@@239 $generated@@251 $generated@@252)) ($generated@@240 $generated@@251 $generated@@252))
 :pattern ( ($generated@@239 $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@T) ) (! (let (($generated@@255 (type $generated@@253)))
 (not ($generated@@0 ($generated@@76 ($generated@@238 ($generated@@239 $generated@@255 $generated@@254)) $generated@@253))))
 :pattern ( (let (($generated@@255 (type $generated@@253)))
($generated@@76 ($generated@@238 ($generated@@239 $generated@@255 $generated@@254)) $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@224 (type $generated@@256))))
(let (($generated@@258 ($generated@@223 (type $generated@@256))))
 (=> (= (type $generated@@256) ($generated@@222 $generated@@258 $generated@@257)) (or (= $generated@@256 ($generated@@221 $generated@@258 $generated@@257)) (exists (($generated@@259 T@U) ) (!  (and (= (type $generated@@259) $generated@@258) ($generated@@0 ($generated@@76 ($generated@@220 $generated@@256) $generated@@259)))
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
))))))
 :pattern ( ($generated@@220 $generated@@256))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@242 (type $generated@@260))))
(let (($generated@@262 ($generated@@241 (type $generated@@260))))
 (=> (= (type $generated@@260) ($generated@@240 $generated@@262 $generated@@261)) (or (= $generated@@260 ($generated@@239 $generated@@262 $generated@@261)) (exists (($generated@@263 T@U) ) (!  (and (= (type $generated@@263) $generated@@262) ($generated@@0 ($generated@@76 ($generated@@238 $generated@@260) $generated@@263)))
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
))))))
 :pattern ( ($generated@@238 $generated@@260))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) ($generated@@71 $generated@@215 $generated@@4)) (= (type $generated@@267) $generated@@61)) (= (type $generated@@268) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@215) ($generated@@0 ($generated@@76 $generated@@266 $generated@@269))) ($generated@@213 $generated@@269 $generated@@267 $generated@@268))
 :pattern ( ($generated@@76 $generated@@266 $generated@@269))
))))
 :pattern ( ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@61)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@272) ($generated@@71 $generated@@215 $generated@@4)) (= (type $generated@@273) $generated@@61)) (= (type $generated@@274) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@272 ($generated@@270 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@215) ($generated@@0 ($generated@@76 $generated@@272 $generated@@275))) ($generated@@213 $generated@@275 $generated@@273 $generated@@274))
 :pattern ( ($generated@@76 $generated@@272 $generated@@275))
))))
 :pattern ( ($generated@@69 $generated@@272 ($generated@@270 $generated@@273) $generated@@274))
)))
(assert  (and (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@224 (type $generated@@280))))
(let (($generated@@282 ($generated@@223 (type $generated@@280))))
(= (type ($generated@@277 $generated@@280)) ($generated@@71 $generated@@282 $generated@@281))))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) ($generated@@222 $generated@@215 $generated@@215)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@215) ($generated@@0 ($generated@@76 ($generated@@220 $generated@@283) $generated@@287))) (and ($generated@@213 ($generated@@76 ($generated@@277 $generated@@283) $generated@@287) $generated@@285 $generated@@286) ($generated@@213 $generated@@287 $generated@@284 $generated@@286)))
 :pattern ( ($generated@@76 ($generated@@277 $generated@@283) $generated@@287))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@283) $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286))
)))
(assert  (and (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (= (type ($generated@@288 $generated@@290 $generated@@291)) $generated@@61)
 :pattern ( ($generated@@288 $generated@@290 $generated@@291))
)) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@242 (type $generated@@292))))
(let (($generated@@294 ($generated@@241 (type $generated@@292))))
(= (type ($generated@@289 $generated@@292)) ($generated@@71 $generated@@294 $generated@@293))))
 :pattern ( ($generated@@289 $generated@@292))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (= (type $generated@@295) ($generated@@240 $generated@@215 $generated@@215)) (= (type $generated@@296) $generated@@61)) (= (type $generated@@297) $generated@@61)) (= (type $generated@@298) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@295 ($generated@@288 $generated@@296 $generated@@297) $generated@@298) (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@215) ($generated@@0 ($generated@@76 ($generated@@238 $generated@@295) $generated@@299))) (and ($generated@@213 ($generated@@76 ($generated@@289 $generated@@295) $generated@@299) $generated@@297 $generated@@298) ($generated@@213 $generated@@299 $generated@@296 $generated@@298)))
 :pattern ( ($generated@@76 ($generated@@289 $generated@@295) $generated@@299))
 :pattern ( ($generated@@76 ($generated@@238 $generated@@295) $generated@@299))
))))
 :pattern ( ($generated@@69 $generated@@295 ($generated@@288 $generated@@296 $generated@@297) $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@71 $generated@@301 $generated@@4))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@242 (type $generated@@302))))
(let (($generated@@304 ($generated@@241 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@240 $generated@@304 $generated@@303)) (= (= $generated@@302 ($generated@@239 $generated@@304 $generated@@303)) (= ($generated@@238 $generated@@302) ($generated@@300 $generated@@304))))))
 :pattern ( ($generated@@238 $generated@@302))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@305 T@U) ($generated@@306 Int) ) (!  (=> (and (= (type $generated@@305) $generated@@131) (or ($generated@@132 $generated@@306) (not (= 0 $generated@@127)))) (and (=> (<= 0 $generated@@306) ($generated@@132 (- $generated@@306 1))) (= ($generated@@128 ($generated@@129 $generated@@305) $generated@@306) (ite (< $generated@@306 0) 0 (+ 1 ($generated@@128 $generated@@305 (- $generated@@306 1)))))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@305) $generated@@306))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@307 T@U) ($generated@@308 Int) ) (!  (=> (and (= (type $generated@@307) $generated@@131) (or ($generated@@140 $generated@@308) (not (= 0 $generated@@127)))) (and (=> (>= 0 $generated@@308) ($generated@@140 (+ $generated@@308 1))) (= ($generated@@139 ($generated@@129 $generated@@307) $generated@@308) (ite (> $generated@@308 0) 0 (+ 1 ($generated@@139 $generated@@307 (+ $generated@@308 1)))))))
 :pattern ( ($generated@@139 ($generated@@129 $generated@@307) $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@208 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@207 $generated@@310)) (<= 0 ($generated@@206 $generated@@309))))
 :pattern ( ($generated@@206 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@61)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@311 ($generated@@276 $generated@@313 $generated@@314)) $generated@@313))
 :pattern ( ($generated@@276 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@61) (= (type $generated@@318) $generated@@61)) (= ($generated@@315 ($generated@@276 $generated@@317 $generated@@318)) $generated@@318))
 :pattern ( ($generated@@276 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@67 ($generated@@276 $generated@@319 $generated@@320)) $generated@@58))
 :pattern ( ($generated@@276 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@61)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@61) (= (type $generated@@324) $generated@@61)) (= ($generated@@321 ($generated@@288 $generated@@323 $generated@@324)) $generated@@323))
 :pattern ( ($generated@@288 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@61)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@61) (= (type $generated@@328) $generated@@61)) (= ($generated@@325 ($generated@@288 $generated@@327 $generated@@328)) $generated@@328))
 :pattern ( ($generated@@288 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@67 ($generated@@288 $generated@@329 $generated@@330)) $generated@@59))
 :pattern ( ($generated@@288 $generated@@329 $generated@@330))
)))
(assert  (and (forall (($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@333)) $generated@@131)
 :pattern ( ($generated@@331 $generated@@333))
)) (= (type $generated@@332) $generated@@131)))
(assert (forall (($generated@@334 T@U) ($generated@@335 Int) ) (!  (=> (= (type $generated@@334) $generated@@131) (= ($generated@@128 $generated@@334 $generated@@335) ($generated@@128 $generated@@332 $generated@@335)))
 :pattern ( ($generated@@128 ($generated@@331 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 Int) ) (!  (=> (= (type $generated@@336) $generated@@131) (= ($generated@@139 $generated@@336 $generated@@337) ($generated@@139 $generated@@332 $generated@@337)))
 :pattern ( ($generated@@139 ($generated@@331 $generated@@336) $generated@@337))
)))
(assert  (and (forall (($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@340))
)) (forall (($generated@@341 T@U) ($generated@@342 Int) ) (! (let (($generated@@343 ($generated@@208 (type $generated@@341))))
(= (type ($generated@@339 $generated@@341 $generated@@342)) $generated@@343))
 :pattern ( ($generated@@339 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@344) ($generated@@207 $generated@@215)) (= (type $generated@@345) $generated@@61)) (= (type $generated@@346) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@344 ($generated@@338 $generated@@345) $generated@@346) (forall (($generated@@347 Int) ) (!  (=> (and (<= 0 $generated@@347) (< $generated@@347 ($generated@@206 $generated@@344))) ($generated@@213 ($generated@@339 $generated@@344 $generated@@347) $generated@@345 $generated@@346))
 :pattern ( ($generated@@339 $generated@@344 $generated@@347))
))))
 :pattern ( ($generated@@69 $generated@@344 ($generated@@338 $generated@@345) $generated@@346))
)))
(assert (forall (($generated@@349 Int) ) (! (= ($generated@@348 ($generated@@70 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@70 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (= (type ($generated@@350 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@350 ($generated@@264 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@264 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@67 ($generated@@264 $generated@@353)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@270 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@270 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@270 $generated@@357)) $generated@@55))
 :pattern ( ($generated@@270 $generated@@357))
)))
(assert  (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@358 $generated@@360))
)) (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@359 ($generated@@358 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@358 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@61) (= ($generated@@67 ($generated@@358 $generated@@363)) $generated@@56))
 :pattern ( ($generated@@358 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@364 ($generated@@338 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@338 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@338 $generated@@367)) $generated@@57))
 :pattern ( ($generated@@338 $generated@@367))
)))
(assert (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@368 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
(= ($generated@@368 $generated@@372 ($generated@@214 $generated@@371)) $generated@@371))
 :pattern ( ($generated@@214 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (= (type $generated@@373) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@373) $generated@@374) ($generated@@128 $generated@@373 $generated@@374)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 Int) ) (!  (=> (= (type $generated@@375) $generated@@131) (= ($generated@@139 ($generated@@129 $generated@@375) $generated@@376) ($generated@@139 $generated@@375 $generated@@376)))
 :pattern ( ($generated@@139 ($generated@@129 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
 (not ($generated@@0 ($generated@@76 ($generated@@300 $generated@@378) $generated@@377))))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@76 ($generated@@300 $generated@@378) $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@71 $generated@@215 $generated@@2)) (= (type $generated@@380) $generated@@61)) (= (type $generated@@381) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@379 ($generated@@358 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@215) (< 0 ($generated ($generated@@76 $generated@@379 $generated@@382)))) ($generated@@213 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@76 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@69 $generated@@379 ($generated@@358 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 Int) ) (! (= ($generated@@214 ($generated@@8 ($generated@@130 $generated@@383))) ($generated@@133 ($generated@@214 ($generated@@8 $generated@@383))))
 :pattern ( ($generated@@214 ($generated@@8 ($generated@@130 $generated@@383))))
)))
(assert (forall (($generated@@384 T@U) ) (! (= ($generated@@214 ($generated@@133 $generated@@384)) ($generated@@133 ($generated@@214 $generated@@384)))
 :pattern ( ($generated@@214 ($generated@@133 $generated@@384)))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@208 (type $generated@@385))))
 (=> (and (= (type $generated@@385) ($generated@@207 $generated@@386)) (= ($generated@@206 $generated@@385) 0)) (= $generated@@385 ($generated@@205 $generated@@386))))
 :pattern ( ($generated@@206 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@388) $generated@@2)) ($generated@@69 $generated@@388 $generated@@46 $generated@@387))
 :pattern ( ($generated@@69 $generated@@388 $generated@@46 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@390) $generated@@3)) ($generated@@69 $generated@@390 $generated@@47 $generated@@389))
 :pattern ( ($generated@@69 $generated@@390 $generated@@47 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@392) $generated@@4)) ($generated@@69 $generated@@392 $generated@@44 $generated@@391))
 :pattern ( ($generated@@69 $generated@@392 $generated@@44 $generated@@391))
)))
(assert (= ($generated@@1 $generated@@393) 18))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@395) $generated@@393)) ($generated@@69 $generated@@395 $generated@@45 $generated@@394))
 :pattern ( ($generated@@69 $generated@@395 $generated@@45 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@397) $generated@@215)) ($generated@@69 $generated@@397 $generated@@48 $generated@@396))
 :pattern ( ($generated@@69 $generated@@397 $generated@@48 $generated@@396))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@398 () Int)
(declare-fun $generated@@399 () T@U)
(declare-fun $generated@@400 () Int)
(declare-fun $generated@@401 () T@U)
(declare-fun $generated@@402 () T@U)
(declare-fun $generated@@403 () T@U)
(declare-fun $generated@@404 () Int)
(declare-fun $generated@@405 () Int)
(declare-fun $generated@@406 () Int)
(declare-fun $generated@@407 () Int)
(declare-fun $generated@@408 () T@U)
(declare-fun $generated@@409 () T@U)
(declare-fun $generated@@410 () T@U)
(declare-fun $generated@@411 () T@U)
(declare-fun $generated@@412 () T@U)
(declare-fun $generated@@413 (T@U) Bool)
(declare-fun $generated@@414 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@399) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@401) $generated@@131)) (= (type $generated@@402) $generated@@131)) (= (type $generated@@403) $generated@@131)) (= (type $generated@@408) $generated@@131)) (= (type $generated@@409) $generated@@131)) (= (type $generated@@410) $generated@@131)) (= (type $generated@@411) ($generated@@145 $generated@@72 $generated@@4))) (= (type $generated@@412) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@415  (=> ($generated@@69 ($generated@@8 $generated@@398) $generated@@46 $generated@@399) (=> (and ($generated@@132 $generated@@398) (= $generated@@400 (- $generated@@398 3))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@400) $generated@@46 $generated@@399) ($generated@@132 (- $generated@@398 3))) (and ($generated@@132 $generated@@398) ($generated@@132 (- $generated@@398 3)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (= ($generated@@128 $generated@@401 $generated@@398) (+ 3 ($generated@@128 $generated@@401 (- $generated@@398 3))))) (=> (and (= ($generated@@128 $generated@@401 $generated@@398) (+ 3 ($generated@@128 $generated@@401 (- $generated@@398 3)))) (= (ControlFlow 0 4) (- 0 3))) ($generated@@0 ($generated@@133 ($generated@@11 true))))))))))
(let (($generated@@416 true))
(let (($generated@@417  (=> (= $generated@@402 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@403)))) (=> (and (= $generated@@401 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@403))))) (> $generated@@404 0)) (and (=> (= (ControlFlow 0 6) 2) $generated@@416) (=> (= (ControlFlow 0 6) 4) $generated@@415))))))
(let (($generated@@418 true))
(let (($generated@@419  (=> ($generated@@69 ($generated@@8 $generated@@398) $generated@@46 $generated@@399) (=> (and ($generated@@132 $generated@@398) (= $generated@@405 (- $generated@@398 3))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@405) $generated@@46 $generated@@399) ($generated@@132 (- $generated@@398 3))) (and ($generated@@132 $generated@@398) ($generated@@132 (- $generated@@398 3)))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (= ($generated@@128 $generated@@401 $generated@@398) (+ 3 ($generated@@128 $generated@@401 (- $generated@@398 3))))) (=> (and (and (and (= ($generated@@128 $generated@@402 $generated@@398) (+ 3 ($generated@@128 $generated@@402 (- $generated@@398 3)))) ($generated@@69 ($generated@@8 $generated@@406) $generated@@46 $generated@@399)) (and ($generated@@140 $generated@@406) (= $generated@@407 (+ $generated@@406 3)))) (and (and ($generated@@69 ($generated@@8 $generated@@407) $generated@@46 $generated@@399) ($generated@@140 (+ $generated@@406 3))) (and ($generated@@140 $generated@@406) ($generated@@140 (+ $generated@@406 3))))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (= ($generated@@139 $generated@@408 $generated@@406) (+ 3 ($generated@@139 $generated@@408 (+ $generated@@406 3))))) (=> (= ($generated@@139 $generated@@408 $generated@@406) (+ 3 ($generated@@139 $generated@@408 (+ $generated@@406 3)))) (and (=> (= (ControlFlow 0 7) 6) $generated@@417) (=> (= (ControlFlow 0 7) 1) $generated@@418)))))))))))
(let (($generated@@420  (=> (and (= ($generated@@331 $generated@@402) $generated@@402) (= ($generated@@331 $generated@@401) $generated@@401)) (=> (and (and (= $generated@@409 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@410))))) (= $generated@@408 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@410))))))) (and (= ($generated@@331 $generated@@410) $generated@@410) (= $generated@@411 ($generated@@144 $generated@@412 $generated@@399 $generated@@60 false)))) (and (and (=> (= (ControlFlow 0 10) 7) $generated@@419) (=> (= (ControlFlow 0 10) 6) $generated@@417)) (=> (= (ControlFlow 0 10) 1) $generated@@418))))))
(let (($generated@@421  (=> (and ($generated@@413 $generated@@399) ($generated@@414 $generated@@399)) (=> (and (and (= 1 $generated@@127) (> $generated@@398 5)) (and (< $generated@@406 (- 0 5)) (= (ControlFlow 0 11) 10))) $generated@@420))))
$generated@@421))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 7) (- 9))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int) Int)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@134 $generated@@139)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@139))
))) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@138 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@138 $generated@@140))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@142 T@U) ($generated@@143 Int) ) (!  (=> (and (= (type $generated@@142) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@143)) (not (= 0 $generated@@132)))) (and (=> (not ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@143 0))))) ($generated@@137 ($generated@@135 (- $generated@@143 1)))) (= ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)) (ite (< $generated@@143 0) 0 (+ 1 ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 (- $generated@@143 1))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)))
))))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@75 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@64)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 17)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@67 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@77) (= (type $generated@@229) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@230) ($generated@@66 $generated@@4))) (= (type $generated@@232) $generated@@77)) (= (type $generated@@233) ($generated@@66 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@148)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@157)) (= (type $generated@@242) $generated@@157)) (= ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@148) (= (type $generated@@244) $generated@@148)) (= ($generated@@154 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@154 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) ($generated@@0 ($generated@@81 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@81 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@253) $generated@@64)) (= ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@157) ($generated@@0 ($generated@@81 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@81 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@135 $generated@@255) $generated@@255)
 :pattern ( ($generated@@135 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@138 $generated@@256) $generated@@256)
 :pattern ( ($generated@@138 $generated@@256))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@136) (or ($generated@@137 $generated@@258) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@133 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@157)) (= (type $generated@@264) $generated@@157)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@148) (= ($generated@@146 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@148) ($generated@@146 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@157) (= (type $generated@@271) $generated@@157)) (= $generated@@269 ($generated@@235 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@146 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 18)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@157)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@74 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@76 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@79 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@76 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@81 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 19)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 20)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@76 $generated@@328 $generated@@2)) (= ($generated@@163 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@81 $generated@@327 $generated@@329))) (<= ($generated ($generated@@81 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@163 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@295 (type $generated@@330))))
(let (($generated@@332 ($generated@@294 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@293 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@292 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@291 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@295 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@295 (type $generated@@337))))
(let (($generated@@339 ($generated@@294 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@293 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@292 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@313 (type $generated@@341))))
(let (($generated@@343 ($generated@@312 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@311 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@310 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@309 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@313 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@313 (type $generated@@348))))
(let (($generated@@350 ($generated@@312 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@311 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@310 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@353) $generated@@64)) (= ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@352 $generated@@354)))) ($generated@@236 $generated@@354 $generated@@353))
 :pattern ( ($generated@@81 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@157) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@260 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@157) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@260 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@81 ($generated@@286 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@81 ($generated@@286 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@295 (type $generated@@371))))
(let (($generated@@373 ($generated@@294 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@375) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375)))) (= ($generated@@81 ($generated@@367 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@313 (type $generated@@379))))
(let (($generated@@381 ($generated@@312 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@383) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383)))) (= ($generated@@81 ($generated@@377 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@294 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@293 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@312 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@311 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))) (and ($generated@@260 ($generated@@81 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@260 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@64)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))) (and ($generated@@260 ($generated@@81 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@260 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@313 (type $generated@@412))))
(let (($generated@@414 ($generated@@312 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@311 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@310 $generated@@414 $generated@@413)) (= ($generated@@309 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@309 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@313 (type $generated@@415))))
(let (($generated@@417 ($generated@@312 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@311 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@310 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@313 (type $generated@@418))))
(let (($generated@@420 ($generated@@312 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@311 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@310 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@157))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@295 (type $generated@@421))))
(let (($generated@@423 ($generated@@294 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@293 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@292 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@157) (= (type $generated@@425) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@421) ($generated@@280 ($generated@@235 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@313 (type $generated@@426))))
(let (($generated@@428 ($generated@@312 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@311 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@310 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@157) (= (type $generated@@430) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@426) ($generated@@280 ($generated@@235 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@157) ($generated@@236 $generated@@431 $generated@@46)) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@144 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@157) ($generated@@236 $generated@@432 $generated@@47)) (and (= ($generated@@280 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@144 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@157) ($generated@@236 $generated@@433 $generated@@44)) (and (= ($generated@@280 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@144 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 21))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@236 $generated@@435 $generated@@45)) (and (= ($generated@@280 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@144 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@236 ($generated@@280 $generated@@436) $generated@@437) ($generated@@144 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@236 ($generated@@280 $generated@@436) $generated@@437))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (= (type $generated@@438) $generated@@136) (or ($generated@@137 $generated@@439) (not (= 0 $generated@@132)))) (and (=> (<= 0 $generated@@439) ($generated@@137 (- $generated@@439 1))) (= ($generated@@133 ($generated@@134 $generated@@438) $generated@@439) (ite (< $generated@@439 0) 0 (+ 1 ($generated@@133 $generated@@438 (- $generated@@439 1)))))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@438) $generated@@439))
))))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@79 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@76 $generated@@441 $generated@@2)) (<= 0 ($generated@@285 $generated@@440))))
 :pattern ( ($generated@@285 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@275 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@274 $generated@@443)) (<= 0 ($generated@@273 $generated@@442))))
 :pattern ( ($generated@@273 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@394 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@394 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@394 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@402 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@72 ($generated@@402 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@157) (= (type $generated@@465) $generated@@157)) (= ($generated@@266 ($generated@@235 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@147 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@147 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@147 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@147 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) (= (type $generated@@475) $generated@@157)) (= ($generated@@155 ($generated@@235 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@235 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@157) (= (type $generated@@477) $generated@@157)) (= ($generated@@156 ($generated@@235 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@235 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@136)
 :pattern ( ($generated@@478 $generated@@480))
)) (= (type $generated@@479) $generated@@136)))
(assert (forall (($generated@@481 T@U) ($generated@@482 Int) ) (!  (=> (= (type $generated@@481) $generated@@136) (= ($generated@@133 $generated@@481 $generated@@482) ($generated@@133 $generated@@479 $generated@@482)))
 :pattern ( ($generated@@133 ($generated@@478 $generated@@481) $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@275 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@274 $generated@@157)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@273 $generated@@489))) ($generated@@260 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@245 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@245 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@250 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@250 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@250 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@162 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@162 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@162 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@366 $generated@@512 ($generated@@280 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@280 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))) (and ($generated@@236 ($generated@@81 ($generated@@367 $generated@@513) $generated@@516) $generated@@515) ($generated@@236 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))) (and ($generated@@236 ($generated@@81 ($generated@@377 $generated@@517) $generated@@520) $generated@@519) ($generated@@236 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@157) (= (type $generated@@524) $generated@@157)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@235 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@235 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@157) (= (type $generated@@526) $generated@@157)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@235 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@235 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 Int) ) (!  (=> (= (type $generated@@527) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@527) $generated@@528) ($generated@@133 $generated@@527 $generated@@528)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@157) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529)) $generated@@529) ($generated@@144 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529) ($generated@@394 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@157) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534))) (and (= ($generated@@280 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532)) $generated@@532) ($generated@@144 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532) ($generated@@402 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@157)) ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536))) (and (= ($generated@@280 ($generated@@366 $generated@@148 $generated@@537)) $generated@@537) ($generated@@144 ($generated@@366 $generated@@148 $generated@@537) ($generated@@147 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@410 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@147 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@148) (= ($generated@@521 ($generated@@280 $generated@@544)) ($generated@@522 $generated@@544)))
 :pattern ( ($generated@@521 ($generated@@280 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) ($generated@@236 $generated@@545 ($generated@@75 0))) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@545)) $generated@@545) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@236 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@157) (= (type $generated@@547) $generated@@64)) ($generated@@236 $generated@@546 ($generated@@245 $generated@@547))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546)) $generated@@546) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546) ($generated@@245 $generated@@547))))
 :pattern ( ($generated@@236 $generated@@546 ($generated@@245 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@157) (= (type $generated@@549) $generated@@64)) ($generated@@236 $generated@@548 ($generated@@250 $generated@@549))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548)) $generated@@548) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548) ($generated@@250 $generated@@549))))
 :pattern ( ($generated@@236 $generated@@548 ($generated@@250 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@157) (= (type $generated@@551) $generated@@64)) ($generated@@236 $generated@@550 ($generated@@162 $generated@@551))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550)) $generated@@550) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550) ($generated@@162 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@162 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@157) (= (type $generated@@553) $generated@@64)) ($generated@@236 $generated@@552 ($generated@@483 $generated@@553))) (and (= ($generated@@280 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552)) $generated@@552) ($generated@@144 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552) ($generated@@483 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 ($generated@@483 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@260 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@148) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@560) (and ($generated@@146 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@148) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@564) (and ($generated@@146 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@157) (= (type $generated@@567) $generated@@157)) (= ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)) ($generated@@138 ($generated@@235 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))) ($generated@@138 ($generated@@280 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@280 ($generated@@138 $generated@@569)) ($generated@@138 ($generated@@280 $generated@@569)))
 :pattern ( ($generated@@280 ($generated@@138 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@275 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@274 $generated@@571)) (= ($generated@@273 $generated@@570) 0)) (= $generated@@570 ($generated@@272 $generated@@571))))
 :pattern ( ($generated@@273 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@285 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@434)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@157)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@274 $generated@@157)) (= (type $generated@@587) $generated@@64)) (= ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@273 $generated@@586))) ($generated@@236 ($generated@@484 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@484 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@274 $generated@@157)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@273 $generated@@590))) (< ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594))) (and (and ($generated@@144 ($generated@@291 $generated@@592) ($generated@@245 $generated@@593)) ($generated@@144 ($generated@@334 $generated@@592) ($generated@@245 $generated@@594))) ($generated@@144 ($generated@@365 $generated@@592) ($generated@@245 ($generated@@147 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597))) (and (and ($generated@@144 ($generated@@309 $generated@@595) ($generated@@250 $generated@@596)) ($generated@@144 ($generated@@345 $generated@@595) ($generated@@250 $generated@@597))) ($generated@@144 ($generated@@376 $generated@@595) ($generated@@250 ($generated@@147 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@144 $generated@@598 $generated@@46))
 :pattern ( ($generated@@144 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@144 $generated@@599 $generated@@47))
 :pattern ( ($generated@@144 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@144 $generated@@600 $generated@@44))
 :pattern ( ($generated@@144 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@434) ($generated@@144 $generated@@601 $generated@@45))
 :pattern ( ($generated@@144 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@157) ($generated@@144 $generated@@602 $generated@@48))
 :pattern ( ($generated@@144 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@607) $generated@@77)) (= (type $generated@@608) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@136)) (= (type $generated@@610) $generated@@136)) (= (type $generated@@611) $generated@@136)) (= (type $generated@@612) $generated@@136)) (= (type $generated@@613) $generated@@136)) (= (type $generated@@614) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@616  (=> (<= 0 $generated@@603) (=> (and (= $generated@@604 (- $generated@@603 1)) ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@605)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603))) (=> (or (<= 0 $generated@@603) (= $generated@@604 $generated@@603)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@604 $generated@@603))))))))
(let (($generated@@617 true))
(let (($generated@@618  (=> (= $generated@@606 ($generated@@223 $generated@@607 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@617) (=> (= (ControlFlow 0 6) 4) $generated@@616)))))
(let (($generated@@619 true))
(let (($generated@@620  (=> (= $generated@@608 ($generated@@168 $generated@@607 $generated@@605 $generated@@60 false)) (=> (and (= $generated@@609 ($generated@@134 $generated@@610)) (= $generated@@611 ($generated@@134 ($generated@@134 $generated@@610)))) (=> (and (and (= ($generated@@478 $generated@@610) $generated@@610) (= $generated@@612 ($generated@@134 $generated@@613))) (and (= $generated@@614 ($generated@@134 ($generated@@134 $generated@@613))) (= ($generated@@478 $generated@@613) $generated@@613))) (and (=> (= (ControlFlow 0 7) 1) $generated@@619) (=> (= (ControlFlow 0 7) 6) $generated@@618)))))))
(let (($generated@@621  (=> (and (and ($generated@@259 $generated@@605) ($generated@@615 $generated@@605)) (and (= 0 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@620)))
$generated@@621)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U Int) Int)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@134 $generated@@139)) $generated@@136)
 :pattern ( ($generated@@134 $generated@@139))
))) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@138 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@138 $generated@@140))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@142 T@U) ($generated@@143 Int) ) (!  (=> (and (= (type $generated@@142) $generated@@136) (or ($generated@@137 ($generated@@135 $generated@@143)) (not (= 0 $generated@@132)))) (and (=> (not ($generated@@0 ($generated@@138 ($generated@@11 (> $generated@@143 0))))) ($generated@@137 ($generated@@135 (+ $generated@@143 1)))) (= ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)) (ite (> $generated@@143 0) 0 (+ 1 ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 (+ $generated@@143 1))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@142) ($generated@@135 $generated@@143)))
))))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@75 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@64)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 17)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@77 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@67 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@77) (= (type $generated@@229) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@230) ($generated@@66 $generated@@4))) (= (type $generated@@232) $generated@@77)) (= (type $generated@@233) ($generated@@66 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@148)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@157)) (= (type $generated@@242) $generated@@157)) (= ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@144 ($generated@@235 $generated@@241 $generated@@242) ($generated@@147 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@148) (= (type $generated@@244) $generated@@148)) (= ($generated@@154 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@154 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) ($generated@@0 ($generated@@81 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@81 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@144 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@253) $generated@@64)) (= ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@157) ($generated@@0 ($generated@@81 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@81 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@144 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@135 $generated@@255) $generated@@255)
 :pattern ( ($generated@@135 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@138 $generated@@256) $generated@@256)
 :pattern ( ($generated@@138 $generated@@256))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@136) (or ($generated@@137 $generated@@258) (not (= 0 $generated@@132)))) true)
 :pattern ( ($generated@@133 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@157)) (= (type $generated@@264) $generated@@157)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@235 $generated@@263 $generated@@264) ($generated@@147 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@148) (= ($generated@@146 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@148) ($generated@@146 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@157) (= (type $generated@@271) $generated@@157)) (= $generated@@269 ($generated@@235 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@146 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 18)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@157)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@74 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@76 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@79 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@76 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@81 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 19)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 20)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@76 $generated@@328 $generated@@2)) (= ($generated@@163 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@81 $generated@@327 $generated@@329))) (<= ($generated ($generated@@81 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@163 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@295 (type $generated@@330))))
(let (($generated@@332 ($generated@@294 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@293 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@292 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@291 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@295 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@295 (type $generated@@337))))
(let (($generated@@339 ($generated@@294 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@293 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@292 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@313 (type $generated@@341))))
(let (($generated@@343 ($generated@@312 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@311 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@310 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@309 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@313 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@313 (type $generated@@348))))
(let (($generated@@350 ($generated@@312 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@311 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@310 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@353) $generated@@64)) (= ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@352 $generated@@354)))) ($generated@@236 $generated@@354 $generated@@353))
 :pattern ( ($generated@@81 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@144 $generated@@352 ($generated@@162 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@157) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@260 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@245 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@157 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@157) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@260 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@250 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@81 ($generated@@286 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@81 ($generated@@286 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@295 (type $generated@@371))))
(let (($generated@@373 ($generated@@294 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@375) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375)))) (= ($generated@@81 ($generated@@367 $generated@@374) ($generated@@155 ($generated@@366 $generated@@148 $generated@@375))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@157 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@313 (type $generated@@379))))
(let (($generated@@381 ($generated@@312 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@383) $generated@@157)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383)))) (= ($generated@@81 ($generated@@377 $generated@@382) ($generated@@155 ($generated@@366 $generated@@148 $generated@@383))) ($generated@@156 ($generated@@366 $generated@@148 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@294 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@293 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@312 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@311 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))) (and ($generated@@260 ($generated@@81 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@260 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@64)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))) (and ($generated@@260 ($generated@@81 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@260 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@313 (type $generated@@412))))
(let (($generated@@414 ($generated@@312 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@311 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@310 $generated@@414 $generated@@413)) (= ($generated@@309 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@309 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@313 (type $generated@@415))))
(let (($generated@@417 ($generated@@312 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@311 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@310 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@313 (type $generated@@418))))
(let (($generated@@420 ($generated@@312 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@311 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@310 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@157))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@295 (type $generated@@421))))
(let (($generated@@423 ($generated@@294 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@293 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@292 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@157) (= (type $generated@@425) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@421) ($generated@@280 ($generated@@235 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@313 (type $generated@@426))))
(let (($generated@@428 ($generated@@312 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@311 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@310 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@157) (= (type $generated@@430) $generated@@157)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@426) ($generated@@280 ($generated@@235 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@157) ($generated@@236 $generated@@431 $generated@@46)) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@144 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@157) ($generated@@236 $generated@@432 $generated@@47)) (and (= ($generated@@280 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@144 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@157) ($generated@@236 $generated@@433 $generated@@44)) (and (= ($generated@@280 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@144 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 21))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@236 $generated@@435 $generated@@45)) (and (= ($generated@@280 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@144 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@236 ($generated@@280 $generated@@436) $generated@@437) ($generated@@144 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@236 ($generated@@280 $generated@@436) $generated@@437))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (= (type $generated@@438) $generated@@136) (or ($generated@@137 $generated@@439) (not (= 0 $generated@@132)))) (and (=> (>= 0 $generated@@439) ($generated@@137 (+ $generated@@439 1))) (= ($generated@@133 ($generated@@134 $generated@@438) $generated@@439) (ite (> $generated@@439 0) 0 (+ 1 ($generated@@133 $generated@@438 (+ $generated@@439 1)))))))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@438) $generated@@439))
))))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@79 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@76 $generated@@441 $generated@@2)) (<= 0 ($generated@@285 $generated@@440))))
 :pattern ( ($generated@@285 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@275 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@274 $generated@@443)) (<= 0 ($generated@@273 $generated@@442))))
 :pattern ( ($generated@@273 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@394 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@394 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@394 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@402 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@72 ($generated@@402 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@157) (= (type $generated@@465) $generated@@157)) (= ($generated@@266 ($generated@@235 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@147 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@147 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@147 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@147 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) (= (type $generated@@475) $generated@@157)) (= ($generated@@155 ($generated@@235 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@235 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@157) (= (type $generated@@477) $generated@@157)) (= ($generated@@156 ($generated@@235 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@235 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@136)
 :pattern ( ($generated@@478 $generated@@480))
)) (= (type $generated@@479) $generated@@136)))
(assert (forall (($generated@@481 T@U) ($generated@@482 Int) ) (!  (=> (= (type $generated@@481) $generated@@136) (= ($generated@@133 $generated@@481 $generated@@482) ($generated@@133 $generated@@479 $generated@@482)))
 :pattern ( ($generated@@133 ($generated@@478 $generated@@481) $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@275 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@274 $generated@@157)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@273 $generated@@489))) ($generated@@260 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@245 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@245 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@250 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@250 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@250 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@162 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@162 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@162 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@366 $generated@@512 ($generated@@280 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@280 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))) (and ($generated@@236 ($generated@@81 ($generated@@367 $generated@@513) $generated@@516) $generated@@515) ($generated@@236 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@144 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@157) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))) (and ($generated@@236 ($generated@@81 ($generated@@377 $generated@@517) $generated@@520) $generated@@519) ($generated@@236 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@144 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@157) (= (type $generated@@524) $generated@@157)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@235 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@235 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@157) (= (type $generated@@526) $generated@@157)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@235 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@235 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 Int) ) (!  (=> (= (type $generated@@527) $generated@@136) (= ($generated@@133 ($generated@@134 $generated@@527) $generated@@528) ($generated@@133 $generated@@527 $generated@@528)))
 :pattern ( ($generated@@133 ($generated@@134 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@157) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529)) $generated@@529) ($generated@@144 ($generated@@366 ($generated@@293 $generated@@157 $generated@@157) $generated@@529) ($generated@@394 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@236 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@157) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534))) (and (= ($generated@@280 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532)) $generated@@532) ($generated@@144 ($generated@@366 ($generated@@311 $generated@@157 $generated@@157) $generated@@532) ($generated@@402 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@236 $generated@@532 ($generated@@402 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@157)) ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536))) (and (= ($generated@@280 ($generated@@366 $generated@@148 $generated@@537)) $generated@@537) ($generated@@144 ($generated@@366 $generated@@148 $generated@@537) ($generated@@147 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@236 $generated@@537 ($generated@@147 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@410 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@147 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@148) (= ($generated@@521 ($generated@@280 $generated@@544)) ($generated@@522 $generated@@544)))
 :pattern ( ($generated@@521 ($generated@@280 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) ($generated@@236 $generated@@545 ($generated@@75 0))) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@545)) $generated@@545) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@236 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@157) (= (type $generated@@547) $generated@@64)) ($generated@@236 $generated@@546 ($generated@@245 $generated@@547))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546)) $generated@@546) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@546) ($generated@@245 $generated@@547))))
 :pattern ( ($generated@@236 $generated@@546 ($generated@@245 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@157) (= (type $generated@@549) $generated@@64)) ($generated@@236 $generated@@548 ($generated@@250 $generated@@549))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548)) $generated@@548) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@4) $generated@@548) ($generated@@250 $generated@@549))))
 :pattern ( ($generated@@236 $generated@@548 ($generated@@250 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@157) (= (type $generated@@551) $generated@@64)) ($generated@@236 $generated@@550 ($generated@@162 $generated@@551))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550)) $generated@@550) ($generated@@144 ($generated@@366 ($generated@@76 $generated@@157 $generated@@2) $generated@@550) ($generated@@162 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 ($generated@@162 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@157) (= (type $generated@@553) $generated@@64)) ($generated@@236 $generated@@552 ($generated@@483 $generated@@553))) (and (= ($generated@@280 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552)) $generated@@552) ($generated@@144 ($generated@@366 ($generated@@274 $generated@@157) $generated@@552) ($generated@@483 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 ($generated@@483 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@157 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@157) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@260 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@162 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@148) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@560) (and ($generated@@146 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@147 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@260 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@148) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@564) (and ($generated@@146 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@147 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@157) (= (type $generated@@567) $generated@@157)) (= ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)) ($generated@@138 ($generated@@235 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@235 ($generated@@138 $generated@@566) ($generated@@138 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))) ($generated@@138 ($generated@@280 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@135 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@280 ($generated@@138 $generated@@569)) ($generated@@138 ($generated@@280 $generated@@569)))
 :pattern ( ($generated@@280 ($generated@@138 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@275 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@274 $generated@@571)) (= ($generated@@273 $generated@@570) 0)) (= $generated@@570 ($generated@@272 $generated@@571))))
 :pattern ( ($generated@@273 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@285 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@434)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@157)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@274 $generated@@157)) (= (type $generated@@587) $generated@@64)) (= ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@273 $generated@@586))) ($generated@@236 ($generated@@484 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@484 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@144 $generated@@586 ($generated@@483 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@274 $generated@@157)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@273 $generated@@590))) (< ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@522 ($generated@@366 $generated@@148 ($generated@@484 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@293 $generated@@157 $generated@@157)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594))) (and (and ($generated@@144 ($generated@@291 $generated@@592) ($generated@@245 $generated@@593)) ($generated@@144 ($generated@@334 $generated@@592) ($generated@@245 $generated@@594))) ($generated@@144 ($generated@@365 $generated@@592) ($generated@@245 ($generated@@147 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@144 $generated@@592 ($generated@@394 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@311 $generated@@157 $generated@@157)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597))) (and (and ($generated@@144 ($generated@@309 $generated@@595) ($generated@@250 $generated@@596)) ($generated@@144 ($generated@@345 $generated@@595) ($generated@@250 $generated@@597))) ($generated@@144 ($generated@@376 $generated@@595) ($generated@@250 ($generated@@147 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@144 $generated@@595 ($generated@@402 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@144 $generated@@598 $generated@@46))
 :pattern ( ($generated@@144 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@144 $generated@@599 $generated@@47))
 :pattern ( ($generated@@144 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@144 $generated@@600 $generated@@44))
 :pattern ( ($generated@@144 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@434) ($generated@@144 $generated@@601 $generated@@45))
 :pattern ( ($generated@@144 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@157) ($generated@@144 $generated@@602 $generated@@48))
 :pattern ( ($generated@@144 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@606) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@607) $generated@@77)) (= (type $generated@@608) ($generated@@169 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@136)) (= (type $generated@@610) $generated@@136)) (= (type $generated@@611) $generated@@136)) (= (type $generated@@612) $generated@@136)) (= (type $generated@@613) $generated@@136)) (= (type $generated@@614) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@616  (=> (>= 0 $generated@@603) (=> (and (= $generated@@604 (+ $generated@@603 1)) ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@605)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 (- 1 $generated@@603)) (= (- 1 $generated@@604) (- 1 $generated@@603)))) (=> (or (<= 0 (- 1 $generated@@603)) (= (- 1 $generated@@604) (- 1 $generated@@603))) (=> (= (ControlFlow 0 4) (- 0 3)) (< (- 1 $generated@@604) (- 1 $generated@@603)))))))))
(let (($generated@@617 true))
(let (($generated@@618  (=> (= $generated@@606 ($generated@@223 $generated@@607 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@617) (=> (= (ControlFlow 0 6) 4) $generated@@616)))))
(let (($generated@@619 true))
(let (($generated@@620  (=> (= $generated@@608 ($generated@@168 $generated@@607 $generated@@605 $generated@@60 false)) (=> (and (= $generated@@609 ($generated@@134 $generated@@610)) (= $generated@@611 ($generated@@134 ($generated@@134 $generated@@610)))) (=> (and (and (= ($generated@@478 $generated@@610) $generated@@610) (= $generated@@612 ($generated@@134 $generated@@613))) (and (= $generated@@614 ($generated@@134 ($generated@@134 $generated@@613))) (= ($generated@@478 $generated@@613) $generated@@613))) (and (=> (= (ControlFlow 0 7) 1) $generated@@619) (=> (= (ControlFlow 0 7) 6) $generated@@618)))))))
(let (($generated@@621  (=> (and (and ($generated@@259 $generated@@605) ($generated@@615 $generated@@605)) (and (= 0 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@620)))
$generated@@621)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@139 (T@U Int) Int)
(declare-fun $generated@@140 (Int) Bool)
(declare-fun $generated@@143 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@205 (T@T) T@U)
(declare-fun $generated@@206 (T@U) Int)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@213 (T@U T@U T@U) Bool)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 () T@T)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@221 (T@T T@T) T@U)
(declare-fun $generated@@222 (T@T T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@T T@T) T@U)
(declare-fun $generated@@240 (T@T T@T) T@T)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@242 (T@T) T@T)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (T@U T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 () T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@U Int) T@U)
(declare-fun $generated@@348 (T@U) Int)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@393 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))) (forall (($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(= (type ($generated@@133 $generated@@135)) $generated@@136))
 :pattern ( ($generated@@133 $generated@@135))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@137 T@U) ($generated@@138 Int) ) (!  (=> (and (= (type $generated@@137) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@138)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@138 0))))) ($generated@@132 ($generated@@130 (- $generated@@138 1)))) (= ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)) (ite (< $generated@@138 0) 0 (+ 1 ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 (- $generated@@138 1))))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@141 T@U) ($generated@@142 Int) ) (!  (=> (and (= (type $generated@@141) $generated@@131) (or ($generated@@140 ($generated@@130 $generated@@142)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@142 0))))) ($generated@@140 ($generated@@130 (+ $generated@@142 1)))) (= ($generated@@139 ($generated@@129 $generated@@141) ($generated@@130 $generated@@142)) (ite (> $generated@@142 0) 0 (+ 1 ($generated@@139 ($generated@@129 $generated@@141) ($generated@@130 (+ $generated@@142 1))))))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@129 $generated@@141) ($generated@@130 $generated@@142)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (= ($generated@@1 ($generated@@145 $generated@@149 $generated@@150)) 13)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@146 ($generated@@145 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@147 ($generated@@145 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@145 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@147 (type $generated@@155))))
(= (type ($generated@@143 $generated@@155 $generated@@156 $generated@@157)) $generated@@158))
 :pattern ( ($generated@@143 $generated@@155 $generated@@156 $generated@@157))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 (type $generated@@162)))
(let (($generated@@164 (type $generated@@160)))
(= (type ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@162)) ($generated@@145 $generated@@164 $generated@@163))))
 :pattern ( ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@162))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 ($generated@@147 (type $generated@@165))))
 (=> (= (type $generated@@168) $generated@@169) (= ($generated@@143 ($generated@@148 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@166 $generated@@167) $generated@@168)))
 :weight 0
))) (and (and (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@143 ($generated@@148 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@143 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@143 ($generated@@148 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@143 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or true (= ($generated@@143 ($generated@@148 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@143 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ) (! (= (type ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@145 $generated@@72 $generated@@4))
 :pattern ( ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@64 (type $generated@@197))))
 (=> (and (and (and (and (= (type $generated@@192) $generated@@72) (= (type $generated@@193) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@194) ($generated@@63 $generated@@4))) (= (type $generated@@196) $generated@@72)) (= (type $generated@@197) ($generated@@63 $generated@@198))) (= ($generated@@0 ($generated@@143 ($generated@@144 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))  (=> (and (not (= $generated@@196 $generated@@192)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@193 $generated@@196) $generated@@194))) $generated@@195))))
 :pattern ( ($generated@@143 ($generated@@144 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@199 Int) ) (! (= ($generated@@130 $generated@@199) $generated@@199)
 :pattern ( ($generated@@130 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@133 $generated@@200) $generated@@200)
 :pattern ( ($generated@@133 $generated@@200))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@201 T@U) ($generated@@202 Int) ) (!  (=> (and (= (type $generated@@201) $generated@@131) (or ($generated@@132 $generated@@202) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@201 $generated@@202))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@203 T@U) ($generated@@204 Int) ) (!  (=> (and (= (type $generated@@203) $generated@@131) (or ($generated@@140 $generated@@204) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@139 $generated@@203 $generated@@204))
))))
(assert  (and (and (forall (($generated@@209 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@209)) 14)) (forall (($generated@@210 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@207 $generated@@210))
))) (forall (($generated@@211 T@T) ) (! (= (type ($generated@@205 $generated@@211)) ($generated@@207 $generated@@211))
 :pattern ( ($generated@@205 $generated@@211))
))))
(assert (forall (($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@212)) 0)
 :pattern ( ($generated@@205 $generated@@212))
)))
(assert  (and (= ($generated@@1 $generated@@215) 15) (forall (($generated@@216 T@U) ) (! (= (type ($generated@@214 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@214 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@61) (= (type $generated@@219) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@213 ($generated@@214 $generated@@217) $generated@@218 $generated@@219) ($generated@@69 $generated@@217 $generated@@218 $generated@@219)))
 :pattern ( ($generated@@213 ($generated@@214 $generated@@217) $generated@@218 $generated@@219))
)))
(assert  (and (and (and (and (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@1 ($generated@@222 $generated@@225 $generated@@226)) 16)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@223 ($generated@@222 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@222 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@224 ($generated@@222 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@222 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@223 (type $generated@@231))))
(= (type ($generated@@220 $generated@@231)) ($generated@@71 $generated@@232 $generated@@4)))
 :pattern ( ($generated@@220 $generated@@231))
))) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= (type ($generated@@221 $generated@@233 $generated@@234)) ($generated@@222 $generated@@233 $generated@@234))
 :pattern ( ($generated@@221 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@T) ) (! (let (($generated@@237 (type $generated@@235)))
 (not ($generated@@0 ($generated@@76 ($generated@@220 ($generated@@221 $generated@@237 $generated@@236)) $generated@@235))))
 :pattern ( (let (($generated@@237 (type $generated@@235)))
($generated@@76 ($generated@@220 ($generated@@221 $generated@@237 $generated@@236)) $generated@@235)))
)))
(assert  (and (and (and (and (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (= ($generated@@1 ($generated@@240 $generated@@243 $generated@@244)) 17)) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@241 ($generated@@240 $generated@@245 $generated@@246)) $generated@@245)
 :pattern ( ($generated@@240 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (! (= ($generated@@242 ($generated@@240 $generated@@247 $generated@@248)) $generated@@248)
 :pattern ( ($generated@@240 $generated@@247 $generated@@248))
))) (forall (($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@241 (type $generated@@249))))
(= (type ($generated@@238 $generated@@249)) ($generated@@71 $generated@@250 $generated@@4)))
 :pattern ( ($generated@@238 $generated@@249))
))) (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (! (= (type ($generated@@239 $generated@@251 $generated@@252)) ($generated@@240 $generated@@251 $generated@@252))
 :pattern ( ($generated@@239 $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@T) ) (! (let (($generated@@255 (type $generated@@253)))
 (not ($generated@@0 ($generated@@76 ($generated@@238 ($generated@@239 $generated@@255 $generated@@254)) $generated@@253))))
 :pattern ( (let (($generated@@255 (type $generated@@253)))
($generated@@76 ($generated@@238 ($generated@@239 $generated@@255 $generated@@254)) $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@224 (type $generated@@256))))
(let (($generated@@258 ($generated@@223 (type $generated@@256))))
 (=> (= (type $generated@@256) ($generated@@222 $generated@@258 $generated@@257)) (or (= $generated@@256 ($generated@@221 $generated@@258 $generated@@257)) (exists (($generated@@259 T@U) ) (!  (and (= (type $generated@@259) $generated@@258) ($generated@@0 ($generated@@76 ($generated@@220 $generated@@256) $generated@@259)))
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
))))))
 :pattern ( ($generated@@220 $generated@@256))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@242 (type $generated@@260))))
(let (($generated@@262 ($generated@@241 (type $generated@@260))))
 (=> (= (type $generated@@260) ($generated@@240 $generated@@262 $generated@@261)) (or (= $generated@@260 ($generated@@239 $generated@@262 $generated@@261)) (exists (($generated@@263 T@U) ) (!  (and (= (type $generated@@263) $generated@@262) ($generated@@0 ($generated@@76 ($generated@@238 $generated@@260) $generated@@263)))
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
))))))
 :pattern ( ($generated@@238 $generated@@260))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) ($generated@@71 $generated@@215 $generated@@4)) (= (type $generated@@267) $generated@@61)) (= (type $generated@@268) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@215) ($generated@@0 ($generated@@76 $generated@@266 $generated@@269))) ($generated@@213 $generated@@269 $generated@@267 $generated@@268))
 :pattern ( ($generated@@76 $generated@@266 $generated@@269))
))))
 :pattern ( ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@61)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@272) ($generated@@71 $generated@@215 $generated@@4)) (= (type $generated@@273) $generated@@61)) (= (type $generated@@274) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@272 ($generated@@270 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@215) ($generated@@0 ($generated@@76 $generated@@272 $generated@@275))) ($generated@@213 $generated@@275 $generated@@273 $generated@@274))
 :pattern ( ($generated@@76 $generated@@272 $generated@@275))
))))
 :pattern ( ($generated@@69 $generated@@272 ($generated@@270 $generated@@273) $generated@@274))
)))
(assert  (and (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@224 (type $generated@@280))))
(let (($generated@@282 ($generated@@223 (type $generated@@280))))
(= (type ($generated@@277 $generated@@280)) ($generated@@71 $generated@@282 $generated@@281))))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) ($generated@@222 $generated@@215 $generated@@215)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@215) ($generated@@0 ($generated@@76 ($generated@@220 $generated@@283) $generated@@287))) (and ($generated@@213 ($generated@@76 ($generated@@277 $generated@@283) $generated@@287) $generated@@285 $generated@@286) ($generated@@213 $generated@@287 $generated@@284 $generated@@286)))
 :pattern ( ($generated@@76 ($generated@@277 $generated@@283) $generated@@287))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@283) $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286))
)))
(assert  (and (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (= (type ($generated@@288 $generated@@290 $generated@@291)) $generated@@61)
 :pattern ( ($generated@@288 $generated@@290 $generated@@291))
)) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@242 (type $generated@@292))))
(let (($generated@@294 ($generated@@241 (type $generated@@292))))
(= (type ($generated@@289 $generated@@292)) ($generated@@71 $generated@@294 $generated@@293))))
 :pattern ( ($generated@@289 $generated@@292))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (= (type $generated@@295) ($generated@@240 $generated@@215 $generated@@215)) (= (type $generated@@296) $generated@@61)) (= (type $generated@@297) $generated@@61)) (= (type $generated@@298) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@295 ($generated@@288 $generated@@296 $generated@@297) $generated@@298) (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@215) ($generated@@0 ($generated@@76 ($generated@@238 $generated@@295) $generated@@299))) (and ($generated@@213 ($generated@@76 ($generated@@289 $generated@@295) $generated@@299) $generated@@297 $generated@@298) ($generated@@213 $generated@@299 $generated@@296 $generated@@298)))
 :pattern ( ($generated@@76 ($generated@@289 $generated@@295) $generated@@299))
 :pattern ( ($generated@@76 ($generated@@238 $generated@@295) $generated@@299))
))))
 :pattern ( ($generated@@69 $generated@@295 ($generated@@288 $generated@@296 $generated@@297) $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@71 $generated@@301 $generated@@4))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@242 (type $generated@@302))))
(let (($generated@@304 ($generated@@241 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@240 $generated@@304 $generated@@303)) (= (= $generated@@302 ($generated@@239 $generated@@304 $generated@@303)) (= ($generated@@238 $generated@@302) ($generated@@300 $generated@@304))))))
 :pattern ( ($generated@@238 $generated@@302))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@305 T@U) ($generated@@306 Int) ) (!  (=> (and (= (type $generated@@305) $generated@@131) (or ($generated@@132 $generated@@306) (not (= 0 $generated@@127)))) (and (=> (<= 0 $generated@@306) ($generated@@132 (- $generated@@306 1))) (= ($generated@@128 ($generated@@129 $generated@@305) $generated@@306) (ite (< $generated@@306 0) 0 (+ 1 ($generated@@128 $generated@@305 (- $generated@@306 1)))))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@305) $generated@@306))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@307 T@U) ($generated@@308 Int) ) (!  (=> (and (= (type $generated@@307) $generated@@131) (or ($generated@@140 $generated@@308) (not (= 0 $generated@@127)))) (and (=> (>= 0 $generated@@308) ($generated@@140 (+ $generated@@308 1))) (= ($generated@@139 ($generated@@129 $generated@@307) $generated@@308) (ite (> $generated@@308 0) 0 (+ 1 ($generated@@139 $generated@@307 (+ $generated@@308 1)))))))
 :pattern ( ($generated@@139 ($generated@@129 $generated@@307) $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@208 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@207 $generated@@310)) (<= 0 ($generated@@206 $generated@@309))))
 :pattern ( ($generated@@206 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@61)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@311 ($generated@@276 $generated@@313 $generated@@314)) $generated@@313))
 :pattern ( ($generated@@276 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@61) (= (type $generated@@318) $generated@@61)) (= ($generated@@315 ($generated@@276 $generated@@317 $generated@@318)) $generated@@318))
 :pattern ( ($generated@@276 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@67 ($generated@@276 $generated@@319 $generated@@320)) $generated@@58))
 :pattern ( ($generated@@276 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@61)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@61) (= (type $generated@@324) $generated@@61)) (= ($generated@@321 ($generated@@288 $generated@@323 $generated@@324)) $generated@@323))
 :pattern ( ($generated@@288 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@61)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@61) (= (type $generated@@328) $generated@@61)) (= ($generated@@325 ($generated@@288 $generated@@327 $generated@@328)) $generated@@328))
 :pattern ( ($generated@@288 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@67 ($generated@@288 $generated@@329 $generated@@330)) $generated@@59))
 :pattern ( ($generated@@288 $generated@@329 $generated@@330))
)))
(assert  (and (forall (($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@333)) $generated@@131)
 :pattern ( ($generated@@331 $generated@@333))
)) (= (type $generated@@332) $generated@@131)))
(assert (forall (($generated@@334 T@U) ($generated@@335 Int) ) (!  (=> (= (type $generated@@334) $generated@@131) (= ($generated@@128 $generated@@334 $generated@@335) ($generated@@128 $generated@@332 $generated@@335)))
 :pattern ( ($generated@@128 ($generated@@331 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 Int) ) (!  (=> (= (type $generated@@336) $generated@@131) (= ($generated@@139 $generated@@336 $generated@@337) ($generated@@139 $generated@@332 $generated@@337)))
 :pattern ( ($generated@@139 ($generated@@331 $generated@@336) $generated@@337))
)))
(assert  (and (forall (($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@340))
)) (forall (($generated@@341 T@U) ($generated@@342 Int) ) (! (let (($generated@@343 ($generated@@208 (type $generated@@341))))
(= (type ($generated@@339 $generated@@341 $generated@@342)) $generated@@343))
 :pattern ( ($generated@@339 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@344) ($generated@@207 $generated@@215)) (= (type $generated@@345) $generated@@61)) (= (type $generated@@346) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@344 ($generated@@338 $generated@@345) $generated@@346) (forall (($generated@@347 Int) ) (!  (=> (and (<= 0 $generated@@347) (< $generated@@347 ($generated@@206 $generated@@344))) ($generated@@213 ($generated@@339 $generated@@344 $generated@@347) $generated@@345 $generated@@346))
 :pattern ( ($generated@@339 $generated@@344 $generated@@347))
))))
 :pattern ( ($generated@@69 $generated@@344 ($generated@@338 $generated@@345) $generated@@346))
)))
(assert (forall (($generated@@349 Int) ) (! (= ($generated@@348 ($generated@@70 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@70 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (= (type ($generated@@350 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@350 ($generated@@264 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@264 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@67 ($generated@@264 $generated@@353)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@270 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@270 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@270 $generated@@357)) $generated@@55))
 :pattern ( ($generated@@270 $generated@@357))
)))
(assert  (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@358 $generated@@360))
)) (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@359 ($generated@@358 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@358 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@61) (= ($generated@@67 ($generated@@358 $generated@@363)) $generated@@56))
 :pattern ( ($generated@@358 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@364 ($generated@@338 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@338 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@338 $generated@@367)) $generated@@57))
 :pattern ( ($generated@@338 $generated@@367))
)))
(assert (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@368 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
(= ($generated@@368 $generated@@372 ($generated@@214 $generated@@371)) $generated@@371))
 :pattern ( ($generated@@214 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (= (type $generated@@373) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@373) $generated@@374) ($generated@@128 $generated@@373 $generated@@374)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 Int) ) (!  (=> (= (type $generated@@375) $generated@@131) (= ($generated@@139 ($generated@@129 $generated@@375) $generated@@376) ($generated@@139 $generated@@375 $generated@@376)))
 :pattern ( ($generated@@139 ($generated@@129 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
 (not ($generated@@0 ($generated@@76 ($generated@@300 $generated@@378) $generated@@377))))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@76 ($generated@@300 $generated@@378) $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@71 $generated@@215 $generated@@2)) (= (type $generated@@380) $generated@@61)) (= (type $generated@@381) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@379 ($generated@@358 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@215) (< 0 ($generated ($generated@@76 $generated@@379 $generated@@382)))) ($generated@@213 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@76 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@69 $generated@@379 ($generated@@358 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 Int) ) (! (= ($generated@@214 ($generated@@8 ($generated@@130 $generated@@383))) ($generated@@133 ($generated@@214 ($generated@@8 $generated@@383))))
 :pattern ( ($generated@@214 ($generated@@8 ($generated@@130 $generated@@383))))
)))
(assert (forall (($generated@@384 T@U) ) (! (= ($generated@@214 ($generated@@133 $generated@@384)) ($generated@@133 ($generated@@214 $generated@@384)))
 :pattern ( ($generated@@214 ($generated@@133 $generated@@384)))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@208 (type $generated@@385))))
 (=> (and (= (type $generated@@385) ($generated@@207 $generated@@386)) (= ($generated@@206 $generated@@385) 0)) (= $generated@@385 ($generated@@205 $generated@@386))))
 :pattern ( ($generated@@206 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@388) $generated@@2)) ($generated@@69 $generated@@388 $generated@@46 $generated@@387))
 :pattern ( ($generated@@69 $generated@@388 $generated@@46 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@390) $generated@@3)) ($generated@@69 $generated@@390 $generated@@47 $generated@@389))
 :pattern ( ($generated@@69 $generated@@390 $generated@@47 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@392) $generated@@4)) ($generated@@69 $generated@@392 $generated@@44 $generated@@391))
 :pattern ( ($generated@@69 $generated@@392 $generated@@44 $generated@@391))
)))
(assert (= ($generated@@1 $generated@@393) 18))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@395) $generated@@393)) ($generated@@69 $generated@@395 $generated@@45 $generated@@394))
 :pattern ( ($generated@@69 $generated@@395 $generated@@45 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@397) $generated@@215)) ($generated@@69 $generated@@397 $generated@@48 $generated@@396))
 :pattern ( ($generated@@69 $generated@@397 $generated@@48 $generated@@396))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@398 () T@U)
(declare-fun $generated@@399 () T@U)
(declare-fun $generated@@400 () T@U)
(declare-fun $generated@@401 () T@U)
(declare-fun $generated@@402 () T@U)
(declare-fun $generated@@403 () T@U)
(declare-fun $generated@@404 () T@U)
(declare-fun $generated@@405 () T@U)
(declare-fun $generated@@406 () T@U)
(declare-fun $generated@@407 () Int)
(declare-fun $generated@@408 () Int)
(declare-fun $generated@@409 () Int)
(declare-fun $generated@@410 () Int)
(declare-fun $generated@@411 (T@U) Bool)
(declare-fun $generated@@412 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@398) $generated@@131) (= (type $generated@@399) $generated@@131)) (= (type $generated@@400) $generated@@131)) (= (type $generated@@401) $generated@@131)) (= (type $generated@@402) $generated@@131)) (= (type $generated@@403) $generated@@131)) (= (type $generated@@404) ($generated@@145 $generated@@72 $generated@@4))) (= (type $generated@@405) $generated@@72)) (= (type $generated@@406) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@413  (=> (and (= $generated@@398 ($generated@@129 $generated@@399)) (= $generated@@400 ($generated@@129 ($generated@@129 $generated@@399)))) (=> (and (and (= ($generated@@331 $generated@@399) $generated@@399) (= $generated@@401 ($generated@@129 $generated@@402))) (and (= $generated@@403 ($generated@@129 ($generated@@129 $generated@@402))) (= ($generated@@331 $generated@@402) $generated@@402))) (=> (and (and (and (= $generated@@404 ($generated@@144 $generated@@405 $generated@@406 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@407) $generated@@46 $generated@@406)) (and ($generated@@132 $generated@@407) (= $generated@@408 (- $generated@@407 3)))) (and (and ($generated@@69 ($generated@@8 $generated@@408) $generated@@46 $generated@@406) ($generated@@132 (- $generated@@407 3))) (and ($generated@@132 $generated@@407) ($generated@@132 (- $generated@@407 3))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@128 $generated@@400 $generated@@407) (+ 3 ($generated@@128 $generated@@400 (- $generated@@407 3))))) (=> (and (= ($generated@@128 $generated@@398 $generated@@407) (+ 3 ($generated@@128 $generated@@398 (- $generated@@407 3)))) ($generated@@69 ($generated@@8 $generated@@409) $generated@@46 $generated@@406)) (=> (and (and (and ($generated@@140 $generated@@409) (= $generated@@410 (+ $generated@@409 3))) (and ($generated@@69 ($generated@@8 $generated@@410) $generated@@46 $generated@@406) ($generated@@140 (+ $generated@@409 3)))) (and (and ($generated@@140 $generated@@409) ($generated@@140 (+ $generated@@409 3))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@139 $generated@@403 $generated@@409) (+ 3 ($generated@@139 $generated@@403 (+ $generated@@409 3))))))))))))
(let (($generated@@414  (=> (and ($generated@@411 $generated@@406) ($generated@@412 $generated@@406)) (=> (and (and (= 1 $generated@@127) (> $generated@@407 5)) (and (< $generated@@409 5) (= (ControlFlow 0 4) 2))) $generated@@413))))
$generated@@414)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@139 (T@U Int) Int)
(declare-fun $generated@@140 (Int) Bool)
(declare-fun $generated@@143 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@205 (T@T) T@U)
(declare-fun $generated@@206 (T@U) Int)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@213 (T@U T@U T@U) Bool)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 () T@T)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@221 (T@T T@T) T@U)
(declare-fun $generated@@222 (T@T T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@T T@T) T@U)
(declare-fun $generated@@240 (T@T T@T) T@T)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@242 (T@T) T@T)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (T@U T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 () T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@U Int) T@U)
(declare-fun $generated@@348 (T@U) Int)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@393 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))) (forall (($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(= (type ($generated@@133 $generated@@135)) $generated@@136))
 :pattern ( ($generated@@133 $generated@@135))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@137 T@U) ($generated@@138 Int) ) (!  (=> (and (= (type $generated@@137) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@138)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (< $generated@@138 0))))) ($generated@@132 ($generated@@130 (- $generated@@138 1)))) (= ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)) (ite (< $generated@@138 0) 0 (+ 1 ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 (- $generated@@138 1))))))))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@137) ($generated@@130 $generated@@138)))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@141 T@U) ($generated@@142 Int) ) (!  (=> (and (= (type $generated@@141) $generated@@131) (or ($generated@@140 ($generated@@130 $generated@@142)) (not (= 0 $generated@@127)))) (and (=> (not ($generated@@0 ($generated@@133 ($generated@@11 (> $generated@@142 0))))) ($generated@@140 ($generated@@130 (+ $generated@@142 1)))) (= ($generated@@139 ($generated@@129 $generated@@141) ($generated@@130 $generated@@142)) (ite (> $generated@@142 0) 0 (+ 1 ($generated@@139 ($generated@@129 $generated@@141) ($generated@@130 (+ $generated@@142 1))))))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@129 $generated@@141) ($generated@@130 $generated@@142)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (= ($generated@@1 ($generated@@145 $generated@@149 $generated@@150)) 13)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@146 ($generated@@145 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@147 ($generated@@145 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@145 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@147 (type $generated@@155))))
(= (type ($generated@@143 $generated@@155 $generated@@156 $generated@@157)) $generated@@158))
 :pattern ( ($generated@@143 $generated@@155 $generated@@156 $generated@@157))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 (type $generated@@162)))
(let (($generated@@164 (type $generated@@160)))
(= (type ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@162)) ($generated@@145 $generated@@164 $generated@@163))))
 :pattern ( ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@162))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (let (($generated@@169 ($generated@@147 (type $generated@@165))))
 (=> (= (type $generated@@168) $generated@@169) (= ($generated@@143 ($generated@@148 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@166 $generated@@167) $generated@@168)))
 :weight 0
))) (and (and (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@143 ($generated@@148 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@143 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@143 ($generated@@148 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@143 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or true (= ($generated@@143 ($generated@@148 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@143 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ) (! (= (type ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@145 $generated@@72 $generated@@4))
 :pattern ( ($generated@@144 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@64 (type $generated@@197))))
 (=> (and (and (and (and (= (type $generated@@192) $generated@@72) (= (type $generated@@193) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@194) ($generated@@63 $generated@@4))) (= (type $generated@@196) $generated@@72)) (= (type $generated@@197) ($generated@@63 $generated@@198))) (= ($generated@@0 ($generated@@143 ($generated@@144 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))  (=> (and (not (= $generated@@196 $generated@@192)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@193 $generated@@196) $generated@@194))) $generated@@195))))
 :pattern ( ($generated@@143 ($generated@@144 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@199 Int) ) (! (= ($generated@@130 $generated@@199) $generated@@199)
 :pattern ( ($generated@@130 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@133 $generated@@200) $generated@@200)
 :pattern ( ($generated@@133 $generated@@200))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@201 T@U) ($generated@@202 Int) ) (!  (=> (and (= (type $generated@@201) $generated@@131) (or ($generated@@132 $generated@@202) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@201 $generated@@202))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@203 T@U) ($generated@@204 Int) ) (!  (=> (and (= (type $generated@@203) $generated@@131) (or ($generated@@140 $generated@@204) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@139 $generated@@203 $generated@@204))
))))
(assert  (and (and (forall (($generated@@209 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@209)) 14)) (forall (($generated@@210 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@207 $generated@@210))
))) (forall (($generated@@211 T@T) ) (! (= (type ($generated@@205 $generated@@211)) ($generated@@207 $generated@@211))
 :pattern ( ($generated@@205 $generated@@211))
))))
(assert (forall (($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@212)) 0)
 :pattern ( ($generated@@205 $generated@@212))
)))
(assert  (and (= ($generated@@1 $generated@@215) 15) (forall (($generated@@216 T@U) ) (! (= (type ($generated@@214 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@214 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@61) (= (type $generated@@219) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@213 ($generated@@214 $generated@@217) $generated@@218 $generated@@219) ($generated@@69 $generated@@217 $generated@@218 $generated@@219)))
 :pattern ( ($generated@@213 ($generated@@214 $generated@@217) $generated@@218 $generated@@219))
)))
(assert  (and (and (and (and (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@1 ($generated@@222 $generated@@225 $generated@@226)) 16)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@223 ($generated@@222 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@222 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@224 ($generated@@222 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@222 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@223 (type $generated@@231))))
(= (type ($generated@@220 $generated@@231)) ($generated@@71 $generated@@232 $generated@@4)))
 :pattern ( ($generated@@220 $generated@@231))
))) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= (type ($generated@@221 $generated@@233 $generated@@234)) ($generated@@222 $generated@@233 $generated@@234))
 :pattern ( ($generated@@221 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@T) ) (! (let (($generated@@237 (type $generated@@235)))
 (not ($generated@@0 ($generated@@76 ($generated@@220 ($generated@@221 $generated@@237 $generated@@236)) $generated@@235))))
 :pattern ( (let (($generated@@237 (type $generated@@235)))
($generated@@76 ($generated@@220 ($generated@@221 $generated@@237 $generated@@236)) $generated@@235)))
)))
(assert  (and (and (and (and (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (= ($generated@@1 ($generated@@240 $generated@@243 $generated@@244)) 17)) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@241 ($generated@@240 $generated@@245 $generated@@246)) $generated@@245)
 :pattern ( ($generated@@240 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (! (= ($generated@@242 ($generated@@240 $generated@@247 $generated@@248)) $generated@@248)
 :pattern ( ($generated@@240 $generated@@247 $generated@@248))
))) (forall (($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@241 (type $generated@@249))))
(= (type ($generated@@238 $generated@@249)) ($generated@@71 $generated@@250 $generated@@4)))
 :pattern ( ($generated@@238 $generated@@249))
))) (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (! (= (type ($generated@@239 $generated@@251 $generated@@252)) ($generated@@240 $generated@@251 $generated@@252))
 :pattern ( ($generated@@239 $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@T) ) (! (let (($generated@@255 (type $generated@@253)))
 (not ($generated@@0 ($generated@@76 ($generated@@238 ($generated@@239 $generated@@255 $generated@@254)) $generated@@253))))
 :pattern ( (let (($generated@@255 (type $generated@@253)))
($generated@@76 ($generated@@238 ($generated@@239 $generated@@255 $generated@@254)) $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@224 (type $generated@@256))))
(let (($generated@@258 ($generated@@223 (type $generated@@256))))
 (=> (= (type $generated@@256) ($generated@@222 $generated@@258 $generated@@257)) (or (= $generated@@256 ($generated@@221 $generated@@258 $generated@@257)) (exists (($generated@@259 T@U) ) (!  (and (= (type $generated@@259) $generated@@258) ($generated@@0 ($generated@@76 ($generated@@220 $generated@@256) $generated@@259)))
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
))))))
 :pattern ( ($generated@@220 $generated@@256))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@242 (type $generated@@260))))
(let (($generated@@262 ($generated@@241 (type $generated@@260))))
 (=> (= (type $generated@@260) ($generated@@240 $generated@@262 $generated@@261)) (or (= $generated@@260 ($generated@@239 $generated@@262 $generated@@261)) (exists (($generated@@263 T@U) ) (!  (and (= (type $generated@@263) $generated@@262) ($generated@@0 ($generated@@76 ($generated@@238 $generated@@260) $generated@@263)))
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
))))))
 :pattern ( ($generated@@238 $generated@@260))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) ($generated@@71 $generated@@215 $generated@@4)) (= (type $generated@@267) $generated@@61)) (= (type $generated@@268) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@215) ($generated@@0 ($generated@@76 $generated@@266 $generated@@269))) ($generated@@213 $generated@@269 $generated@@267 $generated@@268))
 :pattern ( ($generated@@76 $generated@@266 $generated@@269))
))))
 :pattern ( ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@61)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@272) ($generated@@71 $generated@@215 $generated@@4)) (= (type $generated@@273) $generated@@61)) (= (type $generated@@274) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@272 ($generated@@270 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@215) ($generated@@0 ($generated@@76 $generated@@272 $generated@@275))) ($generated@@213 $generated@@275 $generated@@273 $generated@@274))
 :pattern ( ($generated@@76 $generated@@272 $generated@@275))
))))
 :pattern ( ($generated@@69 $generated@@272 ($generated@@270 $generated@@273) $generated@@274))
)))
(assert  (and (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@224 (type $generated@@280))))
(let (($generated@@282 ($generated@@223 (type $generated@@280))))
(= (type ($generated@@277 $generated@@280)) ($generated@@71 $generated@@282 $generated@@281))))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) ($generated@@222 $generated@@215 $generated@@215)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@215) ($generated@@0 ($generated@@76 ($generated@@220 $generated@@283) $generated@@287))) (and ($generated@@213 ($generated@@76 ($generated@@277 $generated@@283) $generated@@287) $generated@@285 $generated@@286) ($generated@@213 $generated@@287 $generated@@284 $generated@@286)))
 :pattern ( ($generated@@76 ($generated@@277 $generated@@283) $generated@@287))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@283) $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286))
)))
(assert  (and (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (= (type ($generated@@288 $generated@@290 $generated@@291)) $generated@@61)
 :pattern ( ($generated@@288 $generated@@290 $generated@@291))
)) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@242 (type $generated@@292))))
(let (($generated@@294 ($generated@@241 (type $generated@@292))))
(= (type ($generated@@289 $generated@@292)) ($generated@@71 $generated@@294 $generated@@293))))
 :pattern ( ($generated@@289 $generated@@292))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (= (type $generated@@295) ($generated@@240 $generated@@215 $generated@@215)) (= (type $generated@@296) $generated@@61)) (= (type $generated@@297) $generated@@61)) (= (type $generated@@298) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@295 ($generated@@288 $generated@@296 $generated@@297) $generated@@298) (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@215) ($generated@@0 ($generated@@76 ($generated@@238 $generated@@295) $generated@@299))) (and ($generated@@213 ($generated@@76 ($generated@@289 $generated@@295) $generated@@299) $generated@@297 $generated@@298) ($generated@@213 $generated@@299 $generated@@296 $generated@@298)))
 :pattern ( ($generated@@76 ($generated@@289 $generated@@295) $generated@@299))
 :pattern ( ($generated@@76 ($generated@@238 $generated@@295) $generated@@299))
))))
 :pattern ( ($generated@@69 $generated@@295 ($generated@@288 $generated@@296 $generated@@297) $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@71 $generated@@301 $generated@@4))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@242 (type $generated@@302))))
(let (($generated@@304 ($generated@@241 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@240 $generated@@304 $generated@@303)) (= (= $generated@@302 ($generated@@239 $generated@@304 $generated@@303)) (= ($generated@@238 $generated@@302) ($generated@@300 $generated@@304))))))
 :pattern ( ($generated@@238 $generated@@302))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@305 T@U) ($generated@@306 Int) ) (!  (=> (and (= (type $generated@@305) $generated@@131) (or ($generated@@132 $generated@@306) (not (= 0 $generated@@127)))) (and (=> (<= 0 $generated@@306) ($generated@@132 (- $generated@@306 1))) (= ($generated@@128 ($generated@@129 $generated@@305) $generated@@306) (ite (< $generated@@306 0) 0 (+ 1 ($generated@@128 $generated@@305 (- $generated@@306 1)))))))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@305) $generated@@306))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@307 T@U) ($generated@@308 Int) ) (!  (=> (and (= (type $generated@@307) $generated@@131) (or ($generated@@140 $generated@@308) (not (= 0 $generated@@127)))) (and (=> (>= 0 $generated@@308) ($generated@@140 (+ $generated@@308 1))) (= ($generated@@139 ($generated@@129 $generated@@307) $generated@@308) (ite (> $generated@@308 0) 0 (+ 1 ($generated@@139 $generated@@307 (+ $generated@@308 1)))))))
 :pattern ( ($generated@@139 ($generated@@129 $generated@@307) $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@208 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@207 $generated@@310)) (<= 0 ($generated@@206 $generated@@309))))
 :pattern ( ($generated@@206 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@61)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@311 ($generated@@276 $generated@@313 $generated@@314)) $generated@@313))
 :pattern ( ($generated@@276 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@61) (= (type $generated@@318) $generated@@61)) (= ($generated@@315 ($generated@@276 $generated@@317 $generated@@318)) $generated@@318))
 :pattern ( ($generated@@276 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@67 ($generated@@276 $generated@@319 $generated@@320)) $generated@@58))
 :pattern ( ($generated@@276 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@61)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@61) (= (type $generated@@324) $generated@@61)) (= ($generated@@321 ($generated@@288 $generated@@323 $generated@@324)) $generated@@323))
 :pattern ( ($generated@@288 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@61)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@61) (= (type $generated@@328) $generated@@61)) (= ($generated@@325 ($generated@@288 $generated@@327 $generated@@328)) $generated@@328))
 :pattern ( ($generated@@288 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@67 ($generated@@288 $generated@@329 $generated@@330)) $generated@@59))
 :pattern ( ($generated@@288 $generated@@329 $generated@@330))
)))
(assert  (and (forall (($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@333)) $generated@@131)
 :pattern ( ($generated@@331 $generated@@333))
)) (= (type $generated@@332) $generated@@131)))
(assert (forall (($generated@@334 T@U) ($generated@@335 Int) ) (!  (=> (= (type $generated@@334) $generated@@131) (= ($generated@@128 $generated@@334 $generated@@335) ($generated@@128 $generated@@332 $generated@@335)))
 :pattern ( ($generated@@128 ($generated@@331 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 Int) ) (!  (=> (= (type $generated@@336) $generated@@131) (= ($generated@@139 $generated@@336 $generated@@337) ($generated@@139 $generated@@332 $generated@@337)))
 :pattern ( ($generated@@139 ($generated@@331 $generated@@336) $generated@@337))
)))
(assert  (and (forall (($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@340))
)) (forall (($generated@@341 T@U) ($generated@@342 Int) ) (! (let (($generated@@343 ($generated@@208 (type $generated@@341))))
(= (type ($generated@@339 $generated@@341 $generated@@342)) $generated@@343))
 :pattern ( ($generated@@339 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@344) ($generated@@207 $generated@@215)) (= (type $generated@@345) $generated@@61)) (= (type $generated@@346) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@344 ($generated@@338 $generated@@345) $generated@@346) (forall (($generated@@347 Int) ) (!  (=> (and (<= 0 $generated@@347) (< $generated@@347 ($generated@@206 $generated@@344))) ($generated@@213 ($generated@@339 $generated@@344 $generated@@347) $generated@@345 $generated@@346))
 :pattern ( ($generated@@339 $generated@@344 $generated@@347))
))))
 :pattern ( ($generated@@69 $generated@@344 ($generated@@338 $generated@@345) $generated@@346))
)))
(assert (forall (($generated@@349 Int) ) (! (= ($generated@@348 ($generated@@70 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@70 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (= (type ($generated@@350 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@350 ($generated@@264 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@264 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@67 ($generated@@264 $generated@@353)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@270 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@270 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@270 $generated@@357)) $generated@@55))
 :pattern ( ($generated@@270 $generated@@357))
)))
(assert  (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@358 $generated@@360))
)) (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@359 ($generated@@358 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@358 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@61) (= ($generated@@67 ($generated@@358 $generated@@363)) $generated@@56))
 :pattern ( ($generated@@358 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@364 ($generated@@338 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@338 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@338 $generated@@367)) $generated@@57))
 :pattern ( ($generated@@338 $generated@@367))
)))
(assert (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@368 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
(= ($generated@@368 $generated@@372 ($generated@@214 $generated@@371)) $generated@@371))
 :pattern ( ($generated@@214 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (= (type $generated@@373) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@373) $generated@@374) ($generated@@128 $generated@@373 $generated@@374)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 Int) ) (!  (=> (= (type $generated@@375) $generated@@131) (= ($generated@@139 ($generated@@129 $generated@@375) $generated@@376) ($generated@@139 $generated@@375 $generated@@376)))
 :pattern ( ($generated@@139 ($generated@@129 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
 (not ($generated@@0 ($generated@@76 ($generated@@300 $generated@@378) $generated@@377))))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@76 ($generated@@300 $generated@@378) $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@71 $generated@@215 $generated@@2)) (= (type $generated@@380) $generated@@61)) (= (type $generated@@381) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@379 ($generated@@358 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@215) (< 0 ($generated ($generated@@76 $generated@@379 $generated@@382)))) ($generated@@213 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@76 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@69 $generated@@379 ($generated@@358 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 Int) ) (! (= ($generated@@214 ($generated@@8 ($generated@@130 $generated@@383))) ($generated@@133 ($generated@@214 ($generated@@8 $generated@@383))))
 :pattern ( ($generated@@214 ($generated@@8 ($generated@@130 $generated@@383))))
)))
(assert (forall (($generated@@384 T@U) ) (! (= ($generated@@214 ($generated@@133 $generated@@384)) ($generated@@133 ($generated@@214 $generated@@384)))
 :pattern ( ($generated@@214 ($generated@@133 $generated@@384)))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@208 (type $generated@@385))))
 (=> (and (= (type $generated@@385) ($generated@@207 $generated@@386)) (= ($generated@@206 $generated@@385) 0)) (= $generated@@385 ($generated@@205 $generated@@386))))
 :pattern ( ($generated@@206 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@388) $generated@@2)) ($generated@@69 $generated@@388 $generated@@46 $generated@@387))
 :pattern ( ($generated@@69 $generated@@388 $generated@@46 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@390) $generated@@3)) ($generated@@69 $generated@@390 $generated@@47 $generated@@389))
 :pattern ( ($generated@@69 $generated@@390 $generated@@47 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@392) $generated@@4)) ($generated@@69 $generated@@392 $generated@@44 $generated@@391))
 :pattern ( ($generated@@69 $generated@@392 $generated@@44 $generated@@391))
)))
(assert (= ($generated@@1 $generated@@393) 18))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@395) $generated@@393)) ($generated@@69 $generated@@395 $generated@@45 $generated@@394))
 :pattern ( ($generated@@69 $generated@@395 $generated@@45 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@397) $generated@@215)) ($generated@@69 $generated@@397 $generated@@48 $generated@@396))
 :pattern ( ($generated@@69 $generated@@397 $generated@@48 $generated@@396))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@398 () T@U)
(declare-fun $generated@@399 () T@U)
(declare-fun $generated@@400 () T@U)
(declare-fun $generated@@401 () T@U)
(declare-fun $generated@@402 () T@U)
(declare-fun $generated@@403 () T@U)
(declare-fun $generated@@404 () T@U)
(declare-fun $generated@@405 () T@U)
(declare-fun $generated@@406 () T@U)
(declare-fun $generated@@407 () Int)
(declare-fun $generated@@408 () Int)
(declare-fun $generated@@409 () Int)
(declare-fun $generated@@410 () Int)
(declare-fun $generated@@411 (T@U) Bool)
(declare-fun $generated@@412 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@398) $generated@@131) (= (type $generated@@399) $generated@@131)) (= (type $generated@@400) $generated@@131)) (= (type $generated@@401) $generated@@131)) (= (type $generated@@402) $generated@@131)) (= (type $generated@@403) $generated@@131)) (= (type $generated@@404) ($generated@@145 $generated@@72 $generated@@4))) (= (type $generated@@405) $generated@@72)) (= (type $generated@@406) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@413  (=> (and (= $generated@@398 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@399)))) (= $generated@@400 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@399)))))) (=> (and (and (= ($generated@@331 $generated@@399) $generated@@399) (= $generated@@401 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@402)))))) (and (= $generated@@403 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@402)))))) (= ($generated@@331 $generated@@402) $generated@@402))) (=> (and (and (and (= $generated@@404 ($generated@@144 $generated@@405 $generated@@406 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@407) $generated@@46 $generated@@406)) (and ($generated@@132 $generated@@407) (= $generated@@408 (- $generated@@407 3)))) (and (and ($generated@@69 ($generated@@8 $generated@@408) $generated@@46 $generated@@406) ($generated@@132 (- $generated@@407 3))) (and ($generated@@132 $generated@@407) ($generated@@132 (- $generated@@407 3))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@128 $generated@@400 $generated@@407) (+ 3 ($generated@@128 $generated@@400 (- $generated@@407 3))))) (=> (and (= ($generated@@128 $generated@@400 $generated@@407) (+ 3 ($generated@@128 $generated@@400 (- $generated@@407 3)))) ($generated@@69 ($generated@@8 $generated@@409) $generated@@46 $generated@@406)) (=> (and (and (and ($generated@@140 $generated@@409) (= $generated@@410 (+ $generated@@409 3))) (and ($generated@@69 ($generated@@8 $generated@@410) $generated@@46 $generated@@406) ($generated@@140 (+ $generated@@409 3)))) (and (and ($generated@@140 $generated@@409) ($generated@@140 (+ $generated@@409 3))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@139 $generated@@403 $generated@@409) (+ 3 ($generated@@139 $generated@@403 (+ $generated@@409 3))))))))))))
(let (($generated@@414  (=> (and ($generated@@411 $generated@@406) ($generated@@412 $generated@@406)) (=> (and (and (= 1 $generated@@127) (> $generated@@407 5)) (and (< $generated@@409 (- 0 5)) (= (ControlFlow 0 4) 2))) $generated@@413))))
$generated@@414)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (Int Int) Int)
(declare-fun $generated@@137 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T) T@T)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@141 (T@T) T@T)
(declare-fun $generated@@142 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@200 (T@T) T@U)
(declare-fun $generated@@201 (T@U) Int)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@208 (T@U T@U T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@210 () T@T)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@T T@T) T@U)
(declare-fun $generated@@217 (T@T T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@219 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 (T@T T@T) T@U)
(declare-fun $generated@@235 (T@T T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@283 (T@U T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 () T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@U Int) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@384 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@135 T@U) ($generated@@136 Int) ) (!  (=> (and (= (type $generated@@135) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@136)) (not (= 0 $generated@@127)))) (= ($generated@@128 ($generated@@129 $generated@@135) ($generated@@130 $generated@@136)) (ite (< $generated@@136 0) ($generated@@133 ($generated@@130 (- 0 1)) ($generated@@130 $generated@@136)) $generated@@136)))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@135) ($generated@@130 $generated@@136)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (= ($generated@@1 ($generated@@139 $generated@@143 $generated@@144)) 13)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@140 ($generated@@139 $generated@@145 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@139 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@141 ($generated@@139 $generated@@147 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@139 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (let (($generated@@152 ($generated@@141 (type $generated@@149))))
(= (type ($generated@@137 $generated@@149 $generated@@150 $generated@@151)) $generated@@152))
 :pattern ( ($generated@@137 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 (type $generated@@156)))
(let (($generated@@158 (type $generated@@154)))
(= (type ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@156)) ($generated@@139 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@156))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 ($generated@@141 (type $generated@@159))))
 (=> (= (type $generated@@162) $generated@@163) (= ($generated@@137 ($generated@@142 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@160 $generated@@161) $generated@@162)))
 :weight 0
))) (and (and (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@137 ($generated@@142 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@137 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@173 $generated@@175) (= ($generated@@137 ($generated@@142 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@137 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or true (= ($generated@@137 ($generated@@142 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@137 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Bool) ) (! (= (type ($generated@@138 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@139 $generated@@72 $generated@@4))
 :pattern ( ($generated@@138 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Bool) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@64 (type $generated@@191))))
 (=> (and (and (and (and (= (type $generated@@186) $generated@@72) (= (type $generated@@187) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@188) ($generated@@63 $generated@@4))) (= (type $generated@@190) $generated@@72)) (= (type $generated@@191) ($generated@@63 $generated@@192))) (= ($generated@@0 ($generated@@137 ($generated@@138 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))  (=> (and (not (= $generated@@190 $generated@@186)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@187 $generated@@190) $generated@@188))) $generated@@189))))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@130 $generated@@193) $generated@@193)
 :pattern ( ($generated@@130 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(= (type ($generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@194 $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@194 $generated@@197) $generated@@197)
 :pattern ( ($generated@@194 $generated@@197))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@198 T@U) ($generated@@199 Int) ) (!  (=> (and (= (type $generated@@198) $generated@@131) (or ($generated@@132 $generated@@199) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@198 $generated@@199))
))))
(assert  (and (and (forall (($generated@@204 T@T) ) (= ($generated@@1 ($generated@@202 $generated@@204)) 14)) (forall (($generated@@205 T@T) ) (! (= ($generated@@203 ($generated@@202 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@202 $generated@@205))
))) (forall (($generated@@206 T@T) ) (! (= (type ($generated@@200 $generated@@206)) ($generated@@202 $generated@@206))
 :pattern ( ($generated@@200 $generated@@206))
))))
(assert (forall (($generated@@207 T@T) ) (! (= ($generated@@201 ($generated@@200 $generated@@207)) 0)
 :pattern ( ($generated@@200 $generated@@207))
)))
(assert  (and (= ($generated@@1 $generated@@210) 15) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@209 $generated@@211)) $generated@@210)
 :pattern ( ($generated@@209 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@61) (= (type $generated@@214) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@208 ($generated@@209 $generated@@212) $generated@@213 $generated@@214) ($generated@@69 $generated@@212 $generated@@213 $generated@@214)))
 :pattern ( ($generated@@208 ($generated@@209 $generated@@212) $generated@@213 $generated@@214))
)))
(assert  (and (and (and (and (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (= ($generated@@1 ($generated@@217 $generated@@220 $generated@@221)) 16)) (forall (($generated@@222 T@T) ($generated@@223 T@T) ) (! (= ($generated@@218 ($generated@@217 $generated@@222 $generated@@223)) $generated@@222)
 :pattern ( ($generated@@217 $generated@@222 $generated@@223))
))) (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (! (= ($generated@@219 ($generated@@217 $generated@@224 $generated@@225)) $generated@@225)
 :pattern ( ($generated@@217 $generated@@224 $generated@@225))
))) (forall (($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@218 (type $generated@@226))))
(= (type ($generated@@215 $generated@@226)) ($generated@@71 $generated@@227 $generated@@4)))
 :pattern ( ($generated@@215 $generated@@226))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= (type ($generated@@216 $generated@@228 $generated@@229)) ($generated@@217 $generated@@228 $generated@@229))
 :pattern ( ($generated@@216 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@T) ) (! (let (($generated@@232 (type $generated@@230)))
 (not ($generated@@0 ($generated@@76 ($generated@@215 ($generated@@216 $generated@@232 $generated@@231)) $generated@@230))))
 :pattern ( (let (($generated@@232 (type $generated@@230)))
($generated@@76 ($generated@@215 ($generated@@216 $generated@@232 $generated@@231)) $generated@@230)))
)))
(assert  (and (and (and (and (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (= ($generated@@1 ($generated@@235 $generated@@238 $generated@@239)) 17)) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= ($generated@@236 ($generated@@235 $generated@@240 $generated@@241)) $generated@@240)
 :pattern ( ($generated@@235 $generated@@240 $generated@@241))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= ($generated@@237 ($generated@@235 $generated@@242 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@235 $generated@@242 $generated@@243))
))) (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@236 (type $generated@@244))))
(= (type ($generated@@233 $generated@@244)) ($generated@@71 $generated@@245 $generated@@4)))
 :pattern ( ($generated@@233 $generated@@244))
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= (type ($generated@@234 $generated@@246 $generated@@247)) ($generated@@235 $generated@@246 $generated@@247))
 :pattern ( ($generated@@234 $generated@@246 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@T) ) (! (let (($generated@@250 (type $generated@@248)))
 (not ($generated@@0 ($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248))))
 :pattern ( (let (($generated@@250 (type $generated@@248)))
($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@219 (type $generated@@251))))
(let (($generated@@253 ($generated@@218 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@217 $generated@@253 $generated@@252)) (or (= $generated@@251 ($generated@@216 $generated@@253 $generated@@252)) (exists (($generated@@254 T@U) ) (!  (and (= (type $generated@@254) $generated@@253) ($generated@@0 ($generated@@76 ($generated@@215 $generated@@251) $generated@@254)))
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
))))))
 :pattern ( ($generated@@215 $generated@@251))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@237 (type $generated@@255))))
(let (($generated@@257 ($generated@@236 (type $generated@@255))))
 (=> (= (type $generated@@255) ($generated@@235 $generated@@257 $generated@@256)) (or (= $generated@@255 ($generated@@234 $generated@@257 $generated@@256)) (exists (($generated@@258 T@U) ) (!  (and (= (type $generated@@258) $generated@@257) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@255) $generated@@258)))
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
))))))
 :pattern ( ($generated@@233 $generated@@255))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@61)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@261) ($generated@@71 $generated@@210 $generated@@4)) (= (type $generated@@262) $generated@@61)) (= (type $generated@@263) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@261 ($generated@@259 $generated@@262) $generated@@263) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@210) ($generated@@0 ($generated@@76 $generated@@261 $generated@@264))) ($generated@@208 $generated@@264 $generated@@262 $generated@@263))
 :pattern ( ($generated@@76 $generated@@261 $generated@@264))
))))
 :pattern ( ($generated@@69 $generated@@261 ($generated@@259 $generated@@262) $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@61)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (= (type $generated@@267) ($generated@@71 $generated@@210 $generated@@4)) (= (type $generated@@268) $generated@@61)) (= (type $generated@@269) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@210) ($generated@@0 ($generated@@76 $generated@@267 $generated@@270))) ($generated@@208 $generated@@270 $generated@@268 $generated@@269))
 :pattern ( ($generated@@76 $generated@@267 $generated@@270))
))))
 :pattern ( ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269))
)))
(assert  (and (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (! (= (type ($generated@@271 $generated@@273 $generated@@274)) $generated@@61)
 :pattern ( ($generated@@271 $generated@@273 $generated@@274))
)) (forall (($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@219 (type $generated@@275))))
(let (($generated@@277 ($generated@@218 (type $generated@@275))))
(= (type ($generated@@272 $generated@@275)) ($generated@@71 $generated@@277 $generated@@276))))
 :pattern ( ($generated@@272 $generated@@275))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (= (type $generated@@278) ($generated@@217 $generated@@210 $generated@@210)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@278 ($generated@@271 $generated@@279 $generated@@280) $generated@@281) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@210) ($generated@@0 ($generated@@76 ($generated@@215 $generated@@278) $generated@@282))) (and ($generated@@208 ($generated@@76 ($generated@@272 $generated@@278) $generated@@282) $generated@@280 $generated@@281) ($generated@@208 $generated@@282 $generated@@279 $generated@@281)))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@278) $generated@@282))
 :pattern ( ($generated@@76 ($generated@@215 $generated@@278) $generated@@282))
))))
 :pattern ( ($generated@@69 $generated@@278 ($generated@@271 $generated@@279 $generated@@280) $generated@@281))
)))
(assert  (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (= (type ($generated@@283 $generated@@285 $generated@@286)) $generated@@61)
 :pattern ( ($generated@@283 $generated@@285 $generated@@286))
)) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@237 (type $generated@@287))))
(let (($generated@@289 ($generated@@236 (type $generated@@287))))
(= (type ($generated@@284 $generated@@287)) ($generated@@71 $generated@@289 $generated@@288))))
 :pattern ( ($generated@@284 $generated@@287))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (= (type $generated@@290) ($generated@@235 $generated@@210 $generated@@210)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) $generated@@61)) (= (type $generated@@293) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@210) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@290) $generated@@294))) (and ($generated@@208 ($generated@@76 ($generated@@284 $generated@@290) $generated@@294) $generated@@292 $generated@@293) ($generated@@208 $generated@@294 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@76 ($generated@@284 $generated@@290) $generated@@294))
 :pattern ( ($generated@@76 ($generated@@233 $generated@@290) $generated@@294))
))))
 :pattern ( ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@71 $generated@@296 $generated@@4))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@237 (type $generated@@297))))
(let (($generated@@299 ($generated@@236 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@235 $generated@@299 $generated@@298)) (= (= $generated@@297 ($generated@@234 $generated@@299 $generated@@298)) (= ($generated@@233 $generated@@297) ($generated@@295 $generated@@299))))))
 :pattern ( ($generated@@233 $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@203 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@202 $generated@@301)) (<= 0 ($generated@@201 $generated@@300))))
 :pattern ( ($generated@@201 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@61)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@61) (= (type $generated@@305) $generated@@61)) (= ($generated@@302 ($generated@@271 $generated@@304 $generated@@305)) $generated@@304))
 :pattern ( ($generated@@271 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@61) (= (type $generated@@309) $generated@@61)) (= ($generated@@306 ($generated@@271 $generated@@308 $generated@@309)) $generated@@309))
 :pattern ( ($generated@@271 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@61) (= (type $generated@@311) $generated@@61)) (= ($generated@@67 ($generated@@271 $generated@@310 $generated@@311)) $generated@@58))
 :pattern ( ($generated@@271 $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@61)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@61) (= (type $generated@@315) $generated@@61)) (= ($generated@@312 ($generated@@283 $generated@@314 $generated@@315)) $generated@@314))
 :pattern ( ($generated@@283 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@61) (= (type $generated@@319) $generated@@61)) (= ($generated@@316 ($generated@@283 $generated@@318 $generated@@319)) $generated@@319))
 :pattern ( ($generated@@283 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@61) (= (type $generated@@321) $generated@@61)) (= ($generated@@67 ($generated@@283 $generated@@320 $generated@@321)) $generated@@59))
 :pattern ( ($generated@@283 $generated@@320 $generated@@321))
)))
(assert  (and (forall (($generated@@324 T@U) ) (! (= (type ($generated@@322 $generated@@324)) $generated@@131)
 :pattern ( ($generated@@322 $generated@@324))
)) (= (type $generated@@323) $generated@@131)))
(assert (forall (($generated@@325 T@U) ($generated@@326 Int) ) (!  (=> (= (type $generated@@325) $generated@@131) (= ($generated@@128 $generated@@325 $generated@@326) ($generated@@128 $generated@@323 $generated@@326)))
 :pattern ( ($generated@@128 ($generated@@322 $generated@@325) $generated@@326))
)))
(assert  (and (forall (($generated@@329 T@U) ) (! (= (type ($generated@@327 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@329))
)) (forall (($generated@@330 T@U) ($generated@@331 Int) ) (! (let (($generated@@332 ($generated@@203 (type $generated@@330))))
(= (type ($generated@@328 $generated@@330 $generated@@331)) $generated@@332))
 :pattern ( ($generated@@328 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@202 $generated@@210)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@327 $generated@@334) $generated@@335) (forall (($generated@@336 Int) ) (!  (=> (and (<= 0 $generated@@336) (< $generated@@336 ($generated@@201 $generated@@333))) ($generated@@208 ($generated@@328 $generated@@333 $generated@@336) $generated@@334 $generated@@335))
 :pattern ( ($generated@@328 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@327 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@338 Int) ) (! (= ($generated@@337 ($generated@@70 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@70 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@61) (= ($generated@@339 ($generated@@259 $generated@@341)) $generated@@341))
 :pattern ( ($generated@@259 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@67 ($generated@@259 $generated@@342)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@343 ($generated@@265 $generated@@345)) $generated@@345))
 :pattern ( ($generated@@265 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@67 ($generated@@265 $generated@@346)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@346))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) $generated@@61)
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@61) (= ($generated@@348 ($generated@@347 $generated@@351)) $generated@@351))
 :pattern ( ($generated@@347 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@67 ($generated@@347 $generated@@352)) $generated@@56))
 :pattern ( ($generated@@347 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (= (type ($generated@@353 $generated@@354)) $generated@@61)
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@61) (= ($generated@@353 ($generated@@327 $generated@@355)) $generated@@355))
 :pattern ( ($generated@@327 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@67 ($generated@@327 $generated@@356)) $generated@@57))
 :pattern ( ($generated@@327 $generated@@356))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated@@357 $generated@@361 ($generated@@209 $generated@@360)) $generated@@360))
 :pattern ( ($generated@@209 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 Int) ) (!  (=> (= (type $generated@@362) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@362) $generated@@363) ($generated@@128 $generated@@362 $generated@@363)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
 (not ($generated@@0 ($generated@@76 ($generated@@295 $generated@@365) $generated@@364))))
 :pattern ( (let (($generated@@365 (type $generated@@364)))
($generated@@76 ($generated@@295 $generated@@365) $generated@@364)))
)))
(assert (forall (($generated@@366 Int) ($generated@@367 Int) ) (! (= ($generated@@133 $generated@@366 $generated@@367) (* $generated@@366 $generated@@367))
 :pattern ( ($generated@@133 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@71 $generated@@210 $generated@@2)) (= (type $generated@@369) $generated@@61)) (= (type $generated@@370) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@368 ($generated@@347 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@210) (< 0 ($generated ($generated@@76 $generated@@368 $generated@@371)))) ($generated@@208 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@76 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@69 $generated@@368 ($generated@@347 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 Int) ) (! (= ($generated@@209 ($generated@@8 ($generated@@130 $generated@@372))) ($generated@@194 ($generated@@209 ($generated@@8 $generated@@372))))
 :pattern ( ($generated@@209 ($generated@@8 ($generated@@130 $generated@@372))))
)))
(assert (forall (($generated@@373 T@U) ) (! (= ($generated@@209 ($generated@@194 $generated@@373)) ($generated@@194 ($generated@@209 $generated@@373)))
 :pattern ( ($generated@@209 ($generated@@194 $generated@@373)))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@203 (type $generated@@374))))
 (=> (and (= (type $generated@@374) ($generated@@202 $generated@@375)) (= ($generated@@201 $generated@@374) 0)) (= $generated@@374 ($generated@@200 $generated@@375))))
 :pattern ( ($generated@@201 $generated@@374))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@376 T@U) ($generated@@377 Int) ) (!  (=> (and (= (type $generated@@376) $generated@@131) (or ($generated@@132 $generated@@377) (not (= 0 $generated@@127)))) (= ($generated@@128 ($generated@@129 $generated@@376) $generated@@377) (ite (< $generated@@377 0) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@377) $generated@@377)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@376) $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@379) $generated@@2)) ($generated@@69 $generated@@379 $generated@@46 $generated@@378))
 :pattern ( ($generated@@69 $generated@@379 $generated@@46 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@381) $generated@@3)) ($generated@@69 $generated@@381 $generated@@47 $generated@@380))
 :pattern ( ($generated@@69 $generated@@381 $generated@@47 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@4)) ($generated@@69 $generated@@383 $generated@@44 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@44 $generated@@382))
)))
(assert (= ($generated@@1 $generated@@384) 18))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@386) $generated@@384)) ($generated@@69 $generated@@386 $generated@@45 $generated@@385))
 :pattern ( ($generated@@69 $generated@@386 $generated@@45 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@388) $generated@@210)) ($generated@@69 $generated@@388 $generated@@48 $generated@@387))
 :pattern ( ($generated@@69 $generated@@388 $generated@@48 $generated@@387))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () T@U)
(declare-fun $generated@@392 () T@U)
(declare-fun $generated@@393 () T@U)
(declare-fun $generated@@394 () T@U)
(declare-fun $generated@@395 () Int)
(declare-fun $generated@@396 () Int)
(declare-fun $generated@@397 () Int)
(declare-fun $generated@@398 (T@U) Bool)
(declare-fun $generated@@399 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@389) $generated@@131) (= (type $generated@@390) $generated@@131)) (= (type $generated@@391) $generated@@131)) (= (type $generated@@392) ($generated@@139 $generated@@72 $generated@@4))) (= (type $generated@@393) $generated@@72)) (= (type $generated@@394) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@400  (=> (= $generated@@389 ($generated@@129 $generated@@390)) (=> (and (= $generated@@391 ($generated@@129 ($generated@@129 $generated@@390))) (= ($generated@@322 $generated@@390) $generated@@390)) (=> (and (and (= $generated@@392 ($generated@@138 $generated@@393 $generated@@394 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@395) $generated@@46 $generated@@394)) (and ($generated@@132 $generated@@395) ($generated@@132 $generated@@395))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@128 $generated@@391 $generated@@395) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@395))) (=> (and (and (= ($generated@@128 $generated@@389 $generated@@395) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@395)) ($generated@@69 ($generated@@8 $generated@@396) $generated@@46 $generated@@394)) (and ($generated@@132 $generated@@396) ($generated@@132 $generated@@396))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@128 $generated@@391 $generated@@396) $generated@@396)) (=> (and (= ($generated@@128 $generated@@389 $generated@@396) $generated@@396) (= $generated@@397 ($generated@@130 (- 0 1)))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@397) $generated@@46 $generated@@394) ($generated@@132 ($generated@@130 (- 0 1)))) (and ($generated@@132 ($generated@@130 (- 0 1))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@130 ($generated@@128 $generated@@391 ($generated@@130 (- 0 1)))) ($generated@@130 1))))))))))))
(let (($generated@@401  (=> (and ($generated@@398 $generated@@394) ($generated@@399 $generated@@394)) (=> (and (and (= 1 $generated@@127) (> $generated@@396 5)) (and (< $generated@@395 0) (= (ControlFlow 0 5) 2))) $generated@@400))))
$generated@@401)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (Int Int) Int)
(declare-fun $generated@@137 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T) T@T)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@141 (T@T) T@T)
(declare-fun $generated@@142 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@200 (T@T) T@U)
(declare-fun $generated@@201 (T@U) Int)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@208 (T@U T@U T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@210 () T@T)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@T T@T) T@U)
(declare-fun $generated@@217 (T@T T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@219 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 (T@T T@T) T@U)
(declare-fun $generated@@235 (T@T T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@283 (T@U T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 () T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@U Int) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@384 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@135 T@U) ($generated@@136 Int) ) (!  (=> (and (= (type $generated@@135) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@136)) (not (= 0 $generated@@127)))) (= ($generated@@128 ($generated@@129 $generated@@135) ($generated@@130 $generated@@136)) (ite (< $generated@@136 0) ($generated@@133 ($generated@@130 (- 0 1)) ($generated@@130 $generated@@136)) $generated@@136)))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@135) ($generated@@130 $generated@@136)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (= ($generated@@1 ($generated@@139 $generated@@143 $generated@@144)) 13)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@140 ($generated@@139 $generated@@145 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@139 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@141 ($generated@@139 $generated@@147 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@139 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (let (($generated@@152 ($generated@@141 (type $generated@@149))))
(= (type ($generated@@137 $generated@@149 $generated@@150 $generated@@151)) $generated@@152))
 :pattern ( ($generated@@137 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 (type $generated@@156)))
(let (($generated@@158 (type $generated@@154)))
(= (type ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@156)) ($generated@@139 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@156))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 ($generated@@141 (type $generated@@159))))
 (=> (= (type $generated@@162) $generated@@163) (= ($generated@@137 ($generated@@142 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@160 $generated@@161) $generated@@162)))
 :weight 0
))) (and (and (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@137 ($generated@@142 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@137 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@173 $generated@@175) (= ($generated@@137 ($generated@@142 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@137 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or true (= ($generated@@137 ($generated@@142 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@137 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Bool) ) (! (= (type ($generated@@138 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@139 $generated@@72 $generated@@4))
 :pattern ( ($generated@@138 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Bool) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@64 (type $generated@@191))))
 (=> (and (and (and (and (= (type $generated@@186) $generated@@72) (= (type $generated@@187) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@188) ($generated@@63 $generated@@4))) (= (type $generated@@190) $generated@@72)) (= (type $generated@@191) ($generated@@63 $generated@@192))) (= ($generated@@0 ($generated@@137 ($generated@@138 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))  (=> (and (not (= $generated@@190 $generated@@186)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@187 $generated@@190) $generated@@188))) $generated@@189))))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@130 $generated@@193) $generated@@193)
 :pattern ( ($generated@@130 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(= (type ($generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@194 $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@194 $generated@@197) $generated@@197)
 :pattern ( ($generated@@194 $generated@@197))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@198 T@U) ($generated@@199 Int) ) (!  (=> (and (= (type $generated@@198) $generated@@131) (or ($generated@@132 $generated@@199) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@198 $generated@@199))
))))
(assert  (and (and (forall (($generated@@204 T@T) ) (= ($generated@@1 ($generated@@202 $generated@@204)) 14)) (forall (($generated@@205 T@T) ) (! (= ($generated@@203 ($generated@@202 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@202 $generated@@205))
))) (forall (($generated@@206 T@T) ) (! (= (type ($generated@@200 $generated@@206)) ($generated@@202 $generated@@206))
 :pattern ( ($generated@@200 $generated@@206))
))))
(assert (forall (($generated@@207 T@T) ) (! (= ($generated@@201 ($generated@@200 $generated@@207)) 0)
 :pattern ( ($generated@@200 $generated@@207))
)))
(assert  (and (= ($generated@@1 $generated@@210) 15) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@209 $generated@@211)) $generated@@210)
 :pattern ( ($generated@@209 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@61) (= (type $generated@@214) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@208 ($generated@@209 $generated@@212) $generated@@213 $generated@@214) ($generated@@69 $generated@@212 $generated@@213 $generated@@214)))
 :pattern ( ($generated@@208 ($generated@@209 $generated@@212) $generated@@213 $generated@@214))
)))
(assert  (and (and (and (and (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (= ($generated@@1 ($generated@@217 $generated@@220 $generated@@221)) 16)) (forall (($generated@@222 T@T) ($generated@@223 T@T) ) (! (= ($generated@@218 ($generated@@217 $generated@@222 $generated@@223)) $generated@@222)
 :pattern ( ($generated@@217 $generated@@222 $generated@@223))
))) (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (! (= ($generated@@219 ($generated@@217 $generated@@224 $generated@@225)) $generated@@225)
 :pattern ( ($generated@@217 $generated@@224 $generated@@225))
))) (forall (($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@218 (type $generated@@226))))
(= (type ($generated@@215 $generated@@226)) ($generated@@71 $generated@@227 $generated@@4)))
 :pattern ( ($generated@@215 $generated@@226))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= (type ($generated@@216 $generated@@228 $generated@@229)) ($generated@@217 $generated@@228 $generated@@229))
 :pattern ( ($generated@@216 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@T) ) (! (let (($generated@@232 (type $generated@@230)))
 (not ($generated@@0 ($generated@@76 ($generated@@215 ($generated@@216 $generated@@232 $generated@@231)) $generated@@230))))
 :pattern ( (let (($generated@@232 (type $generated@@230)))
($generated@@76 ($generated@@215 ($generated@@216 $generated@@232 $generated@@231)) $generated@@230)))
)))
(assert  (and (and (and (and (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (= ($generated@@1 ($generated@@235 $generated@@238 $generated@@239)) 17)) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= ($generated@@236 ($generated@@235 $generated@@240 $generated@@241)) $generated@@240)
 :pattern ( ($generated@@235 $generated@@240 $generated@@241))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= ($generated@@237 ($generated@@235 $generated@@242 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@235 $generated@@242 $generated@@243))
))) (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@236 (type $generated@@244))))
(= (type ($generated@@233 $generated@@244)) ($generated@@71 $generated@@245 $generated@@4)))
 :pattern ( ($generated@@233 $generated@@244))
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= (type ($generated@@234 $generated@@246 $generated@@247)) ($generated@@235 $generated@@246 $generated@@247))
 :pattern ( ($generated@@234 $generated@@246 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@T) ) (! (let (($generated@@250 (type $generated@@248)))
 (not ($generated@@0 ($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248))))
 :pattern ( (let (($generated@@250 (type $generated@@248)))
($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@219 (type $generated@@251))))
(let (($generated@@253 ($generated@@218 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@217 $generated@@253 $generated@@252)) (or (= $generated@@251 ($generated@@216 $generated@@253 $generated@@252)) (exists (($generated@@254 T@U) ) (!  (and (= (type $generated@@254) $generated@@253) ($generated@@0 ($generated@@76 ($generated@@215 $generated@@251) $generated@@254)))
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
))))))
 :pattern ( ($generated@@215 $generated@@251))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@237 (type $generated@@255))))
(let (($generated@@257 ($generated@@236 (type $generated@@255))))
 (=> (= (type $generated@@255) ($generated@@235 $generated@@257 $generated@@256)) (or (= $generated@@255 ($generated@@234 $generated@@257 $generated@@256)) (exists (($generated@@258 T@U) ) (!  (and (= (type $generated@@258) $generated@@257) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@255) $generated@@258)))
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
))))))
 :pattern ( ($generated@@233 $generated@@255))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@61)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@261) ($generated@@71 $generated@@210 $generated@@4)) (= (type $generated@@262) $generated@@61)) (= (type $generated@@263) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@261 ($generated@@259 $generated@@262) $generated@@263) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@210) ($generated@@0 ($generated@@76 $generated@@261 $generated@@264))) ($generated@@208 $generated@@264 $generated@@262 $generated@@263))
 :pattern ( ($generated@@76 $generated@@261 $generated@@264))
))))
 :pattern ( ($generated@@69 $generated@@261 ($generated@@259 $generated@@262) $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@61)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (= (type $generated@@267) ($generated@@71 $generated@@210 $generated@@4)) (= (type $generated@@268) $generated@@61)) (= (type $generated@@269) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@210) ($generated@@0 ($generated@@76 $generated@@267 $generated@@270))) ($generated@@208 $generated@@270 $generated@@268 $generated@@269))
 :pattern ( ($generated@@76 $generated@@267 $generated@@270))
))))
 :pattern ( ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269))
)))
(assert  (and (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (! (= (type ($generated@@271 $generated@@273 $generated@@274)) $generated@@61)
 :pattern ( ($generated@@271 $generated@@273 $generated@@274))
)) (forall (($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@219 (type $generated@@275))))
(let (($generated@@277 ($generated@@218 (type $generated@@275))))
(= (type ($generated@@272 $generated@@275)) ($generated@@71 $generated@@277 $generated@@276))))
 :pattern ( ($generated@@272 $generated@@275))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (= (type $generated@@278) ($generated@@217 $generated@@210 $generated@@210)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@278 ($generated@@271 $generated@@279 $generated@@280) $generated@@281) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@210) ($generated@@0 ($generated@@76 ($generated@@215 $generated@@278) $generated@@282))) (and ($generated@@208 ($generated@@76 ($generated@@272 $generated@@278) $generated@@282) $generated@@280 $generated@@281) ($generated@@208 $generated@@282 $generated@@279 $generated@@281)))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@278) $generated@@282))
 :pattern ( ($generated@@76 ($generated@@215 $generated@@278) $generated@@282))
))))
 :pattern ( ($generated@@69 $generated@@278 ($generated@@271 $generated@@279 $generated@@280) $generated@@281))
)))
(assert  (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (= (type ($generated@@283 $generated@@285 $generated@@286)) $generated@@61)
 :pattern ( ($generated@@283 $generated@@285 $generated@@286))
)) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@237 (type $generated@@287))))
(let (($generated@@289 ($generated@@236 (type $generated@@287))))
(= (type ($generated@@284 $generated@@287)) ($generated@@71 $generated@@289 $generated@@288))))
 :pattern ( ($generated@@284 $generated@@287))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (= (type $generated@@290) ($generated@@235 $generated@@210 $generated@@210)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) $generated@@61)) (= (type $generated@@293) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@210) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@290) $generated@@294))) (and ($generated@@208 ($generated@@76 ($generated@@284 $generated@@290) $generated@@294) $generated@@292 $generated@@293) ($generated@@208 $generated@@294 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@76 ($generated@@284 $generated@@290) $generated@@294))
 :pattern ( ($generated@@76 ($generated@@233 $generated@@290) $generated@@294))
))))
 :pattern ( ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@71 $generated@@296 $generated@@4))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@237 (type $generated@@297))))
(let (($generated@@299 ($generated@@236 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@235 $generated@@299 $generated@@298)) (= (= $generated@@297 ($generated@@234 $generated@@299 $generated@@298)) (= ($generated@@233 $generated@@297) ($generated@@295 $generated@@299))))))
 :pattern ( ($generated@@233 $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@203 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@202 $generated@@301)) (<= 0 ($generated@@201 $generated@@300))))
 :pattern ( ($generated@@201 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@61)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@61) (= (type $generated@@305) $generated@@61)) (= ($generated@@302 ($generated@@271 $generated@@304 $generated@@305)) $generated@@304))
 :pattern ( ($generated@@271 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@61) (= (type $generated@@309) $generated@@61)) (= ($generated@@306 ($generated@@271 $generated@@308 $generated@@309)) $generated@@309))
 :pattern ( ($generated@@271 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@61) (= (type $generated@@311) $generated@@61)) (= ($generated@@67 ($generated@@271 $generated@@310 $generated@@311)) $generated@@58))
 :pattern ( ($generated@@271 $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@61)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@61) (= (type $generated@@315) $generated@@61)) (= ($generated@@312 ($generated@@283 $generated@@314 $generated@@315)) $generated@@314))
 :pattern ( ($generated@@283 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@61) (= (type $generated@@319) $generated@@61)) (= ($generated@@316 ($generated@@283 $generated@@318 $generated@@319)) $generated@@319))
 :pattern ( ($generated@@283 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@61) (= (type $generated@@321) $generated@@61)) (= ($generated@@67 ($generated@@283 $generated@@320 $generated@@321)) $generated@@59))
 :pattern ( ($generated@@283 $generated@@320 $generated@@321))
)))
(assert  (and (forall (($generated@@324 T@U) ) (! (= (type ($generated@@322 $generated@@324)) $generated@@131)
 :pattern ( ($generated@@322 $generated@@324))
)) (= (type $generated@@323) $generated@@131)))
(assert (forall (($generated@@325 T@U) ($generated@@326 Int) ) (!  (=> (= (type $generated@@325) $generated@@131) (= ($generated@@128 $generated@@325 $generated@@326) ($generated@@128 $generated@@323 $generated@@326)))
 :pattern ( ($generated@@128 ($generated@@322 $generated@@325) $generated@@326))
)))
(assert  (and (forall (($generated@@329 T@U) ) (! (= (type ($generated@@327 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@329))
)) (forall (($generated@@330 T@U) ($generated@@331 Int) ) (! (let (($generated@@332 ($generated@@203 (type $generated@@330))))
(= (type ($generated@@328 $generated@@330 $generated@@331)) $generated@@332))
 :pattern ( ($generated@@328 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@202 $generated@@210)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@327 $generated@@334) $generated@@335) (forall (($generated@@336 Int) ) (!  (=> (and (<= 0 $generated@@336) (< $generated@@336 ($generated@@201 $generated@@333))) ($generated@@208 ($generated@@328 $generated@@333 $generated@@336) $generated@@334 $generated@@335))
 :pattern ( ($generated@@328 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@327 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@338 Int) ) (! (= ($generated@@337 ($generated@@70 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@70 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@61) (= ($generated@@339 ($generated@@259 $generated@@341)) $generated@@341))
 :pattern ( ($generated@@259 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@67 ($generated@@259 $generated@@342)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@343 ($generated@@265 $generated@@345)) $generated@@345))
 :pattern ( ($generated@@265 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@67 ($generated@@265 $generated@@346)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@346))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) $generated@@61)
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@61) (= ($generated@@348 ($generated@@347 $generated@@351)) $generated@@351))
 :pattern ( ($generated@@347 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@67 ($generated@@347 $generated@@352)) $generated@@56))
 :pattern ( ($generated@@347 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (= (type ($generated@@353 $generated@@354)) $generated@@61)
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@61) (= ($generated@@353 ($generated@@327 $generated@@355)) $generated@@355))
 :pattern ( ($generated@@327 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@67 ($generated@@327 $generated@@356)) $generated@@57))
 :pattern ( ($generated@@327 $generated@@356))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated@@357 $generated@@361 ($generated@@209 $generated@@360)) $generated@@360))
 :pattern ( ($generated@@209 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 Int) ) (!  (=> (= (type $generated@@362) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@362) $generated@@363) ($generated@@128 $generated@@362 $generated@@363)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
 (not ($generated@@0 ($generated@@76 ($generated@@295 $generated@@365) $generated@@364))))
 :pattern ( (let (($generated@@365 (type $generated@@364)))
($generated@@76 ($generated@@295 $generated@@365) $generated@@364)))
)))
(assert (forall (($generated@@366 Int) ($generated@@367 Int) ) (! (= ($generated@@133 $generated@@366 $generated@@367) (* $generated@@366 $generated@@367))
 :pattern ( ($generated@@133 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@71 $generated@@210 $generated@@2)) (= (type $generated@@369) $generated@@61)) (= (type $generated@@370) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@368 ($generated@@347 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@210) (< 0 ($generated ($generated@@76 $generated@@368 $generated@@371)))) ($generated@@208 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@76 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@69 $generated@@368 ($generated@@347 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 Int) ) (! (= ($generated@@209 ($generated@@8 ($generated@@130 $generated@@372))) ($generated@@194 ($generated@@209 ($generated@@8 $generated@@372))))
 :pattern ( ($generated@@209 ($generated@@8 ($generated@@130 $generated@@372))))
)))
(assert (forall (($generated@@373 T@U) ) (! (= ($generated@@209 ($generated@@194 $generated@@373)) ($generated@@194 ($generated@@209 $generated@@373)))
 :pattern ( ($generated@@209 ($generated@@194 $generated@@373)))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@203 (type $generated@@374))))
 (=> (and (= (type $generated@@374) ($generated@@202 $generated@@375)) (= ($generated@@201 $generated@@374) 0)) (= $generated@@374 ($generated@@200 $generated@@375))))
 :pattern ( ($generated@@201 $generated@@374))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@376 T@U) ($generated@@377 Int) ) (!  (=> (and (= (type $generated@@376) $generated@@131) (or ($generated@@132 $generated@@377) (not (= 0 $generated@@127)))) (= ($generated@@128 ($generated@@129 $generated@@376) $generated@@377) (ite (< $generated@@377 0) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@377) $generated@@377)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@376) $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@379) $generated@@2)) ($generated@@69 $generated@@379 $generated@@46 $generated@@378))
 :pattern ( ($generated@@69 $generated@@379 $generated@@46 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@381) $generated@@3)) ($generated@@69 $generated@@381 $generated@@47 $generated@@380))
 :pattern ( ($generated@@69 $generated@@381 $generated@@47 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@4)) ($generated@@69 $generated@@383 $generated@@44 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@44 $generated@@382))
)))
(assert (= ($generated@@1 $generated@@384) 18))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@386) $generated@@384)) ($generated@@69 $generated@@386 $generated@@45 $generated@@385))
 :pattern ( ($generated@@69 $generated@@386 $generated@@45 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@388) $generated@@210)) ($generated@@69 $generated@@388 $generated@@48 $generated@@387))
 :pattern ( ($generated@@69 $generated@@388 $generated@@48 $generated@@387))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () T@U)
(declare-fun $generated@@392 () T@U)
(declare-fun $generated@@393 () T@U)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 () Int)
(declare-fun $generated@@396 () Int)
(declare-fun $generated@@397 (T@U) Bool)
(declare-fun $generated@@398 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@389) $generated@@131) (= (type $generated@@390) $generated@@131)) (= (type $generated@@391) ($generated@@139 $generated@@72 $generated@@4))) (= (type $generated@@392) $generated@@72)) (= (type $generated@@393) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@399  (=> (and (= ($generated@@322 $generated@@389) $generated@@389) (= ($generated@@322 $generated@@390) $generated@@390)) (=> (and (and (= $generated@@391 ($generated@@138 $generated@@392 $generated@@393 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@394) $generated@@46 $generated@@393)) (and ($generated@@132 $generated@@394) ($generated@@132 $generated@@394))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@128 $generated@@390 $generated@@394) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@394))) (=> (and (and (= ($generated@@128 $generated@@389 $generated@@394) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@394)) ($generated@@69 ($generated@@8 $generated@@395) $generated@@46 $generated@@393)) (and ($generated@@132 $generated@@395) ($generated@@132 $generated@@395))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@128 $generated@@390 $generated@@395) $generated@@395)) (=> (and (= ($generated@@128 $generated@@389 $generated@@395) $generated@@395) (= $generated@@396 ($generated@@130 (- 0 1)))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@396) $generated@@46 $generated@@393) ($generated@@132 ($generated@@130 (- 0 1)))) (and ($generated@@132 ($generated@@130 (- 0 1))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@130 ($generated@@128 $generated@@390 ($generated@@130 (- 0 1)))) ($generated@@130 1)))))))))))
(let (($generated@@400  (=> (and ($generated@@397 $generated@@393) ($generated@@398 $generated@@393)) (=> (and (and (= 1 $generated@@127) (> $generated@@395 5)) (and (< $generated@@394 0) (= (ControlFlow 0 5) 2))) $generated@@399))))
$generated@@400)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (Int Int) Int)
(declare-fun $generated@@137 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T) T@T)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@141 (T@T) T@T)
(declare-fun $generated@@142 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@200 (T@T) T@U)
(declare-fun $generated@@201 (T@U) Int)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@208 (T@U T@U T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@210 () T@T)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@T T@T) T@U)
(declare-fun $generated@@217 (T@T T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@219 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 (T@T T@T) T@U)
(declare-fun $generated@@235 (T@T T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@283 (T@U T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 () T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@U Int) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@384 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@135 T@U) ($generated@@136 Int) ) (!  (=> (and (= (type $generated@@135) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@136)) (not (= 0 $generated@@127)))) (= ($generated@@128 ($generated@@129 $generated@@135) ($generated@@130 $generated@@136)) (ite (< $generated@@136 0) ($generated@@133 ($generated@@130 (- 0 1)) ($generated@@130 $generated@@136)) $generated@@136)))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@135) ($generated@@130 $generated@@136)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (= ($generated@@1 ($generated@@139 $generated@@143 $generated@@144)) 13)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@140 ($generated@@139 $generated@@145 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@139 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@141 ($generated@@139 $generated@@147 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@139 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (let (($generated@@152 ($generated@@141 (type $generated@@149))))
(= (type ($generated@@137 $generated@@149 $generated@@150 $generated@@151)) $generated@@152))
 :pattern ( ($generated@@137 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 (type $generated@@156)))
(let (($generated@@158 (type $generated@@154)))
(= (type ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@156)) ($generated@@139 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@156))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 ($generated@@141 (type $generated@@159))))
 (=> (= (type $generated@@162) $generated@@163) (= ($generated@@137 ($generated@@142 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@160 $generated@@161) $generated@@162)))
 :weight 0
))) (and (and (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@137 ($generated@@142 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@137 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@173 $generated@@175) (= ($generated@@137 ($generated@@142 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@137 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or true (= ($generated@@137 ($generated@@142 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@137 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Bool) ) (! (= (type ($generated@@138 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@139 $generated@@72 $generated@@4))
 :pattern ( ($generated@@138 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Bool) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@64 (type $generated@@191))))
 (=> (and (and (and (and (= (type $generated@@186) $generated@@72) (= (type $generated@@187) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@188) ($generated@@63 $generated@@4))) (= (type $generated@@190) $generated@@72)) (= (type $generated@@191) ($generated@@63 $generated@@192))) (= ($generated@@0 ($generated@@137 ($generated@@138 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))  (=> (and (not (= $generated@@190 $generated@@186)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@187 $generated@@190) $generated@@188))) $generated@@189))))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@130 $generated@@193) $generated@@193)
 :pattern ( ($generated@@130 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(= (type ($generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@194 $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@194 $generated@@197) $generated@@197)
 :pattern ( ($generated@@194 $generated@@197))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@198 T@U) ($generated@@199 Int) ) (!  (=> (and (= (type $generated@@198) $generated@@131) (or ($generated@@132 $generated@@199) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@198 $generated@@199))
))))
(assert  (and (and (forall (($generated@@204 T@T) ) (= ($generated@@1 ($generated@@202 $generated@@204)) 14)) (forall (($generated@@205 T@T) ) (! (= ($generated@@203 ($generated@@202 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@202 $generated@@205))
))) (forall (($generated@@206 T@T) ) (! (= (type ($generated@@200 $generated@@206)) ($generated@@202 $generated@@206))
 :pattern ( ($generated@@200 $generated@@206))
))))
(assert (forall (($generated@@207 T@T) ) (! (= ($generated@@201 ($generated@@200 $generated@@207)) 0)
 :pattern ( ($generated@@200 $generated@@207))
)))
(assert  (and (= ($generated@@1 $generated@@210) 15) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@209 $generated@@211)) $generated@@210)
 :pattern ( ($generated@@209 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@61) (= (type $generated@@214) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@208 ($generated@@209 $generated@@212) $generated@@213 $generated@@214) ($generated@@69 $generated@@212 $generated@@213 $generated@@214)))
 :pattern ( ($generated@@208 ($generated@@209 $generated@@212) $generated@@213 $generated@@214))
)))
(assert  (and (and (and (and (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (= ($generated@@1 ($generated@@217 $generated@@220 $generated@@221)) 16)) (forall (($generated@@222 T@T) ($generated@@223 T@T) ) (! (= ($generated@@218 ($generated@@217 $generated@@222 $generated@@223)) $generated@@222)
 :pattern ( ($generated@@217 $generated@@222 $generated@@223))
))) (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (! (= ($generated@@219 ($generated@@217 $generated@@224 $generated@@225)) $generated@@225)
 :pattern ( ($generated@@217 $generated@@224 $generated@@225))
))) (forall (($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@218 (type $generated@@226))))
(= (type ($generated@@215 $generated@@226)) ($generated@@71 $generated@@227 $generated@@4)))
 :pattern ( ($generated@@215 $generated@@226))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= (type ($generated@@216 $generated@@228 $generated@@229)) ($generated@@217 $generated@@228 $generated@@229))
 :pattern ( ($generated@@216 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@T) ) (! (let (($generated@@232 (type $generated@@230)))
 (not ($generated@@0 ($generated@@76 ($generated@@215 ($generated@@216 $generated@@232 $generated@@231)) $generated@@230))))
 :pattern ( (let (($generated@@232 (type $generated@@230)))
($generated@@76 ($generated@@215 ($generated@@216 $generated@@232 $generated@@231)) $generated@@230)))
)))
(assert  (and (and (and (and (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (= ($generated@@1 ($generated@@235 $generated@@238 $generated@@239)) 17)) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= ($generated@@236 ($generated@@235 $generated@@240 $generated@@241)) $generated@@240)
 :pattern ( ($generated@@235 $generated@@240 $generated@@241))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= ($generated@@237 ($generated@@235 $generated@@242 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@235 $generated@@242 $generated@@243))
))) (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@236 (type $generated@@244))))
(= (type ($generated@@233 $generated@@244)) ($generated@@71 $generated@@245 $generated@@4)))
 :pattern ( ($generated@@233 $generated@@244))
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= (type ($generated@@234 $generated@@246 $generated@@247)) ($generated@@235 $generated@@246 $generated@@247))
 :pattern ( ($generated@@234 $generated@@246 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@T) ) (! (let (($generated@@250 (type $generated@@248)))
 (not ($generated@@0 ($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248))))
 :pattern ( (let (($generated@@250 (type $generated@@248)))
($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@219 (type $generated@@251))))
(let (($generated@@253 ($generated@@218 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@217 $generated@@253 $generated@@252)) (or (= $generated@@251 ($generated@@216 $generated@@253 $generated@@252)) (exists (($generated@@254 T@U) ) (!  (and (= (type $generated@@254) $generated@@253) ($generated@@0 ($generated@@76 ($generated@@215 $generated@@251) $generated@@254)))
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
))))))
 :pattern ( ($generated@@215 $generated@@251))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@237 (type $generated@@255))))
(let (($generated@@257 ($generated@@236 (type $generated@@255))))
 (=> (= (type $generated@@255) ($generated@@235 $generated@@257 $generated@@256)) (or (= $generated@@255 ($generated@@234 $generated@@257 $generated@@256)) (exists (($generated@@258 T@U) ) (!  (and (= (type $generated@@258) $generated@@257) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@255) $generated@@258)))
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
))))))
 :pattern ( ($generated@@233 $generated@@255))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@61)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@261) ($generated@@71 $generated@@210 $generated@@4)) (= (type $generated@@262) $generated@@61)) (= (type $generated@@263) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@261 ($generated@@259 $generated@@262) $generated@@263) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@210) ($generated@@0 ($generated@@76 $generated@@261 $generated@@264))) ($generated@@208 $generated@@264 $generated@@262 $generated@@263))
 :pattern ( ($generated@@76 $generated@@261 $generated@@264))
))))
 :pattern ( ($generated@@69 $generated@@261 ($generated@@259 $generated@@262) $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@61)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (= (type $generated@@267) ($generated@@71 $generated@@210 $generated@@4)) (= (type $generated@@268) $generated@@61)) (= (type $generated@@269) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@210) ($generated@@0 ($generated@@76 $generated@@267 $generated@@270))) ($generated@@208 $generated@@270 $generated@@268 $generated@@269))
 :pattern ( ($generated@@76 $generated@@267 $generated@@270))
))))
 :pattern ( ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269))
)))
(assert  (and (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (! (= (type ($generated@@271 $generated@@273 $generated@@274)) $generated@@61)
 :pattern ( ($generated@@271 $generated@@273 $generated@@274))
)) (forall (($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@219 (type $generated@@275))))
(let (($generated@@277 ($generated@@218 (type $generated@@275))))
(= (type ($generated@@272 $generated@@275)) ($generated@@71 $generated@@277 $generated@@276))))
 :pattern ( ($generated@@272 $generated@@275))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (= (type $generated@@278) ($generated@@217 $generated@@210 $generated@@210)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@278 ($generated@@271 $generated@@279 $generated@@280) $generated@@281) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@210) ($generated@@0 ($generated@@76 ($generated@@215 $generated@@278) $generated@@282))) (and ($generated@@208 ($generated@@76 ($generated@@272 $generated@@278) $generated@@282) $generated@@280 $generated@@281) ($generated@@208 $generated@@282 $generated@@279 $generated@@281)))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@278) $generated@@282))
 :pattern ( ($generated@@76 ($generated@@215 $generated@@278) $generated@@282))
))))
 :pattern ( ($generated@@69 $generated@@278 ($generated@@271 $generated@@279 $generated@@280) $generated@@281))
)))
(assert  (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (= (type ($generated@@283 $generated@@285 $generated@@286)) $generated@@61)
 :pattern ( ($generated@@283 $generated@@285 $generated@@286))
)) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@237 (type $generated@@287))))
(let (($generated@@289 ($generated@@236 (type $generated@@287))))
(= (type ($generated@@284 $generated@@287)) ($generated@@71 $generated@@289 $generated@@288))))
 :pattern ( ($generated@@284 $generated@@287))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (= (type $generated@@290) ($generated@@235 $generated@@210 $generated@@210)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) $generated@@61)) (= (type $generated@@293) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@210) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@290) $generated@@294))) (and ($generated@@208 ($generated@@76 ($generated@@284 $generated@@290) $generated@@294) $generated@@292 $generated@@293) ($generated@@208 $generated@@294 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@76 ($generated@@284 $generated@@290) $generated@@294))
 :pattern ( ($generated@@76 ($generated@@233 $generated@@290) $generated@@294))
))))
 :pattern ( ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@71 $generated@@296 $generated@@4))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@237 (type $generated@@297))))
(let (($generated@@299 ($generated@@236 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@235 $generated@@299 $generated@@298)) (= (= $generated@@297 ($generated@@234 $generated@@299 $generated@@298)) (= ($generated@@233 $generated@@297) ($generated@@295 $generated@@299))))))
 :pattern ( ($generated@@233 $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@203 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@202 $generated@@301)) (<= 0 ($generated@@201 $generated@@300))))
 :pattern ( ($generated@@201 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@61)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@61) (= (type $generated@@305) $generated@@61)) (= ($generated@@302 ($generated@@271 $generated@@304 $generated@@305)) $generated@@304))
 :pattern ( ($generated@@271 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@61) (= (type $generated@@309) $generated@@61)) (= ($generated@@306 ($generated@@271 $generated@@308 $generated@@309)) $generated@@309))
 :pattern ( ($generated@@271 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@61) (= (type $generated@@311) $generated@@61)) (= ($generated@@67 ($generated@@271 $generated@@310 $generated@@311)) $generated@@58))
 :pattern ( ($generated@@271 $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@61)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@61) (= (type $generated@@315) $generated@@61)) (= ($generated@@312 ($generated@@283 $generated@@314 $generated@@315)) $generated@@314))
 :pattern ( ($generated@@283 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@61) (= (type $generated@@319) $generated@@61)) (= ($generated@@316 ($generated@@283 $generated@@318 $generated@@319)) $generated@@319))
 :pattern ( ($generated@@283 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@61) (= (type $generated@@321) $generated@@61)) (= ($generated@@67 ($generated@@283 $generated@@320 $generated@@321)) $generated@@59))
 :pattern ( ($generated@@283 $generated@@320 $generated@@321))
)))
(assert  (and (forall (($generated@@324 T@U) ) (! (= (type ($generated@@322 $generated@@324)) $generated@@131)
 :pattern ( ($generated@@322 $generated@@324))
)) (= (type $generated@@323) $generated@@131)))
(assert (forall (($generated@@325 T@U) ($generated@@326 Int) ) (!  (=> (= (type $generated@@325) $generated@@131) (= ($generated@@128 $generated@@325 $generated@@326) ($generated@@128 $generated@@323 $generated@@326)))
 :pattern ( ($generated@@128 ($generated@@322 $generated@@325) $generated@@326))
)))
(assert  (and (forall (($generated@@329 T@U) ) (! (= (type ($generated@@327 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@329))
)) (forall (($generated@@330 T@U) ($generated@@331 Int) ) (! (let (($generated@@332 ($generated@@203 (type $generated@@330))))
(= (type ($generated@@328 $generated@@330 $generated@@331)) $generated@@332))
 :pattern ( ($generated@@328 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@202 $generated@@210)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@327 $generated@@334) $generated@@335) (forall (($generated@@336 Int) ) (!  (=> (and (<= 0 $generated@@336) (< $generated@@336 ($generated@@201 $generated@@333))) ($generated@@208 ($generated@@328 $generated@@333 $generated@@336) $generated@@334 $generated@@335))
 :pattern ( ($generated@@328 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@327 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@338 Int) ) (! (= ($generated@@337 ($generated@@70 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@70 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@61) (= ($generated@@339 ($generated@@259 $generated@@341)) $generated@@341))
 :pattern ( ($generated@@259 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@67 ($generated@@259 $generated@@342)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@343 ($generated@@265 $generated@@345)) $generated@@345))
 :pattern ( ($generated@@265 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@67 ($generated@@265 $generated@@346)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@346))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) $generated@@61)
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@61) (= ($generated@@348 ($generated@@347 $generated@@351)) $generated@@351))
 :pattern ( ($generated@@347 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@67 ($generated@@347 $generated@@352)) $generated@@56))
 :pattern ( ($generated@@347 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (= (type ($generated@@353 $generated@@354)) $generated@@61)
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@61) (= ($generated@@353 ($generated@@327 $generated@@355)) $generated@@355))
 :pattern ( ($generated@@327 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@67 ($generated@@327 $generated@@356)) $generated@@57))
 :pattern ( ($generated@@327 $generated@@356))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated@@357 $generated@@361 ($generated@@209 $generated@@360)) $generated@@360))
 :pattern ( ($generated@@209 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 Int) ) (!  (=> (= (type $generated@@362) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@362) $generated@@363) ($generated@@128 $generated@@362 $generated@@363)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
 (not ($generated@@0 ($generated@@76 ($generated@@295 $generated@@365) $generated@@364))))
 :pattern ( (let (($generated@@365 (type $generated@@364)))
($generated@@76 ($generated@@295 $generated@@365) $generated@@364)))
)))
(assert (forall (($generated@@366 Int) ($generated@@367 Int) ) (! (= ($generated@@133 $generated@@366 $generated@@367) (* $generated@@366 $generated@@367))
 :pattern ( ($generated@@133 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@71 $generated@@210 $generated@@2)) (= (type $generated@@369) $generated@@61)) (= (type $generated@@370) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@368 ($generated@@347 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@210) (< 0 ($generated ($generated@@76 $generated@@368 $generated@@371)))) ($generated@@208 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@76 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@69 $generated@@368 ($generated@@347 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 Int) ) (! (= ($generated@@209 ($generated@@8 ($generated@@130 $generated@@372))) ($generated@@194 ($generated@@209 ($generated@@8 $generated@@372))))
 :pattern ( ($generated@@209 ($generated@@8 ($generated@@130 $generated@@372))))
)))
(assert (forall (($generated@@373 T@U) ) (! (= ($generated@@209 ($generated@@194 $generated@@373)) ($generated@@194 ($generated@@209 $generated@@373)))
 :pattern ( ($generated@@209 ($generated@@194 $generated@@373)))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@203 (type $generated@@374))))
 (=> (and (= (type $generated@@374) ($generated@@202 $generated@@375)) (= ($generated@@201 $generated@@374) 0)) (= $generated@@374 ($generated@@200 $generated@@375))))
 :pattern ( ($generated@@201 $generated@@374))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@376 T@U) ($generated@@377 Int) ) (!  (=> (and (= (type $generated@@376) $generated@@131) (or ($generated@@132 $generated@@377) (not (= 0 $generated@@127)))) (= ($generated@@128 ($generated@@129 $generated@@376) $generated@@377) (ite (< $generated@@377 0) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@377) $generated@@377)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@376) $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@379) $generated@@2)) ($generated@@69 $generated@@379 $generated@@46 $generated@@378))
 :pattern ( ($generated@@69 $generated@@379 $generated@@46 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@381) $generated@@3)) ($generated@@69 $generated@@381 $generated@@47 $generated@@380))
 :pattern ( ($generated@@69 $generated@@381 $generated@@47 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@4)) ($generated@@69 $generated@@383 $generated@@44 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@44 $generated@@382))
)))
(assert (= ($generated@@1 $generated@@384) 18))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@386) $generated@@384)) ($generated@@69 $generated@@386 $generated@@45 $generated@@385))
 :pattern ( ($generated@@69 $generated@@386 $generated@@45 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@388) $generated@@210)) ($generated@@69 $generated@@388 $generated@@48 $generated@@387))
 :pattern ( ($generated@@69 $generated@@388 $generated@@48 $generated@@387))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () Int)
(declare-fun $generated@@391 () Int)
(declare-fun $generated@@392 () T@U)
(declare-fun $generated@@393 () T@U)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 () T@U)
(declare-fun $generated@@396 () T@U)
(declare-fun $generated@@397 () T@U)
(declare-fun $generated@@398 () T@U)
(declare-fun $generated@@399 (T@U) Bool)
(declare-fun $generated@@400 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@389) $generated@@131) (= (type $generated@@392) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@393) $generated@@131)) (= (type $generated@@395) $generated@@131)) (= (type $generated@@396) $generated@@131)) (= (type $generated@@397) ($generated@@139 $generated@@72 $generated@@4))) (= (type $generated@@398) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@401  (=> (and (and (= ($generated@@128 $generated@@389 $generated@@390) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@390)) ($generated@@69 ($generated@@8 $generated@@391) $generated@@46 $generated@@392)) (and ($generated@@132 $generated@@391) ($generated@@132 $generated@@391))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@128 $generated@@393 $generated@@391) $generated@@391)) (=> (and (= ($generated@@128 $generated@@389 $generated@@391) $generated@@391) (= $generated@@394 ($generated@@130 (- 0 1)))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@394) $generated@@46 $generated@@392) ($generated@@132 ($generated@@130 (- 0 1)))) (and ($generated@@132 ($generated@@130 (- 0 1))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@130 ($generated@@128 $generated@@393 ($generated@@130 (- 0 1)))) ($generated@@130 1))))))))
(let (($generated@@402  (=> (= $generated@@389 $generated@@395) (=> (and (and (= $generated@@393 $generated@@395) ($generated@@69 ($generated@@8 $generated@@390) $generated@@46 $generated@@392)) (and ($generated@@132 $generated@@390) ($generated@@132 $generated@@390))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (= ($generated@@128 $generated@@393 $generated@@390) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@390))) (=> (= (ControlFlow 0 4) 2) $generated@@401))))))
(let (($generated@@403  (=> (and (and (= $generated@@389 ($generated@@129 $generated@@396)) (= $generated@@393 ($generated@@129 ($generated@@129 $generated@@396)))) (and (= ($generated@@322 $generated@@396) $generated@@396) (= $generated@@397 ($generated@@138 $generated@@398 $generated@@392 $generated@@60 false)))) (and (=> (= (ControlFlow 0 6) 4) $generated@@402) (=> (= (ControlFlow 0 6) 2) $generated@@401)))))
(let (($generated@@404  (=> (and ($generated@@399 $generated@@392) ($generated@@400 $generated@@392)) (=> (and (and (= 1 $generated@@127) (> $generated@@391 5)) (and (< $generated@@390 0) (= (ControlFlow 0 7) 6))) $generated@@403))))
$generated@@404)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 () Int)
(declare-fun $generated@@128 (T@U Int) Int)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (Int) Int)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (Int) Bool)
(declare-fun $generated@@133 (Int Int) Int)
(declare-fun $generated@@137 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T) T@T)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@141 (T@T) T@T)
(declare-fun $generated@@142 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@200 (T@T) T@U)
(declare-fun $generated@@201 (T@U) Int)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@208 (T@U T@U T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@210 () T@T)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@T T@T) T@U)
(declare-fun $generated@@217 (T@T T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@219 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 (T@T T@T) T@U)
(declare-fun $generated@@235 (T@T T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@283 (T@U T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 () T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@U Int) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@384 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (= ($generated@@1 $generated@@131) 12) (forall (($generated@@134 T@U) ) (! (= (type ($generated@@129 $generated@@134)) $generated@@131)
 :pattern ( ($generated@@129 $generated@@134))
))))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@135 T@U) ($generated@@136 Int) ) (!  (=> (and (= (type $generated@@135) $generated@@131) (or ($generated@@132 ($generated@@130 $generated@@136)) (not (= 0 $generated@@127)))) (= ($generated@@128 ($generated@@129 $generated@@135) ($generated@@130 $generated@@136)) (ite (< $generated@@136 0) ($generated@@133 ($generated@@130 (- 0 1)) ($generated@@130 $generated@@136)) $generated@@136)))
 :weight 3
 :pattern ( ($generated@@128 ($generated@@129 $generated@@135) ($generated@@130 $generated@@136)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (= ($generated@@1 ($generated@@139 $generated@@143 $generated@@144)) 13)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@140 ($generated@@139 $generated@@145 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@139 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@141 ($generated@@139 $generated@@147 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@139 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (let (($generated@@152 ($generated@@141 (type $generated@@149))))
(= (type ($generated@@137 $generated@@149 $generated@@150 $generated@@151)) $generated@@152))
 :pattern ( ($generated@@137 $generated@@149 $generated@@150 $generated@@151))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 (type $generated@@156)))
(let (($generated@@158 (type $generated@@154)))
(= (type ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@156)) ($generated@@139 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@156))
))) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 ($generated@@141 (type $generated@@159))))
 (=> (= (type $generated@@162) $generated@@163) (= ($generated@@137 ($generated@@142 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@160 $generated@@161) $generated@@162)))
 :weight 0
))) (and (and (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@137 ($generated@@142 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@137 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@173 $generated@@175) (= ($generated@@137 ($generated@@142 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@137 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or true (= ($generated@@137 ($generated@@142 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@137 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Bool) ) (! (= (type ($generated@@138 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@139 $generated@@72 $generated@@4))
 :pattern ( ($generated@@138 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Bool) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@64 (type $generated@@191))))
 (=> (and (and (and (and (= (type $generated@@186) $generated@@72) (= (type $generated@@187) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@188) ($generated@@63 $generated@@4))) (= (type $generated@@190) $generated@@72)) (= (type $generated@@191) ($generated@@63 $generated@@192))) (= ($generated@@0 ($generated@@137 ($generated@@138 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))  (=> (and (not (= $generated@@190 $generated@@186)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@187 $generated@@190) $generated@@188))) $generated@@189))))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@130 $generated@@193) $generated@@193)
 :pattern ( ($generated@@130 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(= (type ($generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@194 $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@194 $generated@@197) $generated@@197)
 :pattern ( ($generated@@194 $generated@@197))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@198 T@U) ($generated@@199 Int) ) (!  (=> (and (= (type $generated@@198) $generated@@131) (or ($generated@@132 $generated@@199) (not (= 0 $generated@@127)))) true)
 :pattern ( ($generated@@128 $generated@@198 $generated@@199))
))))
(assert  (and (and (forall (($generated@@204 T@T) ) (= ($generated@@1 ($generated@@202 $generated@@204)) 14)) (forall (($generated@@205 T@T) ) (! (= ($generated@@203 ($generated@@202 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@202 $generated@@205))
))) (forall (($generated@@206 T@T) ) (! (= (type ($generated@@200 $generated@@206)) ($generated@@202 $generated@@206))
 :pattern ( ($generated@@200 $generated@@206))
))))
(assert (forall (($generated@@207 T@T) ) (! (= ($generated@@201 ($generated@@200 $generated@@207)) 0)
 :pattern ( ($generated@@200 $generated@@207))
)))
(assert  (and (= ($generated@@1 $generated@@210) 15) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@209 $generated@@211)) $generated@@210)
 :pattern ( ($generated@@209 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@61) (= (type $generated@@214) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@208 ($generated@@209 $generated@@212) $generated@@213 $generated@@214) ($generated@@69 $generated@@212 $generated@@213 $generated@@214)))
 :pattern ( ($generated@@208 ($generated@@209 $generated@@212) $generated@@213 $generated@@214))
)))
(assert  (and (and (and (and (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (= ($generated@@1 ($generated@@217 $generated@@220 $generated@@221)) 16)) (forall (($generated@@222 T@T) ($generated@@223 T@T) ) (! (= ($generated@@218 ($generated@@217 $generated@@222 $generated@@223)) $generated@@222)
 :pattern ( ($generated@@217 $generated@@222 $generated@@223))
))) (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (! (= ($generated@@219 ($generated@@217 $generated@@224 $generated@@225)) $generated@@225)
 :pattern ( ($generated@@217 $generated@@224 $generated@@225))
))) (forall (($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@218 (type $generated@@226))))
(= (type ($generated@@215 $generated@@226)) ($generated@@71 $generated@@227 $generated@@4)))
 :pattern ( ($generated@@215 $generated@@226))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= (type ($generated@@216 $generated@@228 $generated@@229)) ($generated@@217 $generated@@228 $generated@@229))
 :pattern ( ($generated@@216 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@T) ) (! (let (($generated@@232 (type $generated@@230)))
 (not ($generated@@0 ($generated@@76 ($generated@@215 ($generated@@216 $generated@@232 $generated@@231)) $generated@@230))))
 :pattern ( (let (($generated@@232 (type $generated@@230)))
($generated@@76 ($generated@@215 ($generated@@216 $generated@@232 $generated@@231)) $generated@@230)))
)))
(assert  (and (and (and (and (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (= ($generated@@1 ($generated@@235 $generated@@238 $generated@@239)) 17)) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= ($generated@@236 ($generated@@235 $generated@@240 $generated@@241)) $generated@@240)
 :pattern ( ($generated@@235 $generated@@240 $generated@@241))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= ($generated@@237 ($generated@@235 $generated@@242 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@235 $generated@@242 $generated@@243))
))) (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@236 (type $generated@@244))))
(= (type ($generated@@233 $generated@@244)) ($generated@@71 $generated@@245 $generated@@4)))
 :pattern ( ($generated@@233 $generated@@244))
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= (type ($generated@@234 $generated@@246 $generated@@247)) ($generated@@235 $generated@@246 $generated@@247))
 :pattern ( ($generated@@234 $generated@@246 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@T) ) (! (let (($generated@@250 (type $generated@@248)))
 (not ($generated@@0 ($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248))))
 :pattern ( (let (($generated@@250 (type $generated@@248)))
($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@219 (type $generated@@251))))
(let (($generated@@253 ($generated@@218 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@217 $generated@@253 $generated@@252)) (or (= $generated@@251 ($generated@@216 $generated@@253 $generated@@252)) (exists (($generated@@254 T@U) ) (!  (and (= (type $generated@@254) $generated@@253) ($generated@@0 ($generated@@76 ($generated@@215 $generated@@251) $generated@@254)))
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
))))))
 :pattern ( ($generated@@215 $generated@@251))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@237 (type $generated@@255))))
(let (($generated@@257 ($generated@@236 (type $generated@@255))))
 (=> (= (type $generated@@255) ($generated@@235 $generated@@257 $generated@@256)) (or (= $generated@@255 ($generated@@234 $generated@@257 $generated@@256)) (exists (($generated@@258 T@U) ) (!  (and (= (type $generated@@258) $generated@@257) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@255) $generated@@258)))
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
))))))
 :pattern ( ($generated@@233 $generated@@255))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@61)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@261) ($generated@@71 $generated@@210 $generated@@4)) (= (type $generated@@262) $generated@@61)) (= (type $generated@@263) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@261 ($generated@@259 $generated@@262) $generated@@263) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@210) ($generated@@0 ($generated@@76 $generated@@261 $generated@@264))) ($generated@@208 $generated@@264 $generated@@262 $generated@@263))
 :pattern ( ($generated@@76 $generated@@261 $generated@@264))
))))
 :pattern ( ($generated@@69 $generated@@261 ($generated@@259 $generated@@262) $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@61)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (= (type $generated@@267) ($generated@@71 $generated@@210 $generated@@4)) (= (type $generated@@268) $generated@@61)) (= (type $generated@@269) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@210) ($generated@@0 ($generated@@76 $generated@@267 $generated@@270))) ($generated@@208 $generated@@270 $generated@@268 $generated@@269))
 :pattern ( ($generated@@76 $generated@@267 $generated@@270))
))))
 :pattern ( ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269))
)))
(assert  (and (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (! (= (type ($generated@@271 $generated@@273 $generated@@274)) $generated@@61)
 :pattern ( ($generated@@271 $generated@@273 $generated@@274))
)) (forall (($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@219 (type $generated@@275))))
(let (($generated@@277 ($generated@@218 (type $generated@@275))))
(= (type ($generated@@272 $generated@@275)) ($generated@@71 $generated@@277 $generated@@276))))
 :pattern ( ($generated@@272 $generated@@275))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (= (type $generated@@278) ($generated@@217 $generated@@210 $generated@@210)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@278 ($generated@@271 $generated@@279 $generated@@280) $generated@@281) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@210) ($generated@@0 ($generated@@76 ($generated@@215 $generated@@278) $generated@@282))) (and ($generated@@208 ($generated@@76 ($generated@@272 $generated@@278) $generated@@282) $generated@@280 $generated@@281) ($generated@@208 $generated@@282 $generated@@279 $generated@@281)))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@278) $generated@@282))
 :pattern ( ($generated@@76 ($generated@@215 $generated@@278) $generated@@282))
))))
 :pattern ( ($generated@@69 $generated@@278 ($generated@@271 $generated@@279 $generated@@280) $generated@@281))
)))
(assert  (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (= (type ($generated@@283 $generated@@285 $generated@@286)) $generated@@61)
 :pattern ( ($generated@@283 $generated@@285 $generated@@286))
)) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@237 (type $generated@@287))))
(let (($generated@@289 ($generated@@236 (type $generated@@287))))
(= (type ($generated@@284 $generated@@287)) ($generated@@71 $generated@@289 $generated@@288))))
 :pattern ( ($generated@@284 $generated@@287))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (= (type $generated@@290) ($generated@@235 $generated@@210 $generated@@210)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) $generated@@61)) (= (type $generated@@293) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@210) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@290) $generated@@294))) (and ($generated@@208 ($generated@@76 ($generated@@284 $generated@@290) $generated@@294) $generated@@292 $generated@@293) ($generated@@208 $generated@@294 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@76 ($generated@@284 $generated@@290) $generated@@294))
 :pattern ( ($generated@@76 ($generated@@233 $generated@@290) $generated@@294))
))))
 :pattern ( ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@71 $generated@@296 $generated@@4))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@237 (type $generated@@297))))
(let (($generated@@299 ($generated@@236 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@235 $generated@@299 $generated@@298)) (= (= $generated@@297 ($generated@@234 $generated@@299 $generated@@298)) (= ($generated@@233 $generated@@297) ($generated@@295 $generated@@299))))))
 :pattern ( ($generated@@233 $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@203 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@202 $generated@@301)) (<= 0 ($generated@@201 $generated@@300))))
 :pattern ( ($generated@@201 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@61)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@61) (= (type $generated@@305) $generated@@61)) (= ($generated@@302 ($generated@@271 $generated@@304 $generated@@305)) $generated@@304))
 :pattern ( ($generated@@271 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@61) (= (type $generated@@309) $generated@@61)) (= ($generated@@306 ($generated@@271 $generated@@308 $generated@@309)) $generated@@309))
 :pattern ( ($generated@@271 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@61) (= (type $generated@@311) $generated@@61)) (= ($generated@@67 ($generated@@271 $generated@@310 $generated@@311)) $generated@@58))
 :pattern ( ($generated@@271 $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@61)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@61) (= (type $generated@@315) $generated@@61)) (= ($generated@@312 ($generated@@283 $generated@@314 $generated@@315)) $generated@@314))
 :pattern ( ($generated@@283 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@61) (= (type $generated@@319) $generated@@61)) (= ($generated@@316 ($generated@@283 $generated@@318 $generated@@319)) $generated@@319))
 :pattern ( ($generated@@283 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@61) (= (type $generated@@321) $generated@@61)) (= ($generated@@67 ($generated@@283 $generated@@320 $generated@@321)) $generated@@59))
 :pattern ( ($generated@@283 $generated@@320 $generated@@321))
)))
(assert  (and (forall (($generated@@324 T@U) ) (! (= (type ($generated@@322 $generated@@324)) $generated@@131)
 :pattern ( ($generated@@322 $generated@@324))
)) (= (type $generated@@323) $generated@@131)))
(assert (forall (($generated@@325 T@U) ($generated@@326 Int) ) (!  (=> (= (type $generated@@325) $generated@@131) (= ($generated@@128 $generated@@325 $generated@@326) ($generated@@128 $generated@@323 $generated@@326)))
 :pattern ( ($generated@@128 ($generated@@322 $generated@@325) $generated@@326))
)))
(assert  (and (forall (($generated@@329 T@U) ) (! (= (type ($generated@@327 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@329))
)) (forall (($generated@@330 T@U) ($generated@@331 Int) ) (! (let (($generated@@332 ($generated@@203 (type $generated@@330))))
(= (type ($generated@@328 $generated@@330 $generated@@331)) $generated@@332))
 :pattern ( ($generated@@328 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@202 $generated@@210)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@327 $generated@@334) $generated@@335) (forall (($generated@@336 Int) ) (!  (=> (and (<= 0 $generated@@336) (< $generated@@336 ($generated@@201 $generated@@333))) ($generated@@208 ($generated@@328 $generated@@333 $generated@@336) $generated@@334 $generated@@335))
 :pattern ( ($generated@@328 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@327 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@338 Int) ) (! (= ($generated@@337 ($generated@@70 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@70 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@61) (= ($generated@@339 ($generated@@259 $generated@@341)) $generated@@341))
 :pattern ( ($generated@@259 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@67 ($generated@@259 $generated@@342)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@343 ($generated@@265 $generated@@345)) $generated@@345))
 :pattern ( ($generated@@265 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@67 ($generated@@265 $generated@@346)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@346))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) $generated@@61)
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@61) (= ($generated@@348 ($generated@@347 $generated@@351)) $generated@@351))
 :pattern ( ($generated@@347 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@67 ($generated@@347 $generated@@352)) $generated@@56))
 :pattern ( ($generated@@347 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (= (type ($generated@@353 $generated@@354)) $generated@@61)
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@61) (= ($generated@@353 ($generated@@327 $generated@@355)) $generated@@355))
 :pattern ( ($generated@@327 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@67 ($generated@@327 $generated@@356)) $generated@@57))
 :pattern ( ($generated@@327 $generated@@356))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated@@357 $generated@@361 ($generated@@209 $generated@@360)) $generated@@360))
 :pattern ( ($generated@@209 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 Int) ) (!  (=> (= (type $generated@@362) $generated@@131) (= ($generated@@128 ($generated@@129 $generated@@362) $generated@@363) ($generated@@128 $generated@@362 $generated@@363)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
 (not ($generated@@0 ($generated@@76 ($generated@@295 $generated@@365) $generated@@364))))
 :pattern ( (let (($generated@@365 (type $generated@@364)))
($generated@@76 ($generated@@295 $generated@@365) $generated@@364)))
)))
(assert (forall (($generated@@366 Int) ($generated@@367 Int) ) (! (= ($generated@@133 $generated@@366 $generated@@367) (* $generated@@366 $generated@@367))
 :pattern ( ($generated@@133 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@71 $generated@@210 $generated@@2)) (= (type $generated@@369) $generated@@61)) (= (type $generated@@370) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@368 ($generated@@347 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@210) (< 0 ($generated ($generated@@76 $generated@@368 $generated@@371)))) ($generated@@208 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@76 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@69 $generated@@368 ($generated@@347 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 Int) ) (! (= ($generated@@209 ($generated@@8 ($generated@@130 $generated@@372))) ($generated@@194 ($generated@@209 ($generated@@8 $generated@@372))))
 :pattern ( ($generated@@209 ($generated@@8 ($generated@@130 $generated@@372))))
)))
(assert (forall (($generated@@373 T@U) ) (! (= ($generated@@209 ($generated@@194 $generated@@373)) ($generated@@194 ($generated@@209 $generated@@373)))
 :pattern ( ($generated@@209 ($generated@@194 $generated@@373)))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@203 (type $generated@@374))))
 (=> (and (= (type $generated@@374) ($generated@@202 $generated@@375)) (= ($generated@@201 $generated@@374) 0)) (= $generated@@374 ($generated@@200 $generated@@375))))
 :pattern ( ($generated@@201 $generated@@374))
)))
(assert  (=> (<= 0 $generated@@127) (forall (($generated@@376 T@U) ($generated@@377 Int) ) (!  (=> (and (= (type $generated@@376) $generated@@131) (or ($generated@@132 $generated@@377) (not (= 0 $generated@@127)))) (= ($generated@@128 ($generated@@129 $generated@@376) $generated@@377) (ite (< $generated@@377 0) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@377) $generated@@377)))
 :pattern ( ($generated@@128 ($generated@@129 $generated@@376) $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@379) $generated@@2)) ($generated@@69 $generated@@379 $generated@@46 $generated@@378))
 :pattern ( ($generated@@69 $generated@@379 $generated@@46 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@381) $generated@@3)) ($generated@@69 $generated@@381 $generated@@47 $generated@@380))
 :pattern ( ($generated@@69 $generated@@381 $generated@@47 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@4)) ($generated@@69 $generated@@383 $generated@@44 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@44 $generated@@382))
)))
(assert (= ($generated@@1 $generated@@384) 18))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@386) $generated@@384)) ($generated@@69 $generated@@386 $generated@@45 $generated@@385))
 :pattern ( ($generated@@69 $generated@@386 $generated@@45 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@388) $generated@@210)) ($generated@@69 $generated@@388 $generated@@48 $generated@@387))
 :pattern ( ($generated@@69 $generated@@388 $generated@@48 $generated@@387))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () T@U)
(declare-fun $generated@@392 () T@U)
(declare-fun $generated@@393 () T@U)
(declare-fun $generated@@394 () T@U)
(declare-fun $generated@@395 () Int)
(declare-fun $generated@@396 () Int)
(declare-fun $generated@@397 () Int)
(declare-fun $generated@@398 (T@U) Bool)
(declare-fun $generated@@399 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@389) $generated@@131) (= (type $generated@@390) $generated@@131)) (= (type $generated@@391) $generated@@131)) (= (type $generated@@392) ($generated@@139 $generated@@72 $generated@@4))) (= (type $generated@@393) $generated@@72)) (= (type $generated@@394) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@400  (=> (= $generated@@389 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@390)))))) (=> (and (= $generated@@391 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 ($generated@@129 $generated@@390))))))) (= ($generated@@322 $generated@@390) $generated@@390)) (=> (and (and (= $generated@@392 ($generated@@138 $generated@@393 $generated@@394 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@395) $generated@@46 $generated@@394)) (and ($generated@@132 $generated@@395) ($generated@@132 $generated@@395))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@128 $generated@@391 $generated@@395) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@395))) (=> (and (and (= ($generated@@128 $generated@@391 $generated@@395) ($generated@@133 ($generated@@130 (- 0 1)) $generated@@395)) ($generated@@69 ($generated@@8 $generated@@396) $generated@@46 $generated@@394)) (and ($generated@@132 $generated@@396) ($generated@@132 $generated@@396))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@128 $generated@@391 $generated@@396) $generated@@396)) (=> (and (= ($generated@@128 $generated@@391 $generated@@396) $generated@@396) (= $generated@@397 ($generated@@130 (- 0 1)))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@397) $generated@@46 $generated@@394) ($generated@@132 ($generated@@130 (- 0 1)))) (and ($generated@@132 ($generated@@130 (- 0 1))) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@130 ($generated@@128 $generated@@391 ($generated@@130 (- 0 1)))) ($generated@@130 1))))))))))))
(let (($generated@@401  (=> (and ($generated@@398 $generated@@394) ($generated@@399 $generated@@394)) (=> (and (and (= 1 $generated@@127) (> $generated@@396 5)) (and (< $generated@@395 0) (= (ControlFlow 0 5) 2))) $generated@@400))))
$generated@@401)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 256))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 18446744073709551616))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@89 (Int T@U) T@U)
(declare-fun $generated@@90 () T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@97 (T@U T@U T@U) Bool)
(declare-fun $generated@@98 (Int) T@U)
(declare-fun $generated@@99 (T@T T@T) T@T)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@103 (T@T) T@T)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U) Int)
(declare-fun $generated@@162 (T@U Int) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@166 (T@U) Int)
(declare-fun $generated@@167 (T@U) Int)
(declare-fun $generated@@168 (T@T T@U) T@U)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U) T@U)
(declare-fun $generated@@200 (T@U T@U) Bool)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@216 (T@U T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@218 (T@T T@T) T@T)
(declare-fun $generated@@219 (T@T) T@T)
(declare-fun $generated@@220 (T@T) T@T)
(declare-fun $generated@@221 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@272 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@284 (T@U T@U) T@U)
(declare-fun $generated@@285 (T@U T@U) Bool)
(declare-fun $generated@@292 () T@U)
(declare-fun $generated@@297 (T@U T@U) Bool)
(declare-fun $generated@@302 (T@U) Bool)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@318 (Int) Int)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@324 (T@U) Bool)
(declare-fun $generated@@327 (T@U) Bool)
(declare-fun $generated@@330 (T@U T@U T@U) Bool)
(declare-fun $generated@@338 (T@U) Bool)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@343 (T@U) Bool)
(declare-fun $generated@@346 (T@U) Bool)
(declare-fun $generated@@349 (T@U T@U) Bool)
(declare-fun $generated@@360 (T@T) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@373 (Int) T@U)
(declare-fun $generated@@379 (T@U T@U T@U) Bool)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 () T@T)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@391 (T@U) Int)
(declare-fun $generated@@392 (T@T) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@T T@T) T@U)
(declare-fun $generated@@399 (T@T T@T) T@T)
(declare-fun $generated@@400 (T@T) T@T)
(declare-fun $generated@@401 (T@T) T@T)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@416 (T@T T@T) T@U)
(declare-fun $generated@@417 (T@T T@T) T@T)
(declare-fun $generated@@418 (T@T) T@T)
(declare-fun $generated@@419 (T@T) T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@487 () Int)
(declare-fun $generated@@488 (T@U T@U) Bool)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@528 (T@U T@U) T@U)
(declare-fun $generated@@536 (T@U T@U) T@U)
(declare-fun $generated@@551 (T@T) T@U)
(declare-fun $generated@@575 () T@T)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@599 (T@U) T@U)
(declare-fun $generated@@603 (T@U) T@U)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@615 (T@U) T@U)
(declare-fun $generated@@633 (T@U) Int)
(declare-fun $generated@@635 (T@U) T@U)
(declare-fun $generated@@639 (T@U) T@U)
(declare-fun $generated@@643 (T@U) T@U)
(declare-fun $generated@@647 (T@U) T@U)
(declare-fun $generated@@671 (T@U) Int)
(declare-fun $generated@@710 (T@U) Int)
(declare-fun $generated@@716 (T@U) T@U)
(declare-fun $generated@@789 (T@U) T@U)
(declare-fun $generated@@790 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@78) 6) (= (type $generated@@44) $generated@@78)) (= (type $generated@@45) $generated@@78)) (= (type $generated@@46) $generated@@78)) (= (type $generated@@47) $generated@@78)) (= (type $generated@@48) $generated@@78)) (= ($generated@@1 $generated@@79) 7)) (= (type $generated@@49) $generated@@79)) (= (type $generated@@50) $generated@@79)) (= (type $generated@@51) $generated@@79)) (= (type $generated@@52) $generated@@79)) (= (type $generated@@53) $generated@@79)) (= (type $generated@@54) $generated@@79)) (= (type $generated@@55) $generated@@79)) (= (type $generated@@56) $generated@@79)) (= (type $generated@@57) $generated@@79)) (= (type $generated@@58) $generated@@79)) (= (type $generated@@59) $generated@@79)) (forall (($generated@@84 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@84)) 8))) (forall (($generated@@85 T@T) ) (! (= ($generated@@81 ($generated@@80 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@80 $generated@@85))
))) (= (type $generated@@60) ($generated@@80 $generated@@4))) (= ($generated@@1 $generated@@82) 9)) (= (type $generated@@61) $generated@@82)) (= (type $generated@@62) $generated@@79)) (= (type $generated@@63) $generated@@79)) (= (type $generated@@64) $generated@@82)) (= (type $generated@@65) $generated@@79)) (= (type $generated@@66) $generated@@82)) (= (type $generated@@67) $generated@@82)) (= (type $generated@@68) $generated@@82)) (= (type $generated@@69) $generated@@82)) (= (type $generated@@70) $generated@@82)) (= (type $generated@@71) $generated@@79)) (= (type $generated@@72) $generated@@82)) (= (type $generated@@73) $generated@@82)) (= ($generated@@1 $generated@@83) 10)) (= (type $generated@@74) $generated@@83)) (= (type $generated@@75) $generated@@83)) (= (type $generated@@76) $generated@@83)) (= (type $generated@@77) $generated@@83)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77)
)
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@79)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@44) $generated@@49))
(assert (= ($generated@@86 $generated@@45) $generated@@50))
(assert (= ($generated@@86 $generated@@46) $generated@@51))
(assert (= ($generated@@86 $generated@@47) $generated@@52))
(assert (= ($generated@@86 $generated@@48) $generated@@53))
(assert  (and (and (and (= ($generated@@1 $generated@@91) 11) (forall (($generated@@93 Int) ($generated@@94 T@U) ) (! (= (type ($generated@@89 $generated@@93 $generated@@94)) $generated@@91)
 :pattern ( ($generated@@89 $generated@@93 $generated@@94))
))) (= (type $generated@@90) $generated@@78)) (= (type $generated@@92) $generated@@78)))
(assert (forall (($generated@@95 Int) ($generated@@96 T@U) ) (!  (=> (= (type $generated@@96) $generated@@91) (= ($generated@@88 ($generated@@89 $generated@@95 $generated@@96) $generated@@90)  (and ($generated@@88 ($generated@@8 $generated@@95) $generated@@92) ($generated@@88 $generated@@96 $generated@@90))))
 :pattern ( ($generated@@88 ($generated@@89 $generated@@95 $generated@@96) $generated@@90))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (= ($generated@@1 ($generated@@99 $generated@@108 $generated@@109)) 12)) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@102 ($generated@@99 $generated@@110 $generated@@111)) $generated@@110)
 :pattern ( ($generated@@99 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (! (= ($generated@@103 ($generated@@99 $generated@@112 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@99 $generated@@112 $generated@@113))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@103 (type $generated@@114))))
(= (type ($generated@@104 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@104 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 (type $generated@@119)))
(let (($generated@@121 (type $generated@@118)))
(= (type ($generated@@105 $generated@@117 $generated@@118 $generated@@119)) ($generated@@99 $generated@@121 $generated@@120))))
 :pattern ( ($generated@@105 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@103 (type $generated@@122))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@104 ($generated@@105 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@104 ($generated@@105 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@104 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@104 ($generated@@105 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@104 $generated@@131 $generated@@133)))
 :weight 0
)))) (= ($generated@@1 $generated@@100) 13)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@81 (type $generated@@135))))
(= (type ($generated@@106 $generated@@134 $generated@@135)) $generated@@136))
 :pattern ( ($generated@@106 $generated@@134 $generated@@135))
))) (= ($generated@@1 $generated@@101) 14)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= (type ($generated@@107 $generated@@137 $generated@@138 $generated@@139)) $generated@@101)
 :pattern ( ($generated@@107 $generated@@137 $generated@@138 $generated@@139))
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (let (($generated@@143 ($generated@@81 (type $generated@@141))))
 (=> (= (type $generated@@142) $generated@@143) (= ($generated@@106 ($generated@@107 $generated@@140 $generated@@141 $generated@@142) $generated@@141) $generated@@142)))
 :weight 0
))) (and (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@146 $generated@@147) (= ($generated@@106 ($generated@@107 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@106 $generated@@145 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or true (= ($generated@@106 ($generated@@107 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@106 $generated@@149 $generated@@151)))
 :weight 0
)))) (forall (($generated@@152 Int) ) (! (= (type ($generated@@98 $generated@@152)) $generated@@78)
 :pattern ( ($generated@@98 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@2) (= (type $generated@@154) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@97 $generated@@153 ($generated@@98 0) $generated@@154))
 :pattern ( ($generated@@97 $generated@@153 ($generated@@98 0) $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@2) (= (type $generated@@156) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@97 $generated@@155 $generated@@92 $generated@@156))
 :pattern ( ($generated@@97 $generated@@155 $generated@@92 $generated@@156))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@91) (= (type $generated@@161) $generated@@91)) (and ($generated@@158 $generated@@160) ($generated@@158 $generated@@161))) (= ($generated@@157 $generated@@160 $generated@@161) (= ($generated@@159 $generated@@160) ($generated@@159 $generated@@161))))
 :pattern ( ($generated@@157 $generated@@160 $generated@@161) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@157 $generated@@160 $generated@@161) ($generated@@158 $generated@@161))
)))
(assert  (and (and (and (and (and (forall (($generated@@170 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@170)) 15)) (forall (($generated@@171 T@T) ) (! (= ($generated@@169 ($generated@@164 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@164 $generated@@171))
))) (= ($generated@@1 $generated@@165) 16)) (forall (($generated@@172 T@U) ($generated@@173 Int) ) (! (let (($generated@@174 ($generated@@169 (type $generated@@172))))
(= (type ($generated@@162 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@162 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@163 $generated@@175)) $generated@@91)
 :pattern ( ($generated@@163 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@U) ) (! (= (type ($generated@@168 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 Int) ) (!  (=> (= (type $generated@@178) ($generated@@164 $generated@@165)) (=> (and (<= 0 $generated@@179) (< $generated@@179 ($generated@@166 $generated@@178))) (< ($generated@@167 ($generated@@168 $generated@@91 ($generated@@162 $generated@@178 $generated@@179))) ($generated@@167 ($generated@@163 $generated@@178)))))
 :pattern ( ($generated@@162 $generated@@178 $generated@@179) ($generated@@163 $generated@@178))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@180 $generated@@181)) $generated@@91)
 :pattern ( ($generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 Int) ) (!  (=> (= (type $generated@@182) ($generated@@164 $generated@@165)) (=> (and (<= 0 $generated@@183) (< $generated@@183 ($generated@@166 $generated@@182))) (< ($generated@@167 ($generated@@168 $generated@@91 ($generated@@162 $generated@@182 $generated@@183))) ($generated@@167 ($generated@@180 $generated@@182)))))
 :pattern ( ($generated@@162 $generated@@182 $generated@@183) ($generated@@180 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@184 $generated@@185)) $generated@@91)
 :pattern ( ($generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 Int) ) (!  (=> (= (type $generated@@186) ($generated@@164 $generated@@165)) (=> (and (<= 0 $generated@@187) (< $generated@@187 ($generated@@166 $generated@@186))) (< ($generated@@167 ($generated@@168 $generated@@91 ($generated@@162 $generated@@186 $generated@@187))) ($generated@@167 ($generated@@184 $generated@@186)))))
 :pattern ( ($generated@@162 $generated@@186 $generated@@187) ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (!  (=> (= (type $generated@@188) $generated@@2) ($generated@@88 $generated@@188 ($generated@@98 0)))
 :pattern ( ($generated@@88 $generated@@188 ($generated@@98 0)))
)))
(assert (forall (($generated@@190 Int) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) $generated@@91) (= (type $generated@@192) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@189 $generated@@192)) (= ($generated@@97 ($generated@@89 $generated@@190 $generated@@191) $generated@@90 $generated@@192)  (and ($generated@@97 ($generated@@8 $generated@@190) $generated@@92 $generated@@192) ($generated@@97 $generated@@191 $generated@@90 $generated@@192))))
 :pattern ( ($generated@@97 ($generated@@89 $generated@@190 $generated@@191) $generated@@90 $generated@@192))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@195 $generated@@196)) $generated@@78)
 :pattern ( ($generated@@194 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (and (= (type $generated@@197) $generated@@78) (= (type $generated@@198) $generated@@78)) (= (type $generated@@199) $generated@@91)) ($generated@@88 $generated@@199 ($generated@@194 $generated@@197 $generated@@198))) ($generated@@193 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199) ($generated@@88 $generated@@199 ($generated@@194 $generated@@197 $generated@@198)))
)))
(assert  (and (forall (($generated@@203 T@U) ) (! (= (type ($generated@@201 $generated@@203)) $generated@@165)
 :pattern ( ($generated@@201 $generated@@203))
)) (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@165)
 :pattern ( ($generated@@202 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (and (= (type $generated@@205) $generated@@91) (= (type $generated@@206) $generated@@91)) true) (= ($generated@@200 $generated@@205 $generated@@206)  (and (= ($generated@@201 $generated@@205) ($generated@@201 $generated@@206)) (= ($generated@@202 $generated@@205) ($generated@@202 $generated@@206)))))
 :pattern ( ($generated@@200 $generated@@205 $generated@@206))
)))
(assert  (and (forall (($generated@@209 T@U) ) (! (= (type ($generated@@207 $generated@@209)) $generated@@82)
 :pattern ( ($generated@@207 $generated@@209))
)) (= (type $generated@@208) $generated@@91)))
(assert (= ($generated@@207 $generated@@208) $generated@@64))
(assert (= (type $generated@@210) $generated@@91))
(assert (= ($generated@@207 $generated@@210) $generated@@68))
(assert (forall (($generated@@213 T@U) ) (! (= (type ($generated@@211 $generated@@213)) $generated@@78)
 :pattern ( ($generated@@211 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (and (= (type $generated@@214) ($generated@@99 $generated@@165 $generated@@2)) (= (type $generated@@215) $generated@@78)) ($generated@@88 $generated@@214 ($generated@@211 $generated@@215))) ($generated@@212 $generated@@214))
 :pattern ( ($generated@@88 $generated@@214 ($generated@@211 $generated@@215)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@222 T@T) ($generated@@223 T@T) ) (= ($generated@@1 ($generated@@218 $generated@@222 $generated@@223)) 17)) (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (! (= ($generated@@219 ($generated@@218 $generated@@224 $generated@@225)) $generated@@224)
 :pattern ( ($generated@@218 $generated@@224 $generated@@225))
))) (forall (($generated@@226 T@T) ($generated@@227 T@T) ) (! (= ($generated@@220 ($generated@@218 $generated@@226 $generated@@227)) $generated@@227)
 :pattern ( ($generated@@218 $generated@@226 $generated@@227))
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@220 (type $generated@@228))))
(= (type ($generated@@216 $generated@@228 $generated@@229 $generated@@230)) $generated@@231))
 :pattern ( ($generated@@216 $generated@@228 $generated@@229 $generated@@230))
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 (type $generated@@235)))
(let (($generated@@237 (type $generated@@233)))
(= (type ($generated@@221 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@218 $generated@@237 $generated@@236))))
 :pattern ( ($generated@@221 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@220 (type $generated@@238))))
 (=> (= (type $generated@@241) $generated@@242) (= ($generated@@216 ($generated@@221 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@239 $generated@@240) $generated@@241)))
 :weight 0
))) (and (and (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (or (= $generated@@245 $generated@@247) (= ($generated@@216 ($generated@@221 $generated@@244 $generated@@245 $generated@@246 $generated@@243) $generated@@247 $generated@@248) ($generated@@216 $generated@@244 $generated@@247 $generated@@248)))
 :weight 0
)) (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (or (= $generated@@252 $generated@@254) (= ($generated@@216 ($generated@@221 $generated@@250 $generated@@251 $generated@@252 $generated@@249) $generated@@253 $generated@@254) ($generated@@216 $generated@@250 $generated@@253 $generated@@254)))
 :weight 0
))) (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (or true (= ($generated@@216 ($generated@@221 $generated@@256 $generated@@257 $generated@@258 $generated@@255) $generated@@259 $generated@@260) ($generated@@216 $generated@@256 $generated@@259 $generated@@260)))
 :weight 0
)))) (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 Bool) ) (! (= (type ($generated@@217 $generated@@261 $generated@@262 $generated@@263 $generated@@264)) ($generated@@218 $generated@@100 $generated@@4))
 :pattern ( ($generated@@217 $generated@@261 $generated@@262 $generated@@263 $generated@@264))
))))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 Bool) ($generated@@269 T@U) ($generated@@270 T@U) ) (! (let (($generated@@271 ($generated@@81 (type $generated@@270))))
 (=> (and (and (and (and (= (type $generated@@265) $generated@@100) (= (type $generated@@266) ($generated@@99 $generated@@100 $generated@@101))) (= (type $generated@@267) ($generated@@80 $generated@@4))) (= (type $generated@@269) $generated@@100)) (= (type $generated@@270) ($generated@@80 $generated@@271))) (= ($generated@@0 ($generated@@216 ($generated@@217 $generated@@265 $generated@@266 $generated@@267 $generated@@268) $generated@@269 $generated@@270))  (=> (and (not (= $generated@@269 $generated@@265)) ($generated@@0 ($generated@@106 ($generated@@104 $generated@@266 $generated@@269) $generated@@267))) $generated@@268))))
 :pattern ( ($generated@@216 ($generated@@217 $generated@@265 $generated@@266 $generated@@267 $generated@@268) $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 Bool) ) (! (= (type ($generated@@272 $generated@@273 $generated@@274 $generated@@275 $generated@@276)) ($generated@@218 $generated@@100 $generated@@4))
 :pattern ( ($generated@@272 $generated@@273 $generated@@274 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 Bool) ($generated@@281 T@U) ($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@81 (type $generated@@282))))
 (=> (and (and (and (and (= (type $generated@@277) $generated@@100) (= (type $generated@@278) ($generated@@99 $generated@@100 $generated@@101))) (= (type $generated@@279) ($generated@@80 $generated@@4))) (= (type $generated@@281) $generated@@100)) (= (type $generated@@282) ($generated@@80 $generated@@283))) (= ($generated@@0 ($generated@@216 ($generated@@272 $generated@@277 $generated@@278 $generated@@279 $generated@@280) $generated@@281 $generated@@282))  (=> (and (not (= $generated@@281 $generated@@277)) ($generated@@0 ($generated@@106 ($generated@@104 $generated@@278 $generated@@281) $generated@@279))) $generated@@280))))
 :pattern ( ($generated@@216 ($generated@@272 $generated@@277 $generated@@278 $generated@@279 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@284 $generated@@286 $generated@@287)) $generated@@91)
 :pattern ( ($generated@@284 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (= (type $generated@@288) $generated@@78) (= (type $generated@@289) $generated@@78)) (= (type $generated@@290) $generated@@165)) (= (type $generated@@291) $generated@@165)) (= ($generated@@88 ($generated@@284 $generated@@290 $generated@@291) ($generated@@194 $generated@@288 $generated@@289))  (and ($generated@@285 $generated@@290 $generated@@288) ($generated@@285 $generated@@291 $generated@@289))))
 :pattern ( ($generated@@88 ($generated@@284 $generated@@290 $generated@@291) ($generated@@194 $generated@@288 $generated@@289)))
)))
(assert (= (type $generated@@292) $generated@@78))
(assert ($generated@@88 $generated@@208 $generated@@292))
(assert ($generated@@88 $generated@@210 $generated@@292))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) ($generated@@99 $generated@@100 $generated@@101)) ($generated@@189 $generated@@293)) ($generated@@97 $generated@@208 $generated@@292 $generated@@293))
 :pattern ( ($generated@@97 $generated@@208 $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) ($generated@@99 $generated@@100 $generated@@101)) ($generated@@189 $generated@@294)) ($generated@@97 $generated@@210 $generated@@292 $generated@@294))
 :pattern ( ($generated@@97 $generated@@210 $generated@@292 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@91) (= (type $generated@@296) $generated@@91)) (= ($generated@@200 $generated@@295 $generated@@296) (= $generated@@295 $generated@@296)))
 :pattern ( ($generated@@200 $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@91) (= (type $generated@@299) $generated@@91)) (= ($generated@@297 $generated@@298 $generated@@299) (= $generated@@298 $generated@@299)))
 :pattern ( ($generated@@297 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@91) (= (type $generated@@301) $generated@@91)) (= ($generated@@157 $generated@@300 $generated@@301) (= $generated@@300 $generated@@301)))
 :pattern ( ($generated@@157 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@91)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (= (type $generated@@306) $generated@@91) (= (type $generated@@307) $generated@@91)) (and ($generated@@302 $generated@@306) ($generated@@302 $generated@@307))) (= ($generated@@157 $generated@@306 $generated@@307)  (and (= ($generated@@303 $generated@@306) ($generated@@303 $generated@@307)) ($generated@@157 ($generated@@304 $generated@@306) ($generated@@304 $generated@@307)))))
 :pattern ( ($generated@@157 $generated@@306 $generated@@307) ($generated@@302 $generated@@306))
 :pattern ( ($generated@@157 $generated@@306 $generated@@307) ($generated@@302 $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@78)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) ($generated@@99 $generated@@165 $generated@@4)) (= (type $generated@@311) $generated@@78)) (= ($generated@@88 $generated@@310 ($generated@@308 $generated@@311)) (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@165) ($generated@@0 ($generated@@104 $generated@@310 $generated@@312))) ($generated@@285 $generated@@312 $generated@@311))
 :pattern ( ($generated@@104 $generated@@310 $generated@@312))
))))
 :pattern ( ($generated@@88 $generated@@310 ($generated@@308 $generated@@311)))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@78)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) ($generated@@99 $generated@@165 $generated@@4)) (= (type $generated@@316) $generated@@78)) (= ($generated@@88 $generated@@315 ($generated@@313 $generated@@316)) (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@165) ($generated@@0 ($generated@@104 $generated@@315 $generated@@317))) ($generated@@285 $generated@@317 $generated@@316))
 :pattern ( ($generated@@104 $generated@@315 $generated@@317))
))))
 :pattern ( ($generated@@88 $generated@@315 ($generated@@313 $generated@@316)))
)))
(assert (forall (($generated@@319 Int) ) (! (= ($generated@@318 $generated@@319) $generated@@319)
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 (type $generated@@321)))
(= (type ($generated@@320 $generated@@321)) $generated@@322))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (= ($generated@@320 $generated@@323) $generated@@323)
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@325) $generated@@91) (= (type $generated@@326) $generated@@91)) (and ($generated@@324 $generated@@325) ($generated@@324 $generated@@326))) (= ($generated@@297 $generated@@325 $generated@@326) true))
 :pattern ( ($generated@@297 $generated@@325 $generated@@326) ($generated@@324 $generated@@325))
 :pattern ( ($generated@@297 $generated@@325 $generated@@326) ($generated@@324 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (= (type $generated@@328) $generated@@91) (= (type $generated@@329) $generated@@91)) (and ($generated@@327 $generated@@328) ($generated@@327 $generated@@329))) (= ($generated@@297 $generated@@328 $generated@@329) true))
 :pattern ( ($generated@@297 $generated@@328 $generated@@329) ($generated@@327 $generated@@328))
 :pattern ( ($generated@@297 $generated@@328 $generated@@329) ($generated@@327 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@331) $generated@@78) (= (type $generated@@332) $generated@@78)) (= (type $generated@@333) $generated@@165)) (= (type $generated@@334) $generated@@165)) (= (type $generated@@335) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@189 $generated@@335)) (= ($generated@@97 ($generated@@284 $generated@@333 $generated@@334) ($generated@@194 $generated@@331 $generated@@332) $generated@@335)  (and ($generated@@330 $generated@@333 $generated@@331 $generated@@335) ($generated@@330 $generated@@334 $generated@@332 $generated@@335))))
 :pattern ( ($generated@@97 ($generated@@284 $generated@@333 $generated@@334) ($generated@@194 $generated@@331 $generated@@332) $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@91) (= ($generated@@193 $generated@@336) (= ($generated@@207 $generated@@336) $generated@@61)))
 :pattern ( ($generated@@193 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@91) (= ($generated@@324 $generated@@337) (= ($generated@@207 $generated@@337) $generated@@64)))
 :pattern ( ($generated@@324 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@91) (= ($generated@@338 $generated@@339) (= ($generated@@207 $generated@@339) $generated@@66)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@91) (= ($generated@@340 $generated@@341) (= ($generated@@207 $generated@@341) $generated@@67)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@91) (= ($generated@@327 $generated@@342) (= ($generated@@207 $generated@@342) $generated@@68)))
 :pattern ( ($generated@@327 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@91) (= ($generated@@343 $generated@@344) (= ($generated@@207 $generated@@344) $generated@@69)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@91) (= ($generated@@158 $generated@@345) (= ($generated@@207 $generated@@345) $generated@@70)))
 :pattern ( ($generated@@158 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@91) (= ($generated@@346 $generated@@347) (= ($generated@@207 $generated@@347) $generated@@72)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@91) (= ($generated@@302 $generated@@348) (= ($generated@@207 $generated@@348) $generated@@73)))
 :pattern ( ($generated@@302 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@169 (type $generated@@350))))
 (=> (and (= (type $generated@@350) ($generated@@164 $generated@@352)) (= (type $generated@@351) ($generated@@164 $generated@@352))) (= ($generated@@349 $generated@@350 $generated@@351)  (and (= ($generated@@166 $generated@@350) ($generated@@166 $generated@@351)) (forall (($generated@@353 Int) ) (!  (=> (and (<= 0 $generated@@353) (< $generated@@353 ($generated@@166 $generated@@350))) (= ($generated@@162 $generated@@350 $generated@@353) ($generated@@162 $generated@@351 $generated@@353)))
 :pattern ( ($generated@@162 $generated@@350 $generated@@353))
 :pattern ( ($generated@@162 $generated@@351 $generated@@353))
))))))
 :pattern ( ($generated@@349 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@91) ($generated@@193 $generated@@354)) (exists (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (and (and (= (type $generated@@355) $generated@@165) (= (type $generated@@356) $generated@@165)) (= $generated@@354 ($generated@@284 $generated@@355 $generated@@356)))
 :no-pattern (type $generated@@355)
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
)))
 :pattern ( ($generated@@193 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@91) ($generated@@302 $generated@@357)) (exists (($generated@@358 Int) ($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@91) (= $generated@@357 ($generated@@89 $generated@@358 $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
)))
 :pattern ( ($generated@@302 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ) (! (= (type ($generated@@360 $generated@@361)) ($generated@@164 $generated@@361))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@T) ) (! (= ($generated@@166 ($generated@@360 $generated@@362)) 0)
 :pattern ( ($generated@@360 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@91) ($generated@@324 $generated@@363)) (= $generated@@363 $generated@@208))
 :pattern ( ($generated@@324 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@91) ($generated@@327 $generated@@364)) (= $generated@@364 $generated@@210))
 :pattern ( ($generated@@327 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (= (type ($generated@@365 $generated@@366)) $generated@@91)
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@91) ($generated@@338 $generated@@367)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@91) (= $generated@@367 ($generated@@365 $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
)))
 :pattern ( ($generated@@338 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@91) ($generated@@340 $generated@@369)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) ($generated@@164 $generated@@165)) (= $generated@@369 ($generated@@163 $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
)))
 :pattern ( ($generated@@340 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@91) ($generated@@343 $generated@@371)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) ($generated@@164 $generated@@165)) (= $generated@@371 ($generated@@180 $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
)))
 :pattern ( ($generated@@343 $generated@@371))
)))
(assert (forall (($generated@@374 Int) ) (! (= (type ($generated@@373 $generated@@374)) $generated@@91)
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@91) ($generated@@158 $generated@@375)) (exists (($generated@@376 Int) ) (= $generated@@375 ($generated@@373 $generated@@376))))
 :pattern ( ($generated@@158 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@91) ($generated@@346 $generated@@377)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) ($generated@@164 $generated@@165)) (= $generated@@377 ($generated@@184 $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
)))
 :pattern ( ($generated@@346 $generated@@377))
)))
(assert  (and (= ($generated@@1 $generated@@381) 18) (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) $generated@@381)
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) $generated@@381) (= (type $generated@@384) $generated@@91)) (= (type $generated@@385) $generated@@91)) (= ($generated@@379 ($generated@@380 $generated@@383) $generated@@384 $generated@@385) ($generated@@379 $generated@@383 $generated@@384 $generated@@385)))
 :pattern ( ($generated@@379 ($generated@@380 $generated@@383) $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (= (type ($generated@@386 $generated@@387)) $generated@@165)
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@78) (= (type $generated@@390) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@330 ($generated@@386 $generated@@388) $generated@@389 $generated@@390) ($generated@@97 $generated@@388 $generated@@389 $generated@@390)))
 :pattern ( ($generated@@330 ($generated@@386 $generated@@388) $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@393 T@T) ) (! (= (type ($generated@@392 $generated@@393)) ($generated@@99 $generated@@393 $generated@@2))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@102 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@99 $generated@@395 $generated@@2)) (and (= (= ($generated@@391 $generated@@394) 0) (= $generated@@394 ($generated@@392 $generated@@395))) (=> (not (= ($generated@@391 $generated@@394) 0)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (< 0 ($generated ($generated@@104 $generated@@394 $generated@@396))))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert  (and (and (and (and (forall (($generated@@402 T@T) ($generated@@403 T@T) ) (= ($generated@@1 ($generated@@399 $generated@@402 $generated@@403)) 19)) (forall (($generated@@404 T@T) ($generated@@405 T@T) ) (! (= ($generated@@400 ($generated@@399 $generated@@404 $generated@@405)) $generated@@404)
 :pattern ( ($generated@@399 $generated@@404 $generated@@405))
))) (forall (($generated@@406 T@T) ($generated@@407 T@T) ) (! (= ($generated@@401 ($generated@@399 $generated@@406 $generated@@407)) $generated@@407)
 :pattern ( ($generated@@399 $generated@@406 $generated@@407))
))) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@400 (type $generated@@408))))
(= (type ($generated@@397 $generated@@408)) ($generated@@99 $generated@@409 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@408))
))) (forall (($generated@@410 T@T) ($generated@@411 T@T) ) (! (= (type ($generated@@398 $generated@@410 $generated@@411)) ($generated@@399 $generated@@410 $generated@@411))
 :pattern ( ($generated@@398 $generated@@410 $generated@@411))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@T) ) (! (let (($generated@@414 (type $generated@@412)))
 (not ($generated@@0 ($generated@@104 ($generated@@397 ($generated@@398 $generated@@414 $generated@@413)) $generated@@412))))
 :pattern ( (let (($generated@@414 (type $generated@@412)))
($generated@@104 ($generated@@397 ($generated@@398 $generated@@414 $generated@@413)) $generated@@412)))
)))
(assert  (and (and (and (and (forall (($generated@@420 T@T) ($generated@@421 T@T) ) (= ($generated@@1 ($generated@@417 $generated@@420 $generated@@421)) 20)) (forall (($generated@@422 T@T) ($generated@@423 T@T) ) (! (= ($generated@@418 ($generated@@417 $generated@@422 $generated@@423)) $generated@@422)
 :pattern ( ($generated@@417 $generated@@422 $generated@@423))
))) (forall (($generated@@424 T@T) ($generated@@425 T@T) ) (! (= ($generated@@419 ($generated@@417 $generated@@424 $generated@@425)) $generated@@425)
 :pattern ( ($generated@@417 $generated@@424 $generated@@425))
))) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@418 (type $generated@@426))))
(= (type ($generated@@415 $generated@@426)) ($generated@@99 $generated@@427 $generated@@4)))
 :pattern ( ($generated@@415 $generated@@426))
))) (forall (($generated@@428 T@T) ($generated@@429 T@T) ) (! (= (type ($generated@@416 $generated@@428 $generated@@429)) ($generated@@417 $generated@@428 $generated@@429))
 :pattern ( ($generated@@416 $generated@@428 $generated@@429))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@T) ) (! (let (($generated@@432 (type $generated@@430)))
 (not ($generated@@0 ($generated@@104 ($generated@@415 ($generated@@416 $generated@@432 $generated@@431)) $generated@@430))))
 :pattern ( (let (($generated@@432 (type $generated@@430)))
($generated@@104 ($generated@@415 ($generated@@416 $generated@@432 $generated@@431)) $generated@@430)))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@102 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@99 $generated@@434 $generated@@2)) (= ($generated@@212 $generated@@433) (forall (($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@434) (and (<= 0 ($generated ($generated@@104 $generated@@433 $generated@@435))) (<= ($generated ($generated@@104 $generated@@433 $generated@@435)) ($generated@@391 $generated@@433))))
 :pattern ( ($generated@@104 $generated@@433 $generated@@435))
)))))
 :pattern ( ($generated@@212 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@165) ($generated@@285 $generated@@436 $generated@@92)) (and (= ($generated@@386 ($generated@@168 $generated@@2 $generated@@436)) $generated@@436) ($generated@@88 ($generated@@168 $generated@@2 $generated@@436) $generated@@92)))
 :pattern ( ($generated@@285 $generated@@436 $generated@@92))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@165) ($generated@@285 $generated@@437 $generated@@292)) (and (= ($generated@@386 ($generated@@168 $generated@@91 $generated@@437)) $generated@@437) ($generated@@88 ($generated@@168 $generated@@91 $generated@@437) $generated@@292)))
 :pattern ( ($generated@@285 $generated@@437 $generated@@292))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@165) ($generated@@285 $generated@@438 $generated@@90)) (and (= ($generated@@386 ($generated@@168 $generated@@91 $generated@@438)) $generated@@438) ($generated@@88 ($generated@@168 $generated@@91 $generated@@438) $generated@@90)))
 :pattern ( ($generated@@285 $generated@@438 $generated@@90))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (= (type $generated@@439) $generated@@91) (= ($generated@@88 ($generated@@365 $generated@@439) $generated@@292) ($generated@@88 $generated@@439 $generated@@292)))
 :pattern ( ($generated@@88 ($generated@@365 $generated@@439) $generated@@292))
)))
(assert (forall (($generated@@440 Int) ) (! (= ($generated@@88 ($generated@@373 $generated@@440) $generated@@90) ($generated@@88 ($generated@@8 $generated@@440) $generated@@92))
 :pattern ( ($generated@@88 ($generated@@373 $generated@@440) $generated@@90))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@91)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (= (type $generated@@443) $generated@@91) (= (type $generated@@444) $generated@@91)) (and ($generated@@338 $generated@@443) ($generated@@338 $generated@@444))) (= ($generated@@297 $generated@@443 $generated@@444) ($generated@@297 ($generated@@441 $generated@@443) ($generated@@441 $generated@@444))))
 :pattern ( ($generated@@297 $generated@@443 $generated@@444) ($generated@@338 $generated@@443))
 :pattern ( ($generated@@297 $generated@@443 $generated@@444) ($generated@@338 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) ($generated@@164 $generated@@165))
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (= (type $generated@@447) $generated@@91) (= (type $generated@@448) $generated@@91)) (and ($generated@@340 $generated@@447) ($generated@@340 $generated@@448))) (= ($generated@@297 $generated@@447 $generated@@448) ($generated@@349 ($generated@@445 $generated@@447) ($generated@@445 $generated@@448))))
 :pattern ( ($generated@@297 $generated@@447 $generated@@448) ($generated@@340 $generated@@447))
 :pattern ( ($generated@@297 $generated@@447 $generated@@448) ($generated@@340 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) ($generated@@164 $generated@@165))
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (= (type $generated@@451) $generated@@91) (= (type $generated@@452) $generated@@91)) (and ($generated@@343 $generated@@451) ($generated@@343 $generated@@452))) (= ($generated@@297 $generated@@451 $generated@@452) ($generated@@349 ($generated@@449 $generated@@451) ($generated@@449 $generated@@452))))
 :pattern ( ($generated@@297 $generated@@451 $generated@@452) ($generated@@343 $generated@@451))
 :pattern ( ($generated@@297 $generated@@451 $generated@@452) ($generated@@343 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) ($generated@@164 $generated@@165))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (= (type $generated@@455) $generated@@91) (= (type $generated@@456) $generated@@91)) (and ($generated@@346 $generated@@455) ($generated@@346 $generated@@456))) (= ($generated@@157 $generated@@455 $generated@@456) ($generated@@349 ($generated@@453 $generated@@455) ($generated@@453 $generated@@456))))
 :pattern ( ($generated@@157 $generated@@455 $generated@@456) ($generated@@346 $generated@@455))
 :pattern ( ($generated@@157 $generated@@455 $generated@@456) ($generated@@346 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@401 (type $generated@@457))))
(let (($generated@@459 ($generated@@400 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@399 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@398 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ) (!  (and (= (type $generated@@460) $generated@@459) ($generated@@0 ($generated@@104 ($generated@@397 $generated@@457) $generated@@460)))
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@397 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@401 (type $generated@@462))))
(= (type ($generated@@461 $generated@@462)) ($generated@@99 $generated@@463 $generated@@4)))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@401 (type $generated@@464))))
(let (($generated@@466 ($generated@@400 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@399 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@398 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ) (!  (and (= (type $generated@@467) $generated@@465) ($generated@@0 ($generated@@104 ($generated@@461 $generated@@464) $generated@@467)))
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@461 $generated@@464))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@419 (type $generated@@468))))
(let (($generated@@470 ($generated@@418 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@417 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@416 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ) (!  (and (= (type $generated@@471) $generated@@470) ($generated@@0 ($generated@@104 ($generated@@415 $generated@@468) $generated@@471)))
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@415 $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@419 (type $generated@@473))))
(= (type ($generated@@472 $generated@@473)) ($generated@@99 $generated@@474 $generated@@4)))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@419 (type $generated@@475))))
(let (($generated@@477 ($generated@@418 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@417 $generated@@477 $generated@@476)) (or (= $generated@@475 ($generated@@416 $generated@@477 $generated@@476)) (exists (($generated@@478 T@U) ) (!  (and (= (type $generated@@478) $generated@@476) ($generated@@0 ($generated@@104 ($generated@@472 $generated@@475) $generated@@478)))
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@472 $generated@@475))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) ($generated@@99 $generated@@165 $generated@@2)) (= (type $generated@@480) $generated@@78)) (= ($generated@@88 $generated@@479 ($generated@@211 $generated@@480)) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@165) (< 0 ($generated ($generated@@104 $generated@@479 $generated@@481)))) ($generated@@285 $generated@@481 $generated@@480))
 :pattern ( ($generated@@104 $generated@@479 $generated@@481))
))))
 :pattern ( ($generated@@88 $generated@@479 ($generated@@211 $generated@@480)))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@78)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) ($generated@@164 $generated@@165)) (= ($generated@@88 ($generated@@163 $generated@@484) $generated@@292) ($generated@@88 $generated@@484 ($generated@@482 $generated@@292))))
 :pattern ( ($generated@@88 ($generated@@163 $generated@@484) $generated@@292))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) ($generated@@164 $generated@@165)) (= ($generated@@88 ($generated@@180 $generated@@485) $generated@@292) ($generated@@88 $generated@@485 ($generated@@482 $generated@@292))))
 :pattern ( ($generated@@88 ($generated@@180 $generated@@485) $generated@@292))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) ($generated@@164 $generated@@165)) (= ($generated@@88 ($generated@@184 $generated@@486) $generated@@90) ($generated@@88 $generated@@486 ($generated@@482 $generated@@90))))
 :pattern ( ($generated@@88 ($generated@@184 $generated@@486) $generated@@90))
)))
(assert  (=> (<= 2 $generated@@487) (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (and (= (type $generated@@489) $generated@@381) (= (type $generated@@490) $generated@@91)) (= (type $generated@@491) $generated@@91)) (or ($generated@@488 $generated@@490 $generated@@491) (and (not (= 2 $generated@@487)) (and ($generated@@88 $generated@@490 $generated@@90) ($generated@@88 $generated@@491 $generated@@292))))) true)
 :pattern ( ($generated@@379 $generated@@489 $generated@@490 $generated@@491))
))))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@99 $generated@@165 $generated@@4)) (= (type $generated@@493) $generated@@78)) (= (type $generated@@494) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@492 ($generated@@308 $generated@@493) $generated@@494) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@165) ($generated@@0 ($generated@@104 $generated@@492 $generated@@495))) ($generated@@330 $generated@@495 $generated@@493 $generated@@494))
 :pattern ( ($generated@@104 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@97 $generated@@492 ($generated@@308 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@99 $generated@@165 $generated@@4)) (= (type $generated@@497) $generated@@78)) (= (type $generated@@498) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@496 ($generated@@313 $generated@@497) $generated@@498) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@165) ($generated@@0 ($generated@@104 $generated@@496 $generated@@499))) ($generated@@330 $generated@@499 $generated@@497 $generated@@498))
 :pattern ( ($generated@@104 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@97 $generated@@496 ($generated@@313 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 (type $generated@@500)))
(= ($generated ($generated@@104 ($generated@@392 $generated@@501) $generated@@500)) 0))
 :pattern ( (let (($generated@@501 (type $generated@@500)))
($generated@@104 ($generated@@392 $generated@@501) $generated@@500)))
)))
(assert  (and (forall (($generated@@504 T@U) ) (! (= (type ($generated@@502 $generated@@504)) ($generated@@99 $generated@@165 $generated@@4))
 :pattern ( ($generated@@502 $generated@@504))
)) (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@401 (type $generated@@505))))
(let (($generated@@507 ($generated@@400 (type $generated@@505))))
(= (type ($generated@@503 $generated@@505)) ($generated@@99 $generated@@507 $generated@@506))))
 :pattern ( ($generated@@503 $generated@@505))
))))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) ($generated@@399 $generated@@165 $generated@@165)) (= (type $generated@@509) $generated@@165)) (= ($generated@@0 ($generated@@104 ($generated@@502 $generated@@508) $generated@@509))  (and ($generated@@0 ($generated@@104 ($generated@@397 $generated@@508) ($generated@@201 ($generated@@168 $generated@@91 $generated@@509)))) (= ($generated@@104 ($generated@@503 $generated@@508) ($generated@@201 ($generated@@168 $generated@@91 $generated@@509))) ($generated@@202 ($generated@@168 $generated@@91 $generated@@509))))))
 :pattern ( ($generated@@104 ($generated@@502 $generated@@508) $generated@@509))
)))
(assert  (and (forall (($generated@@512 T@U) ) (! (= (type ($generated@@510 $generated@@512)) ($generated@@99 $generated@@165 $generated@@4))
 :pattern ( ($generated@@510 $generated@@512))
)) (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@419 (type $generated@@513))))
(let (($generated@@515 ($generated@@418 (type $generated@@513))))
(= (type ($generated@@511 $generated@@513)) ($generated@@99 $generated@@515 $generated@@514))))
 :pattern ( ($generated@@511 $generated@@513))
))))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) ($generated@@417 $generated@@165 $generated@@165)) (= (type $generated@@517) $generated@@165)) (= ($generated@@0 ($generated@@104 ($generated@@510 $generated@@516) $generated@@517))  (and ($generated@@0 ($generated@@104 ($generated@@415 $generated@@516) ($generated@@201 ($generated@@168 $generated@@91 $generated@@517)))) (= ($generated@@104 ($generated@@511 $generated@@516) ($generated@@201 ($generated@@168 $generated@@91 $generated@@517))) ($generated@@202 ($generated@@168 $generated@@91 $generated@@517))))))
 :pattern ( ($generated@@104 ($generated@@510 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(let (($generated@@521 ($generated@@400 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@399 $generated@@521 $generated@@520)) (= ($generated@@0 ($generated@@104 ($generated@@461 $generated@@518) $generated@@519)) (exists (($generated@@522 T@U) ) (!  (and (= (type $generated@@522) $generated@@521) (and ($generated@@0 ($generated@@104 ($generated@@397 $generated@@518) $generated@@522)) (= $generated@@519 ($generated@@104 ($generated@@503 $generated@@518) $generated@@522))))
 :pattern ( ($generated@@104 ($generated@@397 $generated@@518) $generated@@522))
 :pattern ( ($generated@@104 ($generated@@503 $generated@@518) $generated@@522))
))))))
 :pattern ( ($generated@@104 ($generated@@461 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(let (($generated@@526 ($generated@@418 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@417 $generated@@526 $generated@@525)) (= ($generated@@0 ($generated@@104 ($generated@@472 $generated@@523) $generated@@524)) (exists (($generated@@527 T@U) ) (!  (and (= (type $generated@@527) $generated@@526) (and ($generated@@0 ($generated@@104 ($generated@@415 $generated@@523) $generated@@527)) (= $generated@@524 ($generated@@104 ($generated@@511 $generated@@523) $generated@@527))))
 :pattern ( ($generated@@104 ($generated@@415 $generated@@523) $generated@@527))
 :pattern ( ($generated@@104 ($generated@@511 $generated@@523) $generated@@527))
))))))
 :pattern ( ($generated@@104 ($generated@@472 $generated@@523) $generated@@524))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (! (= (type ($generated@@528 $generated@@529 $generated@@530)) $generated@@78)
 :pattern ( ($generated@@528 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) ($generated@@399 $generated@@165 $generated@@165)) (= (type $generated@@532) $generated@@78)) (= (type $generated@@533) $generated@@78)) (= (type $generated@@534) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@531 ($generated@@528 $generated@@532 $generated@@533) $generated@@534) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@165) ($generated@@0 ($generated@@104 ($generated@@397 $generated@@531) $generated@@535))) (and ($generated@@330 ($generated@@104 ($generated@@503 $generated@@531) $generated@@535) $generated@@533 $generated@@534) ($generated@@330 $generated@@535 $generated@@532 $generated@@534)))
 :pattern ( ($generated@@104 ($generated@@503 $generated@@531) $generated@@535))
 :pattern ( ($generated@@104 ($generated@@397 $generated@@531) $generated@@535))
))))
 :pattern ( ($generated@@97 $generated@@531 ($generated@@528 $generated@@532 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (! (= (type ($generated@@536 $generated@@537 $generated@@538)) $generated@@78)
 :pattern ( ($generated@@536 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) ($generated@@417 $generated@@165 $generated@@165)) (= (type $generated@@540) $generated@@78)) (= (type $generated@@541) $generated@@78)) (= (type $generated@@542) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@539 ($generated@@536 $generated@@540 $generated@@541) $generated@@542) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@165) ($generated@@0 ($generated@@104 ($generated@@415 $generated@@539) $generated@@543))) (and ($generated@@330 ($generated@@104 ($generated@@511 $generated@@539) $generated@@543) $generated@@541 $generated@@542) ($generated@@330 $generated@@543 $generated@@540 $generated@@542)))
 :pattern ( ($generated@@104 ($generated@@511 $generated@@539) $generated@@543))
 :pattern ( ($generated@@104 ($generated@@415 $generated@@539) $generated@@543))
))))
 :pattern ( ($generated@@97 $generated@@539 ($generated@@536 $generated@@540 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@169 (type $generated@@544))))
 (=> (and (and (= (type $generated@@544) ($generated@@164 $generated@@546)) (= (type $generated@@545) ($generated@@164 $generated@@546))) ($generated@@349 $generated@@544 $generated@@545)) (= $generated@@544 $generated@@545)))
 :pattern ( ($generated@@349 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@91) (= (type $generated@@548) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@189 $generated@@548)) (= ($generated@@97 ($generated@@365 $generated@@547) $generated@@292 $generated@@548) ($generated@@97 $generated@@547 $generated@@292 $generated@@548)))
 :pattern ( ($generated@@97 ($generated@@365 $generated@@547) $generated@@292 $generated@@548))
)))
(assert (forall (($generated@@549 Int) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@99 $generated@@100 $generated@@101)) ($generated@@189 $generated@@550)) (= ($generated@@97 ($generated@@373 $generated@@549) $generated@@90 $generated@@550) ($generated@@97 ($generated@@8 $generated@@549) $generated@@92 $generated@@550)))
 :pattern ( ($generated@@97 ($generated@@373 $generated@@549) $generated@@90 $generated@@550))
)))
(assert (forall (($generated@@552 T@T) ) (! (= (type ($generated@@551 $generated@@552)) ($generated@@99 $generated@@552 $generated@@4))
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@419 (type $generated@@553))))
(let (($generated@@555 ($generated@@418 (type $generated@@553))))
 (=> (= (type $generated@@553) ($generated@@417 $generated@@555 $generated@@554)) (= (= $generated@@553 ($generated@@416 $generated@@555 $generated@@554)) (= ($generated@@415 $generated@@553) ($generated@@551 $generated@@555))))))
 :pattern ( ($generated@@415 $generated@@553))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@419 (type $generated@@556))))
(let (($generated@@558 ($generated@@418 (type $generated@@556))))
 (=> (= (type $generated@@556) ($generated@@417 $generated@@558 $generated@@557)) (= (= $generated@@556 ($generated@@416 $generated@@558 $generated@@557)) (= ($generated@@472 $generated@@556) ($generated@@551 $generated@@557))))))
 :pattern ( ($generated@@472 $generated@@556))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@419 (type $generated@@559))))
(let (($generated@@561 ($generated@@418 (type $generated@@559))))
 (=> (= (type $generated@@559) ($generated@@417 $generated@@561 $generated@@560)) (= (= $generated@@559 ($generated@@416 $generated@@561 $generated@@560)) (= ($generated@@510 $generated@@559) ($generated@@551 $generated@@165))))))
 :pattern ( ($generated@@510 $generated@@559))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@401 (type $generated@@562))))
(let (($generated@@564 ($generated@@400 (type $generated@@562))))
 (=> (= (type $generated@@562) ($generated@@399 $generated@@564 $generated@@563)) (or (= $generated@@562 ($generated@@398 $generated@@564 $generated@@563)) (exists (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (and (and (= (type $generated@@565) $generated@@165) (= (type $generated@@566) $generated@@165)) ($generated@@0 ($generated@@104 ($generated@@502 $generated@@562) ($generated@@386 ($generated@@284 $generated@@565 $generated@@566)))))
 :no-pattern (type $generated@@565)
 :no-pattern (type $generated@@566)
 :no-pattern ($generated $generated@@565)
 :no-pattern ($generated@@0 $generated@@565)
 :no-pattern ($generated $generated@@566)
 :no-pattern ($generated@@0 $generated@@566)
))))))
 :pattern ( ($generated@@502 $generated@@562))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@419 (type $generated@@567))))
(let (($generated@@569 ($generated@@418 (type $generated@@567))))
 (=> (= (type $generated@@567) ($generated@@417 $generated@@569 $generated@@568)) (or (= $generated@@567 ($generated@@416 $generated@@569 $generated@@568)) (exists (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (and (and (= (type $generated@@570) $generated@@165) (= (type $generated@@571) $generated@@165)) ($generated@@0 ($generated@@104 ($generated@@510 $generated@@567) ($generated@@386 ($generated@@284 $generated@@570 $generated@@571)))))
 :no-pattern (type $generated@@570)
 :no-pattern (type $generated@@571)
 :no-pattern ($generated $generated@@570)
 :no-pattern ($generated@@0 $generated@@570)
 :no-pattern ($generated $generated@@571)
 :no-pattern ($generated@@0 $generated@@571)
))))))
 :pattern ( ($generated@@510 $generated@@567))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@165) ($generated@@285 $generated@@572 $generated@@46)) (and (= ($generated@@386 ($generated@@168 $generated@@2 $generated@@572)) $generated@@572) ($generated@@88 ($generated@@168 $generated@@2 $generated@@572) $generated@@46)))
 :pattern ( ($generated@@285 $generated@@572 $generated@@46))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@165) ($generated@@285 $generated@@573 $generated@@47)) (and (= ($generated@@386 ($generated@@168 $generated@@3 $generated@@573)) $generated@@573) ($generated@@88 ($generated@@168 $generated@@3 $generated@@573) $generated@@47)))
 :pattern ( ($generated@@285 $generated@@573 $generated@@47))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@165) ($generated@@285 $generated@@574 $generated@@44)) (and (= ($generated@@386 ($generated@@168 $generated@@4 $generated@@574)) $generated@@574) ($generated@@88 ($generated@@168 $generated@@4 $generated@@574) $generated@@44)))
 :pattern ( ($generated@@285 $generated@@574 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@575) 21))
(assert (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@165) ($generated@@285 $generated@@576 $generated@@45)) (and (= ($generated@@386 ($generated@@168 $generated@@575 $generated@@576)) $generated@@576) ($generated@@88 ($generated@@168 $generated@@575 $generated@@576) $generated@@45)))
 :pattern ( ($generated@@285 $generated@@576 $generated@@45))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@78) (= ($generated@@285 ($generated@@386 $generated@@577) $generated@@578) ($generated@@88 $generated@@577 $generated@@578)))
 :pattern ( ($generated@@285 ($generated@@386 $generated@@577) $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@102 (type $generated@@579))))
 (=> (= (type $generated@@579) ($generated@@99 $generated@@580 $generated@@2)) (<= 0 ($generated@@391 $generated@@579))))
 :pattern ( ($generated@@391 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@169 (type $generated@@581))))
 (=> (= (type $generated@@581) ($generated@@164 $generated@@582)) (<= 0 ($generated@@166 $generated@@581))))
 :pattern ( ($generated@@166 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@164 $generated@@165)) (= (type $generated@@584) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@189 $generated@@584)) (= ($generated@@97 ($generated@@163 $generated@@583) $generated@@292 $generated@@584) ($generated@@97 $generated@@583 ($generated@@482 $generated@@292) $generated@@584)))
 :pattern ( ($generated@@97 ($generated@@163 $generated@@583) $generated@@292 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@164 $generated@@165)) (= (type $generated@@586) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@189 $generated@@586)) (= ($generated@@97 ($generated@@180 $generated@@585) $generated@@292 $generated@@586) ($generated@@97 $generated@@585 ($generated@@482 $generated@@292) $generated@@586)))
 :pattern ( ($generated@@97 ($generated@@180 $generated@@585) $generated@@292 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@164 $generated@@165)) (= (type $generated@@588) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@189 $generated@@588)) (= ($generated@@97 ($generated@@184 $generated@@587) $generated@@90 $generated@@588) ($generated@@97 $generated@@587 ($generated@@482 $generated@@90) $generated@@588)))
 :pattern ( ($generated@@97 ($generated@@184 $generated@@587) $generated@@90 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@78)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@78) (= (type $generated@@592) $generated@@78)) (= ($generated@@589 ($generated@@528 $generated@@591 $generated@@592)) $generated@@591))
 :pattern ( ($generated@@528 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@78)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@78) (= (type $generated@@596) $generated@@78)) (= ($generated@@593 ($generated@@528 $generated@@595 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@528 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@78) (= (type $generated@@598) $generated@@78)) (= ($generated@@86 ($generated@@528 $generated@@597 $generated@@598)) $generated@@58))
 :pattern ( ($generated@@528 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ) (! (= (type ($generated@@599 $generated@@600)) $generated@@78)
 :pattern ( ($generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@78) (= (type $generated@@602) $generated@@78)) (= ($generated@@599 ($generated@@536 $generated@@601 $generated@@602)) $generated@@601))
 :pattern ( ($generated@@536 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ) (! (= (type ($generated@@603 $generated@@604)) $generated@@78)
 :pattern ( ($generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@78) (= (type $generated@@606) $generated@@78)) (= ($generated@@603 ($generated@@536 $generated@@605 $generated@@606)) $generated@@606))
 :pattern ( ($generated@@536 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@78) (= (type $generated@@608) $generated@@78)) (= ($generated@@86 ($generated@@536 $generated@@607 $generated@@608)) $generated@@59))
 :pattern ( ($generated@@536 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@165) (= (type $generated@@610) $generated@@165)) (= ($generated@@207 ($generated@@284 $generated@@609 $generated@@610)) $generated@@61))
 :pattern ( ($generated@@284 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ) (! (= (type ($generated@@611 $generated@@612)) $generated@@78)
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@78) (= (type $generated@@614) $generated@@78)) (= ($generated@@611 ($generated@@194 $generated@@613 $generated@@614)) $generated@@613))
 :pattern ( ($generated@@194 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ) (! (= (type ($generated@@615 $generated@@616)) $generated@@78)
 :pattern ( ($generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@78) (= (type $generated@@618) $generated@@78)) (= ($generated@@615 ($generated@@194 $generated@@617 $generated@@618)) $generated@@618))
 :pattern ( ($generated@@194 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@165) (= (type $generated@@620) $generated@@165)) (= ($generated@@201 ($generated@@284 $generated@@619 $generated@@620)) $generated@@619))
 :pattern ( ($generated@@284 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@165) (= (type $generated@@622) $generated@@165)) (= ($generated@@202 ($generated@@284 $generated@@621 $generated@@622)) $generated@@622))
 :pattern ( ($generated@@284 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 Int) ($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@91) (= ($generated@@207 ($generated@@89 $generated@@623 $generated@@624)) $generated@@73))
 :pattern ( ($generated@@89 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 Int) ($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@91) (= ($generated@@303 ($generated@@89 $generated@@625 $generated@@626)) $generated@@625))
 :pattern ( ($generated@@89 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 Int) ($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@91) (= ($generated@@304 ($generated@@89 $generated@@627 $generated@@628)) $generated@@628))
 :pattern ( ($generated@@89 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@164 $generated@@165)) (= (type $generated@@630) $generated@@78)) (= (type $generated@@631) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@629 ($generated@@482 $generated@@630) $generated@@631) (forall (($generated@@632 Int) ) (!  (=> (and (<= 0 $generated@@632) (< $generated@@632 ($generated@@166 $generated@@629))) ($generated@@330 ($generated@@162 $generated@@629 $generated@@632) $generated@@630 $generated@@631))
 :pattern ( ($generated@@162 $generated@@629 $generated@@632))
))))
 :pattern ( ($generated@@97 $generated@@629 ($generated@@482 $generated@@630) $generated@@631))
)))
(assert (forall (($generated@@634 Int) ) (! (= ($generated@@633 ($generated@@98 $generated@@634)) $generated@@634)
 :pattern ( ($generated@@98 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ) (! (= (type ($generated@@635 $generated@@636)) $generated@@78)
 :pattern ( ($generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@78) (= ($generated@@635 ($generated@@308 $generated@@637)) $generated@@637))
 :pattern ( ($generated@@308 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@78) (= ($generated@@86 ($generated@@308 $generated@@638)) $generated@@54))
 :pattern ( ($generated@@308 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ) (! (= (type ($generated@@639 $generated@@640)) $generated@@78)
 :pattern ( ($generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@78) (= ($generated@@639 ($generated@@313 $generated@@641)) $generated@@641))
 :pattern ( ($generated@@313 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@78) (= ($generated@@86 ($generated@@313 $generated@@642)) $generated@@55))
 :pattern ( ($generated@@313 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ) (! (= (type ($generated@@643 $generated@@644)) $generated@@78)
 :pattern ( ($generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@78) (= ($generated@@643 ($generated@@211 $generated@@645)) $generated@@645))
 :pattern ( ($generated@@211 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@78) (= ($generated@@86 ($generated@@211 $generated@@646)) $generated@@56))
 :pattern ( ($generated@@211 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ) (! (= (type ($generated@@647 $generated@@648)) $generated@@78)
 :pattern ( ($generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@78) (= ($generated@@647 ($generated@@482 $generated@@649)) $generated@@649))
 :pattern ( ($generated@@482 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@78) (= ($generated@@86 ($generated@@482 $generated@@650)) $generated@@57))
 :pattern ( ($generated@@482 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@91) (= ($generated@@207 ($generated@@365 $generated@@651)) $generated@@66))
 :pattern ( ($generated@@365 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@91) (= ($generated@@441 ($generated@@365 $generated@@652)) $generated@@652))
 :pattern ( ($generated@@365 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) ($generated@@164 $generated@@165)) (= ($generated@@207 ($generated@@163 $generated@@653)) $generated@@67))
 :pattern ( ($generated@@163 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) ($generated@@164 $generated@@165)) (= ($generated@@445 ($generated@@163 $generated@@654)) $generated@@654))
 :pattern ( ($generated@@163 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) ($generated@@164 $generated@@165)) (= ($generated@@207 ($generated@@180 $generated@@655)) $generated@@69))
 :pattern ( ($generated@@180 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) ($generated@@164 $generated@@165)) (= ($generated@@449 ($generated@@180 $generated@@656)) $generated@@656))
 :pattern ( ($generated@@180 $generated@@656))
)))
(assert (forall (($generated@@657 Int) ) (! (= ($generated@@207 ($generated@@373 $generated@@657)) $generated@@70)
 :pattern ( ($generated@@373 $generated@@657))
)))
(assert (forall (($generated@@658 Int) ) (! (= ($generated@@159 ($generated@@373 $generated@@658)) $generated@@658)
 :pattern ( ($generated@@373 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) ($generated@@164 $generated@@165)) (= ($generated@@207 ($generated@@184 $generated@@659)) $generated@@72))
 :pattern ( ($generated@@184 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) ($generated@@164 $generated@@165)) (= ($generated@@453 ($generated@@184 $generated@@660)) $generated@@660))
 :pattern ( ($generated@@184 $generated@@660))
)))
(assert (forall (($generated@@661 T@U) ) (! (let (($generated@@662 (type $generated@@661)))
(= ($generated@@168 $generated@@662 ($generated@@386 $generated@@661)) $generated@@661))
 :pattern ( ($generated@@386 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@663) ($generated@@399 $generated@@165 $generated@@165)) (= (type $generated@@664) $generated@@78)) (= (type $generated@@665) $generated@@78)) (= ($generated@@88 $generated@@663 ($generated@@528 $generated@@664 $generated@@665)) (forall (($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@165) ($generated@@0 ($generated@@104 ($generated@@397 $generated@@663) $generated@@666))) (and ($generated@@285 ($generated@@104 ($generated@@503 $generated@@663) $generated@@666) $generated@@665) ($generated@@285 $generated@@666 $generated@@664)))
 :pattern ( ($generated@@104 ($generated@@503 $generated@@663) $generated@@666))
 :pattern ( ($generated@@104 ($generated@@397 $generated@@663) $generated@@666))
))))
 :pattern ( ($generated@@88 $generated@@663 ($generated@@528 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (= (type $generated@@667) ($generated@@417 $generated@@165 $generated@@165)) (= (type $generated@@668) $generated@@78)) (= (type $generated@@669) $generated@@78)) (= ($generated@@88 $generated@@667 ($generated@@536 $generated@@668 $generated@@669)) (forall (($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@165) ($generated@@0 ($generated@@104 ($generated@@415 $generated@@667) $generated@@670))) (and ($generated@@285 ($generated@@104 ($generated@@511 $generated@@667) $generated@@670) $generated@@669) ($generated@@285 $generated@@670 $generated@@668)))
 :pattern ( ($generated@@104 ($generated@@511 $generated@@667) $generated@@670))
 :pattern ( ($generated@@104 ($generated@@415 $generated@@667) $generated@@670))
))))
 :pattern ( ($generated@@88 $generated@@667 ($generated@@536 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) $generated@@165) (= (type $generated@@673) $generated@@165)) (< ($generated@@671 $generated@@672) ($generated@@167 ($generated@@284 $generated@@672 $generated@@673))))
 :pattern ( ($generated@@284 $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) $generated@@165) (= (type $generated@@675) $generated@@165)) (< ($generated@@671 $generated@@675) ($generated@@167 ($generated@@284 $generated@@674 $generated@@675))))
 :pattern ( ($generated@@284 $generated@@674 $generated@@675))
)))
(assert (forall (($generated@@676 Int) ($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@91) (< ($generated@@167 $generated@@677) ($generated@@167 ($generated@@89 $generated@@676 $generated@@677))))
 :pattern ( ($generated@@89 $generated@@676 $generated@@677))
)))
(assert  (=> (<= 2 $generated@@487) (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (and (= (type $generated@@678) $generated@@381) (= (type $generated@@679) $generated@@91)) (= (type $generated@@680) $generated@@91)) (or ($generated@@488 ($generated@@320 $generated@@679) ($generated@@320 $generated@@680)) (and (not (= 2 $generated@@487)) (and ($generated@@88 $generated@@679 $generated@@90) ($generated@@88 $generated@@680 $generated@@292))))) (and (=> (not ($generated@@0 ($generated@@320 ($generated@@11 ($generated@@158 ($generated@@320 $generated@@679)))))) (and (=> ($generated@@0 ($generated@@320 ($generated@@11 ($generated@@346 ($generated@@320 $generated@@679))))) (let (($generated@@681 ($generated@@320 ($generated@@453 ($generated@@320 $generated@@679)))))
 (=> ($generated@@0 ($generated@@320 ($generated@@11 ($generated@@340 ($generated@@320 $generated@@680))))) (=> (= ($generated@@166 $generated@@681) ($generated@@166 ($generated@@320 ($generated@@445 ($generated@@320 $generated@@680))))) (forall (($generated@@682 Int) ) (!  (=> (<= ($generated@@318 0) $generated@@682) (=> (< $generated@@682 ($generated@@166 $generated@@681)) ($generated@@488 ($generated@@168 $generated@@91 ($generated@@162 $generated@@681 $generated@@682)) ($generated@@168 $generated@@91 ($generated@@162 ($generated@@320 ($generated@@445 ($generated@@320 $generated@@680))) $generated@@682)))))
 :pattern ( ($generated@@168 $generated@@91 ($generated@@162 ($generated@@445 $generated@@680) $generated@@682)))
 :pattern ( ($generated@@168 $generated@@91 ($generated@@162 $generated@@681 $generated@@682)))
)))))) (=> (not ($generated@@0 ($generated@@320 ($generated@@11 ($generated@@346 ($generated@@320 $generated@@679)))))) (let (($generated@@683 ($generated@@320 ($generated@@304 ($generated@@320 $generated@@679)))))
(let (($generated@@684 ($generated@@318 ($generated@@303 ($generated@@320 $generated@@679)))))
 (=> ($generated@@0 ($generated@@320 ($generated@@11 ($generated@@343 ($generated@@320 $generated@@680))))) (=> (< $generated@@684 ($generated@@166 ($generated@@320 ($generated@@449 ($generated@@320 $generated@@680))))) ($generated@@488 $generated@@683 ($generated@@168 $generated@@91 ($generated@@162 ($generated@@320 ($generated@@449 ($generated@@320 $generated@@680))) $generated@@684)))))))))) (= ($generated@@379 ($generated@@380 $generated@@678) ($generated@@320 $generated@@679) ($generated@@320 $generated@@680)) (ite ($generated@@158 ($generated@@320 $generated@@679)) ($generated@@324 ($generated@@320 $generated@@680)) (ite ($generated@@346 ($generated@@320 $generated@@679)) (let (($generated@@685 ($generated@@320 ($generated@@453 ($generated@@320 $generated@@679)))))
 (and (and ($generated@@340 ($generated@@320 $generated@@680)) (= ($generated@@166 $generated@@685) ($generated@@166 ($generated@@320 ($generated@@445 ($generated@@320 $generated@@680)))))) (forall (($generated@@686 Int) ) (!  (=> true (=> (and (<= ($generated@@318 0) $generated@@686) (< $generated@@686 ($generated@@166 $generated@@685))) ($generated@@379 ($generated@@380 $generated@@678) ($generated@@168 $generated@@91 ($generated@@162 $generated@@685 $generated@@686)) ($generated@@168 $generated@@91 ($generated@@162 ($generated@@320 ($generated@@445 ($generated@@320 $generated@@680))) $generated@@686)))))
 :pattern ( ($generated@@168 $generated@@91 ($generated@@162 ($generated@@445 $generated@@680) $generated@@686)))
 :pattern ( ($generated@@168 $generated@@91 ($generated@@162 $generated@@685 $generated@@686)))
)))) (let (($generated@@687 ($generated@@320 ($generated@@304 ($generated@@320 $generated@@679)))))
(let (($generated@@688 ($generated@@318 ($generated@@303 ($generated@@320 $generated@@679)))))
 (and (and ($generated@@343 ($generated@@320 $generated@@680)) (< $generated@@688 ($generated@@166 ($generated@@320 ($generated@@449 ($generated@@320 $generated@@680)))))) ($generated@@379 ($generated@@380 $generated@@678) $generated@@687 ($generated@@168 $generated@@91 ($generated@@162 ($generated@@320 ($generated@@449 ($generated@@320 $generated@@680))) $generated@@688)))))))))))
 :weight 3
 :pattern ( ($generated@@379 ($generated@@380 $generated@@678) ($generated@@320 $generated@@679) ($generated@@320 $generated@@680)))
))))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) $generated@@165) (= (type $generated@@690) $generated@@78)) (= (type $generated@@691) $generated@@78)) ($generated@@285 $generated@@689 ($generated@@528 $generated@@690 $generated@@691))) (and (= ($generated@@386 ($generated@@168 ($generated@@399 $generated@@165 $generated@@165) $generated@@689)) $generated@@689) ($generated@@88 ($generated@@168 ($generated@@399 $generated@@165 $generated@@165) $generated@@689) ($generated@@528 $generated@@690 $generated@@691))))
 :pattern ( ($generated@@285 $generated@@689 ($generated@@528 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) $generated@@165) (= (type $generated@@693) $generated@@78)) (= (type $generated@@694) $generated@@78)) ($generated@@285 $generated@@692 ($generated@@536 $generated@@693 $generated@@694))) (and (= ($generated@@386 ($generated@@168 ($generated@@417 $generated@@165 $generated@@165) $generated@@692)) $generated@@692) ($generated@@88 ($generated@@168 ($generated@@417 $generated@@165 $generated@@165) $generated@@692) ($generated@@536 $generated@@693 $generated@@694))))
 :pattern ( ($generated@@285 $generated@@692 ($generated@@536 $generated@@693 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (= (type $generated@@695) $generated@@78) (= (type $generated@@696) $generated@@78)) (= (type $generated@@697) $generated@@165)) ($generated@@285 $generated@@697 ($generated@@194 $generated@@695 $generated@@696))) (and (= ($generated@@386 ($generated@@168 $generated@@91 $generated@@697)) $generated@@697) ($generated@@88 ($generated@@168 $generated@@91 $generated@@697) ($generated@@194 $generated@@695 $generated@@696))))
 :pattern ( ($generated@@285 $generated@@697 ($generated@@194 $generated@@695 $generated@@696)))
)))
(assert  (=> (<= 2 $generated@@487) (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (and (= (type $generated@@698) $generated@@381) (= (type $generated@@699) $generated@@91)) (= (type $generated@@700) $generated@@91)) (or ($generated@@488 $generated@@699 $generated@@700) (and (not (= 2 $generated@@487)) (and ($generated@@88 $generated@@699 $generated@@90) ($generated@@88 $generated@@700 $generated@@292))))) (and (=> (not ($generated@@158 $generated@@699)) (and (=> ($generated@@346 $generated@@699) (let (($generated@@701 ($generated@@453 $generated@@699)))
 (=> ($generated@@340 $generated@@700) (=> (= ($generated@@166 $generated@@701) ($generated@@166 ($generated@@445 $generated@@700))) (forall (($generated@@702 Int) ) (!  (=> (<= ($generated@@318 0) $generated@@702) (=> (< $generated@@702 ($generated@@166 $generated@@701)) ($generated@@488 ($generated@@168 $generated@@91 ($generated@@162 $generated@@701 $generated@@702)) ($generated@@168 $generated@@91 ($generated@@162 ($generated@@445 $generated@@700) $generated@@702)))))
 :pattern ( ($generated@@168 $generated@@91 ($generated@@162 ($generated@@445 $generated@@700) $generated@@702)))
 :pattern ( ($generated@@168 $generated@@91 ($generated@@162 $generated@@701 $generated@@702)))
)))))) (=> (not ($generated@@346 $generated@@699)) (let (($generated@@703 ($generated@@304 $generated@@699)))
(let (($generated@@704 ($generated@@303 $generated@@699)))
 (=> ($generated@@343 $generated@@700) (=> (< $generated@@704 ($generated@@166 ($generated@@449 $generated@@700))) ($generated@@488 $generated@@703 ($generated@@168 $generated@@91 ($generated@@162 ($generated@@449 $generated@@700) $generated@@704)))))))))) (= ($generated@@379 ($generated@@380 $generated@@698) $generated@@699 $generated@@700) (ite ($generated@@158 $generated@@699) ($generated@@324 $generated@@700) (ite ($generated@@346 $generated@@699) (let (($generated@@705 ($generated@@453 $generated@@699)))
 (and (and ($generated@@340 $generated@@700) (= ($generated@@166 $generated@@705) ($generated@@166 ($generated@@445 $generated@@700)))) (forall (($generated@@706 Int) ) (!  (=> true (=> (and (<= ($generated@@318 0) $generated@@706) (< $generated@@706 ($generated@@166 $generated@@705))) ($generated@@379 $generated@@698 ($generated@@168 $generated@@91 ($generated@@162 $generated@@705 $generated@@706)) ($generated@@168 $generated@@91 ($generated@@162 ($generated@@445 $generated@@700) $generated@@706)))))
 :pattern ( ($generated@@168 $generated@@91 ($generated@@162 ($generated@@445 $generated@@700) $generated@@706)))
 :pattern ( ($generated@@168 $generated@@91 ($generated@@162 $generated@@705 $generated@@706)))
)))) (let (($generated@@707 ($generated@@304 $generated@@699)))
(let (($generated@@708 ($generated@@303 $generated@@699)))
 (and (and ($generated@@343 $generated@@700) (< $generated@@708 ($generated@@166 ($generated@@449 $generated@@700)))) ($generated@@379 $generated@@698 $generated@@707 ($generated@@168 $generated@@91 ($generated@@162 ($generated@@449 $generated@@700) $generated@@708)))))))))))
 :pattern ( ($generated@@379 ($generated@@380 $generated@@698) $generated@@699 $generated@@700))
))))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@91) (< ($generated@@167 $generated@@709) ($generated@@167 ($generated@@365 $generated@@709))))
 :pattern ( ($generated@@365 $generated@@709))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) ($generated@@164 $generated@@165)) (< ($generated@@710 $generated@@711) ($generated@@167 ($generated@@163 $generated@@711))))
 :pattern ( ($generated@@163 $generated@@711))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) ($generated@@164 $generated@@165)) (< ($generated@@710 $generated@@712) ($generated@@167 ($generated@@180 $generated@@712))))
 :pattern ( ($generated@@180 $generated@@712))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) ($generated@@164 $generated@@165)) (< ($generated@@710 $generated@@713) ($generated@@167 ($generated@@184 $generated@@713))))
 :pattern ( ($generated@@184 $generated@@713))
)))
(assert (forall (($generated@@714 T@U) ) (! (let (($generated@@715 (type $generated@@714)))
 (not ($generated@@0 ($generated@@104 ($generated@@551 $generated@@715) $generated@@714))))
 :pattern ( (let (($generated@@715 (type $generated@@714)))
($generated@@104 ($generated@@551 $generated@@715) $generated@@714)))
)))
(assert (forall (($generated@@717 T@U) ) (! (= (type ($generated@@716 $generated@@717)) $generated@@83)
 :pattern ( ($generated@@716 $generated@@717))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@718) $generated@@78) (= (type $generated@@719) $generated@@78)) (and (= ($generated@@86 ($generated@@194 $generated@@718 $generated@@719)) $generated@@62) (= ($generated@@716 ($generated@@194 $generated@@718 $generated@@719)) $generated@@74)))
 :pattern ( ($generated@@194 $generated@@718 $generated@@719))
)))
(assert (forall (($generated@@720 T@U) ) (!  (=> (and (= (type $generated@@720) $generated@@91) ($generated@@88 $generated@@720 $generated@@90)) (or (or ($generated@@158 $generated@@720) ($generated@@346 $generated@@720)) ($generated@@302 $generated@@720)))
 :pattern ( ($generated@@302 $generated@@720) ($generated@@88 $generated@@720 $generated@@90))
 :pattern ( ($generated@@346 $generated@@720) ($generated@@88 $generated@@720 $generated@@90))
 :pattern ( ($generated@@158 $generated@@720) ($generated@@88 $generated@@720 $generated@@90))
)))
(assert (forall (($generated@@721 T@U) ) (!  (=> (= (type $generated@@721) $generated@@91) (= ($generated@@671 ($generated@@386 $generated@@721)) ($generated@@167 $generated@@721)))
 :pattern ( ($generated@@671 ($generated@@386 $generated@@721)))
)))
(assert (forall (($generated@@722 T@U) ) (!  (=> (and (= (type $generated@@722) $generated@@165) ($generated@@285 $generated@@722 ($generated@@98 0))) (and (= ($generated@@386 ($generated@@168 $generated@@2 $generated@@722)) $generated@@722) ($generated@@88 ($generated@@168 ($generated@@99 $generated@@165 $generated@@4) $generated@@722) ($generated@@98 0))))
 :pattern ( ($generated@@285 $generated@@722 ($generated@@98 0)))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (and (= (type $generated@@723) $generated@@165) (= (type $generated@@724) $generated@@78)) ($generated@@285 $generated@@723 ($generated@@308 $generated@@724))) (and (= ($generated@@386 ($generated@@168 ($generated@@99 $generated@@165 $generated@@4) $generated@@723)) $generated@@723) ($generated@@88 ($generated@@168 ($generated@@99 $generated@@165 $generated@@4) $generated@@723) ($generated@@308 $generated@@724))))
 :pattern ( ($generated@@285 $generated@@723 ($generated@@308 $generated@@724)))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (and (= (type $generated@@725) $generated@@165) (= (type $generated@@726) $generated@@78)) ($generated@@285 $generated@@725 ($generated@@313 $generated@@726))) (and (= ($generated@@386 ($generated@@168 ($generated@@99 $generated@@165 $generated@@4) $generated@@725)) $generated@@725) ($generated@@88 ($generated@@168 ($generated@@99 $generated@@165 $generated@@4) $generated@@725) ($generated@@313 $generated@@726))))
 :pattern ( ($generated@@285 $generated@@725 ($generated@@313 $generated@@726)))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (and (= (type $generated@@727) $generated@@165) (= (type $generated@@728) $generated@@78)) ($generated@@285 $generated@@727 ($generated@@211 $generated@@728))) (and (= ($generated@@386 ($generated@@168 ($generated@@99 $generated@@165 $generated@@2) $generated@@727)) $generated@@727) ($generated@@88 ($generated@@168 ($generated@@99 $generated@@165 $generated@@2) $generated@@727) ($generated@@211 $generated@@728))))
 :pattern ( ($generated@@285 $generated@@727 ($generated@@211 $generated@@728)))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (and (= (type $generated@@729) $generated@@165) (= (type $generated@@730) $generated@@78)) ($generated@@285 $generated@@729 ($generated@@482 $generated@@730))) (and (= ($generated@@386 ($generated@@168 ($generated@@164 $generated@@165) $generated@@729)) $generated@@729) ($generated@@88 ($generated@@168 ($generated@@164 $generated@@165) $generated@@729) ($generated@@482 $generated@@730))))
 :pattern ( ($generated@@285 $generated@@729 ($generated@@482 $generated@@730)))
)))
(assert (= ($generated@@86 $generated@@92) $generated@@63))
(assert (= ($generated@@716 $generated@@92) $generated@@75))
(assert (= ($generated@@86 $generated@@292) $generated@@65))
(assert (= ($generated@@716 $generated@@292) $generated@@76))
(assert (= ($generated@@86 $generated@@90) $generated@@71))
(assert (= ($generated@@716 $generated@@90) $generated@@77))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (and (= (type $generated@@731) ($generated@@99 $generated@@165 $generated@@2)) (= (type $generated@@732) $generated@@78)) (= (type $generated@@733) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@731 ($generated@@211 $generated@@732) $generated@@733) (forall (($generated@@734 T@U) ) (!  (=> (and (= (type $generated@@734) $generated@@165) (< 0 ($generated ($generated@@104 $generated@@731 $generated@@734)))) ($generated@@330 $generated@@734 $generated@@732 $generated@@733))
 :pattern ( ($generated@@104 $generated@@731 $generated@@734))
))))
 :pattern ( ($generated@@97 $generated@@731 ($generated@@211 $generated@@732) $generated@@733))
)))
(assert (= $generated@@208 ($generated@@320 $generated@@208)))
(assert (= $generated@@210 ($generated@@320 $generated@@210)))
(assert (forall (($generated@@735 T@U) ) (!  (=> (and (= (type $generated@@735) $generated@@91) ($generated@@88 $generated@@735 $generated@@292)) (or (or (or (or ($generated@@324 $generated@@735) ($generated@@338 $generated@@735)) ($generated@@340 $generated@@735)) ($generated@@327 $generated@@735)) ($generated@@343 $generated@@735)))
 :pattern ( ($generated@@343 $generated@@735) ($generated@@88 $generated@@735 $generated@@292))
 :pattern ( ($generated@@327 $generated@@735) ($generated@@88 $generated@@735 $generated@@292))
 :pattern ( ($generated@@340 $generated@@735) ($generated@@88 $generated@@735 $generated@@292))
 :pattern ( ($generated@@338 $generated@@735) ($generated@@88 $generated@@735 $generated@@292))
 :pattern ( ($generated@@324 $generated@@735) ($generated@@88 $generated@@735 $generated@@292))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (and (and (= (type $generated@@736) $generated@@91) (= (type $generated@@737) $generated@@78)) (= (type $generated@@738) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@189 $generated@@738) (and ($generated@@193 $generated@@736) (exists (($generated@@739 T@U) ) (!  (and (= (type $generated@@739) $generated@@78) ($generated@@97 $generated@@736 ($generated@@194 $generated@@737 $generated@@739) $generated@@738))
 :pattern ( ($generated@@97 $generated@@736 ($generated@@194 $generated@@737 $generated@@739) $generated@@738))
))))) ($generated@@330 ($generated@@201 $generated@@736) $generated@@737 $generated@@738))
 :pattern ( ($generated@@330 ($generated@@201 $generated@@736) $generated@@737 $generated@@738))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (and (and (= (type $generated@@740) $generated@@91) (= (type $generated@@741) $generated@@78)) (= (type $generated@@742) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@189 $generated@@742) (and ($generated@@193 $generated@@740) (exists (($generated@@743 T@U) ) (!  (and (= (type $generated@@743) $generated@@78) ($generated@@97 $generated@@740 ($generated@@194 $generated@@743 $generated@@741) $generated@@742))
 :pattern ( ($generated@@97 $generated@@740 ($generated@@194 $generated@@743 $generated@@741) $generated@@742))
))))) ($generated@@330 ($generated@@202 $generated@@740) $generated@@741 $generated@@742))
 :pattern ( ($generated@@330 ($generated@@202 $generated@@740) $generated@@741 $generated@@742))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (and (= (type $generated@@744) $generated@@91) (= (type $generated@@745) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@189 $generated@@745) (and ($generated@@338 $generated@@744) ($generated@@97 $generated@@744 $generated@@292 $generated@@745)))) ($generated@@97 ($generated@@441 $generated@@744) $generated@@292 $generated@@745))
 :pattern ( ($generated@@97 ($generated@@441 $generated@@744) $generated@@292 $generated@@745))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (and (= (type $generated@@746) $generated@@91) (= (type $generated@@747) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@189 $generated@@747) (and ($generated@@158 $generated@@746) ($generated@@97 $generated@@746 $generated@@90 $generated@@747)))) ($generated@@97 ($generated@@8 ($generated@@159 $generated@@746)) $generated@@92 $generated@@747))
 :pattern ( ($generated@@97 ($generated@@8 ($generated@@159 $generated@@746)) $generated@@92 $generated@@747))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ) (!  (=> (and (and (= (type $generated@@748) $generated@@91) (= (type $generated@@749) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@189 $generated@@749) (and ($generated@@302 $generated@@748) ($generated@@97 $generated@@748 $generated@@90 $generated@@749)))) ($generated@@97 ($generated@@8 ($generated@@303 $generated@@748)) $generated@@92 $generated@@749))
 :pattern ( ($generated@@97 ($generated@@8 ($generated@@303 $generated@@748)) $generated@@92 $generated@@749))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (and (= (type $generated@@750) $generated@@91) (= (type $generated@@751) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@189 $generated@@751) (and ($generated@@302 $generated@@750) ($generated@@97 $generated@@750 $generated@@90 $generated@@751)))) ($generated@@97 ($generated@@304 $generated@@750) $generated@@90 $generated@@751))
 :pattern ( ($generated@@97 ($generated@@304 $generated@@750) $generated@@90 $generated@@751))
)))
(assert (forall (($generated@@752 T@U) ) (!  (=> (= (type $generated@@752) $generated@@2) (= ($generated@@88 $generated@@752 $generated@@92)  (and (<= ($generated@@318 0) ($generated $generated@@752)) (< ($generated $generated@@752) 18446744073709551616))))
 :pattern ( ($generated@@88 $generated@@752 $generated@@92))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ) (!  (=> (and (= (type $generated@@753) $generated@@165) (= (type $generated@@754) $generated@@165)) (= ($generated@@284 ($generated@@320 $generated@@753) ($generated@@320 $generated@@754)) ($generated@@320 ($generated@@284 $generated@@753 $generated@@754))))
 :pattern ( ($generated@@284 ($generated@@320 $generated@@753) ($generated@@320 $generated@@754)))
)))
(assert (forall (($generated@@755 Int) ($generated@@756 T@U) ) (!  (=> (= (type $generated@@756) $generated@@91) (= ($generated@@89 ($generated@@318 $generated@@755) ($generated@@320 $generated@@756)) ($generated@@320 ($generated@@89 $generated@@755 $generated@@756))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@755) ($generated@@320 $generated@@756)))
)))
(assert (forall (($generated@@757 Int) ) (! (= ($generated@@386 ($generated@@8 ($generated@@318 $generated@@757))) ($generated@@320 ($generated@@386 ($generated@@8 $generated@@757))))
 :pattern ( ($generated@@386 ($generated@@8 ($generated@@318 $generated@@757))))
)))
(assert (forall (($generated@@758 T@U) ) (!  (=> (= (type $generated@@758) $generated@@91) (= ($generated@@365 ($generated@@320 $generated@@758)) ($generated@@320 ($generated@@365 $generated@@758))))
 :pattern ( ($generated@@365 ($generated@@320 $generated@@758)))
)))
(assert (forall (($generated@@759 T@U) ) (!  (=> (= (type $generated@@759) ($generated@@164 $generated@@165)) (= ($generated@@163 ($generated@@320 $generated@@759)) ($generated@@320 ($generated@@163 $generated@@759))))
 :pattern ( ($generated@@163 ($generated@@320 $generated@@759)))
)))
(assert (forall (($generated@@760 T@U) ) (!  (=> (= (type $generated@@760) ($generated@@164 $generated@@165)) (= ($generated@@180 ($generated@@320 $generated@@760)) ($generated@@320 ($generated@@180 $generated@@760))))
 :pattern ( ($generated@@180 ($generated@@320 $generated@@760)))
)))
(assert (forall (($generated@@761 Int) ) (! (= ($generated@@373 ($generated@@318 $generated@@761)) ($generated@@320 ($generated@@373 $generated@@761)))
 :pattern ( ($generated@@373 ($generated@@318 $generated@@761)))
)))
(assert (forall (($generated@@762 T@U) ) (!  (=> (= (type $generated@@762) ($generated@@164 $generated@@165)) (= ($generated@@184 ($generated@@320 $generated@@762)) ($generated@@320 ($generated@@184 $generated@@762))))
 :pattern ( ($generated@@184 ($generated@@320 $generated@@762)))
)))
(assert (forall (($generated@@763 T@U) ) (! (= ($generated@@386 ($generated@@320 $generated@@763)) ($generated@@320 ($generated@@386 $generated@@763)))
 :pattern ( ($generated@@386 ($generated@@320 $generated@@763)))
)))
(assert (forall (($generated@@764 T@U) ) (! (let (($generated@@765 ($generated@@169 (type $generated@@764))))
 (=> (and (= (type $generated@@764) ($generated@@164 $generated@@765)) (= ($generated@@166 $generated@@764) 0)) (= $generated@@764 ($generated@@360 $generated@@765))))
 :pattern ( ($generated@@166 $generated@@764))
)))
(assert (forall (($generated@@766 T@U) ($generated@@767 T@U) ($generated@@768 T@U) ) (! (let (($generated@@769 (type $generated@@767)))
 (=> (and (and (= (type $generated@@766) ($generated@@99 $generated@@769 $generated@@2)) (= (type $generated@@768) $generated@@2)) (<= 0 ($generated $generated@@768))) (= ($generated@@391 ($generated@@105 $generated@@766 $generated@@767 $generated@@768)) (+ (- ($generated@@391 $generated@@766) ($generated ($generated@@104 $generated@@766 $generated@@767))) ($generated $generated@@768)))))
 :pattern ( ($generated@@391 ($generated@@105 $generated@@766 $generated@@767 $generated@@768)))
)))
(assert (forall (($generated@@770 T@U) ($generated@@771 T@U) ) (!  (=> (and (and (= (type $generated@@770) $generated@@91) (= (type $generated@@771) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@189 $generated@@771) (and ($generated@@340 $generated@@770) ($generated@@97 $generated@@770 $generated@@292 $generated@@771)))) ($generated@@97 ($generated@@445 $generated@@770) ($generated@@482 $generated@@292) $generated@@771))
 :pattern ( ($generated@@97 ($generated@@445 $generated@@770) ($generated@@482 $generated@@292) $generated@@771))
)))
(assert (forall (($generated@@772 T@U) ($generated@@773 T@U) ) (!  (=> (and (and (= (type $generated@@772) $generated@@91) (= (type $generated@@773) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@189 $generated@@773) (and ($generated@@343 $generated@@772) ($generated@@97 $generated@@772 $generated@@292 $generated@@773)))) ($generated@@97 ($generated@@449 $generated@@772) ($generated@@482 $generated@@292) $generated@@773))
 :pattern ( ($generated@@97 ($generated@@449 $generated@@772) ($generated@@482 $generated@@292) $generated@@773))
)))
(assert (forall (($generated@@774 T@U) ($generated@@775 T@U) ) (!  (=> (and (and (= (type $generated@@774) $generated@@91) (= (type $generated@@775) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@189 $generated@@775) (and ($generated@@346 $generated@@774) ($generated@@97 $generated@@774 $generated@@90 $generated@@775)))) ($generated@@97 ($generated@@453 $generated@@774) ($generated@@482 $generated@@90) $generated@@775))
 :pattern ( ($generated@@97 ($generated@@453 $generated@@774) ($generated@@482 $generated@@90) $generated@@775))
)))
(assert (forall (($generated@@776 T@U) ($generated@@777 T@U) ) (!  (=> (and (= (type $generated@@776) ($generated@@99 $generated@@100 $generated@@101)) (= (type $generated@@777) $generated@@2)) ($generated@@97 $generated@@777 $generated@@46 $generated@@776))
 :pattern ( ($generated@@97 $generated@@777 $generated@@46 $generated@@776))
)))
(assert (forall (($generated@@778 T@U) ($generated@@779 T@U) ) (!  (=> (and (= (type $generated@@778) ($generated@@99 $generated@@100 $generated@@101)) (= (type $generated@@779) $generated@@3)) ($generated@@97 $generated@@779 $generated@@47 $generated@@778))
 :pattern ( ($generated@@97 $generated@@779 $generated@@47 $generated@@778))
)))
(assert (forall (($generated@@780 T@U) ($generated@@781 T@U) ) (!  (=> (and (= (type $generated@@780) ($generated@@99 $generated@@100 $generated@@101)) (= (type $generated@@781) $generated@@4)) ($generated@@97 $generated@@781 $generated@@44 $generated@@780))
 :pattern ( ($generated@@97 $generated@@781 $generated@@44 $generated@@780))
)))
(assert (forall (($generated@@782 T@U) ($generated@@783 T@U) ) (!  (=> (and (= (type $generated@@782) ($generated@@99 $generated@@100 $generated@@101)) (= (type $generated@@783) $generated@@575)) ($generated@@97 $generated@@783 $generated@@45 $generated@@782))
 :pattern ( ($generated@@97 $generated@@783 $generated@@45 $generated@@782))
)))
(assert (forall (($generated@@784 T@U) ($generated@@785 T@U) ) (!  (=> (and (= (type $generated@@784) ($generated@@99 $generated@@100 $generated@@101)) (= (type $generated@@785) $generated@@165)) ($generated@@97 $generated@@785 $generated@@48 $generated@@784))
 :pattern ( ($generated@@97 $generated@@785 $generated@@48 $generated@@784))
)))
(assert (forall (($generated@@786 T@U) ($generated@@787 T@U) ) (!  (=> (and (= (type $generated@@786) ($generated@@164 $generated@@165)) (= (type $generated@@787) $generated@@78)) (= ($generated@@88 $generated@@786 ($generated@@482 $generated@@787)) (forall (($generated@@788 Int) ) (!  (=> (and (<= 0 $generated@@788) (< $generated@@788 ($generated@@166 $generated@@786))) ($generated@@285 ($generated@@162 $generated@@786 $generated@@788) $generated@@787))
 :pattern ( ($generated@@162 $generated@@786 $generated@@788))
))))
 :pattern ( ($generated@@88 $generated@@786 ($generated@@482 $generated@@787)))
)))
(assert  (and (forall (($generated@@791 T@U) ) (! (= (type ($generated@@789 $generated@@791)) $generated@@381)
 :pattern ( ($generated@@789 $generated@@791))
)) (= (type $generated@@790) $generated@@381)))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ($generated@@794 T@U) ) (!  (=> (and (and (= (type $generated@@792) $generated@@381) (= (type $generated@@793) $generated@@91)) (= (type $generated@@794) $generated@@91)) (= ($generated@@379 $generated@@792 $generated@@793 $generated@@794) ($generated@@379 $generated@@790 $generated@@793 $generated@@794)))
 :pattern ( ($generated@@379 ($generated@@789 $generated@@792) $generated@@793 $generated@@794))
)))
(assert (forall (($generated@@795 T@U) ($generated@@796 Int) ) (!  (=> (= (type $generated@@795) ($generated@@164 $generated@@165)) (=> (and (<= 0 $generated@@796) (< $generated@@796 ($generated@@166 $generated@@795))) (< ($generated@@167 ($generated@@168 $generated@@91 ($generated@@162 $generated@@795 $generated@@796))) ($generated@@710 $generated@@795))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@91 ($generated@@162 $generated@@795 $generated@@796))))
)))
(assert (forall (($generated@@797 T@U) ($generated@@798 T@U) ($generated@@799 T@U) ) (!  (=> (and (and (and (= (type $generated@@797) ($generated@@399 $generated@@165 $generated@@165)) (= (type $generated@@798) $generated@@78)) (= (type $generated@@799) $generated@@78)) ($generated@@88 $generated@@797 ($generated@@528 $generated@@798 $generated@@799))) (and (and ($generated@@88 ($generated@@397 $generated@@797) ($generated@@308 $generated@@798)) ($generated@@88 ($generated@@461 $generated@@797) ($generated@@308 $generated@@799))) ($generated@@88 ($generated@@502 $generated@@797) ($generated@@308 ($generated@@194 $generated@@798 $generated@@799)))))
 :pattern ( ($generated@@88 $generated@@797 ($generated@@528 $generated@@798 $generated@@799)))
)))
(assert (forall (($generated@@800 T@U) ($generated@@801 T@U) ($generated@@802 T@U) ) (!  (=> (and (and (and (= (type $generated@@800) ($generated@@417 $generated@@165 $generated@@165)) (= (type $generated@@801) $generated@@78)) (= (type $generated@@802) $generated@@78)) ($generated@@88 $generated@@800 ($generated@@536 $generated@@801 $generated@@802))) (and (and ($generated@@88 ($generated@@415 $generated@@800) ($generated@@313 $generated@@801)) ($generated@@88 ($generated@@472 $generated@@800) ($generated@@313 $generated@@802))) ($generated@@88 ($generated@@510 $generated@@800) ($generated@@313 ($generated@@194 $generated@@801 $generated@@802)))))
 :pattern ( ($generated@@88 $generated@@800 ($generated@@536 $generated@@801 $generated@@802)))
)))
(assert (forall (($generated@@803 T@U) ) (!  (=> (= (type $generated@@803) $generated@@2) ($generated@@88 $generated@@803 $generated@@46))
 :pattern ( ($generated@@88 $generated@@803 $generated@@46))
)))
(assert (forall (($generated@@804 T@U) ) (!  (=> (= (type $generated@@804) $generated@@3) ($generated@@88 $generated@@804 $generated@@47))
 :pattern ( ($generated@@88 $generated@@804 $generated@@47))
)))
(assert (forall (($generated@@805 T@U) ) (!  (=> (= (type $generated@@805) $generated@@4) ($generated@@88 $generated@@805 $generated@@44))
 :pattern ( ($generated@@88 $generated@@805 $generated@@44))
)))
(assert (forall (($generated@@806 T@U) ) (!  (=> (= (type $generated@@806) $generated@@575) ($generated@@88 $generated@@806 $generated@@45))
 :pattern ( ($generated@@88 $generated@@806 $generated@@45))
)))
(assert (forall (($generated@@807 T@U) ) (!  (=> (= (type $generated@@807) $generated@@165) ($generated@@88 $generated@@807 $generated@@48))
 :pattern ( ($generated@@88 $generated@@807 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@808 () Int)
(declare-fun $generated@@809 () T@U)
(declare-fun $generated@@810 () T@U)
(declare-fun $generated@@811 () T@U)
(declare-fun $generated@@812 () T@U)
(declare-fun $generated@@813 () T@U)
(declare-fun $generated@@814 () T@U)
(declare-fun $generated@@815 () T@U)
(declare-fun $generated@@816 () T@U)
(declare-fun $generated@@817 () Int)
(declare-fun $generated@@818 () T@U)
(declare-fun $generated@@819 () T@U)
(declare-fun $generated@@820 () Int)
(declare-fun $generated@@821 () T@U)
(declare-fun $generated@@822 () T@U)
(declare-fun $generated@@823 () Int)
(declare-fun $generated@@824 () Int)
(declare-fun $generated@@825 () T@U)
(declare-fun $generated@@826 () T@U)
(declare-fun $generated@@827 () T@U)
(declare-fun $generated@@828 () T@U)
(declare-fun $generated@@829 () T@U)
(declare-fun $generated@@830 () T@U)
(declare-fun $generated@@831 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@810) $generated@@91) (= (type $generated@@818) $generated@@91)) (= (type $generated@@812) ($generated@@99 $generated@@100 $generated@@101))) (= (type $generated@@819) $generated@@91)) (= (type $generated@@814) $generated@@91)) (= (type $generated@@821) $generated@@91)) (= (type $generated@@822) $generated@@91)) (= (type $generated@@815) ($generated@@164 $generated@@165))) (= (type $generated@@809) ($generated@@164 $generated@@165))) (= (type $generated@@811) $generated@@91)) (= (type $generated@@813) $generated@@91)) (= (type $generated@@816) ($generated@@164 $generated@@165))) (= (type $generated@@825) ($generated@@218 $generated@@100 $generated@@4))) (= (type $generated@@826) $generated@@100)) (= (type $generated@@827) ($generated@@218 $generated@@100 $generated@@4))) (= (type $generated@@828) $generated@@381)) (= (type $generated@@829) $generated@@381)) (= (type $generated@@830) $generated@@381)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 35) (let (($generated@@832 true))
(let (($generated@@833 true))
(let (($generated@@834  (=> (and (not (and (<= ($generated@@318 0) $generated@@808) (< $generated@@808 ($generated@@166 $generated@@809)))) (= (ControlFlow 0 23) 15)) $generated@@833)))
(let (($generated@@835  (=> (and (<= ($generated@@318 0) $generated@@808) (< $generated@@808 ($generated@@166 $generated@@809))) (and (=> (= (ControlFlow 0 18) (- 0 22)) (and (<= 0 $generated@@808) (< $generated@@808 ($generated@@166 $generated@@809)))) (=> (and (<= 0 $generated@@808) (< $generated@@808 ($generated@@166 $generated@@809))) (and (=> (= (ControlFlow 0 18) (- 0 21)) ($generated@@340 $generated@@810)) (=> ($generated@@340 $generated@@810) (and (=> (= (ControlFlow 0 18) (- 0 20)) (and (<= 0 $generated@@808) (< $generated@@808 ($generated@@166 ($generated@@445 $generated@@810))))) (=> (and (<= 0 $generated@@808) (< $generated@@808 ($generated@@166 ($generated@@445 $generated@@810)))) (=> (and (and (= $generated@@811 ($generated@@168 $generated@@91 ($generated@@162 $generated@@809 $generated@@808))) ($generated@@97 $generated@@811 $generated@@90 $generated@@812)) (and (= $generated@@813 ($generated@@168 $generated@@91 ($generated@@162 ($generated@@445 $generated@@810) $generated@@808))) ($generated@@97 $generated@@813 $generated@@292 $generated@@812))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (or (< ($generated@@167 $generated@@811) ($generated@@167 $generated@@814)) (and (= ($generated@@167 $generated@@811) ($generated@@167 $generated@@814)) (< ($generated@@167 $generated@@813) ($generated@@167 $generated@@810))))) (=> (or (< ($generated@@167 $generated@@811) ($generated@@167 $generated@@814)) (and (= ($generated@@167 $generated@@811) ($generated@@167 $generated@@814)) (< ($generated@@167 $generated@@813) ($generated@@167 $generated@@810)))) (=> (and ($generated@@488 ($generated@@168 $generated@@91 ($generated@@162 $generated@@809 $generated@@808)) ($generated@@168 $generated@@91 ($generated@@162 ($generated@@445 $generated@@810) $generated@@808))) (= (ControlFlow 0 18) 15)) $generated@@833)))))))))))))
(let (($generated@@836  (=> (< $generated@@808 ($generated@@318 0)) (and (=> (= (ControlFlow 0 25) 18) $generated@@835) (=> (= (ControlFlow 0 25) 23) $generated@@834)))))
(let (($generated@@837  (=> (<= ($generated@@318 0) $generated@@808) (and (=> (= (ControlFlow 0 24) 18) $generated@@835) (=> (= (ControlFlow 0 24) 23) $generated@@834)))))
(let (($generated@@838  (and (=> (= (ControlFlow 0 26) 24) $generated@@837) (=> (= (ControlFlow 0 26) 25) $generated@@836))))
(let (($generated@@839  (=> (and ($generated@@340 $generated@@810) (= ($generated@@166 $generated@@809) ($generated@@166 ($generated@@445 $generated@@810)))) (and (=> (= (ControlFlow 0 27) 26) $generated@@838) (=> (= (ControlFlow 0 27) 17) $generated@@832)))))
(let (($generated@@840  (=> (and (not (and ($generated@@340 $generated@@810) (= ($generated@@166 $generated@@809) ($generated@@166 ($generated@@445 $generated@@810))))) (= (ControlFlow 0 16) 15)) $generated@@833)))
(let (($generated@@841  (=> (not ($generated@@340 $generated@@810)) (and (=> (= (ControlFlow 0 30) 27) $generated@@839) (=> (= (ControlFlow 0 30) 16) $generated@@840)))))
(let (($generated@@842  (=> ($generated@@340 $generated@@810) (and (=> (= (ControlFlow 0 28) (- 0 29)) ($generated@@340 $generated@@810)) (=> ($generated@@340 $generated@@810) (and (=> (= (ControlFlow 0 28) 27) $generated@@839) (=> (= (ControlFlow 0 28) 16) $generated@@840)))))))
(let (($generated@@843  (=> (and (= $generated@@814 ($generated@@184 $generated@@815)) ($generated@@88 $generated@@815 ($generated@@482 $generated@@90))) (=> (and (and (and ($generated@@88 $generated@@809 ($generated@@482 $generated@@90)) ($generated@@97 $generated@@809 ($generated@@482 $generated@@90) $generated@@812)) (= $generated@@816 $generated@@815)) (and ($generated@@88 $generated@@816 ($generated@@482 $generated@@90)) (= $generated@@809 $generated@@816))) (and (=> (= (ControlFlow 0 31) 28) $generated@@842) (=> (= (ControlFlow 0 31) 30) $generated@@841))))))
(let (($generated@@844 true))
(let (($generated@@845  (=> (and (not (and ($generated@@343 $generated@@810) (< $generated@@817 ($generated@@166 ($generated@@449 $generated@@810))))) (= (ControlFlow 0 9) 4)) $generated@@844)))
(let (($generated@@846  (=> (and ($generated@@343 $generated@@810) (< $generated@@817 ($generated@@166 ($generated@@449 $generated@@810)))) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@343 $generated@@810)) (=> ($generated@@343 $generated@@810) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 $generated@@817) (< $generated@@817 ($generated@@166 ($generated@@449 $generated@@810))))) (=> (and (<= 0 $generated@@817) (< $generated@@817 ($generated@@166 ($generated@@449 $generated@@810)))) (=> ($generated@@97 $generated@@818 $generated@@90 $generated@@812) (=> (and (= $generated@@819 ($generated@@168 $generated@@91 ($generated@@162 ($generated@@449 $generated@@810) $generated@@817))) ($generated@@97 $generated@@819 $generated@@292 $generated@@812)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (< ($generated@@167 $generated@@818) ($generated@@167 $generated@@814)) (and (= ($generated@@167 $generated@@818) ($generated@@167 $generated@@814)) (< ($generated@@167 $generated@@819) ($generated@@167 $generated@@810))))) (=> (or (< ($generated@@167 $generated@@818) ($generated@@167 $generated@@814)) (and (= ($generated@@167 $generated@@818) ($generated@@167 $generated@@814)) (< ($generated@@167 $generated@@819) ($generated@@167 $generated@@810)))) (=> (and ($generated@@488 $generated@@818 ($generated@@168 $generated@@91 ($generated@@162 ($generated@@449 $generated@@810) $generated@@817))) (= (ControlFlow 0 5) 4)) $generated@@844))))))))))))
(let (($generated@@847  (=> (not ($generated@@343 $generated@@810)) (and (=> (= (ControlFlow 0 12) 5) $generated@@846) (=> (= (ControlFlow 0 12) 9) $generated@@845)))))
(let (($generated@@848  (=> ($generated@@343 $generated@@810) (and (=> (= (ControlFlow 0 10) (- 0 11)) ($generated@@343 $generated@@810)) (=> ($generated@@343 $generated@@810) (and (=> (= (ControlFlow 0 10) 5) $generated@@846) (=> (= (ControlFlow 0 10) 9) $generated@@845)))))))
(let (($generated@@849  (=> (= $generated@@814 ($generated@@89 $generated@@820 $generated@@821)) (=> (and (and (<= ($generated@@318 0) $generated@@820) (< $generated@@820 18446744073709551616)) ($generated@@88 $generated@@821 $generated@@90)) (=> (and (and (and (and ($generated@@88 $generated@@818 $generated@@90) ($generated@@97 $generated@@818 $generated@@90 $generated@@812)) (= $generated@@822 $generated@@821)) (and ($generated@@88 $generated@@822 $generated@@90) (= $generated@@818 $generated@@822))) (and (and (and (<= ($generated@@318 0) $generated@@817) (< $generated@@817 18446744073709551616)) (= $generated@@823 $generated@@820)) (and ($generated@@88 ($generated@@8 $generated@@823) $generated@@92) (= $generated@@817 $generated@@823)))) (and (=> (= (ControlFlow 0 13) 10) $generated@@848) (=> (= (ControlFlow 0 13) 12) $generated@@847)))))))
(let (($generated@@850 true))
(let (($generated@@851  (=> (not (= $generated@@814 ($generated@@184 $generated@@815))) (and (=> (= (ControlFlow 0 14) 13) $generated@@849) (=> (= (ControlFlow 0 14) 3) $generated@@850)))))
(let (($generated@@852  (=> (not (= $generated@@814 ($generated@@373 $generated@@824))) (and (=> (= (ControlFlow 0 32) 31) $generated@@843) (=> (= (ControlFlow 0 32) 14) $generated@@851)))))
(let (($generated@@853 true))
(let (($generated@@854  (=> (= $generated@@825 ($generated@@272 $generated@@826 $generated@@812 $generated@@60 false)) (and (=> (= (ControlFlow 0 33) 2) $generated@@853) (=> (= (ControlFlow 0 33) 32) $generated@@852)))))
(let (($generated@@855 true))
(let (($generated@@856  (=> (and (and (= $generated@@827 ($generated@@217 $generated@@826 $generated@@812 $generated@@60 false)) (= $generated@@828 ($generated@@380 ($generated@@380 $generated@@829)))) (and (= $generated@@830 ($generated@@380 ($generated@@380 ($generated@@380 $generated@@829)))) (= ($generated@@789 $generated@@829) $generated@@829))) (and (=> (= (ControlFlow 0 34) 1) $generated@@855) (=> (= (ControlFlow 0 34) 33) $generated@@854)))))
(let (($generated@@857  (=> (and ($generated@@189 $generated@@812) ($generated@@831 $generated@@812)) (=> (and (and ($generated@@88 $generated@@814 $generated@@90) ($generated@@88 $generated@@810 $generated@@292)) (and (= 2 $generated@@487) (= (ControlFlow 0 35) 34))) $generated@@856))))
$generated@@857)))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) Bool)
(declare-fun $generated@@93 (Int T@U) T@U)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@U)
(declare-fun $generated@@101 (T@U T@U T@U) Bool)
(declare-fun $generated@@102 (Int) T@U)
(declare-fun $generated@@103 (T@T T@T) T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@T) T@T)
(declare-fun $generated@@108 (T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@166 (T@U Int) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@170 (T@U) Int)
(declare-fun $generated@@171 (T@U) Int)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@192 (T@U Int T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Int)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@220 (T@U) Bool)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@238 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@244 (T@T T@T) T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@247 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@298 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U T@U) Bool)
(declare-fun $generated@@318 () T@U)
(declare-fun $generated@@319 () T@U)
(declare-fun $generated@@320 (T@U T@U T@U) Bool)
(declare-fun $generated@@321 () T@U)
(declare-fun $generated@@322 () T@U)
(declare-fun $generated@@332 (T@U T@U) Bool)
(declare-fun $generated@@337 (T@U T@U) Bool)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@341 (T@U) Int)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@346 () Int)
(declare-fun $generated@@347 () Bool)
(declare-fun $generated@@348 () T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@362 (Int) Int)
(declare-fun $generated@@365 (T@U T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@374 (T@U) Bool)
(declare-fun $generated@@377 (T@U) Bool)
(declare-fun $generated@@380 (T@U) Bool)
(declare-fun $generated@@393 (T@U) Bool)
(declare-fun $generated@@395 (T@U) Bool)
(declare-fun $generated@@398 (T@U) Bool)
(declare-fun $generated@@401 (T@U) Bool)
(declare-fun $generated@@404 (T@U) Bool)
(declare-fun $generated@@407 (T@U T@U) Bool)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@436 (Int) T@U)
(declare-fun $generated@@445 (T@U T@U T@U) Bool)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@457 (T@U) Int)
(declare-fun $generated@@458 (T@T) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@464 (T@T T@T) T@U)
(declare-fun $generated@@465 (T@T T@T) T@T)
(declare-fun $generated@@466 (T@T) T@T)
(declare-fun $generated@@467 (T@T) T@T)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@T T@T) T@U)
(declare-fun $generated@@483 (T@T T@T) T@T)
(declare-fun $generated@@484 (T@T) T@T)
(declare-fun $generated@@485 (T@T) T@T)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Bool)
(declare-fun $generated@@530 () T@U)
(declare-fun $generated@@531 () T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@559 () Bool)
(declare-fun $generated@@560 () T@U)
(declare-fun $generated@@561 () Bool)
(declare-fun $generated@@565 (T@U T@U) Bool)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@607 (T@U) Bool)
(declare-fun $generated@@608 (T@U) Bool)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@615 (T@U T@U) T@U)
(declare-fun $generated@@623 (T@U T@U) T@U)
(declare-fun $generated@@639 (T@T) T@U)
(declare-fun $generated@@665 () T@T)
(declare-fun $generated@@679 (T@U) T@U)
(declare-fun $generated@@683 (T@U) T@U)
(declare-fun $generated@@689 (T@U) T@U)
(declare-fun $generated@@693 (T@U) T@U)
(declare-fun $generated@@701 (T@U) T@U)
(declare-fun $generated@@705 (T@U) T@U)
(declare-fun $generated@@726 (T@U) Int)
(declare-fun $generated@@728 (T@U) T@U)
(declare-fun $generated@@732 (T@U) T@U)
(declare-fun $generated@@736 (T@U) T@U)
(declare-fun $generated@@740 (T@U) T@U)
(declare-fun $generated@@764 (T@U) Int)
(declare-fun $generated@@791 () T@U)
(declare-fun $generated@@806 (T@U) Int)
(declare-fun $generated@@812 (T@U) T@U)
(declare-fun $generated@@816 (T@U) T@U)
(declare-fun $generated@@817 (T@U) T@U)
(declare-fun $generated@@900 (T@U) T@U)
(declare-fun $generated@@901 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@82) 6) (= (type $generated@@44) $generated@@82)) (= (type $generated@@45) $generated@@82)) (= (type $generated@@46) $generated@@82)) (= (type $generated@@47) $generated@@82)) (= (type $generated@@48) $generated@@82)) (= ($generated@@1 $generated@@83) 7)) (= (type $generated@@49) $generated@@83)) (= (type $generated@@50) $generated@@83)) (= (type $generated@@51) $generated@@83)) (= (type $generated@@52) $generated@@83)) (= (type $generated@@53) $generated@@83)) (= (type $generated@@54) $generated@@83)) (= (type $generated@@55) $generated@@83)) (= (type $generated@@56) $generated@@83)) (= (type $generated@@57) $generated@@83)) (= (type $generated@@58) $generated@@83)) (= (type $generated@@59) $generated@@83)) (forall (($generated@@88 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@88)) 8))) (forall (($generated@@89 T@T) ) (! (= ($generated@@85 ($generated@@84 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@84 $generated@@89))
))) (= (type $generated@@60) ($generated@@84 $generated@@4))) (= ($generated@@1 $generated@@86) 9)) (= (type $generated@@61) $generated@@86)) (= (type $generated@@62) $generated@@83)) (= (type $generated@@63) $generated@@83)) (= (type $generated@@64) $generated@@86)) (= (type $generated@@65) $generated@@83)) (= (type $generated@@66) $generated@@86)) (= (type $generated@@67) $generated@@86)) (= (type $generated@@68) $generated@@86)) (= (type $generated@@69) $generated@@86)) (= (type $generated@@70) $generated@@86)) (= (type $generated@@71) $generated@@83)) (= (type $generated@@72) $generated@@86)) (= (type $generated@@73) $generated@@86)) (= (type $generated@@74) $generated@@86)) (= (type $generated@@75) $generated@@83)) (= (type $generated@@76) $generated@@86)) (= ($generated@@1 $generated@@87) 10)) (= (type $generated@@77) $generated@@87)) (= (type $generated@@78) $generated@@87)) (= (type $generated@@79) $generated@@87)) (= (type $generated@@80) $generated@@87)) (= (type $generated@@81) $generated@@87)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79 $generated@@80 $generated@@81)
)
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@83)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@44) $generated@@49))
(assert (= ($generated@@90 $generated@@45) $generated@@50))
(assert (= ($generated@@90 $generated@@46) $generated@@51))
(assert (= ($generated@@90 $generated@@47) $generated@@52))
(assert (= ($generated@@90 $generated@@48) $generated@@53))
(assert  (and (and (and (= ($generated@@1 $generated@@95) 11) (forall (($generated@@97 Int) ($generated@@98 T@U) ) (! (= (type ($generated@@93 $generated@@97 $generated@@98)) $generated@@95)
 :pattern ( ($generated@@93 $generated@@97 $generated@@98))
))) (= (type $generated@@94) $generated@@82)) (= (type $generated@@96) $generated@@82)))
(assert (forall (($generated@@99 Int) ($generated@@100 T@U) ) (!  (=> (= (type $generated@@100) $generated@@95) (= ($generated@@92 ($generated@@93 $generated@@99 $generated@@100) $generated@@94)  (and ($generated@@92 ($generated@@8 $generated@@99) $generated@@96) ($generated@@92 $generated@@100 $generated@@94))))
 :pattern ( ($generated@@92 ($generated@@93 $generated@@99 $generated@@100) $generated@@94))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@103 $generated@@112 $generated@@113)) 12)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@106 ($generated@@103 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@103 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@107 ($generated@@103 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@103 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@107 (type $generated@@118))))
(= (type ($generated@@108 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@108 $generated@@118 $generated@@119))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 (type $generated@@123)))
(let (($generated@@125 (type $generated@@122)))
(= (type ($generated@@109 $generated@@121 $generated@@122 $generated@@123)) ($generated@@103 $generated@@125 $generated@@124))))
 :pattern ( ($generated@@109 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@107 (type $generated@@126))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@108 ($generated@@109 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@108 ($generated@@109 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@108 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@108 ($generated@@109 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@108 $generated@@135 $generated@@137)))
 :weight 0
)))) (= ($generated@@1 $generated@@104) 13)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@85 (type $generated@@139))))
(= (type ($generated@@110 $generated@@138 $generated@@139)) $generated@@140))
 :pattern ( ($generated@@110 $generated@@138 $generated@@139))
))) (= ($generated@@1 $generated@@105) 14)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@111 $generated@@141 $generated@@142 $generated@@143)) $generated@@105)
 :pattern ( ($generated@@111 $generated@@141 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@85 (type $generated@@145))))
 (=> (= (type $generated@@146) $generated@@147) (= ($generated@@110 ($generated@@111 $generated@@144 $generated@@145 $generated@@146) $generated@@145) $generated@@146)))
 :weight 0
))) (and (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@150 $generated@@151) (= ($generated@@110 ($generated@@111 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@110 $generated@@149 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@153 $generated@@154 $generated@@152) $generated@@155) ($generated@@110 $generated@@153 $generated@@155)))
 :weight 0
)))) (forall (($generated@@156 Int) ) (! (= (type ($generated@@102 $generated@@156)) $generated@@82)
 :pattern ( ($generated@@102 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@2) (= (type $generated@@158) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@101 $generated@@157 ($generated@@102 0) $generated@@158))
 :pattern ( ($generated@@101 $generated@@157 ($generated@@102 0) $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@101 $generated@@159 $generated@@96 $generated@@160))
 :pattern ( ($generated@@101 $generated@@159 $generated@@96 $generated@@160))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@95) (= (type $generated@@165) $generated@@95)) (and ($generated@@162 $generated@@164) ($generated@@162 $generated@@165))) (= ($generated@@161 $generated@@164 $generated@@165) (= ($generated@@163 $generated@@164) ($generated@@163 $generated@@165))))
 :pattern ( ($generated@@161 $generated@@164 $generated@@165) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@161 $generated@@164 $generated@@165) ($generated@@162 $generated@@165))
)))
(assert  (and (and (and (and (and (forall (($generated@@174 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@174)) 15)) (forall (($generated@@175 T@T) ) (! (= ($generated@@173 ($generated@@168 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@168 $generated@@175))
))) (= ($generated@@1 $generated@@169) 16)) (forall (($generated@@176 T@U) ($generated@@177 Int) ) (! (let (($generated@@178 ($generated@@173 (type $generated@@176))))
(= (type ($generated@@166 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@166 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@167 $generated@@179)) $generated@@95)
 :pattern ( ($generated@@167 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@U) ) (! (= (type ($generated@@172 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 Int) ) (!  (=> (= (type $generated@@182) ($generated@@168 $generated@@169)) (=> (and (<= 0 $generated@@183) (< $generated@@183 ($generated@@170 $generated@@182))) (< ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@182 $generated@@183))) ($generated@@171 ($generated@@167 $generated@@182)))))
 :pattern ( ($generated@@166 $generated@@182 $generated@@183) ($generated@@167 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@184 $generated@@185)) $generated@@95)
 :pattern ( ($generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 Int) ) (!  (=> (= (type $generated@@186) ($generated@@168 $generated@@169)) (=> (and (<= 0 $generated@@187) (< $generated@@187 ($generated@@170 $generated@@186))) (< ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@186 $generated@@187))) ($generated@@171 ($generated@@184 $generated@@186)))))
 :pattern ( ($generated@@166 $generated@@186 $generated@@187) ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@188 $generated@@189)) $generated@@95)
 :pattern ( ($generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 Int) ) (!  (=> (= (type $generated@@190) ($generated@@168 $generated@@169)) (=> (and (<= 0 $generated@@191) (< $generated@@191 ($generated@@170 $generated@@190))) (< ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@190 $generated@@191))) ($generated@@171 ($generated@@188 $generated@@190)))))
 :pattern ( ($generated@@166 $generated@@190 $generated@@191) ($generated@@188 $generated@@190))
)))
(assert  (and (forall (($generated@@194 T@U) ($generated@@195 Int) ($generated@@196 T@U) ) (! (= (type ($generated@@192 $generated@@194 $generated@@195 $generated@@196)) $generated@@95)
 :pattern ( ($generated@@192 $generated@@194 $generated@@195 $generated@@196))
)) (forall (($generated@@197 T@U) ) (! (= (type ($generated@@193 $generated@@197)) $generated@@86)
 :pattern ( ($generated@@193 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 Int) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@198) $generated@@169) (= (type $generated@@200) $generated@@169)) (= ($generated@@193 ($generated@@192 $generated@@198 $generated@@199 $generated@@200)) $generated@@74))
 :pattern ( ($generated@@192 $generated@@198 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@201 $generated@@202)) $generated@@169)
 :pattern ( ($generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 Int) ($generated@@205 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@169) (= (type $generated@@205) $generated@@169)) (= ($generated@@201 ($generated@@192 $generated@@203 $generated@@204 $generated@@205)) $generated@@203))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 Int) ($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@207) $generated@@169) (= (type $generated@@209) $generated@@169)) (= ($generated@@206 ($generated@@192 $generated@@207 $generated@@208 $generated@@209)) $generated@@208))
 :pattern ( ($generated@@192 $generated@@207 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ) (! (= (type ($generated@@210 $generated@@211)) $generated@@169)
 :pattern ( ($generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 Int) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@212) $generated@@169) (= (type $generated@@214) $generated@@169)) (= ($generated@@210 ($generated@@192 $generated@@212 $generated@@213 $generated@@214)) $generated@@214))
 :pattern ( ($generated@@192 $generated@@212 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (= (type $generated@@215) $generated@@2) ($generated@@92 $generated@@215 ($generated@@102 0)))
 :pattern ( ($generated@@92 $generated@@215 ($generated@@102 0)))
)))
(assert (forall (($generated@@217 Int) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (and (= (type $generated@@218) $generated@@95) (= (type $generated@@219) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@219)) (= ($generated@@101 ($generated@@93 $generated@@217 $generated@@218) $generated@@94 $generated@@219)  (and ($generated@@101 ($generated@@8 $generated@@217) $generated@@96 $generated@@219) ($generated@@101 $generated@@218 $generated@@94 $generated@@219))))
 :pattern ( ($generated@@101 ($generated@@93 $generated@@217 $generated@@218) $generated@@94 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223)) $generated@@82)
 :pattern ( ($generated@@221 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@82) (= (type $generated@@225) $generated@@82)) (= (type $generated@@226) $generated@@95)) ($generated@@92 $generated@@226 ($generated@@221 $generated@@224 $generated@@225))) ($generated@@220 $generated@@226))
 :pattern ( ($generated@@220 $generated@@226) ($generated@@92 $generated@@226 ($generated@@221 $generated@@224 $generated@@225)))
)))
(assert  (and (forall (($generated@@230 T@U) ) (! (= (type ($generated@@228 $generated@@230)) $generated@@169)
 :pattern ( ($generated@@228 $generated@@230))
)) (forall (($generated@@231 T@U) ) (! (= (type ($generated@@229 $generated@@231)) $generated@@169)
 :pattern ( ($generated@@229 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (= (type $generated@@232) $generated@@95) (= (type $generated@@233) $generated@@95)) true) (= ($generated@@227 $generated@@232 $generated@@233)  (and (= ($generated@@228 $generated@@232) ($generated@@228 $generated@@233)) (= ($generated@@229 $generated@@232) ($generated@@229 $generated@@233)))))
 :pattern ( ($generated@@227 $generated@@232 $generated@@233))
)))
(assert (= (type $generated@@234) $generated@@95))
(assert (= ($generated@@193 $generated@@234) $generated@@64))
(assert (= (type $generated@@235) $generated@@95))
(assert (= ($generated@@193 $generated@@235) $generated@@68))
(assert (= (type $generated@@236) $generated@@95))
(assert (= ($generated@@193 $generated@@236) $generated@@76))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@237 $generated@@239)) $generated@@82)
 :pattern ( ($generated@@237 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (= (type $generated@@240) ($generated@@103 $generated@@169 $generated@@2)) (= (type $generated@@241) $generated@@82)) ($generated@@92 $generated@@240 ($generated@@237 $generated@@241))) ($generated@@238 $generated@@240))
 :pattern ( ($generated@@92 $generated@@240 ($generated@@237 $generated@@241)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (= ($generated@@1 ($generated@@244 $generated@@248 $generated@@249)) 17)) (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (! (= ($generated@@245 ($generated@@244 $generated@@250 $generated@@251)) $generated@@250)
 :pattern ( ($generated@@244 $generated@@250 $generated@@251))
))) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= ($generated@@246 ($generated@@244 $generated@@252 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@244 $generated@@252 $generated@@253))
))) (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@246 (type $generated@@254))))
(= (type ($generated@@242 $generated@@254 $generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@242 $generated@@254 $generated@@255 $generated@@256))
))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(let (($generated@@263 (type $generated@@259)))
(= (type ($generated@@247 $generated@@258 $generated@@259 $generated@@260 $generated@@261)) ($generated@@244 $generated@@263 $generated@@262))))
 :pattern ( ($generated@@247 $generated@@258 $generated@@259 $generated@@260 $generated@@261))
))) (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@246 (type $generated@@264))))
 (=> (= (type $generated@@267) $generated@@268) (= ($generated@@242 ($generated@@247 $generated@@264 $generated@@265 $generated@@266 $generated@@267) $generated@@265 $generated@@266) $generated@@267)))
 :weight 0
))) (and (and (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (or (= $generated@@271 $generated@@273) (= ($generated@@242 ($generated@@247 $generated@@270 $generated@@271 $generated@@272 $generated@@269) $generated@@273 $generated@@274) ($generated@@242 $generated@@270 $generated@@273 $generated@@274)))
 :weight 0
)) (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (or (= $generated@@278 $generated@@280) (= ($generated@@242 ($generated@@247 $generated@@276 $generated@@277 $generated@@278 $generated@@275) $generated@@279 $generated@@280) ($generated@@242 $generated@@276 $generated@@279 $generated@@280)))
 :weight 0
))) (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (or true (= ($generated@@242 ($generated@@247 $generated@@282 $generated@@283 $generated@@284 $generated@@281) $generated@@285 $generated@@286) ($generated@@242 $generated@@282 $generated@@285 $generated@@286)))
 :weight 0
)))) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 Bool) ) (! (= (type ($generated@@243 $generated@@287 $generated@@288 $generated@@289 $generated@@290)) ($generated@@244 $generated@@104 $generated@@4))
 :pattern ( ($generated@@243 $generated@@287 $generated@@288 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 Bool) ($generated@@295 T@U) ($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@85 (type $generated@@296))))
 (=> (and (and (and (and (= (type $generated@@291) $generated@@104) (= (type $generated@@292) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@293) ($generated@@84 $generated@@4))) (= (type $generated@@295) $generated@@104)) (= (type $generated@@296) ($generated@@84 $generated@@297))) (= ($generated@@0 ($generated@@242 ($generated@@243 $generated@@291 $generated@@292 $generated@@293 $generated@@294) $generated@@295 $generated@@296))  (=> (and (not (= $generated@@295 $generated@@291)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@292 $generated@@295) $generated@@293))) $generated@@294))))
 :pattern ( ($generated@@242 ($generated@@243 $generated@@291 $generated@@292 $generated@@293 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Bool) ) (! (= (type ($generated@@298 $generated@@299 $generated@@300 $generated@@301 $generated@@302)) ($generated@@244 $generated@@104 $generated@@4))
 :pattern ( ($generated@@298 $generated@@299 $generated@@300 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ($generated@@307 T@U) ($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@85 (type $generated@@308))))
 (=> (and (and (and (and (= (type $generated@@303) $generated@@104) (= (type $generated@@304) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@305) ($generated@@84 $generated@@4))) (= (type $generated@@307) $generated@@104)) (= (type $generated@@308) ($generated@@84 $generated@@309))) (= ($generated@@0 ($generated@@242 ($generated@@298 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))  (=> (and (not (= $generated@@307 $generated@@303)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@304 $generated@@307) $generated@@305))) $generated@@306))))
 :pattern ( ($generated@@242 ($generated@@298 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (= (type ($generated@@310 $generated@@312 $generated@@313)) $generated@@95)
 :pattern ( ($generated@@310 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@82) (= (type $generated@@315) $generated@@82)) (= (type $generated@@316) $generated@@169)) (= (type $generated@@317) $generated@@169)) (= ($generated@@92 ($generated@@310 $generated@@316 $generated@@317) ($generated@@221 $generated@@314 $generated@@315))  (and ($generated@@311 $generated@@316 $generated@@314) ($generated@@311 $generated@@317 $generated@@315))))
 :pattern ( ($generated@@92 ($generated@@310 $generated@@316 $generated@@317) ($generated@@221 $generated@@314 $generated@@315)))
)))
(assert (= (type $generated@@318) $generated@@82))
(assert ($generated@@92 $generated@@234 $generated@@318))
(assert ($generated@@92 $generated@@235 $generated@@318))
(assert (= (type $generated@@319) $generated@@82))
(assert ($generated@@92 $generated@@236 $generated@@319))
(assert  (and (= (type $generated@@321) $generated@@82) (= (type $generated@@322) $generated@@82)))
(assert (forall (($generated@@323 T@U) ($generated@@324 Int) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (and (= (type $generated@@323) $generated@@169) (= (type $generated@@325) $generated@@169)) (= (type $generated@@326) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@326)) (= ($generated@@101 ($generated@@192 $generated@@323 $generated@@324 $generated@@325) $generated@@319 $generated@@326)  (and (and ($generated@@320 $generated@@323 $generated@@321 $generated@@326) ($generated@@101 ($generated@@8 $generated@@324) $generated@@96 $generated@@326)) ($generated@@320 $generated@@325 $generated@@322 $generated@@326))))
 :pattern ( ($generated@@101 ($generated@@192 $generated@@323 $generated@@324 $generated@@325) $generated@@319 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@216 $generated@@327)) ($generated@@101 $generated@@234 $generated@@318 $generated@@327))
 :pattern ( ($generated@@101 $generated@@234 $generated@@318 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@216 $generated@@328)) ($generated@@101 $generated@@235 $generated@@318 $generated@@328))
 :pattern ( ($generated@@101 $generated@@235 $generated@@318 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@216 $generated@@329)) ($generated@@101 $generated@@236 $generated@@319 $generated@@329))
 :pattern ( ($generated@@101 $generated@@236 $generated@@319 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@95) (= (type $generated@@331) $generated@@95)) (= ($generated@@227 $generated@@330 $generated@@331) (= $generated@@330 $generated@@331)))
 :pattern ( ($generated@@227 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@95) (= (type $generated@@334) $generated@@95)) (= ($generated@@332 $generated@@333 $generated@@334) (= $generated@@333 $generated@@334)))
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@95) (= (type $generated@@336) $generated@@95)) (= ($generated@@161 $generated@@335 $generated@@336) (= $generated@@335 $generated@@336)))
 :pattern ( ($generated@@161 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@95) (= (type $generated@@339) $generated@@95)) (= ($generated@@337 $generated@@338 $generated@@339) (= $generated@@338 $generated@@339)))
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@95)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (= (type $generated@@344) $generated@@95) (= (type $generated@@345) $generated@@95)) (and ($generated@@340 $generated@@344) ($generated@@340 $generated@@345))) (= ($generated@@161 $generated@@344 $generated@@345)  (and (= ($generated@@341 $generated@@344) ($generated@@341 $generated@@345)) ($generated@@161 ($generated@@342 $generated@@344) ($generated@@342 $generated@@345)))))
 :pattern ( ($generated@@161 $generated@@344 $generated@@345) ($generated@@340 $generated@@344))
 :pattern ( ($generated@@161 $generated@@344 $generated@@345) ($generated@@340 $generated@@345))
)))
(assert  (and (= (type $generated@@348) $generated@@95) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(= (type ($generated@@349 $generated@@350)) $generated@@351))
 :pattern ( ($generated@@349 $generated@@350))
))))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@347 (not (= 1 $generated@@346))) (= $generated@@348 ($generated@@349 $generated@@234)))))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@347 (not (= 1 $generated@@346))) (= $generated@@348 ($generated@@349 $generated@@234)))))
(assert (forall (($generated@@353 T@U) ) (! (= (type ($generated@@352 $generated@@353)) $generated@@82)
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@103 $generated@@169 $generated@@4)) (= (type $generated@@355) $generated@@82)) (= ($generated@@92 $generated@@354 ($generated@@352 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@169) ($generated@@0 ($generated@@108 $generated@@354 $generated@@356))) ($generated@@311 $generated@@356 $generated@@355))
 :pattern ( ($generated@@108 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@92 $generated@@354 ($generated@@352 $generated@@355)))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@82)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@103 $generated@@169 $generated@@4)) (= (type $generated@@360) $generated@@82)) (= ($generated@@92 $generated@@359 ($generated@@357 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@169) ($generated@@0 ($generated@@108 $generated@@359 $generated@@361))) ($generated@@311 $generated@@361 $generated@@360))
 :pattern ( ($generated@@108 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@92 $generated@@359 ($generated@@357 $generated@@360)))
)))
(assert (forall (($generated@@363 Int) ) (! (= ($generated@@362 $generated@@363) $generated@@363)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (! (= ($generated@@349 $generated@@364) $generated@@364)
 :pattern ( ($generated@@349 $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(= (type ($generated@@365 $generated@@367 $generated@@368)) ($generated@@168 $generated@@369)))
 :pattern ( ($generated@@365 $generated@@367 $generated@@368))
)) (forall (($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@370)) $generated@@82)
 :pattern ( ($generated@@366 $generated@@370))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (= (type $generated@@371) ($generated@@168 $generated@@169)) (= (type $generated@@372) $generated@@169)) (= (type $generated@@373) $generated@@82)) (and ($generated@@92 $generated@@371 ($generated@@366 $generated@@373)) ($generated@@311 $generated@@372 $generated@@373))) ($generated@@92 ($generated@@365 $generated@@371 $generated@@372) ($generated@@366 $generated@@373)))
 :pattern ( ($generated@@92 ($generated@@365 $generated@@371 $generated@@372) ($generated@@366 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@95) (= (type $generated@@376) $generated@@95)) (and ($generated@@374 $generated@@375) ($generated@@374 $generated@@376))) (= ($generated@@332 $generated@@375 $generated@@376) true))
 :pattern ( ($generated@@332 $generated@@375 $generated@@376) ($generated@@374 $generated@@375))
 :pattern ( ($generated@@332 $generated@@375 $generated@@376) ($generated@@374 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@378) $generated@@95) (= (type $generated@@379) $generated@@95)) (and ($generated@@377 $generated@@378) ($generated@@377 $generated@@379))) (= ($generated@@332 $generated@@378 $generated@@379) true))
 :pattern ( ($generated@@332 $generated@@378 $generated@@379) ($generated@@377 $generated@@378))
 :pattern ( ($generated@@332 $generated@@378 $generated@@379) ($generated@@377 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@381) $generated@@95) (= (type $generated@@382) $generated@@95)) (and ($generated@@380 $generated@@381) ($generated@@380 $generated@@382))) (= ($generated@@337 $generated@@381 $generated@@382) true))
 :pattern ( ($generated@@337 $generated@@381 $generated@@382) ($generated@@380 $generated@@381))
 :pattern ( ($generated@@337 $generated@@381 $generated@@382) ($generated@@380 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@383) $generated@@82) (= (type $generated@@384) $generated@@82)) (= (type $generated@@385) $generated@@169)) (= (type $generated@@386) $generated@@169)) (= (type $generated@@387) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@387)) (= ($generated@@101 ($generated@@310 $generated@@385 $generated@@386) ($generated@@221 $generated@@383 $generated@@384) $generated@@387)  (and ($generated@@320 $generated@@385 $generated@@383 $generated@@387) ($generated@@320 $generated@@386 $generated@@384 $generated@@387))))
 :pattern ( ($generated@@101 ($generated@@310 $generated@@385 $generated@@386) ($generated@@221 $generated@@383 $generated@@384) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 Int) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@169) (= (type $generated@@390) $generated@@169)) (= ($generated@@92 ($generated@@192 $generated@@388 $generated@@389 $generated@@390) $generated@@319)  (and (and ($generated@@311 $generated@@388 $generated@@321) ($generated@@92 ($generated@@8 $generated@@389) $generated@@96)) ($generated@@311 $generated@@390 $generated@@322))))
 :pattern ( ($generated@@92 ($generated@@192 $generated@@388 $generated@@389 $generated@@390) $generated@@319))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (= (type $generated@@391) $generated@@95) (= ($generated@@220 $generated@@391) (= ($generated@@193 $generated@@391) $generated@@61)))
 :pattern ( ($generated@@220 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (!  (=> (= (type $generated@@392) $generated@@95) (= ($generated@@374 $generated@@392) (= ($generated@@193 $generated@@392) $generated@@64)))
 :pattern ( ($generated@@374 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@95) (= ($generated@@393 $generated@@394) (= ($generated@@193 $generated@@394) $generated@@66)))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (= (type $generated@@396) $generated@@95) (= ($generated@@395 $generated@@396) (= ($generated@@193 $generated@@396) $generated@@67)))
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (= (type $generated@@397) $generated@@95) (= ($generated@@377 $generated@@397) (= ($generated@@193 $generated@@397) $generated@@68)))
 :pattern ( ($generated@@377 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@95) (= ($generated@@398 $generated@@399) (= ($generated@@193 $generated@@399) $generated@@69)))
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (= (type $generated@@400) $generated@@95) (= ($generated@@162 $generated@@400) (= ($generated@@193 $generated@@400) $generated@@70)))
 :pattern ( ($generated@@162 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@95) (= ($generated@@401 $generated@@402) (= ($generated@@193 $generated@@402) $generated@@72)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@95) (= ($generated@@340 $generated@@403) (= ($generated@@193 $generated@@403) $generated@@73)))
 :pattern ( ($generated@@340 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@95) (= ($generated@@404 $generated@@405) (= ($generated@@193 $generated@@405) $generated@@74)))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@95) (= ($generated@@380 $generated@@406) (= ($generated@@193 $generated@@406) $generated@@76)))
 :pattern ( ($generated@@380 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@173 (type $generated@@408))))
 (=> (and (= (type $generated@@408) ($generated@@168 $generated@@410)) (= (type $generated@@409) ($generated@@168 $generated@@410))) (= ($generated@@407 $generated@@408 $generated@@409)  (and (= ($generated@@170 $generated@@408) ($generated@@170 $generated@@409)) (forall (($generated@@411 Int) ) (!  (=> (and (<= 0 $generated@@411) (< $generated@@411 ($generated@@170 $generated@@408))) (= ($generated@@166 $generated@@408 $generated@@411) ($generated@@166 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@166 $generated@@408 $generated@@411))
 :pattern ( ($generated@@166 $generated@@409 $generated@@411))
))))))
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@95) ($generated@@404 $generated@@412)) (exists (($generated@@413 T@U) ($generated@@414 Int) ($generated@@415 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@169) (= (type $generated@@415) $generated@@169)) (= $generated@@412 ($generated@@192 $generated@@413 $generated@@414 $generated@@415)))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
)))
 :pattern ( ($generated@@404 $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@95) ($generated@@220 $generated@@416)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@169) (= (type $generated@@418) $generated@@169)) (= $generated@@416 ($generated@@310 $generated@@417 $generated@@418)))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
)))
 :pattern ( ($generated@@220 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@95) ($generated@@340 $generated@@419)) (exists (($generated@@420 Int) ($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@95) (= $generated@@419 ($generated@@93 $generated@@420 $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
)))
 :pattern ( ($generated@@340 $generated@@419))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@168 $generated@@423))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@T) ) (! (= ($generated@@170 ($generated@@422 $generated@@424)) 0)
 :pattern ( ($generated@@422 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@95) ($generated@@374 $generated@@425)) (= $generated@@425 $generated@@234))
 :pattern ( ($generated@@374 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@95) ($generated@@377 $generated@@426)) (= $generated@@426 $generated@@235))
 :pattern ( ($generated@@377 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@95) ($generated@@380 $generated@@427)) (= $generated@@427 $generated@@236))
 :pattern ( ($generated@@380 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@95)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@95) ($generated@@393 $generated@@430)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@95) (= $generated@@430 ($generated@@428 $generated@@431)))
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
)))
 :pattern ( ($generated@@393 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@95) ($generated@@395 $generated@@432)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) ($generated@@168 $generated@@169)) (= $generated@@432 ($generated@@167 $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
)))
 :pattern ( ($generated@@395 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@95) ($generated@@398 $generated@@434)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) ($generated@@168 $generated@@169)) (= $generated@@434 ($generated@@184 $generated@@435)))
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
)))
 :pattern ( ($generated@@398 $generated@@434))
)))
(assert (forall (($generated@@437 Int) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@95)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@95) ($generated@@162 $generated@@438)) (exists (($generated@@439 Int) ) (= $generated@@438 ($generated@@436 $generated@@439))))
 :pattern ( ($generated@@162 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@95) ($generated@@401 $generated@@440)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) ($generated@@168 $generated@@169)) (= $generated@@440 ($generated@@188 $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
)))
 :pattern ( ($generated@@401 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
 (=> (= (type $generated@@442) ($generated@@168 $generated@@444)) (= ($generated@@170 ($generated@@365 $generated@@442 $generated@@443)) (+ 1 ($generated@@170 $generated@@442)))))
 :pattern ( ($generated@@365 $generated@@442 $generated@@443))
)))
(assert  (and (= ($generated@@1 $generated@@447) 18) (forall (($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@448)) $generated@@447)
 :pattern ( ($generated@@446 $generated@@448))
))))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (= (type $generated@@449) $generated@@447) (= (type $generated@@450) $generated@@95)) (= (type $generated@@451) $generated@@95)) (= ($generated@@445 ($generated@@446 $generated@@449) $generated@@450 $generated@@451) ($generated@@445 $generated@@449 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@445 ($generated@@446 $generated@@449) $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@169)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@82) (= (type $generated@@456) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@320 ($generated@@452 $generated@@454) $generated@@455 $generated@@456) ($generated@@101 $generated@@454 $generated@@455 $generated@@456)))
 :pattern ( ($generated@@320 ($generated@@452 $generated@@454) $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@459 T@T) ) (! (= (type ($generated@@458 $generated@@459)) ($generated@@103 $generated@@459 $generated@@2))
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@106 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@103 $generated@@461 $generated@@2)) (and (= (= ($generated@@457 $generated@@460) 0) (= $generated@@460 ($generated@@458 $generated@@461))) (=> (not (= ($generated@@457 $generated@@460) 0)) (exists (($generated@@462 T@U) ) (!  (and (= (type $generated@@462) $generated@@461) (< 0 ($generated ($generated@@108 $generated@@460 $generated@@462))))
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@457 $generated@@460))
)))
(assert  (and (and (and (and (forall (($generated@@468 T@T) ($generated@@469 T@T) ) (= ($generated@@1 ($generated@@465 $generated@@468 $generated@@469)) 19)) (forall (($generated@@470 T@T) ($generated@@471 T@T) ) (! (= ($generated@@466 ($generated@@465 $generated@@470 $generated@@471)) $generated@@470)
 :pattern ( ($generated@@465 $generated@@470 $generated@@471))
))) (forall (($generated@@472 T@T) ($generated@@473 T@T) ) (! (= ($generated@@467 ($generated@@465 $generated@@472 $generated@@473)) $generated@@473)
 :pattern ( ($generated@@465 $generated@@472 $generated@@473))
))) (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@466 (type $generated@@474))))
(= (type ($generated@@463 $generated@@474)) ($generated@@103 $generated@@475 $generated@@4)))
 :pattern ( ($generated@@463 $generated@@474))
))) (forall (($generated@@476 T@T) ($generated@@477 T@T) ) (! (= (type ($generated@@464 $generated@@476 $generated@@477)) ($generated@@465 $generated@@476 $generated@@477))
 :pattern ( ($generated@@464 $generated@@476 $generated@@477))
))))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@T) ) (! (let (($generated@@480 (type $generated@@478)))
 (not ($generated@@0 ($generated@@108 ($generated@@463 ($generated@@464 $generated@@480 $generated@@479)) $generated@@478))))
 :pattern ( (let (($generated@@480 (type $generated@@478)))
($generated@@108 ($generated@@463 ($generated@@464 $generated@@480 $generated@@479)) $generated@@478)))
)))
(assert  (and (and (and (and (forall (($generated@@486 T@T) ($generated@@487 T@T) ) (= ($generated@@1 ($generated@@483 $generated@@486 $generated@@487)) 20)) (forall (($generated@@488 T@T) ($generated@@489 T@T) ) (! (= ($generated@@484 ($generated@@483 $generated@@488 $generated@@489)) $generated@@488)
 :pattern ( ($generated@@483 $generated@@488 $generated@@489))
))) (forall (($generated@@490 T@T) ($generated@@491 T@T) ) (! (= ($generated@@485 ($generated@@483 $generated@@490 $generated@@491)) $generated@@491)
 :pattern ( ($generated@@483 $generated@@490 $generated@@491))
))) (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@484 (type $generated@@492))))
(= (type ($generated@@481 $generated@@492)) ($generated@@103 $generated@@493 $generated@@4)))
 :pattern ( ($generated@@481 $generated@@492))
))) (forall (($generated@@494 T@T) ($generated@@495 T@T) ) (! (= (type ($generated@@482 $generated@@494 $generated@@495)) ($generated@@483 $generated@@494 $generated@@495))
 :pattern ( ($generated@@482 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@T) ) (! (let (($generated@@498 (type $generated@@496)))
 (not ($generated@@0 ($generated@@108 ($generated@@481 ($generated@@482 $generated@@498 $generated@@497)) $generated@@496))))
 :pattern ( (let (($generated@@498 (type $generated@@496)))
($generated@@108 ($generated@@481 ($generated@@482 $generated@@498 $generated@@497)) $generated@@496)))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@106 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@103 $generated@@500 $generated@@2)) (= ($generated@@238 $generated@@499) (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@500) (and (<= 0 ($generated ($generated@@108 $generated@@499 $generated@@501))) (<= ($generated ($generated@@108 $generated@@499 $generated@@501)) ($generated@@457 $generated@@499))))
 :pattern ( ($generated@@108 $generated@@499 $generated@@501))
)))))
 :pattern ( ($generated@@238 $generated@@499))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@169) ($generated@@311 $generated@@502 $generated@@96)) (and (= ($generated@@452 ($generated@@172 $generated@@2 $generated@@502)) $generated@@502) ($generated@@92 ($generated@@172 $generated@@2 $generated@@502) $generated@@96)))
 :pattern ( ($generated@@311 $generated@@502 $generated@@96))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@169) ($generated@@311 $generated@@503 $generated@@318)) (and (= ($generated@@452 ($generated@@172 $generated@@95 $generated@@503)) $generated@@503) ($generated@@92 ($generated@@172 $generated@@95 $generated@@503) $generated@@318)))
 :pattern ( ($generated@@311 $generated@@503 $generated@@318))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@169) ($generated@@311 $generated@@504 $generated@@94)) (and (= ($generated@@452 ($generated@@172 $generated@@95 $generated@@504)) $generated@@504) ($generated@@92 ($generated@@172 $generated@@95 $generated@@504) $generated@@94)))
 :pattern ( ($generated@@311 $generated@@504 $generated@@94))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@169) ($generated@@311 $generated@@505 $generated@@319)) (and (= ($generated@@452 ($generated@@172 $generated@@95 $generated@@505)) $generated@@505) ($generated@@92 ($generated@@172 $generated@@95 $generated@@505) $generated@@319)))
 :pattern ( ($generated@@311 $generated@@505 $generated@@319))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@95) (= ($generated@@92 ($generated@@428 $generated@@506) $generated@@318) ($generated@@92 $generated@@506 $generated@@318)))
 :pattern ( ($generated@@92 ($generated@@428 $generated@@506) $generated@@318))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@92 ($generated@@436 $generated@@507) $generated@@94) ($generated@@92 ($generated@@8 $generated@@507) $generated@@96))
 :pattern ( ($generated@@92 ($generated@@436 $generated@@507) $generated@@94))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 Int) ($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
 (=> (= (type $generated@@508) ($generated@@168 $generated@@511)) (and (=> (= $generated@@509 ($generated@@170 $generated@@508)) (= ($generated@@166 ($generated@@365 $generated@@508 $generated@@510) $generated@@509) $generated@@510)) (=> (not (= $generated@@509 ($generated@@170 $generated@@508))) (= ($generated@@166 ($generated@@365 $generated@@508 $generated@@510) $generated@@509) ($generated@@166 $generated@@508 $generated@@509))))))
 :pattern ( ($generated@@166 ($generated@@365 $generated@@508 $generated@@510) $generated@@509))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@95)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@514) $generated@@95) (= (type $generated@@515) $generated@@95)) (and ($generated@@393 $generated@@514) ($generated@@393 $generated@@515))) (= ($generated@@332 $generated@@514 $generated@@515) ($generated@@332 ($generated@@512 $generated@@514) ($generated@@512 $generated@@515))))
 :pattern ( ($generated@@332 $generated@@514 $generated@@515) ($generated@@393 $generated@@514))
 :pattern ( ($generated@@332 $generated@@514 $generated@@515) ($generated@@393 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) ($generated@@168 $generated@@169))
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@518) $generated@@95) (= (type $generated@@519) $generated@@95)) (and ($generated@@395 $generated@@518) ($generated@@395 $generated@@519))) (= ($generated@@332 $generated@@518 $generated@@519) ($generated@@407 ($generated@@516 $generated@@518) ($generated@@516 $generated@@519))))
 :pattern ( ($generated@@332 $generated@@518 $generated@@519) ($generated@@395 $generated@@518))
 :pattern ( ($generated@@332 $generated@@518 $generated@@519) ($generated@@395 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) ($generated@@168 $generated@@169))
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@95) (= (type $generated@@523) $generated@@95)) (and ($generated@@398 $generated@@522) ($generated@@398 $generated@@523))) (= ($generated@@332 $generated@@522 $generated@@523) ($generated@@407 ($generated@@520 $generated@@522) ($generated@@520 $generated@@523))))
 :pattern ( ($generated@@332 $generated@@522 $generated@@523) ($generated@@398 $generated@@522))
 :pattern ( ($generated@@332 $generated@@522 $generated@@523) ($generated@@398 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) ($generated@@168 $generated@@169))
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@95) (= (type $generated@@527) $generated@@95)) (and ($generated@@401 $generated@@526) ($generated@@401 $generated@@527))) (= ($generated@@161 $generated@@526 $generated@@527) ($generated@@407 ($generated@@524 $generated@@526) ($generated@@524 $generated@@527))))
 :pattern ( ($generated@@161 $generated@@526 $generated@@527) ($generated@@401 $generated@@526))
 :pattern ( ($generated@@161 $generated@@526 $generated@@527) ($generated@@401 $generated@@527))
)))
(assert  (and (and (forall (($generated@@532 T@U) ) (! (= (type ($generated@@528 $generated@@532)) $generated@@95)
 :pattern ( ($generated@@528 $generated@@532))
)) (= (type $generated@@530) $generated@@447)) (= (type $generated@@531) $generated@@95)))
(assert  (=> (<= 4 $generated@@346) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@95) (or ($generated@@529 $generated@@533) (and (not (= 4 $generated@@346)) (and ($generated@@92 $generated@@533 $generated@@94) ($generated@@445 $generated@@530 $generated@@533 ($generated@@349 $generated@@531)))))) ($generated@@92 ($generated@@528 $generated@@533) $generated@@319))
 :pattern ( ($generated@@528 $generated@@533))
))))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 ($generated@@467 (type $generated@@534))))
(let (($generated@@536 ($generated@@466 (type $generated@@534))))
 (=> (= (type $generated@@534) ($generated@@465 $generated@@536 $generated@@535)) (or (= $generated@@534 ($generated@@464 $generated@@536 $generated@@535)) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@536) ($generated@@0 ($generated@@108 ($generated@@463 $generated@@534) $generated@@537)))
 :no-pattern (type $generated@@537)
 :no-pattern ($generated $generated@@537)
 :no-pattern ($generated@@0 $generated@@537)
))))))
 :pattern ( ($generated@@463 $generated@@534))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@467 (type $generated@@539))))
(= (type ($generated@@538 $generated@@539)) ($generated@@103 $generated@@540 $generated@@4)))
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@467 (type $generated@@541))))
(let (($generated@@543 ($generated@@466 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@465 $generated@@543 $generated@@542)) (or (= $generated@@541 ($generated@@464 $generated@@543 $generated@@542)) (exists (($generated@@544 T@U) ) (!  (and (= (type $generated@@544) $generated@@542) ($generated@@0 ($generated@@108 ($generated@@538 $generated@@541) $generated@@544)))
 :no-pattern (type $generated@@544)
 :no-pattern ($generated $generated@@544)
 :no-pattern ($generated@@0 $generated@@544)
))))))
 :pattern ( ($generated@@538 $generated@@541))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@485 (type $generated@@545))))
(let (($generated@@547 ($generated@@484 (type $generated@@545))))
 (=> (= (type $generated@@545) ($generated@@483 $generated@@547 $generated@@546)) (or (= $generated@@545 ($generated@@482 $generated@@547 $generated@@546)) (exists (($generated@@548 T@U) ) (!  (and (= (type $generated@@548) $generated@@547) ($generated@@0 ($generated@@108 ($generated@@481 $generated@@545) $generated@@548)))
 :no-pattern (type $generated@@548)
 :no-pattern ($generated $generated@@548)
 :no-pattern ($generated@@0 $generated@@548)
))))))
 :pattern ( ($generated@@481 $generated@@545))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@485 (type $generated@@550))))
(= (type ($generated@@549 $generated@@550)) ($generated@@103 $generated@@551 $generated@@4)))
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@485 (type $generated@@552))))
(let (($generated@@554 ($generated@@484 (type $generated@@552))))
 (=> (= (type $generated@@552) ($generated@@483 $generated@@554 $generated@@553)) (or (= $generated@@552 ($generated@@482 $generated@@554 $generated@@553)) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@553) ($generated@@0 ($generated@@108 ($generated@@549 $generated@@552) $generated@@555)))
 :no-pattern (type $generated@@555)
 :no-pattern ($generated $generated@@555)
 :no-pattern ($generated@@0 $generated@@555)
))))))
 :pattern ( ($generated@@549 $generated@@552))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@103 $generated@@169 $generated@@2)) (= (type $generated@@557) $generated@@82)) (= ($generated@@92 $generated@@556 ($generated@@237 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@169) (< 0 ($generated ($generated@@108 $generated@@556 $generated@@558)))) ($generated@@311 $generated@@558 $generated@@557))
 :pattern ( ($generated@@108 $generated@@556 $generated@@558))
))))
 :pattern ( ($generated@@92 $generated@@556 ($generated@@237 $generated@@557)))
)))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@347 (not (= 1 $generated@@346))) ($generated@@92 $generated@@348 $generated@@318))))
(assert (= (type $generated@@560) $generated@@95))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@559 (not (= 1 $generated@@346))) ($generated@@92 $generated@@560 $generated@@318))))
(assert  (=> (<= 2 $generated@@346) (=> (or $generated@@561 (not (= 2 $generated@@346))) ($generated@@92 $generated@@531 $generated@@318))))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) ($generated@@168 $generated@@169)) (= ($generated@@92 ($generated@@167 $generated@@562) $generated@@318) ($generated@@92 $generated@@562 ($generated@@366 $generated@@318))))
 :pattern ( ($generated@@92 ($generated@@167 $generated@@562) $generated@@318))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) ($generated@@168 $generated@@169)) (= ($generated@@92 ($generated@@184 $generated@@563) $generated@@318) ($generated@@92 $generated@@563 ($generated@@366 $generated@@318))))
 :pattern ( ($generated@@92 ($generated@@184 $generated@@563) $generated@@318))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) ($generated@@168 $generated@@169)) (= ($generated@@92 ($generated@@188 $generated@@564) $generated@@94) ($generated@@92 $generated@@564 ($generated@@366 $generated@@94))))
 :pattern ( ($generated@@92 ($generated@@188 $generated@@564) $generated@@94))
)))
(assert  (=> (<= 2 $generated@@346) (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@447) (= (type $generated@@567) $generated@@95)) (= (type $generated@@568) $generated@@95)) (or ($generated@@565 $generated@@567 $generated@@568) (and (not (= 2 $generated@@346)) (and ($generated@@92 $generated@@567 $generated@@94) ($generated@@92 $generated@@568 $generated@@318))))) true)
 :pattern ( ($generated@@445 $generated@@566 $generated@@567 $generated@@568))
))))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@95) (= (type $generated@@570) $generated@@95)) (and ($generated@@404 $generated@@569) ($generated@@404 $generated@@570))) (= ($generated@@337 $generated@@569 $generated@@570)  (and (and (= ($generated@@201 $generated@@569) ($generated@@201 $generated@@570)) (= ($generated@@206 $generated@@569) ($generated@@206 $generated@@570))) (= ($generated@@210 $generated@@569) ($generated@@210 $generated@@570)))))
 :pattern ( ($generated@@337 $generated@@569 $generated@@570) ($generated@@404 $generated@@569))
 :pattern ( ($generated@@337 $generated@@569 $generated@@570) ($generated@@404 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@103 $generated@@169 $generated@@4)) (= (type $generated@@572) $generated@@82)) (= (type $generated@@573) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@571 ($generated@@352 $generated@@572) $generated@@573) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@169) ($generated@@0 ($generated@@108 $generated@@571 $generated@@574))) ($generated@@320 $generated@@574 $generated@@572 $generated@@573))
 :pattern ( ($generated@@108 $generated@@571 $generated@@574))
))))
 :pattern ( ($generated@@101 $generated@@571 ($generated@@352 $generated@@572) $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@103 $generated@@169 $generated@@4)) (= (type $generated@@576) $generated@@82)) (= (type $generated@@577) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@575 ($generated@@357 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@169) ($generated@@0 ($generated@@108 $generated@@575 $generated@@578))) ($generated@@320 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@108 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@101 $generated@@575 ($generated@@357 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
(= ($generated ($generated@@108 ($generated@@458 $generated@@580) $generated@@579)) 0))
 :pattern ( (let (($generated@@580 (type $generated@@579)))
($generated@@108 ($generated@@458 $generated@@580) $generated@@579)))
)))
(assert  (and (forall (($generated@@583 T@U) ) (! (= (type ($generated@@581 $generated@@583)) ($generated@@103 $generated@@169 $generated@@4))
 :pattern ( ($generated@@581 $generated@@583))
)) (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@467 (type $generated@@584))))
(let (($generated@@586 ($generated@@466 (type $generated@@584))))
(= (type ($generated@@582 $generated@@584)) ($generated@@103 $generated@@586 $generated@@585))))
 :pattern ( ($generated@@582 $generated@@584))
))))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@465 $generated@@169 $generated@@169)) (= (type $generated@@588) $generated@@169)) (= ($generated@@0 ($generated@@108 ($generated@@581 $generated@@587) $generated@@588))  (and ($generated@@0 ($generated@@108 ($generated@@463 $generated@@587) ($generated@@228 ($generated@@172 $generated@@95 $generated@@588)))) (= ($generated@@108 ($generated@@582 $generated@@587) ($generated@@228 ($generated@@172 $generated@@95 $generated@@588))) ($generated@@229 ($generated@@172 $generated@@95 $generated@@588))))))
 :pattern ( ($generated@@108 ($generated@@581 $generated@@587) $generated@@588))
)))
(assert  (and (forall (($generated@@591 T@U) ) (! (= (type ($generated@@589 $generated@@591)) ($generated@@103 $generated@@169 $generated@@4))
 :pattern ( ($generated@@589 $generated@@591))
)) (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@485 (type $generated@@592))))
(let (($generated@@594 ($generated@@484 (type $generated@@592))))
(= (type ($generated@@590 $generated@@592)) ($generated@@103 $generated@@594 $generated@@593))))
 :pattern ( ($generated@@590 $generated@@592))
))))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@483 $generated@@169 $generated@@169)) (= (type $generated@@596) $generated@@169)) (= ($generated@@0 ($generated@@108 ($generated@@589 $generated@@595) $generated@@596))  (and ($generated@@0 ($generated@@108 ($generated@@481 $generated@@595) ($generated@@228 ($generated@@172 $generated@@95 $generated@@596)))) (= ($generated@@108 ($generated@@590 $generated@@595) ($generated@@228 ($generated@@172 $generated@@95 $generated@@596))) ($generated@@229 ($generated@@172 $generated@@95 $generated@@596))))))
 :pattern ( ($generated@@108 ($generated@@589 $generated@@595) $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@598)))
(let (($generated@@600 ($generated@@466 (type $generated@@597))))
 (=> (= (type $generated@@597) ($generated@@465 $generated@@600 $generated@@599)) (= ($generated@@0 ($generated@@108 ($generated@@538 $generated@@597) $generated@@598)) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@600) (and ($generated@@0 ($generated@@108 ($generated@@463 $generated@@597) $generated@@601)) (= $generated@@598 ($generated@@108 ($generated@@582 $generated@@597) $generated@@601))))
 :pattern ( ($generated@@108 ($generated@@463 $generated@@597) $generated@@601))
 :pattern ( ($generated@@108 ($generated@@582 $generated@@597) $generated@@601))
))))))
 :pattern ( ($generated@@108 ($generated@@538 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@603)))
(let (($generated@@605 ($generated@@484 (type $generated@@602))))
 (=> (= (type $generated@@602) ($generated@@483 $generated@@605 $generated@@604)) (= ($generated@@0 ($generated@@108 ($generated@@549 $generated@@602) $generated@@603)) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@605) (and ($generated@@0 ($generated@@108 ($generated@@481 $generated@@602) $generated@@606)) (= $generated@@603 ($generated@@108 ($generated@@590 $generated@@602) $generated@@606))))
 :pattern ( ($generated@@108 ($generated@@481 $generated@@602) $generated@@606))
 :pattern ( ($generated@@108 ($generated@@590 $generated@@602) $generated@@606))
))))))
 :pattern ( ($generated@@108 ($generated@@549 $generated@@602) $generated@@603))
)))
(assert  (and (forall (($generated@@611 T@U) ) (! (= (type ($generated@@609 $generated@@611)) $generated@@169)
 :pattern ( ($generated@@609 $generated@@611))
)) (forall (($generated@@612 T@U) ) (! (= (type ($generated@@610 $generated@@612)) $generated@@169)
 :pattern ( ($generated@@610 $generated@@612))
))))
(assert  (=> (<= 4 $generated@@346) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@95) (or ($generated@@529 ($generated@@349 $generated@@613)) (and (not (= 4 $generated@@346)) (and ($generated@@92 $generated@@613 $generated@@94) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@445 $generated@@530 ($generated@@349 $generated@@613) ($generated@@349 $generated@@531))))))))) (and (=> (= ($generated@@362 ($generated@@341 ($generated@@349 $generated@@613))) ($generated@@362 0)) (and ($generated@@607 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@524 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@613))))) ($generated@@362 0)))) ($generated@@608 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@524 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@613))))) ($generated@@362 2)))))) (= ($generated@@528 ($generated@@349 $generated@@613)) (ite (= ($generated@@362 ($generated@@341 ($generated@@349 $generated@@613))) ($generated@@362 0)) (let (($generated@@614 ($generated@@609 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@524 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@613))))) ($generated@@362 0))))))
($generated@@192 $generated@@614 ($generated@@163 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@524 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@613))))) ($generated@@362 1)))) ($generated@@610 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@524 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@613))))) ($generated@@362 2)))))) $generated@@236))))
 :weight 3
 :pattern ( ($generated@@528 ($generated@@349 $generated@@613)))
))))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (! (= (type ($generated@@615 $generated@@616 $generated@@617)) $generated@@82)
 :pattern ( ($generated@@615 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@465 $generated@@169 $generated@@169)) (= (type $generated@@619) $generated@@82)) (= (type $generated@@620) $generated@@82)) (= (type $generated@@621) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@618 ($generated@@615 $generated@@619 $generated@@620) $generated@@621) (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@169) ($generated@@0 ($generated@@108 ($generated@@463 $generated@@618) $generated@@622))) (and ($generated@@320 ($generated@@108 ($generated@@582 $generated@@618) $generated@@622) $generated@@620 $generated@@621) ($generated@@320 $generated@@622 $generated@@619 $generated@@621)))
 :pattern ( ($generated@@108 ($generated@@582 $generated@@618) $generated@@622))
 :pattern ( ($generated@@108 ($generated@@463 $generated@@618) $generated@@622))
))))
 :pattern ( ($generated@@101 $generated@@618 ($generated@@615 $generated@@619 $generated@@620) $generated@@621))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (! (= (type ($generated@@623 $generated@@624 $generated@@625)) $generated@@82)
 :pattern ( ($generated@@623 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@483 $generated@@169 $generated@@169)) (= (type $generated@@627) $generated@@82)) (= (type $generated@@628) $generated@@82)) (= (type $generated@@629) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@626 ($generated@@623 $generated@@627 $generated@@628) $generated@@629) (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@169) ($generated@@0 ($generated@@108 ($generated@@481 $generated@@626) $generated@@630))) (and ($generated@@320 ($generated@@108 ($generated@@590 $generated@@626) $generated@@630) $generated@@628 $generated@@629) ($generated@@320 $generated@@630 $generated@@627 $generated@@629)))
 :pattern ( ($generated@@108 ($generated@@590 $generated@@626) $generated@@630))
 :pattern ( ($generated@@108 ($generated@@481 $generated@@626) $generated@@630))
))))
 :pattern ( ($generated@@101 $generated@@626 ($generated@@623 $generated@@627 $generated@@628) $generated@@629))
)))
(assert  (=> (<= 2 $generated@@346) (=> (or $generated@@561 (not (= 2 $generated@@346))) (and (and $generated@@347 $generated@@559) (= $generated@@531 ($generated@@349 ($generated@@184 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 ($generated@@167 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 $generated@@348))) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@560)))))))) ($generated@@452 ($generated@@349 $generated@@234)))))))))))
(assert  (=> (<= 2 $generated@@346) (=> (or $generated@@561 (not (= 2 $generated@@346))) (and (and $generated@@347 $generated@@559) (= $generated@@531 ($generated@@349 ($generated@@184 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 ($generated@@167 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 $generated@@348))) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@560)))))))) ($generated@@452 ($generated@@349 $generated@@234)))))))))))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (! (let (($generated@@633 ($generated@@173 (type $generated@@631))))
 (=> (and (and (= (type $generated@@631) ($generated@@168 $generated@@633)) (= (type $generated@@632) ($generated@@168 $generated@@633))) ($generated@@407 $generated@@631 $generated@@632)) (= $generated@@631 $generated@@632)))
 :pattern ( ($generated@@407 $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@95) (= (type $generated@@635) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@635)) (= ($generated@@101 ($generated@@428 $generated@@634) $generated@@318 $generated@@635) ($generated@@101 $generated@@634 $generated@@318 $generated@@635)))
 :pattern ( ($generated@@101 ($generated@@428 $generated@@634) $generated@@318 $generated@@635))
)))
(assert (forall (($generated@@636 Int) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@216 $generated@@637)) (= ($generated@@101 ($generated@@436 $generated@@636) $generated@@94 $generated@@637) ($generated@@101 ($generated@@8 $generated@@636) $generated@@96 $generated@@637)))
 :pattern ( ($generated@@101 ($generated@@436 $generated@@636) $generated@@94 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@95) ($generated@@92 $generated@@638 $generated@@319)) (or ($generated@@404 $generated@@638) ($generated@@380 $generated@@638)))
 :pattern ( ($generated@@380 $generated@@638) ($generated@@92 $generated@@638 $generated@@319))
 :pattern ( ($generated@@404 $generated@@638) ($generated@@92 $generated@@638 $generated@@319))
)))
(assert (forall (($generated@@640 T@T) ) (! (= (type ($generated@@639 $generated@@640)) ($generated@@103 $generated@@640 $generated@@4))
 :pattern ( ($generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (! (let (($generated@@642 ($generated@@485 (type $generated@@641))))
(let (($generated@@643 ($generated@@484 (type $generated@@641))))
 (=> (= (type $generated@@641) ($generated@@483 $generated@@643 $generated@@642)) (= (= $generated@@641 ($generated@@482 $generated@@643 $generated@@642)) (= ($generated@@481 $generated@@641) ($generated@@639 $generated@@643))))))
 :pattern ( ($generated@@481 $generated@@641))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@485 (type $generated@@644))))
(let (($generated@@646 ($generated@@484 (type $generated@@644))))
 (=> (= (type $generated@@644) ($generated@@483 $generated@@646 $generated@@645)) (= (= $generated@@644 ($generated@@482 $generated@@646 $generated@@645)) (= ($generated@@549 $generated@@644) ($generated@@639 $generated@@645))))))
 :pattern ( ($generated@@549 $generated@@644))
)))
(assert (forall (($generated@@647 T@U) ) (! (let (($generated@@648 ($generated@@485 (type $generated@@647))))
(let (($generated@@649 ($generated@@484 (type $generated@@647))))
 (=> (= (type $generated@@647) ($generated@@483 $generated@@649 $generated@@648)) (= (= $generated@@647 ($generated@@482 $generated@@649 $generated@@648)) (= ($generated@@589 $generated@@647) ($generated@@639 $generated@@169))))))
 :pattern ( ($generated@@589 $generated@@647))
)))
(assert (forall (($generated@@650 T@U) ) (! (let (($generated@@651 ($generated@@467 (type $generated@@650))))
(let (($generated@@652 ($generated@@466 (type $generated@@650))))
 (=> (= (type $generated@@650) ($generated@@465 $generated@@652 $generated@@651)) (or (= $generated@@650 ($generated@@464 $generated@@652 $generated@@651)) (exists (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (and (and (= (type $generated@@653) $generated@@169) (= (type $generated@@654) $generated@@169)) ($generated@@0 ($generated@@108 ($generated@@581 $generated@@650) ($generated@@452 ($generated@@310 $generated@@653 $generated@@654)))))
 :no-pattern (type $generated@@653)
 :no-pattern (type $generated@@654)
 :no-pattern ($generated $generated@@653)
 :no-pattern ($generated@@0 $generated@@653)
 :no-pattern ($generated $generated@@654)
 :no-pattern ($generated@@0 $generated@@654)
))))))
 :pattern ( ($generated@@581 $generated@@650))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@485 (type $generated@@655))))
(let (($generated@@657 ($generated@@484 (type $generated@@655))))
 (=> (= (type $generated@@655) ($generated@@483 $generated@@657 $generated@@656)) (or (= $generated@@655 ($generated@@482 $generated@@657 $generated@@656)) (exists (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (and (and (= (type $generated@@658) $generated@@169) (= (type $generated@@659) $generated@@169)) ($generated@@0 ($generated@@108 ($generated@@589 $generated@@655) ($generated@@452 ($generated@@310 $generated@@658 $generated@@659)))))
 :no-pattern (type $generated@@658)
 :no-pattern (type $generated@@659)
 :no-pattern ($generated $generated@@658)
 :no-pattern ($generated@@0 $generated@@658)
 :no-pattern ($generated $generated@@659)
 :no-pattern ($generated@@0 $generated@@659)
))))))
 :pattern ( ($generated@@589 $generated@@655))
)))
(assert  (=> (<= 4 $generated@@346) (forall (($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@95) (or ($generated@@529 $generated@@660) (and (not (= 4 $generated@@346)) (and ($generated@@92 $generated@@660 $generated@@94) ($generated@@445 $generated@@530 $generated@@660 ($generated@@349 $generated@@531)))))) (and (=> (= ($generated@@341 $generated@@660) ($generated@@362 0)) (and ($generated@@607 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@660)) ($generated@@362 0)))) ($generated@@608 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@660)) ($generated@@362 2)))))) (= ($generated@@528 $generated@@660) (ite (= ($generated@@341 $generated@@660) ($generated@@362 0)) (let (($generated@@661 ($generated@@609 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@660)) ($generated@@362 0))))))
($generated@@192 $generated@@661 ($generated@@163 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@660)) ($generated@@362 1)))) ($generated@@610 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@660)) ($generated@@362 2)))))) $generated@@236))))
 :pattern ( ($generated@@528 $generated@@660))
))))
(assert (forall (($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@169) ($generated@@311 $generated@@662 $generated@@46)) (and (= ($generated@@452 ($generated@@172 $generated@@2 $generated@@662)) $generated@@662) ($generated@@92 ($generated@@172 $generated@@2 $generated@@662) $generated@@46)))
 :pattern ( ($generated@@311 $generated@@662 $generated@@46))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@169) ($generated@@311 $generated@@663 $generated@@47)) (and (= ($generated@@452 ($generated@@172 $generated@@3 $generated@@663)) $generated@@663) ($generated@@92 ($generated@@172 $generated@@3 $generated@@663) $generated@@47)))
 :pattern ( ($generated@@311 $generated@@663 $generated@@47))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@169) ($generated@@311 $generated@@664 $generated@@44)) (and (= ($generated@@452 ($generated@@172 $generated@@4 $generated@@664)) $generated@@664) ($generated@@92 ($generated@@172 $generated@@4 $generated@@664) $generated@@44)))
 :pattern ( ($generated@@311 $generated@@664 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@665) 21))
(assert (forall (($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@169) ($generated@@311 $generated@@666 $generated@@45)) (and (= ($generated@@452 ($generated@@172 $generated@@665 $generated@@666)) $generated@@666) ($generated@@92 ($generated@@172 $generated@@665 $generated@@666) $generated@@45)))
 :pattern ( ($generated@@311 $generated@@666 $generated@@45))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@82) (= ($generated@@311 ($generated@@452 $generated@@667) $generated@@668) ($generated@@92 $generated@@667 $generated@@668)))
 :pattern ( ($generated@@311 ($generated@@452 $generated@@667) $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ) (! (let (($generated@@670 ($generated@@106 (type $generated@@669))))
 (=> (= (type $generated@@669) ($generated@@103 $generated@@670 $generated@@2)) (<= 0 ($generated@@457 $generated@@669))))
 :pattern ( ($generated@@457 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ) (! (let (($generated@@672 ($generated@@173 (type $generated@@671))))
 (=> (= (type $generated@@671) ($generated@@168 $generated@@672)) (<= 0 ($generated@@170 $generated@@671))))
 :pattern ( ($generated@@170 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (= (type $generated@@673) ($generated@@168 $generated@@169)) (= (type $generated@@674) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@674)) (= ($generated@@101 ($generated@@167 $generated@@673) $generated@@318 $generated@@674) ($generated@@101 $generated@@673 ($generated@@366 $generated@@318) $generated@@674)))
 :pattern ( ($generated@@101 ($generated@@167 $generated@@673) $generated@@318 $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (= (type $generated@@675) ($generated@@168 $generated@@169)) (= (type $generated@@676) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@676)) (= ($generated@@101 ($generated@@184 $generated@@675) $generated@@318 $generated@@676) ($generated@@101 $generated@@675 ($generated@@366 $generated@@318) $generated@@676)))
 :pattern ( ($generated@@101 ($generated@@184 $generated@@675) $generated@@318 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@677) ($generated@@168 $generated@@169)) (= (type $generated@@678) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@678)) (= ($generated@@101 ($generated@@188 $generated@@677) $generated@@94 $generated@@678) ($generated@@101 $generated@@677 ($generated@@366 $generated@@94) $generated@@678)))
 :pattern ( ($generated@@101 ($generated@@188 $generated@@677) $generated@@94 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ) (! (= (type ($generated@@679 $generated@@680)) $generated@@82)
 :pattern ( ($generated@@679 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@82) (= (type $generated@@682) $generated@@82)) (= ($generated@@679 ($generated@@615 $generated@@681 $generated@@682)) $generated@@681))
 :pattern ( ($generated@@615 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ) (! (= (type ($generated@@683 $generated@@684)) $generated@@82)
 :pattern ( ($generated@@683 $generated@@684))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) $generated@@82) (= (type $generated@@686) $generated@@82)) (= ($generated@@683 ($generated@@615 $generated@@685 $generated@@686)) $generated@@686))
 :pattern ( ($generated@@615 $generated@@685 $generated@@686))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) $generated@@82) (= (type $generated@@688) $generated@@82)) (= ($generated@@90 ($generated@@615 $generated@@687 $generated@@688)) $generated@@58))
 :pattern ( ($generated@@615 $generated@@687 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ) (! (= (type ($generated@@689 $generated@@690)) $generated@@82)
 :pattern ( ($generated@@689 $generated@@690))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) $generated@@82) (= (type $generated@@692) $generated@@82)) (= ($generated@@689 ($generated@@623 $generated@@691 $generated@@692)) $generated@@691))
 :pattern ( ($generated@@623 $generated@@691 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ) (! (= (type ($generated@@693 $generated@@694)) $generated@@82)
 :pattern ( ($generated@@693 $generated@@694))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) $generated@@82) (= (type $generated@@696) $generated@@82)) (= ($generated@@693 ($generated@@623 $generated@@695 $generated@@696)) $generated@@696))
 :pattern ( ($generated@@623 $generated@@695 $generated@@696))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@697) $generated@@82) (= (type $generated@@698) $generated@@82)) (= ($generated@@90 ($generated@@623 $generated@@697 $generated@@698)) $generated@@59))
 :pattern ( ($generated@@623 $generated@@697 $generated@@698))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) $generated@@169) (= (type $generated@@700) $generated@@169)) (= ($generated@@193 ($generated@@310 $generated@@699 $generated@@700)) $generated@@61))
 :pattern ( ($generated@@310 $generated@@699 $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ) (! (= (type ($generated@@701 $generated@@702)) $generated@@82)
 :pattern ( ($generated@@701 $generated@@702))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) $generated@@82) (= (type $generated@@704) $generated@@82)) (= ($generated@@701 ($generated@@221 $generated@@703 $generated@@704)) $generated@@703))
 :pattern ( ($generated@@221 $generated@@703 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ) (! (= (type ($generated@@705 $generated@@706)) $generated@@82)
 :pattern ( ($generated@@705 $generated@@706))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@82) (= (type $generated@@708) $generated@@82)) (= ($generated@@705 ($generated@@221 $generated@@707 $generated@@708)) $generated@@708))
 :pattern ( ($generated@@221 $generated@@707 $generated@@708))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@709) $generated@@169) (= (type $generated@@710) $generated@@169)) (= ($generated@@228 ($generated@@310 $generated@@709 $generated@@710)) $generated@@709))
 :pattern ( ($generated@@310 $generated@@709 $generated@@710))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (= (type $generated@@711) $generated@@169) (= (type $generated@@712) $generated@@169)) (= ($generated@@229 ($generated@@310 $generated@@711 $generated@@712)) $generated@@712))
 :pattern ( ($generated@@310 $generated@@711 $generated@@712))
)))
(assert (forall (($generated@@713 Int) ($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@95) (= ($generated@@193 ($generated@@93 $generated@@713 $generated@@714)) $generated@@73))
 :pattern ( ($generated@@93 $generated@@713 $generated@@714))
)))
(assert (forall (($generated@@715 Int) ($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@95) (= ($generated@@341 ($generated@@93 $generated@@715 $generated@@716)) $generated@@715))
 :pattern ( ($generated@@93 $generated@@715 $generated@@716))
)))
(assert (forall (($generated@@717 Int) ($generated@@718 T@U) ) (!  (=> (= (type $generated@@718) $generated@@95) (= ($generated@@342 ($generated@@93 $generated@@717 $generated@@718)) $generated@@718))
 :pattern ( ($generated@@93 $generated@@717 $generated@@718))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (and (= (type $generated@@719) ($generated@@168 $generated@@169)) (= (type $generated@@720) $generated@@82)) (= (type $generated@@721) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@719 ($generated@@366 $generated@@720) $generated@@721) (forall (($generated@@722 Int) ) (!  (=> (and (<= 0 $generated@@722) (< $generated@@722 ($generated@@170 $generated@@719))) ($generated@@320 ($generated@@166 $generated@@719 $generated@@722) $generated@@720 $generated@@721))
 :pattern ( ($generated@@166 $generated@@719 $generated@@722))
))))
 :pattern ( ($generated@@101 $generated@@719 ($generated@@366 $generated@@720) $generated@@721))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 Int) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@723) $generated@@169) (= (type $generated@@725) $generated@@169)) (= ($generated@@192 ($generated@@349 $generated@@723) ($generated@@362 $generated@@724) ($generated@@349 $generated@@725)) ($generated@@349 ($generated@@192 $generated@@723 $generated@@724 $generated@@725))))
 :pattern ( ($generated@@192 ($generated@@349 $generated@@723) ($generated@@362 $generated@@724) ($generated@@349 $generated@@725)))
)))
(assert (forall (($generated@@727 Int) ) (! (= ($generated@@726 ($generated@@102 $generated@@727)) $generated@@727)
 :pattern ( ($generated@@102 $generated@@727))
)))
(assert (forall (($generated@@729 T@U) ) (! (= (type ($generated@@728 $generated@@729)) $generated@@82)
 :pattern ( ($generated@@728 $generated@@729))
)))
(assert (forall (($generated@@730 T@U) ) (!  (=> (= (type $generated@@730) $generated@@82) (= ($generated@@728 ($generated@@352 $generated@@730)) $generated@@730))
 :pattern ( ($generated@@352 $generated@@730))
)))
(assert (forall (($generated@@731 T@U) ) (!  (=> (= (type $generated@@731) $generated@@82) (= ($generated@@90 ($generated@@352 $generated@@731)) $generated@@54))
 :pattern ( ($generated@@352 $generated@@731))
)))
(assert (forall (($generated@@733 T@U) ) (! (= (type ($generated@@732 $generated@@733)) $generated@@82)
 :pattern ( ($generated@@732 $generated@@733))
)))
(assert (forall (($generated@@734 T@U) ) (!  (=> (= (type $generated@@734) $generated@@82) (= ($generated@@732 ($generated@@357 $generated@@734)) $generated@@734))
 :pattern ( ($generated@@357 $generated@@734))
)))
(assert (forall (($generated@@735 T@U) ) (!  (=> (= (type $generated@@735) $generated@@82) (= ($generated@@90 ($generated@@357 $generated@@735)) $generated@@55))
 :pattern ( ($generated@@357 $generated@@735))
)))
(assert (forall (($generated@@737 T@U) ) (! (= (type ($generated@@736 $generated@@737)) $generated@@82)
 :pattern ( ($generated@@736 $generated@@737))
)))
(assert (forall (($generated@@738 T@U) ) (!  (=> (= (type $generated@@738) $generated@@82) (= ($generated@@736 ($generated@@237 $generated@@738)) $generated@@738))
 :pattern ( ($generated@@237 $generated@@738))
)))
(assert (forall (($generated@@739 T@U) ) (!  (=> (= (type $generated@@739) $generated@@82) (= ($generated@@90 ($generated@@237 $generated@@739)) $generated@@56))
 :pattern ( ($generated@@237 $generated@@739))
)))
(assert (forall (($generated@@741 T@U) ) (! (= (type ($generated@@740 $generated@@741)) $generated@@82)
 :pattern ( ($generated@@740 $generated@@741))
)))
(assert (forall (($generated@@742 T@U) ) (!  (=> (= (type $generated@@742) $generated@@82) (= ($generated@@740 ($generated@@366 $generated@@742)) $generated@@742))
 :pattern ( ($generated@@366 $generated@@742))
)))
(assert (forall (($generated@@743 T@U) ) (!  (=> (= (type $generated@@743) $generated@@82) (= ($generated@@90 ($generated@@366 $generated@@743)) $generated@@57))
 :pattern ( ($generated@@366 $generated@@743))
)))
(assert (forall (($generated@@744 T@U) ) (!  (=> (= (type $generated@@744) $generated@@95) (= ($generated@@193 ($generated@@428 $generated@@744)) $generated@@66))
 :pattern ( ($generated@@428 $generated@@744))
)))
(assert (forall (($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@95) (= ($generated@@512 ($generated@@428 $generated@@745)) $generated@@745))
 :pattern ( ($generated@@428 $generated@@745))
)))
(assert (forall (($generated@@746 T@U) ) (!  (=> (= (type $generated@@746) ($generated@@168 $generated@@169)) (= ($generated@@193 ($generated@@167 $generated@@746)) $generated@@67))
 :pattern ( ($generated@@167 $generated@@746))
)))
(assert (forall (($generated@@747 T@U) ) (!  (=> (= (type $generated@@747) ($generated@@168 $generated@@169)) (= ($generated@@516 ($generated@@167 $generated@@747)) $generated@@747))
 :pattern ( ($generated@@167 $generated@@747))
)))
(assert (forall (($generated@@748 T@U) ) (!  (=> (= (type $generated@@748) ($generated@@168 $generated@@169)) (= ($generated@@193 ($generated@@184 $generated@@748)) $generated@@69))
 :pattern ( ($generated@@184 $generated@@748))
)))
(assert (forall (($generated@@749 T@U) ) (!  (=> (= (type $generated@@749) ($generated@@168 $generated@@169)) (= ($generated@@520 ($generated@@184 $generated@@749)) $generated@@749))
 :pattern ( ($generated@@184 $generated@@749))
)))
(assert (forall (($generated@@750 Int) ) (! (= ($generated@@193 ($generated@@436 $generated@@750)) $generated@@70)
 :pattern ( ($generated@@436 $generated@@750))
)))
(assert (forall (($generated@@751 Int) ) (! (= ($generated@@163 ($generated@@436 $generated@@751)) $generated@@751)
 :pattern ( ($generated@@436 $generated@@751))
)))
(assert (forall (($generated@@752 T@U) ) (!  (=> (= (type $generated@@752) ($generated@@168 $generated@@169)) (= ($generated@@193 ($generated@@188 $generated@@752)) $generated@@72))
 :pattern ( ($generated@@188 $generated@@752))
)))
(assert (forall (($generated@@753 T@U) ) (!  (=> (= (type $generated@@753) ($generated@@168 $generated@@169)) (= ($generated@@524 ($generated@@188 $generated@@753)) $generated@@753))
 :pattern ( ($generated@@188 $generated@@753))
)))
(assert (forall (($generated@@754 T@U) ) (! (let (($generated@@755 (type $generated@@754)))
(= ($generated@@172 $generated@@755 ($generated@@452 $generated@@754)) $generated@@754))
 :pattern ( ($generated@@452 $generated@@754))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (and (= (type $generated@@756) ($generated@@465 $generated@@169 $generated@@169)) (= (type $generated@@757) $generated@@82)) (= (type $generated@@758) $generated@@82)) (= ($generated@@92 $generated@@756 ($generated@@615 $generated@@757 $generated@@758)) (forall (($generated@@759 T@U) ) (!  (=> (and (= (type $generated@@759) $generated@@169) ($generated@@0 ($generated@@108 ($generated@@463 $generated@@756) $generated@@759))) (and ($generated@@311 ($generated@@108 ($generated@@582 $generated@@756) $generated@@759) $generated@@758) ($generated@@311 $generated@@759 $generated@@757)))
 :pattern ( ($generated@@108 ($generated@@582 $generated@@756) $generated@@759))
 :pattern ( ($generated@@108 ($generated@@463 $generated@@756) $generated@@759))
))))
 :pattern ( ($generated@@92 $generated@@756 ($generated@@615 $generated@@757 $generated@@758)))
)))
(assert (forall (($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (= (type $generated@@760) ($generated@@483 $generated@@169 $generated@@169)) (= (type $generated@@761) $generated@@82)) (= (type $generated@@762) $generated@@82)) (= ($generated@@92 $generated@@760 ($generated@@623 $generated@@761 $generated@@762)) (forall (($generated@@763 T@U) ) (!  (=> (and (= (type $generated@@763) $generated@@169) ($generated@@0 ($generated@@108 ($generated@@481 $generated@@760) $generated@@763))) (and ($generated@@311 ($generated@@108 ($generated@@590 $generated@@760) $generated@@763) $generated@@762) ($generated@@311 $generated@@763 $generated@@761)))
 :pattern ( ($generated@@108 ($generated@@590 $generated@@760) $generated@@763))
 :pattern ( ($generated@@108 ($generated@@481 $generated@@760) $generated@@763))
))))
 :pattern ( ($generated@@92 $generated@@760 ($generated@@623 $generated@@761 $generated@@762)))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (= (type $generated@@765) $generated@@169) (= (type $generated@@766) $generated@@169)) (< ($generated@@764 $generated@@765) ($generated@@171 ($generated@@310 $generated@@765 $generated@@766))))
 :pattern ( ($generated@@310 $generated@@765 $generated@@766))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (= (type $generated@@767) $generated@@169) (= (type $generated@@768) $generated@@169)) (< ($generated@@764 $generated@@768) ($generated@@171 ($generated@@310 $generated@@767 $generated@@768))))
 :pattern ( ($generated@@310 $generated@@767 $generated@@768))
)))
(assert (forall (($generated@@769 Int) ($generated@@770 T@U) ) (!  (=> (= (type $generated@@770) $generated@@95) (< ($generated@@171 $generated@@770) ($generated@@171 ($generated@@93 $generated@@769 $generated@@770))))
 :pattern ( ($generated@@93 $generated@@769 $generated@@770))
)))
(assert  (=> (<= 2 $generated@@346) (forall (($generated@@771 T@U) ($generated@@772 T@U) ($generated@@773 T@U) ) (!  (=> (and (and (and (= (type $generated@@771) $generated@@447) (= (type $generated@@772) $generated@@95)) (= (type $generated@@773) $generated@@95)) (or ($generated@@565 ($generated@@349 $generated@@772) ($generated@@349 $generated@@773)) (and (not (= 2 $generated@@346)) (and ($generated@@92 $generated@@772 $generated@@94) ($generated@@92 $generated@@773 $generated@@318))))) (and (=> (not ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@162 ($generated@@349 $generated@@772)))))) (and (=> ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@401 ($generated@@349 $generated@@772))))) (let (($generated@@774 ($generated@@349 ($generated@@524 ($generated@@349 $generated@@772)))))
 (=> ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@395 ($generated@@349 $generated@@773))))) (=> (= ($generated@@170 $generated@@774) ($generated@@170 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@773))))) (forall (($generated@@775 Int) ) (!  (=> (<= ($generated@@362 0) $generated@@775) (=> (< $generated@@775 ($generated@@170 $generated@@774)) ($generated@@565 ($generated@@172 $generated@@95 ($generated@@166 $generated@@774 $generated@@775)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@773))) $generated@@775)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@773) $generated@@775)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@774 $generated@@775)))
)))))) (=> (not ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@401 ($generated@@349 $generated@@772)))))) (let (($generated@@776 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@772)))))
(let (($generated@@777 ($generated@@362 ($generated@@341 ($generated@@349 $generated@@772)))))
 (=> ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@398 ($generated@@349 $generated@@773))))) (=> (< $generated@@777 ($generated@@170 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@773))))) ($generated@@565 $generated@@776 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@773))) $generated@@777)))))))))) (= ($generated@@445 ($generated@@446 $generated@@771) ($generated@@349 $generated@@772) ($generated@@349 $generated@@773)) (ite ($generated@@162 ($generated@@349 $generated@@772)) ($generated@@374 ($generated@@349 $generated@@773)) (ite ($generated@@401 ($generated@@349 $generated@@772)) (let (($generated@@778 ($generated@@349 ($generated@@524 ($generated@@349 $generated@@772)))))
 (and (and ($generated@@395 ($generated@@349 $generated@@773)) (= ($generated@@170 $generated@@778) ($generated@@170 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@773)))))) (forall (($generated@@779 Int) ) (!  (=> true (=> (and (<= ($generated@@362 0) $generated@@779) (< $generated@@779 ($generated@@170 $generated@@778))) ($generated@@445 ($generated@@446 $generated@@771) ($generated@@172 $generated@@95 ($generated@@166 $generated@@778 $generated@@779)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@773))) $generated@@779)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@773) $generated@@779)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@778 $generated@@779)))
)))) (let (($generated@@780 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@772)))))
(let (($generated@@781 ($generated@@362 ($generated@@341 ($generated@@349 $generated@@772)))))
 (and (and ($generated@@398 ($generated@@349 $generated@@773)) (< $generated@@781 ($generated@@170 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@773)))))) ($generated@@445 ($generated@@446 $generated@@771) $generated@@780 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@773))) $generated@@781)))))))))))
 :weight 3
 :pattern ( ($generated@@445 ($generated@@446 $generated@@771) ($generated@@349 $generated@@772) ($generated@@349 $generated@@773)))
))))
(assert (forall (($generated@@782 T@U) ($generated@@783 T@U) ($generated@@784 T@U) ) (!  (=> (and (and (and (= (type $generated@@782) $generated@@169) (= (type $generated@@783) $generated@@82)) (= (type $generated@@784) $generated@@82)) ($generated@@311 $generated@@782 ($generated@@615 $generated@@783 $generated@@784))) (and (= ($generated@@452 ($generated@@172 ($generated@@465 $generated@@169 $generated@@169) $generated@@782)) $generated@@782) ($generated@@92 ($generated@@172 ($generated@@465 $generated@@169 $generated@@169) $generated@@782) ($generated@@615 $generated@@783 $generated@@784))))
 :pattern ( ($generated@@311 $generated@@782 ($generated@@615 $generated@@783 $generated@@784)))
)))
(assert (forall (($generated@@785 T@U) ($generated@@786 T@U) ($generated@@787 T@U) ) (!  (=> (and (and (and (= (type $generated@@785) $generated@@169) (= (type $generated@@786) $generated@@82)) (= (type $generated@@787) $generated@@82)) ($generated@@311 $generated@@785 ($generated@@623 $generated@@786 $generated@@787))) (and (= ($generated@@452 ($generated@@172 ($generated@@483 $generated@@169 $generated@@169) $generated@@785)) $generated@@785) ($generated@@92 ($generated@@172 ($generated@@483 $generated@@169 $generated@@169) $generated@@785) ($generated@@623 $generated@@786 $generated@@787))))
 :pattern ( ($generated@@311 $generated@@785 ($generated@@623 $generated@@786 $generated@@787)))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ($generated@@790 T@U) ) (!  (=> (and (and (and (= (type $generated@@788) $generated@@82) (= (type $generated@@789) $generated@@82)) (= (type $generated@@790) $generated@@169)) ($generated@@311 $generated@@790 ($generated@@221 $generated@@788 $generated@@789))) (and (= ($generated@@452 ($generated@@172 $generated@@95 $generated@@790)) $generated@@790) ($generated@@92 ($generated@@172 $generated@@95 $generated@@790) ($generated@@221 $generated@@788 $generated@@789))))
 :pattern ( ($generated@@311 $generated@@790 ($generated@@221 $generated@@788 $generated@@789)))
)))
(assert (= (type $generated@@791) $generated@@447))
(assert  (=> (<= 3 $generated@@346) (forall (($generated@@792 T@U) ) (!  (=> (and (= (type $generated@@792) $generated@@95) (or ($generated@@607 $generated@@792) (and (not (= 3 $generated@@346)) (and ($generated@@92 $generated@@792 $generated@@94) ($generated@@445 $generated@@791 $generated@@792 ($generated@@349 $generated@@348)))))) ($generated@@311 ($generated@@609 $generated@@792) $generated@@321))
 :pattern ( ($generated@@609 $generated@@792))
))))
(assert  (=> (<= 3 $generated@@346) (forall (($generated@@793 T@U) ) (!  (=> (and (= (type $generated@@793) $generated@@95) (or ($generated@@608 $generated@@793) (and (not (= 3 $generated@@346)) (and ($generated@@92 $generated@@793 $generated@@94) ($generated@@445 $generated@@791 $generated@@793 ($generated@@349 $generated@@560)))))) ($generated@@311 ($generated@@610 $generated@@793) $generated@@322))
 :pattern ( ($generated@@610 $generated@@793))
))))
(assert  (=> (<= 2 $generated@@346) (forall (($generated@@794 T@U) ($generated@@795 T@U) ($generated@@796 T@U) ) (!  (=> (and (and (and (= (type $generated@@794) $generated@@447) (= (type $generated@@795) $generated@@95)) (= (type $generated@@796) $generated@@95)) (or ($generated@@565 $generated@@795 $generated@@796) (and (not (= 2 $generated@@346)) (and ($generated@@92 $generated@@795 $generated@@94) ($generated@@92 $generated@@796 $generated@@318))))) (and (=> (not ($generated@@162 $generated@@795)) (and (=> ($generated@@401 $generated@@795) (let (($generated@@797 ($generated@@524 $generated@@795)))
 (=> ($generated@@395 $generated@@796) (=> (= ($generated@@170 $generated@@797) ($generated@@170 ($generated@@516 $generated@@796))) (forall (($generated@@798 Int) ) (!  (=> (<= ($generated@@362 0) $generated@@798) (=> (< $generated@@798 ($generated@@170 $generated@@797)) ($generated@@565 ($generated@@172 $generated@@95 ($generated@@166 $generated@@797 $generated@@798)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@796) $generated@@798)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@796) $generated@@798)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@797 $generated@@798)))
)))))) (=> (not ($generated@@401 $generated@@795)) (let (($generated@@799 ($generated@@342 $generated@@795)))
(let (($generated@@800 ($generated@@341 $generated@@795)))
 (=> ($generated@@398 $generated@@796) (=> (< $generated@@800 ($generated@@170 ($generated@@520 $generated@@796))) ($generated@@565 $generated@@799 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@520 $generated@@796) $generated@@800)))))))))) (= ($generated@@445 ($generated@@446 $generated@@794) $generated@@795 $generated@@796) (ite ($generated@@162 $generated@@795) ($generated@@374 $generated@@796) (ite ($generated@@401 $generated@@795) (let (($generated@@801 ($generated@@524 $generated@@795)))
 (and (and ($generated@@395 $generated@@796) (= ($generated@@170 $generated@@801) ($generated@@170 ($generated@@516 $generated@@796)))) (forall (($generated@@802 Int) ) (!  (=> true (=> (and (<= ($generated@@362 0) $generated@@802) (< $generated@@802 ($generated@@170 $generated@@801))) ($generated@@445 $generated@@794 ($generated@@172 $generated@@95 ($generated@@166 $generated@@801 $generated@@802)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@796) $generated@@802)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@796) $generated@@802)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@801 $generated@@802)))
)))) (let (($generated@@803 ($generated@@342 $generated@@795)))
(let (($generated@@804 ($generated@@341 $generated@@795)))
 (and (and ($generated@@398 $generated@@796) (< $generated@@804 ($generated@@170 ($generated@@520 $generated@@796)))) ($generated@@445 $generated@@794 $generated@@803 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@520 $generated@@796) $generated@@804)))))))))))
 :pattern ( ($generated@@445 ($generated@@446 $generated@@794) $generated@@795 $generated@@796))
))))
(assert (forall (($generated@@805 T@U) ) (!  (=> (= (type $generated@@805) $generated@@95) (< ($generated@@171 $generated@@805) ($generated@@171 ($generated@@428 $generated@@805))))
 :pattern ( ($generated@@428 $generated@@805))
)))
(assert (forall (($generated@@807 T@U) ) (!  (=> (= (type $generated@@807) ($generated@@168 $generated@@169)) (< ($generated@@806 $generated@@807) ($generated@@171 ($generated@@167 $generated@@807))))
 :pattern ( ($generated@@167 $generated@@807))
)))
(assert (forall (($generated@@808 T@U) ) (!  (=> (= (type $generated@@808) ($generated@@168 $generated@@169)) (< ($generated@@806 $generated@@808) ($generated@@171 ($generated@@184 $generated@@808))))
 :pattern ( ($generated@@184 $generated@@808))
)))
(assert (forall (($generated@@809 T@U) ) (!  (=> (= (type $generated@@809) ($generated@@168 $generated@@169)) (< ($generated@@806 $generated@@809) ($generated@@171 ($generated@@188 $generated@@809))))
 :pattern ( ($generated@@188 $generated@@809))
)))
(assert (forall (($generated@@810 T@U) ) (! (let (($generated@@811 (type $generated@@810)))
 (not ($generated@@0 ($generated@@108 ($generated@@639 $generated@@811) $generated@@810))))
 :pattern ( (let (($generated@@811 (type $generated@@810)))
($generated@@108 ($generated@@639 $generated@@811) $generated@@810)))
)))
(assert (forall (($generated@@813 T@U) ) (! (= (type ($generated@@812 $generated@@813)) $generated@@87)
 :pattern ( ($generated@@812 $generated@@813))
)))
(assert (forall (($generated@@814 T@U) ($generated@@815 T@U) ) (!  (=> (and (= (type $generated@@814) $generated@@82) (= (type $generated@@815) $generated@@82)) (and (= ($generated@@90 ($generated@@221 $generated@@814 $generated@@815)) $generated@@62) (= ($generated@@812 ($generated@@221 $generated@@814 $generated@@815)) $generated@@77)))
 :pattern ( ($generated@@221 $generated@@814 $generated@@815))
)))
(assert  (and (forall (($generated@@818 T@U) ) (! (let (($generated@@819 ($generated@@173 (type $generated@@818))))
(= (type ($generated@@816 $generated@@818)) ($generated@@168 $generated@@819)))
 :pattern ( ($generated@@816 $generated@@818))
)) (forall (($generated@@820 T@U) ) (! (let (($generated@@821 ($generated@@173 (type $generated@@820))))
(= (type ($generated@@817 $generated@@820)) $generated@@821))
 :pattern ( ($generated@@817 $generated@@820))
))))
(assert (forall (($generated@@822 T@U) ($generated@@823 T@U) ) (! (let (($generated@@824 (type $generated@@823)))
 (=> (= (type $generated@@822) ($generated@@168 $generated@@824)) (and (= ($generated@@816 ($generated@@365 $generated@@822 $generated@@823)) $generated@@822) (= ($generated@@817 ($generated@@365 $generated@@822 $generated@@823)) $generated@@823))))
 :pattern ( ($generated@@365 $generated@@822 $generated@@823))
)))
(assert (forall (($generated@@825 T@U) ($generated@@826 T@U) ) (!  (=> (and (and (= (type $generated@@825) $generated@@95) (= (type $generated@@826) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@826) (and ($generated@@404 $generated@@825) ($generated@@101 $generated@@825 $generated@@319 $generated@@826)))) ($generated@@320 ($generated@@201 $generated@@825) $generated@@321 $generated@@826))
 :pattern ( ($generated@@320 ($generated@@201 $generated@@825) $generated@@321 $generated@@826))
)))
(assert (forall (($generated@@827 T@U) ($generated@@828 T@U) ) (!  (=> (and (and (= (type $generated@@827) $generated@@95) (= (type $generated@@828) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@828) (and ($generated@@404 $generated@@827) ($generated@@101 $generated@@827 $generated@@319 $generated@@828)))) ($generated@@320 ($generated@@210 $generated@@827) $generated@@322 $generated@@828))
 :pattern ( ($generated@@320 ($generated@@210 $generated@@827) $generated@@322 $generated@@828))
)))
(assert (forall (($generated@@829 T@U) ) (!  (=> (and (= (type $generated@@829) $generated@@95) ($generated@@92 $generated@@829 $generated@@94)) (or (or ($generated@@162 $generated@@829) ($generated@@401 $generated@@829)) ($generated@@340 $generated@@829)))
 :pattern ( ($generated@@340 $generated@@829) ($generated@@92 $generated@@829 $generated@@94))
 :pattern ( ($generated@@401 $generated@@829) ($generated@@92 $generated@@829 $generated@@94))
 :pattern ( ($generated@@162 $generated@@829) ($generated@@92 $generated@@829 $generated@@94))
)))
(assert (forall (($generated@@830 T@U) ) (!  (=> (= (type $generated@@830) $generated@@95) (= ($generated@@764 ($generated@@452 $generated@@830)) ($generated@@171 $generated@@830)))
 :pattern ( ($generated@@764 ($generated@@452 $generated@@830)))
)))
(assert (forall (($generated@@831 T@U) ) (!  (=> (and (= (type $generated@@831) $generated@@169) ($generated@@311 $generated@@831 ($generated@@102 0))) (and (= ($generated@@452 ($generated@@172 $generated@@2 $generated@@831)) $generated@@831) ($generated@@92 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@831) ($generated@@102 0))))
 :pattern ( ($generated@@311 $generated@@831 ($generated@@102 0)))
)))
(assert (forall (($generated@@832 T@U) ($generated@@833 T@U) ) (!  (=> (and (and (= (type $generated@@832) $generated@@169) (= (type $generated@@833) $generated@@82)) ($generated@@311 $generated@@832 ($generated@@352 $generated@@833))) (and (= ($generated@@452 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@832)) $generated@@832) ($generated@@92 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@832) ($generated@@352 $generated@@833))))
 :pattern ( ($generated@@311 $generated@@832 ($generated@@352 $generated@@833)))
)))
(assert (forall (($generated@@834 T@U) ($generated@@835 T@U) ) (!  (=> (and (and (= (type $generated@@834) $generated@@169) (= (type $generated@@835) $generated@@82)) ($generated@@311 $generated@@834 ($generated@@357 $generated@@835))) (and (= ($generated@@452 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@834)) $generated@@834) ($generated@@92 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@834) ($generated@@357 $generated@@835))))
 :pattern ( ($generated@@311 $generated@@834 ($generated@@357 $generated@@835)))
)))
(assert (forall (($generated@@836 T@U) ($generated@@837 T@U) ) (!  (=> (and (and (= (type $generated@@836) $generated@@169) (= (type $generated@@837) $generated@@82)) ($generated@@311 $generated@@836 ($generated@@237 $generated@@837))) (and (= ($generated@@452 ($generated@@172 ($generated@@103 $generated@@169 $generated@@2) $generated@@836)) $generated@@836) ($generated@@92 ($generated@@172 ($generated@@103 $generated@@169 $generated@@2) $generated@@836) ($generated@@237 $generated@@837))))
 :pattern ( ($generated@@311 $generated@@836 ($generated@@237 $generated@@837)))
)))
(assert (forall (($generated@@838 T@U) ($generated@@839 T@U) ) (!  (=> (and (and (= (type $generated@@838) $generated@@169) (= (type $generated@@839) $generated@@82)) ($generated@@311 $generated@@838 ($generated@@366 $generated@@839))) (and (= ($generated@@452 ($generated@@172 ($generated@@168 $generated@@169) $generated@@838)) $generated@@838) ($generated@@92 ($generated@@172 ($generated@@168 $generated@@169) $generated@@838) ($generated@@366 $generated@@839))))
 :pattern ( ($generated@@311 $generated@@838 ($generated@@366 $generated@@839)))
)))
(assert (= ($generated@@90 $generated@@96) $generated@@63))
(assert (= ($generated@@812 $generated@@96) $generated@@78))
(assert (= ($generated@@90 $generated@@318) $generated@@65))
(assert (= ($generated@@812 $generated@@318) $generated@@79))
(assert (= ($generated@@90 $generated@@94) $generated@@71))
(assert (= ($generated@@812 $generated@@94) $generated@@80))
(assert (= ($generated@@90 $generated@@319) $generated@@75))
(assert (= ($generated@@812 $generated@@319) $generated@@81))
(assert (forall (($generated@@840 T@U) ($generated@@841 T@U) ($generated@@842 T@U) ) (!  (=> (and (and (= (type $generated@@840) ($generated@@103 $generated@@169 $generated@@2)) (= (type $generated@@841) $generated@@82)) (= (type $generated@@842) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@840 ($generated@@237 $generated@@841) $generated@@842) (forall (($generated@@843 T@U) ) (!  (=> (and (= (type $generated@@843) $generated@@169) (< 0 ($generated ($generated@@108 $generated@@840 $generated@@843)))) ($generated@@320 $generated@@843 $generated@@841 $generated@@842))
 :pattern ( ($generated@@108 $generated@@840 $generated@@843))
))))
 :pattern ( ($generated@@101 $generated@@840 ($generated@@237 $generated@@841) $generated@@842))
)))
(assert (= $generated@@234 ($generated@@349 $generated@@234)))
(assert (= $generated@@235 ($generated@@349 $generated@@235)))
(assert (= $generated@@236 ($generated@@349 $generated@@236)))
(assert (forall (($generated@@844 T@U) ) (!  (=> (and (= (type $generated@@844) $generated@@95) ($generated@@92 $generated@@844 $generated@@318)) (or (or (or (or ($generated@@374 $generated@@844) ($generated@@393 $generated@@844)) ($generated@@395 $generated@@844)) ($generated@@377 $generated@@844)) ($generated@@398 $generated@@844)))
 :pattern ( ($generated@@398 $generated@@844) ($generated@@92 $generated@@844 $generated@@318))
 :pattern ( ($generated@@377 $generated@@844) ($generated@@92 $generated@@844 $generated@@318))
 :pattern ( ($generated@@395 $generated@@844) ($generated@@92 $generated@@844 $generated@@318))
 :pattern ( ($generated@@393 $generated@@844) ($generated@@92 $generated@@844 $generated@@318))
 :pattern ( ($generated@@374 $generated@@844) ($generated@@92 $generated@@844 $generated@@318))
)))
(assert (forall (($generated@@845 T@U) ($generated@@846 T@U) ($generated@@847 T@U) ) (!  (=> (and (and (and (= (type $generated@@845) $generated@@95) (= (type $generated@@846) $generated@@82)) (= (type $generated@@847) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@847) (and ($generated@@220 $generated@@845) (exists (($generated@@848 T@U) ) (!  (and (= (type $generated@@848) $generated@@82) ($generated@@101 $generated@@845 ($generated@@221 $generated@@846 $generated@@848) $generated@@847))
 :pattern ( ($generated@@101 $generated@@845 ($generated@@221 $generated@@846 $generated@@848) $generated@@847))
))))) ($generated@@320 ($generated@@228 $generated@@845) $generated@@846 $generated@@847))
 :pattern ( ($generated@@320 ($generated@@228 $generated@@845) $generated@@846 $generated@@847))
)))
(assert (forall (($generated@@849 T@U) ($generated@@850 T@U) ($generated@@851 T@U) ) (!  (=> (and (and (and (= (type $generated@@849) $generated@@95) (= (type $generated@@850) $generated@@82)) (= (type $generated@@851) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@851) (and ($generated@@220 $generated@@849) (exists (($generated@@852 T@U) ) (!  (and (= (type $generated@@852) $generated@@82) ($generated@@101 $generated@@849 ($generated@@221 $generated@@852 $generated@@850) $generated@@851))
 :pattern ( ($generated@@101 $generated@@849 ($generated@@221 $generated@@852 $generated@@850) $generated@@851))
))))) ($generated@@320 ($generated@@229 $generated@@849) $generated@@850 $generated@@851))
 :pattern ( ($generated@@320 ($generated@@229 $generated@@849) $generated@@850 $generated@@851))
)))
(assert (forall (($generated@@853 T@U) ($generated@@854 T@U) ) (!  (=> (and (and (= (type $generated@@853) $generated@@95) (= (type $generated@@854) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@854) (and ($generated@@393 $generated@@853) ($generated@@101 $generated@@853 $generated@@318 $generated@@854)))) ($generated@@101 ($generated@@512 $generated@@853) $generated@@318 $generated@@854))
 :pattern ( ($generated@@101 ($generated@@512 $generated@@853) $generated@@318 $generated@@854))
)))
(assert (forall (($generated@@855 T@U) ($generated@@856 T@U) ) (!  (=> (and (and (= (type $generated@@855) $generated@@95) (= (type $generated@@856) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@856) (and ($generated@@162 $generated@@855) ($generated@@101 $generated@@855 $generated@@94 $generated@@856)))) ($generated@@101 ($generated@@8 ($generated@@163 $generated@@855)) $generated@@96 $generated@@856))
 :pattern ( ($generated@@101 ($generated@@8 ($generated@@163 $generated@@855)) $generated@@96 $generated@@856))
)))
(assert (forall (($generated@@857 T@U) ($generated@@858 T@U) ) (!  (=> (and (and (= (type $generated@@857) $generated@@95) (= (type $generated@@858) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@858) (and ($generated@@340 $generated@@857) ($generated@@101 $generated@@857 $generated@@94 $generated@@858)))) ($generated@@101 ($generated@@8 ($generated@@341 $generated@@857)) $generated@@96 $generated@@858))
 :pattern ( ($generated@@101 ($generated@@8 ($generated@@341 $generated@@857)) $generated@@96 $generated@@858))
)))
(assert (forall (($generated@@859 T@U) ($generated@@860 T@U) ) (!  (=> (and (and (= (type $generated@@859) $generated@@95) (= (type $generated@@860) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@860) (and ($generated@@340 $generated@@859) ($generated@@101 $generated@@859 $generated@@94 $generated@@860)))) ($generated@@101 ($generated@@342 $generated@@859) $generated@@94 $generated@@860))
 :pattern ( ($generated@@101 ($generated@@342 $generated@@859) $generated@@94 $generated@@860))
)))
(assert (forall (($generated@@861 T@U) ($generated@@862 T@U) ) (!  (=> (and (and (= (type $generated@@861) $generated@@95) (= (type $generated@@862) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@862) (and ($generated@@404 $generated@@861) ($generated@@101 $generated@@861 $generated@@319 $generated@@862)))) ($generated@@101 ($generated@@8 ($generated@@206 $generated@@861)) $generated@@96 $generated@@862))
 :pattern ( ($generated@@101 ($generated@@8 ($generated@@206 $generated@@861)) $generated@@96 $generated@@862))
)))
(assert (forall (($generated@@863 T@U) ) (!  (=> (= (type $generated@@863) $generated@@2) (= ($generated@@92 $generated@@863 $generated@@96)  (and (<= ($generated@@362 0) ($generated $generated@@863)) (< ($generated $generated@@863) 18446744073709551616))))
 :pattern ( ($generated@@92 $generated@@863 $generated@@96))
)))
(assert (forall (($generated@@864 T@U) ($generated@@865 T@U) ) (!  (=> (and (= (type $generated@@864) $generated@@169) (= (type $generated@@865) $generated@@169)) (= ($generated@@310 ($generated@@349 $generated@@864) ($generated@@349 $generated@@865)) ($generated@@349 ($generated@@310 $generated@@864 $generated@@865))))
 :pattern ( ($generated@@310 ($generated@@349 $generated@@864) ($generated@@349 $generated@@865)))
)))
(assert (forall (($generated@@866 Int) ($generated@@867 T@U) ) (!  (=> (= (type $generated@@867) $generated@@95) (= ($generated@@93 ($generated@@362 $generated@@866) ($generated@@349 $generated@@867)) ($generated@@349 ($generated@@93 $generated@@866 $generated@@867))))
 :pattern ( ($generated@@93 ($generated@@362 $generated@@866) ($generated@@349 $generated@@867)))
)))
(assert (forall (($generated@@868 Int) ) (! (= ($generated@@452 ($generated@@8 ($generated@@362 $generated@@868))) ($generated@@349 ($generated@@452 ($generated@@8 $generated@@868))))
 :pattern ( ($generated@@452 ($generated@@8 ($generated@@362 $generated@@868))))
)))
(assert (forall (($generated@@869 T@U) ) (!  (=> (= (type $generated@@869) $generated@@95) (= ($generated@@428 ($generated@@349 $generated@@869)) ($generated@@349 ($generated@@428 $generated@@869))))
 :pattern ( ($generated@@428 ($generated@@349 $generated@@869)))
)))
(assert (forall (($generated@@870 T@U) ) (!  (=> (= (type $generated@@870) ($generated@@168 $generated@@169)) (= ($generated@@167 ($generated@@349 $generated@@870)) ($generated@@349 ($generated@@167 $generated@@870))))
 :pattern ( ($generated@@167 ($generated@@349 $generated@@870)))
)))
(assert (forall (($generated@@871 T@U) ) (!  (=> (= (type $generated@@871) ($generated@@168 $generated@@169)) (= ($generated@@184 ($generated@@349 $generated@@871)) ($generated@@349 ($generated@@184 $generated@@871))))
 :pattern ( ($generated@@184 ($generated@@349 $generated@@871)))
)))
(assert (forall (($generated@@872 Int) ) (! (= ($generated@@436 ($generated@@362 $generated@@872)) ($generated@@349 ($generated@@436 $generated@@872)))
 :pattern ( ($generated@@436 ($generated@@362 $generated@@872)))
)))
(assert (forall (($generated@@873 T@U) ) (!  (=> (= (type $generated@@873) ($generated@@168 $generated@@169)) (= ($generated@@188 ($generated@@349 $generated@@873)) ($generated@@349 ($generated@@188 $generated@@873))))
 :pattern ( ($generated@@188 ($generated@@349 $generated@@873)))
)))
(assert (forall (($generated@@874 T@U) ) (! (= ($generated@@452 ($generated@@349 $generated@@874)) ($generated@@349 ($generated@@452 $generated@@874)))
 :pattern ( ($generated@@452 ($generated@@349 $generated@@874)))
)))
(assert (forall (($generated@@875 T@U) ) (! (let (($generated@@876 ($generated@@173 (type $generated@@875))))
 (=> (and (= (type $generated@@875) ($generated@@168 $generated@@876)) (= ($generated@@170 $generated@@875) 0)) (= $generated@@875 ($generated@@422 $generated@@876))))
 :pattern ( ($generated@@170 $generated@@875))
)))
(assert (forall (($generated@@877 T@U) ($generated@@878 T@U) ($generated@@879 T@U) ) (! (let (($generated@@880 (type $generated@@878)))
 (=> (and (and (= (type $generated@@877) ($generated@@103 $generated@@880 $generated@@2)) (= (type $generated@@879) $generated@@2)) (<= 0 ($generated $generated@@879))) (= ($generated@@457 ($generated@@109 $generated@@877 $generated@@878 $generated@@879)) (+ (- ($generated@@457 $generated@@877) ($generated ($generated@@108 $generated@@877 $generated@@878))) ($generated $generated@@879)))))
 :pattern ( ($generated@@457 ($generated@@109 $generated@@877 $generated@@878 $generated@@879)))
)))
(assert (forall (($generated@@881 T@U) ($generated@@882 T@U) ) (!  (=> (and (and (= (type $generated@@881) $generated@@95) (= (type $generated@@882) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@882) (and ($generated@@395 $generated@@881) ($generated@@101 $generated@@881 $generated@@318 $generated@@882)))) ($generated@@101 ($generated@@516 $generated@@881) ($generated@@366 $generated@@318) $generated@@882))
 :pattern ( ($generated@@101 ($generated@@516 $generated@@881) ($generated@@366 $generated@@318) $generated@@882))
)))
(assert (forall (($generated@@883 T@U) ($generated@@884 T@U) ) (!  (=> (and (and (= (type $generated@@883) $generated@@95) (= (type $generated@@884) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@884) (and ($generated@@398 $generated@@883) ($generated@@101 $generated@@883 $generated@@318 $generated@@884)))) ($generated@@101 ($generated@@520 $generated@@883) ($generated@@366 $generated@@318) $generated@@884))
 :pattern ( ($generated@@101 ($generated@@520 $generated@@883) ($generated@@366 $generated@@318) $generated@@884))
)))
(assert (forall (($generated@@885 T@U) ($generated@@886 T@U) ) (!  (=> (and (and (= (type $generated@@885) $generated@@95) (= (type $generated@@886) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@886) (and ($generated@@401 $generated@@885) ($generated@@101 $generated@@885 $generated@@94 $generated@@886)))) ($generated@@101 ($generated@@524 $generated@@885) ($generated@@366 $generated@@94) $generated@@886))
 :pattern ( ($generated@@101 ($generated@@524 $generated@@885) ($generated@@366 $generated@@94) $generated@@886))
)))
(assert (forall (($generated@@887 T@U) ($generated@@888 T@U) ) (!  (=> (and (= (type $generated@@887) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@888) $generated@@2)) ($generated@@101 $generated@@888 $generated@@46 $generated@@887))
 :pattern ( ($generated@@101 $generated@@888 $generated@@46 $generated@@887))
)))
(assert (forall (($generated@@889 T@U) ($generated@@890 T@U) ) (!  (=> (and (= (type $generated@@889) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@890) $generated@@3)) ($generated@@101 $generated@@890 $generated@@47 $generated@@889))
 :pattern ( ($generated@@101 $generated@@890 $generated@@47 $generated@@889))
)))
(assert (forall (($generated@@891 T@U) ($generated@@892 T@U) ) (!  (=> (and (= (type $generated@@891) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@892) $generated@@4)) ($generated@@101 $generated@@892 $generated@@44 $generated@@891))
 :pattern ( ($generated@@101 $generated@@892 $generated@@44 $generated@@891))
)))
(assert (forall (($generated@@893 T@U) ($generated@@894 T@U) ) (!  (=> (and (= (type $generated@@893) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@894) $generated@@665)) ($generated@@101 $generated@@894 $generated@@45 $generated@@893))
 :pattern ( ($generated@@101 $generated@@894 $generated@@45 $generated@@893))
)))
(assert (forall (($generated@@895 T@U) ($generated@@896 T@U) ) (!  (=> (and (= (type $generated@@895) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@896) $generated@@169)) ($generated@@101 $generated@@896 $generated@@48 $generated@@895))
 :pattern ( ($generated@@101 $generated@@896 $generated@@48 $generated@@895))
)))
(assert (forall (($generated@@897 T@U) ($generated@@898 T@U) ) (!  (=> (and (= (type $generated@@897) ($generated@@168 $generated@@169)) (= (type $generated@@898) $generated@@82)) (= ($generated@@92 $generated@@897 ($generated@@366 $generated@@898)) (forall (($generated@@899 Int) ) (!  (=> (and (<= 0 $generated@@899) (< $generated@@899 ($generated@@170 $generated@@897))) ($generated@@311 ($generated@@166 $generated@@897 $generated@@899) $generated@@898))
 :pattern ( ($generated@@166 $generated@@897 $generated@@899))
))))
 :pattern ( ($generated@@92 $generated@@897 ($generated@@366 $generated@@898)))
)))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@559 (not (= 1 $generated@@346))) (= $generated@@560 ($generated@@349 ($generated@@184 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@234))))))))))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@559 (not (= 1 $generated@@346))) (= $generated@@560 ($generated@@349 ($generated@@184 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@234))))))))))
(assert  (and (forall (($generated@@902 T@U) ) (! (= (type ($generated@@900 $generated@@902)) $generated@@447)
 :pattern ( ($generated@@900 $generated@@902))
)) (= (type $generated@@901) $generated@@447)))
(assert (forall (($generated@@903 T@U) ($generated@@904 T@U) ($generated@@905 T@U) ) (!  (=> (and (and (= (type $generated@@903) $generated@@447) (= (type $generated@@904) $generated@@95)) (= (type $generated@@905) $generated@@95)) (= ($generated@@445 $generated@@903 $generated@@904 $generated@@905) ($generated@@445 $generated@@901 $generated@@904 $generated@@905)))
 :pattern ( ($generated@@445 ($generated@@900 $generated@@903) $generated@@904 $generated@@905))
)))
(assert (forall (($generated@@906 T@U) ($generated@@907 Int) ) (!  (=> (= (type $generated@@906) ($generated@@168 $generated@@169)) (=> (and (<= 0 $generated@@907) (< $generated@@907 ($generated@@170 $generated@@906))) (< ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@906 $generated@@907))) ($generated@@806 $generated@@906))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@906 $generated@@907))))
)))
(assert (forall (($generated@@908 T@U) ($generated@@909 T@U) ($generated@@910 T@U) ) (!  (=> (and (and (and (= (type $generated@@908) ($generated@@465 $generated@@169 $generated@@169)) (= (type $generated@@909) $generated@@82)) (= (type $generated@@910) $generated@@82)) ($generated@@92 $generated@@908 ($generated@@615 $generated@@909 $generated@@910))) (and (and ($generated@@92 ($generated@@463 $generated@@908) ($generated@@352 $generated@@909)) ($generated@@92 ($generated@@538 $generated@@908) ($generated@@352 $generated@@910))) ($generated@@92 ($generated@@581 $generated@@908) ($generated@@352 ($generated@@221 $generated@@909 $generated@@910)))))
 :pattern ( ($generated@@92 $generated@@908 ($generated@@615 $generated@@909 $generated@@910)))
)))
(assert (forall (($generated@@911 T@U) ($generated@@912 T@U) ($generated@@913 T@U) ) (!  (=> (and (and (and (= (type $generated@@911) ($generated@@483 $generated@@169 $generated@@169)) (= (type $generated@@912) $generated@@82)) (= (type $generated@@913) $generated@@82)) ($generated@@92 $generated@@911 ($generated@@623 $generated@@912 $generated@@913))) (and (and ($generated@@92 ($generated@@481 $generated@@911) ($generated@@357 $generated@@912)) ($generated@@92 ($generated@@549 $generated@@911) ($generated@@357 $generated@@913))) ($generated@@92 ($generated@@589 $generated@@911) ($generated@@357 ($generated@@221 $generated@@912 $generated@@913)))))
 :pattern ( ($generated@@92 $generated@@911 ($generated@@623 $generated@@912 $generated@@913)))
)))
(assert (forall (($generated@@914 T@U) ) (!  (=> (= (type $generated@@914) $generated@@2) ($generated@@92 $generated@@914 $generated@@46))
 :pattern ( ($generated@@92 $generated@@914 $generated@@46))
)))
(assert (forall (($generated@@915 T@U) ) (!  (=> (= (type $generated@@915) $generated@@3) ($generated@@92 $generated@@915 $generated@@47))
 :pattern ( ($generated@@92 $generated@@915 $generated@@47))
)))
(assert (forall (($generated@@916 T@U) ) (!  (=> (= (type $generated@@916) $generated@@4) ($generated@@92 $generated@@916 $generated@@44))
 :pattern ( ($generated@@92 $generated@@916 $generated@@44))
)))
(assert (forall (($generated@@917 T@U) ) (!  (=> (= (type $generated@@917) $generated@@665) ($generated@@92 $generated@@917 $generated@@45))
 :pattern ( ($generated@@92 $generated@@917 $generated@@45))
)))
(assert (forall (($generated@@918 T@U) ) (!  (=> (= (type $generated@@918) $generated@@169) ($generated@@92 $generated@@918 $generated@@48))
 :pattern ( ($generated@@92 $generated@@918 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@919 () T@U)
(declare-fun $generated@@920 () T@U)
(declare-fun $generated@@921 () T@U)
(declare-fun $generated@@922 () T@U)
(declare-fun $generated@@923 () T@U)
(declare-fun $generated@@924 () T@U)
(declare-fun $generated@@925 () T@U)
(declare-fun $generated@@926 () T@U)
(declare-fun $generated@@927 () Int)
(declare-fun $generated@@928 () T@U)
(declare-fun $generated@@929 () T@U)
(declare-fun $generated@@930 () T@U)
(declare-fun $generated@@931 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@919) $generated@@95) (= (type $generated@@920) $generated@@169)) (= (type $generated@@921) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@922) $generated@@95)) (= (type $generated@@923) $generated@@169)) (= (type $generated@@924) $generated@@95)) (= (type $generated@@925) ($generated@@244 $generated@@104 $generated@@4))) (= (type $generated@@926) $generated@@104)) (= (type $generated@@928) ($generated@@244 $generated@@104 $generated@@4))) (= (type $generated@@929) $generated@@447)) (= (type $generated@@930) $generated@@95)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 32) (let (($generated@@932 true))
(let (($generated@@933  (=> (= ($generated@@341 $generated@@919) ($generated@@362 0)) (=> (and ($generated@@311 $generated@@920 $generated@@321) ($generated@@320 $generated@@920 $generated@@321 $generated@@921)) (and (=> (= (ControlFlow 0 3) (- 0 26)) ($generated@@340 $generated@@919)) (=> ($generated@@340 $generated@@919) (and (=> (= (ControlFlow 0 3) (- 0 25)) ($generated@@401 ($generated@@342 $generated@@919))) (=> ($generated@@401 ($generated@@342 $generated@@919)) (and (=> (= (ControlFlow 0 3) (- 0 24)) (and (<= 0 ($generated@@362 0)) (< ($generated@@362 0) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@919)))))) (=> (and (<= 0 ($generated@@362 0)) (< ($generated@@362 0) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@919))))) (=> (and (= $generated@@922 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@919)) ($generated@@362 0)))) ($generated@@101 $generated@@922 $generated@@94 $generated@@921)) (and (=> (= (ControlFlow 0 3) (- 0 23)) (=> ($generated@@565 $generated@@922 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@922 ($generated@@349 $generated@@348)) (=> ($generated@@162 $generated@@922) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@374 ($generated@@349 $generated@@348))))))))) (and (=> (= (ControlFlow 0 3) (- 0 22)) (=> ($generated@@565 $generated@@922 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@922 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@922)) (=> ($generated@@401 $generated@@922) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@395 ($generated@@349 $generated@@348)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 21)) (=> ($generated@@565 $generated@@922 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@922 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@922)) (=> ($generated@@401 $generated@@922) (let (($generated@@934 ($generated@@524 $generated@@922)))
(= ($generated@@170 $generated@@934) ($generated@@170 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@348))))))))))) (and (=> (= (ControlFlow 0 3) (- 0 20)) (=> ($generated@@565 $generated@@922 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@922 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@922)) (=> ($generated@@401 $generated@@922) (let (($generated@@935 ($generated@@524 $generated@@922)))
(forall (($generated@@936 Int) ) (!  (=> true (=> (and (<= ($generated@@362 0) $generated@@936) (< $generated@@936 ($generated@@170 $generated@@935))) ($generated@@445 $generated@@791 ($generated@@172 $generated@@95 ($generated@@166 $generated@@935 $generated@@936)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@348))) $generated@@936)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@348) $generated@@936)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@935 $generated@@936)))
)))))))) (and (=> (= (ControlFlow 0 3) (- 0 19)) (=> ($generated@@565 $generated@@922 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@922 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@922)) (=> (not ($generated@@401 $generated@@922)) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@398 ($generated@@349 $generated@@348)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 18)) (=> ($generated@@565 $generated@@922 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@922 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@922)) (=> (not ($generated@@401 $generated@@922)) (let (($generated@@937 ($generated@@341 $generated@@922)))
(< $generated@@937 ($generated@@170 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@348))))))))))) (and (=> (= (ControlFlow 0 3) (- 0 17)) (=> ($generated@@565 $generated@@922 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@922 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@922)) (=> (not ($generated@@401 $generated@@922)) (let (($generated@@938 ($generated@@342 $generated@@922)))
(let (($generated@@939 ($generated@@341 $generated@@922)))
($generated@@445 $generated@@791 $generated@@938 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@348))) $generated@@939)))))))))) (=> (and ($generated@@445 $generated@@530 $generated@@922 ($generated@@349 $generated@@348)) ($generated@@607 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@919)) ($generated@@362 0))))) (=> (and (and (= $generated@@923 ($generated@@609 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@919)) ($generated@@362 0))))) ($generated@@607 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@919)) ($generated@@362 0))))) (and ($generated@@311 $generated@@923 $generated@@321) (= $generated@@920 $generated@@923))) (and (=> (= (ControlFlow 0 3) (- 0 16)) ($generated@@340 $generated@@919)) (=> ($generated@@340 $generated@@919) (and (=> (= (ControlFlow 0 3) (- 0 15)) ($generated@@401 ($generated@@342 $generated@@919))) (=> ($generated@@401 ($generated@@342 $generated@@919)) (and (=> (= (ControlFlow 0 3) (- 0 14)) (and (<= 0 ($generated@@362 1)) (< ($generated@@362 1) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@919)))))) (=> (and (<= 0 ($generated@@362 1)) (< ($generated@@362 1) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@919))))) (and (=> (= (ControlFlow 0 3) (- 0 13)) ($generated@@162 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@919)) ($generated@@362 1))))) (=> ($generated@@162 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@919)) ($generated@@362 1)))) (and (=> (= (ControlFlow 0 3) (- 0 12)) ($generated@@340 $generated@@919)) (=> ($generated@@340 $generated@@919) (and (=> (= (ControlFlow 0 3) (- 0 11)) ($generated@@401 ($generated@@342 $generated@@919))) (=> ($generated@@401 ($generated@@342 $generated@@919)) (and (=> (= (ControlFlow 0 3) (- 0 10)) (and (<= 0 ($generated@@362 2)) (< ($generated@@362 2) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@919)))))) (=> (and (<= 0 ($generated@@362 2)) (< ($generated@@362 2) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@919))))) (=> (and (= $generated@@924 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@919)) ($generated@@362 2)))) ($generated@@101 $generated@@924 $generated@@94 $generated@@921)) (and (=> (= (ControlFlow 0 3) (- 0 9)) (=> ($generated@@565 $generated@@924 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@924 ($generated@@349 $generated@@560)) (=> ($generated@@162 $generated@@924) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@374 ($generated@@349 $generated@@560))))))))) (and (=> (= (ControlFlow 0 3) (- 0 8)) (=> ($generated@@565 $generated@@924 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@924 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@924)) (=> ($generated@@401 $generated@@924) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@395 ($generated@@349 $generated@@560)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 7)) (=> ($generated@@565 $generated@@924 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@924 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@924)) (=> ($generated@@401 $generated@@924) (let (($generated@@940 ($generated@@524 $generated@@924)))
(= ($generated@@170 $generated@@940) ($generated@@170 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@560))))))))))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> ($generated@@565 $generated@@924 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@924 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@924)) (=> ($generated@@401 $generated@@924) (let (($generated@@941 ($generated@@524 $generated@@924)))
(forall (($generated@@942 Int) ) (!  (=> true (=> (and (<= ($generated@@362 0) $generated@@942) (< $generated@@942 ($generated@@170 $generated@@941))) ($generated@@445 $generated@@791 ($generated@@172 $generated@@95 ($generated@@166 $generated@@941 $generated@@942)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@560))) $generated@@942)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@560) $generated@@942)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@941 $generated@@942)))
)))))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> ($generated@@565 $generated@@924 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@924 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@924)) (=> (not ($generated@@401 $generated@@924)) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@398 ($generated@@349 $generated@@560)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@565 $generated@@924 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@924 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@924)) (=> (not ($generated@@401 $generated@@924)) (let (($generated@@943 ($generated@@341 $generated@@924)))
(< $generated@@943 ($generated@@170 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@560))))))))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@565 $generated@@924 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@924 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@924)) (=> (not ($generated@@401 $generated@@924)) (let (($generated@@944 ($generated@@342 $generated@@924)))
(let (($generated@@945 ($generated@@341 $generated@@924)))
($generated@@445 $generated@@791 $generated@@944 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@560))) $generated@@945)))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@946  (=> (= $generated@@925 ($generated@@298 $generated@@926 $generated@@921 $generated@@60 false)) (and (=> (= (ControlFlow 0 28) (- 0 30)) ($generated@@340 $generated@@919)) (=> ($generated@@340 $generated@@919) (=> (= $generated@@927 ($generated@@362 0)) (and (=> (= (ControlFlow 0 28) (- 0 29)) (and (<= ($generated@@362 0) $generated@@927) (< $generated@@927 18446744073709551616))) (=> (and (<= ($generated@@362 0) $generated@@927) (< $generated@@927 18446744073709551616)) (and (=> (= (ControlFlow 0 28) 3) $generated@@933) (=> (= (ControlFlow 0 28) 27) $generated@@932))))))))))
(let (($generated@@947 true))
(let (($generated@@948  (=> (and (= $generated@@928 ($generated@@243 $generated@@926 $generated@@921 $generated@@60 false)) (= $generated@@530 ($generated@@446 $generated@@929))) (=> (and (and (and (= $generated@@791 ($generated@@446 ($generated@@446 $generated@@929))) (= ($generated@@900 $generated@@929) $generated@@929)) (and $generated@@561 ($generated@@101 $generated@@919 $generated@@94 $generated@@921))) (and (and (= $generated@@930 ($generated@@349 $generated@@531)) ($generated@@101 $generated@@930 $generated@@318 $generated@@921)) (and ($generated@@565 $generated@@919 ($generated@@349 $generated@@531)) ($generated@@445 $generated@@530 $generated@@919 ($generated@@349 $generated@@531))))) (and (=> (= (ControlFlow 0 31) 1) $generated@@947) (=> (= (ControlFlow 0 31) 28) $generated@@946))))))
(let (($generated@@949  (=> (and (and (and ($generated@@216 $generated@@921) ($generated@@931 $generated@@921)) ($generated@@92 $generated@@919 $generated@@94)) (and (= 4 $generated@@346) (= (ControlFlow 0 32) 31))) $generated@@948)))
$generated@@949)))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 25))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 24))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 22))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 21))))
(check-sat)
(get-info :reason-unknown)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) Bool)
(declare-fun $generated@@93 (Int T@U) T@U)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@U)
(declare-fun $generated@@101 (T@U T@U T@U) Bool)
(declare-fun $generated@@102 (Int) T@U)
(declare-fun $generated@@103 (T@T T@T) T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@T) T@T)
(declare-fun $generated@@108 (T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@166 (T@U Int) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@170 (T@U) Int)
(declare-fun $generated@@171 (T@U) Int)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@192 (T@U Int T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Int)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@220 (T@U) Bool)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@238 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@244 (T@T T@T) T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@247 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@298 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U T@U) Bool)
(declare-fun $generated@@318 () T@U)
(declare-fun $generated@@319 () T@U)
(declare-fun $generated@@320 (T@U T@U T@U) Bool)
(declare-fun $generated@@321 () T@U)
(declare-fun $generated@@322 () T@U)
(declare-fun $generated@@332 (T@U T@U) Bool)
(declare-fun $generated@@337 (T@U T@U) Bool)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@341 (T@U) Int)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@346 () Int)
(declare-fun $generated@@347 () Bool)
(declare-fun $generated@@348 () T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@362 (Int) Int)
(declare-fun $generated@@365 (T@U T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@374 (T@U) Bool)
(declare-fun $generated@@377 (T@U) Bool)
(declare-fun $generated@@380 (T@U) Bool)
(declare-fun $generated@@393 (T@U) Bool)
(declare-fun $generated@@395 (T@U) Bool)
(declare-fun $generated@@398 (T@U) Bool)
(declare-fun $generated@@401 (T@U) Bool)
(declare-fun $generated@@404 (T@U) Bool)
(declare-fun $generated@@407 (T@U T@U) Bool)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@436 (Int) T@U)
(declare-fun $generated@@445 (T@U T@U T@U) Bool)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@457 (T@U) Int)
(declare-fun $generated@@458 (T@T) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@464 (T@T T@T) T@U)
(declare-fun $generated@@465 (T@T T@T) T@T)
(declare-fun $generated@@466 (T@T) T@T)
(declare-fun $generated@@467 (T@T) T@T)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@T T@T) T@U)
(declare-fun $generated@@483 (T@T T@T) T@T)
(declare-fun $generated@@484 (T@T) T@T)
(declare-fun $generated@@485 (T@T) T@T)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Bool)
(declare-fun $generated@@530 () T@U)
(declare-fun $generated@@531 () T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@559 () Bool)
(declare-fun $generated@@560 () T@U)
(declare-fun $generated@@561 () Bool)
(declare-fun $generated@@565 (T@U T@U) Bool)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@607 (T@U) Bool)
(declare-fun $generated@@608 (T@U) Bool)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@615 (T@U T@U) T@U)
(declare-fun $generated@@623 (T@U T@U) T@U)
(declare-fun $generated@@639 (T@T) T@U)
(declare-fun $generated@@665 () T@T)
(declare-fun $generated@@679 (T@U) T@U)
(declare-fun $generated@@683 (T@U) T@U)
(declare-fun $generated@@689 (T@U) T@U)
(declare-fun $generated@@693 (T@U) T@U)
(declare-fun $generated@@701 (T@U) T@U)
(declare-fun $generated@@705 (T@U) T@U)
(declare-fun $generated@@726 (T@U) Int)
(declare-fun $generated@@728 (T@U) T@U)
(declare-fun $generated@@732 (T@U) T@U)
(declare-fun $generated@@736 (T@U) T@U)
(declare-fun $generated@@740 (T@U) T@U)
(declare-fun $generated@@764 (T@U) Int)
(declare-fun $generated@@805 (T@U) Int)
(declare-fun $generated@@811 (T@U) T@U)
(declare-fun $generated@@815 (T@U) T@U)
(declare-fun $generated@@816 (T@U) T@U)
(declare-fun $generated@@899 (T@U) T@U)
(declare-fun $generated@@900 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@82) 6) (= (type $generated@@44) $generated@@82)) (= (type $generated@@45) $generated@@82)) (= (type $generated@@46) $generated@@82)) (= (type $generated@@47) $generated@@82)) (= (type $generated@@48) $generated@@82)) (= ($generated@@1 $generated@@83) 7)) (= (type $generated@@49) $generated@@83)) (= (type $generated@@50) $generated@@83)) (= (type $generated@@51) $generated@@83)) (= (type $generated@@52) $generated@@83)) (= (type $generated@@53) $generated@@83)) (= (type $generated@@54) $generated@@83)) (= (type $generated@@55) $generated@@83)) (= (type $generated@@56) $generated@@83)) (= (type $generated@@57) $generated@@83)) (= (type $generated@@58) $generated@@83)) (= (type $generated@@59) $generated@@83)) (forall (($generated@@88 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@88)) 8))) (forall (($generated@@89 T@T) ) (! (= ($generated@@85 ($generated@@84 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@84 $generated@@89))
))) (= (type $generated@@60) ($generated@@84 $generated@@4))) (= ($generated@@1 $generated@@86) 9)) (= (type $generated@@61) $generated@@86)) (= (type $generated@@62) $generated@@83)) (= (type $generated@@63) $generated@@83)) (= (type $generated@@64) $generated@@86)) (= (type $generated@@65) $generated@@83)) (= (type $generated@@66) $generated@@86)) (= (type $generated@@67) $generated@@86)) (= (type $generated@@68) $generated@@86)) (= (type $generated@@69) $generated@@86)) (= (type $generated@@70) $generated@@86)) (= (type $generated@@71) $generated@@83)) (= (type $generated@@72) $generated@@86)) (= (type $generated@@73) $generated@@86)) (= (type $generated@@74) $generated@@86)) (= (type $generated@@75) $generated@@83)) (= (type $generated@@76) $generated@@86)) (= ($generated@@1 $generated@@87) 10)) (= (type $generated@@77) $generated@@87)) (= (type $generated@@78) $generated@@87)) (= (type $generated@@79) $generated@@87)) (= (type $generated@@80) $generated@@87)) (= (type $generated@@81) $generated@@87)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79 $generated@@80 $generated@@81)
)
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@83)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@44) $generated@@49))
(assert (= ($generated@@90 $generated@@45) $generated@@50))
(assert (= ($generated@@90 $generated@@46) $generated@@51))
(assert (= ($generated@@90 $generated@@47) $generated@@52))
(assert (= ($generated@@90 $generated@@48) $generated@@53))
(assert  (and (and (and (= ($generated@@1 $generated@@95) 11) (forall (($generated@@97 Int) ($generated@@98 T@U) ) (! (= (type ($generated@@93 $generated@@97 $generated@@98)) $generated@@95)
 :pattern ( ($generated@@93 $generated@@97 $generated@@98))
))) (= (type $generated@@94) $generated@@82)) (= (type $generated@@96) $generated@@82)))
(assert (forall (($generated@@99 Int) ($generated@@100 T@U) ) (!  (=> (= (type $generated@@100) $generated@@95) (= ($generated@@92 ($generated@@93 $generated@@99 $generated@@100) $generated@@94)  (and ($generated@@92 ($generated@@8 $generated@@99) $generated@@96) ($generated@@92 $generated@@100 $generated@@94))))
 :pattern ( ($generated@@92 ($generated@@93 $generated@@99 $generated@@100) $generated@@94))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@103 $generated@@112 $generated@@113)) 12)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@106 ($generated@@103 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@103 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@107 ($generated@@103 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@103 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@107 (type $generated@@118))))
(= (type ($generated@@108 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@108 $generated@@118 $generated@@119))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 (type $generated@@123)))
(let (($generated@@125 (type $generated@@122)))
(= (type ($generated@@109 $generated@@121 $generated@@122 $generated@@123)) ($generated@@103 $generated@@125 $generated@@124))))
 :pattern ( ($generated@@109 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@107 (type $generated@@126))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@108 ($generated@@109 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@108 ($generated@@109 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@108 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@108 ($generated@@109 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@108 $generated@@135 $generated@@137)))
 :weight 0
)))) (= ($generated@@1 $generated@@104) 13)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@85 (type $generated@@139))))
(= (type ($generated@@110 $generated@@138 $generated@@139)) $generated@@140))
 :pattern ( ($generated@@110 $generated@@138 $generated@@139))
))) (= ($generated@@1 $generated@@105) 14)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@111 $generated@@141 $generated@@142 $generated@@143)) $generated@@105)
 :pattern ( ($generated@@111 $generated@@141 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@85 (type $generated@@145))))
 (=> (= (type $generated@@146) $generated@@147) (= ($generated@@110 ($generated@@111 $generated@@144 $generated@@145 $generated@@146) $generated@@145) $generated@@146)))
 :weight 0
))) (and (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@150 $generated@@151) (= ($generated@@110 ($generated@@111 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@110 $generated@@149 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@153 $generated@@154 $generated@@152) $generated@@155) ($generated@@110 $generated@@153 $generated@@155)))
 :weight 0
)))) (forall (($generated@@156 Int) ) (! (= (type ($generated@@102 $generated@@156)) $generated@@82)
 :pattern ( ($generated@@102 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@2) (= (type $generated@@158) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@101 $generated@@157 ($generated@@102 0) $generated@@158))
 :pattern ( ($generated@@101 $generated@@157 ($generated@@102 0) $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@101 $generated@@159 $generated@@96 $generated@@160))
 :pattern ( ($generated@@101 $generated@@159 $generated@@96 $generated@@160))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@95) (= (type $generated@@165) $generated@@95)) (and ($generated@@162 $generated@@164) ($generated@@162 $generated@@165))) (= ($generated@@161 $generated@@164 $generated@@165) (= ($generated@@163 $generated@@164) ($generated@@163 $generated@@165))))
 :pattern ( ($generated@@161 $generated@@164 $generated@@165) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@161 $generated@@164 $generated@@165) ($generated@@162 $generated@@165))
)))
(assert  (and (and (and (and (and (forall (($generated@@174 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@174)) 15)) (forall (($generated@@175 T@T) ) (! (= ($generated@@173 ($generated@@168 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@168 $generated@@175))
))) (= ($generated@@1 $generated@@169) 16)) (forall (($generated@@176 T@U) ($generated@@177 Int) ) (! (let (($generated@@178 ($generated@@173 (type $generated@@176))))
(= (type ($generated@@166 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@166 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@167 $generated@@179)) $generated@@95)
 :pattern ( ($generated@@167 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@U) ) (! (= (type ($generated@@172 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 Int) ) (!  (=> (= (type $generated@@182) ($generated@@168 $generated@@169)) (=> (and (<= 0 $generated@@183) (< $generated@@183 ($generated@@170 $generated@@182))) (< ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@182 $generated@@183))) ($generated@@171 ($generated@@167 $generated@@182)))))
 :pattern ( ($generated@@166 $generated@@182 $generated@@183) ($generated@@167 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@184 $generated@@185)) $generated@@95)
 :pattern ( ($generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 Int) ) (!  (=> (= (type $generated@@186) ($generated@@168 $generated@@169)) (=> (and (<= 0 $generated@@187) (< $generated@@187 ($generated@@170 $generated@@186))) (< ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@186 $generated@@187))) ($generated@@171 ($generated@@184 $generated@@186)))))
 :pattern ( ($generated@@166 $generated@@186 $generated@@187) ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@188 $generated@@189)) $generated@@95)
 :pattern ( ($generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 Int) ) (!  (=> (= (type $generated@@190) ($generated@@168 $generated@@169)) (=> (and (<= 0 $generated@@191) (< $generated@@191 ($generated@@170 $generated@@190))) (< ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@190 $generated@@191))) ($generated@@171 ($generated@@188 $generated@@190)))))
 :pattern ( ($generated@@166 $generated@@190 $generated@@191) ($generated@@188 $generated@@190))
)))
(assert  (and (forall (($generated@@194 T@U) ($generated@@195 Int) ($generated@@196 T@U) ) (! (= (type ($generated@@192 $generated@@194 $generated@@195 $generated@@196)) $generated@@95)
 :pattern ( ($generated@@192 $generated@@194 $generated@@195 $generated@@196))
)) (forall (($generated@@197 T@U) ) (! (= (type ($generated@@193 $generated@@197)) $generated@@86)
 :pattern ( ($generated@@193 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 Int) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@198) $generated@@169) (= (type $generated@@200) $generated@@169)) (= ($generated@@193 ($generated@@192 $generated@@198 $generated@@199 $generated@@200)) $generated@@74))
 :pattern ( ($generated@@192 $generated@@198 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@201 $generated@@202)) $generated@@169)
 :pattern ( ($generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 Int) ($generated@@205 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@169) (= (type $generated@@205) $generated@@169)) (= ($generated@@201 ($generated@@192 $generated@@203 $generated@@204 $generated@@205)) $generated@@203))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 Int) ($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@207) $generated@@169) (= (type $generated@@209) $generated@@169)) (= ($generated@@206 ($generated@@192 $generated@@207 $generated@@208 $generated@@209)) $generated@@208))
 :pattern ( ($generated@@192 $generated@@207 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ) (! (= (type ($generated@@210 $generated@@211)) $generated@@169)
 :pattern ( ($generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 Int) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@212) $generated@@169) (= (type $generated@@214) $generated@@169)) (= ($generated@@210 ($generated@@192 $generated@@212 $generated@@213 $generated@@214)) $generated@@214))
 :pattern ( ($generated@@192 $generated@@212 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (= (type $generated@@215) $generated@@2) ($generated@@92 $generated@@215 ($generated@@102 0)))
 :pattern ( ($generated@@92 $generated@@215 ($generated@@102 0)))
)))
(assert (forall (($generated@@217 Int) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (and (= (type $generated@@218) $generated@@95) (= (type $generated@@219) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@219)) (= ($generated@@101 ($generated@@93 $generated@@217 $generated@@218) $generated@@94 $generated@@219)  (and ($generated@@101 ($generated@@8 $generated@@217) $generated@@96 $generated@@219) ($generated@@101 $generated@@218 $generated@@94 $generated@@219))))
 :pattern ( ($generated@@101 ($generated@@93 $generated@@217 $generated@@218) $generated@@94 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223)) $generated@@82)
 :pattern ( ($generated@@221 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@82) (= (type $generated@@225) $generated@@82)) (= (type $generated@@226) $generated@@95)) ($generated@@92 $generated@@226 ($generated@@221 $generated@@224 $generated@@225))) ($generated@@220 $generated@@226))
 :pattern ( ($generated@@220 $generated@@226) ($generated@@92 $generated@@226 ($generated@@221 $generated@@224 $generated@@225)))
)))
(assert  (and (forall (($generated@@230 T@U) ) (! (= (type ($generated@@228 $generated@@230)) $generated@@169)
 :pattern ( ($generated@@228 $generated@@230))
)) (forall (($generated@@231 T@U) ) (! (= (type ($generated@@229 $generated@@231)) $generated@@169)
 :pattern ( ($generated@@229 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (= (type $generated@@232) $generated@@95) (= (type $generated@@233) $generated@@95)) true) (= ($generated@@227 $generated@@232 $generated@@233)  (and (= ($generated@@228 $generated@@232) ($generated@@228 $generated@@233)) (= ($generated@@229 $generated@@232) ($generated@@229 $generated@@233)))))
 :pattern ( ($generated@@227 $generated@@232 $generated@@233))
)))
(assert (= (type $generated@@234) $generated@@95))
(assert (= ($generated@@193 $generated@@234) $generated@@64))
(assert (= (type $generated@@235) $generated@@95))
(assert (= ($generated@@193 $generated@@235) $generated@@68))
(assert (= (type $generated@@236) $generated@@95))
(assert (= ($generated@@193 $generated@@236) $generated@@76))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@237 $generated@@239)) $generated@@82)
 :pattern ( ($generated@@237 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (= (type $generated@@240) ($generated@@103 $generated@@169 $generated@@2)) (= (type $generated@@241) $generated@@82)) ($generated@@92 $generated@@240 ($generated@@237 $generated@@241))) ($generated@@238 $generated@@240))
 :pattern ( ($generated@@92 $generated@@240 ($generated@@237 $generated@@241)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (= ($generated@@1 ($generated@@244 $generated@@248 $generated@@249)) 17)) (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (! (= ($generated@@245 ($generated@@244 $generated@@250 $generated@@251)) $generated@@250)
 :pattern ( ($generated@@244 $generated@@250 $generated@@251))
))) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= ($generated@@246 ($generated@@244 $generated@@252 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@244 $generated@@252 $generated@@253))
))) (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@246 (type $generated@@254))))
(= (type ($generated@@242 $generated@@254 $generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@242 $generated@@254 $generated@@255 $generated@@256))
))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(let (($generated@@263 (type $generated@@259)))
(= (type ($generated@@247 $generated@@258 $generated@@259 $generated@@260 $generated@@261)) ($generated@@244 $generated@@263 $generated@@262))))
 :pattern ( ($generated@@247 $generated@@258 $generated@@259 $generated@@260 $generated@@261))
))) (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@246 (type $generated@@264))))
 (=> (= (type $generated@@267) $generated@@268) (= ($generated@@242 ($generated@@247 $generated@@264 $generated@@265 $generated@@266 $generated@@267) $generated@@265 $generated@@266) $generated@@267)))
 :weight 0
))) (and (and (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (or (= $generated@@271 $generated@@273) (= ($generated@@242 ($generated@@247 $generated@@270 $generated@@271 $generated@@272 $generated@@269) $generated@@273 $generated@@274) ($generated@@242 $generated@@270 $generated@@273 $generated@@274)))
 :weight 0
)) (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (or (= $generated@@278 $generated@@280) (= ($generated@@242 ($generated@@247 $generated@@276 $generated@@277 $generated@@278 $generated@@275) $generated@@279 $generated@@280) ($generated@@242 $generated@@276 $generated@@279 $generated@@280)))
 :weight 0
))) (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (or true (= ($generated@@242 ($generated@@247 $generated@@282 $generated@@283 $generated@@284 $generated@@281) $generated@@285 $generated@@286) ($generated@@242 $generated@@282 $generated@@285 $generated@@286)))
 :weight 0
)))) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 Bool) ) (! (= (type ($generated@@243 $generated@@287 $generated@@288 $generated@@289 $generated@@290)) ($generated@@244 $generated@@104 $generated@@4))
 :pattern ( ($generated@@243 $generated@@287 $generated@@288 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 Bool) ($generated@@295 T@U) ($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@85 (type $generated@@296))))
 (=> (and (and (and (and (= (type $generated@@291) $generated@@104) (= (type $generated@@292) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@293) ($generated@@84 $generated@@4))) (= (type $generated@@295) $generated@@104)) (= (type $generated@@296) ($generated@@84 $generated@@297))) (= ($generated@@0 ($generated@@242 ($generated@@243 $generated@@291 $generated@@292 $generated@@293 $generated@@294) $generated@@295 $generated@@296))  (=> (and (not (= $generated@@295 $generated@@291)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@292 $generated@@295) $generated@@293))) $generated@@294))))
 :pattern ( ($generated@@242 ($generated@@243 $generated@@291 $generated@@292 $generated@@293 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Bool) ) (! (= (type ($generated@@298 $generated@@299 $generated@@300 $generated@@301 $generated@@302)) ($generated@@244 $generated@@104 $generated@@4))
 :pattern ( ($generated@@298 $generated@@299 $generated@@300 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ($generated@@307 T@U) ($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@85 (type $generated@@308))))
 (=> (and (and (and (and (= (type $generated@@303) $generated@@104) (= (type $generated@@304) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@305) ($generated@@84 $generated@@4))) (= (type $generated@@307) $generated@@104)) (= (type $generated@@308) ($generated@@84 $generated@@309))) (= ($generated@@0 ($generated@@242 ($generated@@298 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))  (=> (and (not (= $generated@@307 $generated@@303)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@304 $generated@@307) $generated@@305))) $generated@@306))))
 :pattern ( ($generated@@242 ($generated@@298 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (= (type ($generated@@310 $generated@@312 $generated@@313)) $generated@@95)
 :pattern ( ($generated@@310 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@82) (= (type $generated@@315) $generated@@82)) (= (type $generated@@316) $generated@@169)) (= (type $generated@@317) $generated@@169)) (= ($generated@@92 ($generated@@310 $generated@@316 $generated@@317) ($generated@@221 $generated@@314 $generated@@315))  (and ($generated@@311 $generated@@316 $generated@@314) ($generated@@311 $generated@@317 $generated@@315))))
 :pattern ( ($generated@@92 ($generated@@310 $generated@@316 $generated@@317) ($generated@@221 $generated@@314 $generated@@315)))
)))
(assert (= (type $generated@@318) $generated@@82))
(assert ($generated@@92 $generated@@234 $generated@@318))
(assert ($generated@@92 $generated@@235 $generated@@318))
(assert (= (type $generated@@319) $generated@@82))
(assert ($generated@@92 $generated@@236 $generated@@319))
(assert  (and (= (type $generated@@321) $generated@@82) (= (type $generated@@322) $generated@@82)))
(assert (forall (($generated@@323 T@U) ($generated@@324 Int) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (and (= (type $generated@@323) $generated@@169) (= (type $generated@@325) $generated@@169)) (= (type $generated@@326) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@326)) (= ($generated@@101 ($generated@@192 $generated@@323 $generated@@324 $generated@@325) $generated@@319 $generated@@326)  (and (and ($generated@@320 $generated@@323 $generated@@321 $generated@@326) ($generated@@101 ($generated@@8 $generated@@324) $generated@@96 $generated@@326)) ($generated@@320 $generated@@325 $generated@@322 $generated@@326))))
 :pattern ( ($generated@@101 ($generated@@192 $generated@@323 $generated@@324 $generated@@325) $generated@@319 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@216 $generated@@327)) ($generated@@101 $generated@@234 $generated@@318 $generated@@327))
 :pattern ( ($generated@@101 $generated@@234 $generated@@318 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@216 $generated@@328)) ($generated@@101 $generated@@235 $generated@@318 $generated@@328))
 :pattern ( ($generated@@101 $generated@@235 $generated@@318 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@216 $generated@@329)) ($generated@@101 $generated@@236 $generated@@319 $generated@@329))
 :pattern ( ($generated@@101 $generated@@236 $generated@@319 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@95) (= (type $generated@@331) $generated@@95)) (= ($generated@@227 $generated@@330 $generated@@331) (= $generated@@330 $generated@@331)))
 :pattern ( ($generated@@227 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@95) (= (type $generated@@334) $generated@@95)) (= ($generated@@332 $generated@@333 $generated@@334) (= $generated@@333 $generated@@334)))
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@95) (= (type $generated@@336) $generated@@95)) (= ($generated@@161 $generated@@335 $generated@@336) (= $generated@@335 $generated@@336)))
 :pattern ( ($generated@@161 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@95) (= (type $generated@@339) $generated@@95)) (= ($generated@@337 $generated@@338 $generated@@339) (= $generated@@338 $generated@@339)))
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@95)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (= (type $generated@@344) $generated@@95) (= (type $generated@@345) $generated@@95)) (and ($generated@@340 $generated@@344) ($generated@@340 $generated@@345))) (= ($generated@@161 $generated@@344 $generated@@345)  (and (= ($generated@@341 $generated@@344) ($generated@@341 $generated@@345)) ($generated@@161 ($generated@@342 $generated@@344) ($generated@@342 $generated@@345)))))
 :pattern ( ($generated@@161 $generated@@344 $generated@@345) ($generated@@340 $generated@@344))
 :pattern ( ($generated@@161 $generated@@344 $generated@@345) ($generated@@340 $generated@@345))
)))
(assert  (and (= (type $generated@@348) $generated@@95) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(= (type ($generated@@349 $generated@@350)) $generated@@351))
 :pattern ( ($generated@@349 $generated@@350))
))))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@347 (not (= 1 $generated@@346))) (= $generated@@348 ($generated@@349 $generated@@234)))))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@347 (not (= 1 $generated@@346))) (= $generated@@348 ($generated@@349 $generated@@234)))))
(assert (forall (($generated@@353 T@U) ) (! (= (type ($generated@@352 $generated@@353)) $generated@@82)
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@103 $generated@@169 $generated@@4)) (= (type $generated@@355) $generated@@82)) (= ($generated@@92 $generated@@354 ($generated@@352 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@169) ($generated@@0 ($generated@@108 $generated@@354 $generated@@356))) ($generated@@311 $generated@@356 $generated@@355))
 :pattern ( ($generated@@108 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@92 $generated@@354 ($generated@@352 $generated@@355)))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@82)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@103 $generated@@169 $generated@@4)) (= (type $generated@@360) $generated@@82)) (= ($generated@@92 $generated@@359 ($generated@@357 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@169) ($generated@@0 ($generated@@108 $generated@@359 $generated@@361))) ($generated@@311 $generated@@361 $generated@@360))
 :pattern ( ($generated@@108 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@92 $generated@@359 ($generated@@357 $generated@@360)))
)))
(assert (forall (($generated@@363 Int) ) (! (= ($generated@@362 $generated@@363) $generated@@363)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (! (= ($generated@@349 $generated@@364) $generated@@364)
 :pattern ( ($generated@@349 $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(= (type ($generated@@365 $generated@@367 $generated@@368)) ($generated@@168 $generated@@369)))
 :pattern ( ($generated@@365 $generated@@367 $generated@@368))
)) (forall (($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@370)) $generated@@82)
 :pattern ( ($generated@@366 $generated@@370))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (= (type $generated@@371) ($generated@@168 $generated@@169)) (= (type $generated@@372) $generated@@169)) (= (type $generated@@373) $generated@@82)) (and ($generated@@92 $generated@@371 ($generated@@366 $generated@@373)) ($generated@@311 $generated@@372 $generated@@373))) ($generated@@92 ($generated@@365 $generated@@371 $generated@@372) ($generated@@366 $generated@@373)))
 :pattern ( ($generated@@92 ($generated@@365 $generated@@371 $generated@@372) ($generated@@366 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@95) (= (type $generated@@376) $generated@@95)) (and ($generated@@374 $generated@@375) ($generated@@374 $generated@@376))) (= ($generated@@332 $generated@@375 $generated@@376) true))
 :pattern ( ($generated@@332 $generated@@375 $generated@@376) ($generated@@374 $generated@@375))
 :pattern ( ($generated@@332 $generated@@375 $generated@@376) ($generated@@374 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@378) $generated@@95) (= (type $generated@@379) $generated@@95)) (and ($generated@@377 $generated@@378) ($generated@@377 $generated@@379))) (= ($generated@@332 $generated@@378 $generated@@379) true))
 :pattern ( ($generated@@332 $generated@@378 $generated@@379) ($generated@@377 $generated@@378))
 :pattern ( ($generated@@332 $generated@@378 $generated@@379) ($generated@@377 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@381) $generated@@95) (= (type $generated@@382) $generated@@95)) (and ($generated@@380 $generated@@381) ($generated@@380 $generated@@382))) (= ($generated@@337 $generated@@381 $generated@@382) true))
 :pattern ( ($generated@@337 $generated@@381 $generated@@382) ($generated@@380 $generated@@381))
 :pattern ( ($generated@@337 $generated@@381 $generated@@382) ($generated@@380 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@383) $generated@@82) (= (type $generated@@384) $generated@@82)) (= (type $generated@@385) $generated@@169)) (= (type $generated@@386) $generated@@169)) (= (type $generated@@387) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@387)) (= ($generated@@101 ($generated@@310 $generated@@385 $generated@@386) ($generated@@221 $generated@@383 $generated@@384) $generated@@387)  (and ($generated@@320 $generated@@385 $generated@@383 $generated@@387) ($generated@@320 $generated@@386 $generated@@384 $generated@@387))))
 :pattern ( ($generated@@101 ($generated@@310 $generated@@385 $generated@@386) ($generated@@221 $generated@@383 $generated@@384) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 Int) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@169) (= (type $generated@@390) $generated@@169)) (= ($generated@@92 ($generated@@192 $generated@@388 $generated@@389 $generated@@390) $generated@@319)  (and (and ($generated@@311 $generated@@388 $generated@@321) ($generated@@92 ($generated@@8 $generated@@389) $generated@@96)) ($generated@@311 $generated@@390 $generated@@322))))
 :pattern ( ($generated@@92 ($generated@@192 $generated@@388 $generated@@389 $generated@@390) $generated@@319))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (= (type $generated@@391) $generated@@95) (= ($generated@@220 $generated@@391) (= ($generated@@193 $generated@@391) $generated@@61)))
 :pattern ( ($generated@@220 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (!  (=> (= (type $generated@@392) $generated@@95) (= ($generated@@374 $generated@@392) (= ($generated@@193 $generated@@392) $generated@@64)))
 :pattern ( ($generated@@374 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@95) (= ($generated@@393 $generated@@394) (= ($generated@@193 $generated@@394) $generated@@66)))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (= (type $generated@@396) $generated@@95) (= ($generated@@395 $generated@@396) (= ($generated@@193 $generated@@396) $generated@@67)))
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (= (type $generated@@397) $generated@@95) (= ($generated@@377 $generated@@397) (= ($generated@@193 $generated@@397) $generated@@68)))
 :pattern ( ($generated@@377 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@95) (= ($generated@@398 $generated@@399) (= ($generated@@193 $generated@@399) $generated@@69)))
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (= (type $generated@@400) $generated@@95) (= ($generated@@162 $generated@@400) (= ($generated@@193 $generated@@400) $generated@@70)))
 :pattern ( ($generated@@162 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@95) (= ($generated@@401 $generated@@402) (= ($generated@@193 $generated@@402) $generated@@72)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@95) (= ($generated@@340 $generated@@403) (= ($generated@@193 $generated@@403) $generated@@73)))
 :pattern ( ($generated@@340 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@95) (= ($generated@@404 $generated@@405) (= ($generated@@193 $generated@@405) $generated@@74)))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@95) (= ($generated@@380 $generated@@406) (= ($generated@@193 $generated@@406) $generated@@76)))
 :pattern ( ($generated@@380 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@173 (type $generated@@408))))
 (=> (and (= (type $generated@@408) ($generated@@168 $generated@@410)) (= (type $generated@@409) ($generated@@168 $generated@@410))) (= ($generated@@407 $generated@@408 $generated@@409)  (and (= ($generated@@170 $generated@@408) ($generated@@170 $generated@@409)) (forall (($generated@@411 Int) ) (!  (=> (and (<= 0 $generated@@411) (< $generated@@411 ($generated@@170 $generated@@408))) (= ($generated@@166 $generated@@408 $generated@@411) ($generated@@166 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@166 $generated@@408 $generated@@411))
 :pattern ( ($generated@@166 $generated@@409 $generated@@411))
))))))
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@95) ($generated@@404 $generated@@412)) (exists (($generated@@413 T@U) ($generated@@414 Int) ($generated@@415 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@169) (= (type $generated@@415) $generated@@169)) (= $generated@@412 ($generated@@192 $generated@@413 $generated@@414 $generated@@415)))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
)))
 :pattern ( ($generated@@404 $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@95) ($generated@@220 $generated@@416)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@169) (= (type $generated@@418) $generated@@169)) (= $generated@@416 ($generated@@310 $generated@@417 $generated@@418)))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
)))
 :pattern ( ($generated@@220 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@95) ($generated@@340 $generated@@419)) (exists (($generated@@420 Int) ($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@95) (= $generated@@419 ($generated@@93 $generated@@420 $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
)))
 :pattern ( ($generated@@340 $generated@@419))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@168 $generated@@423))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@T) ) (! (= ($generated@@170 ($generated@@422 $generated@@424)) 0)
 :pattern ( ($generated@@422 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@95) ($generated@@374 $generated@@425)) (= $generated@@425 $generated@@234))
 :pattern ( ($generated@@374 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@95) ($generated@@377 $generated@@426)) (= $generated@@426 $generated@@235))
 :pattern ( ($generated@@377 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@95) ($generated@@380 $generated@@427)) (= $generated@@427 $generated@@236))
 :pattern ( ($generated@@380 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@95)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@95) ($generated@@393 $generated@@430)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@95) (= $generated@@430 ($generated@@428 $generated@@431)))
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
)))
 :pattern ( ($generated@@393 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@95) ($generated@@395 $generated@@432)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) ($generated@@168 $generated@@169)) (= $generated@@432 ($generated@@167 $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
)))
 :pattern ( ($generated@@395 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@95) ($generated@@398 $generated@@434)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) ($generated@@168 $generated@@169)) (= $generated@@434 ($generated@@184 $generated@@435)))
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
)))
 :pattern ( ($generated@@398 $generated@@434))
)))
(assert (forall (($generated@@437 Int) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@95)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@95) ($generated@@162 $generated@@438)) (exists (($generated@@439 Int) ) (= $generated@@438 ($generated@@436 $generated@@439))))
 :pattern ( ($generated@@162 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@95) ($generated@@401 $generated@@440)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) ($generated@@168 $generated@@169)) (= $generated@@440 ($generated@@188 $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
)))
 :pattern ( ($generated@@401 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
 (=> (= (type $generated@@442) ($generated@@168 $generated@@444)) (= ($generated@@170 ($generated@@365 $generated@@442 $generated@@443)) (+ 1 ($generated@@170 $generated@@442)))))
 :pattern ( ($generated@@365 $generated@@442 $generated@@443))
)))
(assert  (and (= ($generated@@1 $generated@@447) 18) (forall (($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@448)) $generated@@447)
 :pattern ( ($generated@@446 $generated@@448))
))))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (= (type $generated@@449) $generated@@447) (= (type $generated@@450) $generated@@95)) (= (type $generated@@451) $generated@@95)) (= ($generated@@445 ($generated@@446 $generated@@449) $generated@@450 $generated@@451) ($generated@@445 $generated@@449 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@445 ($generated@@446 $generated@@449) $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@169)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@82) (= (type $generated@@456) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@320 ($generated@@452 $generated@@454) $generated@@455 $generated@@456) ($generated@@101 $generated@@454 $generated@@455 $generated@@456)))
 :pattern ( ($generated@@320 ($generated@@452 $generated@@454) $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@459 T@T) ) (! (= (type ($generated@@458 $generated@@459)) ($generated@@103 $generated@@459 $generated@@2))
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@106 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@103 $generated@@461 $generated@@2)) (and (= (= ($generated@@457 $generated@@460) 0) (= $generated@@460 ($generated@@458 $generated@@461))) (=> (not (= ($generated@@457 $generated@@460) 0)) (exists (($generated@@462 T@U) ) (!  (and (= (type $generated@@462) $generated@@461) (< 0 ($generated ($generated@@108 $generated@@460 $generated@@462))))
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@457 $generated@@460))
)))
(assert  (and (and (and (and (forall (($generated@@468 T@T) ($generated@@469 T@T) ) (= ($generated@@1 ($generated@@465 $generated@@468 $generated@@469)) 19)) (forall (($generated@@470 T@T) ($generated@@471 T@T) ) (! (= ($generated@@466 ($generated@@465 $generated@@470 $generated@@471)) $generated@@470)
 :pattern ( ($generated@@465 $generated@@470 $generated@@471))
))) (forall (($generated@@472 T@T) ($generated@@473 T@T) ) (! (= ($generated@@467 ($generated@@465 $generated@@472 $generated@@473)) $generated@@473)
 :pattern ( ($generated@@465 $generated@@472 $generated@@473))
))) (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@466 (type $generated@@474))))
(= (type ($generated@@463 $generated@@474)) ($generated@@103 $generated@@475 $generated@@4)))
 :pattern ( ($generated@@463 $generated@@474))
))) (forall (($generated@@476 T@T) ($generated@@477 T@T) ) (! (= (type ($generated@@464 $generated@@476 $generated@@477)) ($generated@@465 $generated@@476 $generated@@477))
 :pattern ( ($generated@@464 $generated@@476 $generated@@477))
))))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@T) ) (! (let (($generated@@480 (type $generated@@478)))
 (not ($generated@@0 ($generated@@108 ($generated@@463 ($generated@@464 $generated@@480 $generated@@479)) $generated@@478))))
 :pattern ( (let (($generated@@480 (type $generated@@478)))
($generated@@108 ($generated@@463 ($generated@@464 $generated@@480 $generated@@479)) $generated@@478)))
)))
(assert  (and (and (and (and (forall (($generated@@486 T@T) ($generated@@487 T@T) ) (= ($generated@@1 ($generated@@483 $generated@@486 $generated@@487)) 20)) (forall (($generated@@488 T@T) ($generated@@489 T@T) ) (! (= ($generated@@484 ($generated@@483 $generated@@488 $generated@@489)) $generated@@488)
 :pattern ( ($generated@@483 $generated@@488 $generated@@489))
))) (forall (($generated@@490 T@T) ($generated@@491 T@T) ) (! (= ($generated@@485 ($generated@@483 $generated@@490 $generated@@491)) $generated@@491)
 :pattern ( ($generated@@483 $generated@@490 $generated@@491))
))) (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@484 (type $generated@@492))))
(= (type ($generated@@481 $generated@@492)) ($generated@@103 $generated@@493 $generated@@4)))
 :pattern ( ($generated@@481 $generated@@492))
))) (forall (($generated@@494 T@T) ($generated@@495 T@T) ) (! (= (type ($generated@@482 $generated@@494 $generated@@495)) ($generated@@483 $generated@@494 $generated@@495))
 :pattern ( ($generated@@482 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@T) ) (! (let (($generated@@498 (type $generated@@496)))
 (not ($generated@@0 ($generated@@108 ($generated@@481 ($generated@@482 $generated@@498 $generated@@497)) $generated@@496))))
 :pattern ( (let (($generated@@498 (type $generated@@496)))
($generated@@108 ($generated@@481 ($generated@@482 $generated@@498 $generated@@497)) $generated@@496)))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@106 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@103 $generated@@500 $generated@@2)) (= ($generated@@238 $generated@@499) (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@500) (and (<= 0 ($generated ($generated@@108 $generated@@499 $generated@@501))) (<= ($generated ($generated@@108 $generated@@499 $generated@@501)) ($generated@@457 $generated@@499))))
 :pattern ( ($generated@@108 $generated@@499 $generated@@501))
)))))
 :pattern ( ($generated@@238 $generated@@499))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@169) ($generated@@311 $generated@@502 $generated@@96)) (and (= ($generated@@452 ($generated@@172 $generated@@2 $generated@@502)) $generated@@502) ($generated@@92 ($generated@@172 $generated@@2 $generated@@502) $generated@@96)))
 :pattern ( ($generated@@311 $generated@@502 $generated@@96))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@169) ($generated@@311 $generated@@503 $generated@@318)) (and (= ($generated@@452 ($generated@@172 $generated@@95 $generated@@503)) $generated@@503) ($generated@@92 ($generated@@172 $generated@@95 $generated@@503) $generated@@318)))
 :pattern ( ($generated@@311 $generated@@503 $generated@@318))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@169) ($generated@@311 $generated@@504 $generated@@94)) (and (= ($generated@@452 ($generated@@172 $generated@@95 $generated@@504)) $generated@@504) ($generated@@92 ($generated@@172 $generated@@95 $generated@@504) $generated@@94)))
 :pattern ( ($generated@@311 $generated@@504 $generated@@94))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@169) ($generated@@311 $generated@@505 $generated@@319)) (and (= ($generated@@452 ($generated@@172 $generated@@95 $generated@@505)) $generated@@505) ($generated@@92 ($generated@@172 $generated@@95 $generated@@505) $generated@@319)))
 :pattern ( ($generated@@311 $generated@@505 $generated@@319))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@95) (= ($generated@@92 ($generated@@428 $generated@@506) $generated@@318) ($generated@@92 $generated@@506 $generated@@318)))
 :pattern ( ($generated@@92 ($generated@@428 $generated@@506) $generated@@318))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@92 ($generated@@436 $generated@@507) $generated@@94) ($generated@@92 ($generated@@8 $generated@@507) $generated@@96))
 :pattern ( ($generated@@92 ($generated@@436 $generated@@507) $generated@@94))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 Int) ($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
 (=> (= (type $generated@@508) ($generated@@168 $generated@@511)) (and (=> (= $generated@@509 ($generated@@170 $generated@@508)) (= ($generated@@166 ($generated@@365 $generated@@508 $generated@@510) $generated@@509) $generated@@510)) (=> (not (= $generated@@509 ($generated@@170 $generated@@508))) (= ($generated@@166 ($generated@@365 $generated@@508 $generated@@510) $generated@@509) ($generated@@166 $generated@@508 $generated@@509))))))
 :pattern ( ($generated@@166 ($generated@@365 $generated@@508 $generated@@510) $generated@@509))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@95)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@514) $generated@@95) (= (type $generated@@515) $generated@@95)) (and ($generated@@393 $generated@@514) ($generated@@393 $generated@@515))) (= ($generated@@332 $generated@@514 $generated@@515) ($generated@@332 ($generated@@512 $generated@@514) ($generated@@512 $generated@@515))))
 :pattern ( ($generated@@332 $generated@@514 $generated@@515) ($generated@@393 $generated@@514))
 :pattern ( ($generated@@332 $generated@@514 $generated@@515) ($generated@@393 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) ($generated@@168 $generated@@169))
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@518) $generated@@95) (= (type $generated@@519) $generated@@95)) (and ($generated@@395 $generated@@518) ($generated@@395 $generated@@519))) (= ($generated@@332 $generated@@518 $generated@@519) ($generated@@407 ($generated@@516 $generated@@518) ($generated@@516 $generated@@519))))
 :pattern ( ($generated@@332 $generated@@518 $generated@@519) ($generated@@395 $generated@@518))
 :pattern ( ($generated@@332 $generated@@518 $generated@@519) ($generated@@395 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) ($generated@@168 $generated@@169))
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@95) (= (type $generated@@523) $generated@@95)) (and ($generated@@398 $generated@@522) ($generated@@398 $generated@@523))) (= ($generated@@332 $generated@@522 $generated@@523) ($generated@@407 ($generated@@520 $generated@@522) ($generated@@520 $generated@@523))))
 :pattern ( ($generated@@332 $generated@@522 $generated@@523) ($generated@@398 $generated@@522))
 :pattern ( ($generated@@332 $generated@@522 $generated@@523) ($generated@@398 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) ($generated@@168 $generated@@169))
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@95) (= (type $generated@@527) $generated@@95)) (and ($generated@@401 $generated@@526) ($generated@@401 $generated@@527))) (= ($generated@@161 $generated@@526 $generated@@527) ($generated@@407 ($generated@@524 $generated@@526) ($generated@@524 $generated@@527))))
 :pattern ( ($generated@@161 $generated@@526 $generated@@527) ($generated@@401 $generated@@526))
 :pattern ( ($generated@@161 $generated@@526 $generated@@527) ($generated@@401 $generated@@527))
)))
(assert  (and (and (forall (($generated@@532 T@U) ) (! (= (type ($generated@@528 $generated@@532)) $generated@@95)
 :pattern ( ($generated@@528 $generated@@532))
)) (= (type $generated@@530) $generated@@447)) (= (type $generated@@531) $generated@@95)))
(assert  (=> (<= 4 $generated@@346) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@95) (or ($generated@@529 $generated@@533) (and (not (= 4 $generated@@346)) (and ($generated@@92 $generated@@533 $generated@@94) ($generated@@445 $generated@@530 $generated@@533 ($generated@@349 $generated@@531)))))) ($generated@@92 ($generated@@528 $generated@@533) $generated@@319))
 :pattern ( ($generated@@528 $generated@@533))
))))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 ($generated@@467 (type $generated@@534))))
(let (($generated@@536 ($generated@@466 (type $generated@@534))))
 (=> (= (type $generated@@534) ($generated@@465 $generated@@536 $generated@@535)) (or (= $generated@@534 ($generated@@464 $generated@@536 $generated@@535)) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@536) ($generated@@0 ($generated@@108 ($generated@@463 $generated@@534) $generated@@537)))
 :no-pattern (type $generated@@537)
 :no-pattern ($generated $generated@@537)
 :no-pattern ($generated@@0 $generated@@537)
))))))
 :pattern ( ($generated@@463 $generated@@534))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@467 (type $generated@@539))))
(= (type ($generated@@538 $generated@@539)) ($generated@@103 $generated@@540 $generated@@4)))
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@467 (type $generated@@541))))
(let (($generated@@543 ($generated@@466 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@465 $generated@@543 $generated@@542)) (or (= $generated@@541 ($generated@@464 $generated@@543 $generated@@542)) (exists (($generated@@544 T@U) ) (!  (and (= (type $generated@@544) $generated@@542) ($generated@@0 ($generated@@108 ($generated@@538 $generated@@541) $generated@@544)))
 :no-pattern (type $generated@@544)
 :no-pattern ($generated $generated@@544)
 :no-pattern ($generated@@0 $generated@@544)
))))))
 :pattern ( ($generated@@538 $generated@@541))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@485 (type $generated@@545))))
(let (($generated@@547 ($generated@@484 (type $generated@@545))))
 (=> (= (type $generated@@545) ($generated@@483 $generated@@547 $generated@@546)) (or (= $generated@@545 ($generated@@482 $generated@@547 $generated@@546)) (exists (($generated@@548 T@U) ) (!  (and (= (type $generated@@548) $generated@@547) ($generated@@0 ($generated@@108 ($generated@@481 $generated@@545) $generated@@548)))
 :no-pattern (type $generated@@548)
 :no-pattern ($generated $generated@@548)
 :no-pattern ($generated@@0 $generated@@548)
))))))
 :pattern ( ($generated@@481 $generated@@545))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@485 (type $generated@@550))))
(= (type ($generated@@549 $generated@@550)) ($generated@@103 $generated@@551 $generated@@4)))
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@485 (type $generated@@552))))
(let (($generated@@554 ($generated@@484 (type $generated@@552))))
 (=> (= (type $generated@@552) ($generated@@483 $generated@@554 $generated@@553)) (or (= $generated@@552 ($generated@@482 $generated@@554 $generated@@553)) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@553) ($generated@@0 ($generated@@108 ($generated@@549 $generated@@552) $generated@@555)))
 :no-pattern (type $generated@@555)
 :no-pattern ($generated $generated@@555)
 :no-pattern ($generated@@0 $generated@@555)
))))))
 :pattern ( ($generated@@549 $generated@@552))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@103 $generated@@169 $generated@@2)) (= (type $generated@@557) $generated@@82)) (= ($generated@@92 $generated@@556 ($generated@@237 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@169) (< 0 ($generated ($generated@@108 $generated@@556 $generated@@558)))) ($generated@@311 $generated@@558 $generated@@557))
 :pattern ( ($generated@@108 $generated@@556 $generated@@558))
))))
 :pattern ( ($generated@@92 $generated@@556 ($generated@@237 $generated@@557)))
)))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@347 (not (= 1 $generated@@346))) ($generated@@92 $generated@@348 $generated@@318))))
(assert (= (type $generated@@560) $generated@@95))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@559 (not (= 1 $generated@@346))) ($generated@@92 $generated@@560 $generated@@318))))
(assert  (=> (<= 2 $generated@@346) (=> (or $generated@@561 (not (= 2 $generated@@346))) ($generated@@92 $generated@@531 $generated@@318))))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) ($generated@@168 $generated@@169)) (= ($generated@@92 ($generated@@167 $generated@@562) $generated@@318) ($generated@@92 $generated@@562 ($generated@@366 $generated@@318))))
 :pattern ( ($generated@@92 ($generated@@167 $generated@@562) $generated@@318))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) ($generated@@168 $generated@@169)) (= ($generated@@92 ($generated@@184 $generated@@563) $generated@@318) ($generated@@92 $generated@@563 ($generated@@366 $generated@@318))))
 :pattern ( ($generated@@92 ($generated@@184 $generated@@563) $generated@@318))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) ($generated@@168 $generated@@169)) (= ($generated@@92 ($generated@@188 $generated@@564) $generated@@94) ($generated@@92 $generated@@564 ($generated@@366 $generated@@94))))
 :pattern ( ($generated@@92 ($generated@@188 $generated@@564) $generated@@94))
)))
(assert  (=> (<= 2 $generated@@346) (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@447) (= (type $generated@@567) $generated@@95)) (= (type $generated@@568) $generated@@95)) (or ($generated@@565 $generated@@567 $generated@@568) (and (not (= 2 $generated@@346)) (and ($generated@@92 $generated@@567 $generated@@94) ($generated@@92 $generated@@568 $generated@@318))))) true)
 :pattern ( ($generated@@445 $generated@@566 $generated@@567 $generated@@568))
))))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@95) (= (type $generated@@570) $generated@@95)) (and ($generated@@404 $generated@@569) ($generated@@404 $generated@@570))) (= ($generated@@337 $generated@@569 $generated@@570)  (and (and (= ($generated@@201 $generated@@569) ($generated@@201 $generated@@570)) (= ($generated@@206 $generated@@569) ($generated@@206 $generated@@570))) (= ($generated@@210 $generated@@569) ($generated@@210 $generated@@570)))))
 :pattern ( ($generated@@337 $generated@@569 $generated@@570) ($generated@@404 $generated@@569))
 :pattern ( ($generated@@337 $generated@@569 $generated@@570) ($generated@@404 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@103 $generated@@169 $generated@@4)) (= (type $generated@@572) $generated@@82)) (= (type $generated@@573) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@571 ($generated@@352 $generated@@572) $generated@@573) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@169) ($generated@@0 ($generated@@108 $generated@@571 $generated@@574))) ($generated@@320 $generated@@574 $generated@@572 $generated@@573))
 :pattern ( ($generated@@108 $generated@@571 $generated@@574))
))))
 :pattern ( ($generated@@101 $generated@@571 ($generated@@352 $generated@@572) $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@103 $generated@@169 $generated@@4)) (= (type $generated@@576) $generated@@82)) (= (type $generated@@577) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@575 ($generated@@357 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@169) ($generated@@0 ($generated@@108 $generated@@575 $generated@@578))) ($generated@@320 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@108 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@101 $generated@@575 ($generated@@357 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
(= ($generated ($generated@@108 ($generated@@458 $generated@@580) $generated@@579)) 0))
 :pattern ( (let (($generated@@580 (type $generated@@579)))
($generated@@108 ($generated@@458 $generated@@580) $generated@@579)))
)))
(assert  (and (forall (($generated@@583 T@U) ) (! (= (type ($generated@@581 $generated@@583)) ($generated@@103 $generated@@169 $generated@@4))
 :pattern ( ($generated@@581 $generated@@583))
)) (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@467 (type $generated@@584))))
(let (($generated@@586 ($generated@@466 (type $generated@@584))))
(= (type ($generated@@582 $generated@@584)) ($generated@@103 $generated@@586 $generated@@585))))
 :pattern ( ($generated@@582 $generated@@584))
))))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@465 $generated@@169 $generated@@169)) (= (type $generated@@588) $generated@@169)) (= ($generated@@0 ($generated@@108 ($generated@@581 $generated@@587) $generated@@588))  (and ($generated@@0 ($generated@@108 ($generated@@463 $generated@@587) ($generated@@228 ($generated@@172 $generated@@95 $generated@@588)))) (= ($generated@@108 ($generated@@582 $generated@@587) ($generated@@228 ($generated@@172 $generated@@95 $generated@@588))) ($generated@@229 ($generated@@172 $generated@@95 $generated@@588))))))
 :pattern ( ($generated@@108 ($generated@@581 $generated@@587) $generated@@588))
)))
(assert  (and (forall (($generated@@591 T@U) ) (! (= (type ($generated@@589 $generated@@591)) ($generated@@103 $generated@@169 $generated@@4))
 :pattern ( ($generated@@589 $generated@@591))
)) (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@485 (type $generated@@592))))
(let (($generated@@594 ($generated@@484 (type $generated@@592))))
(= (type ($generated@@590 $generated@@592)) ($generated@@103 $generated@@594 $generated@@593))))
 :pattern ( ($generated@@590 $generated@@592))
))))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@483 $generated@@169 $generated@@169)) (= (type $generated@@596) $generated@@169)) (= ($generated@@0 ($generated@@108 ($generated@@589 $generated@@595) $generated@@596))  (and ($generated@@0 ($generated@@108 ($generated@@481 $generated@@595) ($generated@@228 ($generated@@172 $generated@@95 $generated@@596)))) (= ($generated@@108 ($generated@@590 $generated@@595) ($generated@@228 ($generated@@172 $generated@@95 $generated@@596))) ($generated@@229 ($generated@@172 $generated@@95 $generated@@596))))))
 :pattern ( ($generated@@108 ($generated@@589 $generated@@595) $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@598)))
(let (($generated@@600 ($generated@@466 (type $generated@@597))))
 (=> (= (type $generated@@597) ($generated@@465 $generated@@600 $generated@@599)) (= ($generated@@0 ($generated@@108 ($generated@@538 $generated@@597) $generated@@598)) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@600) (and ($generated@@0 ($generated@@108 ($generated@@463 $generated@@597) $generated@@601)) (= $generated@@598 ($generated@@108 ($generated@@582 $generated@@597) $generated@@601))))
 :pattern ( ($generated@@108 ($generated@@463 $generated@@597) $generated@@601))
 :pattern ( ($generated@@108 ($generated@@582 $generated@@597) $generated@@601))
))))))
 :pattern ( ($generated@@108 ($generated@@538 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@603)))
(let (($generated@@605 ($generated@@484 (type $generated@@602))))
 (=> (= (type $generated@@602) ($generated@@483 $generated@@605 $generated@@604)) (= ($generated@@0 ($generated@@108 ($generated@@549 $generated@@602) $generated@@603)) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@605) (and ($generated@@0 ($generated@@108 ($generated@@481 $generated@@602) $generated@@606)) (= $generated@@603 ($generated@@108 ($generated@@590 $generated@@602) $generated@@606))))
 :pattern ( ($generated@@108 ($generated@@481 $generated@@602) $generated@@606))
 :pattern ( ($generated@@108 ($generated@@590 $generated@@602) $generated@@606))
))))))
 :pattern ( ($generated@@108 ($generated@@549 $generated@@602) $generated@@603))
)))
(assert  (and (forall (($generated@@611 T@U) ) (! (= (type ($generated@@609 $generated@@611)) $generated@@169)
 :pattern ( ($generated@@609 $generated@@611))
)) (forall (($generated@@612 T@U) ) (! (= (type ($generated@@610 $generated@@612)) $generated@@169)
 :pattern ( ($generated@@610 $generated@@612))
))))
(assert  (=> (<= 4 $generated@@346) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@95) (or ($generated@@529 ($generated@@349 $generated@@613)) (and (not (= 4 $generated@@346)) (and ($generated@@92 $generated@@613 $generated@@94) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@445 $generated@@530 ($generated@@349 $generated@@613) ($generated@@349 $generated@@531))))))))) (and (=> (= ($generated@@362 ($generated@@341 ($generated@@349 $generated@@613))) ($generated@@362 0)) (and ($generated@@607 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@524 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@613))))) ($generated@@362 0)))) ($generated@@608 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@524 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@613))))) ($generated@@362 2)))))) (= ($generated@@528 ($generated@@349 $generated@@613)) (ite (= ($generated@@362 ($generated@@341 ($generated@@349 $generated@@613))) ($generated@@362 0)) (let (($generated@@614 ($generated@@609 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@524 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@613))))) ($generated@@362 0))))))
($generated@@192 $generated@@614 ($generated@@163 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@524 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@613))))) ($generated@@362 1)))) ($generated@@610 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@524 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@613))))) ($generated@@362 2)))))) $generated@@236))))
 :weight 3
 :pattern ( ($generated@@528 ($generated@@349 $generated@@613)))
))))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (! (= (type ($generated@@615 $generated@@616 $generated@@617)) $generated@@82)
 :pattern ( ($generated@@615 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@465 $generated@@169 $generated@@169)) (= (type $generated@@619) $generated@@82)) (= (type $generated@@620) $generated@@82)) (= (type $generated@@621) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@618 ($generated@@615 $generated@@619 $generated@@620) $generated@@621) (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@169) ($generated@@0 ($generated@@108 ($generated@@463 $generated@@618) $generated@@622))) (and ($generated@@320 ($generated@@108 ($generated@@582 $generated@@618) $generated@@622) $generated@@620 $generated@@621) ($generated@@320 $generated@@622 $generated@@619 $generated@@621)))
 :pattern ( ($generated@@108 ($generated@@582 $generated@@618) $generated@@622))
 :pattern ( ($generated@@108 ($generated@@463 $generated@@618) $generated@@622))
))))
 :pattern ( ($generated@@101 $generated@@618 ($generated@@615 $generated@@619 $generated@@620) $generated@@621))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (! (= (type ($generated@@623 $generated@@624 $generated@@625)) $generated@@82)
 :pattern ( ($generated@@623 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@483 $generated@@169 $generated@@169)) (= (type $generated@@627) $generated@@82)) (= (type $generated@@628) $generated@@82)) (= (type $generated@@629) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@626 ($generated@@623 $generated@@627 $generated@@628) $generated@@629) (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@169) ($generated@@0 ($generated@@108 ($generated@@481 $generated@@626) $generated@@630))) (and ($generated@@320 ($generated@@108 ($generated@@590 $generated@@626) $generated@@630) $generated@@628 $generated@@629) ($generated@@320 $generated@@630 $generated@@627 $generated@@629)))
 :pattern ( ($generated@@108 ($generated@@590 $generated@@626) $generated@@630))
 :pattern ( ($generated@@108 ($generated@@481 $generated@@626) $generated@@630))
))))
 :pattern ( ($generated@@101 $generated@@626 ($generated@@623 $generated@@627 $generated@@628) $generated@@629))
)))
(assert  (=> (<= 2 $generated@@346) (=> (or $generated@@561 (not (= 2 $generated@@346))) (and (and $generated@@347 $generated@@559) (= $generated@@531 ($generated@@349 ($generated@@184 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 ($generated@@167 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 $generated@@348))) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@560)))))))) ($generated@@452 ($generated@@349 $generated@@234)))))))))))
(assert  (=> (<= 2 $generated@@346) (=> (or $generated@@561 (not (= 2 $generated@@346))) (and (and $generated@@347 $generated@@559) (= $generated@@531 ($generated@@349 ($generated@@184 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 ($generated@@167 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 $generated@@348))) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@560)))))))) ($generated@@452 ($generated@@349 $generated@@234)))))))))))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (! (let (($generated@@633 ($generated@@173 (type $generated@@631))))
 (=> (and (and (= (type $generated@@631) ($generated@@168 $generated@@633)) (= (type $generated@@632) ($generated@@168 $generated@@633))) ($generated@@407 $generated@@631 $generated@@632)) (= $generated@@631 $generated@@632)))
 :pattern ( ($generated@@407 $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@95) (= (type $generated@@635) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@635)) (= ($generated@@101 ($generated@@428 $generated@@634) $generated@@318 $generated@@635) ($generated@@101 $generated@@634 $generated@@318 $generated@@635)))
 :pattern ( ($generated@@101 ($generated@@428 $generated@@634) $generated@@318 $generated@@635))
)))
(assert (forall (($generated@@636 Int) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@216 $generated@@637)) (= ($generated@@101 ($generated@@436 $generated@@636) $generated@@94 $generated@@637) ($generated@@101 ($generated@@8 $generated@@636) $generated@@96 $generated@@637)))
 :pattern ( ($generated@@101 ($generated@@436 $generated@@636) $generated@@94 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@95) ($generated@@92 $generated@@638 $generated@@319)) (or ($generated@@404 $generated@@638) ($generated@@380 $generated@@638)))
 :pattern ( ($generated@@380 $generated@@638) ($generated@@92 $generated@@638 $generated@@319))
 :pattern ( ($generated@@404 $generated@@638) ($generated@@92 $generated@@638 $generated@@319))
)))
(assert (forall (($generated@@640 T@T) ) (! (= (type ($generated@@639 $generated@@640)) ($generated@@103 $generated@@640 $generated@@4))
 :pattern ( ($generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (! (let (($generated@@642 ($generated@@485 (type $generated@@641))))
(let (($generated@@643 ($generated@@484 (type $generated@@641))))
 (=> (= (type $generated@@641) ($generated@@483 $generated@@643 $generated@@642)) (= (= $generated@@641 ($generated@@482 $generated@@643 $generated@@642)) (= ($generated@@481 $generated@@641) ($generated@@639 $generated@@643))))))
 :pattern ( ($generated@@481 $generated@@641))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@485 (type $generated@@644))))
(let (($generated@@646 ($generated@@484 (type $generated@@644))))
 (=> (= (type $generated@@644) ($generated@@483 $generated@@646 $generated@@645)) (= (= $generated@@644 ($generated@@482 $generated@@646 $generated@@645)) (= ($generated@@549 $generated@@644) ($generated@@639 $generated@@645))))))
 :pattern ( ($generated@@549 $generated@@644))
)))
(assert (forall (($generated@@647 T@U) ) (! (let (($generated@@648 ($generated@@485 (type $generated@@647))))
(let (($generated@@649 ($generated@@484 (type $generated@@647))))
 (=> (= (type $generated@@647) ($generated@@483 $generated@@649 $generated@@648)) (= (= $generated@@647 ($generated@@482 $generated@@649 $generated@@648)) (= ($generated@@589 $generated@@647) ($generated@@639 $generated@@169))))))
 :pattern ( ($generated@@589 $generated@@647))
)))
(assert (forall (($generated@@650 T@U) ) (! (let (($generated@@651 ($generated@@467 (type $generated@@650))))
(let (($generated@@652 ($generated@@466 (type $generated@@650))))
 (=> (= (type $generated@@650) ($generated@@465 $generated@@652 $generated@@651)) (or (= $generated@@650 ($generated@@464 $generated@@652 $generated@@651)) (exists (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (and (and (= (type $generated@@653) $generated@@169) (= (type $generated@@654) $generated@@169)) ($generated@@0 ($generated@@108 ($generated@@581 $generated@@650) ($generated@@452 ($generated@@310 $generated@@653 $generated@@654)))))
 :no-pattern (type $generated@@653)
 :no-pattern (type $generated@@654)
 :no-pattern ($generated $generated@@653)
 :no-pattern ($generated@@0 $generated@@653)
 :no-pattern ($generated $generated@@654)
 :no-pattern ($generated@@0 $generated@@654)
))))))
 :pattern ( ($generated@@581 $generated@@650))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@485 (type $generated@@655))))
(let (($generated@@657 ($generated@@484 (type $generated@@655))))
 (=> (= (type $generated@@655) ($generated@@483 $generated@@657 $generated@@656)) (or (= $generated@@655 ($generated@@482 $generated@@657 $generated@@656)) (exists (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (and (and (= (type $generated@@658) $generated@@169) (= (type $generated@@659) $generated@@169)) ($generated@@0 ($generated@@108 ($generated@@589 $generated@@655) ($generated@@452 ($generated@@310 $generated@@658 $generated@@659)))))
 :no-pattern (type $generated@@658)
 :no-pattern (type $generated@@659)
 :no-pattern ($generated $generated@@658)
 :no-pattern ($generated@@0 $generated@@658)
 :no-pattern ($generated $generated@@659)
 :no-pattern ($generated@@0 $generated@@659)
))))))
 :pattern ( ($generated@@589 $generated@@655))
)))
(assert  (=> (<= 4 $generated@@346) (forall (($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@95) (or ($generated@@529 $generated@@660) (and (not (= 4 $generated@@346)) (and ($generated@@92 $generated@@660 $generated@@94) ($generated@@445 $generated@@530 $generated@@660 ($generated@@349 $generated@@531)))))) (and (=> (= ($generated@@341 $generated@@660) ($generated@@362 0)) (and ($generated@@607 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@660)) ($generated@@362 0)))) ($generated@@608 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@660)) ($generated@@362 2)))))) (= ($generated@@528 $generated@@660) (ite (= ($generated@@341 $generated@@660) ($generated@@362 0)) (let (($generated@@661 ($generated@@609 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@660)) ($generated@@362 0))))))
($generated@@192 $generated@@661 ($generated@@163 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@660)) ($generated@@362 1)))) ($generated@@610 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@660)) ($generated@@362 2)))))) $generated@@236))))
 :pattern ( ($generated@@528 $generated@@660))
))))
(assert (forall (($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@169) ($generated@@311 $generated@@662 $generated@@46)) (and (= ($generated@@452 ($generated@@172 $generated@@2 $generated@@662)) $generated@@662) ($generated@@92 ($generated@@172 $generated@@2 $generated@@662) $generated@@46)))
 :pattern ( ($generated@@311 $generated@@662 $generated@@46))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@169) ($generated@@311 $generated@@663 $generated@@47)) (and (= ($generated@@452 ($generated@@172 $generated@@3 $generated@@663)) $generated@@663) ($generated@@92 ($generated@@172 $generated@@3 $generated@@663) $generated@@47)))
 :pattern ( ($generated@@311 $generated@@663 $generated@@47))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@169) ($generated@@311 $generated@@664 $generated@@44)) (and (= ($generated@@452 ($generated@@172 $generated@@4 $generated@@664)) $generated@@664) ($generated@@92 ($generated@@172 $generated@@4 $generated@@664) $generated@@44)))
 :pattern ( ($generated@@311 $generated@@664 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@665) 21))
(assert (forall (($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@169) ($generated@@311 $generated@@666 $generated@@45)) (and (= ($generated@@452 ($generated@@172 $generated@@665 $generated@@666)) $generated@@666) ($generated@@92 ($generated@@172 $generated@@665 $generated@@666) $generated@@45)))
 :pattern ( ($generated@@311 $generated@@666 $generated@@45))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@82) (= ($generated@@311 ($generated@@452 $generated@@667) $generated@@668) ($generated@@92 $generated@@667 $generated@@668)))
 :pattern ( ($generated@@311 ($generated@@452 $generated@@667) $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ) (! (let (($generated@@670 ($generated@@106 (type $generated@@669))))
 (=> (= (type $generated@@669) ($generated@@103 $generated@@670 $generated@@2)) (<= 0 ($generated@@457 $generated@@669))))
 :pattern ( ($generated@@457 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ) (! (let (($generated@@672 ($generated@@173 (type $generated@@671))))
 (=> (= (type $generated@@671) ($generated@@168 $generated@@672)) (<= 0 ($generated@@170 $generated@@671))))
 :pattern ( ($generated@@170 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (= (type $generated@@673) ($generated@@168 $generated@@169)) (= (type $generated@@674) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@674)) (= ($generated@@101 ($generated@@167 $generated@@673) $generated@@318 $generated@@674) ($generated@@101 $generated@@673 ($generated@@366 $generated@@318) $generated@@674)))
 :pattern ( ($generated@@101 ($generated@@167 $generated@@673) $generated@@318 $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (= (type $generated@@675) ($generated@@168 $generated@@169)) (= (type $generated@@676) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@676)) (= ($generated@@101 ($generated@@184 $generated@@675) $generated@@318 $generated@@676) ($generated@@101 $generated@@675 ($generated@@366 $generated@@318) $generated@@676)))
 :pattern ( ($generated@@101 ($generated@@184 $generated@@675) $generated@@318 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@677) ($generated@@168 $generated@@169)) (= (type $generated@@678) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@678)) (= ($generated@@101 ($generated@@188 $generated@@677) $generated@@94 $generated@@678) ($generated@@101 $generated@@677 ($generated@@366 $generated@@94) $generated@@678)))
 :pattern ( ($generated@@101 ($generated@@188 $generated@@677) $generated@@94 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ) (! (= (type ($generated@@679 $generated@@680)) $generated@@82)
 :pattern ( ($generated@@679 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@82) (= (type $generated@@682) $generated@@82)) (= ($generated@@679 ($generated@@615 $generated@@681 $generated@@682)) $generated@@681))
 :pattern ( ($generated@@615 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ) (! (= (type ($generated@@683 $generated@@684)) $generated@@82)
 :pattern ( ($generated@@683 $generated@@684))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) $generated@@82) (= (type $generated@@686) $generated@@82)) (= ($generated@@683 ($generated@@615 $generated@@685 $generated@@686)) $generated@@686))
 :pattern ( ($generated@@615 $generated@@685 $generated@@686))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) $generated@@82) (= (type $generated@@688) $generated@@82)) (= ($generated@@90 ($generated@@615 $generated@@687 $generated@@688)) $generated@@58))
 :pattern ( ($generated@@615 $generated@@687 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ) (! (= (type ($generated@@689 $generated@@690)) $generated@@82)
 :pattern ( ($generated@@689 $generated@@690))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) $generated@@82) (= (type $generated@@692) $generated@@82)) (= ($generated@@689 ($generated@@623 $generated@@691 $generated@@692)) $generated@@691))
 :pattern ( ($generated@@623 $generated@@691 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ) (! (= (type ($generated@@693 $generated@@694)) $generated@@82)
 :pattern ( ($generated@@693 $generated@@694))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) $generated@@82) (= (type $generated@@696) $generated@@82)) (= ($generated@@693 ($generated@@623 $generated@@695 $generated@@696)) $generated@@696))
 :pattern ( ($generated@@623 $generated@@695 $generated@@696))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@697) $generated@@82) (= (type $generated@@698) $generated@@82)) (= ($generated@@90 ($generated@@623 $generated@@697 $generated@@698)) $generated@@59))
 :pattern ( ($generated@@623 $generated@@697 $generated@@698))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) $generated@@169) (= (type $generated@@700) $generated@@169)) (= ($generated@@193 ($generated@@310 $generated@@699 $generated@@700)) $generated@@61))
 :pattern ( ($generated@@310 $generated@@699 $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ) (! (= (type ($generated@@701 $generated@@702)) $generated@@82)
 :pattern ( ($generated@@701 $generated@@702))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) $generated@@82) (= (type $generated@@704) $generated@@82)) (= ($generated@@701 ($generated@@221 $generated@@703 $generated@@704)) $generated@@703))
 :pattern ( ($generated@@221 $generated@@703 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ) (! (= (type ($generated@@705 $generated@@706)) $generated@@82)
 :pattern ( ($generated@@705 $generated@@706))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@82) (= (type $generated@@708) $generated@@82)) (= ($generated@@705 ($generated@@221 $generated@@707 $generated@@708)) $generated@@708))
 :pattern ( ($generated@@221 $generated@@707 $generated@@708))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@709) $generated@@169) (= (type $generated@@710) $generated@@169)) (= ($generated@@228 ($generated@@310 $generated@@709 $generated@@710)) $generated@@709))
 :pattern ( ($generated@@310 $generated@@709 $generated@@710))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (= (type $generated@@711) $generated@@169) (= (type $generated@@712) $generated@@169)) (= ($generated@@229 ($generated@@310 $generated@@711 $generated@@712)) $generated@@712))
 :pattern ( ($generated@@310 $generated@@711 $generated@@712))
)))
(assert (forall (($generated@@713 Int) ($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@95) (= ($generated@@193 ($generated@@93 $generated@@713 $generated@@714)) $generated@@73))
 :pattern ( ($generated@@93 $generated@@713 $generated@@714))
)))
(assert (forall (($generated@@715 Int) ($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@95) (= ($generated@@341 ($generated@@93 $generated@@715 $generated@@716)) $generated@@715))
 :pattern ( ($generated@@93 $generated@@715 $generated@@716))
)))
(assert (forall (($generated@@717 Int) ($generated@@718 T@U) ) (!  (=> (= (type $generated@@718) $generated@@95) (= ($generated@@342 ($generated@@93 $generated@@717 $generated@@718)) $generated@@718))
 :pattern ( ($generated@@93 $generated@@717 $generated@@718))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (and (= (type $generated@@719) ($generated@@168 $generated@@169)) (= (type $generated@@720) $generated@@82)) (= (type $generated@@721) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@719 ($generated@@366 $generated@@720) $generated@@721) (forall (($generated@@722 Int) ) (!  (=> (and (<= 0 $generated@@722) (< $generated@@722 ($generated@@170 $generated@@719))) ($generated@@320 ($generated@@166 $generated@@719 $generated@@722) $generated@@720 $generated@@721))
 :pattern ( ($generated@@166 $generated@@719 $generated@@722))
))))
 :pattern ( ($generated@@101 $generated@@719 ($generated@@366 $generated@@720) $generated@@721))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 Int) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@723) $generated@@169) (= (type $generated@@725) $generated@@169)) (= ($generated@@192 ($generated@@349 $generated@@723) ($generated@@362 $generated@@724) ($generated@@349 $generated@@725)) ($generated@@349 ($generated@@192 $generated@@723 $generated@@724 $generated@@725))))
 :pattern ( ($generated@@192 ($generated@@349 $generated@@723) ($generated@@362 $generated@@724) ($generated@@349 $generated@@725)))
)))
(assert (forall (($generated@@727 Int) ) (! (= ($generated@@726 ($generated@@102 $generated@@727)) $generated@@727)
 :pattern ( ($generated@@102 $generated@@727))
)))
(assert (forall (($generated@@729 T@U) ) (! (= (type ($generated@@728 $generated@@729)) $generated@@82)
 :pattern ( ($generated@@728 $generated@@729))
)))
(assert (forall (($generated@@730 T@U) ) (!  (=> (= (type $generated@@730) $generated@@82) (= ($generated@@728 ($generated@@352 $generated@@730)) $generated@@730))
 :pattern ( ($generated@@352 $generated@@730))
)))
(assert (forall (($generated@@731 T@U) ) (!  (=> (= (type $generated@@731) $generated@@82) (= ($generated@@90 ($generated@@352 $generated@@731)) $generated@@54))
 :pattern ( ($generated@@352 $generated@@731))
)))
(assert (forall (($generated@@733 T@U) ) (! (= (type ($generated@@732 $generated@@733)) $generated@@82)
 :pattern ( ($generated@@732 $generated@@733))
)))
(assert (forall (($generated@@734 T@U) ) (!  (=> (= (type $generated@@734) $generated@@82) (= ($generated@@732 ($generated@@357 $generated@@734)) $generated@@734))
 :pattern ( ($generated@@357 $generated@@734))
)))
(assert (forall (($generated@@735 T@U) ) (!  (=> (= (type $generated@@735) $generated@@82) (= ($generated@@90 ($generated@@357 $generated@@735)) $generated@@55))
 :pattern ( ($generated@@357 $generated@@735))
)))
(assert (forall (($generated@@737 T@U) ) (! (= (type ($generated@@736 $generated@@737)) $generated@@82)
 :pattern ( ($generated@@736 $generated@@737))
)))
(assert (forall (($generated@@738 T@U) ) (!  (=> (= (type $generated@@738) $generated@@82) (= ($generated@@736 ($generated@@237 $generated@@738)) $generated@@738))
 :pattern ( ($generated@@237 $generated@@738))
)))
(assert (forall (($generated@@739 T@U) ) (!  (=> (= (type $generated@@739) $generated@@82) (= ($generated@@90 ($generated@@237 $generated@@739)) $generated@@56))
 :pattern ( ($generated@@237 $generated@@739))
)))
(assert (forall (($generated@@741 T@U) ) (! (= (type ($generated@@740 $generated@@741)) $generated@@82)
 :pattern ( ($generated@@740 $generated@@741))
)))
(assert (forall (($generated@@742 T@U) ) (!  (=> (= (type $generated@@742) $generated@@82) (= ($generated@@740 ($generated@@366 $generated@@742)) $generated@@742))
 :pattern ( ($generated@@366 $generated@@742))
)))
(assert (forall (($generated@@743 T@U) ) (!  (=> (= (type $generated@@743) $generated@@82) (= ($generated@@90 ($generated@@366 $generated@@743)) $generated@@57))
 :pattern ( ($generated@@366 $generated@@743))
)))
(assert (forall (($generated@@744 T@U) ) (!  (=> (= (type $generated@@744) $generated@@95) (= ($generated@@193 ($generated@@428 $generated@@744)) $generated@@66))
 :pattern ( ($generated@@428 $generated@@744))
)))
(assert (forall (($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@95) (= ($generated@@512 ($generated@@428 $generated@@745)) $generated@@745))
 :pattern ( ($generated@@428 $generated@@745))
)))
(assert (forall (($generated@@746 T@U) ) (!  (=> (= (type $generated@@746) ($generated@@168 $generated@@169)) (= ($generated@@193 ($generated@@167 $generated@@746)) $generated@@67))
 :pattern ( ($generated@@167 $generated@@746))
)))
(assert (forall (($generated@@747 T@U) ) (!  (=> (= (type $generated@@747) ($generated@@168 $generated@@169)) (= ($generated@@516 ($generated@@167 $generated@@747)) $generated@@747))
 :pattern ( ($generated@@167 $generated@@747))
)))
(assert (forall (($generated@@748 T@U) ) (!  (=> (= (type $generated@@748) ($generated@@168 $generated@@169)) (= ($generated@@193 ($generated@@184 $generated@@748)) $generated@@69))
 :pattern ( ($generated@@184 $generated@@748))
)))
(assert (forall (($generated@@749 T@U) ) (!  (=> (= (type $generated@@749) ($generated@@168 $generated@@169)) (= ($generated@@520 ($generated@@184 $generated@@749)) $generated@@749))
 :pattern ( ($generated@@184 $generated@@749))
)))
(assert (forall (($generated@@750 Int) ) (! (= ($generated@@193 ($generated@@436 $generated@@750)) $generated@@70)
 :pattern ( ($generated@@436 $generated@@750))
)))
(assert (forall (($generated@@751 Int) ) (! (= ($generated@@163 ($generated@@436 $generated@@751)) $generated@@751)
 :pattern ( ($generated@@436 $generated@@751))
)))
(assert (forall (($generated@@752 T@U) ) (!  (=> (= (type $generated@@752) ($generated@@168 $generated@@169)) (= ($generated@@193 ($generated@@188 $generated@@752)) $generated@@72))
 :pattern ( ($generated@@188 $generated@@752))
)))
(assert (forall (($generated@@753 T@U) ) (!  (=> (= (type $generated@@753) ($generated@@168 $generated@@169)) (= ($generated@@524 ($generated@@188 $generated@@753)) $generated@@753))
 :pattern ( ($generated@@188 $generated@@753))
)))
(assert (forall (($generated@@754 T@U) ) (! (let (($generated@@755 (type $generated@@754)))
(= ($generated@@172 $generated@@755 ($generated@@452 $generated@@754)) $generated@@754))
 :pattern ( ($generated@@452 $generated@@754))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (and (= (type $generated@@756) ($generated@@465 $generated@@169 $generated@@169)) (= (type $generated@@757) $generated@@82)) (= (type $generated@@758) $generated@@82)) (= ($generated@@92 $generated@@756 ($generated@@615 $generated@@757 $generated@@758)) (forall (($generated@@759 T@U) ) (!  (=> (and (= (type $generated@@759) $generated@@169) ($generated@@0 ($generated@@108 ($generated@@463 $generated@@756) $generated@@759))) (and ($generated@@311 ($generated@@108 ($generated@@582 $generated@@756) $generated@@759) $generated@@758) ($generated@@311 $generated@@759 $generated@@757)))
 :pattern ( ($generated@@108 ($generated@@582 $generated@@756) $generated@@759))
 :pattern ( ($generated@@108 ($generated@@463 $generated@@756) $generated@@759))
))))
 :pattern ( ($generated@@92 $generated@@756 ($generated@@615 $generated@@757 $generated@@758)))
)))
(assert (forall (($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (= (type $generated@@760) ($generated@@483 $generated@@169 $generated@@169)) (= (type $generated@@761) $generated@@82)) (= (type $generated@@762) $generated@@82)) (= ($generated@@92 $generated@@760 ($generated@@623 $generated@@761 $generated@@762)) (forall (($generated@@763 T@U) ) (!  (=> (and (= (type $generated@@763) $generated@@169) ($generated@@0 ($generated@@108 ($generated@@481 $generated@@760) $generated@@763))) (and ($generated@@311 ($generated@@108 ($generated@@590 $generated@@760) $generated@@763) $generated@@762) ($generated@@311 $generated@@763 $generated@@761)))
 :pattern ( ($generated@@108 ($generated@@590 $generated@@760) $generated@@763))
 :pattern ( ($generated@@108 ($generated@@481 $generated@@760) $generated@@763))
))))
 :pattern ( ($generated@@92 $generated@@760 ($generated@@623 $generated@@761 $generated@@762)))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (= (type $generated@@765) $generated@@169) (= (type $generated@@766) $generated@@169)) (< ($generated@@764 $generated@@765) ($generated@@171 ($generated@@310 $generated@@765 $generated@@766))))
 :pattern ( ($generated@@310 $generated@@765 $generated@@766))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (= (type $generated@@767) $generated@@169) (= (type $generated@@768) $generated@@169)) (< ($generated@@764 $generated@@768) ($generated@@171 ($generated@@310 $generated@@767 $generated@@768))))
 :pattern ( ($generated@@310 $generated@@767 $generated@@768))
)))
(assert (forall (($generated@@769 Int) ($generated@@770 T@U) ) (!  (=> (= (type $generated@@770) $generated@@95) (< ($generated@@171 $generated@@770) ($generated@@171 ($generated@@93 $generated@@769 $generated@@770))))
 :pattern ( ($generated@@93 $generated@@769 $generated@@770))
)))
(assert  (=> (<= 2 $generated@@346) (forall (($generated@@771 T@U) ($generated@@772 T@U) ($generated@@773 T@U) ) (!  (=> (and (and (and (= (type $generated@@771) $generated@@447) (= (type $generated@@772) $generated@@95)) (= (type $generated@@773) $generated@@95)) (or ($generated@@565 ($generated@@349 $generated@@772) ($generated@@349 $generated@@773)) (and (not (= 2 $generated@@346)) (and ($generated@@92 $generated@@772 $generated@@94) ($generated@@92 $generated@@773 $generated@@318))))) (and (=> (not ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@162 ($generated@@349 $generated@@772)))))) (and (=> ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@401 ($generated@@349 $generated@@772))))) (let (($generated@@774 ($generated@@349 ($generated@@524 ($generated@@349 $generated@@772)))))
 (=> ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@395 ($generated@@349 $generated@@773))))) (=> (= ($generated@@170 $generated@@774) ($generated@@170 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@773))))) (forall (($generated@@775 Int) ) (!  (=> (<= ($generated@@362 0) $generated@@775) (=> (< $generated@@775 ($generated@@170 $generated@@774)) ($generated@@565 ($generated@@172 $generated@@95 ($generated@@166 $generated@@774 $generated@@775)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@773))) $generated@@775)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@773) $generated@@775)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@774 $generated@@775)))
)))))) (=> (not ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@401 ($generated@@349 $generated@@772)))))) (let (($generated@@776 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@772)))))
(let (($generated@@777 ($generated@@362 ($generated@@341 ($generated@@349 $generated@@772)))))
 (=> ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@398 ($generated@@349 $generated@@773))))) (=> (< $generated@@777 ($generated@@170 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@773))))) ($generated@@565 $generated@@776 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@773))) $generated@@777)))))))))) (= ($generated@@445 ($generated@@446 $generated@@771) ($generated@@349 $generated@@772) ($generated@@349 $generated@@773)) (ite ($generated@@162 ($generated@@349 $generated@@772)) ($generated@@374 ($generated@@349 $generated@@773)) (ite ($generated@@401 ($generated@@349 $generated@@772)) (let (($generated@@778 ($generated@@349 ($generated@@524 ($generated@@349 $generated@@772)))))
 (and (and ($generated@@395 ($generated@@349 $generated@@773)) (= ($generated@@170 $generated@@778) ($generated@@170 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@773)))))) (forall (($generated@@779 Int) ) (!  (=> true (=> (and (<= ($generated@@362 0) $generated@@779) (< $generated@@779 ($generated@@170 $generated@@778))) ($generated@@445 ($generated@@446 $generated@@771) ($generated@@172 $generated@@95 ($generated@@166 $generated@@778 $generated@@779)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@773))) $generated@@779)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@773) $generated@@779)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@778 $generated@@779)))
)))) (let (($generated@@780 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@772)))))
(let (($generated@@781 ($generated@@362 ($generated@@341 ($generated@@349 $generated@@772)))))
 (and (and ($generated@@398 ($generated@@349 $generated@@773)) (< $generated@@781 ($generated@@170 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@773)))))) ($generated@@445 ($generated@@446 $generated@@771) $generated@@780 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@773))) $generated@@781)))))))))))
 :weight 3
 :pattern ( ($generated@@445 ($generated@@446 $generated@@771) ($generated@@349 $generated@@772) ($generated@@349 $generated@@773)))
))))
(assert (forall (($generated@@782 T@U) ($generated@@783 T@U) ($generated@@784 T@U) ) (!  (=> (and (and (and (= (type $generated@@782) $generated@@169) (= (type $generated@@783) $generated@@82)) (= (type $generated@@784) $generated@@82)) ($generated@@311 $generated@@782 ($generated@@615 $generated@@783 $generated@@784))) (and (= ($generated@@452 ($generated@@172 ($generated@@465 $generated@@169 $generated@@169) $generated@@782)) $generated@@782) ($generated@@92 ($generated@@172 ($generated@@465 $generated@@169 $generated@@169) $generated@@782) ($generated@@615 $generated@@783 $generated@@784))))
 :pattern ( ($generated@@311 $generated@@782 ($generated@@615 $generated@@783 $generated@@784)))
)))
(assert (forall (($generated@@785 T@U) ($generated@@786 T@U) ($generated@@787 T@U) ) (!  (=> (and (and (and (= (type $generated@@785) $generated@@169) (= (type $generated@@786) $generated@@82)) (= (type $generated@@787) $generated@@82)) ($generated@@311 $generated@@785 ($generated@@623 $generated@@786 $generated@@787))) (and (= ($generated@@452 ($generated@@172 ($generated@@483 $generated@@169 $generated@@169) $generated@@785)) $generated@@785) ($generated@@92 ($generated@@172 ($generated@@483 $generated@@169 $generated@@169) $generated@@785) ($generated@@623 $generated@@786 $generated@@787))))
 :pattern ( ($generated@@311 $generated@@785 ($generated@@623 $generated@@786 $generated@@787)))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ($generated@@790 T@U) ) (!  (=> (and (and (and (= (type $generated@@788) $generated@@82) (= (type $generated@@789) $generated@@82)) (= (type $generated@@790) $generated@@169)) ($generated@@311 $generated@@790 ($generated@@221 $generated@@788 $generated@@789))) (and (= ($generated@@452 ($generated@@172 $generated@@95 $generated@@790)) $generated@@790) ($generated@@92 ($generated@@172 $generated@@95 $generated@@790) ($generated@@221 $generated@@788 $generated@@789))))
 :pattern ( ($generated@@311 $generated@@790 ($generated@@221 $generated@@788 $generated@@789)))
)))
(assert  (=> (<= 3 $generated@@346) (forall (($generated@@791 T@U) ) (!  (=> (and (= (type $generated@@791) $generated@@95) (or ($generated@@607 $generated@@791) (and (not (= 3 $generated@@346)) (and ($generated@@92 $generated@@791 $generated@@94) ($generated@@445 $generated@@530 $generated@@791 ($generated@@349 $generated@@348)))))) ($generated@@311 ($generated@@609 $generated@@791) $generated@@321))
 :pattern ( ($generated@@609 $generated@@791))
))))
(assert  (=> (<= 3 $generated@@346) (forall (($generated@@792 T@U) ) (!  (=> (and (= (type $generated@@792) $generated@@95) (or ($generated@@608 $generated@@792) (and (not (= 3 $generated@@346)) (and ($generated@@92 $generated@@792 $generated@@94) ($generated@@445 $generated@@530 $generated@@792 ($generated@@349 $generated@@560)))))) ($generated@@311 ($generated@@610 $generated@@792) $generated@@322))
 :pattern ( ($generated@@610 $generated@@792))
))))
(assert  (=> (<= 2 $generated@@346) (forall (($generated@@793 T@U) ($generated@@794 T@U) ($generated@@795 T@U) ) (!  (=> (and (and (and (= (type $generated@@793) $generated@@447) (= (type $generated@@794) $generated@@95)) (= (type $generated@@795) $generated@@95)) (or ($generated@@565 $generated@@794 $generated@@795) (and (not (= 2 $generated@@346)) (and ($generated@@92 $generated@@794 $generated@@94) ($generated@@92 $generated@@795 $generated@@318))))) (and (=> (not ($generated@@162 $generated@@794)) (and (=> ($generated@@401 $generated@@794) (let (($generated@@796 ($generated@@524 $generated@@794)))
 (=> ($generated@@395 $generated@@795) (=> (= ($generated@@170 $generated@@796) ($generated@@170 ($generated@@516 $generated@@795))) (forall (($generated@@797 Int) ) (!  (=> (<= ($generated@@362 0) $generated@@797) (=> (< $generated@@797 ($generated@@170 $generated@@796)) ($generated@@565 ($generated@@172 $generated@@95 ($generated@@166 $generated@@796 $generated@@797)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@795) $generated@@797)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@795) $generated@@797)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@796 $generated@@797)))
)))))) (=> (not ($generated@@401 $generated@@794)) (let (($generated@@798 ($generated@@342 $generated@@794)))
(let (($generated@@799 ($generated@@341 $generated@@794)))
 (=> ($generated@@398 $generated@@795) (=> (< $generated@@799 ($generated@@170 ($generated@@520 $generated@@795))) ($generated@@565 $generated@@798 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@520 $generated@@795) $generated@@799)))))))))) (= ($generated@@445 ($generated@@446 $generated@@793) $generated@@794 $generated@@795) (ite ($generated@@162 $generated@@794) ($generated@@374 $generated@@795) (ite ($generated@@401 $generated@@794) (let (($generated@@800 ($generated@@524 $generated@@794)))
 (and (and ($generated@@395 $generated@@795) (= ($generated@@170 $generated@@800) ($generated@@170 ($generated@@516 $generated@@795)))) (forall (($generated@@801 Int) ) (!  (=> true (=> (and (<= ($generated@@362 0) $generated@@801) (< $generated@@801 ($generated@@170 $generated@@800))) ($generated@@445 $generated@@793 ($generated@@172 $generated@@95 ($generated@@166 $generated@@800 $generated@@801)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@795) $generated@@801)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@795) $generated@@801)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@800 $generated@@801)))
)))) (let (($generated@@802 ($generated@@342 $generated@@794)))
(let (($generated@@803 ($generated@@341 $generated@@794)))
 (and (and ($generated@@398 $generated@@795) (< $generated@@803 ($generated@@170 ($generated@@520 $generated@@795)))) ($generated@@445 $generated@@793 $generated@@802 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@520 $generated@@795) $generated@@803)))))))))))
 :pattern ( ($generated@@445 ($generated@@446 $generated@@793) $generated@@794 $generated@@795))
))))
(assert (forall (($generated@@804 T@U) ) (!  (=> (= (type $generated@@804) $generated@@95) (< ($generated@@171 $generated@@804) ($generated@@171 ($generated@@428 $generated@@804))))
 :pattern ( ($generated@@428 $generated@@804))
)))
(assert (forall (($generated@@806 T@U) ) (!  (=> (= (type $generated@@806) ($generated@@168 $generated@@169)) (< ($generated@@805 $generated@@806) ($generated@@171 ($generated@@167 $generated@@806))))
 :pattern ( ($generated@@167 $generated@@806))
)))
(assert (forall (($generated@@807 T@U) ) (!  (=> (= (type $generated@@807) ($generated@@168 $generated@@169)) (< ($generated@@805 $generated@@807) ($generated@@171 ($generated@@184 $generated@@807))))
 :pattern ( ($generated@@184 $generated@@807))
)))
(assert (forall (($generated@@808 T@U) ) (!  (=> (= (type $generated@@808) ($generated@@168 $generated@@169)) (< ($generated@@805 $generated@@808) ($generated@@171 ($generated@@188 $generated@@808))))
 :pattern ( ($generated@@188 $generated@@808))
)))
(assert (forall (($generated@@809 T@U) ) (! (let (($generated@@810 (type $generated@@809)))
 (not ($generated@@0 ($generated@@108 ($generated@@639 $generated@@810) $generated@@809))))
 :pattern ( (let (($generated@@810 (type $generated@@809)))
($generated@@108 ($generated@@639 $generated@@810) $generated@@809)))
)))
(assert (forall (($generated@@812 T@U) ) (! (= (type ($generated@@811 $generated@@812)) $generated@@87)
 :pattern ( ($generated@@811 $generated@@812))
)))
(assert (forall (($generated@@813 T@U) ($generated@@814 T@U) ) (!  (=> (and (= (type $generated@@813) $generated@@82) (= (type $generated@@814) $generated@@82)) (and (= ($generated@@90 ($generated@@221 $generated@@813 $generated@@814)) $generated@@62) (= ($generated@@811 ($generated@@221 $generated@@813 $generated@@814)) $generated@@77)))
 :pattern ( ($generated@@221 $generated@@813 $generated@@814))
)))
(assert  (and (forall (($generated@@817 T@U) ) (! (let (($generated@@818 ($generated@@173 (type $generated@@817))))
(= (type ($generated@@815 $generated@@817)) ($generated@@168 $generated@@818)))
 :pattern ( ($generated@@815 $generated@@817))
)) (forall (($generated@@819 T@U) ) (! (let (($generated@@820 ($generated@@173 (type $generated@@819))))
(= (type ($generated@@816 $generated@@819)) $generated@@820))
 :pattern ( ($generated@@816 $generated@@819))
))))
(assert (forall (($generated@@821 T@U) ($generated@@822 T@U) ) (! (let (($generated@@823 (type $generated@@822)))
 (=> (= (type $generated@@821) ($generated@@168 $generated@@823)) (and (= ($generated@@815 ($generated@@365 $generated@@821 $generated@@822)) $generated@@821) (= ($generated@@816 ($generated@@365 $generated@@821 $generated@@822)) $generated@@822))))
 :pattern ( ($generated@@365 $generated@@821 $generated@@822))
)))
(assert (forall (($generated@@824 T@U) ($generated@@825 T@U) ) (!  (=> (and (and (= (type $generated@@824) $generated@@95) (= (type $generated@@825) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@825) (and ($generated@@404 $generated@@824) ($generated@@101 $generated@@824 $generated@@319 $generated@@825)))) ($generated@@320 ($generated@@201 $generated@@824) $generated@@321 $generated@@825))
 :pattern ( ($generated@@320 ($generated@@201 $generated@@824) $generated@@321 $generated@@825))
)))
(assert (forall (($generated@@826 T@U) ($generated@@827 T@U) ) (!  (=> (and (and (= (type $generated@@826) $generated@@95) (= (type $generated@@827) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@827) (and ($generated@@404 $generated@@826) ($generated@@101 $generated@@826 $generated@@319 $generated@@827)))) ($generated@@320 ($generated@@210 $generated@@826) $generated@@322 $generated@@827))
 :pattern ( ($generated@@320 ($generated@@210 $generated@@826) $generated@@322 $generated@@827))
)))
(assert (forall (($generated@@828 T@U) ) (!  (=> (and (= (type $generated@@828) $generated@@95) ($generated@@92 $generated@@828 $generated@@94)) (or (or ($generated@@162 $generated@@828) ($generated@@401 $generated@@828)) ($generated@@340 $generated@@828)))
 :pattern ( ($generated@@340 $generated@@828) ($generated@@92 $generated@@828 $generated@@94))
 :pattern ( ($generated@@401 $generated@@828) ($generated@@92 $generated@@828 $generated@@94))
 :pattern ( ($generated@@162 $generated@@828) ($generated@@92 $generated@@828 $generated@@94))
)))
(assert (forall (($generated@@829 T@U) ) (!  (=> (= (type $generated@@829) $generated@@95) (= ($generated@@764 ($generated@@452 $generated@@829)) ($generated@@171 $generated@@829)))
 :pattern ( ($generated@@764 ($generated@@452 $generated@@829)))
)))
(assert (forall (($generated@@830 T@U) ) (!  (=> (and (= (type $generated@@830) $generated@@169) ($generated@@311 $generated@@830 ($generated@@102 0))) (and (= ($generated@@452 ($generated@@172 $generated@@2 $generated@@830)) $generated@@830) ($generated@@92 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@830) ($generated@@102 0))))
 :pattern ( ($generated@@311 $generated@@830 ($generated@@102 0)))
)))
(assert (forall (($generated@@831 T@U) ($generated@@832 T@U) ) (!  (=> (and (and (= (type $generated@@831) $generated@@169) (= (type $generated@@832) $generated@@82)) ($generated@@311 $generated@@831 ($generated@@352 $generated@@832))) (and (= ($generated@@452 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@831)) $generated@@831) ($generated@@92 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@831) ($generated@@352 $generated@@832))))
 :pattern ( ($generated@@311 $generated@@831 ($generated@@352 $generated@@832)))
)))
(assert (forall (($generated@@833 T@U) ($generated@@834 T@U) ) (!  (=> (and (and (= (type $generated@@833) $generated@@169) (= (type $generated@@834) $generated@@82)) ($generated@@311 $generated@@833 ($generated@@357 $generated@@834))) (and (= ($generated@@452 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@833)) $generated@@833) ($generated@@92 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@833) ($generated@@357 $generated@@834))))
 :pattern ( ($generated@@311 $generated@@833 ($generated@@357 $generated@@834)))
)))
(assert (forall (($generated@@835 T@U) ($generated@@836 T@U) ) (!  (=> (and (and (= (type $generated@@835) $generated@@169) (= (type $generated@@836) $generated@@82)) ($generated@@311 $generated@@835 ($generated@@237 $generated@@836))) (and (= ($generated@@452 ($generated@@172 ($generated@@103 $generated@@169 $generated@@2) $generated@@835)) $generated@@835) ($generated@@92 ($generated@@172 ($generated@@103 $generated@@169 $generated@@2) $generated@@835) ($generated@@237 $generated@@836))))
 :pattern ( ($generated@@311 $generated@@835 ($generated@@237 $generated@@836)))
)))
(assert (forall (($generated@@837 T@U) ($generated@@838 T@U) ) (!  (=> (and (and (= (type $generated@@837) $generated@@169) (= (type $generated@@838) $generated@@82)) ($generated@@311 $generated@@837 ($generated@@366 $generated@@838))) (and (= ($generated@@452 ($generated@@172 ($generated@@168 $generated@@169) $generated@@837)) $generated@@837) ($generated@@92 ($generated@@172 ($generated@@168 $generated@@169) $generated@@837) ($generated@@366 $generated@@838))))
 :pattern ( ($generated@@311 $generated@@837 ($generated@@366 $generated@@838)))
)))
(assert (= ($generated@@90 $generated@@96) $generated@@63))
(assert (= ($generated@@811 $generated@@96) $generated@@78))
(assert (= ($generated@@90 $generated@@318) $generated@@65))
(assert (= ($generated@@811 $generated@@318) $generated@@79))
(assert (= ($generated@@90 $generated@@94) $generated@@71))
(assert (= ($generated@@811 $generated@@94) $generated@@80))
(assert (= ($generated@@90 $generated@@319) $generated@@75))
(assert (= ($generated@@811 $generated@@319) $generated@@81))
(assert (forall (($generated@@839 T@U) ($generated@@840 T@U) ($generated@@841 T@U) ) (!  (=> (and (and (= (type $generated@@839) ($generated@@103 $generated@@169 $generated@@2)) (= (type $generated@@840) $generated@@82)) (= (type $generated@@841) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@839 ($generated@@237 $generated@@840) $generated@@841) (forall (($generated@@842 T@U) ) (!  (=> (and (= (type $generated@@842) $generated@@169) (< 0 ($generated ($generated@@108 $generated@@839 $generated@@842)))) ($generated@@320 $generated@@842 $generated@@840 $generated@@841))
 :pattern ( ($generated@@108 $generated@@839 $generated@@842))
))))
 :pattern ( ($generated@@101 $generated@@839 ($generated@@237 $generated@@840) $generated@@841))
)))
(assert (= $generated@@234 ($generated@@349 $generated@@234)))
(assert (= $generated@@235 ($generated@@349 $generated@@235)))
(assert (= $generated@@236 ($generated@@349 $generated@@236)))
(assert (forall (($generated@@843 T@U) ) (!  (=> (and (= (type $generated@@843) $generated@@95) ($generated@@92 $generated@@843 $generated@@318)) (or (or (or (or ($generated@@374 $generated@@843) ($generated@@393 $generated@@843)) ($generated@@395 $generated@@843)) ($generated@@377 $generated@@843)) ($generated@@398 $generated@@843)))
 :pattern ( ($generated@@398 $generated@@843) ($generated@@92 $generated@@843 $generated@@318))
 :pattern ( ($generated@@377 $generated@@843) ($generated@@92 $generated@@843 $generated@@318))
 :pattern ( ($generated@@395 $generated@@843) ($generated@@92 $generated@@843 $generated@@318))
 :pattern ( ($generated@@393 $generated@@843) ($generated@@92 $generated@@843 $generated@@318))
 :pattern ( ($generated@@374 $generated@@843) ($generated@@92 $generated@@843 $generated@@318))
)))
(assert (forall (($generated@@844 T@U) ($generated@@845 T@U) ($generated@@846 T@U) ) (!  (=> (and (and (and (= (type $generated@@844) $generated@@95) (= (type $generated@@845) $generated@@82)) (= (type $generated@@846) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@846) (and ($generated@@220 $generated@@844) (exists (($generated@@847 T@U) ) (!  (and (= (type $generated@@847) $generated@@82) ($generated@@101 $generated@@844 ($generated@@221 $generated@@845 $generated@@847) $generated@@846))
 :pattern ( ($generated@@101 $generated@@844 ($generated@@221 $generated@@845 $generated@@847) $generated@@846))
))))) ($generated@@320 ($generated@@228 $generated@@844) $generated@@845 $generated@@846))
 :pattern ( ($generated@@320 ($generated@@228 $generated@@844) $generated@@845 $generated@@846))
)))
(assert (forall (($generated@@848 T@U) ($generated@@849 T@U) ($generated@@850 T@U) ) (!  (=> (and (and (and (= (type $generated@@848) $generated@@95) (= (type $generated@@849) $generated@@82)) (= (type $generated@@850) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@850) (and ($generated@@220 $generated@@848) (exists (($generated@@851 T@U) ) (!  (and (= (type $generated@@851) $generated@@82) ($generated@@101 $generated@@848 ($generated@@221 $generated@@851 $generated@@849) $generated@@850))
 :pattern ( ($generated@@101 $generated@@848 ($generated@@221 $generated@@851 $generated@@849) $generated@@850))
))))) ($generated@@320 ($generated@@229 $generated@@848) $generated@@849 $generated@@850))
 :pattern ( ($generated@@320 ($generated@@229 $generated@@848) $generated@@849 $generated@@850))
)))
(assert (forall (($generated@@852 T@U) ($generated@@853 T@U) ) (!  (=> (and (and (= (type $generated@@852) $generated@@95) (= (type $generated@@853) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@853) (and ($generated@@393 $generated@@852) ($generated@@101 $generated@@852 $generated@@318 $generated@@853)))) ($generated@@101 ($generated@@512 $generated@@852) $generated@@318 $generated@@853))
 :pattern ( ($generated@@101 ($generated@@512 $generated@@852) $generated@@318 $generated@@853))
)))
(assert (forall (($generated@@854 T@U) ($generated@@855 T@U) ) (!  (=> (and (and (= (type $generated@@854) $generated@@95) (= (type $generated@@855) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@855) (and ($generated@@162 $generated@@854) ($generated@@101 $generated@@854 $generated@@94 $generated@@855)))) ($generated@@101 ($generated@@8 ($generated@@163 $generated@@854)) $generated@@96 $generated@@855))
 :pattern ( ($generated@@101 ($generated@@8 ($generated@@163 $generated@@854)) $generated@@96 $generated@@855))
)))
(assert (forall (($generated@@856 T@U) ($generated@@857 T@U) ) (!  (=> (and (and (= (type $generated@@856) $generated@@95) (= (type $generated@@857) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@857) (and ($generated@@340 $generated@@856) ($generated@@101 $generated@@856 $generated@@94 $generated@@857)))) ($generated@@101 ($generated@@8 ($generated@@341 $generated@@856)) $generated@@96 $generated@@857))
 :pattern ( ($generated@@101 ($generated@@8 ($generated@@341 $generated@@856)) $generated@@96 $generated@@857))
)))
(assert (forall (($generated@@858 T@U) ($generated@@859 T@U) ) (!  (=> (and (and (= (type $generated@@858) $generated@@95) (= (type $generated@@859) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@859) (and ($generated@@340 $generated@@858) ($generated@@101 $generated@@858 $generated@@94 $generated@@859)))) ($generated@@101 ($generated@@342 $generated@@858) $generated@@94 $generated@@859))
 :pattern ( ($generated@@101 ($generated@@342 $generated@@858) $generated@@94 $generated@@859))
)))
(assert (forall (($generated@@860 T@U) ($generated@@861 T@U) ) (!  (=> (and (and (= (type $generated@@860) $generated@@95) (= (type $generated@@861) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@861) (and ($generated@@404 $generated@@860) ($generated@@101 $generated@@860 $generated@@319 $generated@@861)))) ($generated@@101 ($generated@@8 ($generated@@206 $generated@@860)) $generated@@96 $generated@@861))
 :pattern ( ($generated@@101 ($generated@@8 ($generated@@206 $generated@@860)) $generated@@96 $generated@@861))
)))
(assert (forall (($generated@@862 T@U) ) (!  (=> (= (type $generated@@862) $generated@@2) (= ($generated@@92 $generated@@862 $generated@@96)  (and (<= ($generated@@362 0) ($generated $generated@@862)) (< ($generated $generated@@862) 18446744073709551616))))
 :pattern ( ($generated@@92 $generated@@862 $generated@@96))
)))
(assert (forall (($generated@@863 T@U) ($generated@@864 T@U) ) (!  (=> (and (= (type $generated@@863) $generated@@169) (= (type $generated@@864) $generated@@169)) (= ($generated@@310 ($generated@@349 $generated@@863) ($generated@@349 $generated@@864)) ($generated@@349 ($generated@@310 $generated@@863 $generated@@864))))
 :pattern ( ($generated@@310 ($generated@@349 $generated@@863) ($generated@@349 $generated@@864)))
)))
(assert (forall (($generated@@865 Int) ($generated@@866 T@U) ) (!  (=> (= (type $generated@@866) $generated@@95) (= ($generated@@93 ($generated@@362 $generated@@865) ($generated@@349 $generated@@866)) ($generated@@349 ($generated@@93 $generated@@865 $generated@@866))))
 :pattern ( ($generated@@93 ($generated@@362 $generated@@865) ($generated@@349 $generated@@866)))
)))
(assert (forall (($generated@@867 Int) ) (! (= ($generated@@452 ($generated@@8 ($generated@@362 $generated@@867))) ($generated@@349 ($generated@@452 ($generated@@8 $generated@@867))))
 :pattern ( ($generated@@452 ($generated@@8 ($generated@@362 $generated@@867))))
)))
(assert (forall (($generated@@868 T@U) ) (!  (=> (= (type $generated@@868) $generated@@95) (= ($generated@@428 ($generated@@349 $generated@@868)) ($generated@@349 ($generated@@428 $generated@@868))))
 :pattern ( ($generated@@428 ($generated@@349 $generated@@868)))
)))
(assert (forall (($generated@@869 T@U) ) (!  (=> (= (type $generated@@869) ($generated@@168 $generated@@169)) (= ($generated@@167 ($generated@@349 $generated@@869)) ($generated@@349 ($generated@@167 $generated@@869))))
 :pattern ( ($generated@@167 ($generated@@349 $generated@@869)))
)))
(assert (forall (($generated@@870 T@U) ) (!  (=> (= (type $generated@@870) ($generated@@168 $generated@@169)) (= ($generated@@184 ($generated@@349 $generated@@870)) ($generated@@349 ($generated@@184 $generated@@870))))
 :pattern ( ($generated@@184 ($generated@@349 $generated@@870)))
)))
(assert (forall (($generated@@871 Int) ) (! (= ($generated@@436 ($generated@@362 $generated@@871)) ($generated@@349 ($generated@@436 $generated@@871)))
 :pattern ( ($generated@@436 ($generated@@362 $generated@@871)))
)))
(assert (forall (($generated@@872 T@U) ) (!  (=> (= (type $generated@@872) ($generated@@168 $generated@@169)) (= ($generated@@188 ($generated@@349 $generated@@872)) ($generated@@349 ($generated@@188 $generated@@872))))
 :pattern ( ($generated@@188 ($generated@@349 $generated@@872)))
)))
(assert (forall (($generated@@873 T@U) ) (! (= ($generated@@452 ($generated@@349 $generated@@873)) ($generated@@349 ($generated@@452 $generated@@873)))
 :pattern ( ($generated@@452 ($generated@@349 $generated@@873)))
)))
(assert (forall (($generated@@874 T@U) ) (! (let (($generated@@875 ($generated@@173 (type $generated@@874))))
 (=> (and (= (type $generated@@874) ($generated@@168 $generated@@875)) (= ($generated@@170 $generated@@874) 0)) (= $generated@@874 ($generated@@422 $generated@@875))))
 :pattern ( ($generated@@170 $generated@@874))
)))
(assert (forall (($generated@@876 T@U) ($generated@@877 T@U) ($generated@@878 T@U) ) (! (let (($generated@@879 (type $generated@@877)))
 (=> (and (and (= (type $generated@@876) ($generated@@103 $generated@@879 $generated@@2)) (= (type $generated@@878) $generated@@2)) (<= 0 ($generated $generated@@878))) (= ($generated@@457 ($generated@@109 $generated@@876 $generated@@877 $generated@@878)) (+ (- ($generated@@457 $generated@@876) ($generated ($generated@@108 $generated@@876 $generated@@877))) ($generated $generated@@878)))))
 :pattern ( ($generated@@457 ($generated@@109 $generated@@876 $generated@@877 $generated@@878)))
)))
(assert (forall (($generated@@880 T@U) ($generated@@881 T@U) ) (!  (=> (and (and (= (type $generated@@880) $generated@@95) (= (type $generated@@881) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@881) (and ($generated@@395 $generated@@880) ($generated@@101 $generated@@880 $generated@@318 $generated@@881)))) ($generated@@101 ($generated@@516 $generated@@880) ($generated@@366 $generated@@318) $generated@@881))
 :pattern ( ($generated@@101 ($generated@@516 $generated@@880) ($generated@@366 $generated@@318) $generated@@881))
)))
(assert (forall (($generated@@882 T@U) ($generated@@883 T@U) ) (!  (=> (and (and (= (type $generated@@882) $generated@@95) (= (type $generated@@883) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@883) (and ($generated@@398 $generated@@882) ($generated@@101 $generated@@882 $generated@@318 $generated@@883)))) ($generated@@101 ($generated@@520 $generated@@882) ($generated@@366 $generated@@318) $generated@@883))
 :pattern ( ($generated@@101 ($generated@@520 $generated@@882) ($generated@@366 $generated@@318) $generated@@883))
)))
(assert (forall (($generated@@884 T@U) ($generated@@885 T@U) ) (!  (=> (and (and (= (type $generated@@884) $generated@@95) (= (type $generated@@885) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@885) (and ($generated@@401 $generated@@884) ($generated@@101 $generated@@884 $generated@@94 $generated@@885)))) ($generated@@101 ($generated@@524 $generated@@884) ($generated@@366 $generated@@94) $generated@@885))
 :pattern ( ($generated@@101 ($generated@@524 $generated@@884) ($generated@@366 $generated@@94) $generated@@885))
)))
(assert (forall (($generated@@886 T@U) ($generated@@887 T@U) ) (!  (=> (and (= (type $generated@@886) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@887) $generated@@2)) ($generated@@101 $generated@@887 $generated@@46 $generated@@886))
 :pattern ( ($generated@@101 $generated@@887 $generated@@46 $generated@@886))
)))
(assert (forall (($generated@@888 T@U) ($generated@@889 T@U) ) (!  (=> (and (= (type $generated@@888) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@889) $generated@@3)) ($generated@@101 $generated@@889 $generated@@47 $generated@@888))
 :pattern ( ($generated@@101 $generated@@889 $generated@@47 $generated@@888))
)))
(assert (forall (($generated@@890 T@U) ($generated@@891 T@U) ) (!  (=> (and (= (type $generated@@890) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@891) $generated@@4)) ($generated@@101 $generated@@891 $generated@@44 $generated@@890))
 :pattern ( ($generated@@101 $generated@@891 $generated@@44 $generated@@890))
)))
(assert (forall (($generated@@892 T@U) ($generated@@893 T@U) ) (!  (=> (and (= (type $generated@@892) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@893) $generated@@665)) ($generated@@101 $generated@@893 $generated@@45 $generated@@892))
 :pattern ( ($generated@@101 $generated@@893 $generated@@45 $generated@@892))
)))
(assert (forall (($generated@@894 T@U) ($generated@@895 T@U) ) (!  (=> (and (= (type $generated@@894) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@895) $generated@@169)) ($generated@@101 $generated@@895 $generated@@48 $generated@@894))
 :pattern ( ($generated@@101 $generated@@895 $generated@@48 $generated@@894))
)))
(assert (forall (($generated@@896 T@U) ($generated@@897 T@U) ) (!  (=> (and (= (type $generated@@896) ($generated@@168 $generated@@169)) (= (type $generated@@897) $generated@@82)) (= ($generated@@92 $generated@@896 ($generated@@366 $generated@@897)) (forall (($generated@@898 Int) ) (!  (=> (and (<= 0 $generated@@898) (< $generated@@898 ($generated@@170 $generated@@896))) ($generated@@311 ($generated@@166 $generated@@896 $generated@@898) $generated@@897))
 :pattern ( ($generated@@166 $generated@@896 $generated@@898))
))))
 :pattern ( ($generated@@92 $generated@@896 ($generated@@366 $generated@@897)))
)))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@559 (not (= 1 $generated@@346))) (= $generated@@560 ($generated@@349 ($generated@@184 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@234))))))))))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@559 (not (= 1 $generated@@346))) (= $generated@@560 ($generated@@349 ($generated@@184 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@234))))))))))
(assert  (and (forall (($generated@@901 T@U) ) (! (= (type ($generated@@899 $generated@@901)) $generated@@447)
 :pattern ( ($generated@@899 $generated@@901))
)) (= (type $generated@@900) $generated@@447)))
(assert (forall (($generated@@902 T@U) ($generated@@903 T@U) ($generated@@904 T@U) ) (!  (=> (and (and (= (type $generated@@902) $generated@@447) (= (type $generated@@903) $generated@@95)) (= (type $generated@@904) $generated@@95)) (= ($generated@@445 $generated@@902 $generated@@903 $generated@@904) ($generated@@445 $generated@@900 $generated@@903 $generated@@904)))
 :pattern ( ($generated@@445 ($generated@@899 $generated@@902) $generated@@903 $generated@@904))
)))
(assert (forall (($generated@@905 T@U) ($generated@@906 Int) ) (!  (=> (= (type $generated@@905) ($generated@@168 $generated@@169)) (=> (and (<= 0 $generated@@906) (< $generated@@906 ($generated@@170 $generated@@905))) (< ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@905 $generated@@906))) ($generated@@805 $generated@@905))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@905 $generated@@906))))
)))
(assert (forall (($generated@@907 T@U) ($generated@@908 T@U) ($generated@@909 T@U) ) (!  (=> (and (and (and (= (type $generated@@907) ($generated@@465 $generated@@169 $generated@@169)) (= (type $generated@@908) $generated@@82)) (= (type $generated@@909) $generated@@82)) ($generated@@92 $generated@@907 ($generated@@615 $generated@@908 $generated@@909))) (and (and ($generated@@92 ($generated@@463 $generated@@907) ($generated@@352 $generated@@908)) ($generated@@92 ($generated@@538 $generated@@907) ($generated@@352 $generated@@909))) ($generated@@92 ($generated@@581 $generated@@907) ($generated@@352 ($generated@@221 $generated@@908 $generated@@909)))))
 :pattern ( ($generated@@92 $generated@@907 ($generated@@615 $generated@@908 $generated@@909)))
)))
(assert (forall (($generated@@910 T@U) ($generated@@911 T@U) ($generated@@912 T@U) ) (!  (=> (and (and (and (= (type $generated@@910) ($generated@@483 $generated@@169 $generated@@169)) (= (type $generated@@911) $generated@@82)) (= (type $generated@@912) $generated@@82)) ($generated@@92 $generated@@910 ($generated@@623 $generated@@911 $generated@@912))) (and (and ($generated@@92 ($generated@@481 $generated@@910) ($generated@@357 $generated@@911)) ($generated@@92 ($generated@@549 $generated@@910) ($generated@@357 $generated@@912))) ($generated@@92 ($generated@@589 $generated@@910) ($generated@@357 ($generated@@221 $generated@@911 $generated@@912)))))
 :pattern ( ($generated@@92 $generated@@910 ($generated@@623 $generated@@911 $generated@@912)))
)))
(assert (forall (($generated@@913 T@U) ) (!  (=> (= (type $generated@@913) $generated@@2) ($generated@@92 $generated@@913 $generated@@46))
 :pattern ( ($generated@@92 $generated@@913 $generated@@46))
)))
(assert (forall (($generated@@914 T@U) ) (!  (=> (= (type $generated@@914) $generated@@3) ($generated@@92 $generated@@914 $generated@@47))
 :pattern ( ($generated@@92 $generated@@914 $generated@@47))
)))
(assert (forall (($generated@@915 T@U) ) (!  (=> (= (type $generated@@915) $generated@@4) ($generated@@92 $generated@@915 $generated@@44))
 :pattern ( ($generated@@92 $generated@@915 $generated@@44))
)))
(assert (forall (($generated@@916 T@U) ) (!  (=> (= (type $generated@@916) $generated@@665) ($generated@@92 $generated@@916 $generated@@45))
 :pattern ( ($generated@@92 $generated@@916 $generated@@45))
)))
(assert (forall (($generated@@917 T@U) ) (!  (=> (= (type $generated@@917) $generated@@169) ($generated@@92 $generated@@917 $generated@@48))
 :pattern ( ($generated@@92 $generated@@917 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@918 () T@U)
(declare-fun $generated@@919 () T@U)
(declare-fun $generated@@920 () T@U)
(declare-fun $generated@@921 () T@U)
(declare-fun $generated@@922 () T@U)
(declare-fun $generated@@923 () T@U)
(declare-fun $generated@@924 () T@U)
(declare-fun $generated@@925 () T@U)
(declare-fun $generated@@926 () Int)
(declare-fun $generated@@927 () T@U)
(declare-fun $generated@@928 () T@U)
(declare-fun $generated@@929 () T@U)
(declare-fun $generated@@930 () T@U)
(declare-fun $generated@@931 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@918) $generated@@95) (= (type $generated@@919) $generated@@169)) (= (type $generated@@920) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@921) $generated@@95)) (= (type $generated@@922) $generated@@169)) (= (type $generated@@923) $generated@@95)) (= (type $generated@@924) ($generated@@244 $generated@@104 $generated@@4))) (= (type $generated@@925) $generated@@104)) (= (type $generated@@927) ($generated@@244 $generated@@104 $generated@@4))) (= (type $generated@@928) $generated@@447)) (= (type $generated@@929) $generated@@447)) (= (type $generated@@930) $generated@@95)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 32) (let (($generated@@932 true))
(let (($generated@@933  (=> (= ($generated@@341 $generated@@918) ($generated@@362 0)) (=> (and ($generated@@311 $generated@@919 $generated@@321) ($generated@@320 $generated@@919 $generated@@321 $generated@@920)) (and (=> (= (ControlFlow 0 3) (- 0 26)) ($generated@@340 $generated@@918)) (=> ($generated@@340 $generated@@918) (and (=> (= (ControlFlow 0 3) (- 0 25)) ($generated@@401 ($generated@@342 $generated@@918))) (=> ($generated@@401 ($generated@@342 $generated@@918)) (and (=> (= (ControlFlow 0 3) (- 0 24)) (and (<= 0 ($generated@@362 0)) (< ($generated@@362 0) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@918)))))) (=> (and (<= 0 ($generated@@362 0)) (< ($generated@@362 0) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@918))))) (=> (and (= $generated@@921 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@918)) ($generated@@362 0)))) ($generated@@101 $generated@@921 $generated@@94 $generated@@920)) (and (=> (= (ControlFlow 0 3) (- 0 23)) (=> ($generated@@565 $generated@@921 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@921 ($generated@@349 $generated@@348)) (=> ($generated@@162 $generated@@921) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@374 ($generated@@349 $generated@@348))))))))) (and (=> (= (ControlFlow 0 3) (- 0 22)) (=> ($generated@@565 $generated@@921 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@921 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@921)) (=> ($generated@@401 $generated@@921) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@395 ($generated@@349 $generated@@348)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 21)) (=> ($generated@@565 $generated@@921 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@921 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@921)) (=> ($generated@@401 $generated@@921) (let (($generated@@934 ($generated@@524 $generated@@921)))
(= ($generated@@170 $generated@@934) ($generated@@170 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@348))))))))))) (and (=> (= (ControlFlow 0 3) (- 0 20)) (=> ($generated@@565 $generated@@921 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@921 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@921)) (=> ($generated@@401 $generated@@921) (let (($generated@@935 ($generated@@524 $generated@@921)))
(forall (($generated@@936 Int) ) (!  (=> true (=> (and (<= ($generated@@362 0) $generated@@936) (< $generated@@936 ($generated@@170 $generated@@935))) ($generated@@445 $generated@@530 ($generated@@172 $generated@@95 ($generated@@166 $generated@@935 $generated@@936)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@348))) $generated@@936)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@348) $generated@@936)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@935 $generated@@936)))
)))))))) (and (=> (= (ControlFlow 0 3) (- 0 19)) (=> ($generated@@565 $generated@@921 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@921 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@921)) (=> (not ($generated@@401 $generated@@921)) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@398 ($generated@@349 $generated@@348)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 18)) (=> ($generated@@565 $generated@@921 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@921 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@921)) (=> (not ($generated@@401 $generated@@921)) (let (($generated@@937 ($generated@@341 $generated@@921)))
(< $generated@@937 ($generated@@170 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@348))))))))))) (and (=> (= (ControlFlow 0 3) (- 0 17)) (=> ($generated@@565 $generated@@921 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@921 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@921)) (=> (not ($generated@@401 $generated@@921)) (let (($generated@@938 ($generated@@342 $generated@@921)))
(let (($generated@@939 ($generated@@341 $generated@@921)))
($generated@@445 $generated@@530 $generated@@938 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@348))) $generated@@939)))))))))) (=> (and ($generated@@445 $generated@@530 $generated@@921 ($generated@@349 $generated@@348)) ($generated@@607 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@918)) ($generated@@362 0))))) (=> (and (and (= $generated@@922 ($generated@@609 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@918)) ($generated@@362 0))))) ($generated@@607 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@918)) ($generated@@362 0))))) (and ($generated@@311 $generated@@922 $generated@@321) (= $generated@@919 $generated@@922))) (and (=> (= (ControlFlow 0 3) (- 0 16)) ($generated@@340 $generated@@918)) (=> ($generated@@340 $generated@@918) (and (=> (= (ControlFlow 0 3) (- 0 15)) ($generated@@401 ($generated@@342 $generated@@918))) (=> ($generated@@401 ($generated@@342 $generated@@918)) (and (=> (= (ControlFlow 0 3) (- 0 14)) (and (<= 0 ($generated@@362 1)) (< ($generated@@362 1) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@918)))))) (=> (and (<= 0 ($generated@@362 1)) (< ($generated@@362 1) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@918))))) (and (=> (= (ControlFlow 0 3) (- 0 13)) ($generated@@162 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@918)) ($generated@@362 1))))) (=> ($generated@@162 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@918)) ($generated@@362 1)))) (and (=> (= (ControlFlow 0 3) (- 0 12)) ($generated@@340 $generated@@918)) (=> ($generated@@340 $generated@@918) (and (=> (= (ControlFlow 0 3) (- 0 11)) ($generated@@401 ($generated@@342 $generated@@918))) (=> ($generated@@401 ($generated@@342 $generated@@918)) (and (=> (= (ControlFlow 0 3) (- 0 10)) (and (<= 0 ($generated@@362 2)) (< ($generated@@362 2) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@918)))))) (=> (and (<= 0 ($generated@@362 2)) (< ($generated@@362 2) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@918))))) (=> (and (= $generated@@923 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@918)) ($generated@@362 2)))) ($generated@@101 $generated@@923 $generated@@94 $generated@@920)) (and (=> (= (ControlFlow 0 3) (- 0 9)) (=> ($generated@@565 $generated@@923 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@923 ($generated@@349 $generated@@560)) (=> ($generated@@162 $generated@@923) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@374 ($generated@@349 $generated@@560))))))))) (and (=> (= (ControlFlow 0 3) (- 0 8)) (=> ($generated@@565 $generated@@923 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@923 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@923)) (=> ($generated@@401 $generated@@923) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@395 ($generated@@349 $generated@@560)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 7)) (=> ($generated@@565 $generated@@923 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@923 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@923)) (=> ($generated@@401 $generated@@923) (let (($generated@@940 ($generated@@524 $generated@@923)))
(= ($generated@@170 $generated@@940) ($generated@@170 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@560))))))))))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> ($generated@@565 $generated@@923 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@923 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@923)) (=> ($generated@@401 $generated@@923) (let (($generated@@941 ($generated@@524 $generated@@923)))
(forall (($generated@@942 Int) ) (!  (=> true (=> (and (<= ($generated@@362 0) $generated@@942) (< $generated@@942 ($generated@@170 $generated@@941))) ($generated@@445 $generated@@530 ($generated@@172 $generated@@95 ($generated@@166 $generated@@941 $generated@@942)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@560))) $generated@@942)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@560) $generated@@942)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@941 $generated@@942)))
)))))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> ($generated@@565 $generated@@923 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@923 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@923)) (=> (not ($generated@@401 $generated@@923)) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@398 ($generated@@349 $generated@@560)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@565 $generated@@923 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@923 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@923)) (=> (not ($generated@@401 $generated@@923)) (let (($generated@@943 ($generated@@341 $generated@@923)))
(< $generated@@943 ($generated@@170 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@560))))))))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@565 $generated@@923 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@923 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@923)) (=> (not ($generated@@401 $generated@@923)) (let (($generated@@944 ($generated@@342 $generated@@923)))
(let (($generated@@945 ($generated@@341 $generated@@923)))
($generated@@445 $generated@@530 $generated@@944 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@560))) $generated@@945)))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@946  (=> (= $generated@@924 ($generated@@298 $generated@@925 $generated@@920 $generated@@60 false)) (and (=> (= (ControlFlow 0 28) (- 0 30)) ($generated@@340 $generated@@918)) (=> ($generated@@340 $generated@@918) (=> (= $generated@@926 ($generated@@362 0)) (and (=> (= (ControlFlow 0 28) (- 0 29)) (and (<= ($generated@@362 0) $generated@@926) (< $generated@@926 18446744073709551616))) (=> (and (<= ($generated@@362 0) $generated@@926) (< $generated@@926 18446744073709551616)) (and (=> (= (ControlFlow 0 28) 3) $generated@@933) (=> (= (ControlFlow 0 28) 27) $generated@@932))))))))))
(let (($generated@@947 true))
(let (($generated@@948  (=> (and (= $generated@@927 ($generated@@243 $generated@@925 $generated@@920 $generated@@60 false)) (= $generated@@928 ($generated@@446 ($generated@@446 $generated@@929)))) (=> (and (and (and (= $generated@@530 ($generated@@446 ($generated@@446 ($generated@@446 $generated@@929)))) (= ($generated@@899 $generated@@929) $generated@@929)) (and $generated@@561 ($generated@@101 $generated@@918 $generated@@94 $generated@@920))) (and (and (= $generated@@930 ($generated@@349 $generated@@531)) ($generated@@101 $generated@@930 $generated@@318 $generated@@920)) (and ($generated@@565 $generated@@918 ($generated@@349 $generated@@531)) ($generated@@445 $generated@@530 $generated@@918 ($generated@@349 $generated@@531))))) (and (=> (= (ControlFlow 0 31) 1) $generated@@947) (=> (= (ControlFlow 0 31) 28) $generated@@946))))))
(let (($generated@@949  (=> (and (and (and ($generated@@216 $generated@@920) ($generated@@931 $generated@@920)) ($generated@@92 $generated@@918 $generated@@94)) (and (= 4 $generated@@346) (= (ControlFlow 0 32) 31))) $generated@@948)))
$generated@@949)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) Bool)
(declare-fun $generated@@93 (Int T@U) T@U)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@U)
(declare-fun $generated@@101 (T@U T@U T@U) Bool)
(declare-fun $generated@@102 (Int) T@U)
(declare-fun $generated@@103 (T@T T@T) T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@T) T@T)
(declare-fun $generated@@108 (T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@166 (T@U Int) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@170 (T@U) Int)
(declare-fun $generated@@171 (T@U) Int)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@192 (T@U Int T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Int)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@220 (T@U) Bool)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@238 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@244 (T@T T@T) T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@247 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@298 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U T@U) Bool)
(declare-fun $generated@@318 () T@U)
(declare-fun $generated@@319 () T@U)
(declare-fun $generated@@320 (T@U T@U T@U) Bool)
(declare-fun $generated@@321 () T@U)
(declare-fun $generated@@322 () T@U)
(declare-fun $generated@@332 (T@U T@U) Bool)
(declare-fun $generated@@337 (T@U T@U) Bool)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@341 (T@U) Int)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@346 () Int)
(declare-fun $generated@@347 () Bool)
(declare-fun $generated@@348 () T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@362 (Int) Int)
(declare-fun $generated@@365 (T@U T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@374 (T@U) Bool)
(declare-fun $generated@@377 (T@U) Bool)
(declare-fun $generated@@380 (T@U) Bool)
(declare-fun $generated@@393 (T@U) Bool)
(declare-fun $generated@@395 (T@U) Bool)
(declare-fun $generated@@398 (T@U) Bool)
(declare-fun $generated@@401 (T@U) Bool)
(declare-fun $generated@@404 (T@U) Bool)
(declare-fun $generated@@407 (T@U T@U) Bool)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@436 (Int) T@U)
(declare-fun $generated@@445 (T@U T@U T@U) Bool)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@457 (T@U) Int)
(declare-fun $generated@@458 (T@T) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@464 (T@T T@T) T@U)
(declare-fun $generated@@465 (T@T T@T) T@T)
(declare-fun $generated@@466 (T@T) T@T)
(declare-fun $generated@@467 (T@T) T@T)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@T T@T) T@U)
(declare-fun $generated@@483 (T@T T@T) T@T)
(declare-fun $generated@@484 (T@T) T@T)
(declare-fun $generated@@485 (T@T) T@T)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Bool)
(declare-fun $generated@@530 () T@U)
(declare-fun $generated@@531 () T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@559 () Bool)
(declare-fun $generated@@560 () T@U)
(declare-fun $generated@@561 () Bool)
(declare-fun $generated@@565 (T@U T@U) Bool)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@607 (T@U) Bool)
(declare-fun $generated@@608 (T@U) Bool)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@615 (T@U T@U) T@U)
(declare-fun $generated@@623 (T@U T@U) T@U)
(declare-fun $generated@@639 (T@T) T@U)
(declare-fun $generated@@665 () T@T)
(declare-fun $generated@@679 (T@U) T@U)
(declare-fun $generated@@683 (T@U) T@U)
(declare-fun $generated@@689 (T@U) T@U)
(declare-fun $generated@@693 (T@U) T@U)
(declare-fun $generated@@701 (T@U) T@U)
(declare-fun $generated@@705 (T@U) T@U)
(declare-fun $generated@@726 (T@U) Int)
(declare-fun $generated@@728 (T@U) T@U)
(declare-fun $generated@@732 (T@U) T@U)
(declare-fun $generated@@736 (T@U) T@U)
(declare-fun $generated@@740 (T@U) T@U)
(declare-fun $generated@@764 (T@U) Int)
(declare-fun $generated@@805 (T@U) Int)
(declare-fun $generated@@811 (T@U) T@U)
(declare-fun $generated@@815 (T@U) T@U)
(declare-fun $generated@@816 (T@U) T@U)
(declare-fun $generated@@899 (T@U) T@U)
(declare-fun $generated@@900 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@82) 6) (= (type $generated@@44) $generated@@82)) (= (type $generated@@45) $generated@@82)) (= (type $generated@@46) $generated@@82)) (= (type $generated@@47) $generated@@82)) (= (type $generated@@48) $generated@@82)) (= ($generated@@1 $generated@@83) 7)) (= (type $generated@@49) $generated@@83)) (= (type $generated@@50) $generated@@83)) (= (type $generated@@51) $generated@@83)) (= (type $generated@@52) $generated@@83)) (= (type $generated@@53) $generated@@83)) (= (type $generated@@54) $generated@@83)) (= (type $generated@@55) $generated@@83)) (= (type $generated@@56) $generated@@83)) (= (type $generated@@57) $generated@@83)) (= (type $generated@@58) $generated@@83)) (= (type $generated@@59) $generated@@83)) (forall (($generated@@88 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@88)) 8))) (forall (($generated@@89 T@T) ) (! (= ($generated@@85 ($generated@@84 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@84 $generated@@89))
))) (= (type $generated@@60) ($generated@@84 $generated@@4))) (= ($generated@@1 $generated@@86) 9)) (= (type $generated@@61) $generated@@86)) (= (type $generated@@62) $generated@@83)) (= (type $generated@@63) $generated@@83)) (= (type $generated@@64) $generated@@86)) (= (type $generated@@65) $generated@@83)) (= (type $generated@@66) $generated@@86)) (= (type $generated@@67) $generated@@86)) (= (type $generated@@68) $generated@@86)) (= (type $generated@@69) $generated@@86)) (= (type $generated@@70) $generated@@86)) (= (type $generated@@71) $generated@@83)) (= (type $generated@@72) $generated@@86)) (= (type $generated@@73) $generated@@86)) (= (type $generated@@74) $generated@@86)) (= (type $generated@@75) $generated@@83)) (= (type $generated@@76) $generated@@86)) (= ($generated@@1 $generated@@87) 10)) (= (type $generated@@77) $generated@@87)) (= (type $generated@@78) $generated@@87)) (= (type $generated@@79) $generated@@87)) (= (type $generated@@80) $generated@@87)) (= (type $generated@@81) $generated@@87)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79 $generated@@80 $generated@@81)
)
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@83)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@44) $generated@@49))
(assert (= ($generated@@90 $generated@@45) $generated@@50))
(assert (= ($generated@@90 $generated@@46) $generated@@51))
(assert (= ($generated@@90 $generated@@47) $generated@@52))
(assert (= ($generated@@90 $generated@@48) $generated@@53))
(assert  (and (and (and (= ($generated@@1 $generated@@95) 11) (forall (($generated@@97 Int) ($generated@@98 T@U) ) (! (= (type ($generated@@93 $generated@@97 $generated@@98)) $generated@@95)
 :pattern ( ($generated@@93 $generated@@97 $generated@@98))
))) (= (type $generated@@94) $generated@@82)) (= (type $generated@@96) $generated@@82)))
(assert (forall (($generated@@99 Int) ($generated@@100 T@U) ) (!  (=> (= (type $generated@@100) $generated@@95) (= ($generated@@92 ($generated@@93 $generated@@99 $generated@@100) $generated@@94)  (and ($generated@@92 ($generated@@8 $generated@@99) $generated@@96) ($generated@@92 $generated@@100 $generated@@94))))
 :pattern ( ($generated@@92 ($generated@@93 $generated@@99 $generated@@100) $generated@@94))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@103 $generated@@112 $generated@@113)) 12)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@106 ($generated@@103 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@103 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@107 ($generated@@103 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@103 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@107 (type $generated@@118))))
(= (type ($generated@@108 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@108 $generated@@118 $generated@@119))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 (type $generated@@123)))
(let (($generated@@125 (type $generated@@122)))
(= (type ($generated@@109 $generated@@121 $generated@@122 $generated@@123)) ($generated@@103 $generated@@125 $generated@@124))))
 :pattern ( ($generated@@109 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@107 (type $generated@@126))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@108 ($generated@@109 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@108 ($generated@@109 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@108 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@108 ($generated@@109 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@108 $generated@@135 $generated@@137)))
 :weight 0
)))) (= ($generated@@1 $generated@@104) 13)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@85 (type $generated@@139))))
(= (type ($generated@@110 $generated@@138 $generated@@139)) $generated@@140))
 :pattern ( ($generated@@110 $generated@@138 $generated@@139))
))) (= ($generated@@1 $generated@@105) 14)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@111 $generated@@141 $generated@@142 $generated@@143)) $generated@@105)
 :pattern ( ($generated@@111 $generated@@141 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@85 (type $generated@@145))))
 (=> (= (type $generated@@146) $generated@@147) (= ($generated@@110 ($generated@@111 $generated@@144 $generated@@145 $generated@@146) $generated@@145) $generated@@146)))
 :weight 0
))) (and (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@150 $generated@@151) (= ($generated@@110 ($generated@@111 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@110 $generated@@149 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@153 $generated@@154 $generated@@152) $generated@@155) ($generated@@110 $generated@@153 $generated@@155)))
 :weight 0
)))) (forall (($generated@@156 Int) ) (! (= (type ($generated@@102 $generated@@156)) $generated@@82)
 :pattern ( ($generated@@102 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@2) (= (type $generated@@158) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@101 $generated@@157 ($generated@@102 0) $generated@@158))
 :pattern ( ($generated@@101 $generated@@157 ($generated@@102 0) $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@101 $generated@@159 $generated@@96 $generated@@160))
 :pattern ( ($generated@@101 $generated@@159 $generated@@96 $generated@@160))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@95) (= (type $generated@@165) $generated@@95)) (and ($generated@@162 $generated@@164) ($generated@@162 $generated@@165))) (= ($generated@@161 $generated@@164 $generated@@165) (= ($generated@@163 $generated@@164) ($generated@@163 $generated@@165))))
 :pattern ( ($generated@@161 $generated@@164 $generated@@165) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@161 $generated@@164 $generated@@165) ($generated@@162 $generated@@165))
)))
(assert  (and (and (and (and (and (forall (($generated@@174 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@174)) 15)) (forall (($generated@@175 T@T) ) (! (= ($generated@@173 ($generated@@168 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@168 $generated@@175))
))) (= ($generated@@1 $generated@@169) 16)) (forall (($generated@@176 T@U) ($generated@@177 Int) ) (! (let (($generated@@178 ($generated@@173 (type $generated@@176))))
(= (type ($generated@@166 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@166 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@167 $generated@@179)) $generated@@95)
 :pattern ( ($generated@@167 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@U) ) (! (= (type ($generated@@172 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 Int) ) (!  (=> (= (type $generated@@182) ($generated@@168 $generated@@169)) (=> (and (<= 0 $generated@@183) (< $generated@@183 ($generated@@170 $generated@@182))) (< ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@182 $generated@@183))) ($generated@@171 ($generated@@167 $generated@@182)))))
 :pattern ( ($generated@@166 $generated@@182 $generated@@183) ($generated@@167 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@184 $generated@@185)) $generated@@95)
 :pattern ( ($generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 Int) ) (!  (=> (= (type $generated@@186) ($generated@@168 $generated@@169)) (=> (and (<= 0 $generated@@187) (< $generated@@187 ($generated@@170 $generated@@186))) (< ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@186 $generated@@187))) ($generated@@171 ($generated@@184 $generated@@186)))))
 :pattern ( ($generated@@166 $generated@@186 $generated@@187) ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@188 $generated@@189)) $generated@@95)
 :pattern ( ($generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 Int) ) (!  (=> (= (type $generated@@190) ($generated@@168 $generated@@169)) (=> (and (<= 0 $generated@@191) (< $generated@@191 ($generated@@170 $generated@@190))) (< ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@190 $generated@@191))) ($generated@@171 ($generated@@188 $generated@@190)))))
 :pattern ( ($generated@@166 $generated@@190 $generated@@191) ($generated@@188 $generated@@190))
)))
(assert  (and (forall (($generated@@194 T@U) ($generated@@195 Int) ($generated@@196 T@U) ) (! (= (type ($generated@@192 $generated@@194 $generated@@195 $generated@@196)) $generated@@95)
 :pattern ( ($generated@@192 $generated@@194 $generated@@195 $generated@@196))
)) (forall (($generated@@197 T@U) ) (! (= (type ($generated@@193 $generated@@197)) $generated@@86)
 :pattern ( ($generated@@193 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 Int) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@198) $generated@@169) (= (type $generated@@200) $generated@@169)) (= ($generated@@193 ($generated@@192 $generated@@198 $generated@@199 $generated@@200)) $generated@@74))
 :pattern ( ($generated@@192 $generated@@198 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@201 $generated@@202)) $generated@@169)
 :pattern ( ($generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 Int) ($generated@@205 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@169) (= (type $generated@@205) $generated@@169)) (= ($generated@@201 ($generated@@192 $generated@@203 $generated@@204 $generated@@205)) $generated@@203))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 Int) ($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@207) $generated@@169) (= (type $generated@@209) $generated@@169)) (= ($generated@@206 ($generated@@192 $generated@@207 $generated@@208 $generated@@209)) $generated@@208))
 :pattern ( ($generated@@192 $generated@@207 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ) (! (= (type ($generated@@210 $generated@@211)) $generated@@169)
 :pattern ( ($generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 Int) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@212) $generated@@169) (= (type $generated@@214) $generated@@169)) (= ($generated@@210 ($generated@@192 $generated@@212 $generated@@213 $generated@@214)) $generated@@214))
 :pattern ( ($generated@@192 $generated@@212 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (= (type $generated@@215) $generated@@2) ($generated@@92 $generated@@215 ($generated@@102 0)))
 :pattern ( ($generated@@92 $generated@@215 ($generated@@102 0)))
)))
(assert (forall (($generated@@217 Int) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (and (= (type $generated@@218) $generated@@95) (= (type $generated@@219) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@219)) (= ($generated@@101 ($generated@@93 $generated@@217 $generated@@218) $generated@@94 $generated@@219)  (and ($generated@@101 ($generated@@8 $generated@@217) $generated@@96 $generated@@219) ($generated@@101 $generated@@218 $generated@@94 $generated@@219))))
 :pattern ( ($generated@@101 ($generated@@93 $generated@@217 $generated@@218) $generated@@94 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223)) $generated@@82)
 :pattern ( ($generated@@221 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@82) (= (type $generated@@225) $generated@@82)) (= (type $generated@@226) $generated@@95)) ($generated@@92 $generated@@226 ($generated@@221 $generated@@224 $generated@@225))) ($generated@@220 $generated@@226))
 :pattern ( ($generated@@220 $generated@@226) ($generated@@92 $generated@@226 ($generated@@221 $generated@@224 $generated@@225)))
)))
(assert  (and (forall (($generated@@230 T@U) ) (! (= (type ($generated@@228 $generated@@230)) $generated@@169)
 :pattern ( ($generated@@228 $generated@@230))
)) (forall (($generated@@231 T@U) ) (! (= (type ($generated@@229 $generated@@231)) $generated@@169)
 :pattern ( ($generated@@229 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (= (type $generated@@232) $generated@@95) (= (type $generated@@233) $generated@@95)) true) (= ($generated@@227 $generated@@232 $generated@@233)  (and (= ($generated@@228 $generated@@232) ($generated@@228 $generated@@233)) (= ($generated@@229 $generated@@232) ($generated@@229 $generated@@233)))))
 :pattern ( ($generated@@227 $generated@@232 $generated@@233))
)))
(assert (= (type $generated@@234) $generated@@95))
(assert (= ($generated@@193 $generated@@234) $generated@@64))
(assert (= (type $generated@@235) $generated@@95))
(assert (= ($generated@@193 $generated@@235) $generated@@68))
(assert (= (type $generated@@236) $generated@@95))
(assert (= ($generated@@193 $generated@@236) $generated@@76))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@237 $generated@@239)) $generated@@82)
 :pattern ( ($generated@@237 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (= (type $generated@@240) ($generated@@103 $generated@@169 $generated@@2)) (= (type $generated@@241) $generated@@82)) ($generated@@92 $generated@@240 ($generated@@237 $generated@@241))) ($generated@@238 $generated@@240))
 :pattern ( ($generated@@92 $generated@@240 ($generated@@237 $generated@@241)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (= ($generated@@1 ($generated@@244 $generated@@248 $generated@@249)) 17)) (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (! (= ($generated@@245 ($generated@@244 $generated@@250 $generated@@251)) $generated@@250)
 :pattern ( ($generated@@244 $generated@@250 $generated@@251))
))) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= ($generated@@246 ($generated@@244 $generated@@252 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@244 $generated@@252 $generated@@253))
))) (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@246 (type $generated@@254))))
(= (type ($generated@@242 $generated@@254 $generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@242 $generated@@254 $generated@@255 $generated@@256))
))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(let (($generated@@263 (type $generated@@259)))
(= (type ($generated@@247 $generated@@258 $generated@@259 $generated@@260 $generated@@261)) ($generated@@244 $generated@@263 $generated@@262))))
 :pattern ( ($generated@@247 $generated@@258 $generated@@259 $generated@@260 $generated@@261))
))) (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@246 (type $generated@@264))))
 (=> (= (type $generated@@267) $generated@@268) (= ($generated@@242 ($generated@@247 $generated@@264 $generated@@265 $generated@@266 $generated@@267) $generated@@265 $generated@@266) $generated@@267)))
 :weight 0
))) (and (and (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (or (= $generated@@271 $generated@@273) (= ($generated@@242 ($generated@@247 $generated@@270 $generated@@271 $generated@@272 $generated@@269) $generated@@273 $generated@@274) ($generated@@242 $generated@@270 $generated@@273 $generated@@274)))
 :weight 0
)) (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (or (= $generated@@278 $generated@@280) (= ($generated@@242 ($generated@@247 $generated@@276 $generated@@277 $generated@@278 $generated@@275) $generated@@279 $generated@@280) ($generated@@242 $generated@@276 $generated@@279 $generated@@280)))
 :weight 0
))) (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (or true (= ($generated@@242 ($generated@@247 $generated@@282 $generated@@283 $generated@@284 $generated@@281) $generated@@285 $generated@@286) ($generated@@242 $generated@@282 $generated@@285 $generated@@286)))
 :weight 0
)))) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 Bool) ) (! (= (type ($generated@@243 $generated@@287 $generated@@288 $generated@@289 $generated@@290)) ($generated@@244 $generated@@104 $generated@@4))
 :pattern ( ($generated@@243 $generated@@287 $generated@@288 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 Bool) ($generated@@295 T@U) ($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@85 (type $generated@@296))))
 (=> (and (and (and (and (= (type $generated@@291) $generated@@104) (= (type $generated@@292) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@293) ($generated@@84 $generated@@4))) (= (type $generated@@295) $generated@@104)) (= (type $generated@@296) ($generated@@84 $generated@@297))) (= ($generated@@0 ($generated@@242 ($generated@@243 $generated@@291 $generated@@292 $generated@@293 $generated@@294) $generated@@295 $generated@@296))  (=> (and (not (= $generated@@295 $generated@@291)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@292 $generated@@295) $generated@@293))) $generated@@294))))
 :pattern ( ($generated@@242 ($generated@@243 $generated@@291 $generated@@292 $generated@@293 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Bool) ) (! (= (type ($generated@@298 $generated@@299 $generated@@300 $generated@@301 $generated@@302)) ($generated@@244 $generated@@104 $generated@@4))
 :pattern ( ($generated@@298 $generated@@299 $generated@@300 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 Bool) ($generated@@307 T@U) ($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@85 (type $generated@@308))))
 (=> (and (and (and (and (= (type $generated@@303) $generated@@104) (= (type $generated@@304) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@305) ($generated@@84 $generated@@4))) (= (type $generated@@307) $generated@@104)) (= (type $generated@@308) ($generated@@84 $generated@@309))) (= ($generated@@0 ($generated@@242 ($generated@@298 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))  (=> (and (not (= $generated@@307 $generated@@303)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@304 $generated@@307) $generated@@305))) $generated@@306))))
 :pattern ( ($generated@@242 ($generated@@298 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (= (type ($generated@@310 $generated@@312 $generated@@313)) $generated@@95)
 :pattern ( ($generated@@310 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@82) (= (type $generated@@315) $generated@@82)) (= (type $generated@@316) $generated@@169)) (= (type $generated@@317) $generated@@169)) (= ($generated@@92 ($generated@@310 $generated@@316 $generated@@317) ($generated@@221 $generated@@314 $generated@@315))  (and ($generated@@311 $generated@@316 $generated@@314) ($generated@@311 $generated@@317 $generated@@315))))
 :pattern ( ($generated@@92 ($generated@@310 $generated@@316 $generated@@317) ($generated@@221 $generated@@314 $generated@@315)))
)))
(assert (= (type $generated@@318) $generated@@82))
(assert ($generated@@92 $generated@@234 $generated@@318))
(assert ($generated@@92 $generated@@235 $generated@@318))
(assert (= (type $generated@@319) $generated@@82))
(assert ($generated@@92 $generated@@236 $generated@@319))
(assert  (and (= (type $generated@@321) $generated@@82) (= (type $generated@@322) $generated@@82)))
(assert (forall (($generated@@323 T@U) ($generated@@324 Int) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (and (= (type $generated@@323) $generated@@169) (= (type $generated@@325) $generated@@169)) (= (type $generated@@326) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@326)) (= ($generated@@101 ($generated@@192 $generated@@323 $generated@@324 $generated@@325) $generated@@319 $generated@@326)  (and (and ($generated@@320 $generated@@323 $generated@@321 $generated@@326) ($generated@@101 ($generated@@8 $generated@@324) $generated@@96 $generated@@326)) ($generated@@320 $generated@@325 $generated@@322 $generated@@326))))
 :pattern ( ($generated@@101 ($generated@@192 $generated@@323 $generated@@324 $generated@@325) $generated@@319 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@216 $generated@@327)) ($generated@@101 $generated@@234 $generated@@318 $generated@@327))
 :pattern ( ($generated@@101 $generated@@234 $generated@@318 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@216 $generated@@328)) ($generated@@101 $generated@@235 $generated@@318 $generated@@328))
 :pattern ( ($generated@@101 $generated@@235 $generated@@318 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@216 $generated@@329)) ($generated@@101 $generated@@236 $generated@@319 $generated@@329))
 :pattern ( ($generated@@101 $generated@@236 $generated@@319 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@95) (= (type $generated@@331) $generated@@95)) (= ($generated@@227 $generated@@330 $generated@@331) (= $generated@@330 $generated@@331)))
 :pattern ( ($generated@@227 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@95) (= (type $generated@@334) $generated@@95)) (= ($generated@@332 $generated@@333 $generated@@334) (= $generated@@333 $generated@@334)))
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@95) (= (type $generated@@336) $generated@@95)) (= ($generated@@161 $generated@@335 $generated@@336) (= $generated@@335 $generated@@336)))
 :pattern ( ($generated@@161 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@95) (= (type $generated@@339) $generated@@95)) (= ($generated@@337 $generated@@338 $generated@@339) (= $generated@@338 $generated@@339)))
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@95)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (= (type $generated@@344) $generated@@95) (= (type $generated@@345) $generated@@95)) (and ($generated@@340 $generated@@344) ($generated@@340 $generated@@345))) (= ($generated@@161 $generated@@344 $generated@@345)  (and (= ($generated@@341 $generated@@344) ($generated@@341 $generated@@345)) ($generated@@161 ($generated@@342 $generated@@344) ($generated@@342 $generated@@345)))))
 :pattern ( ($generated@@161 $generated@@344 $generated@@345) ($generated@@340 $generated@@344))
 :pattern ( ($generated@@161 $generated@@344 $generated@@345) ($generated@@340 $generated@@345))
)))
(assert  (and (= (type $generated@@348) $generated@@95) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(= (type ($generated@@349 $generated@@350)) $generated@@351))
 :pattern ( ($generated@@349 $generated@@350))
))))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@347 (not (= 1 $generated@@346))) (= $generated@@348 ($generated@@349 $generated@@234)))))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@347 (not (= 1 $generated@@346))) (= $generated@@348 ($generated@@349 $generated@@234)))))
(assert (forall (($generated@@353 T@U) ) (! (= (type ($generated@@352 $generated@@353)) $generated@@82)
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@103 $generated@@169 $generated@@4)) (= (type $generated@@355) $generated@@82)) (= ($generated@@92 $generated@@354 ($generated@@352 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@169) ($generated@@0 ($generated@@108 $generated@@354 $generated@@356))) ($generated@@311 $generated@@356 $generated@@355))
 :pattern ( ($generated@@108 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@92 $generated@@354 ($generated@@352 $generated@@355)))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@82)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@103 $generated@@169 $generated@@4)) (= (type $generated@@360) $generated@@82)) (= ($generated@@92 $generated@@359 ($generated@@357 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@169) ($generated@@0 ($generated@@108 $generated@@359 $generated@@361))) ($generated@@311 $generated@@361 $generated@@360))
 :pattern ( ($generated@@108 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@92 $generated@@359 ($generated@@357 $generated@@360)))
)))
(assert (forall (($generated@@363 Int) ) (! (= ($generated@@362 $generated@@363) $generated@@363)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (! (= ($generated@@349 $generated@@364) $generated@@364)
 :pattern ( ($generated@@349 $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(= (type ($generated@@365 $generated@@367 $generated@@368)) ($generated@@168 $generated@@369)))
 :pattern ( ($generated@@365 $generated@@367 $generated@@368))
)) (forall (($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@370)) $generated@@82)
 :pattern ( ($generated@@366 $generated@@370))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (= (type $generated@@371) ($generated@@168 $generated@@169)) (= (type $generated@@372) $generated@@169)) (= (type $generated@@373) $generated@@82)) (and ($generated@@92 $generated@@371 ($generated@@366 $generated@@373)) ($generated@@311 $generated@@372 $generated@@373))) ($generated@@92 ($generated@@365 $generated@@371 $generated@@372) ($generated@@366 $generated@@373)))
 :pattern ( ($generated@@92 ($generated@@365 $generated@@371 $generated@@372) ($generated@@366 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@95) (= (type $generated@@376) $generated@@95)) (and ($generated@@374 $generated@@375) ($generated@@374 $generated@@376))) (= ($generated@@332 $generated@@375 $generated@@376) true))
 :pattern ( ($generated@@332 $generated@@375 $generated@@376) ($generated@@374 $generated@@375))
 :pattern ( ($generated@@332 $generated@@375 $generated@@376) ($generated@@374 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@378) $generated@@95) (= (type $generated@@379) $generated@@95)) (and ($generated@@377 $generated@@378) ($generated@@377 $generated@@379))) (= ($generated@@332 $generated@@378 $generated@@379) true))
 :pattern ( ($generated@@332 $generated@@378 $generated@@379) ($generated@@377 $generated@@378))
 :pattern ( ($generated@@332 $generated@@378 $generated@@379) ($generated@@377 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@381) $generated@@95) (= (type $generated@@382) $generated@@95)) (and ($generated@@380 $generated@@381) ($generated@@380 $generated@@382))) (= ($generated@@337 $generated@@381 $generated@@382) true))
 :pattern ( ($generated@@337 $generated@@381 $generated@@382) ($generated@@380 $generated@@381))
 :pattern ( ($generated@@337 $generated@@381 $generated@@382) ($generated@@380 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@383) $generated@@82) (= (type $generated@@384) $generated@@82)) (= (type $generated@@385) $generated@@169)) (= (type $generated@@386) $generated@@169)) (= (type $generated@@387) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@387)) (= ($generated@@101 ($generated@@310 $generated@@385 $generated@@386) ($generated@@221 $generated@@383 $generated@@384) $generated@@387)  (and ($generated@@320 $generated@@385 $generated@@383 $generated@@387) ($generated@@320 $generated@@386 $generated@@384 $generated@@387))))
 :pattern ( ($generated@@101 ($generated@@310 $generated@@385 $generated@@386) ($generated@@221 $generated@@383 $generated@@384) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 Int) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@169) (= (type $generated@@390) $generated@@169)) (= ($generated@@92 ($generated@@192 $generated@@388 $generated@@389 $generated@@390) $generated@@319)  (and (and ($generated@@311 $generated@@388 $generated@@321) ($generated@@92 ($generated@@8 $generated@@389) $generated@@96)) ($generated@@311 $generated@@390 $generated@@322))))
 :pattern ( ($generated@@92 ($generated@@192 $generated@@388 $generated@@389 $generated@@390) $generated@@319))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (= (type $generated@@391) $generated@@95) (= ($generated@@220 $generated@@391) (= ($generated@@193 $generated@@391) $generated@@61)))
 :pattern ( ($generated@@220 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (!  (=> (= (type $generated@@392) $generated@@95) (= ($generated@@374 $generated@@392) (= ($generated@@193 $generated@@392) $generated@@64)))
 :pattern ( ($generated@@374 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@95) (= ($generated@@393 $generated@@394) (= ($generated@@193 $generated@@394) $generated@@66)))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (= (type $generated@@396) $generated@@95) (= ($generated@@395 $generated@@396) (= ($generated@@193 $generated@@396) $generated@@67)))
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (= (type $generated@@397) $generated@@95) (= ($generated@@377 $generated@@397) (= ($generated@@193 $generated@@397) $generated@@68)))
 :pattern ( ($generated@@377 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@95) (= ($generated@@398 $generated@@399) (= ($generated@@193 $generated@@399) $generated@@69)))
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (= (type $generated@@400) $generated@@95) (= ($generated@@162 $generated@@400) (= ($generated@@193 $generated@@400) $generated@@70)))
 :pattern ( ($generated@@162 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@95) (= ($generated@@401 $generated@@402) (= ($generated@@193 $generated@@402) $generated@@72)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@95) (= ($generated@@340 $generated@@403) (= ($generated@@193 $generated@@403) $generated@@73)))
 :pattern ( ($generated@@340 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@95) (= ($generated@@404 $generated@@405) (= ($generated@@193 $generated@@405) $generated@@74)))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@95) (= ($generated@@380 $generated@@406) (= ($generated@@193 $generated@@406) $generated@@76)))
 :pattern ( ($generated@@380 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@173 (type $generated@@408))))
 (=> (and (= (type $generated@@408) ($generated@@168 $generated@@410)) (= (type $generated@@409) ($generated@@168 $generated@@410))) (= ($generated@@407 $generated@@408 $generated@@409)  (and (= ($generated@@170 $generated@@408) ($generated@@170 $generated@@409)) (forall (($generated@@411 Int) ) (!  (=> (and (<= 0 $generated@@411) (< $generated@@411 ($generated@@170 $generated@@408))) (= ($generated@@166 $generated@@408 $generated@@411) ($generated@@166 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@166 $generated@@408 $generated@@411))
 :pattern ( ($generated@@166 $generated@@409 $generated@@411))
))))))
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@95) ($generated@@404 $generated@@412)) (exists (($generated@@413 T@U) ($generated@@414 Int) ($generated@@415 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@169) (= (type $generated@@415) $generated@@169)) (= $generated@@412 ($generated@@192 $generated@@413 $generated@@414 $generated@@415)))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
)))
 :pattern ( ($generated@@404 $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@95) ($generated@@220 $generated@@416)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@169) (= (type $generated@@418) $generated@@169)) (= $generated@@416 ($generated@@310 $generated@@417 $generated@@418)))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
)))
 :pattern ( ($generated@@220 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@95) ($generated@@340 $generated@@419)) (exists (($generated@@420 Int) ($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@95) (= $generated@@419 ($generated@@93 $generated@@420 $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
)))
 :pattern ( ($generated@@340 $generated@@419))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@168 $generated@@423))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@T) ) (! (= ($generated@@170 ($generated@@422 $generated@@424)) 0)
 :pattern ( ($generated@@422 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@95) ($generated@@374 $generated@@425)) (= $generated@@425 $generated@@234))
 :pattern ( ($generated@@374 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@95) ($generated@@377 $generated@@426)) (= $generated@@426 $generated@@235))
 :pattern ( ($generated@@377 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@95) ($generated@@380 $generated@@427)) (= $generated@@427 $generated@@236))
 :pattern ( ($generated@@380 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@95)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@95) ($generated@@393 $generated@@430)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@95) (= $generated@@430 ($generated@@428 $generated@@431)))
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
)))
 :pattern ( ($generated@@393 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@95) ($generated@@395 $generated@@432)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) ($generated@@168 $generated@@169)) (= $generated@@432 ($generated@@167 $generated@@433)))
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
)))
 :pattern ( ($generated@@395 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@95) ($generated@@398 $generated@@434)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) ($generated@@168 $generated@@169)) (= $generated@@434 ($generated@@184 $generated@@435)))
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
)))
 :pattern ( ($generated@@398 $generated@@434))
)))
(assert (forall (($generated@@437 Int) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@95)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@95) ($generated@@162 $generated@@438)) (exists (($generated@@439 Int) ) (= $generated@@438 ($generated@@436 $generated@@439))))
 :pattern ( ($generated@@162 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@95) ($generated@@401 $generated@@440)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) ($generated@@168 $generated@@169)) (= $generated@@440 ($generated@@188 $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
)))
 :pattern ( ($generated@@401 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
 (=> (= (type $generated@@442) ($generated@@168 $generated@@444)) (= ($generated@@170 ($generated@@365 $generated@@442 $generated@@443)) (+ 1 ($generated@@170 $generated@@442)))))
 :pattern ( ($generated@@365 $generated@@442 $generated@@443))
)))
(assert  (and (= ($generated@@1 $generated@@447) 18) (forall (($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@448)) $generated@@447)
 :pattern ( ($generated@@446 $generated@@448))
))))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (= (type $generated@@449) $generated@@447) (= (type $generated@@450) $generated@@95)) (= (type $generated@@451) $generated@@95)) (= ($generated@@445 ($generated@@446 $generated@@449) $generated@@450 $generated@@451) ($generated@@445 $generated@@449 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@445 ($generated@@446 $generated@@449) $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@169)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@82) (= (type $generated@@456) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@320 ($generated@@452 $generated@@454) $generated@@455 $generated@@456) ($generated@@101 $generated@@454 $generated@@455 $generated@@456)))
 :pattern ( ($generated@@320 ($generated@@452 $generated@@454) $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@459 T@T) ) (! (= (type ($generated@@458 $generated@@459)) ($generated@@103 $generated@@459 $generated@@2))
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@106 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@103 $generated@@461 $generated@@2)) (and (= (= ($generated@@457 $generated@@460) 0) (= $generated@@460 ($generated@@458 $generated@@461))) (=> (not (= ($generated@@457 $generated@@460) 0)) (exists (($generated@@462 T@U) ) (!  (and (= (type $generated@@462) $generated@@461) (< 0 ($generated ($generated@@108 $generated@@460 $generated@@462))))
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@457 $generated@@460))
)))
(assert  (and (and (and (and (forall (($generated@@468 T@T) ($generated@@469 T@T) ) (= ($generated@@1 ($generated@@465 $generated@@468 $generated@@469)) 19)) (forall (($generated@@470 T@T) ($generated@@471 T@T) ) (! (= ($generated@@466 ($generated@@465 $generated@@470 $generated@@471)) $generated@@470)
 :pattern ( ($generated@@465 $generated@@470 $generated@@471))
))) (forall (($generated@@472 T@T) ($generated@@473 T@T) ) (! (= ($generated@@467 ($generated@@465 $generated@@472 $generated@@473)) $generated@@473)
 :pattern ( ($generated@@465 $generated@@472 $generated@@473))
))) (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@466 (type $generated@@474))))
(= (type ($generated@@463 $generated@@474)) ($generated@@103 $generated@@475 $generated@@4)))
 :pattern ( ($generated@@463 $generated@@474))
))) (forall (($generated@@476 T@T) ($generated@@477 T@T) ) (! (= (type ($generated@@464 $generated@@476 $generated@@477)) ($generated@@465 $generated@@476 $generated@@477))
 :pattern ( ($generated@@464 $generated@@476 $generated@@477))
))))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@T) ) (! (let (($generated@@480 (type $generated@@478)))
 (not ($generated@@0 ($generated@@108 ($generated@@463 ($generated@@464 $generated@@480 $generated@@479)) $generated@@478))))
 :pattern ( (let (($generated@@480 (type $generated@@478)))
($generated@@108 ($generated@@463 ($generated@@464 $generated@@480 $generated@@479)) $generated@@478)))
)))
(assert  (and (and (and (and (forall (($generated@@486 T@T) ($generated@@487 T@T) ) (= ($generated@@1 ($generated@@483 $generated@@486 $generated@@487)) 20)) (forall (($generated@@488 T@T) ($generated@@489 T@T) ) (! (= ($generated@@484 ($generated@@483 $generated@@488 $generated@@489)) $generated@@488)
 :pattern ( ($generated@@483 $generated@@488 $generated@@489))
))) (forall (($generated@@490 T@T) ($generated@@491 T@T) ) (! (= ($generated@@485 ($generated@@483 $generated@@490 $generated@@491)) $generated@@491)
 :pattern ( ($generated@@483 $generated@@490 $generated@@491))
))) (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@484 (type $generated@@492))))
(= (type ($generated@@481 $generated@@492)) ($generated@@103 $generated@@493 $generated@@4)))
 :pattern ( ($generated@@481 $generated@@492))
))) (forall (($generated@@494 T@T) ($generated@@495 T@T) ) (! (= (type ($generated@@482 $generated@@494 $generated@@495)) ($generated@@483 $generated@@494 $generated@@495))
 :pattern ( ($generated@@482 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@T) ) (! (let (($generated@@498 (type $generated@@496)))
 (not ($generated@@0 ($generated@@108 ($generated@@481 ($generated@@482 $generated@@498 $generated@@497)) $generated@@496))))
 :pattern ( (let (($generated@@498 (type $generated@@496)))
($generated@@108 ($generated@@481 ($generated@@482 $generated@@498 $generated@@497)) $generated@@496)))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@106 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@103 $generated@@500 $generated@@2)) (= ($generated@@238 $generated@@499) (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@500) (and (<= 0 ($generated ($generated@@108 $generated@@499 $generated@@501))) (<= ($generated ($generated@@108 $generated@@499 $generated@@501)) ($generated@@457 $generated@@499))))
 :pattern ( ($generated@@108 $generated@@499 $generated@@501))
)))))
 :pattern ( ($generated@@238 $generated@@499))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@169) ($generated@@311 $generated@@502 $generated@@96)) (and (= ($generated@@452 ($generated@@172 $generated@@2 $generated@@502)) $generated@@502) ($generated@@92 ($generated@@172 $generated@@2 $generated@@502) $generated@@96)))
 :pattern ( ($generated@@311 $generated@@502 $generated@@96))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@169) ($generated@@311 $generated@@503 $generated@@318)) (and (= ($generated@@452 ($generated@@172 $generated@@95 $generated@@503)) $generated@@503) ($generated@@92 ($generated@@172 $generated@@95 $generated@@503) $generated@@318)))
 :pattern ( ($generated@@311 $generated@@503 $generated@@318))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@169) ($generated@@311 $generated@@504 $generated@@94)) (and (= ($generated@@452 ($generated@@172 $generated@@95 $generated@@504)) $generated@@504) ($generated@@92 ($generated@@172 $generated@@95 $generated@@504) $generated@@94)))
 :pattern ( ($generated@@311 $generated@@504 $generated@@94))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@169) ($generated@@311 $generated@@505 $generated@@319)) (and (= ($generated@@452 ($generated@@172 $generated@@95 $generated@@505)) $generated@@505) ($generated@@92 ($generated@@172 $generated@@95 $generated@@505) $generated@@319)))
 :pattern ( ($generated@@311 $generated@@505 $generated@@319))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@95) (= ($generated@@92 ($generated@@428 $generated@@506) $generated@@318) ($generated@@92 $generated@@506 $generated@@318)))
 :pattern ( ($generated@@92 ($generated@@428 $generated@@506) $generated@@318))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@92 ($generated@@436 $generated@@507) $generated@@94) ($generated@@92 ($generated@@8 $generated@@507) $generated@@96))
 :pattern ( ($generated@@92 ($generated@@436 $generated@@507) $generated@@94))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 Int) ($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
 (=> (= (type $generated@@508) ($generated@@168 $generated@@511)) (and (=> (= $generated@@509 ($generated@@170 $generated@@508)) (= ($generated@@166 ($generated@@365 $generated@@508 $generated@@510) $generated@@509) $generated@@510)) (=> (not (= $generated@@509 ($generated@@170 $generated@@508))) (= ($generated@@166 ($generated@@365 $generated@@508 $generated@@510) $generated@@509) ($generated@@166 $generated@@508 $generated@@509))))))
 :pattern ( ($generated@@166 ($generated@@365 $generated@@508 $generated@@510) $generated@@509))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@95)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@514) $generated@@95) (= (type $generated@@515) $generated@@95)) (and ($generated@@393 $generated@@514) ($generated@@393 $generated@@515))) (= ($generated@@332 $generated@@514 $generated@@515) ($generated@@332 ($generated@@512 $generated@@514) ($generated@@512 $generated@@515))))
 :pattern ( ($generated@@332 $generated@@514 $generated@@515) ($generated@@393 $generated@@514))
 :pattern ( ($generated@@332 $generated@@514 $generated@@515) ($generated@@393 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) ($generated@@168 $generated@@169))
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@518) $generated@@95) (= (type $generated@@519) $generated@@95)) (and ($generated@@395 $generated@@518) ($generated@@395 $generated@@519))) (= ($generated@@332 $generated@@518 $generated@@519) ($generated@@407 ($generated@@516 $generated@@518) ($generated@@516 $generated@@519))))
 :pattern ( ($generated@@332 $generated@@518 $generated@@519) ($generated@@395 $generated@@518))
 :pattern ( ($generated@@332 $generated@@518 $generated@@519) ($generated@@395 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) ($generated@@168 $generated@@169))
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@95) (= (type $generated@@523) $generated@@95)) (and ($generated@@398 $generated@@522) ($generated@@398 $generated@@523))) (= ($generated@@332 $generated@@522 $generated@@523) ($generated@@407 ($generated@@520 $generated@@522) ($generated@@520 $generated@@523))))
 :pattern ( ($generated@@332 $generated@@522 $generated@@523) ($generated@@398 $generated@@522))
 :pattern ( ($generated@@332 $generated@@522 $generated@@523) ($generated@@398 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) ($generated@@168 $generated@@169))
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@95) (= (type $generated@@527) $generated@@95)) (and ($generated@@401 $generated@@526) ($generated@@401 $generated@@527))) (= ($generated@@161 $generated@@526 $generated@@527) ($generated@@407 ($generated@@524 $generated@@526) ($generated@@524 $generated@@527))))
 :pattern ( ($generated@@161 $generated@@526 $generated@@527) ($generated@@401 $generated@@526))
 :pattern ( ($generated@@161 $generated@@526 $generated@@527) ($generated@@401 $generated@@527))
)))
(assert  (and (and (forall (($generated@@532 T@U) ) (! (= (type ($generated@@528 $generated@@532)) $generated@@95)
 :pattern ( ($generated@@528 $generated@@532))
)) (= (type $generated@@530) $generated@@447)) (= (type $generated@@531) $generated@@95)))
(assert  (=> (<= 4 $generated@@346) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@95) (or ($generated@@529 $generated@@533) (and (not (= 4 $generated@@346)) (and ($generated@@92 $generated@@533 $generated@@94) ($generated@@445 $generated@@530 $generated@@533 ($generated@@349 $generated@@531)))))) ($generated@@92 ($generated@@528 $generated@@533) $generated@@319))
 :pattern ( ($generated@@528 $generated@@533))
))))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 ($generated@@467 (type $generated@@534))))
(let (($generated@@536 ($generated@@466 (type $generated@@534))))
 (=> (= (type $generated@@534) ($generated@@465 $generated@@536 $generated@@535)) (or (= $generated@@534 ($generated@@464 $generated@@536 $generated@@535)) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@536) ($generated@@0 ($generated@@108 ($generated@@463 $generated@@534) $generated@@537)))
 :no-pattern (type $generated@@537)
 :no-pattern ($generated $generated@@537)
 :no-pattern ($generated@@0 $generated@@537)
))))))
 :pattern ( ($generated@@463 $generated@@534))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@467 (type $generated@@539))))
(= (type ($generated@@538 $generated@@539)) ($generated@@103 $generated@@540 $generated@@4)))
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@467 (type $generated@@541))))
(let (($generated@@543 ($generated@@466 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@465 $generated@@543 $generated@@542)) (or (= $generated@@541 ($generated@@464 $generated@@543 $generated@@542)) (exists (($generated@@544 T@U) ) (!  (and (= (type $generated@@544) $generated@@542) ($generated@@0 ($generated@@108 ($generated@@538 $generated@@541) $generated@@544)))
 :no-pattern (type $generated@@544)
 :no-pattern ($generated $generated@@544)
 :no-pattern ($generated@@0 $generated@@544)
))))))
 :pattern ( ($generated@@538 $generated@@541))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@485 (type $generated@@545))))
(let (($generated@@547 ($generated@@484 (type $generated@@545))))
 (=> (= (type $generated@@545) ($generated@@483 $generated@@547 $generated@@546)) (or (= $generated@@545 ($generated@@482 $generated@@547 $generated@@546)) (exists (($generated@@548 T@U) ) (!  (and (= (type $generated@@548) $generated@@547) ($generated@@0 ($generated@@108 ($generated@@481 $generated@@545) $generated@@548)))
 :no-pattern (type $generated@@548)
 :no-pattern ($generated $generated@@548)
 :no-pattern ($generated@@0 $generated@@548)
))))))
 :pattern ( ($generated@@481 $generated@@545))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@485 (type $generated@@550))))
(= (type ($generated@@549 $generated@@550)) ($generated@@103 $generated@@551 $generated@@4)))
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@485 (type $generated@@552))))
(let (($generated@@554 ($generated@@484 (type $generated@@552))))
 (=> (= (type $generated@@552) ($generated@@483 $generated@@554 $generated@@553)) (or (= $generated@@552 ($generated@@482 $generated@@554 $generated@@553)) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@553) ($generated@@0 ($generated@@108 ($generated@@549 $generated@@552) $generated@@555)))
 :no-pattern (type $generated@@555)
 :no-pattern ($generated $generated@@555)
 :no-pattern ($generated@@0 $generated@@555)
))))))
 :pattern ( ($generated@@549 $generated@@552))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@103 $generated@@169 $generated@@2)) (= (type $generated@@557) $generated@@82)) (= ($generated@@92 $generated@@556 ($generated@@237 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@169) (< 0 ($generated ($generated@@108 $generated@@556 $generated@@558)))) ($generated@@311 $generated@@558 $generated@@557))
 :pattern ( ($generated@@108 $generated@@556 $generated@@558))
))))
 :pattern ( ($generated@@92 $generated@@556 ($generated@@237 $generated@@557)))
)))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@347 (not (= 1 $generated@@346))) ($generated@@92 $generated@@348 $generated@@318))))
(assert (= (type $generated@@560) $generated@@95))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@559 (not (= 1 $generated@@346))) ($generated@@92 $generated@@560 $generated@@318))))
(assert  (=> (<= 2 $generated@@346) (=> (or $generated@@561 (not (= 2 $generated@@346))) ($generated@@92 $generated@@531 $generated@@318))))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) ($generated@@168 $generated@@169)) (= ($generated@@92 ($generated@@167 $generated@@562) $generated@@318) ($generated@@92 $generated@@562 ($generated@@366 $generated@@318))))
 :pattern ( ($generated@@92 ($generated@@167 $generated@@562) $generated@@318))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) ($generated@@168 $generated@@169)) (= ($generated@@92 ($generated@@184 $generated@@563) $generated@@318) ($generated@@92 $generated@@563 ($generated@@366 $generated@@318))))
 :pattern ( ($generated@@92 ($generated@@184 $generated@@563) $generated@@318))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) ($generated@@168 $generated@@169)) (= ($generated@@92 ($generated@@188 $generated@@564) $generated@@94) ($generated@@92 $generated@@564 ($generated@@366 $generated@@94))))
 :pattern ( ($generated@@92 ($generated@@188 $generated@@564) $generated@@94))
)))
(assert  (=> (<= 2 $generated@@346) (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@447) (= (type $generated@@567) $generated@@95)) (= (type $generated@@568) $generated@@95)) (or ($generated@@565 $generated@@567 $generated@@568) (and (not (= 2 $generated@@346)) (and ($generated@@92 $generated@@567 $generated@@94) ($generated@@92 $generated@@568 $generated@@318))))) true)
 :pattern ( ($generated@@445 $generated@@566 $generated@@567 $generated@@568))
))))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@95) (= (type $generated@@570) $generated@@95)) (and ($generated@@404 $generated@@569) ($generated@@404 $generated@@570))) (= ($generated@@337 $generated@@569 $generated@@570)  (and (and (= ($generated@@201 $generated@@569) ($generated@@201 $generated@@570)) (= ($generated@@206 $generated@@569) ($generated@@206 $generated@@570))) (= ($generated@@210 $generated@@569) ($generated@@210 $generated@@570)))))
 :pattern ( ($generated@@337 $generated@@569 $generated@@570) ($generated@@404 $generated@@569))
 :pattern ( ($generated@@337 $generated@@569 $generated@@570) ($generated@@404 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@103 $generated@@169 $generated@@4)) (= (type $generated@@572) $generated@@82)) (= (type $generated@@573) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@571 ($generated@@352 $generated@@572) $generated@@573) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@169) ($generated@@0 ($generated@@108 $generated@@571 $generated@@574))) ($generated@@320 $generated@@574 $generated@@572 $generated@@573))
 :pattern ( ($generated@@108 $generated@@571 $generated@@574))
))))
 :pattern ( ($generated@@101 $generated@@571 ($generated@@352 $generated@@572) $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@103 $generated@@169 $generated@@4)) (= (type $generated@@576) $generated@@82)) (= (type $generated@@577) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@575 ($generated@@357 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@169) ($generated@@0 ($generated@@108 $generated@@575 $generated@@578))) ($generated@@320 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@108 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@101 $generated@@575 ($generated@@357 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
(= ($generated ($generated@@108 ($generated@@458 $generated@@580) $generated@@579)) 0))
 :pattern ( (let (($generated@@580 (type $generated@@579)))
($generated@@108 ($generated@@458 $generated@@580) $generated@@579)))
)))
(assert  (and (forall (($generated@@583 T@U) ) (! (= (type ($generated@@581 $generated@@583)) ($generated@@103 $generated@@169 $generated@@4))
 :pattern ( ($generated@@581 $generated@@583))
)) (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@467 (type $generated@@584))))
(let (($generated@@586 ($generated@@466 (type $generated@@584))))
(= (type ($generated@@582 $generated@@584)) ($generated@@103 $generated@@586 $generated@@585))))
 :pattern ( ($generated@@582 $generated@@584))
))))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@465 $generated@@169 $generated@@169)) (= (type $generated@@588) $generated@@169)) (= ($generated@@0 ($generated@@108 ($generated@@581 $generated@@587) $generated@@588))  (and ($generated@@0 ($generated@@108 ($generated@@463 $generated@@587) ($generated@@228 ($generated@@172 $generated@@95 $generated@@588)))) (= ($generated@@108 ($generated@@582 $generated@@587) ($generated@@228 ($generated@@172 $generated@@95 $generated@@588))) ($generated@@229 ($generated@@172 $generated@@95 $generated@@588))))))
 :pattern ( ($generated@@108 ($generated@@581 $generated@@587) $generated@@588))
)))
(assert  (and (forall (($generated@@591 T@U) ) (! (= (type ($generated@@589 $generated@@591)) ($generated@@103 $generated@@169 $generated@@4))
 :pattern ( ($generated@@589 $generated@@591))
)) (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@485 (type $generated@@592))))
(let (($generated@@594 ($generated@@484 (type $generated@@592))))
(= (type ($generated@@590 $generated@@592)) ($generated@@103 $generated@@594 $generated@@593))))
 :pattern ( ($generated@@590 $generated@@592))
))))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@483 $generated@@169 $generated@@169)) (= (type $generated@@596) $generated@@169)) (= ($generated@@0 ($generated@@108 ($generated@@589 $generated@@595) $generated@@596))  (and ($generated@@0 ($generated@@108 ($generated@@481 $generated@@595) ($generated@@228 ($generated@@172 $generated@@95 $generated@@596)))) (= ($generated@@108 ($generated@@590 $generated@@595) ($generated@@228 ($generated@@172 $generated@@95 $generated@@596))) ($generated@@229 ($generated@@172 $generated@@95 $generated@@596))))))
 :pattern ( ($generated@@108 ($generated@@589 $generated@@595) $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@598)))
(let (($generated@@600 ($generated@@466 (type $generated@@597))))
 (=> (= (type $generated@@597) ($generated@@465 $generated@@600 $generated@@599)) (= ($generated@@0 ($generated@@108 ($generated@@538 $generated@@597) $generated@@598)) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@600) (and ($generated@@0 ($generated@@108 ($generated@@463 $generated@@597) $generated@@601)) (= $generated@@598 ($generated@@108 ($generated@@582 $generated@@597) $generated@@601))))
 :pattern ( ($generated@@108 ($generated@@463 $generated@@597) $generated@@601))
 :pattern ( ($generated@@108 ($generated@@582 $generated@@597) $generated@@601))
))))))
 :pattern ( ($generated@@108 ($generated@@538 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@603)))
(let (($generated@@605 ($generated@@484 (type $generated@@602))))
 (=> (= (type $generated@@602) ($generated@@483 $generated@@605 $generated@@604)) (= ($generated@@0 ($generated@@108 ($generated@@549 $generated@@602) $generated@@603)) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@605) (and ($generated@@0 ($generated@@108 ($generated@@481 $generated@@602) $generated@@606)) (= $generated@@603 ($generated@@108 ($generated@@590 $generated@@602) $generated@@606))))
 :pattern ( ($generated@@108 ($generated@@481 $generated@@602) $generated@@606))
 :pattern ( ($generated@@108 ($generated@@590 $generated@@602) $generated@@606))
))))))
 :pattern ( ($generated@@108 ($generated@@549 $generated@@602) $generated@@603))
)))
(assert  (and (forall (($generated@@611 T@U) ) (! (= (type ($generated@@609 $generated@@611)) $generated@@169)
 :pattern ( ($generated@@609 $generated@@611))
)) (forall (($generated@@612 T@U) ) (! (= (type ($generated@@610 $generated@@612)) $generated@@169)
 :pattern ( ($generated@@610 $generated@@612))
))))
(assert  (=> (<= 4 $generated@@346) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@95) (or ($generated@@529 ($generated@@349 $generated@@613)) (and (not (= 4 $generated@@346)) (and ($generated@@92 $generated@@613 $generated@@94) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@445 $generated@@530 ($generated@@349 $generated@@613) ($generated@@349 $generated@@531))))))))) (and (=> (= ($generated@@362 ($generated@@341 ($generated@@349 $generated@@613))) ($generated@@362 0)) (and ($generated@@607 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@524 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@613))))) ($generated@@362 0)))) ($generated@@608 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@524 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@613))))) ($generated@@362 2)))))) (= ($generated@@528 ($generated@@349 $generated@@613)) (ite (= ($generated@@362 ($generated@@341 ($generated@@349 $generated@@613))) ($generated@@362 0)) (let (($generated@@614 ($generated@@609 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@524 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@613))))) ($generated@@362 0))))))
($generated@@192 $generated@@614 ($generated@@163 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@524 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@613))))) ($generated@@362 1)))) ($generated@@610 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@524 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@613))))) ($generated@@362 2)))))) $generated@@236))))
 :weight 3
 :pattern ( ($generated@@528 ($generated@@349 $generated@@613)))
))))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (! (= (type ($generated@@615 $generated@@616 $generated@@617)) $generated@@82)
 :pattern ( ($generated@@615 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@465 $generated@@169 $generated@@169)) (= (type $generated@@619) $generated@@82)) (= (type $generated@@620) $generated@@82)) (= (type $generated@@621) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@618 ($generated@@615 $generated@@619 $generated@@620) $generated@@621) (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@169) ($generated@@0 ($generated@@108 ($generated@@463 $generated@@618) $generated@@622))) (and ($generated@@320 ($generated@@108 ($generated@@582 $generated@@618) $generated@@622) $generated@@620 $generated@@621) ($generated@@320 $generated@@622 $generated@@619 $generated@@621)))
 :pattern ( ($generated@@108 ($generated@@582 $generated@@618) $generated@@622))
 :pattern ( ($generated@@108 ($generated@@463 $generated@@618) $generated@@622))
))))
 :pattern ( ($generated@@101 $generated@@618 ($generated@@615 $generated@@619 $generated@@620) $generated@@621))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (! (= (type ($generated@@623 $generated@@624 $generated@@625)) $generated@@82)
 :pattern ( ($generated@@623 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@483 $generated@@169 $generated@@169)) (= (type $generated@@627) $generated@@82)) (= (type $generated@@628) $generated@@82)) (= (type $generated@@629) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@626 ($generated@@623 $generated@@627 $generated@@628) $generated@@629) (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@169) ($generated@@0 ($generated@@108 ($generated@@481 $generated@@626) $generated@@630))) (and ($generated@@320 ($generated@@108 ($generated@@590 $generated@@626) $generated@@630) $generated@@628 $generated@@629) ($generated@@320 $generated@@630 $generated@@627 $generated@@629)))
 :pattern ( ($generated@@108 ($generated@@590 $generated@@626) $generated@@630))
 :pattern ( ($generated@@108 ($generated@@481 $generated@@626) $generated@@630))
))))
 :pattern ( ($generated@@101 $generated@@626 ($generated@@623 $generated@@627 $generated@@628) $generated@@629))
)))
(assert  (=> (<= 2 $generated@@346) (=> (or $generated@@561 (not (= 2 $generated@@346))) (and (and $generated@@347 $generated@@559) (= $generated@@531 ($generated@@349 ($generated@@184 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 ($generated@@167 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 $generated@@348))) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@560)))))))) ($generated@@452 ($generated@@349 $generated@@234)))))))))))
(assert  (=> (<= 2 $generated@@346) (=> (or $generated@@561 (not (= 2 $generated@@346))) (and (and $generated@@347 $generated@@559) (= $generated@@531 ($generated@@349 ($generated@@184 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 ($generated@@167 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 $generated@@348))) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@560)))))))) ($generated@@452 ($generated@@349 $generated@@234)))))))))))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (! (let (($generated@@633 ($generated@@173 (type $generated@@631))))
 (=> (and (and (= (type $generated@@631) ($generated@@168 $generated@@633)) (= (type $generated@@632) ($generated@@168 $generated@@633))) ($generated@@407 $generated@@631 $generated@@632)) (= $generated@@631 $generated@@632)))
 :pattern ( ($generated@@407 $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@95) (= (type $generated@@635) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@635)) (= ($generated@@101 ($generated@@428 $generated@@634) $generated@@318 $generated@@635) ($generated@@101 $generated@@634 $generated@@318 $generated@@635)))
 :pattern ( ($generated@@101 ($generated@@428 $generated@@634) $generated@@318 $generated@@635))
)))
(assert (forall (($generated@@636 Int) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@216 $generated@@637)) (= ($generated@@101 ($generated@@436 $generated@@636) $generated@@94 $generated@@637) ($generated@@101 ($generated@@8 $generated@@636) $generated@@96 $generated@@637)))
 :pattern ( ($generated@@101 ($generated@@436 $generated@@636) $generated@@94 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@95) ($generated@@92 $generated@@638 $generated@@319)) (or ($generated@@404 $generated@@638) ($generated@@380 $generated@@638)))
 :pattern ( ($generated@@380 $generated@@638) ($generated@@92 $generated@@638 $generated@@319))
 :pattern ( ($generated@@404 $generated@@638) ($generated@@92 $generated@@638 $generated@@319))
)))
(assert (forall (($generated@@640 T@T) ) (! (= (type ($generated@@639 $generated@@640)) ($generated@@103 $generated@@640 $generated@@4))
 :pattern ( ($generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (! (let (($generated@@642 ($generated@@485 (type $generated@@641))))
(let (($generated@@643 ($generated@@484 (type $generated@@641))))
 (=> (= (type $generated@@641) ($generated@@483 $generated@@643 $generated@@642)) (= (= $generated@@641 ($generated@@482 $generated@@643 $generated@@642)) (= ($generated@@481 $generated@@641) ($generated@@639 $generated@@643))))))
 :pattern ( ($generated@@481 $generated@@641))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@485 (type $generated@@644))))
(let (($generated@@646 ($generated@@484 (type $generated@@644))))
 (=> (= (type $generated@@644) ($generated@@483 $generated@@646 $generated@@645)) (= (= $generated@@644 ($generated@@482 $generated@@646 $generated@@645)) (= ($generated@@549 $generated@@644) ($generated@@639 $generated@@645))))))
 :pattern ( ($generated@@549 $generated@@644))
)))
(assert (forall (($generated@@647 T@U) ) (! (let (($generated@@648 ($generated@@485 (type $generated@@647))))
(let (($generated@@649 ($generated@@484 (type $generated@@647))))
 (=> (= (type $generated@@647) ($generated@@483 $generated@@649 $generated@@648)) (= (= $generated@@647 ($generated@@482 $generated@@649 $generated@@648)) (= ($generated@@589 $generated@@647) ($generated@@639 $generated@@169))))))
 :pattern ( ($generated@@589 $generated@@647))
)))
(assert (forall (($generated@@650 T@U) ) (! (let (($generated@@651 ($generated@@467 (type $generated@@650))))
(let (($generated@@652 ($generated@@466 (type $generated@@650))))
 (=> (= (type $generated@@650) ($generated@@465 $generated@@652 $generated@@651)) (or (= $generated@@650 ($generated@@464 $generated@@652 $generated@@651)) (exists (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (and (and (= (type $generated@@653) $generated@@169) (= (type $generated@@654) $generated@@169)) ($generated@@0 ($generated@@108 ($generated@@581 $generated@@650) ($generated@@452 ($generated@@310 $generated@@653 $generated@@654)))))
 :no-pattern (type $generated@@653)
 :no-pattern (type $generated@@654)
 :no-pattern ($generated $generated@@653)
 :no-pattern ($generated@@0 $generated@@653)
 :no-pattern ($generated $generated@@654)
 :no-pattern ($generated@@0 $generated@@654)
))))))
 :pattern ( ($generated@@581 $generated@@650))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@485 (type $generated@@655))))
(let (($generated@@657 ($generated@@484 (type $generated@@655))))
 (=> (= (type $generated@@655) ($generated@@483 $generated@@657 $generated@@656)) (or (= $generated@@655 ($generated@@482 $generated@@657 $generated@@656)) (exists (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (and (and (= (type $generated@@658) $generated@@169) (= (type $generated@@659) $generated@@169)) ($generated@@0 ($generated@@108 ($generated@@589 $generated@@655) ($generated@@452 ($generated@@310 $generated@@658 $generated@@659)))))
 :no-pattern (type $generated@@658)
 :no-pattern (type $generated@@659)
 :no-pattern ($generated $generated@@658)
 :no-pattern ($generated@@0 $generated@@658)
 :no-pattern ($generated $generated@@659)
 :no-pattern ($generated@@0 $generated@@659)
))))))
 :pattern ( ($generated@@589 $generated@@655))
)))
(assert  (=> (<= 4 $generated@@346) (forall (($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@95) (or ($generated@@529 $generated@@660) (and (not (= 4 $generated@@346)) (and ($generated@@92 $generated@@660 $generated@@94) ($generated@@445 $generated@@530 $generated@@660 ($generated@@349 $generated@@531)))))) (and (=> (= ($generated@@341 $generated@@660) ($generated@@362 0)) (and ($generated@@607 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@660)) ($generated@@362 0)))) ($generated@@608 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@660)) ($generated@@362 2)))))) (= ($generated@@528 $generated@@660) (ite (= ($generated@@341 $generated@@660) ($generated@@362 0)) (let (($generated@@661 ($generated@@609 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@660)) ($generated@@362 0))))))
($generated@@192 $generated@@661 ($generated@@163 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@660)) ($generated@@362 1)))) ($generated@@610 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@660)) ($generated@@362 2)))))) $generated@@236))))
 :pattern ( ($generated@@528 $generated@@660))
))))
(assert (forall (($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@169) ($generated@@311 $generated@@662 $generated@@46)) (and (= ($generated@@452 ($generated@@172 $generated@@2 $generated@@662)) $generated@@662) ($generated@@92 ($generated@@172 $generated@@2 $generated@@662) $generated@@46)))
 :pattern ( ($generated@@311 $generated@@662 $generated@@46))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@169) ($generated@@311 $generated@@663 $generated@@47)) (and (= ($generated@@452 ($generated@@172 $generated@@3 $generated@@663)) $generated@@663) ($generated@@92 ($generated@@172 $generated@@3 $generated@@663) $generated@@47)))
 :pattern ( ($generated@@311 $generated@@663 $generated@@47))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@169) ($generated@@311 $generated@@664 $generated@@44)) (and (= ($generated@@452 ($generated@@172 $generated@@4 $generated@@664)) $generated@@664) ($generated@@92 ($generated@@172 $generated@@4 $generated@@664) $generated@@44)))
 :pattern ( ($generated@@311 $generated@@664 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@665) 21))
(assert (forall (($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@169) ($generated@@311 $generated@@666 $generated@@45)) (and (= ($generated@@452 ($generated@@172 $generated@@665 $generated@@666)) $generated@@666) ($generated@@92 ($generated@@172 $generated@@665 $generated@@666) $generated@@45)))
 :pattern ( ($generated@@311 $generated@@666 $generated@@45))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@82) (= ($generated@@311 ($generated@@452 $generated@@667) $generated@@668) ($generated@@92 $generated@@667 $generated@@668)))
 :pattern ( ($generated@@311 ($generated@@452 $generated@@667) $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ) (! (let (($generated@@670 ($generated@@106 (type $generated@@669))))
 (=> (= (type $generated@@669) ($generated@@103 $generated@@670 $generated@@2)) (<= 0 ($generated@@457 $generated@@669))))
 :pattern ( ($generated@@457 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ) (! (let (($generated@@672 ($generated@@173 (type $generated@@671))))
 (=> (= (type $generated@@671) ($generated@@168 $generated@@672)) (<= 0 ($generated@@170 $generated@@671))))
 :pattern ( ($generated@@170 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (= (type $generated@@673) ($generated@@168 $generated@@169)) (= (type $generated@@674) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@674)) (= ($generated@@101 ($generated@@167 $generated@@673) $generated@@318 $generated@@674) ($generated@@101 $generated@@673 ($generated@@366 $generated@@318) $generated@@674)))
 :pattern ( ($generated@@101 ($generated@@167 $generated@@673) $generated@@318 $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (= (type $generated@@675) ($generated@@168 $generated@@169)) (= (type $generated@@676) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@676)) (= ($generated@@101 ($generated@@184 $generated@@675) $generated@@318 $generated@@676) ($generated@@101 $generated@@675 ($generated@@366 $generated@@318) $generated@@676)))
 :pattern ( ($generated@@101 ($generated@@184 $generated@@675) $generated@@318 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@677) ($generated@@168 $generated@@169)) (= (type $generated@@678) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@678)) (= ($generated@@101 ($generated@@188 $generated@@677) $generated@@94 $generated@@678) ($generated@@101 $generated@@677 ($generated@@366 $generated@@94) $generated@@678)))
 :pattern ( ($generated@@101 ($generated@@188 $generated@@677) $generated@@94 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ) (! (= (type ($generated@@679 $generated@@680)) $generated@@82)
 :pattern ( ($generated@@679 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@82) (= (type $generated@@682) $generated@@82)) (= ($generated@@679 ($generated@@615 $generated@@681 $generated@@682)) $generated@@681))
 :pattern ( ($generated@@615 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ) (! (= (type ($generated@@683 $generated@@684)) $generated@@82)
 :pattern ( ($generated@@683 $generated@@684))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) $generated@@82) (= (type $generated@@686) $generated@@82)) (= ($generated@@683 ($generated@@615 $generated@@685 $generated@@686)) $generated@@686))
 :pattern ( ($generated@@615 $generated@@685 $generated@@686))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) $generated@@82) (= (type $generated@@688) $generated@@82)) (= ($generated@@90 ($generated@@615 $generated@@687 $generated@@688)) $generated@@58))
 :pattern ( ($generated@@615 $generated@@687 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ) (! (= (type ($generated@@689 $generated@@690)) $generated@@82)
 :pattern ( ($generated@@689 $generated@@690))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) $generated@@82) (= (type $generated@@692) $generated@@82)) (= ($generated@@689 ($generated@@623 $generated@@691 $generated@@692)) $generated@@691))
 :pattern ( ($generated@@623 $generated@@691 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ) (! (= (type ($generated@@693 $generated@@694)) $generated@@82)
 :pattern ( ($generated@@693 $generated@@694))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) $generated@@82) (= (type $generated@@696) $generated@@82)) (= ($generated@@693 ($generated@@623 $generated@@695 $generated@@696)) $generated@@696))
 :pattern ( ($generated@@623 $generated@@695 $generated@@696))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@697) $generated@@82) (= (type $generated@@698) $generated@@82)) (= ($generated@@90 ($generated@@623 $generated@@697 $generated@@698)) $generated@@59))
 :pattern ( ($generated@@623 $generated@@697 $generated@@698))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) $generated@@169) (= (type $generated@@700) $generated@@169)) (= ($generated@@193 ($generated@@310 $generated@@699 $generated@@700)) $generated@@61))
 :pattern ( ($generated@@310 $generated@@699 $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ) (! (= (type ($generated@@701 $generated@@702)) $generated@@82)
 :pattern ( ($generated@@701 $generated@@702))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) $generated@@82) (= (type $generated@@704) $generated@@82)) (= ($generated@@701 ($generated@@221 $generated@@703 $generated@@704)) $generated@@703))
 :pattern ( ($generated@@221 $generated@@703 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ) (! (= (type ($generated@@705 $generated@@706)) $generated@@82)
 :pattern ( ($generated@@705 $generated@@706))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@82) (= (type $generated@@708) $generated@@82)) (= ($generated@@705 ($generated@@221 $generated@@707 $generated@@708)) $generated@@708))
 :pattern ( ($generated@@221 $generated@@707 $generated@@708))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@709) $generated@@169) (= (type $generated@@710) $generated@@169)) (= ($generated@@228 ($generated@@310 $generated@@709 $generated@@710)) $generated@@709))
 :pattern ( ($generated@@310 $generated@@709 $generated@@710))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (= (type $generated@@711) $generated@@169) (= (type $generated@@712) $generated@@169)) (= ($generated@@229 ($generated@@310 $generated@@711 $generated@@712)) $generated@@712))
 :pattern ( ($generated@@310 $generated@@711 $generated@@712))
)))
(assert (forall (($generated@@713 Int) ($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@95) (= ($generated@@193 ($generated@@93 $generated@@713 $generated@@714)) $generated@@73))
 :pattern ( ($generated@@93 $generated@@713 $generated@@714))
)))
(assert (forall (($generated@@715 Int) ($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@95) (= ($generated@@341 ($generated@@93 $generated@@715 $generated@@716)) $generated@@715))
 :pattern ( ($generated@@93 $generated@@715 $generated@@716))
)))
(assert (forall (($generated@@717 Int) ($generated@@718 T@U) ) (!  (=> (= (type $generated@@718) $generated@@95) (= ($generated@@342 ($generated@@93 $generated@@717 $generated@@718)) $generated@@718))
 :pattern ( ($generated@@93 $generated@@717 $generated@@718))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (and (= (type $generated@@719) ($generated@@168 $generated@@169)) (= (type $generated@@720) $generated@@82)) (= (type $generated@@721) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@719 ($generated@@366 $generated@@720) $generated@@721) (forall (($generated@@722 Int) ) (!  (=> (and (<= 0 $generated@@722) (< $generated@@722 ($generated@@170 $generated@@719))) ($generated@@320 ($generated@@166 $generated@@719 $generated@@722) $generated@@720 $generated@@721))
 :pattern ( ($generated@@166 $generated@@719 $generated@@722))
))))
 :pattern ( ($generated@@101 $generated@@719 ($generated@@366 $generated@@720) $generated@@721))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 Int) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@723) $generated@@169) (= (type $generated@@725) $generated@@169)) (= ($generated@@192 ($generated@@349 $generated@@723) ($generated@@362 $generated@@724) ($generated@@349 $generated@@725)) ($generated@@349 ($generated@@192 $generated@@723 $generated@@724 $generated@@725))))
 :pattern ( ($generated@@192 ($generated@@349 $generated@@723) ($generated@@362 $generated@@724) ($generated@@349 $generated@@725)))
)))
(assert (forall (($generated@@727 Int) ) (! (= ($generated@@726 ($generated@@102 $generated@@727)) $generated@@727)
 :pattern ( ($generated@@102 $generated@@727))
)))
(assert (forall (($generated@@729 T@U) ) (! (= (type ($generated@@728 $generated@@729)) $generated@@82)
 :pattern ( ($generated@@728 $generated@@729))
)))
(assert (forall (($generated@@730 T@U) ) (!  (=> (= (type $generated@@730) $generated@@82) (= ($generated@@728 ($generated@@352 $generated@@730)) $generated@@730))
 :pattern ( ($generated@@352 $generated@@730))
)))
(assert (forall (($generated@@731 T@U) ) (!  (=> (= (type $generated@@731) $generated@@82) (= ($generated@@90 ($generated@@352 $generated@@731)) $generated@@54))
 :pattern ( ($generated@@352 $generated@@731))
)))
(assert (forall (($generated@@733 T@U) ) (! (= (type ($generated@@732 $generated@@733)) $generated@@82)
 :pattern ( ($generated@@732 $generated@@733))
)))
(assert (forall (($generated@@734 T@U) ) (!  (=> (= (type $generated@@734) $generated@@82) (= ($generated@@732 ($generated@@357 $generated@@734)) $generated@@734))
 :pattern ( ($generated@@357 $generated@@734))
)))
(assert (forall (($generated@@735 T@U) ) (!  (=> (= (type $generated@@735) $generated@@82) (= ($generated@@90 ($generated@@357 $generated@@735)) $generated@@55))
 :pattern ( ($generated@@357 $generated@@735))
)))
(assert (forall (($generated@@737 T@U) ) (! (= (type ($generated@@736 $generated@@737)) $generated@@82)
 :pattern ( ($generated@@736 $generated@@737))
)))
(assert (forall (($generated@@738 T@U) ) (!  (=> (= (type $generated@@738) $generated@@82) (= ($generated@@736 ($generated@@237 $generated@@738)) $generated@@738))
 :pattern ( ($generated@@237 $generated@@738))
)))
(assert (forall (($generated@@739 T@U) ) (!  (=> (= (type $generated@@739) $generated@@82) (= ($generated@@90 ($generated@@237 $generated@@739)) $generated@@56))
 :pattern ( ($generated@@237 $generated@@739))
)))
(assert (forall (($generated@@741 T@U) ) (! (= (type ($generated@@740 $generated@@741)) $generated@@82)
 :pattern ( ($generated@@740 $generated@@741))
)))
(assert (forall (($generated@@742 T@U) ) (!  (=> (= (type $generated@@742) $generated@@82) (= ($generated@@740 ($generated@@366 $generated@@742)) $generated@@742))
 :pattern ( ($generated@@366 $generated@@742))
)))
(assert (forall (($generated@@743 T@U) ) (!  (=> (= (type $generated@@743) $generated@@82) (= ($generated@@90 ($generated@@366 $generated@@743)) $generated@@57))
 :pattern ( ($generated@@366 $generated@@743))
)))
(assert (forall (($generated@@744 T@U) ) (!  (=> (= (type $generated@@744) $generated@@95) (= ($generated@@193 ($generated@@428 $generated@@744)) $generated@@66))
 :pattern ( ($generated@@428 $generated@@744))
)))
(assert (forall (($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@95) (= ($generated@@512 ($generated@@428 $generated@@745)) $generated@@745))
 :pattern ( ($generated@@428 $generated@@745))
)))
(assert (forall (($generated@@746 T@U) ) (!  (=> (= (type $generated@@746) ($generated@@168 $generated@@169)) (= ($generated@@193 ($generated@@167 $generated@@746)) $generated@@67))
 :pattern ( ($generated@@167 $generated@@746))
)))
(assert (forall (($generated@@747 T@U) ) (!  (=> (= (type $generated@@747) ($generated@@168 $generated@@169)) (= ($generated@@516 ($generated@@167 $generated@@747)) $generated@@747))
 :pattern ( ($generated@@167 $generated@@747))
)))
(assert (forall (($generated@@748 T@U) ) (!  (=> (= (type $generated@@748) ($generated@@168 $generated@@169)) (= ($generated@@193 ($generated@@184 $generated@@748)) $generated@@69))
 :pattern ( ($generated@@184 $generated@@748))
)))
(assert (forall (($generated@@749 T@U) ) (!  (=> (= (type $generated@@749) ($generated@@168 $generated@@169)) (= ($generated@@520 ($generated@@184 $generated@@749)) $generated@@749))
 :pattern ( ($generated@@184 $generated@@749))
)))
(assert (forall (($generated@@750 Int) ) (! (= ($generated@@193 ($generated@@436 $generated@@750)) $generated@@70)
 :pattern ( ($generated@@436 $generated@@750))
)))
(assert (forall (($generated@@751 Int) ) (! (= ($generated@@163 ($generated@@436 $generated@@751)) $generated@@751)
 :pattern ( ($generated@@436 $generated@@751))
)))
(assert (forall (($generated@@752 T@U) ) (!  (=> (= (type $generated@@752) ($generated@@168 $generated@@169)) (= ($generated@@193 ($generated@@188 $generated@@752)) $generated@@72))
 :pattern ( ($generated@@188 $generated@@752))
)))
(assert (forall (($generated@@753 T@U) ) (!  (=> (= (type $generated@@753) ($generated@@168 $generated@@169)) (= ($generated@@524 ($generated@@188 $generated@@753)) $generated@@753))
 :pattern ( ($generated@@188 $generated@@753))
)))
(assert (forall (($generated@@754 T@U) ) (! (let (($generated@@755 (type $generated@@754)))
(= ($generated@@172 $generated@@755 ($generated@@452 $generated@@754)) $generated@@754))
 :pattern ( ($generated@@452 $generated@@754))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (and (= (type $generated@@756) ($generated@@465 $generated@@169 $generated@@169)) (= (type $generated@@757) $generated@@82)) (= (type $generated@@758) $generated@@82)) (= ($generated@@92 $generated@@756 ($generated@@615 $generated@@757 $generated@@758)) (forall (($generated@@759 T@U) ) (!  (=> (and (= (type $generated@@759) $generated@@169) ($generated@@0 ($generated@@108 ($generated@@463 $generated@@756) $generated@@759))) (and ($generated@@311 ($generated@@108 ($generated@@582 $generated@@756) $generated@@759) $generated@@758) ($generated@@311 $generated@@759 $generated@@757)))
 :pattern ( ($generated@@108 ($generated@@582 $generated@@756) $generated@@759))
 :pattern ( ($generated@@108 ($generated@@463 $generated@@756) $generated@@759))
))))
 :pattern ( ($generated@@92 $generated@@756 ($generated@@615 $generated@@757 $generated@@758)))
)))
(assert (forall (($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (= (type $generated@@760) ($generated@@483 $generated@@169 $generated@@169)) (= (type $generated@@761) $generated@@82)) (= (type $generated@@762) $generated@@82)) (= ($generated@@92 $generated@@760 ($generated@@623 $generated@@761 $generated@@762)) (forall (($generated@@763 T@U) ) (!  (=> (and (= (type $generated@@763) $generated@@169) ($generated@@0 ($generated@@108 ($generated@@481 $generated@@760) $generated@@763))) (and ($generated@@311 ($generated@@108 ($generated@@590 $generated@@760) $generated@@763) $generated@@762) ($generated@@311 $generated@@763 $generated@@761)))
 :pattern ( ($generated@@108 ($generated@@590 $generated@@760) $generated@@763))
 :pattern ( ($generated@@108 ($generated@@481 $generated@@760) $generated@@763))
))))
 :pattern ( ($generated@@92 $generated@@760 ($generated@@623 $generated@@761 $generated@@762)))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (= (type $generated@@765) $generated@@169) (= (type $generated@@766) $generated@@169)) (< ($generated@@764 $generated@@765) ($generated@@171 ($generated@@310 $generated@@765 $generated@@766))))
 :pattern ( ($generated@@310 $generated@@765 $generated@@766))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (= (type $generated@@767) $generated@@169) (= (type $generated@@768) $generated@@169)) (< ($generated@@764 $generated@@768) ($generated@@171 ($generated@@310 $generated@@767 $generated@@768))))
 :pattern ( ($generated@@310 $generated@@767 $generated@@768))
)))
(assert (forall (($generated@@769 Int) ($generated@@770 T@U) ) (!  (=> (= (type $generated@@770) $generated@@95) (< ($generated@@171 $generated@@770) ($generated@@171 ($generated@@93 $generated@@769 $generated@@770))))
 :pattern ( ($generated@@93 $generated@@769 $generated@@770))
)))
(assert  (=> (<= 2 $generated@@346) (forall (($generated@@771 T@U) ($generated@@772 T@U) ($generated@@773 T@U) ) (!  (=> (and (and (and (= (type $generated@@771) $generated@@447) (= (type $generated@@772) $generated@@95)) (= (type $generated@@773) $generated@@95)) (or ($generated@@565 ($generated@@349 $generated@@772) ($generated@@349 $generated@@773)) (and (not (= 2 $generated@@346)) (and ($generated@@92 $generated@@772 $generated@@94) ($generated@@92 $generated@@773 $generated@@318))))) (and (=> (not ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@162 ($generated@@349 $generated@@772)))))) (and (=> ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@401 ($generated@@349 $generated@@772))))) (let (($generated@@774 ($generated@@349 ($generated@@524 ($generated@@349 $generated@@772)))))
 (=> ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@395 ($generated@@349 $generated@@773))))) (=> (= ($generated@@170 $generated@@774) ($generated@@170 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@773))))) (forall (($generated@@775 Int) ) (!  (=> (<= ($generated@@362 0) $generated@@775) (=> (< $generated@@775 ($generated@@170 $generated@@774)) ($generated@@565 ($generated@@172 $generated@@95 ($generated@@166 $generated@@774 $generated@@775)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@773))) $generated@@775)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@773) $generated@@775)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@774 $generated@@775)))
)))))) (=> (not ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@401 ($generated@@349 $generated@@772)))))) (let (($generated@@776 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@772)))))
(let (($generated@@777 ($generated@@362 ($generated@@341 ($generated@@349 $generated@@772)))))
 (=> ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@398 ($generated@@349 $generated@@773))))) (=> (< $generated@@777 ($generated@@170 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@773))))) ($generated@@565 $generated@@776 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@773))) $generated@@777)))))))))) (= ($generated@@445 ($generated@@446 $generated@@771) ($generated@@349 $generated@@772) ($generated@@349 $generated@@773)) (ite ($generated@@162 ($generated@@349 $generated@@772)) ($generated@@374 ($generated@@349 $generated@@773)) (ite ($generated@@401 ($generated@@349 $generated@@772)) (let (($generated@@778 ($generated@@349 ($generated@@524 ($generated@@349 $generated@@772)))))
 (and (and ($generated@@395 ($generated@@349 $generated@@773)) (= ($generated@@170 $generated@@778) ($generated@@170 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@773)))))) (forall (($generated@@779 Int) ) (!  (=> true (=> (and (<= ($generated@@362 0) $generated@@779) (< $generated@@779 ($generated@@170 $generated@@778))) ($generated@@445 ($generated@@446 $generated@@771) ($generated@@172 $generated@@95 ($generated@@166 $generated@@778 $generated@@779)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@773))) $generated@@779)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@773) $generated@@779)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@778 $generated@@779)))
)))) (let (($generated@@780 ($generated@@349 ($generated@@342 ($generated@@349 $generated@@772)))))
(let (($generated@@781 ($generated@@362 ($generated@@341 ($generated@@349 $generated@@772)))))
 (and (and ($generated@@398 ($generated@@349 $generated@@773)) (< $generated@@781 ($generated@@170 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@773)))))) ($generated@@445 ($generated@@446 $generated@@771) $generated@@780 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@773))) $generated@@781)))))))))))
 :weight 3
 :pattern ( ($generated@@445 ($generated@@446 $generated@@771) ($generated@@349 $generated@@772) ($generated@@349 $generated@@773)))
))))
(assert (forall (($generated@@782 T@U) ($generated@@783 T@U) ($generated@@784 T@U) ) (!  (=> (and (and (and (= (type $generated@@782) $generated@@169) (= (type $generated@@783) $generated@@82)) (= (type $generated@@784) $generated@@82)) ($generated@@311 $generated@@782 ($generated@@615 $generated@@783 $generated@@784))) (and (= ($generated@@452 ($generated@@172 ($generated@@465 $generated@@169 $generated@@169) $generated@@782)) $generated@@782) ($generated@@92 ($generated@@172 ($generated@@465 $generated@@169 $generated@@169) $generated@@782) ($generated@@615 $generated@@783 $generated@@784))))
 :pattern ( ($generated@@311 $generated@@782 ($generated@@615 $generated@@783 $generated@@784)))
)))
(assert (forall (($generated@@785 T@U) ($generated@@786 T@U) ($generated@@787 T@U) ) (!  (=> (and (and (and (= (type $generated@@785) $generated@@169) (= (type $generated@@786) $generated@@82)) (= (type $generated@@787) $generated@@82)) ($generated@@311 $generated@@785 ($generated@@623 $generated@@786 $generated@@787))) (and (= ($generated@@452 ($generated@@172 ($generated@@483 $generated@@169 $generated@@169) $generated@@785)) $generated@@785) ($generated@@92 ($generated@@172 ($generated@@483 $generated@@169 $generated@@169) $generated@@785) ($generated@@623 $generated@@786 $generated@@787))))
 :pattern ( ($generated@@311 $generated@@785 ($generated@@623 $generated@@786 $generated@@787)))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ($generated@@790 T@U) ) (!  (=> (and (and (and (= (type $generated@@788) $generated@@82) (= (type $generated@@789) $generated@@82)) (= (type $generated@@790) $generated@@169)) ($generated@@311 $generated@@790 ($generated@@221 $generated@@788 $generated@@789))) (and (= ($generated@@452 ($generated@@172 $generated@@95 $generated@@790)) $generated@@790) ($generated@@92 ($generated@@172 $generated@@95 $generated@@790) ($generated@@221 $generated@@788 $generated@@789))))
 :pattern ( ($generated@@311 $generated@@790 ($generated@@221 $generated@@788 $generated@@789)))
)))
(assert  (=> (<= 3 $generated@@346) (forall (($generated@@791 T@U) ) (!  (=> (and (= (type $generated@@791) $generated@@95) (or ($generated@@607 $generated@@791) (and (not (= 3 $generated@@346)) (and ($generated@@92 $generated@@791 $generated@@94) ($generated@@445 $generated@@530 $generated@@791 ($generated@@349 $generated@@348)))))) ($generated@@311 ($generated@@609 $generated@@791) $generated@@321))
 :pattern ( ($generated@@609 $generated@@791))
))))
(assert  (=> (<= 3 $generated@@346) (forall (($generated@@792 T@U) ) (!  (=> (and (= (type $generated@@792) $generated@@95) (or ($generated@@608 $generated@@792) (and (not (= 3 $generated@@346)) (and ($generated@@92 $generated@@792 $generated@@94) ($generated@@445 $generated@@530 $generated@@792 ($generated@@349 $generated@@560)))))) ($generated@@311 ($generated@@610 $generated@@792) $generated@@322))
 :pattern ( ($generated@@610 $generated@@792))
))))
(assert  (=> (<= 2 $generated@@346) (forall (($generated@@793 T@U) ($generated@@794 T@U) ($generated@@795 T@U) ) (!  (=> (and (and (and (= (type $generated@@793) $generated@@447) (= (type $generated@@794) $generated@@95)) (= (type $generated@@795) $generated@@95)) (or ($generated@@565 $generated@@794 $generated@@795) (and (not (= 2 $generated@@346)) (and ($generated@@92 $generated@@794 $generated@@94) ($generated@@92 $generated@@795 $generated@@318))))) (and (=> (not ($generated@@162 $generated@@794)) (and (=> ($generated@@401 $generated@@794) (let (($generated@@796 ($generated@@524 $generated@@794)))
 (=> ($generated@@395 $generated@@795) (=> (= ($generated@@170 $generated@@796) ($generated@@170 ($generated@@516 $generated@@795))) (forall (($generated@@797 Int) ) (!  (=> (<= ($generated@@362 0) $generated@@797) (=> (< $generated@@797 ($generated@@170 $generated@@796)) ($generated@@565 ($generated@@172 $generated@@95 ($generated@@166 $generated@@796 $generated@@797)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@795) $generated@@797)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@795) $generated@@797)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@796 $generated@@797)))
)))))) (=> (not ($generated@@401 $generated@@794)) (let (($generated@@798 ($generated@@342 $generated@@794)))
(let (($generated@@799 ($generated@@341 $generated@@794)))
 (=> ($generated@@398 $generated@@795) (=> (< $generated@@799 ($generated@@170 ($generated@@520 $generated@@795))) ($generated@@565 $generated@@798 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@520 $generated@@795) $generated@@799)))))))))) (= ($generated@@445 ($generated@@446 $generated@@793) $generated@@794 $generated@@795) (ite ($generated@@162 $generated@@794) ($generated@@374 $generated@@795) (ite ($generated@@401 $generated@@794) (let (($generated@@800 ($generated@@524 $generated@@794)))
 (and (and ($generated@@395 $generated@@795) (= ($generated@@170 $generated@@800) ($generated@@170 ($generated@@516 $generated@@795)))) (forall (($generated@@801 Int) ) (!  (=> true (=> (and (<= ($generated@@362 0) $generated@@801) (< $generated@@801 ($generated@@170 $generated@@800))) ($generated@@445 $generated@@793 ($generated@@172 $generated@@95 ($generated@@166 $generated@@800 $generated@@801)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@795) $generated@@801)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@795) $generated@@801)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@800 $generated@@801)))
)))) (let (($generated@@802 ($generated@@342 $generated@@794)))
(let (($generated@@803 ($generated@@341 $generated@@794)))
 (and (and ($generated@@398 $generated@@795) (< $generated@@803 ($generated@@170 ($generated@@520 $generated@@795)))) ($generated@@445 $generated@@793 $generated@@802 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@520 $generated@@795) $generated@@803)))))))))))
 :pattern ( ($generated@@445 ($generated@@446 $generated@@793) $generated@@794 $generated@@795))
))))
(assert (forall (($generated@@804 T@U) ) (!  (=> (= (type $generated@@804) $generated@@95) (< ($generated@@171 $generated@@804) ($generated@@171 ($generated@@428 $generated@@804))))
 :pattern ( ($generated@@428 $generated@@804))
)))
(assert (forall (($generated@@806 T@U) ) (!  (=> (= (type $generated@@806) ($generated@@168 $generated@@169)) (< ($generated@@805 $generated@@806) ($generated@@171 ($generated@@167 $generated@@806))))
 :pattern ( ($generated@@167 $generated@@806))
)))
(assert (forall (($generated@@807 T@U) ) (!  (=> (= (type $generated@@807) ($generated@@168 $generated@@169)) (< ($generated@@805 $generated@@807) ($generated@@171 ($generated@@184 $generated@@807))))
 :pattern ( ($generated@@184 $generated@@807))
)))
(assert (forall (($generated@@808 T@U) ) (!  (=> (= (type $generated@@808) ($generated@@168 $generated@@169)) (< ($generated@@805 $generated@@808) ($generated@@171 ($generated@@188 $generated@@808))))
 :pattern ( ($generated@@188 $generated@@808))
)))
(assert (forall (($generated@@809 T@U) ) (! (let (($generated@@810 (type $generated@@809)))
 (not ($generated@@0 ($generated@@108 ($generated@@639 $generated@@810) $generated@@809))))
 :pattern ( (let (($generated@@810 (type $generated@@809)))
($generated@@108 ($generated@@639 $generated@@810) $generated@@809)))
)))
(assert (forall (($generated@@812 T@U) ) (! (= (type ($generated@@811 $generated@@812)) $generated@@87)
 :pattern ( ($generated@@811 $generated@@812))
)))
(assert (forall (($generated@@813 T@U) ($generated@@814 T@U) ) (!  (=> (and (= (type $generated@@813) $generated@@82) (= (type $generated@@814) $generated@@82)) (and (= ($generated@@90 ($generated@@221 $generated@@813 $generated@@814)) $generated@@62) (= ($generated@@811 ($generated@@221 $generated@@813 $generated@@814)) $generated@@77)))
 :pattern ( ($generated@@221 $generated@@813 $generated@@814))
)))
(assert  (and (forall (($generated@@817 T@U) ) (! (let (($generated@@818 ($generated@@173 (type $generated@@817))))
(= (type ($generated@@815 $generated@@817)) ($generated@@168 $generated@@818)))
 :pattern ( ($generated@@815 $generated@@817))
)) (forall (($generated@@819 T@U) ) (! (let (($generated@@820 ($generated@@173 (type $generated@@819))))
(= (type ($generated@@816 $generated@@819)) $generated@@820))
 :pattern ( ($generated@@816 $generated@@819))
))))
(assert (forall (($generated@@821 T@U) ($generated@@822 T@U) ) (! (let (($generated@@823 (type $generated@@822)))
 (=> (= (type $generated@@821) ($generated@@168 $generated@@823)) (and (= ($generated@@815 ($generated@@365 $generated@@821 $generated@@822)) $generated@@821) (= ($generated@@816 ($generated@@365 $generated@@821 $generated@@822)) $generated@@822))))
 :pattern ( ($generated@@365 $generated@@821 $generated@@822))
)))
(assert (forall (($generated@@824 T@U) ($generated@@825 T@U) ) (!  (=> (and (and (= (type $generated@@824) $generated@@95) (= (type $generated@@825) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@825) (and ($generated@@404 $generated@@824) ($generated@@101 $generated@@824 $generated@@319 $generated@@825)))) ($generated@@320 ($generated@@201 $generated@@824) $generated@@321 $generated@@825))
 :pattern ( ($generated@@320 ($generated@@201 $generated@@824) $generated@@321 $generated@@825))
)))
(assert (forall (($generated@@826 T@U) ($generated@@827 T@U) ) (!  (=> (and (and (= (type $generated@@826) $generated@@95) (= (type $generated@@827) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@827) (and ($generated@@404 $generated@@826) ($generated@@101 $generated@@826 $generated@@319 $generated@@827)))) ($generated@@320 ($generated@@210 $generated@@826) $generated@@322 $generated@@827))
 :pattern ( ($generated@@320 ($generated@@210 $generated@@826) $generated@@322 $generated@@827))
)))
(assert (forall (($generated@@828 T@U) ) (!  (=> (and (= (type $generated@@828) $generated@@95) ($generated@@92 $generated@@828 $generated@@94)) (or (or ($generated@@162 $generated@@828) ($generated@@401 $generated@@828)) ($generated@@340 $generated@@828)))
 :pattern ( ($generated@@340 $generated@@828) ($generated@@92 $generated@@828 $generated@@94))
 :pattern ( ($generated@@401 $generated@@828) ($generated@@92 $generated@@828 $generated@@94))
 :pattern ( ($generated@@162 $generated@@828) ($generated@@92 $generated@@828 $generated@@94))
)))
(assert (forall (($generated@@829 T@U) ) (!  (=> (= (type $generated@@829) $generated@@95) (= ($generated@@764 ($generated@@452 $generated@@829)) ($generated@@171 $generated@@829)))
 :pattern ( ($generated@@764 ($generated@@452 $generated@@829)))
)))
(assert (forall (($generated@@830 T@U) ) (!  (=> (and (= (type $generated@@830) $generated@@169) ($generated@@311 $generated@@830 ($generated@@102 0))) (and (= ($generated@@452 ($generated@@172 $generated@@2 $generated@@830)) $generated@@830) ($generated@@92 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@830) ($generated@@102 0))))
 :pattern ( ($generated@@311 $generated@@830 ($generated@@102 0)))
)))
(assert (forall (($generated@@831 T@U) ($generated@@832 T@U) ) (!  (=> (and (and (= (type $generated@@831) $generated@@169) (= (type $generated@@832) $generated@@82)) ($generated@@311 $generated@@831 ($generated@@352 $generated@@832))) (and (= ($generated@@452 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@831)) $generated@@831) ($generated@@92 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@831) ($generated@@352 $generated@@832))))
 :pattern ( ($generated@@311 $generated@@831 ($generated@@352 $generated@@832)))
)))
(assert (forall (($generated@@833 T@U) ($generated@@834 T@U) ) (!  (=> (and (and (= (type $generated@@833) $generated@@169) (= (type $generated@@834) $generated@@82)) ($generated@@311 $generated@@833 ($generated@@357 $generated@@834))) (and (= ($generated@@452 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@833)) $generated@@833) ($generated@@92 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@833) ($generated@@357 $generated@@834))))
 :pattern ( ($generated@@311 $generated@@833 ($generated@@357 $generated@@834)))
)))
(assert (forall (($generated@@835 T@U) ($generated@@836 T@U) ) (!  (=> (and (and (= (type $generated@@835) $generated@@169) (= (type $generated@@836) $generated@@82)) ($generated@@311 $generated@@835 ($generated@@237 $generated@@836))) (and (= ($generated@@452 ($generated@@172 ($generated@@103 $generated@@169 $generated@@2) $generated@@835)) $generated@@835) ($generated@@92 ($generated@@172 ($generated@@103 $generated@@169 $generated@@2) $generated@@835) ($generated@@237 $generated@@836))))
 :pattern ( ($generated@@311 $generated@@835 ($generated@@237 $generated@@836)))
)))
(assert (forall (($generated@@837 T@U) ($generated@@838 T@U) ) (!  (=> (and (and (= (type $generated@@837) $generated@@169) (= (type $generated@@838) $generated@@82)) ($generated@@311 $generated@@837 ($generated@@366 $generated@@838))) (and (= ($generated@@452 ($generated@@172 ($generated@@168 $generated@@169) $generated@@837)) $generated@@837) ($generated@@92 ($generated@@172 ($generated@@168 $generated@@169) $generated@@837) ($generated@@366 $generated@@838))))
 :pattern ( ($generated@@311 $generated@@837 ($generated@@366 $generated@@838)))
)))
(assert (= ($generated@@90 $generated@@96) $generated@@63))
(assert (= ($generated@@811 $generated@@96) $generated@@78))
(assert (= ($generated@@90 $generated@@318) $generated@@65))
(assert (= ($generated@@811 $generated@@318) $generated@@79))
(assert (= ($generated@@90 $generated@@94) $generated@@71))
(assert (= ($generated@@811 $generated@@94) $generated@@80))
(assert (= ($generated@@90 $generated@@319) $generated@@75))
(assert (= ($generated@@811 $generated@@319) $generated@@81))
(assert (forall (($generated@@839 T@U) ($generated@@840 T@U) ($generated@@841 T@U) ) (!  (=> (and (and (= (type $generated@@839) ($generated@@103 $generated@@169 $generated@@2)) (= (type $generated@@840) $generated@@82)) (= (type $generated@@841) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@839 ($generated@@237 $generated@@840) $generated@@841) (forall (($generated@@842 T@U) ) (!  (=> (and (= (type $generated@@842) $generated@@169) (< 0 ($generated ($generated@@108 $generated@@839 $generated@@842)))) ($generated@@320 $generated@@842 $generated@@840 $generated@@841))
 :pattern ( ($generated@@108 $generated@@839 $generated@@842))
))))
 :pattern ( ($generated@@101 $generated@@839 ($generated@@237 $generated@@840) $generated@@841))
)))
(assert (= $generated@@234 ($generated@@349 $generated@@234)))
(assert (= $generated@@235 ($generated@@349 $generated@@235)))
(assert (= $generated@@236 ($generated@@349 $generated@@236)))
(assert (forall (($generated@@843 T@U) ) (!  (=> (and (= (type $generated@@843) $generated@@95) ($generated@@92 $generated@@843 $generated@@318)) (or (or (or (or ($generated@@374 $generated@@843) ($generated@@393 $generated@@843)) ($generated@@395 $generated@@843)) ($generated@@377 $generated@@843)) ($generated@@398 $generated@@843)))
 :pattern ( ($generated@@398 $generated@@843) ($generated@@92 $generated@@843 $generated@@318))
 :pattern ( ($generated@@377 $generated@@843) ($generated@@92 $generated@@843 $generated@@318))
 :pattern ( ($generated@@395 $generated@@843) ($generated@@92 $generated@@843 $generated@@318))
 :pattern ( ($generated@@393 $generated@@843) ($generated@@92 $generated@@843 $generated@@318))
 :pattern ( ($generated@@374 $generated@@843) ($generated@@92 $generated@@843 $generated@@318))
)))
(assert (forall (($generated@@844 T@U) ($generated@@845 T@U) ($generated@@846 T@U) ) (!  (=> (and (and (and (= (type $generated@@844) $generated@@95) (= (type $generated@@845) $generated@@82)) (= (type $generated@@846) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@846) (and ($generated@@220 $generated@@844) (exists (($generated@@847 T@U) ) (!  (and (= (type $generated@@847) $generated@@82) ($generated@@101 $generated@@844 ($generated@@221 $generated@@845 $generated@@847) $generated@@846))
 :pattern ( ($generated@@101 $generated@@844 ($generated@@221 $generated@@845 $generated@@847) $generated@@846))
))))) ($generated@@320 ($generated@@228 $generated@@844) $generated@@845 $generated@@846))
 :pattern ( ($generated@@320 ($generated@@228 $generated@@844) $generated@@845 $generated@@846))
)))
(assert (forall (($generated@@848 T@U) ($generated@@849 T@U) ($generated@@850 T@U) ) (!  (=> (and (and (and (= (type $generated@@848) $generated@@95) (= (type $generated@@849) $generated@@82)) (= (type $generated@@850) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@850) (and ($generated@@220 $generated@@848) (exists (($generated@@851 T@U) ) (!  (and (= (type $generated@@851) $generated@@82) ($generated@@101 $generated@@848 ($generated@@221 $generated@@851 $generated@@849) $generated@@850))
 :pattern ( ($generated@@101 $generated@@848 ($generated@@221 $generated@@851 $generated@@849) $generated@@850))
))))) ($generated@@320 ($generated@@229 $generated@@848) $generated@@849 $generated@@850))
 :pattern ( ($generated@@320 ($generated@@229 $generated@@848) $generated@@849 $generated@@850))
)))
(assert (forall (($generated@@852 T@U) ($generated@@853 T@U) ) (!  (=> (and (and (= (type $generated@@852) $generated@@95) (= (type $generated@@853) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@853) (and ($generated@@393 $generated@@852) ($generated@@101 $generated@@852 $generated@@318 $generated@@853)))) ($generated@@101 ($generated@@512 $generated@@852) $generated@@318 $generated@@853))
 :pattern ( ($generated@@101 ($generated@@512 $generated@@852) $generated@@318 $generated@@853))
)))
(assert (forall (($generated@@854 T@U) ($generated@@855 T@U) ) (!  (=> (and (and (= (type $generated@@854) $generated@@95) (= (type $generated@@855) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@855) (and ($generated@@162 $generated@@854) ($generated@@101 $generated@@854 $generated@@94 $generated@@855)))) ($generated@@101 ($generated@@8 ($generated@@163 $generated@@854)) $generated@@96 $generated@@855))
 :pattern ( ($generated@@101 ($generated@@8 ($generated@@163 $generated@@854)) $generated@@96 $generated@@855))
)))
(assert (forall (($generated@@856 T@U) ($generated@@857 T@U) ) (!  (=> (and (and (= (type $generated@@856) $generated@@95) (= (type $generated@@857) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@857) (and ($generated@@340 $generated@@856) ($generated@@101 $generated@@856 $generated@@94 $generated@@857)))) ($generated@@101 ($generated@@8 ($generated@@341 $generated@@856)) $generated@@96 $generated@@857))
 :pattern ( ($generated@@101 ($generated@@8 ($generated@@341 $generated@@856)) $generated@@96 $generated@@857))
)))
(assert (forall (($generated@@858 T@U) ($generated@@859 T@U) ) (!  (=> (and (and (= (type $generated@@858) $generated@@95) (= (type $generated@@859) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@859) (and ($generated@@340 $generated@@858) ($generated@@101 $generated@@858 $generated@@94 $generated@@859)))) ($generated@@101 ($generated@@342 $generated@@858) $generated@@94 $generated@@859))
 :pattern ( ($generated@@101 ($generated@@342 $generated@@858) $generated@@94 $generated@@859))
)))
(assert (forall (($generated@@860 T@U) ($generated@@861 T@U) ) (!  (=> (and (and (= (type $generated@@860) $generated@@95) (= (type $generated@@861) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@861) (and ($generated@@404 $generated@@860) ($generated@@101 $generated@@860 $generated@@319 $generated@@861)))) ($generated@@101 ($generated@@8 ($generated@@206 $generated@@860)) $generated@@96 $generated@@861))
 :pattern ( ($generated@@101 ($generated@@8 ($generated@@206 $generated@@860)) $generated@@96 $generated@@861))
)))
(assert (forall (($generated@@862 T@U) ) (!  (=> (= (type $generated@@862) $generated@@2) (= ($generated@@92 $generated@@862 $generated@@96)  (and (<= ($generated@@362 0) ($generated $generated@@862)) (< ($generated $generated@@862) 18446744073709551616))))
 :pattern ( ($generated@@92 $generated@@862 $generated@@96))
)))
(assert (forall (($generated@@863 T@U) ($generated@@864 T@U) ) (!  (=> (and (= (type $generated@@863) $generated@@169) (= (type $generated@@864) $generated@@169)) (= ($generated@@310 ($generated@@349 $generated@@863) ($generated@@349 $generated@@864)) ($generated@@349 ($generated@@310 $generated@@863 $generated@@864))))
 :pattern ( ($generated@@310 ($generated@@349 $generated@@863) ($generated@@349 $generated@@864)))
)))
(assert (forall (($generated@@865 Int) ($generated@@866 T@U) ) (!  (=> (= (type $generated@@866) $generated@@95) (= ($generated@@93 ($generated@@362 $generated@@865) ($generated@@349 $generated@@866)) ($generated@@349 ($generated@@93 $generated@@865 $generated@@866))))
 :pattern ( ($generated@@93 ($generated@@362 $generated@@865) ($generated@@349 $generated@@866)))
)))
(assert (forall (($generated@@867 Int) ) (! (= ($generated@@452 ($generated@@8 ($generated@@362 $generated@@867))) ($generated@@349 ($generated@@452 ($generated@@8 $generated@@867))))
 :pattern ( ($generated@@452 ($generated@@8 ($generated@@362 $generated@@867))))
)))
(assert (forall (($generated@@868 T@U) ) (!  (=> (= (type $generated@@868) $generated@@95) (= ($generated@@428 ($generated@@349 $generated@@868)) ($generated@@349 ($generated@@428 $generated@@868))))
 :pattern ( ($generated@@428 ($generated@@349 $generated@@868)))
)))
(assert (forall (($generated@@869 T@U) ) (!  (=> (= (type $generated@@869) ($generated@@168 $generated@@169)) (= ($generated@@167 ($generated@@349 $generated@@869)) ($generated@@349 ($generated@@167 $generated@@869))))
 :pattern ( ($generated@@167 ($generated@@349 $generated@@869)))
)))
(assert (forall (($generated@@870 T@U) ) (!  (=> (= (type $generated@@870) ($generated@@168 $generated@@169)) (= ($generated@@184 ($generated@@349 $generated@@870)) ($generated@@349 ($generated@@184 $generated@@870))))
 :pattern ( ($generated@@184 ($generated@@349 $generated@@870)))
)))
(assert (forall (($generated@@871 Int) ) (! (= ($generated@@436 ($generated@@362 $generated@@871)) ($generated@@349 ($generated@@436 $generated@@871)))
 :pattern ( ($generated@@436 ($generated@@362 $generated@@871)))
)))
(assert (forall (($generated@@872 T@U) ) (!  (=> (= (type $generated@@872) ($generated@@168 $generated@@169)) (= ($generated@@188 ($generated@@349 $generated@@872)) ($generated@@349 ($generated@@188 $generated@@872))))
 :pattern ( ($generated@@188 ($generated@@349 $generated@@872)))
)))
(assert (forall (($generated@@873 T@U) ) (! (= ($generated@@452 ($generated@@349 $generated@@873)) ($generated@@349 ($generated@@452 $generated@@873)))
 :pattern ( ($generated@@452 ($generated@@349 $generated@@873)))
)))
(assert (forall (($generated@@874 T@U) ) (! (let (($generated@@875 ($generated@@173 (type $generated@@874))))
 (=> (and (= (type $generated@@874) ($generated@@168 $generated@@875)) (= ($generated@@170 $generated@@874) 0)) (= $generated@@874 ($generated@@422 $generated@@875))))
 :pattern ( ($generated@@170 $generated@@874))
)))
(assert (forall (($generated@@876 T@U) ($generated@@877 T@U) ($generated@@878 T@U) ) (! (let (($generated@@879 (type $generated@@877)))
 (=> (and (and (= (type $generated@@876) ($generated@@103 $generated@@879 $generated@@2)) (= (type $generated@@878) $generated@@2)) (<= 0 ($generated $generated@@878))) (= ($generated@@457 ($generated@@109 $generated@@876 $generated@@877 $generated@@878)) (+ (- ($generated@@457 $generated@@876) ($generated ($generated@@108 $generated@@876 $generated@@877))) ($generated $generated@@878)))))
 :pattern ( ($generated@@457 ($generated@@109 $generated@@876 $generated@@877 $generated@@878)))
)))
(assert (forall (($generated@@880 T@U) ($generated@@881 T@U) ) (!  (=> (and (and (= (type $generated@@880) $generated@@95) (= (type $generated@@881) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@881) (and ($generated@@395 $generated@@880) ($generated@@101 $generated@@880 $generated@@318 $generated@@881)))) ($generated@@101 ($generated@@516 $generated@@880) ($generated@@366 $generated@@318) $generated@@881))
 :pattern ( ($generated@@101 ($generated@@516 $generated@@880) ($generated@@366 $generated@@318) $generated@@881))
)))
(assert (forall (($generated@@882 T@U) ($generated@@883 T@U) ) (!  (=> (and (and (= (type $generated@@882) $generated@@95) (= (type $generated@@883) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@883) (and ($generated@@398 $generated@@882) ($generated@@101 $generated@@882 $generated@@318 $generated@@883)))) ($generated@@101 ($generated@@520 $generated@@882) ($generated@@366 $generated@@318) $generated@@883))
 :pattern ( ($generated@@101 ($generated@@520 $generated@@882) ($generated@@366 $generated@@318) $generated@@883))
)))
(assert (forall (($generated@@884 T@U) ($generated@@885 T@U) ) (!  (=> (and (and (= (type $generated@@884) $generated@@95) (= (type $generated@@885) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@885) (and ($generated@@401 $generated@@884) ($generated@@101 $generated@@884 $generated@@94 $generated@@885)))) ($generated@@101 ($generated@@524 $generated@@884) ($generated@@366 $generated@@94) $generated@@885))
 :pattern ( ($generated@@101 ($generated@@524 $generated@@884) ($generated@@366 $generated@@94) $generated@@885))
)))
(assert (forall (($generated@@886 T@U) ($generated@@887 T@U) ) (!  (=> (and (= (type $generated@@886) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@887) $generated@@2)) ($generated@@101 $generated@@887 $generated@@46 $generated@@886))
 :pattern ( ($generated@@101 $generated@@887 $generated@@46 $generated@@886))
)))
(assert (forall (($generated@@888 T@U) ($generated@@889 T@U) ) (!  (=> (and (= (type $generated@@888) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@889) $generated@@3)) ($generated@@101 $generated@@889 $generated@@47 $generated@@888))
 :pattern ( ($generated@@101 $generated@@889 $generated@@47 $generated@@888))
)))
(assert (forall (($generated@@890 T@U) ($generated@@891 T@U) ) (!  (=> (and (= (type $generated@@890) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@891) $generated@@4)) ($generated@@101 $generated@@891 $generated@@44 $generated@@890))
 :pattern ( ($generated@@101 $generated@@891 $generated@@44 $generated@@890))
)))
(assert (forall (($generated@@892 T@U) ($generated@@893 T@U) ) (!  (=> (and (= (type $generated@@892) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@893) $generated@@665)) ($generated@@101 $generated@@893 $generated@@45 $generated@@892))
 :pattern ( ($generated@@101 $generated@@893 $generated@@45 $generated@@892))
)))
(assert (forall (($generated@@894 T@U) ($generated@@895 T@U) ) (!  (=> (and (= (type $generated@@894) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@895) $generated@@169)) ($generated@@101 $generated@@895 $generated@@48 $generated@@894))
 :pattern ( ($generated@@101 $generated@@895 $generated@@48 $generated@@894))
)))
(assert (forall (($generated@@896 T@U) ($generated@@897 T@U) ) (!  (=> (and (= (type $generated@@896) ($generated@@168 $generated@@169)) (= (type $generated@@897) $generated@@82)) (= ($generated@@92 $generated@@896 ($generated@@366 $generated@@897)) (forall (($generated@@898 Int) ) (!  (=> (and (<= 0 $generated@@898) (< $generated@@898 ($generated@@170 $generated@@896))) ($generated@@311 ($generated@@166 $generated@@896 $generated@@898) $generated@@897))
 :pattern ( ($generated@@166 $generated@@896 $generated@@898))
))))
 :pattern ( ($generated@@92 $generated@@896 ($generated@@366 $generated@@897)))
)))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@559 (not (= 1 $generated@@346))) (= $generated@@560 ($generated@@349 ($generated@@184 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@234))))))))))
(assert  (=> (<= 1 $generated@@346) (=> (or $generated@@559 (not (= 1 $generated@@346))) (= $generated@@560 ($generated@@349 ($generated@@184 ($generated@@349 ($generated@@365 ($generated@@365 ($generated@@365 ($generated@@422 $generated@@169) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@234))) ($generated@@452 ($generated@@349 $generated@@234))))))))))
(assert  (and (forall (($generated@@901 T@U) ) (! (= (type ($generated@@899 $generated@@901)) $generated@@447)
 :pattern ( ($generated@@899 $generated@@901))
)) (= (type $generated@@900) $generated@@447)))
(assert (forall (($generated@@902 T@U) ($generated@@903 T@U) ($generated@@904 T@U) ) (!  (=> (and (and (= (type $generated@@902) $generated@@447) (= (type $generated@@903) $generated@@95)) (= (type $generated@@904) $generated@@95)) (= ($generated@@445 $generated@@902 $generated@@903 $generated@@904) ($generated@@445 $generated@@900 $generated@@903 $generated@@904)))
 :pattern ( ($generated@@445 ($generated@@899 $generated@@902) $generated@@903 $generated@@904))
)))
(assert (forall (($generated@@905 T@U) ($generated@@906 Int) ) (!  (=> (= (type $generated@@905) ($generated@@168 $generated@@169)) (=> (and (<= 0 $generated@@906) (< $generated@@906 ($generated@@170 $generated@@905))) (< ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@905 $generated@@906))) ($generated@@805 $generated@@905))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@905 $generated@@906))))
)))
(assert (forall (($generated@@907 T@U) ($generated@@908 T@U) ($generated@@909 T@U) ) (!  (=> (and (and (and (= (type $generated@@907) ($generated@@465 $generated@@169 $generated@@169)) (= (type $generated@@908) $generated@@82)) (= (type $generated@@909) $generated@@82)) ($generated@@92 $generated@@907 ($generated@@615 $generated@@908 $generated@@909))) (and (and ($generated@@92 ($generated@@463 $generated@@907) ($generated@@352 $generated@@908)) ($generated@@92 ($generated@@538 $generated@@907) ($generated@@352 $generated@@909))) ($generated@@92 ($generated@@581 $generated@@907) ($generated@@352 ($generated@@221 $generated@@908 $generated@@909)))))
 :pattern ( ($generated@@92 $generated@@907 ($generated@@615 $generated@@908 $generated@@909)))
)))
(assert (forall (($generated@@910 T@U) ($generated@@911 T@U) ($generated@@912 T@U) ) (!  (=> (and (and (and (= (type $generated@@910) ($generated@@483 $generated@@169 $generated@@169)) (= (type $generated@@911) $generated@@82)) (= (type $generated@@912) $generated@@82)) ($generated@@92 $generated@@910 ($generated@@623 $generated@@911 $generated@@912))) (and (and ($generated@@92 ($generated@@481 $generated@@910) ($generated@@357 $generated@@911)) ($generated@@92 ($generated@@549 $generated@@910) ($generated@@357 $generated@@912))) ($generated@@92 ($generated@@589 $generated@@910) ($generated@@357 ($generated@@221 $generated@@911 $generated@@912)))))
 :pattern ( ($generated@@92 $generated@@910 ($generated@@623 $generated@@911 $generated@@912)))
)))
(assert (forall (($generated@@913 T@U) ) (!  (=> (= (type $generated@@913) $generated@@2) ($generated@@92 $generated@@913 $generated@@46))
 :pattern ( ($generated@@92 $generated@@913 $generated@@46))
)))
(assert (forall (($generated@@914 T@U) ) (!  (=> (= (type $generated@@914) $generated@@3) ($generated@@92 $generated@@914 $generated@@47))
 :pattern ( ($generated@@92 $generated@@914 $generated@@47))
)))
(assert (forall (($generated@@915 T@U) ) (!  (=> (= (type $generated@@915) $generated@@4) ($generated@@92 $generated@@915 $generated@@44))
 :pattern ( ($generated@@92 $generated@@915 $generated@@44))
)))
(assert (forall (($generated@@916 T@U) ) (!  (=> (= (type $generated@@916) $generated@@665) ($generated@@92 $generated@@916 $generated@@45))
 :pattern ( ($generated@@92 $generated@@916 $generated@@45))
)))
(assert (forall (($generated@@917 T@U) ) (!  (=> (= (type $generated@@917) $generated@@169) ($generated@@92 $generated@@917 $generated@@48))
 :pattern ( ($generated@@92 $generated@@917 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@918 () T@U)
(declare-fun $generated@@919 () T@U)
(declare-fun $generated@@920 () T@U)
(declare-fun $generated@@921 () T@U)
(declare-fun $generated@@922 () T@U)
(declare-fun $generated@@923 () T@U)
(declare-fun $generated@@924 () T@U)
(declare-fun $generated@@925 () T@U)
(declare-fun $generated@@926 () Int)
(declare-fun $generated@@927 () T@U)
(declare-fun $generated@@928 () T@U)
(declare-fun $generated@@929 () T@U)
(declare-fun $generated@@930 () T@U)
(declare-fun $generated@@931 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@918) $generated@@95) (= (type $generated@@919) $generated@@169)) (= (type $generated@@920) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@921) $generated@@95)) (= (type $generated@@922) $generated@@169)) (= (type $generated@@923) $generated@@95)) (= (type $generated@@924) ($generated@@244 $generated@@104 $generated@@4))) (= (type $generated@@925) $generated@@104)) (= (type $generated@@927) ($generated@@244 $generated@@104 $generated@@4))) (= (type $generated@@928) $generated@@447)) (= (type $generated@@929) $generated@@447)) (= (type $generated@@930) $generated@@95)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 32) (let (($generated@@932 true))
(let (($generated@@933  (=> (= ($generated@@341 $generated@@918) ($generated@@362 0)) (=> (and ($generated@@311 $generated@@919 $generated@@321) ($generated@@320 $generated@@919 $generated@@321 $generated@@920)) (and (=> (= (ControlFlow 0 3) (- 0 26)) ($generated@@340 $generated@@918)) (=> ($generated@@340 $generated@@918) (and (=> (= (ControlFlow 0 3) (- 0 25)) ($generated@@401 ($generated@@342 $generated@@918))) (=> ($generated@@401 ($generated@@342 $generated@@918)) (and (=> (= (ControlFlow 0 3) (- 0 24)) (and (<= 0 ($generated@@362 0)) (< ($generated@@362 0) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@918)))))) (=> (and (<= 0 ($generated@@362 0)) (< ($generated@@362 0) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@918))))) (=> (and (= $generated@@921 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@918)) ($generated@@362 0)))) ($generated@@101 $generated@@921 $generated@@94 $generated@@920)) (and (=> (= (ControlFlow 0 3) (- 0 23)) (=> ($generated@@565 $generated@@921 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@921 ($generated@@349 $generated@@348)) (=> ($generated@@162 $generated@@921) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@374 ($generated@@349 $generated@@348))))))))) (and (=> (= (ControlFlow 0 3) (- 0 22)) (=> ($generated@@565 $generated@@921 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@921 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@921)) (=> ($generated@@401 $generated@@921) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@395 ($generated@@349 $generated@@348)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 21)) (=> ($generated@@565 $generated@@921 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@921 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@921)) (=> ($generated@@401 $generated@@921) (let (($generated@@934 ($generated@@524 $generated@@921)))
(= ($generated@@170 $generated@@934) ($generated@@170 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@348))))))))))) (and (=> (= (ControlFlow 0 3) (- 0 20)) (=> ($generated@@565 $generated@@921 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@921 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@921)) (=> ($generated@@401 $generated@@921) (let (($generated@@935 ($generated@@524 $generated@@921)))
(forall (($generated@@936 Int) ) (!  (=> true (=> (and (<= ($generated@@362 0) $generated@@936) (< $generated@@936 ($generated@@170 $generated@@935))) ($generated@@445 $generated@@530 ($generated@@172 $generated@@95 ($generated@@166 $generated@@935 $generated@@936)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@348))) $generated@@936)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@348) $generated@@936)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@935 $generated@@936)))
)))))))) (and (=> (= (ControlFlow 0 3) (- 0 19)) (=> ($generated@@565 $generated@@921 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@921 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@921)) (=> (not ($generated@@401 $generated@@921)) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@398 ($generated@@349 $generated@@348)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 18)) (=> ($generated@@565 $generated@@921 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@921 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@921)) (=> (not ($generated@@401 $generated@@921)) (let (($generated@@937 ($generated@@341 $generated@@921)))
(< $generated@@937 ($generated@@170 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@348))))))))))) (and (=> (= (ControlFlow 0 3) (- 0 17)) (=> ($generated@@565 $generated@@921 ($generated@@349 $generated@@348)) (or ($generated@@445 $generated@@530 $generated@@921 ($generated@@349 $generated@@348)) (=> (not ($generated@@162 $generated@@921)) (=> (not ($generated@@401 $generated@@921)) (let (($generated@@938 ($generated@@342 $generated@@921)))
(let (($generated@@939 ($generated@@341 $generated@@921)))
($generated@@445 $generated@@530 $generated@@938 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@348))) $generated@@939)))))))))) (=> (and ($generated@@445 $generated@@530 $generated@@921 ($generated@@349 $generated@@348)) ($generated@@607 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@918)) ($generated@@362 0))))) (=> (and (and (= $generated@@922 ($generated@@609 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@918)) ($generated@@362 0))))) ($generated@@607 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@918)) ($generated@@362 0))))) (and ($generated@@311 $generated@@922 $generated@@321) (= $generated@@919 $generated@@922))) (and (=> (= (ControlFlow 0 3) (- 0 16)) ($generated@@340 $generated@@918)) (=> ($generated@@340 $generated@@918) (and (=> (= (ControlFlow 0 3) (- 0 15)) ($generated@@401 ($generated@@342 $generated@@918))) (=> ($generated@@401 ($generated@@342 $generated@@918)) (and (=> (= (ControlFlow 0 3) (- 0 14)) (and (<= 0 ($generated@@362 1)) (< ($generated@@362 1) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@918)))))) (=> (and (<= 0 ($generated@@362 1)) (< ($generated@@362 1) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@918))))) (and (=> (= (ControlFlow 0 3) (- 0 13)) ($generated@@162 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@918)) ($generated@@362 1))))) (=> ($generated@@162 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@918)) ($generated@@362 1)))) (and (=> (= (ControlFlow 0 3) (- 0 12)) ($generated@@340 $generated@@918)) (=> ($generated@@340 $generated@@918) (and (=> (= (ControlFlow 0 3) (- 0 11)) ($generated@@401 ($generated@@342 $generated@@918))) (=> ($generated@@401 ($generated@@342 $generated@@918)) (and (=> (= (ControlFlow 0 3) (- 0 10)) (and (<= 0 ($generated@@362 2)) (< ($generated@@362 2) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@918)))))) (=> (and (<= 0 ($generated@@362 2)) (< ($generated@@362 2) ($generated@@170 ($generated@@524 ($generated@@342 $generated@@918))))) (=> (and (= $generated@@923 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@524 ($generated@@342 $generated@@918)) ($generated@@362 2)))) ($generated@@101 $generated@@923 $generated@@94 $generated@@920)) (and (=> (= (ControlFlow 0 3) (- 0 9)) (=> ($generated@@565 $generated@@923 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@923 ($generated@@349 $generated@@560)) (=> ($generated@@162 $generated@@923) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@374 ($generated@@349 $generated@@560))))))))) (and (=> (= (ControlFlow 0 3) (- 0 8)) (=> ($generated@@565 $generated@@923 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@923 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@923)) (=> ($generated@@401 $generated@@923) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@395 ($generated@@349 $generated@@560)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 7)) (=> ($generated@@565 $generated@@923 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@923 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@923)) (=> ($generated@@401 $generated@@923) (let (($generated@@940 ($generated@@524 $generated@@923)))
(= ($generated@@170 $generated@@940) ($generated@@170 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@560))))))))))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> ($generated@@565 $generated@@923 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@923 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@923)) (=> ($generated@@401 $generated@@923) (let (($generated@@941 ($generated@@524 $generated@@923)))
(forall (($generated@@942 Int) ) (!  (=> true (=> (and (<= ($generated@@362 0) $generated@@942) (< $generated@@942 ($generated@@170 $generated@@941))) ($generated@@445 $generated@@530 ($generated@@172 $generated@@95 ($generated@@166 $generated@@941 $generated@@942)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@516 ($generated@@349 $generated@@560))) $generated@@942)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@516 $generated@@560) $generated@@942)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@941 $generated@@942)))
)))))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> ($generated@@565 $generated@@923 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@923 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@923)) (=> (not ($generated@@401 $generated@@923)) ($generated@@0 ($generated@@349 ($generated@@11 ($generated@@398 ($generated@@349 $generated@@560)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@565 $generated@@923 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@923 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@923)) (=> (not ($generated@@401 $generated@@923)) (let (($generated@@943 ($generated@@341 $generated@@923)))
(< $generated@@943 ($generated@@170 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@560))))))))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@565 $generated@@923 ($generated@@349 $generated@@560)) (or ($generated@@445 $generated@@530 $generated@@923 ($generated@@349 $generated@@560)) (=> (not ($generated@@162 $generated@@923)) (=> (not ($generated@@401 $generated@@923)) (let (($generated@@944 ($generated@@342 $generated@@923)))
(let (($generated@@945 ($generated@@341 $generated@@923)))
($generated@@445 $generated@@530 $generated@@944 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@349 ($generated@@520 ($generated@@349 $generated@@560))) $generated@@945)))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@946  (=> (= $generated@@924 ($generated@@298 $generated@@925 $generated@@920 $generated@@60 false)) (and (=> (= (ControlFlow 0 28) (- 0 30)) ($generated@@340 $generated@@918)) (=> ($generated@@340 $generated@@918) (=> (= $generated@@926 ($generated@@362 0)) (and (=> (= (ControlFlow 0 28) (- 0 29)) (and (<= ($generated@@362 0) $generated@@926) (< $generated@@926 18446744073709551616))) (=> (and (<= ($generated@@362 0) $generated@@926) (< $generated@@926 18446744073709551616)) (and (=> (= (ControlFlow 0 28) 3) $generated@@933) (=> (= (ControlFlow 0 28) 27) $generated@@932))))))))))
(let (($generated@@947 true))
(let (($generated@@948  (=> (and (= $generated@@927 ($generated@@243 $generated@@925 $generated@@920 $generated@@60 false)) (= $generated@@928 ($generated@@446 ($generated@@446 ($generated@@446 $generated@@929))))) (=> (and (and (and (= $generated@@530 ($generated@@446 ($generated@@446 ($generated@@446 ($generated@@446 $generated@@929))))) (= ($generated@@899 $generated@@929) $generated@@929)) (and $generated@@561 ($generated@@101 $generated@@918 $generated@@94 $generated@@920))) (and (and (= $generated@@930 ($generated@@349 $generated@@531)) ($generated@@101 $generated@@930 $generated@@318 $generated@@920)) (and ($generated@@565 $generated@@918 ($generated@@349 $generated@@531)) ($generated@@445 $generated@@530 $generated@@918 ($generated@@349 $generated@@531))))) (and (=> (= (ControlFlow 0 31) 1) $generated@@947) (=> (= (ControlFlow 0 31) 28) $generated@@946))))))
(let (($generated@@949  (=> (and (and (and ($generated@@216 $generated@@920) ($generated@@931 $generated@@920)) ($generated@@92 $generated@@918 $generated@@94)) (and (= 4 $generated@@346) (= (ControlFlow 0 32) 31))) $generated@@948)))
$generated@@949)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) Bool)
(declare-fun $generated@@93 (Int T@U) T@U)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@U)
(declare-fun $generated@@101 (T@U T@U T@U) Bool)
(declare-fun $generated@@102 (Int) T@U)
(declare-fun $generated@@103 (T@T T@T) T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@T) T@T)
(declare-fun $generated@@108 (T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@166 (T@U Int) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@170 (T@U) Int)
(declare-fun $generated@@171 (T@U) Int)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@192 (T@U Int T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Int)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@220 (T@U) Bool)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@238 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@244 (T@T T@T) T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@247 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@298 (T@U T@U) T@U)
(declare-fun $generated@@299 (T@U T@U) Bool)
(declare-fun $generated@@306 () T@U)
(declare-fun $generated@@307 () T@U)
(declare-fun $generated@@308 (T@U T@U T@U) Bool)
(declare-fun $generated@@309 () T@U)
(declare-fun $generated@@310 () T@U)
(declare-fun $generated@@320 (T@U T@U) Bool)
(declare-fun $generated@@325 (T@U T@U) Bool)
(declare-fun $generated@@328 (T@U) Bool)
(declare-fun $generated@@329 (T@U) Int)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@334 () Int)
(declare-fun $generated@@335 () Bool)
(declare-fun $generated@@336 () T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@350 (Int) Int)
(declare-fun $generated@@353 (T@U T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@362 (T@U) Bool)
(declare-fun $generated@@365 (T@U) Bool)
(declare-fun $generated@@368 (T@U) Bool)
(declare-fun $generated@@381 (T@U) Bool)
(declare-fun $generated@@383 (T@U) Bool)
(declare-fun $generated@@386 (T@U) Bool)
(declare-fun $generated@@389 (T@U) Bool)
(declare-fun $generated@@392 (T@U) Bool)
(declare-fun $generated@@395 (T@U T@U) Bool)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@424 (Int) T@U)
(declare-fun $generated@@433 (T@U T@U T@U) Bool)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@435 () T@T)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@445 (T@U) Int)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@T T@T) T@U)
(declare-fun $generated@@453 (T@T T@T) T@T)
(declare-fun $generated@@454 (T@T) T@T)
(declare-fun $generated@@455 (T@T) T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@T T@T) T@U)
(declare-fun $generated@@471 (T@T T@T) T@T)
(declare-fun $generated@@472 (T@T) T@T)
(declare-fun $generated@@473 (T@T) T@T)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@541 () Bool)
(declare-fun $generated@@542 () T@U)
(declare-fun $generated@@543 () Bool)
(declare-fun $generated@@544 () T@U)
(declare-fun $generated@@548 (T@U T@U) Bool)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@590 (T@U T@U) T@U)
(declare-fun $generated@@598 (T@U T@U) T@U)
(declare-fun $generated@@614 (T@T) T@U)
(declare-fun $generated@@638 () T@T)
(declare-fun $generated@@652 (T@U) T@U)
(declare-fun $generated@@656 (T@U) T@U)
(declare-fun $generated@@662 (T@U) T@U)
(declare-fun $generated@@666 (T@U) T@U)
(declare-fun $generated@@674 (T@U) T@U)
(declare-fun $generated@@678 (T@U) T@U)
(declare-fun $generated@@699 (T@U) Int)
(declare-fun $generated@@701 (T@U) T@U)
(declare-fun $generated@@705 (T@U) T@U)
(declare-fun $generated@@709 (T@U) T@U)
(declare-fun $generated@@713 (T@U) T@U)
(declare-fun $generated@@737 (T@U) Bool)
(declare-fun $generated@@739 (T@U) Int)
(declare-fun $generated@@766 (T@U) T@U)
(declare-fun $generated@@767 (T@U) Bool)
(declare-fun $generated@@768 () T@U)
(declare-fun $generated@@771 (T@U) T@U)
(declare-fun $generated@@772 (T@U) Bool)
(declare-fun $generated@@787 (T@U) Int)
(declare-fun $generated@@793 (T@U) T@U)
(declare-fun $generated@@797 (T@U) T@U)
(declare-fun $generated@@798 (T@U) T@U)
(declare-fun $generated@@881 (T@U) T@U)
(declare-fun $generated@@882 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@82) 6) (= (type $generated@@44) $generated@@82)) (= (type $generated@@45) $generated@@82)) (= (type $generated@@46) $generated@@82)) (= (type $generated@@47) $generated@@82)) (= (type $generated@@48) $generated@@82)) (= ($generated@@1 $generated@@83) 7)) (= (type $generated@@49) $generated@@83)) (= (type $generated@@50) $generated@@83)) (= (type $generated@@51) $generated@@83)) (= (type $generated@@52) $generated@@83)) (= (type $generated@@53) $generated@@83)) (= (type $generated@@54) $generated@@83)) (= (type $generated@@55) $generated@@83)) (= (type $generated@@56) $generated@@83)) (= (type $generated@@57) $generated@@83)) (= (type $generated@@58) $generated@@83)) (= (type $generated@@59) $generated@@83)) (forall (($generated@@88 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@88)) 8))) (forall (($generated@@89 T@T) ) (! (= ($generated@@85 ($generated@@84 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@84 $generated@@89))
))) (= (type $generated@@60) ($generated@@84 $generated@@4))) (= ($generated@@1 $generated@@86) 9)) (= (type $generated@@61) $generated@@86)) (= (type $generated@@62) $generated@@83)) (= (type $generated@@63) $generated@@83)) (= (type $generated@@64) $generated@@86)) (= (type $generated@@65) $generated@@83)) (= (type $generated@@66) $generated@@86)) (= (type $generated@@67) $generated@@86)) (= (type $generated@@68) $generated@@86)) (= (type $generated@@69) $generated@@86)) (= (type $generated@@70) $generated@@86)) (= (type $generated@@71) $generated@@83)) (= (type $generated@@72) $generated@@86)) (= (type $generated@@73) $generated@@86)) (= (type $generated@@74) $generated@@86)) (= (type $generated@@75) $generated@@83)) (= (type $generated@@76) $generated@@86)) (= ($generated@@1 $generated@@87) 10)) (= (type $generated@@77) $generated@@87)) (= (type $generated@@78) $generated@@87)) (= (type $generated@@79) $generated@@87)) (= (type $generated@@80) $generated@@87)) (= (type $generated@@81) $generated@@87)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79 $generated@@80 $generated@@81)
)
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@83)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@44) $generated@@49))
(assert (= ($generated@@90 $generated@@45) $generated@@50))
(assert (= ($generated@@90 $generated@@46) $generated@@51))
(assert (= ($generated@@90 $generated@@47) $generated@@52))
(assert (= ($generated@@90 $generated@@48) $generated@@53))
(assert  (and (and (and (= ($generated@@1 $generated@@95) 11) (forall (($generated@@97 Int) ($generated@@98 T@U) ) (! (= (type ($generated@@93 $generated@@97 $generated@@98)) $generated@@95)
 :pattern ( ($generated@@93 $generated@@97 $generated@@98))
))) (= (type $generated@@94) $generated@@82)) (= (type $generated@@96) $generated@@82)))
(assert (forall (($generated@@99 Int) ($generated@@100 T@U) ) (!  (=> (= (type $generated@@100) $generated@@95) (= ($generated@@92 ($generated@@93 $generated@@99 $generated@@100) $generated@@94)  (and ($generated@@92 ($generated@@8 $generated@@99) $generated@@96) ($generated@@92 $generated@@100 $generated@@94))))
 :pattern ( ($generated@@92 ($generated@@93 $generated@@99 $generated@@100) $generated@@94))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@103 $generated@@112 $generated@@113)) 12)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@106 ($generated@@103 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@103 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@107 ($generated@@103 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@103 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@107 (type $generated@@118))))
(= (type ($generated@@108 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@108 $generated@@118 $generated@@119))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 (type $generated@@123)))
(let (($generated@@125 (type $generated@@122)))
(= (type ($generated@@109 $generated@@121 $generated@@122 $generated@@123)) ($generated@@103 $generated@@125 $generated@@124))))
 :pattern ( ($generated@@109 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@107 (type $generated@@126))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@108 ($generated@@109 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@108 ($generated@@109 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@108 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@108 ($generated@@109 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@108 $generated@@135 $generated@@137)))
 :weight 0
)))) (= ($generated@@1 $generated@@104) 13)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@85 (type $generated@@139))))
(= (type ($generated@@110 $generated@@138 $generated@@139)) $generated@@140))
 :pattern ( ($generated@@110 $generated@@138 $generated@@139))
))) (= ($generated@@1 $generated@@105) 14)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@111 $generated@@141 $generated@@142 $generated@@143)) $generated@@105)
 :pattern ( ($generated@@111 $generated@@141 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@85 (type $generated@@145))))
 (=> (= (type $generated@@146) $generated@@147) (= ($generated@@110 ($generated@@111 $generated@@144 $generated@@145 $generated@@146) $generated@@145) $generated@@146)))
 :weight 0
))) (and (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@150 $generated@@151) (= ($generated@@110 ($generated@@111 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@110 $generated@@149 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@153 $generated@@154 $generated@@152) $generated@@155) ($generated@@110 $generated@@153 $generated@@155)))
 :weight 0
)))) (forall (($generated@@156 Int) ) (! (= (type ($generated@@102 $generated@@156)) $generated@@82)
 :pattern ( ($generated@@102 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@2) (= (type $generated@@158) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@101 $generated@@157 ($generated@@102 0) $generated@@158))
 :pattern ( ($generated@@101 $generated@@157 ($generated@@102 0) $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@101 $generated@@159 $generated@@96 $generated@@160))
 :pattern ( ($generated@@101 $generated@@159 $generated@@96 $generated@@160))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@95) (= (type $generated@@165) $generated@@95)) (and ($generated@@162 $generated@@164) ($generated@@162 $generated@@165))) (= ($generated@@161 $generated@@164 $generated@@165) (= ($generated@@163 $generated@@164) ($generated@@163 $generated@@165))))
 :pattern ( ($generated@@161 $generated@@164 $generated@@165) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@161 $generated@@164 $generated@@165) ($generated@@162 $generated@@165))
)))
(assert  (and (and (and (and (and (forall (($generated@@174 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@174)) 15)) (forall (($generated@@175 T@T) ) (! (= ($generated@@173 ($generated@@168 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@168 $generated@@175))
))) (= ($generated@@1 $generated@@169) 16)) (forall (($generated@@176 T@U) ($generated@@177 Int) ) (! (let (($generated@@178 ($generated@@173 (type $generated@@176))))
(= (type ($generated@@166 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@166 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@167 $generated@@179)) $generated@@95)
 :pattern ( ($generated@@167 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@U) ) (! (= (type ($generated@@172 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 Int) ) (!  (=> (= (type $generated@@182) ($generated@@168 $generated@@169)) (=> (and (<= 0 $generated@@183) (< $generated@@183 ($generated@@170 $generated@@182))) (< ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@182 $generated@@183))) ($generated@@171 ($generated@@167 $generated@@182)))))
 :pattern ( ($generated@@166 $generated@@182 $generated@@183) ($generated@@167 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@184 $generated@@185)) $generated@@95)
 :pattern ( ($generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 Int) ) (!  (=> (= (type $generated@@186) ($generated@@168 $generated@@169)) (=> (and (<= 0 $generated@@187) (< $generated@@187 ($generated@@170 $generated@@186))) (< ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@186 $generated@@187))) ($generated@@171 ($generated@@184 $generated@@186)))))
 :pattern ( ($generated@@166 $generated@@186 $generated@@187) ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@188 $generated@@189)) $generated@@95)
 :pattern ( ($generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 Int) ) (!  (=> (= (type $generated@@190) ($generated@@168 $generated@@169)) (=> (and (<= 0 $generated@@191) (< $generated@@191 ($generated@@170 $generated@@190))) (< ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@190 $generated@@191))) ($generated@@171 ($generated@@188 $generated@@190)))))
 :pattern ( ($generated@@166 $generated@@190 $generated@@191) ($generated@@188 $generated@@190))
)))
(assert  (and (forall (($generated@@194 T@U) ($generated@@195 Int) ($generated@@196 T@U) ) (! (= (type ($generated@@192 $generated@@194 $generated@@195 $generated@@196)) $generated@@95)
 :pattern ( ($generated@@192 $generated@@194 $generated@@195 $generated@@196))
)) (forall (($generated@@197 T@U) ) (! (= (type ($generated@@193 $generated@@197)) $generated@@86)
 :pattern ( ($generated@@193 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 Int) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@198) $generated@@169) (= (type $generated@@200) $generated@@169)) (= ($generated@@193 ($generated@@192 $generated@@198 $generated@@199 $generated@@200)) $generated@@74))
 :pattern ( ($generated@@192 $generated@@198 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@201 $generated@@202)) $generated@@169)
 :pattern ( ($generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 Int) ($generated@@205 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@169) (= (type $generated@@205) $generated@@169)) (= ($generated@@201 ($generated@@192 $generated@@203 $generated@@204 $generated@@205)) $generated@@203))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 Int) ($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@207) $generated@@169) (= (type $generated@@209) $generated@@169)) (= ($generated@@206 ($generated@@192 $generated@@207 $generated@@208 $generated@@209)) $generated@@208))
 :pattern ( ($generated@@192 $generated@@207 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ) (! (= (type ($generated@@210 $generated@@211)) $generated@@169)
 :pattern ( ($generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 Int) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@212) $generated@@169) (= (type $generated@@214) $generated@@169)) (= ($generated@@210 ($generated@@192 $generated@@212 $generated@@213 $generated@@214)) $generated@@214))
 :pattern ( ($generated@@192 $generated@@212 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (= (type $generated@@215) $generated@@2) ($generated@@92 $generated@@215 ($generated@@102 0)))
 :pattern ( ($generated@@92 $generated@@215 ($generated@@102 0)))
)))
(assert (forall (($generated@@217 Int) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (and (= (type $generated@@218) $generated@@95) (= (type $generated@@219) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@219)) (= ($generated@@101 ($generated@@93 $generated@@217 $generated@@218) $generated@@94 $generated@@219)  (and ($generated@@101 ($generated@@8 $generated@@217) $generated@@96 $generated@@219) ($generated@@101 $generated@@218 $generated@@94 $generated@@219))))
 :pattern ( ($generated@@101 ($generated@@93 $generated@@217 $generated@@218) $generated@@94 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223)) $generated@@82)
 :pattern ( ($generated@@221 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@82) (= (type $generated@@225) $generated@@82)) (= (type $generated@@226) $generated@@95)) ($generated@@92 $generated@@226 ($generated@@221 $generated@@224 $generated@@225))) ($generated@@220 $generated@@226))
 :pattern ( ($generated@@220 $generated@@226) ($generated@@92 $generated@@226 ($generated@@221 $generated@@224 $generated@@225)))
)))
(assert  (and (forall (($generated@@230 T@U) ) (! (= (type ($generated@@228 $generated@@230)) $generated@@169)
 :pattern ( ($generated@@228 $generated@@230))
)) (forall (($generated@@231 T@U) ) (! (= (type ($generated@@229 $generated@@231)) $generated@@169)
 :pattern ( ($generated@@229 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (= (type $generated@@232) $generated@@95) (= (type $generated@@233) $generated@@95)) true) (= ($generated@@227 $generated@@232 $generated@@233)  (and (= ($generated@@228 $generated@@232) ($generated@@228 $generated@@233)) (= ($generated@@229 $generated@@232) ($generated@@229 $generated@@233)))))
 :pattern ( ($generated@@227 $generated@@232 $generated@@233))
)))
(assert (= (type $generated@@234) $generated@@95))
(assert (= ($generated@@193 $generated@@234) $generated@@64))
(assert (= (type $generated@@235) $generated@@95))
(assert (= ($generated@@193 $generated@@235) $generated@@68))
(assert (= (type $generated@@236) $generated@@95))
(assert (= ($generated@@193 $generated@@236) $generated@@76))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@237 $generated@@239)) $generated@@82)
 :pattern ( ($generated@@237 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (= (type $generated@@240) ($generated@@103 $generated@@169 $generated@@2)) (= (type $generated@@241) $generated@@82)) ($generated@@92 $generated@@240 ($generated@@237 $generated@@241))) ($generated@@238 $generated@@240))
 :pattern ( ($generated@@92 $generated@@240 ($generated@@237 $generated@@241)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (= ($generated@@1 ($generated@@244 $generated@@248 $generated@@249)) 17)) (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (! (= ($generated@@245 ($generated@@244 $generated@@250 $generated@@251)) $generated@@250)
 :pattern ( ($generated@@244 $generated@@250 $generated@@251))
))) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= ($generated@@246 ($generated@@244 $generated@@252 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@244 $generated@@252 $generated@@253))
))) (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@246 (type $generated@@254))))
(= (type ($generated@@242 $generated@@254 $generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@242 $generated@@254 $generated@@255 $generated@@256))
))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(let (($generated@@263 (type $generated@@259)))
(= (type ($generated@@247 $generated@@258 $generated@@259 $generated@@260 $generated@@261)) ($generated@@244 $generated@@263 $generated@@262))))
 :pattern ( ($generated@@247 $generated@@258 $generated@@259 $generated@@260 $generated@@261))
))) (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@246 (type $generated@@264))))
 (=> (= (type $generated@@267) $generated@@268) (= ($generated@@242 ($generated@@247 $generated@@264 $generated@@265 $generated@@266 $generated@@267) $generated@@265 $generated@@266) $generated@@267)))
 :weight 0
))) (and (and (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (or (= $generated@@271 $generated@@273) (= ($generated@@242 ($generated@@247 $generated@@270 $generated@@271 $generated@@272 $generated@@269) $generated@@273 $generated@@274) ($generated@@242 $generated@@270 $generated@@273 $generated@@274)))
 :weight 0
)) (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (or (= $generated@@278 $generated@@280) (= ($generated@@242 ($generated@@247 $generated@@276 $generated@@277 $generated@@278 $generated@@275) $generated@@279 $generated@@280) ($generated@@242 $generated@@276 $generated@@279 $generated@@280)))
 :weight 0
))) (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (or true (= ($generated@@242 ($generated@@247 $generated@@282 $generated@@283 $generated@@284 $generated@@281) $generated@@285 $generated@@286) ($generated@@242 $generated@@282 $generated@@285 $generated@@286)))
 :weight 0
)))) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 Bool) ) (! (= (type ($generated@@243 $generated@@287 $generated@@288 $generated@@289 $generated@@290)) ($generated@@244 $generated@@104 $generated@@4))
 :pattern ( ($generated@@243 $generated@@287 $generated@@288 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 Bool) ($generated@@295 T@U) ($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@85 (type $generated@@296))))
 (=> (and (and (and (and (= (type $generated@@291) $generated@@104) (= (type $generated@@292) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@293) ($generated@@84 $generated@@4))) (= (type $generated@@295) $generated@@104)) (= (type $generated@@296) ($generated@@84 $generated@@297))) (= ($generated@@0 ($generated@@242 ($generated@@243 $generated@@291 $generated@@292 $generated@@293 $generated@@294) $generated@@295 $generated@@296))  (=> (and (not (= $generated@@295 $generated@@291)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@292 $generated@@295) $generated@@293))) $generated@@294))))
 :pattern ( ($generated@@242 ($generated@@243 $generated@@291 $generated@@292 $generated@@293 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (= (type ($generated@@298 $generated@@300 $generated@@301)) $generated@@95)
 :pattern ( ($generated@@298 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (= (type $generated@@302) $generated@@82) (= (type $generated@@303) $generated@@82)) (= (type $generated@@304) $generated@@169)) (= (type $generated@@305) $generated@@169)) (= ($generated@@92 ($generated@@298 $generated@@304 $generated@@305) ($generated@@221 $generated@@302 $generated@@303))  (and ($generated@@299 $generated@@304 $generated@@302) ($generated@@299 $generated@@305 $generated@@303))))
 :pattern ( ($generated@@92 ($generated@@298 $generated@@304 $generated@@305) ($generated@@221 $generated@@302 $generated@@303)))
)))
(assert (= (type $generated@@306) $generated@@82))
(assert ($generated@@92 $generated@@234 $generated@@306))
(assert ($generated@@92 $generated@@235 $generated@@306))
(assert (= (type $generated@@307) $generated@@82))
(assert ($generated@@92 $generated@@236 $generated@@307))
(assert  (and (= (type $generated@@309) $generated@@82) (= (type $generated@@310) $generated@@82)))
(assert (forall (($generated@@311 T@U) ($generated@@312 Int) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@311) $generated@@169) (= (type $generated@@313) $generated@@169)) (= (type $generated@@314) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@314)) (= ($generated@@101 ($generated@@192 $generated@@311 $generated@@312 $generated@@313) $generated@@307 $generated@@314)  (and (and ($generated@@308 $generated@@311 $generated@@309 $generated@@314) ($generated@@101 ($generated@@8 $generated@@312) $generated@@96 $generated@@314)) ($generated@@308 $generated@@313 $generated@@310 $generated@@314))))
 :pattern ( ($generated@@101 ($generated@@192 $generated@@311 $generated@@312 $generated@@313) $generated@@307 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@216 $generated@@315)) ($generated@@101 $generated@@234 $generated@@306 $generated@@315))
 :pattern ( ($generated@@101 $generated@@234 $generated@@306 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@216 $generated@@316)) ($generated@@101 $generated@@235 $generated@@306 $generated@@316))
 :pattern ( ($generated@@101 $generated@@235 $generated@@306 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@216 $generated@@317)) ($generated@@101 $generated@@236 $generated@@307 $generated@@317))
 :pattern ( ($generated@@101 $generated@@236 $generated@@307 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@95) (= (type $generated@@319) $generated@@95)) (= ($generated@@227 $generated@@318 $generated@@319) (= $generated@@318 $generated@@319)))
 :pattern ( ($generated@@227 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@95) (= (type $generated@@322) $generated@@95)) (= ($generated@@320 $generated@@321 $generated@@322) (= $generated@@321 $generated@@322)))
 :pattern ( ($generated@@320 $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@95) (= (type $generated@@324) $generated@@95)) (= ($generated@@161 $generated@@323 $generated@@324) (= $generated@@323 $generated@@324)))
 :pattern ( ($generated@@161 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@95) (= (type $generated@@327) $generated@@95)) (= ($generated@@325 $generated@@326 $generated@@327) (= $generated@@326 $generated@@327)))
 :pattern ( ($generated@@325 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (= (type ($generated@@330 $generated@@331)) $generated@@95)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@332) $generated@@95) (= (type $generated@@333) $generated@@95)) (and ($generated@@328 $generated@@332) ($generated@@328 $generated@@333))) (= ($generated@@161 $generated@@332 $generated@@333)  (and (= ($generated@@329 $generated@@332) ($generated@@329 $generated@@333)) ($generated@@161 ($generated@@330 $generated@@332) ($generated@@330 $generated@@333)))))
 :pattern ( ($generated@@161 $generated@@332 $generated@@333) ($generated@@328 $generated@@332))
 :pattern ( ($generated@@161 $generated@@332 $generated@@333) ($generated@@328 $generated@@333))
)))
(assert  (and (= (type $generated@@336) $generated@@95) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
(= (type ($generated@@337 $generated@@338)) $generated@@339))
 :pattern ( ($generated@@337 $generated@@338))
))))
(assert  (=> (<= 1 $generated@@334) (=> (or $generated@@335 (not (= 1 $generated@@334))) (= $generated@@336 ($generated@@337 $generated@@234)))))
(assert  (=> (<= 1 $generated@@334) (=> (or $generated@@335 (not (= 1 $generated@@334))) (= $generated@@336 ($generated@@337 $generated@@234)))))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@82)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@103 $generated@@169 $generated@@4)) (= (type $generated@@343) $generated@@82)) (= ($generated@@92 $generated@@342 ($generated@@340 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@169) ($generated@@0 ($generated@@108 $generated@@342 $generated@@344))) ($generated@@299 $generated@@344 $generated@@343))
 :pattern ( ($generated@@108 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@92 $generated@@342 ($generated@@340 $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@82)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@103 $generated@@169 $generated@@4)) (= (type $generated@@348) $generated@@82)) (= ($generated@@92 $generated@@347 ($generated@@345 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@169) ($generated@@0 ($generated@@108 $generated@@347 $generated@@349))) ($generated@@299 $generated@@349 $generated@@348))
 :pattern ( ($generated@@108 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@92 $generated@@347 ($generated@@345 $generated@@348)))
)))
(assert (forall (($generated@@351 Int) ) (! (= ($generated@@350 $generated@@351) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (! (= ($generated@@337 $generated@@352) $generated@@352)
 :pattern ( ($generated@@337 $generated@@352))
)))
(assert  (and (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (! (let (($generated@@357 (type $generated@@356)))
(= (type ($generated@@353 $generated@@355 $generated@@356)) ($generated@@168 $generated@@357)))
 :pattern ( ($generated@@353 $generated@@355 $generated@@356))
)) (forall (($generated@@358 T@U) ) (! (= (type ($generated@@354 $generated@@358)) $generated@@82)
 :pattern ( ($generated@@354 $generated@@358))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (and (= (type $generated@@359) ($generated@@168 $generated@@169)) (= (type $generated@@360) $generated@@169)) (= (type $generated@@361) $generated@@82)) (and ($generated@@92 $generated@@359 ($generated@@354 $generated@@361)) ($generated@@299 $generated@@360 $generated@@361))) ($generated@@92 ($generated@@353 $generated@@359 $generated@@360) ($generated@@354 $generated@@361)))
 :pattern ( ($generated@@92 ($generated@@353 $generated@@359 $generated@@360) ($generated@@354 $generated@@361)))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@363) $generated@@95) (= (type $generated@@364) $generated@@95)) (and ($generated@@362 $generated@@363) ($generated@@362 $generated@@364))) (= ($generated@@320 $generated@@363 $generated@@364) true))
 :pattern ( ($generated@@320 $generated@@363 $generated@@364) ($generated@@362 $generated@@363))
 :pattern ( ($generated@@320 $generated@@363 $generated@@364) ($generated@@362 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@366) $generated@@95) (= (type $generated@@367) $generated@@95)) (and ($generated@@365 $generated@@366) ($generated@@365 $generated@@367))) (= ($generated@@320 $generated@@366 $generated@@367) true))
 :pattern ( ($generated@@320 $generated@@366 $generated@@367) ($generated@@365 $generated@@366))
 :pattern ( ($generated@@320 $generated@@366 $generated@@367) ($generated@@365 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@369) $generated@@95) (= (type $generated@@370) $generated@@95)) (and ($generated@@368 $generated@@369) ($generated@@368 $generated@@370))) (= ($generated@@325 $generated@@369 $generated@@370) true))
 :pattern ( ($generated@@325 $generated@@369 $generated@@370) ($generated@@368 $generated@@369))
 :pattern ( ($generated@@325 $generated@@369 $generated@@370) ($generated@@368 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@371) $generated@@82) (= (type $generated@@372) $generated@@82)) (= (type $generated@@373) $generated@@169)) (= (type $generated@@374) $generated@@169)) (= (type $generated@@375) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@375)) (= ($generated@@101 ($generated@@298 $generated@@373 $generated@@374) ($generated@@221 $generated@@371 $generated@@372) $generated@@375)  (and ($generated@@308 $generated@@373 $generated@@371 $generated@@375) ($generated@@308 $generated@@374 $generated@@372 $generated@@375))))
 :pattern ( ($generated@@101 ($generated@@298 $generated@@373 $generated@@374) ($generated@@221 $generated@@371 $generated@@372) $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 Int) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@169) (= (type $generated@@378) $generated@@169)) (= ($generated@@92 ($generated@@192 $generated@@376 $generated@@377 $generated@@378) $generated@@307)  (and (and ($generated@@299 $generated@@376 $generated@@309) ($generated@@92 ($generated@@8 $generated@@377) $generated@@96)) ($generated@@299 $generated@@378 $generated@@310))))
 :pattern ( ($generated@@92 ($generated@@192 $generated@@376 $generated@@377 $generated@@378) $generated@@307))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@95) (= ($generated@@220 $generated@@379) (= ($generated@@193 $generated@@379) $generated@@61)))
 :pattern ( ($generated@@220 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@95) (= ($generated@@362 $generated@@380) (= ($generated@@193 $generated@@380) $generated@@64)))
 :pattern ( ($generated@@362 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (= (type $generated@@382) $generated@@95) (= ($generated@@381 $generated@@382) (= ($generated@@193 $generated@@382) $generated@@66)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@95) (= ($generated@@383 $generated@@384) (= ($generated@@193 $generated@@384) $generated@@67)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@95) (= ($generated@@365 $generated@@385) (= ($generated@@193 $generated@@385) $generated@@68)))
 :pattern ( ($generated@@365 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (= (type $generated@@387) $generated@@95) (= ($generated@@386 $generated@@387) (= ($generated@@193 $generated@@387) $generated@@69)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (= (type $generated@@388) $generated@@95) (= ($generated@@162 $generated@@388) (= ($generated@@193 $generated@@388) $generated@@70)))
 :pattern ( ($generated@@162 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@95) (= ($generated@@389 $generated@@390) (= ($generated@@193 $generated@@390) $generated@@72)))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (= (type $generated@@391) $generated@@95) (= ($generated@@328 $generated@@391) (= ($generated@@193 $generated@@391) $generated@@73)))
 :pattern ( ($generated@@328 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) $generated@@95) (= ($generated@@392 $generated@@393) (= ($generated@@193 $generated@@393) $generated@@74)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@95) (= ($generated@@368 $generated@@394) (= ($generated@@193 $generated@@394) $generated@@76)))
 :pattern ( ($generated@@368 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@173 (type $generated@@396))))
 (=> (and (= (type $generated@@396) ($generated@@168 $generated@@398)) (= (type $generated@@397) ($generated@@168 $generated@@398))) (= ($generated@@395 $generated@@396 $generated@@397)  (and (= ($generated@@170 $generated@@396) ($generated@@170 $generated@@397)) (forall (($generated@@399 Int) ) (!  (=> (and (<= 0 $generated@@399) (< $generated@@399 ($generated@@170 $generated@@396))) (= ($generated@@166 $generated@@396 $generated@@399) ($generated@@166 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@166 $generated@@396 $generated@@399))
 :pattern ( ($generated@@166 $generated@@397 $generated@@399))
))))))
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@95) ($generated@@392 $generated@@400)) (exists (($generated@@401 T@U) ($generated@@402 Int) ($generated@@403 T@U) ) (!  (and (and (= (type $generated@@401) $generated@@169) (= (type $generated@@403) $generated@@169)) (= $generated@@400 ($generated@@192 $generated@@401 $generated@@402 $generated@@403)))
 :no-pattern (type $generated@@401)
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
)))
 :pattern ( ($generated@@392 $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@95) ($generated@@220 $generated@@404)) (exists (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (and (and (= (type $generated@@405) $generated@@169) (= (type $generated@@406) $generated@@169)) (= $generated@@404 ($generated@@298 $generated@@405 $generated@@406)))
 :no-pattern (type $generated@@405)
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
)))
 :pattern ( ($generated@@220 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@95) ($generated@@328 $generated@@407)) (exists (($generated@@408 Int) ($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@95) (= $generated@@407 ($generated@@93 $generated@@408 $generated@@409)))
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
)))
 :pattern ( ($generated@@328 $generated@@407))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@168 $generated@@411))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@T) ) (! (= ($generated@@170 ($generated@@410 $generated@@412)) 0)
 :pattern ( ($generated@@410 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@95) ($generated@@362 $generated@@413)) (= $generated@@413 $generated@@234))
 :pattern ( ($generated@@362 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@95) ($generated@@365 $generated@@414)) (= $generated@@414 $generated@@235))
 :pattern ( ($generated@@365 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@95) ($generated@@368 $generated@@415)) (= $generated@@415 $generated@@236))
 :pattern ( ($generated@@368 $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ) (! (= (type ($generated@@416 $generated@@417)) $generated@@95)
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@95) ($generated@@381 $generated@@418)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@95) (= $generated@@418 ($generated@@416 $generated@@419)))
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
)))
 :pattern ( ($generated@@381 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@95) ($generated@@383 $generated@@420)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) ($generated@@168 $generated@@169)) (= $generated@@420 ($generated@@167 $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
)))
 :pattern ( ($generated@@383 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@95) ($generated@@386 $generated@@422)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) ($generated@@168 $generated@@169)) (= $generated@@422 ($generated@@184 $generated@@423)))
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
)))
 :pattern ( ($generated@@386 $generated@@422))
)))
(assert (forall (($generated@@425 Int) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@95)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@95) ($generated@@162 $generated@@426)) (exists (($generated@@427 Int) ) (= $generated@@426 ($generated@@424 $generated@@427))))
 :pattern ( ($generated@@162 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@95) ($generated@@389 $generated@@428)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) ($generated@@168 $generated@@169)) (= $generated@@428 ($generated@@188 $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
)))
 :pattern ( ($generated@@389 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
 (=> (= (type $generated@@430) ($generated@@168 $generated@@432)) (= ($generated@@170 ($generated@@353 $generated@@430 $generated@@431)) (+ 1 ($generated@@170 $generated@@430)))))
 :pattern ( ($generated@@353 $generated@@430 $generated@@431))
)))
(assert  (and (= ($generated@@1 $generated@@435) 18) (forall (($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@436)) $generated@@435)
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (= (type $generated@@437) $generated@@435) (= (type $generated@@438) $generated@@95)) (= (type $generated@@439) $generated@@95)) (= ($generated@@433 ($generated@@434 $generated@@437) $generated@@438 $generated@@439) ($generated@@433 $generated@@437 $generated@@438 $generated@@439)))
 :pattern ( ($generated@@433 ($generated@@434 $generated@@437) $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@169)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@82) (= (type $generated@@444) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@308 ($generated@@440 $generated@@442) $generated@@443 $generated@@444) ($generated@@101 $generated@@442 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@308 ($generated@@440 $generated@@442) $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@103 $generated@@447 $generated@@2))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@106 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@103 $generated@@449 $generated@@2)) (and (= (= ($generated@@445 $generated@@448) 0) (= $generated@@448 ($generated@@446 $generated@@449))) (=> (not (= ($generated@@445 $generated@@448) 0)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) (< 0 ($generated ($generated@@108 $generated@@448 $generated@@450))))
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@445 $generated@@448))
)))
(assert  (and (and (and (and (forall (($generated@@456 T@T) ($generated@@457 T@T) ) (= ($generated@@1 ($generated@@453 $generated@@456 $generated@@457)) 19)) (forall (($generated@@458 T@T) ($generated@@459 T@T) ) (! (= ($generated@@454 ($generated@@453 $generated@@458 $generated@@459)) $generated@@458)
 :pattern ( ($generated@@453 $generated@@458 $generated@@459))
))) (forall (($generated@@460 T@T) ($generated@@461 T@T) ) (! (= ($generated@@455 ($generated@@453 $generated@@460 $generated@@461)) $generated@@461)
 :pattern ( ($generated@@453 $generated@@460 $generated@@461))
))) (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@454 (type $generated@@462))))
(= (type ($generated@@451 $generated@@462)) ($generated@@103 $generated@@463 $generated@@4)))
 :pattern ( ($generated@@451 $generated@@462))
))) (forall (($generated@@464 T@T) ($generated@@465 T@T) ) (! (= (type ($generated@@452 $generated@@464 $generated@@465)) ($generated@@453 $generated@@464 $generated@@465))
 :pattern ( ($generated@@452 $generated@@464 $generated@@465))
))))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@T) ) (! (let (($generated@@468 (type $generated@@466)))
 (not ($generated@@0 ($generated@@108 ($generated@@451 ($generated@@452 $generated@@468 $generated@@467)) $generated@@466))))
 :pattern ( (let (($generated@@468 (type $generated@@466)))
($generated@@108 ($generated@@451 ($generated@@452 $generated@@468 $generated@@467)) $generated@@466)))
)))
(assert  (and (and (and (and (forall (($generated@@474 T@T) ($generated@@475 T@T) ) (= ($generated@@1 ($generated@@471 $generated@@474 $generated@@475)) 20)) (forall (($generated@@476 T@T) ($generated@@477 T@T) ) (! (= ($generated@@472 ($generated@@471 $generated@@476 $generated@@477)) $generated@@476)
 :pattern ( ($generated@@471 $generated@@476 $generated@@477))
))) (forall (($generated@@478 T@T) ($generated@@479 T@T) ) (! (= ($generated@@473 ($generated@@471 $generated@@478 $generated@@479)) $generated@@479)
 :pattern ( ($generated@@471 $generated@@478 $generated@@479))
))) (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@472 (type $generated@@480))))
(= (type ($generated@@469 $generated@@480)) ($generated@@103 $generated@@481 $generated@@4)))
 :pattern ( ($generated@@469 $generated@@480))
))) (forall (($generated@@482 T@T) ($generated@@483 T@T) ) (! (= (type ($generated@@470 $generated@@482 $generated@@483)) ($generated@@471 $generated@@482 $generated@@483))
 :pattern ( ($generated@@470 $generated@@482 $generated@@483))
))))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@T) ) (! (let (($generated@@486 (type $generated@@484)))
 (not ($generated@@0 ($generated@@108 ($generated@@469 ($generated@@470 $generated@@486 $generated@@485)) $generated@@484))))
 :pattern ( (let (($generated@@486 (type $generated@@484)))
($generated@@108 ($generated@@469 ($generated@@470 $generated@@486 $generated@@485)) $generated@@484)))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@106 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@103 $generated@@488 $generated@@2)) (= ($generated@@238 $generated@@487) (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@488) (and (<= 0 ($generated ($generated@@108 $generated@@487 $generated@@489))) (<= ($generated ($generated@@108 $generated@@487 $generated@@489)) ($generated@@445 $generated@@487))))
 :pattern ( ($generated@@108 $generated@@487 $generated@@489))
)))))
 :pattern ( ($generated@@238 $generated@@487))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@169) ($generated@@299 $generated@@490 $generated@@96)) (and (= ($generated@@440 ($generated@@172 $generated@@2 $generated@@490)) $generated@@490) ($generated@@92 ($generated@@172 $generated@@2 $generated@@490) $generated@@96)))
 :pattern ( ($generated@@299 $generated@@490 $generated@@96))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@169) ($generated@@299 $generated@@491 $generated@@306)) (and (= ($generated@@440 ($generated@@172 $generated@@95 $generated@@491)) $generated@@491) ($generated@@92 ($generated@@172 $generated@@95 $generated@@491) $generated@@306)))
 :pattern ( ($generated@@299 $generated@@491 $generated@@306))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@169) ($generated@@299 $generated@@492 $generated@@94)) (and (= ($generated@@440 ($generated@@172 $generated@@95 $generated@@492)) $generated@@492) ($generated@@92 ($generated@@172 $generated@@95 $generated@@492) $generated@@94)))
 :pattern ( ($generated@@299 $generated@@492 $generated@@94))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@169) ($generated@@299 $generated@@493 $generated@@307)) (and (= ($generated@@440 ($generated@@172 $generated@@95 $generated@@493)) $generated@@493) ($generated@@92 ($generated@@172 $generated@@95 $generated@@493) $generated@@307)))
 :pattern ( ($generated@@299 $generated@@493 $generated@@307))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@95) (= ($generated@@92 ($generated@@416 $generated@@494) $generated@@306) ($generated@@92 $generated@@494 $generated@@306)))
 :pattern ( ($generated@@92 ($generated@@416 $generated@@494) $generated@@306))
)))
(assert (forall (($generated@@495 Int) ) (! (= ($generated@@92 ($generated@@424 $generated@@495) $generated@@94) ($generated@@92 ($generated@@8 $generated@@495) $generated@@96))
 :pattern ( ($generated@@92 ($generated@@424 $generated@@495) $generated@@94))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 Int) ($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
 (=> (= (type $generated@@496) ($generated@@168 $generated@@499)) (and (=> (= $generated@@497 ($generated@@170 $generated@@496)) (= ($generated@@166 ($generated@@353 $generated@@496 $generated@@498) $generated@@497) $generated@@498)) (=> (not (= $generated@@497 ($generated@@170 $generated@@496))) (= ($generated@@166 ($generated@@353 $generated@@496 $generated@@498) $generated@@497) ($generated@@166 $generated@@496 $generated@@497))))))
 :pattern ( ($generated@@166 ($generated@@353 $generated@@496 $generated@@498) $generated@@497))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@95)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@502) $generated@@95) (= (type $generated@@503) $generated@@95)) (and ($generated@@381 $generated@@502) ($generated@@381 $generated@@503))) (= ($generated@@320 $generated@@502 $generated@@503) ($generated@@320 ($generated@@500 $generated@@502) ($generated@@500 $generated@@503))))
 :pattern ( ($generated@@320 $generated@@502 $generated@@503) ($generated@@381 $generated@@502))
 :pattern ( ($generated@@320 $generated@@502 $generated@@503) ($generated@@381 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) ($generated@@168 $generated@@169))
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@506) $generated@@95) (= (type $generated@@507) $generated@@95)) (and ($generated@@383 $generated@@506) ($generated@@383 $generated@@507))) (= ($generated@@320 $generated@@506 $generated@@507) ($generated@@395 ($generated@@504 $generated@@506) ($generated@@504 $generated@@507))))
 :pattern ( ($generated@@320 $generated@@506 $generated@@507) ($generated@@383 $generated@@506))
 :pattern ( ($generated@@320 $generated@@506 $generated@@507) ($generated@@383 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) ($generated@@168 $generated@@169))
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@510) $generated@@95) (= (type $generated@@511) $generated@@95)) (and ($generated@@386 $generated@@510) ($generated@@386 $generated@@511))) (= ($generated@@320 $generated@@510 $generated@@511) ($generated@@395 ($generated@@508 $generated@@510) ($generated@@508 $generated@@511))))
 :pattern ( ($generated@@320 $generated@@510 $generated@@511) ($generated@@386 $generated@@510))
 :pattern ( ($generated@@320 $generated@@510 $generated@@511) ($generated@@386 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) ($generated@@168 $generated@@169))
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@514) $generated@@95) (= (type $generated@@515) $generated@@95)) (and ($generated@@389 $generated@@514) ($generated@@389 $generated@@515))) (= ($generated@@161 $generated@@514 $generated@@515) ($generated@@395 ($generated@@512 $generated@@514) ($generated@@512 $generated@@515))))
 :pattern ( ($generated@@161 $generated@@514 $generated@@515) ($generated@@389 $generated@@514))
 :pattern ( ($generated@@161 $generated@@514 $generated@@515) ($generated@@389 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@455 (type $generated@@516))))
(let (($generated@@518 ($generated@@454 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@453 $generated@@518 $generated@@517)) (or (= $generated@@516 ($generated@@452 $generated@@518 $generated@@517)) (exists (($generated@@519 T@U) ) (!  (and (= (type $generated@@519) $generated@@518) ($generated@@0 ($generated@@108 ($generated@@451 $generated@@516) $generated@@519)))
 :no-pattern (type $generated@@519)
 :no-pattern ($generated $generated@@519)
 :no-pattern ($generated@@0 $generated@@519)
))))))
 :pattern ( ($generated@@451 $generated@@516))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@455 (type $generated@@521))))
(= (type ($generated@@520 $generated@@521)) ($generated@@103 $generated@@522 $generated@@4)))
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@455 (type $generated@@523))))
(let (($generated@@525 ($generated@@454 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@453 $generated@@525 $generated@@524)) (or (= $generated@@523 ($generated@@452 $generated@@525 $generated@@524)) (exists (($generated@@526 T@U) ) (!  (and (= (type $generated@@526) $generated@@524) ($generated@@0 ($generated@@108 ($generated@@520 $generated@@523) $generated@@526)))
 :no-pattern (type $generated@@526)
 :no-pattern ($generated $generated@@526)
 :no-pattern ($generated@@0 $generated@@526)
))))))
 :pattern ( ($generated@@520 $generated@@523))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 ($generated@@473 (type $generated@@527))))
(let (($generated@@529 ($generated@@472 (type $generated@@527))))
 (=> (= (type $generated@@527) ($generated@@471 $generated@@529 $generated@@528)) (or (= $generated@@527 ($generated@@470 $generated@@529 $generated@@528)) (exists (($generated@@530 T@U) ) (!  (and (= (type $generated@@530) $generated@@529) ($generated@@0 ($generated@@108 ($generated@@469 $generated@@527) $generated@@530)))
 :no-pattern (type $generated@@530)
 :no-pattern ($generated $generated@@530)
 :no-pattern ($generated@@0 $generated@@530)
))))))
 :pattern ( ($generated@@469 $generated@@527))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@473 (type $generated@@532))))
(= (type ($generated@@531 $generated@@532)) ($generated@@103 $generated@@533 $generated@@4)))
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 ($generated@@473 (type $generated@@534))))
(let (($generated@@536 ($generated@@472 (type $generated@@534))))
 (=> (= (type $generated@@534) ($generated@@471 $generated@@536 $generated@@535)) (or (= $generated@@534 ($generated@@470 $generated@@536 $generated@@535)) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@535) ($generated@@0 ($generated@@108 ($generated@@531 $generated@@534) $generated@@537)))
 :no-pattern (type $generated@@537)
 :no-pattern ($generated $generated@@537)
 :no-pattern ($generated@@0 $generated@@537)
))))))
 :pattern ( ($generated@@531 $generated@@534))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) ($generated@@103 $generated@@169 $generated@@2)) (= (type $generated@@539) $generated@@82)) (= ($generated@@92 $generated@@538 ($generated@@237 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@169) (< 0 ($generated ($generated@@108 $generated@@538 $generated@@540)))) ($generated@@299 $generated@@540 $generated@@539))
 :pattern ( ($generated@@108 $generated@@538 $generated@@540))
))))
 :pattern ( ($generated@@92 $generated@@538 ($generated@@237 $generated@@539)))
)))
(assert  (=> (<= 1 $generated@@334) (=> (or $generated@@335 (not (= 1 $generated@@334))) ($generated@@92 $generated@@336 $generated@@306))))
(assert (= (type $generated@@542) $generated@@95))
(assert  (=> (<= 1 $generated@@334) (=> (or $generated@@541 (not (= 1 $generated@@334))) ($generated@@92 $generated@@542 $generated@@306))))
(assert (= (type $generated@@544) $generated@@95))
(assert  (=> (<= 2 $generated@@334) (=> (or $generated@@543 (not (= 2 $generated@@334))) ($generated@@92 $generated@@544 $generated@@306))))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) ($generated@@168 $generated@@169)) (= ($generated@@92 ($generated@@167 $generated@@545) $generated@@306) ($generated@@92 $generated@@545 ($generated@@354 $generated@@306))))
 :pattern ( ($generated@@92 ($generated@@167 $generated@@545) $generated@@306))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) ($generated@@168 $generated@@169)) (= ($generated@@92 ($generated@@184 $generated@@546) $generated@@306) ($generated@@92 $generated@@546 ($generated@@354 $generated@@306))))
 :pattern ( ($generated@@92 ($generated@@184 $generated@@546) $generated@@306))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) ($generated@@168 $generated@@169)) (= ($generated@@92 ($generated@@188 $generated@@547) $generated@@94) ($generated@@92 $generated@@547 ($generated@@354 $generated@@94))))
 :pattern ( ($generated@@92 ($generated@@188 $generated@@547) $generated@@94))
)))
(assert  (=> (<= 2 $generated@@334) (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@435) (= (type $generated@@550) $generated@@95)) (= (type $generated@@551) $generated@@95)) (or ($generated@@548 $generated@@550 $generated@@551) (and (not (= 2 $generated@@334)) (and ($generated@@92 $generated@@550 $generated@@94) ($generated@@92 $generated@@551 $generated@@306))))) true)
 :pattern ( ($generated@@433 $generated@@549 $generated@@550 $generated@@551))
))))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@95) (= (type $generated@@553) $generated@@95)) (and ($generated@@392 $generated@@552) ($generated@@392 $generated@@553))) (= ($generated@@325 $generated@@552 $generated@@553)  (and (and (= ($generated@@201 $generated@@552) ($generated@@201 $generated@@553)) (= ($generated@@206 $generated@@552) ($generated@@206 $generated@@553))) (= ($generated@@210 $generated@@552) ($generated@@210 $generated@@553)))))
 :pattern ( ($generated@@325 $generated@@552 $generated@@553) ($generated@@392 $generated@@552))
 :pattern ( ($generated@@325 $generated@@552 $generated@@553) ($generated@@392 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@103 $generated@@169 $generated@@4)) (= (type $generated@@555) $generated@@82)) (= (type $generated@@556) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@554 ($generated@@340 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@169) ($generated@@0 ($generated@@108 $generated@@554 $generated@@557))) ($generated@@308 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@108 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@101 $generated@@554 ($generated@@340 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@103 $generated@@169 $generated@@4)) (= (type $generated@@559) $generated@@82)) (= (type $generated@@560) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@558 ($generated@@345 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@169) ($generated@@0 ($generated@@108 $generated@@558 $generated@@561))) ($generated@@308 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@108 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@101 $generated@@558 ($generated@@345 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@562)))
(= ($generated ($generated@@108 ($generated@@446 $generated@@563) $generated@@562)) 0))
 :pattern ( (let (($generated@@563 (type $generated@@562)))
($generated@@108 ($generated@@446 $generated@@563) $generated@@562)))
)))
(assert  (and (forall (($generated@@566 T@U) ) (! (= (type ($generated@@564 $generated@@566)) ($generated@@103 $generated@@169 $generated@@4))
 :pattern ( ($generated@@564 $generated@@566))
)) (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@455 (type $generated@@567))))
(let (($generated@@569 ($generated@@454 (type $generated@@567))))
(= (type ($generated@@565 $generated@@567)) ($generated@@103 $generated@@569 $generated@@568))))
 :pattern ( ($generated@@565 $generated@@567))
))))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@453 $generated@@169 $generated@@169)) (= (type $generated@@571) $generated@@169)) (= ($generated@@0 ($generated@@108 ($generated@@564 $generated@@570) $generated@@571))  (and ($generated@@0 ($generated@@108 ($generated@@451 $generated@@570) ($generated@@228 ($generated@@172 $generated@@95 $generated@@571)))) (= ($generated@@108 ($generated@@565 $generated@@570) ($generated@@228 ($generated@@172 $generated@@95 $generated@@571))) ($generated@@229 ($generated@@172 $generated@@95 $generated@@571))))))
 :pattern ( ($generated@@108 ($generated@@564 $generated@@570) $generated@@571))
)))
(assert  (and (forall (($generated@@574 T@U) ) (! (= (type ($generated@@572 $generated@@574)) ($generated@@103 $generated@@169 $generated@@4))
 :pattern ( ($generated@@572 $generated@@574))
)) (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@473 (type $generated@@575))))
(let (($generated@@577 ($generated@@472 (type $generated@@575))))
(= (type ($generated@@573 $generated@@575)) ($generated@@103 $generated@@577 $generated@@576))))
 :pattern ( ($generated@@573 $generated@@575))
))))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@471 $generated@@169 $generated@@169)) (= (type $generated@@579) $generated@@169)) (= ($generated@@0 ($generated@@108 ($generated@@572 $generated@@578) $generated@@579))  (and ($generated@@0 ($generated@@108 ($generated@@469 $generated@@578) ($generated@@228 ($generated@@172 $generated@@95 $generated@@579)))) (= ($generated@@108 ($generated@@573 $generated@@578) ($generated@@228 ($generated@@172 $generated@@95 $generated@@579))) ($generated@@229 ($generated@@172 $generated@@95 $generated@@579))))))
 :pattern ( ($generated@@108 ($generated@@572 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
(let (($generated@@583 ($generated@@454 (type $generated@@580))))
 (=> (= (type $generated@@580) ($generated@@453 $generated@@583 $generated@@582)) (= ($generated@@0 ($generated@@108 ($generated@@520 $generated@@580) $generated@@581)) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@583) (and ($generated@@0 ($generated@@108 ($generated@@451 $generated@@580) $generated@@584)) (= $generated@@581 ($generated@@108 ($generated@@565 $generated@@580) $generated@@584))))
 :pattern ( ($generated@@108 ($generated@@451 $generated@@580) $generated@@584))
 :pattern ( ($generated@@108 ($generated@@565 $generated@@580) $generated@@584))
))))))
 :pattern ( ($generated@@108 ($generated@@520 $generated@@580) $generated@@581))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
(let (($generated@@588 ($generated@@472 (type $generated@@585))))
 (=> (= (type $generated@@585) ($generated@@471 $generated@@588 $generated@@587)) (= ($generated@@0 ($generated@@108 ($generated@@531 $generated@@585) $generated@@586)) (exists (($generated@@589 T@U) ) (!  (and (= (type $generated@@589) $generated@@588) (and ($generated@@0 ($generated@@108 ($generated@@469 $generated@@585) $generated@@589)) (= $generated@@586 ($generated@@108 ($generated@@573 $generated@@585) $generated@@589))))
 :pattern ( ($generated@@108 ($generated@@469 $generated@@585) $generated@@589))
 :pattern ( ($generated@@108 ($generated@@573 $generated@@585) $generated@@589))
))))))
 :pattern ( ($generated@@108 ($generated@@531 $generated@@585) $generated@@586))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (! (= (type ($generated@@590 $generated@@591 $generated@@592)) $generated@@82)
 :pattern ( ($generated@@590 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@453 $generated@@169 $generated@@169)) (= (type $generated@@594) $generated@@82)) (= (type $generated@@595) $generated@@82)) (= (type $generated@@596) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@593 ($generated@@590 $generated@@594 $generated@@595) $generated@@596) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@169) ($generated@@0 ($generated@@108 ($generated@@451 $generated@@593) $generated@@597))) (and ($generated@@308 ($generated@@108 ($generated@@565 $generated@@593) $generated@@597) $generated@@595 $generated@@596) ($generated@@308 $generated@@597 $generated@@594 $generated@@596)))
 :pattern ( ($generated@@108 ($generated@@565 $generated@@593) $generated@@597))
 :pattern ( ($generated@@108 ($generated@@451 $generated@@593) $generated@@597))
))))
 :pattern ( ($generated@@101 $generated@@593 ($generated@@590 $generated@@594 $generated@@595) $generated@@596))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (! (= (type ($generated@@598 $generated@@599 $generated@@600)) $generated@@82)
 :pattern ( ($generated@@598 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@471 $generated@@169 $generated@@169)) (= (type $generated@@602) $generated@@82)) (= (type $generated@@603) $generated@@82)) (= (type $generated@@604) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@601 ($generated@@598 $generated@@602 $generated@@603) $generated@@604) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@169) ($generated@@0 ($generated@@108 ($generated@@469 $generated@@601) $generated@@605))) (and ($generated@@308 ($generated@@108 ($generated@@573 $generated@@601) $generated@@605) $generated@@603 $generated@@604) ($generated@@308 $generated@@605 $generated@@602 $generated@@604)))
 :pattern ( ($generated@@108 ($generated@@573 $generated@@601) $generated@@605))
 :pattern ( ($generated@@108 ($generated@@469 $generated@@601) $generated@@605))
))))
 :pattern ( ($generated@@101 $generated@@601 ($generated@@598 $generated@@602 $generated@@603) $generated@@604))
)))
(assert  (=> (<= 2 $generated@@334) (=> (or $generated@@543 (not (= 2 $generated@@334))) (and (and $generated@@335 $generated@@541) (= $generated@@544 ($generated@@337 ($generated@@184 ($generated@@337 ($generated@@353 ($generated@@353 ($generated@@410 $generated@@169) ($generated@@440 ($generated@@337 ($generated@@167 ($generated@@337 ($generated@@353 ($generated@@353 ($generated@@353 ($generated@@410 $generated@@169) ($generated@@440 ($generated@@337 $generated@@336))) ($generated@@440 ($generated@@337 $generated@@234))) ($generated@@440 ($generated@@337 $generated@@542)))))))) ($generated@@440 ($generated@@337 $generated@@234)))))))))))
(assert  (=> (<= 2 $generated@@334) (=> (or $generated@@543 (not (= 2 $generated@@334))) (and (and $generated@@335 $generated@@541) (= $generated@@544 ($generated@@337 ($generated@@184 ($generated@@337 ($generated@@353 ($generated@@353 ($generated@@410 $generated@@169) ($generated@@440 ($generated@@337 ($generated@@167 ($generated@@337 ($generated@@353 ($generated@@353 ($generated@@353 ($generated@@410 $generated@@169) ($generated@@440 ($generated@@337 $generated@@336))) ($generated@@440 ($generated@@337 $generated@@234))) ($generated@@440 ($generated@@337 $generated@@542)))))))) ($generated@@440 ($generated@@337 $generated@@234)))))))))))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@173 (type $generated@@606))))
 (=> (and (and (= (type $generated@@606) ($generated@@168 $generated@@608)) (= (type $generated@@607) ($generated@@168 $generated@@608))) ($generated@@395 $generated@@606 $generated@@607)) (= $generated@@606 $generated@@607)))
 :pattern ( ($generated@@395 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@95) (= (type $generated@@610) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@610)) (= ($generated@@101 ($generated@@416 $generated@@609) $generated@@306 $generated@@610) ($generated@@101 $generated@@609 $generated@@306 $generated@@610)))
 :pattern ( ($generated@@101 ($generated@@416 $generated@@609) $generated@@306 $generated@@610))
)))
(assert (forall (($generated@@611 Int) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@216 $generated@@612)) (= ($generated@@101 ($generated@@424 $generated@@611) $generated@@94 $generated@@612) ($generated@@101 ($generated@@8 $generated@@611) $generated@@96 $generated@@612)))
 :pattern ( ($generated@@101 ($generated@@424 $generated@@611) $generated@@94 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@95) ($generated@@92 $generated@@613 $generated@@307)) (or ($generated@@392 $generated@@613) ($generated@@368 $generated@@613)))
 :pattern ( ($generated@@368 $generated@@613) ($generated@@92 $generated@@613 $generated@@307))
 :pattern ( ($generated@@392 $generated@@613) ($generated@@92 $generated@@613 $generated@@307))
)))
(assert (forall (($generated@@615 T@T) ) (! (= (type ($generated@@614 $generated@@615)) ($generated@@103 $generated@@615 $generated@@4))
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@473 (type $generated@@616))))
(let (($generated@@618 ($generated@@472 (type $generated@@616))))
 (=> (= (type $generated@@616) ($generated@@471 $generated@@618 $generated@@617)) (= (= $generated@@616 ($generated@@470 $generated@@618 $generated@@617)) (= ($generated@@469 $generated@@616) ($generated@@614 $generated@@618))))))
 :pattern ( ($generated@@469 $generated@@616))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@473 (type $generated@@619))))
(let (($generated@@621 ($generated@@472 (type $generated@@619))))
 (=> (= (type $generated@@619) ($generated@@471 $generated@@621 $generated@@620)) (= (= $generated@@619 ($generated@@470 $generated@@621 $generated@@620)) (= ($generated@@531 $generated@@619) ($generated@@614 $generated@@620))))))
 :pattern ( ($generated@@531 $generated@@619))
)))
(assert (forall (($generated@@622 T@U) ) (! (let (($generated@@623 ($generated@@473 (type $generated@@622))))
(let (($generated@@624 ($generated@@472 (type $generated@@622))))
 (=> (= (type $generated@@622) ($generated@@471 $generated@@624 $generated@@623)) (= (= $generated@@622 ($generated@@470 $generated@@624 $generated@@623)) (= ($generated@@572 $generated@@622) ($generated@@614 $generated@@169))))))
 :pattern ( ($generated@@572 $generated@@622))
)))
(assert (forall (($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@455 (type $generated@@625))))
(let (($generated@@627 ($generated@@454 (type $generated@@625))))
 (=> (= (type $generated@@625) ($generated@@453 $generated@@627 $generated@@626)) (or (= $generated@@625 ($generated@@452 $generated@@627 $generated@@626)) (exists (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (and (and (= (type $generated@@628) $generated@@169) (= (type $generated@@629) $generated@@169)) ($generated@@0 ($generated@@108 ($generated@@564 $generated@@625) ($generated@@440 ($generated@@298 $generated@@628 $generated@@629)))))
 :no-pattern (type $generated@@628)
 :no-pattern (type $generated@@629)
 :no-pattern ($generated $generated@@628)
 :no-pattern ($generated@@0 $generated@@628)
 :no-pattern ($generated $generated@@629)
 :no-pattern ($generated@@0 $generated@@629)
))))))
 :pattern ( ($generated@@564 $generated@@625))
)))
(assert (forall (($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@473 (type $generated@@630))))
(let (($generated@@632 ($generated@@472 (type $generated@@630))))
 (=> (= (type $generated@@630) ($generated@@471 $generated@@632 $generated@@631)) (or (= $generated@@630 ($generated@@470 $generated@@632 $generated@@631)) (exists (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (and (and (= (type $generated@@633) $generated@@169) (= (type $generated@@634) $generated@@169)) ($generated@@0 ($generated@@108 ($generated@@572 $generated@@630) ($generated@@440 ($generated@@298 $generated@@633 $generated@@634)))))
 :no-pattern (type $generated@@633)
 :no-pattern (type $generated@@634)
 :no-pattern ($generated $generated@@633)
 :no-pattern ($generated@@0 $generated@@633)
 :no-pattern ($generated $generated@@634)
 :no-pattern ($generated@@0 $generated@@634)
))))))
 :pattern ( ($generated@@572 $generated@@630))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@169) ($generated@@299 $generated@@635 $generated@@46)) (and (= ($generated@@440 ($generated@@172 $generated@@2 $generated@@635)) $generated@@635) ($generated@@92 ($generated@@172 $generated@@2 $generated@@635) $generated@@46)))
 :pattern ( ($generated@@299 $generated@@635 $generated@@46))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@169) ($generated@@299 $generated@@636 $generated@@47)) (and (= ($generated@@440 ($generated@@172 $generated@@3 $generated@@636)) $generated@@636) ($generated@@92 ($generated@@172 $generated@@3 $generated@@636) $generated@@47)))
 :pattern ( ($generated@@299 $generated@@636 $generated@@47))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@169) ($generated@@299 $generated@@637 $generated@@44)) (and (= ($generated@@440 ($generated@@172 $generated@@4 $generated@@637)) $generated@@637) ($generated@@92 ($generated@@172 $generated@@4 $generated@@637) $generated@@44)))
 :pattern ( ($generated@@299 $generated@@637 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@638) 21))
(assert (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@169) ($generated@@299 $generated@@639 $generated@@45)) (and (= ($generated@@440 ($generated@@172 $generated@@638 $generated@@639)) $generated@@639) ($generated@@92 ($generated@@172 $generated@@638 $generated@@639) $generated@@45)))
 :pattern ( ($generated@@299 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@82) (= ($generated@@299 ($generated@@440 $generated@@640) $generated@@641) ($generated@@92 $generated@@640 $generated@@641)))
 :pattern ( ($generated@@299 ($generated@@440 $generated@@640) $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 ($generated@@106 (type $generated@@642))))
 (=> (= (type $generated@@642) ($generated@@103 $generated@@643 $generated@@2)) (<= 0 ($generated@@445 $generated@@642))))
 :pattern ( ($generated@@445 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@173 (type $generated@@644))))
 (=> (= (type $generated@@644) ($generated@@168 $generated@@645)) (<= 0 ($generated@@170 $generated@@644))))
 :pattern ( ($generated@@170 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@646) ($generated@@168 $generated@@169)) (= (type $generated@@647) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@647)) (= ($generated@@101 ($generated@@167 $generated@@646) $generated@@306 $generated@@647) ($generated@@101 $generated@@646 ($generated@@354 $generated@@306) $generated@@647)))
 :pattern ( ($generated@@101 ($generated@@167 $generated@@646) $generated@@306 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@168 $generated@@169)) (= (type $generated@@649) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@649)) (= ($generated@@101 ($generated@@184 $generated@@648) $generated@@306 $generated@@649) ($generated@@101 $generated@@648 ($generated@@354 $generated@@306) $generated@@649)))
 :pattern ( ($generated@@101 ($generated@@184 $generated@@648) $generated@@306 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (= (type $generated@@650) ($generated@@168 $generated@@169)) (= (type $generated@@651) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@216 $generated@@651)) (= ($generated@@101 ($generated@@188 $generated@@650) $generated@@94 $generated@@651) ($generated@@101 $generated@@650 ($generated@@354 $generated@@94) $generated@@651)))
 :pattern ( ($generated@@101 ($generated@@188 $generated@@650) $generated@@94 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ) (! (= (type ($generated@@652 $generated@@653)) $generated@@82)
 :pattern ( ($generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@82) (= (type $generated@@655) $generated@@82)) (= ($generated@@652 ($generated@@590 $generated@@654 $generated@@655)) $generated@@654))
 :pattern ( ($generated@@590 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ) (! (= (type ($generated@@656 $generated@@657)) $generated@@82)
 :pattern ( ($generated@@656 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@82) (= (type $generated@@659) $generated@@82)) (= ($generated@@656 ($generated@@590 $generated@@658 $generated@@659)) $generated@@659))
 :pattern ( ($generated@@590 $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@82) (= (type $generated@@661) $generated@@82)) (= ($generated@@90 ($generated@@590 $generated@@660 $generated@@661)) $generated@@58))
 :pattern ( ($generated@@590 $generated@@660 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ) (! (= (type ($generated@@662 $generated@@663)) $generated@@82)
 :pattern ( ($generated@@662 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@82) (= (type $generated@@665) $generated@@82)) (= ($generated@@662 ($generated@@598 $generated@@664 $generated@@665)) $generated@@664))
 :pattern ( ($generated@@598 $generated@@664 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ) (! (= (type ($generated@@666 $generated@@667)) $generated@@82)
 :pattern ( ($generated@@666 $generated@@667))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@82) (= (type $generated@@669) $generated@@82)) (= ($generated@@666 ($generated@@598 $generated@@668 $generated@@669)) $generated@@669))
 :pattern ( ($generated@@598 $generated@@668 $generated@@669))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@82) (= (type $generated@@671) $generated@@82)) (= ($generated@@90 ($generated@@598 $generated@@670 $generated@@671)) $generated@@59))
 :pattern ( ($generated@@598 $generated@@670 $generated@@671))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) $generated@@169) (= (type $generated@@673) $generated@@169)) (= ($generated@@193 ($generated@@298 $generated@@672 $generated@@673)) $generated@@61))
 :pattern ( ($generated@@298 $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ) (! (= (type ($generated@@674 $generated@@675)) $generated@@82)
 :pattern ( ($generated@@674 $generated@@675))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) $generated@@82) (= (type $generated@@677) $generated@@82)) (= ($generated@@674 ($generated@@221 $generated@@676 $generated@@677)) $generated@@676))
 :pattern ( ($generated@@221 $generated@@676 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ) (! (= (type ($generated@@678 $generated@@679)) $generated@@82)
 :pattern ( ($generated@@678 $generated@@679))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) $generated@@82) (= (type $generated@@681) $generated@@82)) (= ($generated@@678 ($generated@@221 $generated@@680 $generated@@681)) $generated@@681))
 :pattern ( ($generated@@221 $generated@@680 $generated@@681))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@169) (= (type $generated@@683) $generated@@169)) (= ($generated@@228 ($generated@@298 $generated@@682 $generated@@683)) $generated@@682))
 :pattern ( ($generated@@298 $generated@@682 $generated@@683))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) $generated@@169) (= (type $generated@@685) $generated@@169)) (= ($generated@@229 ($generated@@298 $generated@@684 $generated@@685)) $generated@@685))
 :pattern ( ($generated@@298 $generated@@684 $generated@@685))
)))
(assert (forall (($generated@@686 Int) ($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@95) (= ($generated@@193 ($generated@@93 $generated@@686 $generated@@687)) $generated@@73))
 :pattern ( ($generated@@93 $generated@@686 $generated@@687))
)))
(assert (forall (($generated@@688 Int) ($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@95) (= ($generated@@329 ($generated@@93 $generated@@688 $generated@@689)) $generated@@688))
 :pattern ( ($generated@@93 $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@690 Int) ($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@95) (= ($generated@@330 ($generated@@93 $generated@@690 $generated@@691)) $generated@@691))
 :pattern ( ($generated@@93 $generated@@690 $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (= (type $generated@@692) ($generated@@168 $generated@@169)) (= (type $generated@@693) $generated@@82)) (= (type $generated@@694) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@692 ($generated@@354 $generated@@693) $generated@@694) (forall (($generated@@695 Int) ) (!  (=> (and (<= 0 $generated@@695) (< $generated@@695 ($generated@@170 $generated@@692))) ($generated@@308 ($generated@@166 $generated@@692 $generated@@695) $generated@@693 $generated@@694))
 :pattern ( ($generated@@166 $generated@@692 $generated@@695))
))))
 :pattern ( ($generated@@101 $generated@@692 ($generated@@354 $generated@@693) $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 Int) ($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@696) $generated@@169) (= (type $generated@@698) $generated@@169)) (= ($generated@@192 ($generated@@337 $generated@@696) ($generated@@350 $generated@@697) ($generated@@337 $generated@@698)) ($generated@@337 ($generated@@192 $generated@@696 $generated@@697 $generated@@698))))
 :pattern ( ($generated@@192 ($generated@@337 $generated@@696) ($generated@@350 $generated@@697) ($generated@@337 $generated@@698)))
)))
(assert (forall (($generated@@700 Int) ) (! (= ($generated@@699 ($generated@@102 $generated@@700)) $generated@@700)
 :pattern ( ($generated@@102 $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ) (! (= (type ($generated@@701 $generated@@702)) $generated@@82)
 :pattern ( ($generated@@701 $generated@@702))
)))
(assert (forall (($generated@@703 T@U) ) (!  (=> (= (type $generated@@703) $generated@@82) (= ($generated@@701 ($generated@@340 $generated@@703)) $generated@@703))
 :pattern ( ($generated@@340 $generated@@703))
)))
(assert (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@82) (= ($generated@@90 ($generated@@340 $generated@@704)) $generated@@54))
 :pattern ( ($generated@@340 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ) (! (= (type ($generated@@705 $generated@@706)) $generated@@82)
 :pattern ( ($generated@@705 $generated@@706))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@82) (= ($generated@@705 ($generated@@345 $generated@@707)) $generated@@707))
 :pattern ( ($generated@@345 $generated@@707))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@82) (= ($generated@@90 ($generated@@345 $generated@@708)) $generated@@55))
 :pattern ( ($generated@@345 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ) (! (= (type ($generated@@709 $generated@@710)) $generated@@82)
 :pattern ( ($generated@@709 $generated@@710))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@82) (= ($generated@@709 ($generated@@237 $generated@@711)) $generated@@711))
 :pattern ( ($generated@@237 $generated@@711))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@82) (= ($generated@@90 ($generated@@237 $generated@@712)) $generated@@56))
 :pattern ( ($generated@@237 $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ) (! (= (type ($generated@@713 $generated@@714)) $generated@@82)
 :pattern ( ($generated@@713 $generated@@714))
)))
(assert (forall (($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@82) (= ($generated@@713 ($generated@@354 $generated@@715)) $generated@@715))
 :pattern ( ($generated@@354 $generated@@715))
)))
(assert (forall (($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@82) (= ($generated@@90 ($generated@@354 $generated@@716)) $generated@@57))
 :pattern ( ($generated@@354 $generated@@716))
)))
(assert (forall (($generated@@717 T@U) ) (!  (=> (= (type $generated@@717) $generated@@95) (= ($generated@@193 ($generated@@416 $generated@@717)) $generated@@66))
 :pattern ( ($generated@@416 $generated@@717))
)))
(assert (forall (($generated@@718 T@U) ) (!  (=> (= (type $generated@@718) $generated@@95) (= ($generated@@500 ($generated@@416 $generated@@718)) $generated@@718))
 :pattern ( ($generated@@416 $generated@@718))
)))
(assert (forall (($generated@@719 T@U) ) (!  (=> (= (type $generated@@719) ($generated@@168 $generated@@169)) (= ($generated@@193 ($generated@@167 $generated@@719)) $generated@@67))
 :pattern ( ($generated@@167 $generated@@719))
)))
(assert (forall (($generated@@720 T@U) ) (!  (=> (= (type $generated@@720) ($generated@@168 $generated@@169)) (= ($generated@@504 ($generated@@167 $generated@@720)) $generated@@720))
 :pattern ( ($generated@@167 $generated@@720))
)))
(assert (forall (($generated@@721 T@U) ) (!  (=> (= (type $generated@@721) ($generated@@168 $generated@@169)) (= ($generated@@193 ($generated@@184 $generated@@721)) $generated@@69))
 :pattern ( ($generated@@184 $generated@@721))
)))
(assert (forall (($generated@@722 T@U) ) (!  (=> (= (type $generated@@722) ($generated@@168 $generated@@169)) (= ($generated@@508 ($generated@@184 $generated@@722)) $generated@@722))
 :pattern ( ($generated@@184 $generated@@722))
)))
(assert (forall (($generated@@723 Int) ) (! (= ($generated@@193 ($generated@@424 $generated@@723)) $generated@@70)
 :pattern ( ($generated@@424 $generated@@723))
)))
(assert (forall (($generated@@724 Int) ) (! (= ($generated@@163 ($generated@@424 $generated@@724)) $generated@@724)
 :pattern ( ($generated@@424 $generated@@724))
)))
(assert (forall (($generated@@725 T@U) ) (!  (=> (= (type $generated@@725) ($generated@@168 $generated@@169)) (= ($generated@@193 ($generated@@188 $generated@@725)) $generated@@72))
 :pattern ( ($generated@@188 $generated@@725))
)))
(assert (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) ($generated@@168 $generated@@169)) (= ($generated@@512 ($generated@@188 $generated@@726)) $generated@@726))
 :pattern ( ($generated@@188 $generated@@726))
)))
(assert (forall (($generated@@727 T@U) ) (! (let (($generated@@728 (type $generated@@727)))
(= ($generated@@172 $generated@@728 ($generated@@440 $generated@@727)) $generated@@727))
 :pattern ( ($generated@@440 $generated@@727))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (and (= (type $generated@@729) ($generated@@453 $generated@@169 $generated@@169)) (= (type $generated@@730) $generated@@82)) (= (type $generated@@731) $generated@@82)) (= ($generated@@92 $generated@@729 ($generated@@590 $generated@@730 $generated@@731)) (forall (($generated@@732 T@U) ) (!  (=> (and (= (type $generated@@732) $generated@@169) ($generated@@0 ($generated@@108 ($generated@@451 $generated@@729) $generated@@732))) (and ($generated@@299 ($generated@@108 ($generated@@565 $generated@@729) $generated@@732) $generated@@731) ($generated@@299 $generated@@732 $generated@@730)))
 :pattern ( ($generated@@108 ($generated@@565 $generated@@729) $generated@@732))
 :pattern ( ($generated@@108 ($generated@@451 $generated@@729) $generated@@732))
))))
 :pattern ( ($generated@@92 $generated@@729 ($generated@@590 $generated@@730 $generated@@731)))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (and (= (type $generated@@733) ($generated@@471 $generated@@169 $generated@@169)) (= (type $generated@@734) $generated@@82)) (= (type $generated@@735) $generated@@82)) (= ($generated@@92 $generated@@733 ($generated@@598 $generated@@734 $generated@@735)) (forall (($generated@@736 T@U) ) (!  (=> (and (= (type $generated@@736) $generated@@169) ($generated@@0 ($generated@@108 ($generated@@469 $generated@@733) $generated@@736))) (and ($generated@@299 ($generated@@108 ($generated@@573 $generated@@733) $generated@@736) $generated@@735) ($generated@@299 $generated@@736 $generated@@734)))
 :pattern ( ($generated@@108 ($generated@@573 $generated@@733) $generated@@736))
 :pattern ( ($generated@@108 ($generated@@469 $generated@@733) $generated@@736))
))))
 :pattern ( ($generated@@92 $generated@@733 ($generated@@598 $generated@@734 $generated@@735)))
)))
(assert (forall (($generated@@738 T@U) ) (!  (=> (and (= (type $generated@@738) $generated@@95) ($generated@@737 $generated@@738)) (or (or ($generated@@162 $generated@@738) ($generated@@389 $generated@@738)) ($generated@@328 $generated@@738)))
 :pattern ( ($generated@@737 $generated@@738))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (= (type $generated@@740) $generated@@169) (= (type $generated@@741) $generated@@169)) (< ($generated@@739 $generated@@740) ($generated@@171 ($generated@@298 $generated@@740 $generated@@741))))
 :pattern ( ($generated@@298 $generated@@740 $generated@@741))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (= (type $generated@@742) $generated@@169) (= (type $generated@@743) $generated@@169)) (< ($generated@@739 $generated@@743) ($generated@@171 ($generated@@298 $generated@@742 $generated@@743))))
 :pattern ( ($generated@@298 $generated@@742 $generated@@743))
)))
(assert (forall (($generated@@744 Int) ($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@95) (< ($generated@@171 $generated@@745) ($generated@@171 ($generated@@93 $generated@@744 $generated@@745))))
 :pattern ( ($generated@@93 $generated@@744 $generated@@745))
)))
(assert  (=> (<= 2 $generated@@334) (forall (($generated@@746 T@U) ($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (and (and (= (type $generated@@746) $generated@@435) (= (type $generated@@747) $generated@@95)) (= (type $generated@@748) $generated@@95)) (or ($generated@@548 ($generated@@337 $generated@@747) ($generated@@337 $generated@@748)) (and (not (= 2 $generated@@334)) (and ($generated@@92 $generated@@747 $generated@@94) ($generated@@92 $generated@@748 $generated@@306))))) (and (=> (not ($generated@@0 ($generated@@337 ($generated@@11 ($generated@@162 ($generated@@337 $generated@@747)))))) (and (=> ($generated@@0 ($generated@@337 ($generated@@11 ($generated@@389 ($generated@@337 $generated@@747))))) (let (($generated@@749 ($generated@@337 ($generated@@512 ($generated@@337 $generated@@747)))))
 (=> ($generated@@0 ($generated@@337 ($generated@@11 ($generated@@383 ($generated@@337 $generated@@748))))) (=> (= ($generated@@170 $generated@@749) ($generated@@170 ($generated@@337 ($generated@@504 ($generated@@337 $generated@@748))))) (forall (($generated@@750 Int) ) (!  (=> (<= ($generated@@350 0) $generated@@750) (=> (< $generated@@750 ($generated@@170 $generated@@749)) ($generated@@548 ($generated@@172 $generated@@95 ($generated@@166 $generated@@749 $generated@@750)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@337 ($generated@@504 ($generated@@337 $generated@@748))) $generated@@750)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@504 $generated@@748) $generated@@750)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@749 $generated@@750)))
)))))) (=> (not ($generated@@0 ($generated@@337 ($generated@@11 ($generated@@389 ($generated@@337 $generated@@747)))))) (let (($generated@@751 ($generated@@337 ($generated@@330 ($generated@@337 $generated@@747)))))
(let (($generated@@752 ($generated@@350 ($generated@@329 ($generated@@337 $generated@@747)))))
 (=> ($generated@@0 ($generated@@337 ($generated@@11 ($generated@@386 ($generated@@337 $generated@@748))))) (=> (< $generated@@752 ($generated@@170 ($generated@@337 ($generated@@508 ($generated@@337 $generated@@748))))) ($generated@@548 $generated@@751 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@337 ($generated@@508 ($generated@@337 $generated@@748))) $generated@@752)))))))))) (= ($generated@@433 ($generated@@434 $generated@@746) ($generated@@337 $generated@@747) ($generated@@337 $generated@@748)) (ite ($generated@@162 ($generated@@337 $generated@@747)) ($generated@@362 ($generated@@337 $generated@@748)) (ite ($generated@@389 ($generated@@337 $generated@@747)) (let (($generated@@753 ($generated@@337 ($generated@@512 ($generated@@337 $generated@@747)))))
 (and (and ($generated@@383 ($generated@@337 $generated@@748)) (= ($generated@@170 $generated@@753) ($generated@@170 ($generated@@337 ($generated@@504 ($generated@@337 $generated@@748)))))) (forall (($generated@@754 Int) ) (!  (=> true (=> (and (<= ($generated@@350 0) $generated@@754) (< $generated@@754 ($generated@@170 $generated@@753))) ($generated@@433 ($generated@@434 $generated@@746) ($generated@@172 $generated@@95 ($generated@@166 $generated@@753 $generated@@754)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@337 ($generated@@504 ($generated@@337 $generated@@748))) $generated@@754)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@504 $generated@@748) $generated@@754)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@753 $generated@@754)))
)))) (let (($generated@@755 ($generated@@337 ($generated@@330 ($generated@@337 $generated@@747)))))
(let (($generated@@756 ($generated@@350 ($generated@@329 ($generated@@337 $generated@@747)))))
 (and (and ($generated@@386 ($generated@@337 $generated@@748)) (< $generated@@756 ($generated@@170 ($generated@@337 ($generated@@508 ($generated@@337 $generated@@748)))))) ($generated@@433 ($generated@@434 $generated@@746) $generated@@755 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@337 ($generated@@508 ($generated@@337 $generated@@748))) $generated@@756)))))))))))
 :weight 3
 :pattern ( ($generated@@433 ($generated@@434 $generated@@746) ($generated@@337 $generated@@747) ($generated@@337 $generated@@748)))
))))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ($generated@@759 T@U) ) (!  (=> (and (and (and (= (type $generated@@757) $generated@@169) (= (type $generated@@758) $generated@@82)) (= (type $generated@@759) $generated@@82)) ($generated@@299 $generated@@757 ($generated@@590 $generated@@758 $generated@@759))) (and (= ($generated@@440 ($generated@@172 ($generated@@453 $generated@@169 $generated@@169) $generated@@757)) $generated@@757) ($generated@@92 ($generated@@172 ($generated@@453 $generated@@169 $generated@@169) $generated@@757) ($generated@@590 $generated@@758 $generated@@759))))
 :pattern ( ($generated@@299 $generated@@757 ($generated@@590 $generated@@758 $generated@@759)))
)))
(assert (forall (($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (and (= (type $generated@@760) $generated@@169) (= (type $generated@@761) $generated@@82)) (= (type $generated@@762) $generated@@82)) ($generated@@299 $generated@@760 ($generated@@598 $generated@@761 $generated@@762))) (and (= ($generated@@440 ($generated@@172 ($generated@@471 $generated@@169 $generated@@169) $generated@@760)) $generated@@760) ($generated@@92 ($generated@@172 ($generated@@471 $generated@@169 $generated@@169) $generated@@760) ($generated@@598 $generated@@761 $generated@@762))))
 :pattern ( ($generated@@299 $generated@@760 ($generated@@598 $generated@@761 $generated@@762)))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ($generated@@765 T@U) ) (!  (=> (and (and (and (= (type $generated@@763) $generated@@82) (= (type $generated@@764) $generated@@82)) (= (type $generated@@765) $generated@@169)) ($generated@@299 $generated@@765 ($generated@@221 $generated@@763 $generated@@764))) (and (= ($generated@@440 ($generated@@172 $generated@@95 $generated@@765)) $generated@@765) ($generated@@92 ($generated@@172 $generated@@95 $generated@@765) ($generated@@221 $generated@@763 $generated@@764))))
 :pattern ( ($generated@@299 $generated@@765 ($generated@@221 $generated@@763 $generated@@764)))
)))
(assert  (and (forall (($generated@@769 T@U) ) (! (= (type ($generated@@766 $generated@@769)) $generated@@169)
 :pattern ( ($generated@@766 $generated@@769))
)) (= (type $generated@@768) $generated@@435)))
(assert  (=> (<= 3 $generated@@334) (forall (($generated@@770 T@U) ) (!  (=> (and (= (type $generated@@770) $generated@@95) (or ($generated@@767 $generated@@770) (and (not (= 3 $generated@@334)) (and ($generated@@92 $generated@@770 $generated@@94) ($generated@@433 $generated@@768 $generated@@770 ($generated@@337 $generated@@336)))))) ($generated@@299 ($generated@@766 $generated@@770) $generated@@309))
 :pattern ( ($generated@@766 $generated@@770))
))))
(assert (forall (($generated@@773 T@U) ) (! (= (type ($generated@@771 $generated@@773)) $generated@@169)
 :pattern ( ($generated@@771 $generated@@773))
)))
(assert  (=> (<= 3 $generated@@334) (forall (($generated@@774 T@U) ) (!  (=> (and (= (type $generated@@774) $generated@@95) (or ($generated@@772 $generated@@774) (and (not (= 3 $generated@@334)) (and ($generated@@92 $generated@@774 $generated@@94) ($generated@@433 $generated@@768 $generated@@774 ($generated@@337 $generated@@542)))))) ($generated@@299 ($generated@@771 $generated@@774) $generated@@310))
 :pattern ( ($generated@@771 $generated@@774))
))))
(assert  (=> (<= 2 $generated@@334) (forall (($generated@@775 T@U) ($generated@@776 T@U) ($generated@@777 T@U) ) (!  (=> (and (and (and (= (type $generated@@775) $generated@@435) (= (type $generated@@776) $generated@@95)) (= (type $generated@@777) $generated@@95)) (or ($generated@@548 $generated@@776 $generated@@777) (and (not (= 2 $generated@@334)) (and ($generated@@92 $generated@@776 $generated@@94) ($generated@@92 $generated@@777 $generated@@306))))) (and (=> (not ($generated@@162 $generated@@776)) (and (=> ($generated@@389 $generated@@776) (let (($generated@@778 ($generated@@512 $generated@@776)))
 (=> ($generated@@383 $generated@@777) (=> (= ($generated@@170 $generated@@778) ($generated@@170 ($generated@@504 $generated@@777))) (forall (($generated@@779 Int) ) (!  (=> (<= ($generated@@350 0) $generated@@779) (=> (< $generated@@779 ($generated@@170 $generated@@778)) ($generated@@548 ($generated@@172 $generated@@95 ($generated@@166 $generated@@778 $generated@@779)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@504 $generated@@777) $generated@@779)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@504 $generated@@777) $generated@@779)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@778 $generated@@779)))
)))))) (=> (not ($generated@@389 $generated@@776)) (let (($generated@@780 ($generated@@330 $generated@@776)))
(let (($generated@@781 ($generated@@329 $generated@@776)))
 (=> ($generated@@386 $generated@@777) (=> (< $generated@@781 ($generated@@170 ($generated@@508 $generated@@777))) ($generated@@548 $generated@@780 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@508 $generated@@777) $generated@@781)))))))))) (= ($generated@@433 ($generated@@434 $generated@@775) $generated@@776 $generated@@777) (ite ($generated@@162 $generated@@776) ($generated@@362 $generated@@777) (ite ($generated@@389 $generated@@776) (let (($generated@@782 ($generated@@512 $generated@@776)))
 (and (and ($generated@@383 $generated@@777) (= ($generated@@170 $generated@@782) ($generated@@170 ($generated@@504 $generated@@777)))) (forall (($generated@@783 Int) ) (!  (=> true (=> (and (<= ($generated@@350 0) $generated@@783) (< $generated@@783 ($generated@@170 $generated@@782))) ($generated@@433 $generated@@775 ($generated@@172 $generated@@95 ($generated@@166 $generated@@782 $generated@@783)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@504 $generated@@777) $generated@@783)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@504 $generated@@777) $generated@@783)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@782 $generated@@783)))
)))) (let (($generated@@784 ($generated@@330 $generated@@776)))
(let (($generated@@785 ($generated@@329 $generated@@776)))
 (and (and ($generated@@386 $generated@@777) (< $generated@@785 ($generated@@170 ($generated@@508 $generated@@777)))) ($generated@@433 $generated@@775 $generated@@784 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@508 $generated@@777) $generated@@785)))))))))))
 :pattern ( ($generated@@433 ($generated@@434 $generated@@775) $generated@@776 $generated@@777))
))))
(assert (forall (($generated@@786 T@U) ) (!  (=> (= (type $generated@@786) $generated@@95) (< ($generated@@171 $generated@@786) ($generated@@171 ($generated@@416 $generated@@786))))
 :pattern ( ($generated@@416 $generated@@786))
)))
(assert (forall (($generated@@788 T@U) ) (!  (=> (= (type $generated@@788) ($generated@@168 $generated@@169)) (< ($generated@@787 $generated@@788) ($generated@@171 ($generated@@167 $generated@@788))))
 :pattern ( ($generated@@167 $generated@@788))
)))
(assert (forall (($generated@@789 T@U) ) (!  (=> (= (type $generated@@789) ($generated@@168 $generated@@169)) (< ($generated@@787 $generated@@789) ($generated@@171 ($generated@@184 $generated@@789))))
 :pattern ( ($generated@@184 $generated@@789))
)))
(assert (forall (($generated@@790 T@U) ) (!  (=> (= (type $generated@@790) ($generated@@168 $generated@@169)) (< ($generated@@787 $generated@@790) ($generated@@171 ($generated@@188 $generated@@790))))
 :pattern ( ($generated@@188 $generated@@790))
)))
(assert (forall (($generated@@791 T@U) ) (! (let (($generated@@792 (type $generated@@791)))
 (not ($generated@@0 ($generated@@108 ($generated@@614 $generated@@792) $generated@@791))))
 :pattern ( (let (($generated@@792 (type $generated@@791)))
($generated@@108 ($generated@@614 $generated@@792) $generated@@791)))
)))
(assert (forall (($generated@@794 T@U) ) (! (= (type ($generated@@793 $generated@@794)) $generated@@87)
 :pattern ( ($generated@@793 $generated@@794))
)))
(assert (forall (($generated@@795 T@U) ($generated@@796 T@U) ) (!  (=> (and (= (type $generated@@795) $generated@@82) (= (type $generated@@796) $generated@@82)) (and (= ($generated@@90 ($generated@@221 $generated@@795 $generated@@796)) $generated@@62) (= ($generated@@793 ($generated@@221 $generated@@795 $generated@@796)) $generated@@77)))
 :pattern ( ($generated@@221 $generated@@795 $generated@@796))
)))
(assert  (and (forall (($generated@@799 T@U) ) (! (let (($generated@@800 ($generated@@173 (type $generated@@799))))
(= (type ($generated@@797 $generated@@799)) ($generated@@168 $generated@@800)))
 :pattern ( ($generated@@797 $generated@@799))
)) (forall (($generated@@801 T@U) ) (! (let (($generated@@802 ($generated@@173 (type $generated@@801))))
(= (type ($generated@@798 $generated@@801)) $generated@@802))
 :pattern ( ($generated@@798 $generated@@801))
))))
(assert (forall (($generated@@803 T@U) ($generated@@804 T@U) ) (! (let (($generated@@805 (type $generated@@804)))
 (=> (= (type $generated@@803) ($generated@@168 $generated@@805)) (and (= ($generated@@797 ($generated@@353 $generated@@803 $generated@@804)) $generated@@803) (= ($generated@@798 ($generated@@353 $generated@@803 $generated@@804)) $generated@@804))))
 :pattern ( ($generated@@353 $generated@@803 $generated@@804))
)))
(assert (forall (($generated@@806 T@U) ($generated@@807 T@U) ) (!  (=> (and (and (= (type $generated@@806) $generated@@95) (= (type $generated@@807) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@807) (and ($generated@@392 $generated@@806) ($generated@@101 $generated@@806 $generated@@307 $generated@@807)))) ($generated@@308 ($generated@@201 $generated@@806) $generated@@309 $generated@@807))
 :pattern ( ($generated@@308 ($generated@@201 $generated@@806) $generated@@309 $generated@@807))
)))
(assert (forall (($generated@@808 T@U) ($generated@@809 T@U) ) (!  (=> (and (and (= (type $generated@@808) $generated@@95) (= (type $generated@@809) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@809) (and ($generated@@392 $generated@@808) ($generated@@101 $generated@@808 $generated@@307 $generated@@809)))) ($generated@@308 ($generated@@210 $generated@@808) $generated@@310 $generated@@809))
 :pattern ( ($generated@@308 ($generated@@210 $generated@@808) $generated@@310 $generated@@809))
)))
(assert (forall (($generated@@810 T@U) ) (!  (=> (and (= (type $generated@@810) $generated@@95) ($generated@@92 $generated@@810 $generated@@94)) (or (or ($generated@@162 $generated@@810) ($generated@@389 $generated@@810)) ($generated@@328 $generated@@810)))
 :pattern ( ($generated@@328 $generated@@810) ($generated@@92 $generated@@810 $generated@@94))
 :pattern ( ($generated@@389 $generated@@810) ($generated@@92 $generated@@810 $generated@@94))
 :pattern ( ($generated@@162 $generated@@810) ($generated@@92 $generated@@810 $generated@@94))
)))
(assert (forall (($generated@@811 T@U) ) (!  (=> (= (type $generated@@811) $generated@@95) (= ($generated@@739 ($generated@@440 $generated@@811)) ($generated@@171 $generated@@811)))
 :pattern ( ($generated@@739 ($generated@@440 $generated@@811)))
)))
(assert (forall (($generated@@812 T@U) ) (!  (=> (and (= (type $generated@@812) $generated@@169) ($generated@@299 $generated@@812 ($generated@@102 0))) (and (= ($generated@@440 ($generated@@172 $generated@@2 $generated@@812)) $generated@@812) ($generated@@92 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@812) ($generated@@102 0))))
 :pattern ( ($generated@@299 $generated@@812 ($generated@@102 0)))
)))
(assert (forall (($generated@@813 T@U) ($generated@@814 T@U) ) (!  (=> (and (and (= (type $generated@@813) $generated@@169) (= (type $generated@@814) $generated@@82)) ($generated@@299 $generated@@813 ($generated@@340 $generated@@814))) (and (= ($generated@@440 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@813)) $generated@@813) ($generated@@92 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@813) ($generated@@340 $generated@@814))))
 :pattern ( ($generated@@299 $generated@@813 ($generated@@340 $generated@@814)))
)))
(assert (forall (($generated@@815 T@U) ($generated@@816 T@U) ) (!  (=> (and (and (= (type $generated@@815) $generated@@169) (= (type $generated@@816) $generated@@82)) ($generated@@299 $generated@@815 ($generated@@345 $generated@@816))) (and (= ($generated@@440 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@815)) $generated@@815) ($generated@@92 ($generated@@172 ($generated@@103 $generated@@169 $generated@@4) $generated@@815) ($generated@@345 $generated@@816))))
 :pattern ( ($generated@@299 $generated@@815 ($generated@@345 $generated@@816)))
)))
(assert (forall (($generated@@817 T@U) ($generated@@818 T@U) ) (!  (=> (and (and (= (type $generated@@817) $generated@@169) (= (type $generated@@818) $generated@@82)) ($generated@@299 $generated@@817 ($generated@@237 $generated@@818))) (and (= ($generated@@440 ($generated@@172 ($generated@@103 $generated@@169 $generated@@2) $generated@@817)) $generated@@817) ($generated@@92 ($generated@@172 ($generated@@103 $generated@@169 $generated@@2) $generated@@817) ($generated@@237 $generated@@818))))
 :pattern ( ($generated@@299 $generated@@817 ($generated@@237 $generated@@818)))
)))
(assert (forall (($generated@@819 T@U) ($generated@@820 T@U) ) (!  (=> (and (and (= (type $generated@@819) $generated@@169) (= (type $generated@@820) $generated@@82)) ($generated@@299 $generated@@819 ($generated@@354 $generated@@820))) (and (= ($generated@@440 ($generated@@172 ($generated@@168 $generated@@169) $generated@@819)) $generated@@819) ($generated@@92 ($generated@@172 ($generated@@168 $generated@@169) $generated@@819) ($generated@@354 $generated@@820))))
 :pattern ( ($generated@@299 $generated@@819 ($generated@@354 $generated@@820)))
)))
(assert (= ($generated@@90 $generated@@96) $generated@@63))
(assert (= ($generated@@793 $generated@@96) $generated@@78))
(assert (= ($generated@@90 $generated@@306) $generated@@65))
(assert (= ($generated@@793 $generated@@306) $generated@@79))
(assert (= ($generated@@90 $generated@@94) $generated@@71))
(assert (= ($generated@@793 $generated@@94) $generated@@80))
(assert (= ($generated@@90 $generated@@307) $generated@@75))
(assert (= ($generated@@793 $generated@@307) $generated@@81))
(assert (forall (($generated@@821 T@U) ($generated@@822 T@U) ($generated@@823 T@U) ) (!  (=> (and (and (= (type $generated@@821) ($generated@@103 $generated@@169 $generated@@2)) (= (type $generated@@822) $generated@@82)) (= (type $generated@@823) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@821 ($generated@@237 $generated@@822) $generated@@823) (forall (($generated@@824 T@U) ) (!  (=> (and (= (type $generated@@824) $generated@@169) (< 0 ($generated ($generated@@108 $generated@@821 $generated@@824)))) ($generated@@308 $generated@@824 $generated@@822 $generated@@823))
 :pattern ( ($generated@@108 $generated@@821 $generated@@824))
))))
 :pattern ( ($generated@@101 $generated@@821 ($generated@@237 $generated@@822) $generated@@823))
)))
(assert (= $generated@@234 ($generated@@337 $generated@@234)))
(assert (= $generated@@235 ($generated@@337 $generated@@235)))
(assert (= $generated@@236 ($generated@@337 $generated@@236)))
(assert (forall (($generated@@825 T@U) ) (!  (=> (and (= (type $generated@@825) $generated@@95) ($generated@@92 $generated@@825 $generated@@306)) (or (or (or (or ($generated@@362 $generated@@825) ($generated@@381 $generated@@825)) ($generated@@383 $generated@@825)) ($generated@@365 $generated@@825)) ($generated@@386 $generated@@825)))
 :pattern ( ($generated@@386 $generated@@825) ($generated@@92 $generated@@825 $generated@@306))
 :pattern ( ($generated@@365 $generated@@825) ($generated@@92 $generated@@825 $generated@@306))
 :pattern ( ($generated@@383 $generated@@825) ($generated@@92 $generated@@825 $generated@@306))
 :pattern ( ($generated@@381 $generated@@825) ($generated@@92 $generated@@825 $generated@@306))
 :pattern ( ($generated@@362 $generated@@825) ($generated@@92 $generated@@825 $generated@@306))
)))
(assert (forall (($generated@@826 T@U) ($generated@@827 T@U) ($generated@@828 T@U) ) (!  (=> (and (and (and (= (type $generated@@826) $generated@@95) (= (type $generated@@827) $generated@@82)) (= (type $generated@@828) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@828) (and ($generated@@220 $generated@@826) (exists (($generated@@829 T@U) ) (!  (and (= (type $generated@@829) $generated@@82) ($generated@@101 $generated@@826 ($generated@@221 $generated@@827 $generated@@829) $generated@@828))
 :pattern ( ($generated@@101 $generated@@826 ($generated@@221 $generated@@827 $generated@@829) $generated@@828))
))))) ($generated@@308 ($generated@@228 $generated@@826) $generated@@827 $generated@@828))
 :pattern ( ($generated@@308 ($generated@@228 $generated@@826) $generated@@827 $generated@@828))
)))
(assert (forall (($generated@@830 T@U) ($generated@@831 T@U) ($generated@@832 T@U) ) (!  (=> (and (and (and (= (type $generated@@830) $generated@@95) (= (type $generated@@831) $generated@@82)) (= (type $generated@@832) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@832) (and ($generated@@220 $generated@@830) (exists (($generated@@833 T@U) ) (!  (and (= (type $generated@@833) $generated@@82) ($generated@@101 $generated@@830 ($generated@@221 $generated@@833 $generated@@831) $generated@@832))
 :pattern ( ($generated@@101 $generated@@830 ($generated@@221 $generated@@833 $generated@@831) $generated@@832))
))))) ($generated@@308 ($generated@@229 $generated@@830) $generated@@831 $generated@@832))
 :pattern ( ($generated@@308 ($generated@@229 $generated@@830) $generated@@831 $generated@@832))
)))
(assert (forall (($generated@@834 T@U) ($generated@@835 T@U) ) (!  (=> (and (and (= (type $generated@@834) $generated@@95) (= (type $generated@@835) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@835) (and ($generated@@381 $generated@@834) ($generated@@101 $generated@@834 $generated@@306 $generated@@835)))) ($generated@@101 ($generated@@500 $generated@@834) $generated@@306 $generated@@835))
 :pattern ( ($generated@@101 ($generated@@500 $generated@@834) $generated@@306 $generated@@835))
)))
(assert (forall (($generated@@836 T@U) ($generated@@837 T@U) ) (!  (=> (and (and (= (type $generated@@836) $generated@@95) (= (type $generated@@837) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@837) (and ($generated@@162 $generated@@836) ($generated@@101 $generated@@836 $generated@@94 $generated@@837)))) ($generated@@101 ($generated@@8 ($generated@@163 $generated@@836)) $generated@@96 $generated@@837))
 :pattern ( ($generated@@101 ($generated@@8 ($generated@@163 $generated@@836)) $generated@@96 $generated@@837))
)))
(assert (forall (($generated@@838 T@U) ($generated@@839 T@U) ) (!  (=> (and (and (= (type $generated@@838) $generated@@95) (= (type $generated@@839) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@839) (and ($generated@@328 $generated@@838) ($generated@@101 $generated@@838 $generated@@94 $generated@@839)))) ($generated@@101 ($generated@@8 ($generated@@329 $generated@@838)) $generated@@96 $generated@@839))
 :pattern ( ($generated@@101 ($generated@@8 ($generated@@329 $generated@@838)) $generated@@96 $generated@@839))
)))
(assert (forall (($generated@@840 T@U) ($generated@@841 T@U) ) (!  (=> (and (and (= (type $generated@@840) $generated@@95) (= (type $generated@@841) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@841) (and ($generated@@328 $generated@@840) ($generated@@101 $generated@@840 $generated@@94 $generated@@841)))) ($generated@@101 ($generated@@330 $generated@@840) $generated@@94 $generated@@841))
 :pattern ( ($generated@@101 ($generated@@330 $generated@@840) $generated@@94 $generated@@841))
)))
(assert (forall (($generated@@842 T@U) ($generated@@843 T@U) ) (!  (=> (and (and (= (type $generated@@842) $generated@@95) (= (type $generated@@843) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@843) (and ($generated@@392 $generated@@842) ($generated@@101 $generated@@842 $generated@@307 $generated@@843)))) ($generated@@101 ($generated@@8 ($generated@@206 $generated@@842)) $generated@@96 $generated@@843))
 :pattern ( ($generated@@101 ($generated@@8 ($generated@@206 $generated@@842)) $generated@@96 $generated@@843))
)))
(assert (forall (($generated@@844 T@U) ) (!  (=> (= (type $generated@@844) $generated@@2) (= ($generated@@92 $generated@@844 $generated@@96)  (and (<= ($generated@@350 0) ($generated $generated@@844)) (< ($generated $generated@@844) 18446744073709551616))))
 :pattern ( ($generated@@92 $generated@@844 $generated@@96))
)))
(assert (forall (($generated@@845 T@U) ($generated@@846 T@U) ) (!  (=> (and (= (type $generated@@845) $generated@@169) (= (type $generated@@846) $generated@@169)) (= ($generated@@298 ($generated@@337 $generated@@845) ($generated@@337 $generated@@846)) ($generated@@337 ($generated@@298 $generated@@845 $generated@@846))))
 :pattern ( ($generated@@298 ($generated@@337 $generated@@845) ($generated@@337 $generated@@846)))
)))
(assert (forall (($generated@@847 Int) ($generated@@848 T@U) ) (!  (=> (= (type $generated@@848) $generated@@95) (= ($generated@@93 ($generated@@350 $generated@@847) ($generated@@337 $generated@@848)) ($generated@@337 ($generated@@93 $generated@@847 $generated@@848))))
 :pattern ( ($generated@@93 ($generated@@350 $generated@@847) ($generated@@337 $generated@@848)))
)))
(assert (forall (($generated@@849 Int) ) (! (= ($generated@@440 ($generated@@8 ($generated@@350 $generated@@849))) ($generated@@337 ($generated@@440 ($generated@@8 $generated@@849))))
 :pattern ( ($generated@@440 ($generated@@8 ($generated@@350 $generated@@849))))
)))
(assert (forall (($generated@@850 T@U) ) (!  (=> (= (type $generated@@850) $generated@@95) (= ($generated@@416 ($generated@@337 $generated@@850)) ($generated@@337 ($generated@@416 $generated@@850))))
 :pattern ( ($generated@@416 ($generated@@337 $generated@@850)))
)))
(assert (forall (($generated@@851 T@U) ) (!  (=> (= (type $generated@@851) ($generated@@168 $generated@@169)) (= ($generated@@167 ($generated@@337 $generated@@851)) ($generated@@337 ($generated@@167 $generated@@851))))
 :pattern ( ($generated@@167 ($generated@@337 $generated@@851)))
)))
(assert (forall (($generated@@852 T@U) ) (!  (=> (= (type $generated@@852) ($generated@@168 $generated@@169)) (= ($generated@@184 ($generated@@337 $generated@@852)) ($generated@@337 ($generated@@184 $generated@@852))))
 :pattern ( ($generated@@184 ($generated@@337 $generated@@852)))
)))
(assert (forall (($generated@@853 Int) ) (! (= ($generated@@424 ($generated@@350 $generated@@853)) ($generated@@337 ($generated@@424 $generated@@853)))
 :pattern ( ($generated@@424 ($generated@@350 $generated@@853)))
)))
(assert (forall (($generated@@854 T@U) ) (!  (=> (= (type $generated@@854) ($generated@@168 $generated@@169)) (= ($generated@@188 ($generated@@337 $generated@@854)) ($generated@@337 ($generated@@188 $generated@@854))))
 :pattern ( ($generated@@188 ($generated@@337 $generated@@854)))
)))
(assert (forall (($generated@@855 T@U) ) (! (= ($generated@@440 ($generated@@337 $generated@@855)) ($generated@@337 ($generated@@440 $generated@@855)))
 :pattern ( ($generated@@440 ($generated@@337 $generated@@855)))
)))
(assert (forall (($generated@@856 T@U) ) (! (let (($generated@@857 ($generated@@173 (type $generated@@856))))
 (=> (and (= (type $generated@@856) ($generated@@168 $generated@@857)) (= ($generated@@170 $generated@@856) 0)) (= $generated@@856 ($generated@@410 $generated@@857))))
 :pattern ( ($generated@@170 $generated@@856))
)))
(assert (forall (($generated@@858 T@U) ($generated@@859 T@U) ($generated@@860 T@U) ) (! (let (($generated@@861 (type $generated@@859)))
 (=> (and (and (= (type $generated@@858) ($generated@@103 $generated@@861 $generated@@2)) (= (type $generated@@860) $generated@@2)) (<= 0 ($generated $generated@@860))) (= ($generated@@445 ($generated@@109 $generated@@858 $generated@@859 $generated@@860)) (+ (- ($generated@@445 $generated@@858) ($generated ($generated@@108 $generated@@858 $generated@@859))) ($generated $generated@@860)))))
 :pattern ( ($generated@@445 ($generated@@109 $generated@@858 $generated@@859 $generated@@860)))
)))
(assert (forall (($generated@@862 T@U) ($generated@@863 T@U) ) (!  (=> (and (and (= (type $generated@@862) $generated@@95) (= (type $generated@@863) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@863) (and ($generated@@383 $generated@@862) ($generated@@101 $generated@@862 $generated@@306 $generated@@863)))) ($generated@@101 ($generated@@504 $generated@@862) ($generated@@354 $generated@@306) $generated@@863))
 :pattern ( ($generated@@101 ($generated@@504 $generated@@862) ($generated@@354 $generated@@306) $generated@@863))
)))
(assert (forall (($generated@@864 T@U) ($generated@@865 T@U) ) (!  (=> (and (and (= (type $generated@@864) $generated@@95) (= (type $generated@@865) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@865) (and ($generated@@386 $generated@@864) ($generated@@101 $generated@@864 $generated@@306 $generated@@865)))) ($generated@@101 ($generated@@508 $generated@@864) ($generated@@354 $generated@@306) $generated@@865))
 :pattern ( ($generated@@101 ($generated@@508 $generated@@864) ($generated@@354 $generated@@306) $generated@@865))
)))
(assert (forall (($generated@@866 T@U) ($generated@@867 T@U) ) (!  (=> (and (and (= (type $generated@@866) $generated@@95) (= (type $generated@@867) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@216 $generated@@867) (and ($generated@@389 $generated@@866) ($generated@@101 $generated@@866 $generated@@94 $generated@@867)))) ($generated@@101 ($generated@@512 $generated@@866) ($generated@@354 $generated@@94) $generated@@867))
 :pattern ( ($generated@@101 ($generated@@512 $generated@@866) ($generated@@354 $generated@@94) $generated@@867))
)))
(assert (forall (($generated@@868 T@U) ($generated@@869 T@U) ) (!  (=> (and (= (type $generated@@868) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@869) $generated@@2)) ($generated@@101 $generated@@869 $generated@@46 $generated@@868))
 :pattern ( ($generated@@101 $generated@@869 $generated@@46 $generated@@868))
)))
(assert (forall (($generated@@870 T@U) ($generated@@871 T@U) ) (!  (=> (and (= (type $generated@@870) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@871) $generated@@3)) ($generated@@101 $generated@@871 $generated@@47 $generated@@870))
 :pattern ( ($generated@@101 $generated@@871 $generated@@47 $generated@@870))
)))
(assert (forall (($generated@@872 T@U) ($generated@@873 T@U) ) (!  (=> (and (= (type $generated@@872) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@873) $generated@@4)) ($generated@@101 $generated@@873 $generated@@44 $generated@@872))
 :pattern ( ($generated@@101 $generated@@873 $generated@@44 $generated@@872))
)))
(assert (forall (($generated@@874 T@U) ($generated@@875 T@U) ) (!  (=> (and (= (type $generated@@874) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@875) $generated@@638)) ($generated@@101 $generated@@875 $generated@@45 $generated@@874))
 :pattern ( ($generated@@101 $generated@@875 $generated@@45 $generated@@874))
)))
(assert (forall (($generated@@876 T@U) ($generated@@877 T@U) ) (!  (=> (and (= (type $generated@@876) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@877) $generated@@169)) ($generated@@101 $generated@@877 $generated@@48 $generated@@876))
 :pattern ( ($generated@@101 $generated@@877 $generated@@48 $generated@@876))
)))
(assert (forall (($generated@@878 T@U) ($generated@@879 T@U) ) (!  (=> (and (= (type $generated@@878) ($generated@@168 $generated@@169)) (= (type $generated@@879) $generated@@82)) (= ($generated@@92 $generated@@878 ($generated@@354 $generated@@879)) (forall (($generated@@880 Int) ) (!  (=> (and (<= 0 $generated@@880) (< $generated@@880 ($generated@@170 $generated@@878))) ($generated@@299 ($generated@@166 $generated@@878 $generated@@880) $generated@@879))
 :pattern ( ($generated@@166 $generated@@878 $generated@@880))
))))
 :pattern ( ($generated@@92 $generated@@878 ($generated@@354 $generated@@879)))
)))
(assert  (=> (<= 1 $generated@@334) (=> (or $generated@@541 (not (= 1 $generated@@334))) (= $generated@@542 ($generated@@337 ($generated@@184 ($generated@@337 ($generated@@353 ($generated@@353 ($generated@@353 ($generated@@410 $generated@@169) ($generated@@440 ($generated@@337 $generated@@234))) ($generated@@440 ($generated@@337 $generated@@234))) ($generated@@440 ($generated@@337 $generated@@234))))))))))
(assert  (=> (<= 1 $generated@@334) (=> (or $generated@@541 (not (= 1 $generated@@334))) (= $generated@@542 ($generated@@337 ($generated@@184 ($generated@@337 ($generated@@353 ($generated@@353 ($generated@@353 ($generated@@410 $generated@@169) ($generated@@440 ($generated@@337 $generated@@234))) ($generated@@440 ($generated@@337 $generated@@234))) ($generated@@440 ($generated@@337 $generated@@234))))))))))
(assert  (and (forall (($generated@@883 T@U) ) (! (= (type ($generated@@881 $generated@@883)) $generated@@435)
 :pattern ( ($generated@@881 $generated@@883))
)) (= (type $generated@@882) $generated@@435)))
(assert (forall (($generated@@884 T@U) ($generated@@885 T@U) ($generated@@886 T@U) ) (!  (=> (and (and (= (type $generated@@884) $generated@@435) (= (type $generated@@885) $generated@@95)) (= (type $generated@@886) $generated@@95)) (= ($generated@@433 $generated@@884 $generated@@885 $generated@@886) ($generated@@433 $generated@@882 $generated@@885 $generated@@886)))
 :pattern ( ($generated@@433 ($generated@@881 $generated@@884) $generated@@885 $generated@@886))
)))
(assert (forall (($generated@@887 T@U) ($generated@@888 Int) ) (!  (=> (= (type $generated@@887) ($generated@@168 $generated@@169)) (=> (and (<= 0 $generated@@888) (< $generated@@888 ($generated@@170 $generated@@887))) (< ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@887 $generated@@888))) ($generated@@787 $generated@@887))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@95 ($generated@@166 $generated@@887 $generated@@888))))
)))
(assert (forall (($generated@@889 T@U) ($generated@@890 T@U) ($generated@@891 T@U) ) (!  (=> (and (and (and (= (type $generated@@889) ($generated@@453 $generated@@169 $generated@@169)) (= (type $generated@@890) $generated@@82)) (= (type $generated@@891) $generated@@82)) ($generated@@92 $generated@@889 ($generated@@590 $generated@@890 $generated@@891))) (and (and ($generated@@92 ($generated@@451 $generated@@889) ($generated@@340 $generated@@890)) ($generated@@92 ($generated@@520 $generated@@889) ($generated@@340 $generated@@891))) ($generated@@92 ($generated@@564 $generated@@889) ($generated@@340 ($generated@@221 $generated@@890 $generated@@891)))))
 :pattern ( ($generated@@92 $generated@@889 ($generated@@590 $generated@@890 $generated@@891)))
)))
(assert (forall (($generated@@892 T@U) ($generated@@893 T@U) ($generated@@894 T@U) ) (!  (=> (and (and (and (= (type $generated@@892) ($generated@@471 $generated@@169 $generated@@169)) (= (type $generated@@893) $generated@@82)) (= (type $generated@@894) $generated@@82)) ($generated@@92 $generated@@892 ($generated@@598 $generated@@893 $generated@@894))) (and (and ($generated@@92 ($generated@@469 $generated@@892) ($generated@@345 $generated@@893)) ($generated@@92 ($generated@@531 $generated@@892) ($generated@@345 $generated@@894))) ($generated@@92 ($generated@@572 $generated@@892) ($generated@@345 ($generated@@221 $generated@@893 $generated@@894)))))
 :pattern ( ($generated@@92 $generated@@892 ($generated@@598 $generated@@893 $generated@@894)))
)))
(assert (forall (($generated@@895 T@U) ) (!  (=> (= (type $generated@@895) $generated@@2) ($generated@@92 $generated@@895 $generated@@46))
 :pattern ( ($generated@@92 $generated@@895 $generated@@46))
)))
(assert (forall (($generated@@896 T@U) ) (!  (=> (= (type $generated@@896) $generated@@3) ($generated@@92 $generated@@896 $generated@@47))
 :pattern ( ($generated@@92 $generated@@896 $generated@@47))
)))
(assert (forall (($generated@@897 T@U) ) (!  (=> (= (type $generated@@897) $generated@@4) ($generated@@92 $generated@@897 $generated@@44))
 :pattern ( ($generated@@92 $generated@@897 $generated@@44))
)))
(assert (forall (($generated@@898 T@U) ) (!  (=> (= (type $generated@@898) $generated@@638) ($generated@@92 $generated@@898 $generated@@45))
 :pattern ( ($generated@@92 $generated@@898 $generated@@45))
)))
(assert (forall (($generated@@899 T@U) ) (!  (=> (= (type $generated@@899) $generated@@169) ($generated@@92 $generated@@899 $generated@@48))
 :pattern ( ($generated@@92 $generated@@899 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@900 () T@U)
(declare-fun $generated@@901 () T@U)
(declare-fun $generated@@902 () T@U)
(declare-fun $generated@@903 () T@U)
(declare-fun $generated@@904 () T@U)
(declare-fun $generated@@905 () T@U)
(declare-fun $generated@@906 () T@U)
(declare-fun $generated@@907 () T@U)
(declare-fun $generated@@908 () T@U)
(declare-fun $generated@@909 () T@U)
(declare-fun $generated@@910 () T@U)
(declare-fun $generated@@911 () Int)
(declare-fun $generated@@912 (T@U) Bool)
(declare-fun $generated@@913 () Bool)
(declare-fun $generated@@914 () T@U)
(declare-fun $generated@@915 () Bool)
(declare-fun $generated@@916 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@900) $generated@@95) (= (type $generated@@902) $generated@@95)) (= (type $generated@@903) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@904) $generated@@169)) (= (type $generated@@905) $generated@@95)) (= (type $generated@@906) $generated@@95)) (= (type $generated@@901) $generated@@95)) (= (type $generated@@907) $generated@@435)) (= (type $generated@@908) $generated@@435)) (= (type $generated@@909) ($generated@@244 $generated@@104 $generated@@4))) (= (type $generated@@910) $generated@@104)) (= (type $generated@@914) $generated@@95)) (= (type $generated@@916) $generated@@169)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 33) (let (($generated@@917  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@918  (=> (not (= ($generated@@329 $generated@@900) ($generated@@350 0))) (=> (and (= $generated@@901 ($generated@@337 $generated@@236)) (= (ControlFlow 0 29) 2)) $generated@@917))))
(let (($generated@@919  (=> (= ($generated@@329 $generated@@900) ($generated@@350 0)) (and (=> (= (ControlFlow 0 3) (- 0 28)) ($generated@@328 $generated@@900)) (=> ($generated@@328 $generated@@900) (and (=> (= (ControlFlow 0 3) (- 0 27)) ($generated@@389 ($generated@@330 $generated@@900))) (=> ($generated@@389 ($generated@@330 $generated@@900)) (and (=> (= (ControlFlow 0 3) (- 0 26)) (and (<= 0 ($generated@@350 0)) (< ($generated@@350 0) ($generated@@170 ($generated@@512 ($generated@@330 $generated@@900)))))) (=> (and (<= 0 ($generated@@350 0)) (< ($generated@@350 0) ($generated@@170 ($generated@@512 ($generated@@330 $generated@@900))))) (=> (and (= $generated@@902 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@512 ($generated@@330 $generated@@900)) ($generated@@350 0)))) ($generated@@101 $generated@@902 $generated@@94 $generated@@903)) (and (=> (= (ControlFlow 0 3) (- 0 25)) (=> ($generated@@548 $generated@@902 ($generated@@337 $generated@@336)) (or ($generated@@433 $generated@@768 $generated@@902 ($generated@@337 $generated@@336)) (=> ($generated@@162 $generated@@902) ($generated@@0 ($generated@@337 ($generated@@11 ($generated@@362 ($generated@@337 $generated@@336))))))))) (and (=> (= (ControlFlow 0 3) (- 0 24)) (=> ($generated@@548 $generated@@902 ($generated@@337 $generated@@336)) (or ($generated@@433 $generated@@768 $generated@@902 ($generated@@337 $generated@@336)) (=> (not ($generated@@162 $generated@@902)) (=> ($generated@@389 $generated@@902) ($generated@@0 ($generated@@337 ($generated@@11 ($generated@@383 ($generated@@337 $generated@@336)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 23)) (=> ($generated@@548 $generated@@902 ($generated@@337 $generated@@336)) (or ($generated@@433 $generated@@768 $generated@@902 ($generated@@337 $generated@@336)) (=> (not ($generated@@162 $generated@@902)) (=> ($generated@@389 $generated@@902) (let (($generated@@920 ($generated@@512 $generated@@902)))
(= ($generated@@170 $generated@@920) ($generated@@170 ($generated@@337 ($generated@@504 ($generated@@337 $generated@@336))))))))))) (and (=> (= (ControlFlow 0 3) (- 0 22)) (=> ($generated@@548 $generated@@902 ($generated@@337 $generated@@336)) (or ($generated@@433 $generated@@768 $generated@@902 ($generated@@337 $generated@@336)) (=> (not ($generated@@162 $generated@@902)) (=> ($generated@@389 $generated@@902) (let (($generated@@921 ($generated@@512 $generated@@902)))
(forall (($generated@@922 Int) ) (!  (=> true (=> (and (<= ($generated@@350 0) $generated@@922) (< $generated@@922 ($generated@@170 $generated@@921))) ($generated@@433 $generated@@768 ($generated@@172 $generated@@95 ($generated@@166 $generated@@921 $generated@@922)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@337 ($generated@@504 ($generated@@337 $generated@@336))) $generated@@922)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@504 $generated@@336) $generated@@922)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@921 $generated@@922)))
)))))))) (and (=> (= (ControlFlow 0 3) (- 0 21)) (=> ($generated@@548 $generated@@902 ($generated@@337 $generated@@336)) (or ($generated@@433 $generated@@768 $generated@@902 ($generated@@337 $generated@@336)) (=> (not ($generated@@162 $generated@@902)) (=> (not ($generated@@389 $generated@@902)) ($generated@@0 ($generated@@337 ($generated@@11 ($generated@@386 ($generated@@337 $generated@@336)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 20)) (=> ($generated@@548 $generated@@902 ($generated@@337 $generated@@336)) (or ($generated@@433 $generated@@768 $generated@@902 ($generated@@337 $generated@@336)) (=> (not ($generated@@162 $generated@@902)) (=> (not ($generated@@389 $generated@@902)) (let (($generated@@923 ($generated@@329 $generated@@902)))
(< $generated@@923 ($generated@@170 ($generated@@337 ($generated@@508 ($generated@@337 $generated@@336))))))))))) (and (=> (= (ControlFlow 0 3) (- 0 19)) (=> ($generated@@548 $generated@@902 ($generated@@337 $generated@@336)) (or ($generated@@433 $generated@@768 $generated@@902 ($generated@@337 $generated@@336)) (=> (not ($generated@@162 $generated@@902)) (=> (not ($generated@@389 $generated@@902)) (let (($generated@@924 ($generated@@330 $generated@@902)))
(let (($generated@@925 ($generated@@329 $generated@@902)))
($generated@@433 $generated@@768 $generated@@924 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@337 ($generated@@508 ($generated@@337 $generated@@336))) $generated@@925)))))))))) (=> (and (and ($generated@@433 $generated@@768 $generated@@902 ($generated@@337 $generated@@336)) ($generated@@767 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@512 ($generated@@330 $generated@@900)) ($generated@@350 0))))) (and ($generated@@767 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@512 ($generated@@330 $generated@@900)) ($generated@@350 0)))) (= $generated@@904 ($generated@@766 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@512 ($generated@@330 $generated@@900)) ($generated@@350 0))))))) (and (=> (= (ControlFlow 0 3) (- 0 18)) true) (and (=> (= (ControlFlow 0 3) (- 0 17)) ($generated@@328 $generated@@900)) (=> ($generated@@328 $generated@@900) (and (=> (= (ControlFlow 0 3) (- 0 16)) ($generated@@389 ($generated@@330 $generated@@900))) (=> ($generated@@389 ($generated@@330 $generated@@900)) (and (=> (= (ControlFlow 0 3) (- 0 15)) (and (<= 0 ($generated@@350 1)) (< ($generated@@350 1) ($generated@@170 ($generated@@512 ($generated@@330 $generated@@900)))))) (=> (and (<= 0 ($generated@@350 1)) (< ($generated@@350 1) ($generated@@170 ($generated@@512 ($generated@@330 $generated@@900))))) (and (=> (= (ControlFlow 0 3) (- 0 14)) ($generated@@162 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@512 ($generated@@330 $generated@@900)) ($generated@@350 1))))) (=> ($generated@@162 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@512 ($generated@@330 $generated@@900)) ($generated@@350 1)))) (and (=> (= (ControlFlow 0 3) (- 0 13)) ($generated@@328 $generated@@900)) (=> ($generated@@328 $generated@@900) (and (=> (= (ControlFlow 0 3) (- 0 12)) ($generated@@389 ($generated@@330 $generated@@900))) (=> ($generated@@389 ($generated@@330 $generated@@900)) (and (=> (= (ControlFlow 0 3) (- 0 11)) (and (<= 0 ($generated@@350 2)) (< ($generated@@350 2) ($generated@@170 ($generated@@512 ($generated@@330 $generated@@900)))))) (=> (and (<= 0 ($generated@@350 2)) (< ($generated@@350 2) ($generated@@170 ($generated@@512 ($generated@@330 $generated@@900))))) (=> (and (= $generated@@905 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@512 ($generated@@330 $generated@@900)) ($generated@@350 2)))) ($generated@@101 $generated@@905 $generated@@94 $generated@@903)) (and (=> (= (ControlFlow 0 3) (- 0 10)) (=> ($generated@@548 $generated@@905 ($generated@@337 $generated@@542)) (or ($generated@@433 $generated@@768 $generated@@905 ($generated@@337 $generated@@542)) (=> ($generated@@162 $generated@@905) ($generated@@0 ($generated@@337 ($generated@@11 ($generated@@362 ($generated@@337 $generated@@542))))))))) (and (=> (= (ControlFlow 0 3) (- 0 9)) (=> ($generated@@548 $generated@@905 ($generated@@337 $generated@@542)) (or ($generated@@433 $generated@@768 $generated@@905 ($generated@@337 $generated@@542)) (=> (not ($generated@@162 $generated@@905)) (=> ($generated@@389 $generated@@905) ($generated@@0 ($generated@@337 ($generated@@11 ($generated@@383 ($generated@@337 $generated@@542)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 8)) (=> ($generated@@548 $generated@@905 ($generated@@337 $generated@@542)) (or ($generated@@433 $generated@@768 $generated@@905 ($generated@@337 $generated@@542)) (=> (not ($generated@@162 $generated@@905)) (=> ($generated@@389 $generated@@905) (let (($generated@@926 ($generated@@512 $generated@@905)))
(= ($generated@@170 $generated@@926) ($generated@@170 ($generated@@337 ($generated@@504 ($generated@@337 $generated@@542))))))))))) (and (=> (= (ControlFlow 0 3) (- 0 7)) (=> ($generated@@548 $generated@@905 ($generated@@337 $generated@@542)) (or ($generated@@433 $generated@@768 $generated@@905 ($generated@@337 $generated@@542)) (=> (not ($generated@@162 $generated@@905)) (=> ($generated@@389 $generated@@905) (let (($generated@@927 ($generated@@512 $generated@@905)))
(forall (($generated@@928 Int) ) (!  (=> true (=> (and (<= ($generated@@350 0) $generated@@928) (< $generated@@928 ($generated@@170 $generated@@927))) ($generated@@433 $generated@@768 ($generated@@172 $generated@@95 ($generated@@166 $generated@@927 $generated@@928)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@337 ($generated@@504 ($generated@@337 $generated@@542))) $generated@@928)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@504 $generated@@542) $generated@@928)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@927 $generated@@928)))
)))))))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> ($generated@@548 $generated@@905 ($generated@@337 $generated@@542)) (or ($generated@@433 $generated@@768 $generated@@905 ($generated@@337 $generated@@542)) (=> (not ($generated@@162 $generated@@905)) (=> (not ($generated@@389 $generated@@905)) ($generated@@0 ($generated@@337 ($generated@@11 ($generated@@386 ($generated@@337 $generated@@542)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> ($generated@@548 $generated@@905 ($generated@@337 $generated@@542)) (or ($generated@@433 $generated@@768 $generated@@905 ($generated@@337 $generated@@542)) (=> (not ($generated@@162 $generated@@905)) (=> (not ($generated@@389 $generated@@905)) (let (($generated@@929 ($generated@@329 $generated@@905)))
(< $generated@@929 ($generated@@170 ($generated@@337 ($generated@@508 ($generated@@337 $generated@@542))))))))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@548 $generated@@905 ($generated@@337 $generated@@542)) (or ($generated@@433 $generated@@768 $generated@@905 ($generated@@337 $generated@@542)) (=> (not ($generated@@162 $generated@@905)) (=> (not ($generated@@389 $generated@@905)) (let (($generated@@930 ($generated@@330 $generated@@905)))
(let (($generated@@931 ($generated@@329 $generated@@905)))
($generated@@433 $generated@@768 $generated@@930 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@337 ($generated@@508 ($generated@@337 $generated@@542))) $generated@@931)))))))))) (=> ($generated@@433 $generated@@768 $generated@@905 ($generated@@337 $generated@@542)) (=> (and (and ($generated@@772 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@512 ($generated@@330 $generated@@900)) ($generated@@350 2)))) ($generated@@772 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@512 ($generated@@330 $generated@@900)) ($generated@@350 2))))) (and (= $generated@@906 ($generated@@192 $generated@@904 ($generated@@163 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@512 ($generated@@330 $generated@@900)) ($generated@@350 1)))) ($generated@@771 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@512 ($generated@@330 $generated@@900)) ($generated@@350 2)))))) (= (ControlFlow 0 3) 2))) $generated@@917)))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@932  (=> (and (and (= $generated@@907 ($generated@@434 ($generated@@434 $generated@@908))) (= $generated@@768 ($generated@@434 ($generated@@434 ($generated@@434 $generated@@908))))) (and (= ($generated@@881 $generated@@908) $generated@@908) (= $generated@@909 ($generated@@243 $generated@@910 $generated@@903 $generated@@60 false)))) (and (=> (= (ControlFlow 0 30) (- 0 32)) ($generated@@328 $generated@@900)) (=> ($generated@@328 $generated@@900) (=> (= $generated@@911 ($generated@@350 0)) (and (=> (= (ControlFlow 0 30) (- 0 31)) (and (<= ($generated@@350 0) $generated@@911) (< $generated@@911 18446744073709551616))) (=> (and (<= ($generated@@350 0) $generated@@911) (< $generated@@911 18446744073709551616)) (and (=> (= (ControlFlow 0 30) 3) $generated@@919) (=> (= (ControlFlow 0 30) 29) $generated@@918))))))))))
(let (($generated@@933  (=> (and ($generated@@216 $generated@@903) ($generated@@912 $generated@@903)) (=> (and (and (and (and ($generated@@92 $generated@@900 $generated@@94) ($generated@@101 $generated@@900 $generated@@94 $generated@@903)) ($generated@@737 $generated@@900)) (=> $generated@@913 (and ($generated@@92 $generated@@914 $generated@@307) ($generated@@101 $generated@@914 $generated@@307 $generated@@903)))) (and (and (and (=> $generated@@915 (and ($generated@@299 $generated@@916 $generated@@309) ($generated@@308 $generated@@916 $generated@@309 $generated@@903))) true) (= 4 $generated@@334)) (and (and ($generated@@548 $generated@@900 ($generated@@337 $generated@@544)) (and ($generated@@433 $generated@@768 $generated@@900 ($generated@@337 $generated@@544)) (ite ($generated@@162 $generated@@900) ($generated@@362 ($generated@@337 $generated@@544)) (ite ($generated@@389 $generated@@900) (let (($generated@@934 ($generated@@512 $generated@@900)))
 (and (and ($generated@@383 ($generated@@337 $generated@@544)) (= ($generated@@170 $generated@@934) ($generated@@170 ($generated@@337 ($generated@@504 ($generated@@337 $generated@@544)))))) (forall (($generated@@935 Int) ) (!  (=> true (=> (and (<= ($generated@@350 0) $generated@@935) (< $generated@@935 ($generated@@170 $generated@@934))) ($generated@@433 $generated@@768 ($generated@@172 $generated@@95 ($generated@@166 $generated@@934 $generated@@935)) ($generated@@172 $generated@@95 ($generated@@166 ($generated@@337 ($generated@@504 ($generated@@337 $generated@@544))) $generated@@935)))))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 ($generated@@504 $generated@@544) $generated@@935)))
 :pattern ( ($generated@@172 $generated@@95 ($generated@@166 $generated@@934 $generated@@935)))
)))) (let (($generated@@936 ($generated@@330 $generated@@900)))
(let (($generated@@937 ($generated@@329 $generated@@900)))
 (and (and ($generated@@386 ($generated@@337 $generated@@544)) (< $generated@@937 ($generated@@170 ($generated@@337 ($generated@@508 ($generated@@337 $generated@@544)))))) ($generated@@433 $generated@@768 $generated@@936 ($generated@@172 $generated@@95 ($generated@@166 ($generated@@337 ($generated@@508 ($generated@@337 $generated@@544))) $generated@@937)))))))))) (= (ControlFlow 0 33) 30)))) $generated@@932))))
$generated@@933))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
