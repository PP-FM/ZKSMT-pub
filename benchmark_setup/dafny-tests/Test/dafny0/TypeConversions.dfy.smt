(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 Int) ) (! (= ($generated@@171 $generated@@172 $generated@@173) (mod $generated@@172 $generated@@173))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@163 $generated@@175)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 () Int)
(assert  (and (and (and (= (type $generated@@176) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@177) $generated@@47)) (= (type $generated@@178) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@179) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@183  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@157 ($generated@@171 0 ($generated@@157 2))) ($generated@@157 0)))))
(let (($generated@@184  (=> (= (ControlFlow 0 2) (- 0 1)) (not (= ($generated@@157 2) 0)))))
(let (($generated@@185  (=> (= $generated@@176 ($generated@@45 $generated@@177 $generated@@178 $generated@@179 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@184) (=> (= (ControlFlow 0 5) 4) $generated@@183)))))
(let (($generated@@186  (=> (and (and ($generated@@180 $generated@@178) ($generated@@181 $generated@@178)) (and (= 0 $generated@@182) (= (ControlFlow 0 6) 5))) $generated@@185)))
$generated@@186)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Real) Real)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Real) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Real) ) (! (= ($generated@@163 ($generated@@9 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@9 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@9 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Real)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 (- 0.0 4.0))) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 (- 0.0 4.0)) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 (- 0.0 4.0)) ($generated@@157 0.0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0.0 300.0))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 ((_ BitVec 7)) T@U)
(declare-fun $generated@@137 (T@U) (_ BitVec 7))
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 ((_ BitVec 32)) T@U)
(declare-fun $generated@@145 (T@U) (_ BitVec 32))
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 ((_ BitVec 67)) T@U)
(declare-fun $generated@@153 (T@U) (_ BitVec 67))
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@194 (T@T T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Bool)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@346 (T@T T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@T) T@U)
(declare-fun $generated@@453 () T@T)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@496 (T@U Int) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@601 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (and (forall (($generated@@138 (_ BitVec 7)) ) (! (= ($generated@@137 ($generated@@136 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@136 $generated@@138))
)) (= ($generated@@1 $generated@@135) 14)) (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@135) (= ($generated@@136 ($generated@@137 $generated@@139)) $generated@@139))
 :pattern ( ($generated@@137 $generated@@139))
))) (forall (($generated@@140 (_ BitVec 7)) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@135)
 :pattern ( ($generated@@136 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@135) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@141 ($generated@@78 7) $generated@@142))
 :pattern ( ($generated@@77 $generated@@141 ($generated@@78 7) $generated@@142))
)))
(assert  (and (and (and (forall (($generated@@146 (_ BitVec 32)) ) (! (= ($generated@@145 ($generated@@144 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@144 $generated@@146))
)) (= ($generated@@1 $generated@@143) 15)) (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@143) (= ($generated@@144 ($generated@@145 $generated@@147)) $generated@@147))
 :pattern ( ($generated@@145 $generated@@147))
))) (forall (($generated@@148 (_ BitVec 32)) ) (! (= (type ($generated@@144 $generated@@148)) $generated@@143)
 :pattern ( ($generated@@144 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@143) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@149 ($generated@@78 32) $generated@@150))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@78 32) $generated@@150))
)))
(assert  (and (and (and (forall (($generated@@154 (_ BitVec 67)) ) (! (= ($generated@@153 ($generated@@152 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@154))
)) (= ($generated@@1 $generated@@151) 16)) (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@151) (= ($generated@@152 ($generated@@153 $generated@@155)) $generated@@155))
 :pattern ( ($generated@@153 $generated@@155))
))) (forall (($generated@@156 (_ BitVec 67)) ) (! (= (type ($generated@@152 $generated@@156)) $generated@@151)
 :pattern ( ($generated@@152 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@151) (= (type $generated@@158) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@157 ($generated@@78 67) $generated@@158))
 :pattern ( ($generated@@77 $generated@@157 ($generated@@78 67) $generated@@158))
)))
(assert  (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@80)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@80) (= (type $generated@@162) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@161 $generated@@159 $generated@@162)  (or (= $generated@@161 $generated@@160) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@162 $generated@@161) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@161 $generated@@159 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@2) ($generated@@163 $generated@@164 ($generated@@78 0)))
 :pattern ( ($generated@@163 $generated@@164 ($generated@@78 0)))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@135) ($generated@@163 $generated@@165 ($generated@@78 7)))
 :pattern ( ($generated@@163 $generated@@165 ($generated@@78 7)))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@143) ($generated@@163 $generated@@166 ($generated@@78 32)))
 :pattern ( ($generated@@163 $generated@@166 ($generated@@78 32)))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@151) ($generated@@163 $generated@@167 ($generated@@78 67)))
 :pattern ( ($generated@@163 $generated@@167 ($generated@@78 67)))
)))
(assert  (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@171 $generated@@172)) $generated@@67)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@67) (= (type $generated@@174) $generated@@67)) (= (type $generated@@175) $generated@@170)) ($generated@@163 $generated@@175 ($generated@@169 $generated@@173 $generated@@174))) ($generated@@168 $generated@@175))
 :pattern ( ($generated@@168 $generated@@175) ($generated@@163 $generated@@175 ($generated@@169 $generated@@173 $generated@@174)))
)))
(assert  (and (and (= ($generated@@1 $generated@@179) 18) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@177 $generated@@180))
))) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@179)
 :pattern ( ($generated@@178 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@170) (= (type $generated@@183) $generated@@170)) true) (= ($generated@@176 $generated@@182 $generated@@183)  (and (= ($generated@@177 $generated@@182) ($generated@@177 $generated@@183)) (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)))))
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@67)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@79 $generated@@179 $generated@@2)) (= (type $generated@@188) $generated@@67)) ($generated@@163 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@163 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@189 $generated@@190)) $generated@@67)
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (= (type $generated@@191) $generated@@80) (= ($generated@@163 $generated@@191 $generated@@159)  (or (= $generated@@191 $generated@@160) (= ($generated@@189 $generated@@191) $generated@@159))))
 :pattern ( ($generated@@163 $generated@@191 $generated@@159))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (= ($generated@@1 ($generated@@194 $generated@@198 $generated@@199)) 19)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@195 ($generated@@194 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@194 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@196 ($generated@@194 $generated@@202 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@194 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@196 (type $generated@@204))))
(= (type ($generated@@192 $generated@@204 $generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@192 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 (type $generated@@211)))
(let (($generated@@213 (type $generated@@209)))
(= (type ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@194 $generated@@213 $generated@@212))))
 :pattern ( ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@196 (type $generated@@214))))
 (=> (= (type $generated@@217) $generated@@218) (= ($generated@@192 ($generated@@197 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@215 $generated@@216) $generated@@217)))
 :weight 0
))) (and (and (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@192 ($generated@@197 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@192 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@192 ($generated@@197 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@192 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or true (= ($generated@@192 ($generated@@197 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@192 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
)))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ) (! (= (type ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240)) ($generated@@194 $generated@@80 $generated@@4))
 :pattern ( ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@70 (type $generated@@246))))
 (=> (and (and (and (and (= (type $generated@@241) $generated@@80) (= (type $generated@@242) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@243) ($generated@@69 $generated@@4))) (= (type $generated@@245) $generated@@80)) (= (type $generated@@246) ($generated@@69 $generated@@247))) (= ($generated@@0 ($generated@@192 ($generated@@193 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))  (=> (and (not (= $generated@@245 $generated@@241)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@242 $generated@@245) $generated@@243))) $generated@@244))))
 :pattern ( ($generated@@192 ($generated@@193 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))
)))
(assert (= (type $generated@@248) $generated@@67))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@80) (= (type $generated@@250) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@249 $generated@@248 $generated@@250) ($generated@@77 $generated@@249 $generated@@159 $generated@@250)))
 :pattern ( ($generated@@77 $generated@@249 $generated@@248 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@253 $generated@@254)) $generated@@170)
 :pattern ( ($generated@@251 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@255) $generated@@67) (= (type $generated@@256) $generated@@67)) (= (type $generated@@257) $generated@@179)) (= (type $generated@@258) $generated@@179)) (= ($generated@@163 ($generated@@251 $generated@@257 $generated@@258) ($generated@@169 $generated@@255 $generated@@256))  (and ($generated@@252 $generated@@257 $generated@@255) ($generated@@252 $generated@@258 $generated@@256))))
 :pattern ( ($generated@@163 ($generated@@251 $generated@@257 $generated@@258) ($generated@@169 $generated@@255 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@170) (= (type $generated@@260) $generated@@170)) (= ($generated@@176 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@176 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@67)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@79 $generated@@179 $generated@@4)) (= (type $generated@@264) $generated@@67)) (= ($generated@@163 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@179) ($generated@@0 ($generated@@84 $generated@@263 $generated@@265))) ($generated@@252 $generated@@265 $generated@@264))
 :pattern ( ($generated@@84 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@163 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@67)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@79 $generated@@179 $generated@@4)) (= (type $generated@@269) $generated@@67)) (= ($generated@@163 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@179) ($generated@@0 ($generated@@84 $generated@@268 $generated@@270))) ($generated@@252 $generated@@270 $generated@@269))
 :pattern ( ($generated@@84 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@163 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@67) (= (type $generated@@278) $generated@@67)) (= (type $generated@@279) $generated@@179)) (= (type $generated@@280) $generated@@179)) (= (type $generated@@281) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@275 $generated@@281)) (= ($generated@@77 ($generated@@251 $generated@@279 $generated@@280) ($generated@@169 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@77 ($generated@@251 $generated@@279 $generated@@280) ($generated@@169 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@71)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@170) (= ($generated@@168 $generated@@284) (= ($generated@@282 $generated@@284) $generated@@61)))
 :pattern ( ($generated@@168 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@170) ($generated@@168 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@179) (= (type $generated@@287) $generated@@179)) (= $generated@@285 ($generated@@251 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@168 $generated@@285))
)))
(assert  (and (and (forall (($generated@@292 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@292)) 20)) (forall (($generated@@293 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293))
))) (forall (($generated@@294 T@T) ) (! (= (type ($generated@@288 $generated@@294)) ($generated@@290 $generated@@294))
 :pattern ( ($generated@@288 $generated@@294))
))))
(assert (forall (($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@295)) 0)
 :pattern ( ($generated@@288 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@179)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@67) (= (type $generated@@300) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@276 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@77 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@276 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@79 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@82 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@79 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@84 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 21)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@79 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 22)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@79 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@84 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@84 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@82 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@79 $generated@@344 $generated@@2)) (= ($generated@@185 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@84 $generated@@343 $generated@@345))) (<= ($generated ($generated@@84 $generated@@343 $generated@@345)) ($generated@@301 $generated@@343))))
 :pattern ( ($generated@@84 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@185 $generated@@343))
)))
(assert (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@179) ($generated@@252 $generated@@349 $generated@@159)) (and (= ($generated@@296 ($generated@@346 $generated@@80 $generated@@349)) $generated@@349) ($generated@@163 ($generated@@346 $generated@@80 $generated@@349) $generated@@159)))
 :pattern ( ($generated@@252 $generated@@349 $generated@@159))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@179) ($generated@@252 $generated@@350 $generated@@248)) (and (= ($generated@@296 ($generated@@346 $generated@@80 $generated@@350)) $generated@@350) ($generated@@163 ($generated@@346 $generated@@80 $generated@@350) $generated@@248)))
 :pattern ( ($generated@@252 $generated@@350 $generated@@248))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@80) (= ($generated@@163 $generated@@351 $generated@@248)  (and ($generated@@163 $generated@@351 $generated@@159) (not (= $generated@@351 $generated@@160)))))
 :pattern ( ($generated@@163 $generated@@351 $generated@@248))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@311 (type $generated@@352))))
(let (($generated@@354 ($generated@@310 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@309 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@308 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@307 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@311 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@79 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@311 (type $generated@@359))))
(let (($generated@@361 ($generated@@310 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@309 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@308 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@84 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@329 (type $generated@@363))))
(let (($generated@@365 ($generated@@328 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@327 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@326 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@325 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@329 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@79 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@329 (type $generated@@370))))
(let (($generated@@372 ($generated@@328 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@327 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@326 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@84 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@79 $generated@@179 $generated@@2)) (= (type $generated@@375) $generated@@67)) (= ($generated@@163 $generated@@374 ($generated@@184 $generated@@375)) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@179) (< 0 ($generated ($generated@@84 $generated@@374 $generated@@376)))) ($generated@@252 $generated@@376 $generated@@375))
 :pattern ( ($generated@@84 $generated@@374 $generated@@376))
))))
 :pattern ( ($generated@@163 $generated@@374 ($generated@@184 $generated@@375)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@79 $generated@@179 $generated@@4)) (= (type $generated@@378) $generated@@67)) (= (type $generated@@379) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@377 ($generated@@261 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@179) ($generated@@0 ($generated@@84 $generated@@377 $generated@@380))) ($generated@@276 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@84 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@77 $generated@@377 ($generated@@261 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@79 $generated@@179 $generated@@4)) (= (type $generated@@382) $generated@@67)) (= (type $generated@@383) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@381 ($generated@@266 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@179) ($generated@@0 ($generated@@84 $generated@@381 $generated@@384))) ($generated@@276 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@84 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@77 $generated@@381 ($generated@@266 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(= ($generated ($generated@@84 ($generated@@302 $generated@@386) $generated@@385)) 0))
 :pattern ( (let (($generated@@386 (type $generated@@385)))
($generated@@84 ($generated@@302 $generated@@386) $generated@@385)))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@79 $generated@@179 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@311 (type $generated@@390))))
(let (($generated@@392 ($generated@@310 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@79 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@309 $generated@@179 $generated@@179)) (= (type $generated@@394) $generated@@179)) (= ($generated@@0 ($generated@@84 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@393) ($generated@@177 ($generated@@346 $generated@@170 $generated@@394)))) (= ($generated@@84 ($generated@@388 $generated@@393) ($generated@@177 ($generated@@346 $generated@@170 $generated@@394))) ($generated@@178 ($generated@@346 $generated@@170 $generated@@394))))))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@79 $generated@@179 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@329 (type $generated@@398))))
(let (($generated@@400 ($generated@@328 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@79 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@327 $generated@@179 $generated@@179)) (= (type $generated@@402) $generated@@179)) (= ($generated@@0 ($generated@@84 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@84 ($generated@@325 $generated@@401) ($generated@@177 ($generated@@346 $generated@@170 $generated@@402)))) (= ($generated@@84 ($generated@@396 $generated@@401) ($generated@@177 ($generated@@346 $generated@@170 $generated@@402))) ($generated@@178 ($generated@@346 $generated@@170 $generated@@402))))))
 :pattern ( ($generated@@84 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@310 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@309 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@84 ($generated@@356 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@84 ($generated@@388 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@403) $generated@@407))
 :pattern ( ($generated@@84 ($generated@@388 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@84 ($generated@@356 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@328 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@327 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@84 ($generated@@367 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@84 ($generated@@325 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@84 ($generated@@396 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@408) $generated@@412))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@67)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@309 $generated@@179 $generated@@179)) (= (type $generated@@417) $generated@@67)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@179) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@416) $generated@@420))) (and ($generated@@276 ($generated@@84 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@276 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@84 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@77 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@67)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@327 $generated@@179 $generated@@179)) (= (type $generated@@425) $generated@@67)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@179) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@424) $generated@@428))) (and ($generated@@276 ($generated@@84 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@276 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@77 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@T) ) (! (= (type ($generated@@429 $generated@@430)) ($generated@@79 $generated@@430 $generated@@4))
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@329 (type $generated@@431))))
(let (($generated@@433 ($generated@@328 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@327 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@326 $generated@@433 $generated@@432)) (= ($generated@@325 $generated@@431) ($generated@@429 $generated@@433))))))
 :pattern ( ($generated@@325 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@329 (type $generated@@434))))
(let (($generated@@436 ($generated@@328 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@327 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@326 $generated@@436 $generated@@435)) (= ($generated@@367 $generated@@434) ($generated@@429 $generated@@435))))))
 :pattern ( ($generated@@367 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@329 (type $generated@@437))))
(let (($generated@@439 ($generated@@328 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@327 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@326 $generated@@439 $generated@@438)) (= ($generated@@395 $generated@@437) ($generated@@429 $generated@@179))))))
 :pattern ( ($generated@@395 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@311 (type $generated@@440))))
(let (($generated@@442 ($generated@@310 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@309 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@308 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@179) (= (type $generated@@444) $generated@@179)) ($generated@@0 ($generated@@84 ($generated@@387 $generated@@440) ($generated@@296 ($generated@@251 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@387 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@329 (type $generated@@445))))
(let (($generated@@447 ($generated@@328 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@327 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@326 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@179) (= (type $generated@@449) $generated@@179)) ($generated@@0 ($generated@@84 ($generated@@395 $generated@@445) ($generated@@296 ($generated@@251 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@395 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@179) ($generated@@252 $generated@@450 $generated@@46)) (and (= ($generated@@296 ($generated@@346 $generated@@2 $generated@@450)) $generated@@450) ($generated@@163 ($generated@@346 $generated@@2 $generated@@450) $generated@@46)))
 :pattern ( ($generated@@252 $generated@@450 $generated@@46))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@179) ($generated@@252 $generated@@451 $generated@@47)) (and (= ($generated@@296 ($generated@@346 $generated@@3 $generated@@451)) $generated@@451) ($generated@@163 ($generated@@346 $generated@@3 $generated@@451) $generated@@47)))
 :pattern ( ($generated@@252 $generated@@451 $generated@@47))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@179) ($generated@@252 $generated@@452 $generated@@44)) (and (= ($generated@@296 ($generated@@346 $generated@@4 $generated@@452)) $generated@@452) ($generated@@163 ($generated@@346 $generated@@4 $generated@@452) $generated@@44)))
 :pattern ( ($generated@@252 $generated@@452 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@453) 23))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@179) ($generated@@252 $generated@@454 $generated@@45)) (and (= ($generated@@296 ($generated@@346 $generated@@453 $generated@@454)) $generated@@454) ($generated@@163 ($generated@@346 $generated@@453 $generated@@454) $generated@@45)))
 :pattern ( ($generated@@252 $generated@@454 $generated@@45))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@67) (= ($generated@@252 ($generated@@296 $generated@@455) $generated@@456) ($generated@@163 $generated@@455 $generated@@456)))
 :pattern ( ($generated@@252 ($generated@@296 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@82 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@79 $generated@@458 $generated@@2)) (<= 0 ($generated@@301 $generated@@457))))
 :pattern ( ($generated@@301 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@291 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@290 $generated@@460)) (<= 0 ($generated@@289 $generated@@459))))
 :pattern ( ($generated@@289 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@413 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@413 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@465 ($generated@@413 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@413 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@75 ($generated@@413 $generated@@469 $generated@@470)) $generated@@58))
 :pattern ( ($generated@@413 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@421 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@421 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@421 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@421 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@75 ($generated@@421 $generated@@479 $generated@@480)) $generated@@59))
 :pattern ( ($generated@@421 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@179) (= (type $generated@@482) $generated@@179)) (= ($generated@@282 ($generated@@251 $generated@@481 $generated@@482)) $generated@@61))
 :pattern ( ($generated@@251 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@169 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@169 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@487 ($generated@@169 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@169 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@179) (= (type $generated@@492) $generated@@179)) (= ($generated@@177 ($generated@@251 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@251 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@179) (= (type $generated@@494) $generated@@179)) (= ($generated@@178 ($generated@@251 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@251 $generated@@493 $generated@@494))
)))
(assert  (and (forall (($generated@@497 T@U) ) (! (= (type ($generated@@495 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@497))
)) (forall (($generated@@498 T@U) ($generated@@499 Int) ) (! (let (($generated@@500 ($generated@@291 (type $generated@@498))))
(= (type ($generated@@496 $generated@@498 $generated@@499)) $generated@@500))
 :pattern ( ($generated@@496 $generated@@498 $generated@@499))
))))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@290 $generated@@179)) (= (type $generated@@502) $generated@@67)) (= (type $generated@@503) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@501 ($generated@@495 $generated@@502) $generated@@503) (forall (($generated@@504 Int) ) (!  (=> (and (<= 0 $generated@@504) (< $generated@@504 ($generated@@289 $generated@@501))) ($generated@@276 ($generated@@496 $generated@@501 $generated@@504) $generated@@502 $generated@@503))
 :pattern ( ($generated@@496 $generated@@501 $generated@@504))
))))
 :pattern ( ($generated@@77 $generated@@501 ($generated@@495 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@506 Int) ) (! (= ($generated@@505 ($generated@@78 $generated@@506)) $generated@@506)
 :pattern ( ($generated@@78 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@507 ($generated@@261 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@261 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@67) (= ($generated@@75 ($generated@@261 $generated@@510)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@67)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@67) (= ($generated@@511 ($generated@@266 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@266 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@75 ($generated@@266 $generated@@514)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@67)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@67) (= ($generated@@515 ($generated@@184 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@184 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@75 ($generated@@184 $generated@@518)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@519 ($generated@@495 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@495 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@75 ($generated@@495 $generated@@522)) $generated@@57))
 :pattern ( ($generated@@495 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
(= ($generated@@346 $generated@@524 ($generated@@296 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@296 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@309 $generated@@179 $generated@@179)) (= (type $generated@@526) $generated@@67)) (= (type $generated@@527) $generated@@67)) (= ($generated@@163 $generated@@525 ($generated@@413 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@179) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@525) $generated@@528))) (and ($generated@@252 ($generated@@84 ($generated@@388 $generated@@525) $generated@@528) $generated@@527) ($generated@@252 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@84 ($generated@@388 $generated@@525) $generated@@528))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@163 $generated@@525 ($generated@@413 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@327 $generated@@179 $generated@@179)) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) (= ($generated@@163 $generated@@529 ($generated@@421 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@179) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@529) $generated@@532))) (and ($generated@@252 ($generated@@84 ($generated@@396 $generated@@529) $generated@@532) $generated@@531) ($generated@@252 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@529) $generated@@532))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@163 $generated@@529 ($generated@@421 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@179) (= (type $generated@@536) $generated@@179)) (< ($generated@@533 $generated@@535) ($generated@@534 ($generated@@251 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@251 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@179) (= (type $generated@@538) $generated@@179)) (< ($generated@@533 $generated@@538) ($generated@@534 ($generated@@251 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@251 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@179) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) $generated@@67)) ($generated@@252 $generated@@539 ($generated@@413 $generated@@540 $generated@@541))) (and (= ($generated@@296 ($generated@@346 ($generated@@309 $generated@@179 $generated@@179) $generated@@539)) $generated@@539) ($generated@@163 ($generated@@346 ($generated@@309 $generated@@179 $generated@@179) $generated@@539) ($generated@@413 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@252 $generated@@539 ($generated@@413 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@179) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) $generated@@67)) ($generated@@252 $generated@@542 ($generated@@421 $generated@@543 $generated@@544))) (and (= ($generated@@296 ($generated@@346 ($generated@@327 $generated@@179 $generated@@179) $generated@@542)) $generated@@542) ($generated@@163 ($generated@@346 ($generated@@327 $generated@@179 $generated@@179) $generated@@542) ($generated@@421 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@252 $generated@@542 ($generated@@421 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@67) (= (type $generated@@546) $generated@@67)) (= (type $generated@@547) $generated@@179)) ($generated@@252 $generated@@547 ($generated@@169 $generated@@545 $generated@@546))) (and (= ($generated@@296 ($generated@@346 $generated@@170 $generated@@547)) $generated@@547) ($generated@@163 ($generated@@346 $generated@@170 $generated@@547) ($generated@@169 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@252 $generated@@547 ($generated@@169 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
 (not ($generated@@0 ($generated@@84 ($generated@@429 $generated@@549) $generated@@548))))
 :pattern ( (let (($generated@@549 (type $generated@@548)))
($generated@@84 ($generated@@429 $generated@@549) $generated@@548)))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@72)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@67) (= (type $generated@@553) $generated@@67)) (and (= ($generated@@75 ($generated@@169 $generated@@552 $generated@@553)) $generated@@62) (= ($generated@@550 ($generated@@169 $generated@@552 $generated@@553)) $generated@@65)))
 :pattern ( ($generated@@169 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@170) (= ($generated@@533 ($generated@@296 $generated@@554)) ($generated@@534 $generated@@554)))
 :pattern ( ($generated@@533 ($generated@@296 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@179) ($generated@@252 $generated@@555 ($generated@@78 0))) (and (= ($generated@@296 ($generated@@346 $generated@@2 $generated@@555)) $generated@@555) ($generated@@163 ($generated@@346 ($generated@@79 $generated@@179 $generated@@4) $generated@@555) ($generated@@78 0))))
 :pattern ( ($generated@@252 $generated@@555 ($generated@@78 0)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@179) (= (type $generated@@557) $generated@@67)) ($generated@@252 $generated@@556 ($generated@@261 $generated@@557))) (and (= ($generated@@296 ($generated@@346 ($generated@@79 $generated@@179 $generated@@4) $generated@@556)) $generated@@556) ($generated@@163 ($generated@@346 ($generated@@79 $generated@@179 $generated@@4) $generated@@556) ($generated@@261 $generated@@557))))
 :pattern ( ($generated@@252 $generated@@556 ($generated@@261 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@179) (= (type $generated@@559) $generated@@67)) ($generated@@252 $generated@@558 ($generated@@266 $generated@@559))) (and (= ($generated@@296 ($generated@@346 ($generated@@79 $generated@@179 $generated@@4) $generated@@558)) $generated@@558) ($generated@@163 ($generated@@346 ($generated@@79 $generated@@179 $generated@@4) $generated@@558) ($generated@@266 $generated@@559))))
 :pattern ( ($generated@@252 $generated@@558 ($generated@@266 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@179) (= (type $generated@@561) $generated@@67)) ($generated@@252 $generated@@560 ($generated@@184 $generated@@561))) (and (= ($generated@@296 ($generated@@346 ($generated@@79 $generated@@179 $generated@@2) $generated@@560)) $generated@@560) ($generated@@163 ($generated@@346 ($generated@@79 $generated@@179 $generated@@2) $generated@@560) ($generated@@184 $generated@@561))))
 :pattern ( ($generated@@252 $generated@@560 ($generated@@184 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@179) (= (type $generated@@563) $generated@@67)) ($generated@@252 $generated@@562 ($generated@@495 $generated@@563))) (and (= ($generated@@296 ($generated@@346 ($generated@@290 $generated@@179) $generated@@562)) $generated@@562) ($generated@@163 ($generated@@346 ($generated@@290 $generated@@179) $generated@@562) ($generated@@495 $generated@@563))))
 :pattern ( ($generated@@252 $generated@@562 ($generated@@495 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@179) ($generated@@252 $generated@@564 ($generated@@78 7))) (and (= ($generated@@296 ($generated@@346 $generated@@135 $generated@@564)) $generated@@564) ($generated@@163 ($generated@@346 $generated@@135 $generated@@564) ($generated@@78 7))))
 :pattern ( ($generated@@252 $generated@@564 ($generated@@78 7)))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@179) ($generated@@252 $generated@@565 ($generated@@78 32))) (and (= ($generated@@296 ($generated@@346 $generated@@143 $generated@@565)) $generated@@565) ($generated@@163 ($generated@@346 $generated@@143 $generated@@565) ($generated@@78 32))))
 :pattern ( ($generated@@252 $generated@@565 ($generated@@78 32)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@179) ($generated@@252 $generated@@566 ($generated@@78 67))) (and (= ($generated@@296 ($generated@@346 $generated@@151 $generated@@566)) $generated@@566) ($generated@@163 ($generated@@346 $generated@@151 $generated@@566) ($generated@@78 67))))
 :pattern ( ($generated@@252 $generated@@566 ($generated@@78 67)))
)))
(assert (= ($generated@@75 $generated@@159) $generated@@63))
(assert (= ($generated@@550 $generated@@159) $generated@@66))
(assert (= ($generated@@75 $generated@@248) $generated@@64))
(assert (= ($generated@@550 $generated@@248) $generated@@66))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@79 $generated@@179 $generated@@2)) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@567 ($generated@@184 $generated@@568) $generated@@569) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@179) (< 0 ($generated ($generated@@84 $generated@@567 $generated@@570)))) ($generated@@276 $generated@@570 $generated@@568 $generated@@569))
 :pattern ( ($generated@@84 $generated@@567 $generated@@570))
))))
 :pattern ( ($generated@@77 $generated@@567 ($generated@@184 $generated@@568) $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@170) (= (type $generated@@572) $generated@@67)) (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@275 $generated@@573) (and ($generated@@168 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@67) ($generated@@77 $generated@@571 ($generated@@169 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@77 $generated@@571 ($generated@@169 $generated@@572 $generated@@574) $generated@@573))
))))) ($generated@@276 ($generated@@177 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@276 ($generated@@177 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@275 $generated@@577) (and ($generated@@168 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@67) ($generated@@77 $generated@@575 ($generated@@169 $generated@@578 $generated@@576) $generated@@577))
 :pattern ( ($generated@@77 $generated@@575 ($generated@@169 $generated@@578 $generated@@576) $generated@@577))
))))) ($generated@@276 ($generated@@178 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@276 ($generated@@178 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@179) (= (type $generated@@580) $generated@@179)) (= ($generated@@251 ($generated@@271 $generated@@579) ($generated@@271 $generated@@580)) ($generated@@271 ($generated@@251 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@251 ($generated@@271 $generated@@579) ($generated@@271 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@296 ($generated@@271 $generated@@581)) ($generated@@271 ($generated@@296 $generated@@581)))
 :pattern ( ($generated@@296 ($generated@@271 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@291 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@290 $generated@@583)) (= ($generated@@289 $generated@@582) 0)) (= $generated@@582 ($generated@@288 $generated@@583))))
 :pattern ( ($generated@@289 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@585)))
 (=> (and (and (= (type $generated@@584) ($generated@@79 $generated@@587 $generated@@2)) (= (type $generated@@586) $generated@@2)) (<= 0 ($generated $generated@@586))) (= ($generated@@301 ($generated@@85 $generated@@584 $generated@@585 $generated@@586)) (+ (- ($generated@@301 $generated@@584) ($generated ($generated@@84 $generated@@584 $generated@@585))) ($generated $generated@@586)))))
 :pattern ( ($generated@@301 ($generated@@85 $generated@@584 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@589) $generated@@2)) ($generated@@77 $generated@@589 $generated@@46 $generated@@588))
 :pattern ( ($generated@@77 $generated@@589 $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@591) $generated@@3)) ($generated@@77 $generated@@591 $generated@@47 $generated@@590))
 :pattern ( ($generated@@77 $generated@@591 $generated@@47 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@593) $generated@@4)) ($generated@@77 $generated@@593 $generated@@44 $generated@@592))
 :pattern ( ($generated@@77 $generated@@593 $generated@@44 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@595) $generated@@453)) ($generated@@77 $generated@@595 $generated@@45 $generated@@594))
 :pattern ( ($generated@@77 $generated@@595 $generated@@45 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@597) $generated@@179)) ($generated@@77 $generated@@597 $generated@@48 $generated@@596))
 :pattern ( ($generated@@77 $generated@@597 $generated@@48 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@290 $generated@@179)) (= (type $generated@@599) $generated@@67)) (= ($generated@@163 $generated@@598 ($generated@@495 $generated@@599)) (forall (($generated@@600 Int) ) (!  (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@289 $generated@@598))) ($generated@@252 ($generated@@496 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@496 $generated@@598 $generated@@600))
))))
 :pattern ( ($generated@@163 $generated@@598 ($generated@@495 $generated@@599)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 Int) ) (!  (=> (= (type $generated@@602) ($generated@@290 $generated@@179)) (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@289 $generated@@602))) (< ($generated@@534 ($generated@@346 $generated@@170 ($generated@@496 $generated@@602 $generated@@603))) ($generated@@601 $generated@@602))))
 :pattern ( ($generated@@534 ($generated@@346 $generated@@170 ($generated@@496 $generated@@602 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@309 $generated@@179 $generated@@179)) (= (type $generated@@605) $generated@@67)) (= (type $generated@@606) $generated@@67)) ($generated@@163 $generated@@604 ($generated@@413 $generated@@605 $generated@@606))) (and (and ($generated@@163 ($generated@@307 $generated@@604) ($generated@@261 $generated@@605)) ($generated@@163 ($generated@@356 $generated@@604) ($generated@@261 $generated@@606))) ($generated@@163 ($generated@@387 $generated@@604) ($generated@@261 ($generated@@169 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@163 $generated@@604 ($generated@@413 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@327 $generated@@179 $generated@@179)) (= (type $generated@@608) $generated@@67)) (= (type $generated@@609) $generated@@67)) ($generated@@163 $generated@@607 ($generated@@421 $generated@@608 $generated@@609))) (and (and ($generated@@163 ($generated@@325 $generated@@607) ($generated@@266 $generated@@608)) ($generated@@163 ($generated@@367 $generated@@607) ($generated@@266 $generated@@609))) ($generated@@163 ($generated@@395 $generated@@607) ($generated@@266 ($generated@@169 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@163 $generated@@607 ($generated@@421 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@2) ($generated@@163 $generated@@610 $generated@@46))
 :pattern ( ($generated@@163 $generated@@610 $generated@@46))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@3) ($generated@@163 $generated@@611 $generated@@47))
 :pattern ( ($generated@@163 $generated@@611 $generated@@47))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@4) ($generated@@163 $generated@@612 $generated@@44))
 :pattern ( ($generated@@163 $generated@@612 $generated@@44))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@453) ($generated@@163 $generated@@613 $generated@@45))
 :pattern ( ($generated@@163 $generated@@613 $generated@@45))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@179) ($generated@@163 $generated@@614 $generated@@48))
 :pattern ( ($generated@@163 $generated@@614 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 (T@U) Bool)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () Int)
(assert  (and (and (= (type $generated@@615) ($generated@@194 $generated@@80 $generated@@4)) (= (type $generated@@616) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@618) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@620  (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@163 $generated@@160 $generated@@248)) (=> ($generated@@163 $generated@@160 $generated@@248) (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@0 ($generated@@271 ($generated@@11 true))))))))
(let (($generated@@621 true))
(let (($generated@@622  (=> (= $generated@@615 ($generated@@193 $generated@@160 $generated@@616 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@621) (=> (= (ControlFlow 0 5) 3) $generated@@620)))))
(let (($generated@@623  (=> (and (and (and ($generated@@275 $generated@@616) ($generated@@617 $generated@@616)) ($generated@@163 $generated@@618 $generated@@248)) (and (= 1 $generated@@619) (= (ControlFlow 0 6) 5))) $generated@@622)))
$generated@@623)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 ((_ BitVec 7)) T@U)
(declare-fun $generated@@136 (T@U) (_ BitVec 7))
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 ((_ BitVec 32)) T@U)
(declare-fun $generated@@144 (T@U) (_ BitVec 32))
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 ((_ BitVec 67)) T@U)
(declare-fun $generated@@152 (T@U) (_ BitVec 67))
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@163 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@164 (Int) Int)
(declare-fun $generated@@165 (Int Int) Int)
(declare-fun $generated@@166 (Real) Real)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 () T@T)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@202 (T@U T@U T@U) T@U)
(declare-fun $generated@@203 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@204 (T@T T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@T) T@T)
(declare-fun $generated@@207 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (Real) Int)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Bool)
(declare-fun $generated@@287 (T@U T@U T@U) Bool)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@322 (T@U) Int)
(declare-fun $generated@@323 (T@T) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@T T@T) T@U)
(declare-fun $generated@@348 (T@T T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@367 (T@T T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@448 (Int) Real)
(declare-fun $generated@@450 (T@T) T@U)
(declare-fun $generated@@474 () T@T)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@517 (T@U Int) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@555 (T@U) Int)
(declare-fun $generated@@556 (T@U) Int)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@636 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (and (forall (($generated@@137 (_ BitVec 7)) ) (! (= ($generated@@136 ($generated@@135 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@135 $generated@@137))
)) (= ($generated@@1 $generated@@134) 14)) (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@134) (= ($generated@@135 ($generated@@136 $generated@@138)) $generated@@138))
 :pattern ( ($generated@@136 $generated@@138))
))) (forall (($generated@@139 (_ BitVec 7)) ) (! (= (type ($generated@@135 $generated@@139)) $generated@@134)
 :pattern ( ($generated@@135 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@134) (= (type $generated@@141) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@140 ($generated@@77 7) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140 ($generated@@77 7) $generated@@141))
)))
(assert  (and (and (and (forall (($generated@@145 (_ BitVec 32)) ) (! (= ($generated@@144 ($generated@@143 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@145))
)) (= ($generated@@1 $generated@@142) 15)) (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@142) (= ($generated@@143 ($generated@@144 $generated@@146)) $generated@@146))
 :pattern ( ($generated@@144 $generated@@146))
))) (forall (($generated@@147 (_ BitVec 32)) ) (! (= (type ($generated@@143 $generated@@147)) $generated@@142)
 :pattern ( ($generated@@143 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@142) (= (type $generated@@149) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@148 ($generated@@77 32) $generated@@149))
 :pattern ( ($generated@@76 $generated@@148 ($generated@@77 32) $generated@@149))
)))
(assert  (and (and (and (forall (($generated@@153 (_ BitVec 67)) ) (! (= ($generated@@152 ($generated@@151 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@153))
)) (= ($generated@@1 $generated@@150) 16)) (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@150) (= ($generated@@151 ($generated@@152 $generated@@154)) $generated@@154))
 :pattern ( ($generated@@152 $generated@@154))
))) (forall (($generated@@155 (_ BitVec 67)) ) (! (= (type ($generated@@151 $generated@@155)) $generated@@150)
 :pattern ( ($generated@@151 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@150) (= (type $generated@@157) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@156 ($generated@@77 67) $generated@@157))
 :pattern ( ($generated@@76 $generated@@156 ($generated@@77 67) $generated@@157))
)))
(assert (= (type $generated@@158) $generated@@66))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@159 $generated@@158 $generated@@160))
 :pattern ( ($generated@@76 $generated@@159 $generated@@158 $generated@@160))
)))
(assert  (=> (<= 1 $generated@@161) (forall (($generated@@167 Int) ($generated@@168 Int) ($generated@@169 Real) ($generated@@170 Int) ($generated@@171 Real) ($generated@@172 (_ BitVec 67)) ($generated@@173 (_ BitVec 32)) ($generated@@174 (_ BitVec 7)) ($generated@@175 Int) ) (!  (=> (or ($generated@@163 $generated@@167 $generated@@168 $generated@@169 $generated@@170 $generated@@171 $generated@@172 $generated@@173 $generated@@174 $generated@@175) (and (not (= 1 $generated@@161)) (and (and (and (<= ($generated@@164 0) $generated@@168) (= ($generated@@165 $generated@@170 ($generated@@164 2)) ($generated@@164 0))) (and (<= ($generated@@166 (- 0.0 4.0)) $generated@@171) (< $generated@@171 300.0))) (= 0 $generated@@175)))) true)
 :pattern ( ($generated@@162 $generated@@167 $generated@@168 $generated@@169 $generated@@170 $generated@@171 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@2) ($generated@@176 $generated@@177 ($generated@@77 0)))
 :pattern ( ($generated@@176 $generated@@177 ($generated@@77 0)))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@134) ($generated@@176 $generated@@178 ($generated@@77 7)))
 :pattern ( ($generated@@176 $generated@@178 ($generated@@77 7)))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> (= (type $generated@@179) $generated@@142) ($generated@@176 $generated@@179 ($generated@@77 32)))
 :pattern ( ($generated@@176 $generated@@179 ($generated@@77 32)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@150) ($generated@@176 $generated@@180 ($generated@@77 67)))
 :pattern ( ($generated@@176 $generated@@180 ($generated@@77 67)))
)))
(assert  (and (= ($generated@@1 $generated@@183) 17) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@66)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@66) (= (type $generated@@187) $generated@@66)) (= (type $generated@@188) $generated@@183)) ($generated@@176 $generated@@188 ($generated@@182 $generated@@186 $generated@@187))) ($generated@@181 $generated@@188))
 :pattern ( ($generated@@181 $generated@@188) ($generated@@176 $generated@@188 ($generated@@182 $generated@@186 $generated@@187)))
)))
(assert  (and (and (= ($generated@@1 $generated@@192) 18) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@190 $generated@@193))
))) (forall (($generated@@194 T@U) ) (! (= (type ($generated@@191 $generated@@194)) $generated@@192)
 :pattern ( ($generated@@191 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@195) $generated@@183) (= (type $generated@@196) $generated@@183)) true) (= ($generated@@189 $generated@@195 $generated@@196)  (and (= ($generated@@190 $generated@@195) ($generated@@190 $generated@@196)) (= ($generated@@191 $generated@@195) ($generated@@191 $generated@@196)))))
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@66)
 :pattern ( ($generated@@197 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) ($generated@@78 $generated@@192 $generated@@2)) (= (type $generated@@201) $generated@@66)) ($generated@@176 $generated@@200 ($generated@@197 $generated@@201))) ($generated@@198 $generated@@200))
 :pattern ( ($generated@@176 $generated@@200 ($generated@@197 $generated@@201)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@208 T@T) ($generated@@209 T@T) ) (= ($generated@@1 ($generated@@204 $generated@@208 $generated@@209)) 19)) (forall (($generated@@210 T@T) ($generated@@211 T@T) ) (! (= ($generated@@205 ($generated@@204 $generated@@210 $generated@@211)) $generated@@210)
 :pattern ( ($generated@@204 $generated@@210 $generated@@211))
))) (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (! (= ($generated@@206 ($generated@@204 $generated@@212 $generated@@213)) $generated@@213)
 :pattern ( ($generated@@204 $generated@@212 $generated@@213))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@206 (type $generated@@214))))
(= (type ($generated@@202 $generated@@214 $generated@@215 $generated@@216)) $generated@@217))
 :pattern ( ($generated@@202 $generated@@214 $generated@@215 $generated@@216))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 (type $generated@@221)))
(let (($generated@@223 (type $generated@@219)))
(= (type ($generated@@207 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@204 $generated@@223 $generated@@222))))
 :pattern ( ($generated@@207 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@206 (type $generated@@224))))
 (=> (= (type $generated@@227) $generated@@228) (= ($generated@@202 ($generated@@207 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@225 $generated@@226) $generated@@227)))
 :weight 0
))) (and (and (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@202 ($generated@@207 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@202 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or (= $generated@@238 $generated@@240) (= ($generated@@202 ($generated@@207 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@202 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (or true (= ($generated@@202 ($generated@@207 $generated@@242 $generated@@243 $generated@@244 $generated@@241) $generated@@245 $generated@@246) ($generated@@202 $generated@@242 $generated@@245 $generated@@246)))
 :weight 0
)))) (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ) (! (= (type ($generated@@203 $generated@@247 $generated@@248 $generated@@249 $generated@@250)) ($generated@@204 $generated@@79 $generated@@4))
 :pattern ( ($generated@@203 $generated@@247 $generated@@248 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@69 (type $generated@@256))))
 (=> (and (and (and (and (= (type $generated@@251) $generated@@79) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@253) ($generated@@68 $generated@@4))) (= (type $generated@@255) $generated@@79)) (= (type $generated@@256) ($generated@@68 $generated@@257))) (= ($generated@@0 ($generated@@202 ($generated@@203 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))  (=> (and (not (= $generated@@255 $generated@@251)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@252 $generated@@255) $generated@@253))) $generated@@254))))
 :pattern ( ($generated@@202 ($generated@@203 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@183)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@66) (= (type $generated@@263) $generated@@66)) (= (type $generated@@264) $generated@@192)) (= (type $generated@@265) $generated@@192)) (= ($generated@@176 ($generated@@258 $generated@@264 $generated@@265) ($generated@@182 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@176 ($generated@@258 $generated@@264 $generated@@265) ($generated@@182 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@183) (= (type $generated@@267) $generated@@183)) (= ($generated@@189 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@189 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@66)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@78 $generated@@192 $generated@@4)) (= (type $generated@@271) $generated@@66)) (= ($generated@@176 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@192) ($generated@@0 ($generated@@83 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@83 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@176 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@66)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@78 $generated@@192 $generated@@4)) (= (type $generated@@276) $generated@@66)) (= ($generated@@176 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@192) ($generated@@0 ($generated@@83 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@83 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@176 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 Real) ) (! (= ($generated@@278 $generated@@279) (to_int $generated@@279))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 Int) ) (! (= ($generated@@164 $generated@@280) $generated@@280)
 :pattern ( ($generated@@164 $generated@@280))
)))
(assert (forall (($generated@@281 Real) ) (! (= ($generated@@166 $generated@@281) $generated@@281)
 :pattern ( ($generated@@166 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 (type $generated@@283)))
(= (type ($generated@@282 $generated@@283)) $generated@@284))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= ($generated@@282 $generated@@285) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@288) $generated@@66) (= (type $generated@@289) $generated@@66)) (= (type $generated@@290) $generated@@192)) (= (type $generated@@291) $generated@@192)) (= (type $generated@@292) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@286 $generated@@292)) (= ($generated@@76 ($generated@@258 $generated@@290 $generated@@291) ($generated@@182 $generated@@288 $generated@@289) $generated@@292)  (and ($generated@@287 $generated@@290 $generated@@288 $generated@@292) ($generated@@287 $generated@@291 $generated@@289 $generated@@292))))
 :pattern ( ($generated@@76 ($generated@@258 $generated@@290 $generated@@291) ($generated@@182 $generated@@288 $generated@@289) $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@70)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@183) (= ($generated@@181 $generated@@295) (= ($generated@@293 $generated@@295) $generated@@62)))
 :pattern ( ($generated@@181 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@183) ($generated@@181 $generated@@296)) (exists (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (and (and (= (type $generated@@297) $generated@@192) (= (type $generated@@298) $generated@@192)) (= $generated@@296 ($generated@@258 $generated@@297 $generated@@298)))
 :no-pattern (type $generated@@297)
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
)))
 :pattern ( ($generated@@181 $generated@@296))
)))
(assert  (and (and (forall (($generated@@303 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@303)) 20)) (forall (($generated@@304 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@301 $generated@@304))
))) (forall (($generated@@305 T@T) ) (! (= (type ($generated@@299 $generated@@305)) ($generated@@301 $generated@@305))
 :pattern ( ($generated@@299 $generated@@305))
))))
(assert (forall (($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@306)) 0)
 :pattern ( ($generated@@299 $generated@@306))
)))
(assert  (=> (<= 1 $generated@@161) (forall (($generated@@307 Int) ($generated@@308 Int) ($generated@@309 Real) ($generated@@310 Int) ($generated@@311 Real) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 Int) ) (!  (=> (and (and (and (= (type $generated@@312) $generated@@150) (= (type $generated@@313) $generated@@142)) (= (type $generated@@314) $generated@@134)) (or ($generated@@163 ($generated@@164 $generated@@307) ($generated@@164 $generated@@308) ($generated@@166 $generated@@309) ($generated@@164 $generated@@310) ($generated@@166 $generated@@311) ($generated@@152 ($generated@@282 $generated@@312)) ($generated@@144 ($generated@@282 $generated@@313)) ($generated@@136 ($generated@@282 $generated@@314)) ($generated@@164 $generated@@315)) (and (not (= 1 $generated@@161)) (and (and (and (<= ($generated@@164 0) $generated@@308) (= ($generated@@165 $generated@@310 ($generated@@164 2)) ($generated@@164 0))) (and (<= ($generated@@166 (- 0.0 4.0)) $generated@@311) (< $generated@@311 300.0))) (= 0 $generated@@315))))) (= ($generated@@162 ($generated@@164 $generated@@307) ($generated@@164 $generated@@308) ($generated@@166 $generated@@309) ($generated@@164 $generated@@310) ($generated@@166 $generated@@311) ($generated@@152 ($generated@@282 $generated@@312)) ($generated@@144 ($generated@@282 $generated@@313)) ($generated@@136 ($generated@@282 $generated@@314)) ($generated@@164 $generated@@315)) ($generated@@0 ($generated@@282 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@162 ($generated@@164 $generated@@307) ($generated@@164 $generated@@308) ($generated@@166 $generated@@309) ($generated@@164 $generated@@310) ($generated@@166 $generated@@311) ($generated@@152 ($generated@@282 $generated@@312)) ($generated@@144 ($generated@@282 $generated@@313)) ($generated@@136 ($generated@@282 $generated@@314)) ($generated@@164 $generated@@315)))
))))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@2) (= ($generated@@176 $generated@@316 $generated@@158) (<= ($generated@@164 0) ($generated $generated@@316))))
 :pattern ( ($generated@@176 $generated@@316 $generated@@158))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@192)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@66) (= (type $generated@@321) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@287 ($generated@@317 $generated@@319) $generated@@320 $generated@@321) ($generated@@76 $generated@@319 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@287 ($generated@@317 $generated@@319) $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@324 T@T) ) (! (= (type ($generated@@323 $generated@@324)) ($generated@@78 $generated@@324 $generated@@2))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@81 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@78 $generated@@326 $generated@@2)) (and (= (= ($generated@@322 $generated@@325) 0) (= $generated@@325 ($generated@@323 $generated@@326))) (=> (not (= ($generated@@322 $generated@@325) 0)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) (< 0 ($generated ($generated@@83 $generated@@325 $generated@@327))))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 21)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@78 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@83 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@83 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert  (and (and (and (and (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (= ($generated@@1 ($generated@@348 $generated@@351 $generated@@352)) 22)) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@349 ($generated@@348 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@348 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@348 $generated@@355 $generated@@356)) $generated@@356)
 :pattern ( ($generated@@348 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@349 (type $generated@@357))))
(= (type ($generated@@346 $generated@@357)) ($generated@@78 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@357))
))) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= (type ($generated@@347 $generated@@359 $generated@@360)) ($generated@@348 $generated@@359 $generated@@360))
 :pattern ( ($generated@@347 $generated@@359 $generated@@360))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@T) ) (! (let (($generated@@363 (type $generated@@361)))
 (not ($generated@@0 ($generated@@83 ($generated@@346 ($generated@@347 $generated@@363 $generated@@362)) $generated@@361))))
 :pattern ( (let (($generated@@363 (type $generated@@361)))
($generated@@83 ($generated@@346 ($generated@@347 $generated@@363 $generated@@362)) $generated@@361)))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@81 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@78 $generated@@365 $generated@@2)) (= ($generated@@198 $generated@@364) (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@365) (and (<= 0 ($generated ($generated@@83 $generated@@364 $generated@@366))) (<= ($generated ($generated@@83 $generated@@364 $generated@@366)) ($generated@@322 $generated@@364))))
 :pattern ( ($generated@@83 $generated@@364 $generated@@366))
)))))
 :pattern ( ($generated@@198 $generated@@364))
)))
(assert (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@192) ($generated@@259 $generated@@370 $generated@@158)) (and (= ($generated@@317 ($generated@@367 $generated@@2 $generated@@370)) $generated@@370) ($generated@@176 ($generated@@367 $generated@@2 $generated@@370) $generated@@158)))
 :pattern ( ($generated@@259 $generated@@370 $generated@@158))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@332 (type $generated@@371))))
(let (($generated@@373 ($generated@@331 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@330 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@329 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@83 ($generated@@328 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@328 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@332 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@78 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@332 (type $generated@@378))))
(let (($generated@@380 ($generated@@331 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@330 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@329 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@83 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@350 (type $generated@@382))))
(let (($generated@@384 ($generated@@349 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@348 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@347 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@83 ($generated@@346 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@346 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@350 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@78 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@350 (type $generated@@389))))
(let (($generated@@391 ($generated@@349 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@348 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@347 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@83 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@78 $generated@@192 $generated@@2)) (= (type $generated@@394) $generated@@66)) (= ($generated@@176 $generated@@393 ($generated@@197 $generated@@394)) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@192) (< 0 ($generated ($generated@@83 $generated@@393 $generated@@395)))) ($generated@@259 $generated@@395 $generated@@394))
 :pattern ( ($generated@@83 $generated@@393 $generated@@395))
))))
 :pattern ( ($generated@@176 $generated@@393 ($generated@@197 $generated@@394)))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@78 $generated@@192 $generated@@4)) (= (type $generated@@397) $generated@@66)) (= (type $generated@@398) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@396 ($generated@@268 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@192) ($generated@@0 ($generated@@83 $generated@@396 $generated@@399))) ($generated@@287 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@83 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@76 $generated@@396 ($generated@@268 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@78 $generated@@192 $generated@@4)) (= (type $generated@@401) $generated@@66)) (= (type $generated@@402) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@400 ($generated@@273 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@192) ($generated@@0 ($generated@@83 $generated@@400 $generated@@403))) ($generated@@287 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@83 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@76 $generated@@400 ($generated@@273 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(= ($generated ($generated@@83 ($generated@@323 $generated@@405) $generated@@404)) 0))
 :pattern ( (let (($generated@@405 (type $generated@@404)))
($generated@@83 ($generated@@323 $generated@@405) $generated@@404)))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@78 $generated@@192 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@332 (type $generated@@409))))
(let (($generated@@411 ($generated@@331 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@78 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@330 $generated@@192 $generated@@192)) (= (type $generated@@413) $generated@@192)) (= ($generated@@0 ($generated@@83 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@83 ($generated@@328 $generated@@412) ($generated@@190 ($generated@@367 $generated@@183 $generated@@413)))) (= ($generated@@83 ($generated@@407 $generated@@412) ($generated@@190 ($generated@@367 $generated@@183 $generated@@413))) ($generated@@191 ($generated@@367 $generated@@183 $generated@@413))))))
 :pattern ( ($generated@@83 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@78 $generated@@192 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@350 (type $generated@@417))))
(let (($generated@@419 ($generated@@349 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@78 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@348 $generated@@192 $generated@@192)) (= (type $generated@@421) $generated@@192)) (= ($generated@@0 ($generated@@83 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@83 ($generated@@346 $generated@@420) ($generated@@190 ($generated@@367 $generated@@183 $generated@@421)))) (= ($generated@@83 ($generated@@415 $generated@@420) ($generated@@190 ($generated@@367 $generated@@183 $generated@@421))) ($generated@@191 ($generated@@367 $generated@@183 $generated@@421))))))
 :pattern ( ($generated@@83 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@331 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@330 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@83 ($generated@@375 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@83 ($generated@@328 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@83 ($generated@@407 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@83 ($generated@@328 $generated@@422) $generated@@426))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@83 ($generated@@375 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(let (($generated@@430 ($generated@@349 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@348 $generated@@430 $generated@@429)) (= ($generated@@0 ($generated@@83 ($generated@@386 $generated@@427) $generated@@428)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) (and ($generated@@0 ($generated@@83 ($generated@@346 $generated@@427) $generated@@431)) (= $generated@@428 ($generated@@83 ($generated@@415 $generated@@427) $generated@@431))))
 :pattern ( ($generated@@83 ($generated@@346 $generated@@427) $generated@@431))
 :pattern ( ($generated@@83 ($generated@@415 $generated@@427) $generated@@431))
))))))
 :pattern ( ($generated@@83 ($generated@@386 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@66)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@330 $generated@@192 $generated@@192)) (= (type $generated@@436) $generated@@66)) (= (type $generated@@437) $generated@@66)) (= (type $generated@@438) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@192) ($generated@@0 ($generated@@83 ($generated@@328 $generated@@435) $generated@@439))) (and ($generated@@287 ($generated@@83 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@287 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@83 ($generated@@328 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@76 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@348 $generated@@192 $generated@@192)) (= (type $generated@@444) $generated@@66)) (= (type $generated@@445) $generated@@66)) (= (type $generated@@446) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@192) ($generated@@0 ($generated@@83 ($generated@@346 $generated@@443) $generated@@447))) (and ($generated@@287 ($generated@@83 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@287 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@83 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@83 ($generated@@346 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@76 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@449 Int) ) (! (= ($generated@@448 $generated@@449) (to_real $generated@@449))
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@T) ) (! (= (type ($generated@@450 $generated@@451)) ($generated@@78 $generated@@451 $generated@@4))
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@350 (type $generated@@452))))
(let (($generated@@454 ($generated@@349 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@348 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@347 $generated@@454 $generated@@453)) (= ($generated@@346 $generated@@452) ($generated@@450 $generated@@454))))))
 :pattern ( ($generated@@346 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@350 (type $generated@@455))))
(let (($generated@@457 ($generated@@349 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@348 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@347 $generated@@457 $generated@@456)) (= ($generated@@386 $generated@@455) ($generated@@450 $generated@@456))))))
 :pattern ( ($generated@@386 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@350 (type $generated@@458))))
(let (($generated@@460 ($generated@@349 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@348 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@347 $generated@@460 $generated@@459)) (= ($generated@@414 $generated@@458) ($generated@@450 $generated@@192))))))
 :pattern ( ($generated@@414 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@332 (type $generated@@461))))
(let (($generated@@463 ($generated@@331 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@330 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@329 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@192) (= (type $generated@@465) $generated@@192)) ($generated@@0 ($generated@@83 ($generated@@406 $generated@@461) ($generated@@317 ($generated@@258 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@406 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@350 (type $generated@@466))))
(let (($generated@@468 ($generated@@349 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@348 $generated@@468 $generated@@467)) (or (= $generated@@466 ($generated@@347 $generated@@468 $generated@@467)) (exists (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (and (and (= (type $generated@@469) $generated@@192) (= (type $generated@@470) $generated@@192)) ($generated@@0 ($generated@@83 ($generated@@414 $generated@@466) ($generated@@317 ($generated@@258 $generated@@469 $generated@@470)))))
 :no-pattern (type $generated@@469)
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
))))))
 :pattern ( ($generated@@414 $generated@@466))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@192) ($generated@@259 $generated@@471 $generated@@46)) (and (= ($generated@@317 ($generated@@367 $generated@@2 $generated@@471)) $generated@@471) ($generated@@176 ($generated@@367 $generated@@2 $generated@@471) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@46))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@192) ($generated@@259 $generated@@472 $generated@@47)) (and (= ($generated@@317 ($generated@@367 $generated@@3 $generated@@472)) $generated@@472) ($generated@@176 ($generated@@367 $generated@@3 $generated@@472) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@472 $generated@@47))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@192) ($generated@@259 $generated@@473 $generated@@44)) (and (= ($generated@@317 ($generated@@367 $generated@@4 $generated@@473)) $generated@@473) ($generated@@176 ($generated@@367 $generated@@4 $generated@@473) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@473 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@474) 23))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@192) ($generated@@259 $generated@@475 $generated@@45)) (and (= ($generated@@317 ($generated@@367 $generated@@474 $generated@@475)) $generated@@475) ($generated@@176 ($generated@@367 $generated@@474 $generated@@475) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@475 $generated@@45))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@66) (= ($generated@@259 ($generated@@317 $generated@@476) $generated@@477) ($generated@@176 $generated@@476 $generated@@477)))
 :pattern ( ($generated@@259 ($generated@@317 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@81 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@78 $generated@@479 $generated@@2)) (<= 0 ($generated@@322 $generated@@478))))
 :pattern ( ($generated@@322 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@302 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@301 $generated@@481)) (<= 0 ($generated@@300 $generated@@480))))
 :pattern ( ($generated@@300 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@66)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@66) (= (type $generated@@485) $generated@@66)) (= ($generated@@482 ($generated@@432 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@432 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@66) (= (type $generated@@489) $generated@@66)) (= ($generated@@486 ($generated@@432 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@432 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@66) (= (type $generated@@491) $generated@@66)) (= ($generated@@74 ($generated@@432 $generated@@490 $generated@@491)) $generated@@58))
 :pattern ( ($generated@@432 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@66) (= (type $generated@@495) $generated@@66)) (= ($generated@@492 ($generated@@440 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@440 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@66) (= (type $generated@@499) $generated@@66)) (= ($generated@@496 ($generated@@440 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@440 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@66) (= (type $generated@@501) $generated@@66)) (= ($generated@@74 ($generated@@440 $generated@@500 $generated@@501)) $generated@@59))
 :pattern ( ($generated@@440 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@192) (= (type $generated@@503) $generated@@192)) (= ($generated@@293 ($generated@@258 $generated@@502 $generated@@503)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@66) (= (type $generated@@507) $generated@@66)) (= ($generated@@504 ($generated@@182 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@182 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@66) (= (type $generated@@511) $generated@@66)) (= ($generated@@508 ($generated@@182 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@182 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@192) (= (type $generated@@513) $generated@@192)) (= ($generated@@190 ($generated@@258 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@258 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@192) (= (type $generated@@515) $generated@@192)) (= ($generated@@191 ($generated@@258 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@258 $generated@@514 $generated@@515))
)))
(assert  (and (forall (($generated@@518 T@U) ) (! (= (type ($generated@@516 $generated@@518)) $generated@@66)
 :pattern ( ($generated@@516 $generated@@518))
)) (forall (($generated@@519 T@U) ($generated@@520 Int) ) (! (let (($generated@@521 ($generated@@302 (type $generated@@519))))
(= (type ($generated@@517 $generated@@519 $generated@@520)) $generated@@521))
 :pattern ( ($generated@@517 $generated@@519 $generated@@520))
))))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@301 $generated@@192)) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@522 ($generated@@516 $generated@@523) $generated@@524) (forall (($generated@@525 Int) ) (!  (=> (and (<= 0 $generated@@525) (< $generated@@525 ($generated@@300 $generated@@522))) ($generated@@287 ($generated@@517 $generated@@522 $generated@@525) $generated@@523 $generated@@524))
 :pattern ( ($generated@@517 $generated@@522 $generated@@525))
))))
 :pattern ( ($generated@@76 $generated@@522 ($generated@@516 $generated@@523) $generated@@524))
)))
(assert (forall (($generated@@527 Int) ) (! (= ($generated@@526 ($generated@@77 $generated@@527)) $generated@@527)
 :pattern ( ($generated@@77 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@66)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@66) (= ($generated@@528 ($generated@@268 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@268 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@66) (= ($generated@@74 ($generated@@268 $generated@@531)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@66)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@66) (= ($generated@@532 ($generated@@273 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@273 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@66) (= ($generated@@74 ($generated@@273 $generated@@535)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@66)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@66) (= ($generated@@536 ($generated@@197 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@197 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@66) (= ($generated@@74 ($generated@@197 $generated@@539)) $generated@@56))
 :pattern ( ($generated@@197 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@66)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@66) (= ($generated@@540 ($generated@@516 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@516 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@66) (= ($generated@@74 ($generated@@516 $generated@@543)) $generated@@57))
 :pattern ( ($generated@@516 $generated@@543))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@278 ($generated@@448 $generated@@544)) $generated@@544)
 :pattern ( ($generated@@278 ($generated@@448 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
(= ($generated@@367 $generated@@546 ($generated@@317 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@317 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@330 $generated@@192 $generated@@192)) (= (type $generated@@548) $generated@@66)) (= (type $generated@@549) $generated@@66)) (= ($generated@@176 $generated@@547 ($generated@@432 $generated@@548 $generated@@549)) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@192) ($generated@@0 ($generated@@83 ($generated@@328 $generated@@547) $generated@@550))) (and ($generated@@259 ($generated@@83 ($generated@@407 $generated@@547) $generated@@550) $generated@@549) ($generated@@259 $generated@@550 $generated@@548)))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@547) $generated@@550))
 :pattern ( ($generated@@83 ($generated@@328 $generated@@547) $generated@@550))
))))
 :pattern ( ($generated@@176 $generated@@547 ($generated@@432 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@348 $generated@@192 $generated@@192)) (= (type $generated@@552) $generated@@66)) (= (type $generated@@553) $generated@@66)) (= ($generated@@176 $generated@@551 ($generated@@440 $generated@@552 $generated@@553)) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@192) ($generated@@0 ($generated@@83 ($generated@@346 $generated@@551) $generated@@554))) (and ($generated@@259 ($generated@@83 ($generated@@415 $generated@@551) $generated@@554) $generated@@553) ($generated@@259 $generated@@554 $generated@@552)))
 :pattern ( ($generated@@83 ($generated@@415 $generated@@551) $generated@@554))
 :pattern ( ($generated@@83 ($generated@@346 $generated@@551) $generated@@554))
))))
 :pattern ( ($generated@@176 $generated@@551 ($generated@@440 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@192) (= (type $generated@@558) $generated@@192)) (< ($generated@@555 $generated@@557) ($generated@@556 ($generated@@258 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@258 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@192) (= (type $generated@@560) $generated@@192)) (< ($generated@@555 $generated@@560) ($generated@@556 ($generated@@258 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@258 $generated@@559 $generated@@560))
)))
(assert  (=> (<= 1 $generated@@161) (forall (($generated@@561 Int) ($generated@@562 Int) ($generated@@563 Real) ($generated@@564 Int) ($generated@@565 Real) ($generated@@566 (_ BitVec 67)) ($generated@@567 (_ BitVec 32)) ($generated@@568 (_ BitVec 7)) ($generated@@569 Int) ) (!  (=> (or ($generated@@163 $generated@@561 $generated@@562 $generated@@563 $generated@@564 $generated@@565 $generated@@566 $generated@@567 $generated@@568 $generated@@569) (and (not (= 1 $generated@@161)) (and (and (and (<= ($generated@@164 0) $generated@@562) (= ($generated@@165 $generated@@564 ($generated@@164 2)) ($generated@@164 0))) (and (<= ($generated@@166 (- 0.0 4.0)) $generated@@565) (< $generated@@565 300.0))) (= 0 $generated@@569)))) (= ($generated@@162 $generated@@561 $generated@@562 $generated@@563 $generated@@564 $generated@@565 $generated@@566 $generated@@567 $generated@@568 $generated@@569) ($generated@@0 ($generated@@282 ($generated@@11 true)))))
 :pattern ( ($generated@@162 $generated@@561 $generated@@562 $generated@@563 $generated@@564 $generated@@565 $generated@@566 $generated@@567 $generated@@568 $generated@@569))
))))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@192) (= (type $generated@@571) $generated@@66)) (= (type $generated@@572) $generated@@66)) ($generated@@259 $generated@@570 ($generated@@432 $generated@@571 $generated@@572))) (and (= ($generated@@317 ($generated@@367 ($generated@@330 $generated@@192 $generated@@192) $generated@@570)) $generated@@570) ($generated@@176 ($generated@@367 ($generated@@330 $generated@@192 $generated@@192) $generated@@570) ($generated@@432 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@259 $generated@@570 ($generated@@432 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@192) (= (type $generated@@574) $generated@@66)) (= (type $generated@@575) $generated@@66)) ($generated@@259 $generated@@573 ($generated@@440 $generated@@574 $generated@@575))) (and (= ($generated@@317 ($generated@@367 ($generated@@348 $generated@@192 $generated@@192) $generated@@573)) $generated@@573) ($generated@@176 ($generated@@367 ($generated@@348 $generated@@192 $generated@@192) $generated@@573) ($generated@@440 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@259 $generated@@573 ($generated@@440 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@66) (= (type $generated@@577) $generated@@66)) (= (type $generated@@578) $generated@@192)) ($generated@@259 $generated@@578 ($generated@@182 $generated@@576 $generated@@577))) (and (= ($generated@@317 ($generated@@367 $generated@@183 $generated@@578)) $generated@@578) ($generated@@176 ($generated@@367 $generated@@183 $generated@@578) ($generated@@182 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@259 $generated@@578 ($generated@@182 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
 (not ($generated@@0 ($generated@@83 ($generated@@450 $generated@@580) $generated@@579))))
 :pattern ( (let (($generated@@580 (type $generated@@579)))
($generated@@83 ($generated@@450 $generated@@580) $generated@@579)))
)))
(assert (forall (($generated@@581 Int) ($generated@@582 Int) ) (! (= ($generated@@165 $generated@@581 $generated@@582) (mod $generated@@581 $generated@@582))
 :pattern ( ($generated@@165 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@71)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@66) (= (type $generated@@586) $generated@@66)) (and (= ($generated@@74 ($generated@@182 $generated@@585 $generated@@586)) $generated@@63) (= ($generated@@583 ($generated@@182 $generated@@585 $generated@@586)) $generated@@65)))
 :pattern ( ($generated@@182 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@183) (= ($generated@@555 ($generated@@317 $generated@@587)) ($generated@@556 $generated@@587)))
 :pattern ( ($generated@@555 ($generated@@317 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@192) ($generated@@259 $generated@@588 ($generated@@77 0))) (and (= ($generated@@317 ($generated@@367 $generated@@2 $generated@@588)) $generated@@588) ($generated@@176 ($generated@@367 ($generated@@78 $generated@@192 $generated@@4) $generated@@588) ($generated@@77 0))))
 :pattern ( ($generated@@259 $generated@@588 ($generated@@77 0)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@192) (= (type $generated@@590) $generated@@66)) ($generated@@259 $generated@@589 ($generated@@268 $generated@@590))) (and (= ($generated@@317 ($generated@@367 ($generated@@78 $generated@@192 $generated@@4) $generated@@589)) $generated@@589) ($generated@@176 ($generated@@367 ($generated@@78 $generated@@192 $generated@@4) $generated@@589) ($generated@@268 $generated@@590))))
 :pattern ( ($generated@@259 $generated@@589 ($generated@@268 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@192) (= (type $generated@@592) $generated@@66)) ($generated@@259 $generated@@591 ($generated@@273 $generated@@592))) (and (= ($generated@@317 ($generated@@367 ($generated@@78 $generated@@192 $generated@@4) $generated@@591)) $generated@@591) ($generated@@176 ($generated@@367 ($generated@@78 $generated@@192 $generated@@4) $generated@@591) ($generated@@273 $generated@@592))))
 :pattern ( ($generated@@259 $generated@@591 ($generated@@273 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@192) (= (type $generated@@594) $generated@@66)) ($generated@@259 $generated@@593 ($generated@@197 $generated@@594))) (and (= ($generated@@317 ($generated@@367 ($generated@@78 $generated@@192 $generated@@2) $generated@@593)) $generated@@593) ($generated@@176 ($generated@@367 ($generated@@78 $generated@@192 $generated@@2) $generated@@593) ($generated@@197 $generated@@594))))
 :pattern ( ($generated@@259 $generated@@593 ($generated@@197 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@192) (= (type $generated@@596) $generated@@66)) ($generated@@259 $generated@@595 ($generated@@516 $generated@@596))) (and (= ($generated@@317 ($generated@@367 ($generated@@301 $generated@@192) $generated@@595)) $generated@@595) ($generated@@176 ($generated@@367 ($generated@@301 $generated@@192) $generated@@595) ($generated@@516 $generated@@596))))
 :pattern ( ($generated@@259 $generated@@595 ($generated@@516 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@192) ($generated@@259 $generated@@597 ($generated@@77 7))) (and (= ($generated@@317 ($generated@@367 $generated@@134 $generated@@597)) $generated@@597) ($generated@@176 ($generated@@367 $generated@@134 $generated@@597) ($generated@@77 7))))
 :pattern ( ($generated@@259 $generated@@597 ($generated@@77 7)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@192) ($generated@@259 $generated@@598 ($generated@@77 32))) (and (= ($generated@@317 ($generated@@367 $generated@@142 $generated@@598)) $generated@@598) ($generated@@176 ($generated@@367 $generated@@142 $generated@@598) ($generated@@77 32))))
 :pattern ( ($generated@@259 $generated@@598 ($generated@@77 32)))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@192) ($generated@@259 $generated@@599 ($generated@@77 67))) (and (= ($generated@@317 ($generated@@367 $generated@@150 $generated@@599)) $generated@@599) ($generated@@176 ($generated@@367 $generated@@150 $generated@@599) ($generated@@77 67))))
 :pattern ( ($generated@@259 $generated@@599 ($generated@@77 67)))
)))
(assert (= ($generated@@74 $generated@@158) $generated@@61))
(assert (= ($generated@@583 $generated@@158) $generated@@64))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@600) ($generated@@78 $generated@@192 $generated@@2)) (= (type $generated@@601) $generated@@66)) (= (type $generated@@602) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@600 ($generated@@197 $generated@@601) $generated@@602) (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@192) (< 0 ($generated ($generated@@83 $generated@@600 $generated@@603)))) ($generated@@287 $generated@@603 $generated@@601 $generated@@602))
 :pattern ( ($generated@@83 $generated@@600 $generated@@603))
))))
 :pattern ( ($generated@@76 $generated@@600 ($generated@@197 $generated@@601) $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@183) (= (type $generated@@605) $generated@@66)) (= (type $generated@@606) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@286 $generated@@606) (and ($generated@@181 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@66) ($generated@@76 $generated@@604 ($generated@@182 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@76 $generated@@604 ($generated@@182 $generated@@605 $generated@@607) $generated@@606))
))))) ($generated@@287 ($generated@@190 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@287 ($generated@@190 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@183) (= (type $generated@@609) $generated@@66)) (= (type $generated@@610) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@286 $generated@@610) (and ($generated@@181 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@66) ($generated@@76 $generated@@608 ($generated@@182 $generated@@611 $generated@@609) $generated@@610))
 :pattern ( ($generated@@76 $generated@@608 ($generated@@182 $generated@@611 $generated@@609) $generated@@610))
))))) ($generated@@287 ($generated@@191 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@287 ($generated@@191 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@192) (= (type $generated@@613) $generated@@192)) (= ($generated@@258 ($generated@@282 $generated@@612) ($generated@@282 $generated@@613)) ($generated@@282 ($generated@@258 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@258 ($generated@@282 $generated@@612) ($generated@@282 $generated@@613)))
)))
(assert (forall (($generated@@614 Int) ) (! (= ($generated@@317 ($generated@@8 ($generated@@164 $generated@@614))) ($generated@@282 ($generated@@317 ($generated@@8 $generated@@614))))
 :pattern ( ($generated@@317 ($generated@@8 ($generated@@164 $generated@@614))))
)))
(assert (forall (($generated@@615 Real) ) (! (= ($generated@@317 ($generated@@9 ($generated@@166 $generated@@615))) ($generated@@282 ($generated@@317 ($generated@@9 $generated@@615))))
 :pattern ( ($generated@@317 ($generated@@9 ($generated@@166 $generated@@615))))
)))
(assert (forall (($generated@@616 T@U) ) (! (= ($generated@@317 ($generated@@282 $generated@@616)) ($generated@@282 ($generated@@317 $generated@@616)))
 :pattern ( ($generated@@317 ($generated@@282 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (! (let (($generated@@618 ($generated@@302 (type $generated@@617))))
 (=> (and (= (type $generated@@617) ($generated@@301 $generated@@618)) (= ($generated@@300 $generated@@617) 0)) (= $generated@@617 ($generated@@299 $generated@@618))))
 :pattern ( ($generated@@300 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@620)))
 (=> (and (and (= (type $generated@@619) ($generated@@78 $generated@@622 $generated@@2)) (= (type $generated@@621) $generated@@2)) (<= 0 ($generated $generated@@621))) (= ($generated@@322 ($generated@@84 $generated@@619 $generated@@620 $generated@@621)) (+ (- ($generated@@322 $generated@@619) ($generated ($generated@@83 $generated@@619 $generated@@620))) ($generated $generated@@621)))))
 :pattern ( ($generated@@322 ($generated@@84 $generated@@619 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@624) $generated@@2)) ($generated@@76 $generated@@624 $generated@@46 $generated@@623))
 :pattern ( ($generated@@76 $generated@@624 $generated@@46 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@626) $generated@@3)) ($generated@@76 $generated@@626 $generated@@47 $generated@@625))
 :pattern ( ($generated@@76 $generated@@626 $generated@@47 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@628) $generated@@4)) ($generated@@76 $generated@@628 $generated@@44 $generated@@627))
 :pattern ( ($generated@@76 $generated@@628 $generated@@44 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@630) $generated@@474)) ($generated@@76 $generated@@630 $generated@@45 $generated@@629))
 :pattern ( ($generated@@76 $generated@@630 $generated@@45 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@632) $generated@@192)) ($generated@@76 $generated@@632 $generated@@48 $generated@@631))
 :pattern ( ($generated@@76 $generated@@632 $generated@@48 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@301 $generated@@192)) (= (type $generated@@634) $generated@@66)) (= ($generated@@176 $generated@@633 ($generated@@516 $generated@@634)) (forall (($generated@@635 Int) ) (!  (=> (and (<= 0 $generated@@635) (< $generated@@635 ($generated@@300 $generated@@633))) ($generated@@259 ($generated@@517 $generated@@633 $generated@@635) $generated@@634))
 :pattern ( ($generated@@517 $generated@@633 $generated@@635))
))))
 :pattern ( ($generated@@176 $generated@@633 ($generated@@516 $generated@@634)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 Int) ) (!  (=> (= (type $generated@@637) ($generated@@301 $generated@@192)) (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@300 $generated@@637))) (< ($generated@@556 ($generated@@367 $generated@@183 ($generated@@517 $generated@@637 $generated@@638))) ($generated@@636 $generated@@637))))
 :pattern ( ($generated@@556 ($generated@@367 $generated@@183 ($generated@@517 $generated@@637 $generated@@638))))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) ($generated@@330 $generated@@192 $generated@@192)) (= (type $generated@@640) $generated@@66)) (= (type $generated@@641) $generated@@66)) ($generated@@176 $generated@@639 ($generated@@432 $generated@@640 $generated@@641))) (and (and ($generated@@176 ($generated@@328 $generated@@639) ($generated@@268 $generated@@640)) ($generated@@176 ($generated@@375 $generated@@639) ($generated@@268 $generated@@641))) ($generated@@176 ($generated@@406 $generated@@639) ($generated@@268 ($generated@@182 $generated@@640 $generated@@641)))))
 :pattern ( ($generated@@176 $generated@@639 ($generated@@432 $generated@@640 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) ($generated@@348 $generated@@192 $generated@@192)) (= (type $generated@@643) $generated@@66)) (= (type $generated@@644) $generated@@66)) ($generated@@176 $generated@@642 ($generated@@440 $generated@@643 $generated@@644))) (and (and ($generated@@176 ($generated@@346 $generated@@642) ($generated@@273 $generated@@643)) ($generated@@176 ($generated@@386 $generated@@642) ($generated@@273 $generated@@644))) ($generated@@176 ($generated@@414 $generated@@642) ($generated@@273 ($generated@@182 $generated@@643 $generated@@644)))))
 :pattern ( ($generated@@176 $generated@@642 ($generated@@440 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@2) ($generated@@176 $generated@@645 $generated@@46))
 :pattern ( ($generated@@176 $generated@@645 $generated@@46))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@3) ($generated@@176 $generated@@646 $generated@@47))
 :pattern ( ($generated@@176 $generated@@646 $generated@@47))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@4) ($generated@@176 $generated@@647 $generated@@44))
 :pattern ( ($generated@@176 $generated@@647 $generated@@44))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@474) ($generated@@176 $generated@@648 $generated@@45))
 :pattern ( ($generated@@176 $generated@@648 $generated@@45))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@192) ($generated@@176 $generated@@649 $generated@@48))
 :pattern ( ($generated@@176 $generated@@649 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () Real)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () Real)
(declare-fun $generated@@655 () (_ BitVec 67))
(declare-fun $generated@@656 () (_ BitVec 32))
(declare-fun $generated@@657 () (_ BitVec 7))
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () Real)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () Bool)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 (T@U) Bool)
(assert  (and (and (= (type $generated@@670) ($generated@@204 $generated@@79 $generated@@4)) (= (type $generated@@671) $generated@@79)) (= (type $generated@@672) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 30) (let (($generated@@674  (=> (= (ControlFlow 0 4) (- 0 3)) (=> ($generated@@163 $generated@@650 $generated@@651 $generated@@652 $generated@@653 $generated@@654 $generated@@655 $generated@@656 $generated@@657 $generated@@658) (or ($generated@@162 $generated@@650 $generated@@651 $generated@@652 $generated@@653 $generated@@654 $generated@@655 $generated@@656 $generated@@657 $generated@@658) ($generated@@0 ($generated@@282 ($generated@@11 true))))))))
(let (($generated@@675  (and (=> (= (ControlFlow 0 23) (- 0 25)) (<= ($generated@@164 (- 0 4)) ($generated@@278 $generated@@654))) (and (=> (= (ControlFlow 0 23) (- 0 24)) (< ($generated@@278 $generated@@654) 300)) (=> (and (<= ($generated@@164 (- 0 4)) ($generated@@278 $generated@@654)) (< ($generated@@278 $generated@@654) 300)) (=> (and (and (= $generated@@653 $generated@@659) (= $generated@@650 $generated@@660)) (and (= $generated@@651 $generated@@661) (= (ControlFlow 0 23) 4))) $generated@@674))))))
(let (($generated@@676  (=> (and (< ($generated@@278 $generated@@654) ($generated@@164 (- 0 4))) (= (ControlFlow 0 27) 23)) $generated@@675)))
(let (($generated@@677  (=> (and (<= ($generated@@164 (- 0 4)) ($generated@@278 $generated@@654)) (= (ControlFlow 0 26) 23)) $generated@@675)))
(let (($generated@@678  (=> ($generated@@0 ($generated@@282 ($generated@@11 true))) (and (=> (= (ControlFlow 0 28) 26) $generated@@677) (=> (= (ControlFlow 0 28) 27) $generated@@676)))))
(let (($generated@@679  (=> (and ($generated@@0 ($generated@@282 ($generated@@11 true))) (= $generated@@662 ($generated@@166 6.0))) (and (=> (= (ControlFlow 0 18) (- 0 22)) (= ($generated@@448 ($generated@@278 $generated@@662)) $generated@@662)) (=> (= ($generated@@448 ($generated@@278 $generated@@662)) $generated@@662) (and (=> (= (ControlFlow 0 18) (- 0 21)) (= ($generated@@165 ($generated@@278 $generated@@662) ($generated@@164 2)) ($generated@@164 0))) (=> (= ($generated@@165 ($generated@@278 $generated@@662) ($generated@@164 2)) ($generated@@164 0)) (=> (and (= $generated@@663 ($generated@@278 ($generated@@166 6.0))) (= $generated@@664 ($generated@@164 6))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (= ($generated@@165 $generated@@664 ($generated@@164 2)) ($generated@@164 0))) (=> (= ($generated@@165 $generated@@664 ($generated@@164 2)) ($generated@@164 0)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (= $generated@@663 ($generated@@164 6))) (=> (= $generated@@663 ($generated@@164 6)) (=> (and (and (= $generated@@653 $generated@@663) (= $generated@@650 $generated@@660)) (and (= $generated@@651 $generated@@661) (= (ControlFlow 0 18) 4))) $generated@@674)))))))))))))
(let (($generated@@680  (=> ($generated@@0 ($generated@@282 ($generated@@11 true))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (= ($generated@@448 ($generated@@278 $generated@@652)) $generated@@652)) (=> (= ($generated@@448 ($generated@@278 $generated@@652)) $generated@@652) (=> (= $generated@@665 (= ($generated@@278 $generated@@652) ($generated@@278 $generated@@652))) (=> (and (and (= $generated@@653 $generated@@659) (= $generated@@650 $generated@@660)) (and (= $generated@@651 $generated@@661) (= (ControlFlow 0 16) 4))) $generated@@674)))))))
(let (($generated@@681  (=> (= $generated@@652 ($generated@@448 ($generated@@278 $generated@@652))) (and (=> (= (ControlFlow 0 14) (- 0 15)) (= ($generated@@448 ($generated@@278 $generated@@652)) $generated@@652)) (=> (= ($generated@@448 ($generated@@278 $generated@@652)) $generated@@652) (=> (= $generated@@666 ($generated@@278 $generated@@652)) (=> (and (and (= $generated@@653 $generated@@659) (= $generated@@650 $generated@@666)) (and (= $generated@@651 $generated@@661) (= (ControlFlow 0 14) 4))) $generated@@674)))))))
(let (($generated@@682  (=> (<= ($generated@@166 0.0) $generated@@652) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@176 ($generated@@8 ($generated@@278 $generated@@652)) $generated@@158)) (=> ($generated@@176 ($generated@@8 ($generated@@278 $generated@@652)) $generated@@158) (=> (= $generated@@667 ($generated@@278 $generated@@652)) (=> (and (and (= $generated@@653 $generated@@659) (= $generated@@650 $generated@@660)) (and (= $generated@@651 $generated@@667) (= (ControlFlow 0 12) 4))) $generated@@674)))))))
(let (($generated@@683  (=> ($generated@@0 ($generated@@282 ($generated@@11 true))) (and (=> (= (ControlFlow 0 10) (- 0 11)) ($generated@@176 ($generated@@8 ($generated@@278 $generated@@652)) $generated@@158)) (=> ($generated@@176 ($generated@@8 ($generated@@278 $generated@@652)) $generated@@158) (=> (= $generated@@668 ($generated@@278 $generated@@652)) (=> (and (and (= $generated@@653 $generated@@659) (= $generated@@650 $generated@@660)) (and (= $generated@@651 $generated@@668) (= (ControlFlow 0 10) 4))) $generated@@674)))))))
(let (($generated@@684  (=> ($generated@@0 ($generated@@282 ($generated@@11 true))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (= ($generated@@448 ($generated@@278 $generated@@652)) $generated@@652)) (=> (= ($generated@@448 ($generated@@278 $generated@@652)) $generated@@652) (=> (= $generated@@669 ($generated@@278 $generated@@652)) (=> (and (and (= $generated@@653 $generated@@659) (= $generated@@650 $generated@@669)) (and (= $generated@@651 $generated@@661) (= (ControlFlow 0 8) 4))) $generated@@674)))))))
(let (($generated@@685  (=> (<= ($generated@@164 0) $generated@@660) (=> (and (and (= $generated@@653 $generated@@659) (= $generated@@650 $generated@@660)) (and (= $generated@@651 $generated@@661) (= (ControlFlow 0 7) 4))) $generated@@674))))
(let (($generated@@686  (=> ($generated@@0 ($generated@@282 ($generated@@11 true))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@176 ($generated@@8 $generated@@660) $generated@@158)) (=> ($generated@@176 ($generated@@8 $generated@@660) $generated@@158) (=> (and (and (= $generated@@653 $generated@@659) (= $generated@@650 $generated@@660)) (and (= $generated@@651 $generated@@660) (= (ControlFlow 0 5) 4))) $generated@@674))))))
(let (($generated@@687  (=> (and (and (and (and (and (and (and (and (and (not ($generated@@0 ($generated@@282 ($generated@@11 true)))) (< $generated@@660 ($generated@@164 0))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (< $generated@@652 ($generated@@166 0.0))) (not (= $generated@@652 ($generated@@448 ($generated@@278 $generated@@652))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@688  (=> (= $generated@@670 ($generated@@203 $generated@@671 $generated@@672 $generated@@60 false)) (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 29) 5) $generated@@686) (=> (= (ControlFlow 0 29) 7) $generated@@685)) (=> (= (ControlFlow 0 29) 8) $generated@@684)) (=> (= (ControlFlow 0 29) 10) $generated@@683)) (=> (= (ControlFlow 0 29) 12) $generated@@682)) (=> (= (ControlFlow 0 29) 14) $generated@@681)) (=> (= (ControlFlow 0 29) 16) $generated@@680)) (=> (= (ControlFlow 0 29) 28) $generated@@678)) (=> (= (ControlFlow 0 29) 18) $generated@@679)) (=> (= (ControlFlow 0 29) 2) $generated@@687)))))
(let (($generated@@689  (=> (and (and ($generated@@286 $generated@@672) ($generated@@673 $generated@@672)) (and (<= ($generated@@164 0) $generated@@661) (= ($generated@@165 $generated@@659 ($generated@@164 2)) ($generated@@164 0)))) (=> (and (and (and (<= ($generated@@166 (- 0.0 4.0)) $generated@@654) (< $generated@@654 300.0)) (= 0 $generated@@658)) (and (= 2 $generated@@161) (= (ControlFlow 0 30) 29))) $generated@@688))))
$generated@@689)))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 6))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 8) (- 9))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 10) (- 11))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 16) (- 17))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 ((_ BitVec 7)) T@U)
(declare-fun $generated@@136 (T@U) (_ BitVec 7))
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 ((_ BitVec 32)) T@U)
(declare-fun $generated@@144 (T@U) (_ BitVec 32))
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 ((_ BitVec 67)) T@U)
(declare-fun $generated@@152 (T@U) (_ BitVec 67))
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@163 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@164 (Int) Int)
(declare-fun $generated@@165 (Int Int) Int)
(declare-fun $generated@@166 (Real) Real)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 () T@T)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@202 (T@U T@U T@U) T@U)
(declare-fun $generated@@203 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@204 (T@T T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@T) T@T)
(declare-fun $generated@@207 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (Real) Int)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Bool)
(declare-fun $generated@@287 (T@U T@U T@U) Bool)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@322 ((_ BitVec 7)) Int)
(declare-fun $generated@@324 ((_ BitVec 32)) Int)
(declare-fun $generated@@326 (T@U) Int)
(declare-fun $generated@@327 (T@T) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@351 (T@T T@T) T@U)
(declare-fun $generated@@352 (T@T T@T) T@T)
(declare-fun $generated@@353 (T@T) T@T)
(declare-fun $generated@@354 (T@T) T@T)
(declare-fun $generated@@368 ((_ BitVec 67)) Int)
(declare-fun $generated@@373 (T@T T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@454 (Int) Real)
(declare-fun $generated@@456 (T@T) T@U)
(declare-fun $generated@@480 () T@T)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@523 (T@U Int) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@562 (T@U) Int)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@593 (Int Int) Int)
(declare-fun $generated@@645 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (and (forall (($generated@@137 (_ BitVec 7)) ) (! (= ($generated@@136 ($generated@@135 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@135 $generated@@137))
)) (= ($generated@@1 $generated@@134) 14)) (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@134) (= ($generated@@135 ($generated@@136 $generated@@138)) $generated@@138))
 :pattern ( ($generated@@136 $generated@@138))
))) (forall (($generated@@139 (_ BitVec 7)) ) (! (= (type ($generated@@135 $generated@@139)) $generated@@134)
 :pattern ( ($generated@@135 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@134) (= (type $generated@@141) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@140 ($generated@@77 7) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140 ($generated@@77 7) $generated@@141))
)))
(assert  (and (and (and (forall (($generated@@145 (_ BitVec 32)) ) (! (= ($generated@@144 ($generated@@143 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@145))
)) (= ($generated@@1 $generated@@142) 15)) (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@142) (= ($generated@@143 ($generated@@144 $generated@@146)) $generated@@146))
 :pattern ( ($generated@@144 $generated@@146))
))) (forall (($generated@@147 (_ BitVec 32)) ) (! (= (type ($generated@@143 $generated@@147)) $generated@@142)
 :pattern ( ($generated@@143 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@142) (= (type $generated@@149) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@148 ($generated@@77 32) $generated@@149))
 :pattern ( ($generated@@76 $generated@@148 ($generated@@77 32) $generated@@149))
)))
(assert  (and (and (and (forall (($generated@@153 (_ BitVec 67)) ) (! (= ($generated@@152 ($generated@@151 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@153))
)) (= ($generated@@1 $generated@@150) 16)) (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@150) (= ($generated@@151 ($generated@@152 $generated@@154)) $generated@@154))
 :pattern ( ($generated@@152 $generated@@154))
))) (forall (($generated@@155 (_ BitVec 67)) ) (! (= (type ($generated@@151 $generated@@155)) $generated@@150)
 :pattern ( ($generated@@151 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@150) (= (type $generated@@157) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@156 ($generated@@77 67) $generated@@157))
 :pattern ( ($generated@@76 $generated@@156 ($generated@@77 67) $generated@@157))
)))
(assert (= (type $generated@@158) $generated@@66))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@159 $generated@@158 $generated@@160))
 :pattern ( ($generated@@76 $generated@@159 $generated@@158 $generated@@160))
)))
(assert  (=> (<= 1 $generated@@161) (forall (($generated@@167 Int) ($generated@@168 Int) ($generated@@169 Real) ($generated@@170 Int) ($generated@@171 Real) ($generated@@172 (_ BitVec 67)) ($generated@@173 (_ BitVec 32)) ($generated@@174 (_ BitVec 7)) ($generated@@175 Int) ) (!  (=> (or ($generated@@163 $generated@@167 $generated@@168 $generated@@169 $generated@@170 $generated@@171 $generated@@172 $generated@@173 $generated@@174 $generated@@175) (and (not (= 1 $generated@@161)) (and (and (and (<= ($generated@@164 0) $generated@@168) (= ($generated@@165 $generated@@170 ($generated@@164 2)) ($generated@@164 0))) (and (<= ($generated@@166 (- 0.0 4.0)) $generated@@171) (< $generated@@171 300.0))) (= 0 $generated@@175)))) true)
 :pattern ( ($generated@@162 $generated@@167 $generated@@168 $generated@@169 $generated@@170 $generated@@171 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@2) ($generated@@176 $generated@@177 ($generated@@77 0)))
 :pattern ( ($generated@@176 $generated@@177 ($generated@@77 0)))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@134) ($generated@@176 $generated@@178 ($generated@@77 7)))
 :pattern ( ($generated@@176 $generated@@178 ($generated@@77 7)))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> (= (type $generated@@179) $generated@@142) ($generated@@176 $generated@@179 ($generated@@77 32)))
 :pattern ( ($generated@@176 $generated@@179 ($generated@@77 32)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@150) ($generated@@176 $generated@@180 ($generated@@77 67)))
 :pattern ( ($generated@@176 $generated@@180 ($generated@@77 67)))
)))
(assert  (and (= ($generated@@1 $generated@@183) 17) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@66)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@66) (= (type $generated@@187) $generated@@66)) (= (type $generated@@188) $generated@@183)) ($generated@@176 $generated@@188 ($generated@@182 $generated@@186 $generated@@187))) ($generated@@181 $generated@@188))
 :pattern ( ($generated@@181 $generated@@188) ($generated@@176 $generated@@188 ($generated@@182 $generated@@186 $generated@@187)))
)))
(assert  (and (and (= ($generated@@1 $generated@@192) 18) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@190 $generated@@193))
))) (forall (($generated@@194 T@U) ) (! (= (type ($generated@@191 $generated@@194)) $generated@@192)
 :pattern ( ($generated@@191 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@195) $generated@@183) (= (type $generated@@196) $generated@@183)) true) (= ($generated@@189 $generated@@195 $generated@@196)  (and (= ($generated@@190 $generated@@195) ($generated@@190 $generated@@196)) (= ($generated@@191 $generated@@195) ($generated@@191 $generated@@196)))))
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@66)
 :pattern ( ($generated@@197 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) ($generated@@78 $generated@@192 $generated@@2)) (= (type $generated@@201) $generated@@66)) ($generated@@176 $generated@@200 ($generated@@197 $generated@@201))) ($generated@@198 $generated@@200))
 :pattern ( ($generated@@176 $generated@@200 ($generated@@197 $generated@@201)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@208 T@T) ($generated@@209 T@T) ) (= ($generated@@1 ($generated@@204 $generated@@208 $generated@@209)) 19)) (forall (($generated@@210 T@T) ($generated@@211 T@T) ) (! (= ($generated@@205 ($generated@@204 $generated@@210 $generated@@211)) $generated@@210)
 :pattern ( ($generated@@204 $generated@@210 $generated@@211))
))) (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (! (= ($generated@@206 ($generated@@204 $generated@@212 $generated@@213)) $generated@@213)
 :pattern ( ($generated@@204 $generated@@212 $generated@@213))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@206 (type $generated@@214))))
(= (type ($generated@@202 $generated@@214 $generated@@215 $generated@@216)) $generated@@217))
 :pattern ( ($generated@@202 $generated@@214 $generated@@215 $generated@@216))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 (type $generated@@221)))
(let (($generated@@223 (type $generated@@219)))
(= (type ($generated@@207 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@204 $generated@@223 $generated@@222))))
 :pattern ( ($generated@@207 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@206 (type $generated@@224))))
 (=> (= (type $generated@@227) $generated@@228) (= ($generated@@202 ($generated@@207 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@225 $generated@@226) $generated@@227)))
 :weight 0
))) (and (and (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@202 ($generated@@207 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@202 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or (= $generated@@238 $generated@@240) (= ($generated@@202 ($generated@@207 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@202 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (or true (= ($generated@@202 ($generated@@207 $generated@@242 $generated@@243 $generated@@244 $generated@@241) $generated@@245 $generated@@246) ($generated@@202 $generated@@242 $generated@@245 $generated@@246)))
 :weight 0
)))) (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ) (! (= (type ($generated@@203 $generated@@247 $generated@@248 $generated@@249 $generated@@250)) ($generated@@204 $generated@@79 $generated@@4))
 :pattern ( ($generated@@203 $generated@@247 $generated@@248 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@69 (type $generated@@256))))
 (=> (and (and (and (and (= (type $generated@@251) $generated@@79) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@253) ($generated@@68 $generated@@4))) (= (type $generated@@255) $generated@@79)) (= (type $generated@@256) ($generated@@68 $generated@@257))) (= ($generated@@0 ($generated@@202 ($generated@@203 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))  (=> (and (not (= $generated@@255 $generated@@251)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@252 $generated@@255) $generated@@253))) $generated@@254))))
 :pattern ( ($generated@@202 ($generated@@203 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@183)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@66) (= (type $generated@@263) $generated@@66)) (= (type $generated@@264) $generated@@192)) (= (type $generated@@265) $generated@@192)) (= ($generated@@176 ($generated@@258 $generated@@264 $generated@@265) ($generated@@182 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@176 ($generated@@258 $generated@@264 $generated@@265) ($generated@@182 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@183) (= (type $generated@@267) $generated@@183)) (= ($generated@@189 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@189 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@66)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@78 $generated@@192 $generated@@4)) (= (type $generated@@271) $generated@@66)) (= ($generated@@176 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@192) ($generated@@0 ($generated@@83 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@83 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@176 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@66)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@78 $generated@@192 $generated@@4)) (= (type $generated@@276) $generated@@66)) (= ($generated@@176 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@192) ($generated@@0 ($generated@@83 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@83 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@176 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 Real) ) (! (= ($generated@@278 $generated@@279) (to_int $generated@@279))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 Int) ) (! (= ($generated@@164 $generated@@280) $generated@@280)
 :pattern ( ($generated@@164 $generated@@280))
)))
(assert (forall (($generated@@281 Real) ) (! (= ($generated@@166 $generated@@281) $generated@@281)
 :pattern ( ($generated@@166 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 (type $generated@@283)))
(= (type ($generated@@282 $generated@@283)) $generated@@284))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= ($generated@@282 $generated@@285) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@288) $generated@@66) (= (type $generated@@289) $generated@@66)) (= (type $generated@@290) $generated@@192)) (= (type $generated@@291) $generated@@192)) (= (type $generated@@292) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@286 $generated@@292)) (= ($generated@@76 ($generated@@258 $generated@@290 $generated@@291) ($generated@@182 $generated@@288 $generated@@289) $generated@@292)  (and ($generated@@287 $generated@@290 $generated@@288 $generated@@292) ($generated@@287 $generated@@291 $generated@@289 $generated@@292))))
 :pattern ( ($generated@@76 ($generated@@258 $generated@@290 $generated@@291) ($generated@@182 $generated@@288 $generated@@289) $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@70)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@183) (= ($generated@@181 $generated@@295) (= ($generated@@293 $generated@@295) $generated@@62)))
 :pattern ( ($generated@@181 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@183) ($generated@@181 $generated@@296)) (exists (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (and (and (= (type $generated@@297) $generated@@192) (= (type $generated@@298) $generated@@192)) (= $generated@@296 ($generated@@258 $generated@@297 $generated@@298)))
 :no-pattern (type $generated@@297)
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
)))
 :pattern ( ($generated@@181 $generated@@296))
)))
(assert  (and (and (forall (($generated@@303 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@303)) 20)) (forall (($generated@@304 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@301 $generated@@304))
))) (forall (($generated@@305 T@T) ) (! (= (type ($generated@@299 $generated@@305)) ($generated@@301 $generated@@305))
 :pattern ( ($generated@@299 $generated@@305))
))))
(assert (forall (($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@306)) 0)
 :pattern ( ($generated@@299 $generated@@306))
)))
(assert  (=> (<= 1 $generated@@161) (forall (($generated@@307 Int) ($generated@@308 Int) ($generated@@309 Real) ($generated@@310 Int) ($generated@@311 Real) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 Int) ) (!  (=> (and (and (and (= (type $generated@@312) $generated@@150) (= (type $generated@@313) $generated@@142)) (= (type $generated@@314) $generated@@134)) (or ($generated@@163 ($generated@@164 $generated@@307) ($generated@@164 $generated@@308) ($generated@@166 $generated@@309) ($generated@@164 $generated@@310) ($generated@@166 $generated@@311) ($generated@@152 ($generated@@282 $generated@@312)) ($generated@@144 ($generated@@282 $generated@@313)) ($generated@@136 ($generated@@282 $generated@@314)) ($generated@@164 $generated@@315)) (and (not (= 1 $generated@@161)) (and (and (and (<= ($generated@@164 0) $generated@@308) (= ($generated@@165 $generated@@310 ($generated@@164 2)) ($generated@@164 0))) (and (<= ($generated@@166 (- 0.0 4.0)) $generated@@311) (< $generated@@311 300.0))) (= 0 $generated@@315))))) (= ($generated@@162 ($generated@@164 $generated@@307) ($generated@@164 $generated@@308) ($generated@@166 $generated@@309) ($generated@@164 $generated@@310) ($generated@@166 $generated@@311) ($generated@@152 ($generated@@282 $generated@@312)) ($generated@@144 ($generated@@282 $generated@@313)) ($generated@@136 ($generated@@282 $generated@@314)) ($generated@@164 $generated@@315)) ($generated@@0 ($generated@@282 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@162 ($generated@@164 $generated@@307) ($generated@@164 $generated@@308) ($generated@@166 $generated@@309) ($generated@@164 $generated@@310) ($generated@@166 $generated@@311) ($generated@@152 ($generated@@282 $generated@@312)) ($generated@@144 ($generated@@282 $generated@@313)) ($generated@@136 ($generated@@282 $generated@@314)) ($generated@@164 $generated@@315)))
))))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@2) (= ($generated@@176 $generated@@316 $generated@@158) (<= ($generated@@164 0) ($generated $generated@@316))))
 :pattern ( ($generated@@176 $generated@@316 $generated@@158))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@192)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@66) (= (type $generated@@321) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@287 ($generated@@317 $generated@@319) $generated@@320 $generated@@321) ($generated@@76 $generated@@319 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@287 ($generated@@317 $generated@@319) $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 (_ BitVec 7)) ) (!  (and (and (<= 0 ($generated@@322 $generated@@323)) (< ($generated@@322 $generated@@323) 128)) (= ($generated@@322 $generated@@323) (bv2int $generated@@323)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 (_ BitVec 32)) ) (!  (and (and (<= 0 ($generated@@324 $generated@@325)) (< ($generated@@324 $generated@@325) 4294967296)) (= ($generated@@324 $generated@@325) (bv2int $generated@@325)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@328 T@T) ) (! (= (type ($generated@@327 $generated@@328)) ($generated@@78 $generated@@328 $generated@@2))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@81 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@78 $generated@@330 $generated@@2)) (and (= (= ($generated@@326 $generated@@329) 0) (= $generated@@329 ($generated@@327 $generated@@330))) (=> (not (= ($generated@@326 $generated@@329) 0)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) (< 0 ($generated ($generated@@83 $generated@@329 $generated@@331))))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 21)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@78 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@83 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@83 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert  (and (and (and (and (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (= ($generated@@1 ($generated@@352 $generated@@355 $generated@@356)) 22)) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= ($generated@@353 ($generated@@352 $generated@@357 $generated@@358)) $generated@@357)
 :pattern ( ($generated@@352 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@354 ($generated@@352 $generated@@359 $generated@@360)) $generated@@360)
 :pattern ( ($generated@@352 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@353 (type $generated@@361))))
(= (type ($generated@@350 $generated@@361)) ($generated@@78 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@361))
))) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= (type ($generated@@351 $generated@@363 $generated@@364)) ($generated@@352 $generated@@363 $generated@@364))
 :pattern ( ($generated@@351 $generated@@363 $generated@@364))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@T) ) (! (let (($generated@@367 (type $generated@@365)))
 (not ($generated@@0 ($generated@@83 ($generated@@350 ($generated@@351 $generated@@367 $generated@@366)) $generated@@365))))
 :pattern ( (let (($generated@@367 (type $generated@@365)))
($generated@@83 ($generated@@350 ($generated@@351 $generated@@367 $generated@@366)) $generated@@365)))
)))
(assert (forall (($generated@@369 (_ BitVec 67)) ) (!  (and (and (<= 0 ($generated@@368 $generated@@369)) (< ($generated@@368 $generated@@369) 147573952589676412928)) (= ($generated@@368 $generated@@369) (bv2int $generated@@369)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@81 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@78 $generated@@371 $generated@@2)) (= ($generated@@198 $generated@@370) (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@371) (and (<= 0 ($generated ($generated@@83 $generated@@370 $generated@@372))) (<= ($generated ($generated@@83 $generated@@370 $generated@@372)) ($generated@@326 $generated@@370))))
 :pattern ( ($generated@@83 $generated@@370 $generated@@372))
)))))
 :pattern ( ($generated@@198 $generated@@370))
)))
(assert (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@192) ($generated@@259 $generated@@376 $generated@@158)) (and (= ($generated@@317 ($generated@@373 $generated@@2 $generated@@376)) $generated@@376) ($generated@@176 ($generated@@373 $generated@@2 $generated@@376) $generated@@158)))
 :pattern ( ($generated@@259 $generated@@376 $generated@@158))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@336 (type $generated@@377))))
(let (($generated@@379 ($generated@@335 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@334 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@333 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@83 ($generated@@332 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@332 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@336 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@78 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@336 (type $generated@@384))))
(let (($generated@@386 ($generated@@335 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@334 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@333 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@83 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@354 (type $generated@@388))))
(let (($generated@@390 ($generated@@353 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@352 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@351 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@83 ($generated@@350 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@350 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@354 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@78 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@354 (type $generated@@395))))
(let (($generated@@397 ($generated@@353 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@352 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@351 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@83 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@78 $generated@@192 $generated@@2)) (= (type $generated@@400) $generated@@66)) (= ($generated@@176 $generated@@399 ($generated@@197 $generated@@400)) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@192) (< 0 ($generated ($generated@@83 $generated@@399 $generated@@401)))) ($generated@@259 $generated@@401 $generated@@400))
 :pattern ( ($generated@@83 $generated@@399 $generated@@401))
))))
 :pattern ( ($generated@@176 $generated@@399 ($generated@@197 $generated@@400)))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@78 $generated@@192 $generated@@4)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@268 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@192) ($generated@@0 ($generated@@83 $generated@@402 $generated@@405))) ($generated@@287 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@83 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@268 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@78 $generated@@192 $generated@@4)) (= (type $generated@@407) $generated@@66)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@406 ($generated@@273 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@192) ($generated@@0 ($generated@@83 $generated@@406 $generated@@409))) ($generated@@287 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@83 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@76 $generated@@406 ($generated@@273 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@83 ($generated@@327 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@83 ($generated@@327 $generated@@411) $generated@@410)))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@78 $generated@@192 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@336 (type $generated@@415))))
(let (($generated@@417 ($generated@@335 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@78 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@334 $generated@@192 $generated@@192)) (= (type $generated@@419) $generated@@192)) (= ($generated@@0 ($generated@@83 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@83 ($generated@@332 $generated@@418) ($generated@@190 ($generated@@373 $generated@@183 $generated@@419)))) (= ($generated@@83 ($generated@@413 $generated@@418) ($generated@@190 ($generated@@373 $generated@@183 $generated@@419))) ($generated@@191 ($generated@@373 $generated@@183 $generated@@419))))))
 :pattern ( ($generated@@83 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@78 $generated@@192 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@354 (type $generated@@423))))
(let (($generated@@425 ($generated@@353 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@78 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@352 $generated@@192 $generated@@192)) (= (type $generated@@427) $generated@@192)) (= ($generated@@0 ($generated@@83 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@83 ($generated@@350 $generated@@426) ($generated@@190 ($generated@@373 $generated@@183 $generated@@427)))) (= ($generated@@83 ($generated@@421 $generated@@426) ($generated@@190 ($generated@@373 $generated@@183 $generated@@427))) ($generated@@191 ($generated@@373 $generated@@183 $generated@@427))))))
 :pattern ( ($generated@@83 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@335 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@334 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@83 ($generated@@381 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@83 ($generated@@332 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@83 ($generated@@413 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@83 ($generated@@332 $generated@@428) $generated@@432))
 :pattern ( ($generated@@83 ($generated@@413 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@353 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@352 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@83 ($generated@@392 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@83 ($generated@@350 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@83 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@83 ($generated@@350 $generated@@433) $generated@@437))
 :pattern ( ($generated@@83 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@83 ($generated@@392 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@66)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@334 $generated@@192 $generated@@192)) (= (type $generated@@442) $generated@@66)) (= (type $generated@@443) $generated@@66)) (= (type $generated@@444) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@192) ($generated@@0 ($generated@@83 ($generated@@332 $generated@@441) $generated@@445))) (and ($generated@@287 ($generated@@83 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@287 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@83 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@83 ($generated@@332 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@76 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@352 $generated@@192 $generated@@192)) (= (type $generated@@450) $generated@@66)) (= (type $generated@@451) $generated@@66)) (= (type $generated@@452) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@192) ($generated@@0 ($generated@@83 ($generated@@350 $generated@@449) $generated@@453))) (and ($generated@@287 ($generated@@83 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@287 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@83 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@83 ($generated@@350 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@76 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@455 Int) ) (! (= ($generated@@454 $generated@@455) (to_real $generated@@455))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@T) ) (! (= (type ($generated@@456 $generated@@457)) ($generated@@78 $generated@@457 $generated@@4))
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@354 (type $generated@@458))))
(let (($generated@@460 ($generated@@353 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@352 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@351 $generated@@460 $generated@@459)) (= ($generated@@350 $generated@@458) ($generated@@456 $generated@@460))))))
 :pattern ( ($generated@@350 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@354 (type $generated@@461))))
(let (($generated@@463 ($generated@@353 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@352 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@351 $generated@@463 $generated@@462)) (= ($generated@@392 $generated@@461) ($generated@@456 $generated@@462))))))
 :pattern ( ($generated@@392 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@354 (type $generated@@464))))
(let (($generated@@466 ($generated@@353 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@352 $generated@@466 $generated@@465)) (= (= $generated@@464 ($generated@@351 $generated@@466 $generated@@465)) (= ($generated@@420 $generated@@464) ($generated@@456 $generated@@192))))))
 :pattern ( ($generated@@420 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@336 (type $generated@@467))))
(let (($generated@@469 ($generated@@335 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@334 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@333 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@192) (= (type $generated@@471) $generated@@192)) ($generated@@0 ($generated@@83 ($generated@@412 $generated@@467) ($generated@@317 ($generated@@258 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@412 $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@354 (type $generated@@472))))
(let (($generated@@474 ($generated@@353 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@352 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@351 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@192) (= (type $generated@@476) $generated@@192)) ($generated@@0 ($generated@@83 ($generated@@420 $generated@@472) ($generated@@317 ($generated@@258 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@420 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@192) ($generated@@259 $generated@@477 $generated@@46)) (and (= ($generated@@317 ($generated@@373 $generated@@2 $generated@@477)) $generated@@477) ($generated@@176 ($generated@@373 $generated@@2 $generated@@477) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@477 $generated@@46))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@192) ($generated@@259 $generated@@478 $generated@@47)) (and (= ($generated@@317 ($generated@@373 $generated@@3 $generated@@478)) $generated@@478) ($generated@@176 ($generated@@373 $generated@@3 $generated@@478) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@478 $generated@@47))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@192) ($generated@@259 $generated@@479 $generated@@44)) (and (= ($generated@@317 ($generated@@373 $generated@@4 $generated@@479)) $generated@@479) ($generated@@176 ($generated@@373 $generated@@4 $generated@@479) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@479 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@480) 23))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@192) ($generated@@259 $generated@@481 $generated@@45)) (and (= ($generated@@317 ($generated@@373 $generated@@480 $generated@@481)) $generated@@481) ($generated@@176 ($generated@@373 $generated@@480 $generated@@481) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@481 $generated@@45))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@66) (= ($generated@@259 ($generated@@317 $generated@@482) $generated@@483) ($generated@@176 $generated@@482 $generated@@483)))
 :pattern ( ($generated@@259 ($generated@@317 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@81 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@78 $generated@@485 $generated@@2)) (<= 0 ($generated@@326 $generated@@484))))
 :pattern ( ($generated@@326 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@302 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@301 $generated@@487)) (<= 0 ($generated@@300 $generated@@486))))
 :pattern ( ($generated@@300 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@66) (= (type $generated@@491) $generated@@66)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@66) (= (type $generated@@495) $generated@@66)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@66) (= (type $generated@@497) $generated@@66)) (= ($generated@@74 ($generated@@438 $generated@@496 $generated@@497)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@66) (= (type $generated@@501) $generated@@66)) (= ($generated@@498 ($generated@@446 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@446 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@66) (= (type $generated@@505) $generated@@66)) (= ($generated@@502 ($generated@@446 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@446 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@66) (= (type $generated@@507) $generated@@66)) (= ($generated@@74 ($generated@@446 $generated@@506 $generated@@507)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@192) (= (type $generated@@509) $generated@@192)) (= ($generated@@293 ($generated@@258 $generated@@508 $generated@@509)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@66) (= (type $generated@@513) $generated@@66)) (= ($generated@@510 ($generated@@182 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@182 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@66)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@66) (= (type $generated@@517) $generated@@66)) (= ($generated@@514 ($generated@@182 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@182 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@192) (= (type $generated@@519) $generated@@192)) (= ($generated@@190 ($generated@@258 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@258 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@192) (= (type $generated@@521) $generated@@192)) (= ($generated@@191 ($generated@@258 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@258 $generated@@520 $generated@@521))
)))
(assert  (and (forall (($generated@@524 T@U) ) (! (= (type ($generated@@522 $generated@@524)) $generated@@66)
 :pattern ( ($generated@@522 $generated@@524))
)) (forall (($generated@@525 T@U) ($generated@@526 Int) ) (! (let (($generated@@527 ($generated@@302 (type $generated@@525))))
(= (type ($generated@@523 $generated@@525 $generated@@526)) $generated@@527))
 :pattern ( ($generated@@523 $generated@@525 $generated@@526))
))))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@301 $generated@@192)) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@528 ($generated@@522 $generated@@529) $generated@@530) (forall (($generated@@531 Int) ) (!  (=> (and (<= 0 $generated@@531) (< $generated@@531 ($generated@@300 $generated@@528))) ($generated@@287 ($generated@@523 $generated@@528 $generated@@531) $generated@@529 $generated@@530))
 :pattern ( ($generated@@523 $generated@@528 $generated@@531))
))))
 :pattern ( ($generated@@76 $generated@@528 ($generated@@522 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@533 Int) ) (! (= ($generated@@532 ($generated@@77 $generated@@533)) $generated@@533)
 :pattern ( ($generated@@77 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@66)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@66) (= ($generated@@534 ($generated@@268 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@268 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@66) (= ($generated@@74 ($generated@@268 $generated@@537)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@66)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@66) (= ($generated@@538 ($generated@@273 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@273 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@66) (= ($generated@@74 ($generated@@273 $generated@@541)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@66)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@66) (= ($generated@@542 ($generated@@197 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@197 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@66) (= ($generated@@74 ($generated@@197 $generated@@545)) $generated@@56))
 :pattern ( ($generated@@197 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@66)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@66) (= ($generated@@546 ($generated@@522 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@522 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@66) (= ($generated@@74 ($generated@@522 $generated@@549)) $generated@@57))
 :pattern ( ($generated@@522 $generated@@549))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@278 ($generated@@454 $generated@@550)) $generated@@550)
 :pattern ( ($generated@@278 ($generated@@454 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
(= ($generated@@373 $generated@@552 ($generated@@317 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@317 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@334 $generated@@192 $generated@@192)) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) $generated@@66)) (= ($generated@@176 $generated@@553 ($generated@@438 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@192) ($generated@@0 ($generated@@83 ($generated@@332 $generated@@553) $generated@@556))) (and ($generated@@259 ($generated@@83 ($generated@@413 $generated@@553) $generated@@556) $generated@@555) ($generated@@259 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@83 ($generated@@413 $generated@@553) $generated@@556))
 :pattern ( ($generated@@83 ($generated@@332 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@176 $generated@@553 ($generated@@438 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@352 $generated@@192 $generated@@192)) (= (type $generated@@558) $generated@@66)) (= (type $generated@@559) $generated@@66)) (= ($generated@@176 $generated@@557 ($generated@@446 $generated@@558 $generated@@559)) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@192) ($generated@@0 ($generated@@83 ($generated@@350 $generated@@557) $generated@@560))) (and ($generated@@259 ($generated@@83 ($generated@@421 $generated@@557) $generated@@560) $generated@@559) ($generated@@259 $generated@@560 $generated@@558)))
 :pattern ( ($generated@@83 ($generated@@421 $generated@@557) $generated@@560))
 :pattern ( ($generated@@83 ($generated@@350 $generated@@557) $generated@@560))
))))
 :pattern ( ($generated@@176 $generated@@557 ($generated@@446 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@192) (= (type $generated@@564) $generated@@192)) (< ($generated@@561 $generated@@563) ($generated@@562 ($generated@@258 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@258 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@192) (= (type $generated@@566) $generated@@192)) (< ($generated@@561 $generated@@566) ($generated@@562 ($generated@@258 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@258 $generated@@565 $generated@@566))
)))
(assert  (=> (<= 1 $generated@@161) (forall (($generated@@567 Int) ($generated@@568 Int) ($generated@@569 Real) ($generated@@570 Int) ($generated@@571 Real) ($generated@@572 (_ BitVec 67)) ($generated@@573 (_ BitVec 32)) ($generated@@574 (_ BitVec 7)) ($generated@@575 Int) ) (!  (=> (or ($generated@@163 $generated@@567 $generated@@568 $generated@@569 $generated@@570 $generated@@571 $generated@@572 $generated@@573 $generated@@574 $generated@@575) (and (not (= 1 $generated@@161)) (and (and (and (<= ($generated@@164 0) $generated@@568) (= ($generated@@165 $generated@@570 ($generated@@164 2)) ($generated@@164 0))) (and (<= ($generated@@166 (- 0.0 4.0)) $generated@@571) (< $generated@@571 300.0))) (= 0 $generated@@575)))) (= ($generated@@162 $generated@@567 $generated@@568 $generated@@569 $generated@@570 $generated@@571 $generated@@572 $generated@@573 $generated@@574 $generated@@575) ($generated@@0 ($generated@@282 ($generated@@11 true)))))
 :pattern ( ($generated@@162 $generated@@567 $generated@@568 $generated@@569 $generated@@570 $generated@@571 $generated@@572 $generated@@573 $generated@@574 $generated@@575))
))))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@192) (= (type $generated@@577) $generated@@66)) (= (type $generated@@578) $generated@@66)) ($generated@@259 $generated@@576 ($generated@@438 $generated@@577 $generated@@578))) (and (= ($generated@@317 ($generated@@373 ($generated@@334 $generated@@192 $generated@@192) $generated@@576)) $generated@@576) ($generated@@176 ($generated@@373 ($generated@@334 $generated@@192 $generated@@192) $generated@@576) ($generated@@438 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@576 ($generated@@438 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@192) (= (type $generated@@580) $generated@@66)) (= (type $generated@@581) $generated@@66)) ($generated@@259 $generated@@579 ($generated@@446 $generated@@580 $generated@@581))) (and (= ($generated@@317 ($generated@@373 ($generated@@352 $generated@@192 $generated@@192) $generated@@579)) $generated@@579) ($generated@@176 ($generated@@373 ($generated@@352 $generated@@192 $generated@@192) $generated@@579) ($generated@@446 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@446 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@66) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@192)) ($generated@@259 $generated@@584 ($generated@@182 $generated@@582 $generated@@583))) (and (= ($generated@@317 ($generated@@373 $generated@@183 $generated@@584)) $generated@@584) ($generated@@176 ($generated@@373 $generated@@183 $generated@@584) ($generated@@182 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@259 $generated@@584 ($generated@@182 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@83 ($generated@@456 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@83 ($generated@@456 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@587 Int) ($generated@@588 Int) ) (! (= ($generated@@165 $generated@@587 $generated@@588) (mod $generated@@587 $generated@@588))
 :pattern ( ($generated@@165 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@71)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@66) (= (type $generated@@592) $generated@@66)) (and (= ($generated@@74 ($generated@@182 $generated@@591 $generated@@592)) $generated@@63) (= ($generated@@589 ($generated@@182 $generated@@591 $generated@@592)) $generated@@65)))
 :pattern ( ($generated@@182 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 Int) ($generated@@595 Int) ) (! (= ($generated@@593 $generated@@594 $generated@@595) (* $generated@@594 $generated@@595))
 :pattern ( ($generated@@593 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@183) (= ($generated@@561 ($generated@@317 $generated@@596)) ($generated@@562 $generated@@596)))
 :pattern ( ($generated@@561 ($generated@@317 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@192) ($generated@@259 $generated@@597 ($generated@@77 0))) (and (= ($generated@@317 ($generated@@373 $generated@@2 $generated@@597)) $generated@@597) ($generated@@176 ($generated@@373 ($generated@@78 $generated@@192 $generated@@4) $generated@@597) ($generated@@77 0))))
 :pattern ( ($generated@@259 $generated@@597 ($generated@@77 0)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@192) (= (type $generated@@599) $generated@@66)) ($generated@@259 $generated@@598 ($generated@@268 $generated@@599))) (and (= ($generated@@317 ($generated@@373 ($generated@@78 $generated@@192 $generated@@4) $generated@@598)) $generated@@598) ($generated@@176 ($generated@@373 ($generated@@78 $generated@@192 $generated@@4) $generated@@598) ($generated@@268 $generated@@599))))
 :pattern ( ($generated@@259 $generated@@598 ($generated@@268 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@192) (= (type $generated@@601) $generated@@66)) ($generated@@259 $generated@@600 ($generated@@273 $generated@@601))) (and (= ($generated@@317 ($generated@@373 ($generated@@78 $generated@@192 $generated@@4) $generated@@600)) $generated@@600) ($generated@@176 ($generated@@373 ($generated@@78 $generated@@192 $generated@@4) $generated@@600) ($generated@@273 $generated@@601))))
 :pattern ( ($generated@@259 $generated@@600 ($generated@@273 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@192) (= (type $generated@@603) $generated@@66)) ($generated@@259 $generated@@602 ($generated@@197 $generated@@603))) (and (= ($generated@@317 ($generated@@373 ($generated@@78 $generated@@192 $generated@@2) $generated@@602)) $generated@@602) ($generated@@176 ($generated@@373 ($generated@@78 $generated@@192 $generated@@2) $generated@@602) ($generated@@197 $generated@@603))))
 :pattern ( ($generated@@259 $generated@@602 ($generated@@197 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@192) (= (type $generated@@605) $generated@@66)) ($generated@@259 $generated@@604 ($generated@@522 $generated@@605))) (and (= ($generated@@317 ($generated@@373 ($generated@@301 $generated@@192) $generated@@604)) $generated@@604) ($generated@@176 ($generated@@373 ($generated@@301 $generated@@192) $generated@@604) ($generated@@522 $generated@@605))))
 :pattern ( ($generated@@259 $generated@@604 ($generated@@522 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@192) ($generated@@259 $generated@@606 ($generated@@77 7))) (and (= ($generated@@317 ($generated@@373 $generated@@134 $generated@@606)) $generated@@606) ($generated@@176 ($generated@@373 $generated@@134 $generated@@606) ($generated@@77 7))))
 :pattern ( ($generated@@259 $generated@@606 ($generated@@77 7)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@192) ($generated@@259 $generated@@607 ($generated@@77 32))) (and (= ($generated@@317 ($generated@@373 $generated@@142 $generated@@607)) $generated@@607) ($generated@@176 ($generated@@373 $generated@@142 $generated@@607) ($generated@@77 32))))
 :pattern ( ($generated@@259 $generated@@607 ($generated@@77 32)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@192) ($generated@@259 $generated@@608 ($generated@@77 67))) (and (= ($generated@@317 ($generated@@373 $generated@@150 $generated@@608)) $generated@@608) ($generated@@176 ($generated@@373 $generated@@150 $generated@@608) ($generated@@77 67))))
 :pattern ( ($generated@@259 $generated@@608 ($generated@@77 67)))
)))
(assert (= ($generated@@74 $generated@@158) $generated@@61))
(assert (= ($generated@@589 $generated@@158) $generated@@64))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@78 $generated@@192 $generated@@2)) (= (type $generated@@610) $generated@@66)) (= (type $generated@@611) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@609 ($generated@@197 $generated@@610) $generated@@611) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@192) (< 0 ($generated ($generated@@83 $generated@@609 $generated@@612)))) ($generated@@287 $generated@@612 $generated@@610 $generated@@611))
 :pattern ( ($generated@@83 $generated@@609 $generated@@612))
))))
 :pattern ( ($generated@@76 $generated@@609 ($generated@@197 $generated@@610) $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@183) (= (type $generated@@614) $generated@@66)) (= (type $generated@@615) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@286 $generated@@615) (and ($generated@@181 $generated@@613) (exists (($generated@@616 T@U) ) (!  (and (= (type $generated@@616) $generated@@66) ($generated@@76 $generated@@613 ($generated@@182 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@76 $generated@@613 ($generated@@182 $generated@@614 $generated@@616) $generated@@615))
))))) ($generated@@287 ($generated@@190 $generated@@613) $generated@@614 $generated@@615))
 :pattern ( ($generated@@287 ($generated@@190 $generated@@613) $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@183) (= (type $generated@@618) $generated@@66)) (= (type $generated@@619) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@286 $generated@@619) (and ($generated@@181 $generated@@617) (exists (($generated@@620 T@U) ) (!  (and (= (type $generated@@620) $generated@@66) ($generated@@76 $generated@@617 ($generated@@182 $generated@@620 $generated@@618) $generated@@619))
 :pattern ( ($generated@@76 $generated@@617 ($generated@@182 $generated@@620 $generated@@618) $generated@@619))
))))) ($generated@@287 ($generated@@191 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@287 ($generated@@191 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@192) (= (type $generated@@622) $generated@@192)) (= ($generated@@258 ($generated@@282 $generated@@621) ($generated@@282 $generated@@622)) ($generated@@282 ($generated@@258 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@258 ($generated@@282 $generated@@621) ($generated@@282 $generated@@622)))
)))
(assert (forall (($generated@@623 Int) ) (! (= ($generated@@317 ($generated@@8 ($generated@@164 $generated@@623))) ($generated@@282 ($generated@@317 ($generated@@8 $generated@@623))))
 :pattern ( ($generated@@317 ($generated@@8 ($generated@@164 $generated@@623))))
)))
(assert (forall (($generated@@624 Real) ) (! (= ($generated@@317 ($generated@@9 ($generated@@166 $generated@@624))) ($generated@@282 ($generated@@317 ($generated@@9 $generated@@624))))
 :pattern ( ($generated@@317 ($generated@@9 ($generated@@166 $generated@@624))))
)))
(assert (forall (($generated@@625 T@U) ) (! (= ($generated@@317 ($generated@@282 $generated@@625)) ($generated@@282 ($generated@@317 $generated@@625)))
 :pattern ( ($generated@@317 ($generated@@282 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 ($generated@@302 (type $generated@@626))))
 (=> (and (= (type $generated@@626) ($generated@@301 $generated@@627)) (= ($generated@@300 $generated@@626) 0)) (= $generated@@626 ($generated@@299 $generated@@627))))
 :pattern ( ($generated@@300 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (! (let (($generated@@631 (type $generated@@629)))
 (=> (and (and (= (type $generated@@628) ($generated@@78 $generated@@631 $generated@@2)) (= (type $generated@@630) $generated@@2)) (<= 0 ($generated $generated@@630))) (= ($generated@@326 ($generated@@84 $generated@@628 $generated@@629 $generated@@630)) (+ (- ($generated@@326 $generated@@628) ($generated ($generated@@83 $generated@@628 $generated@@629))) ($generated $generated@@630)))))
 :pattern ( ($generated@@326 ($generated@@84 $generated@@628 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@633) $generated@@2)) ($generated@@76 $generated@@633 $generated@@46 $generated@@632))
 :pattern ( ($generated@@76 $generated@@633 $generated@@46 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@635) $generated@@3)) ($generated@@76 $generated@@635 $generated@@47 $generated@@634))
 :pattern ( ($generated@@76 $generated@@635 $generated@@47 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@637) $generated@@4)) ($generated@@76 $generated@@637 $generated@@44 $generated@@636))
 :pattern ( ($generated@@76 $generated@@637 $generated@@44 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@639) $generated@@480)) ($generated@@76 $generated@@639 $generated@@45 $generated@@638))
 :pattern ( ($generated@@76 $generated@@639 $generated@@45 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@641) $generated@@192)) ($generated@@76 $generated@@641 $generated@@48 $generated@@640))
 :pattern ( ($generated@@76 $generated@@641 $generated@@48 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@301 $generated@@192)) (= (type $generated@@643) $generated@@66)) (= ($generated@@176 $generated@@642 ($generated@@522 $generated@@643)) (forall (($generated@@644 Int) ) (!  (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@300 $generated@@642))) ($generated@@259 ($generated@@523 $generated@@642 $generated@@644) $generated@@643))
 :pattern ( ($generated@@523 $generated@@642 $generated@@644))
))))
 :pattern ( ($generated@@176 $generated@@642 ($generated@@522 $generated@@643)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 Int) ) (!  (=> (= (type $generated@@646) ($generated@@301 $generated@@192)) (=> (and (<= 0 $generated@@647) (< $generated@@647 ($generated@@300 $generated@@646))) (< ($generated@@562 ($generated@@373 $generated@@183 ($generated@@523 $generated@@646 $generated@@647))) ($generated@@645 $generated@@646))))
 :pattern ( ($generated@@562 ($generated@@373 $generated@@183 ($generated@@523 $generated@@646 $generated@@647))))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) ($generated@@334 $generated@@192 $generated@@192)) (= (type $generated@@649) $generated@@66)) (= (type $generated@@650) $generated@@66)) ($generated@@176 $generated@@648 ($generated@@438 $generated@@649 $generated@@650))) (and (and ($generated@@176 ($generated@@332 $generated@@648) ($generated@@268 $generated@@649)) ($generated@@176 ($generated@@381 $generated@@648) ($generated@@268 $generated@@650))) ($generated@@176 ($generated@@412 $generated@@648) ($generated@@268 ($generated@@182 $generated@@649 $generated@@650)))))
 :pattern ( ($generated@@176 $generated@@648 ($generated@@438 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) ($generated@@352 $generated@@192 $generated@@192)) (= (type $generated@@652) $generated@@66)) (= (type $generated@@653) $generated@@66)) ($generated@@176 $generated@@651 ($generated@@446 $generated@@652 $generated@@653))) (and (and ($generated@@176 ($generated@@350 $generated@@651) ($generated@@273 $generated@@652)) ($generated@@176 ($generated@@392 $generated@@651) ($generated@@273 $generated@@653))) ($generated@@176 ($generated@@420 $generated@@651) ($generated@@273 ($generated@@182 $generated@@652 $generated@@653)))))
 :pattern ( ($generated@@176 $generated@@651 ($generated@@446 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@2) ($generated@@176 $generated@@654 $generated@@46))
 :pattern ( ($generated@@176 $generated@@654 $generated@@46))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@3) ($generated@@176 $generated@@655 $generated@@47))
 :pattern ( ($generated@@176 $generated@@655 $generated@@47))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@4) ($generated@@176 $generated@@656 $generated@@44))
 :pattern ( ($generated@@176 $generated@@656 $generated@@44))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@480) ($generated@@176 $generated@@657 $generated@@45))
 :pattern ( ($generated@@176 $generated@@657 $generated@@45))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@192) ($generated@@176 $generated@@658 $generated@@48))
 :pattern ( ($generated@@176 $generated@@658 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () Real)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Real)
(declare-fun $generated@@664 () (_ BitVec 67))
(declare-fun $generated@@665 () (_ BitVec 32))
(declare-fun $generated@@666 () (_ BitVec 7))
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () (_ BitVec 32))
(declare-fun $generated@@669 () Real)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () Real)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () Real)
(declare-fun $generated@@675 () Real)
(declare-fun $generated@@676 () Real)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () Real)
(declare-fun $generated@@679 () Real)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () Real)
(declare-fun $generated@@683 () Real)
(declare-fun $generated@@684 () Real)
(declare-fun $generated@@685 () Int)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 (T@U) Bool)
(assert  (and (and (= (type $generated@@691) ($generated@@204 $generated@@79 $generated@@4)) (= (type $generated@@692) $generated@@79)) (= (type $generated@@693) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 31) (let (($generated@@695  (=> (= (ControlFlow 0 4) (- 0 3)) (=> ($generated@@163 $generated@@659 $generated@@660 $generated@@661 $generated@@662 $generated@@663 $generated@@664 $generated@@665 $generated@@666 $generated@@667) (or ($generated@@162 $generated@@659 $generated@@660 $generated@@661 $generated@@662 $generated@@663 $generated@@664 $generated@@665 $generated@@666 $generated@@667) ($generated@@0 ($generated@@282 ($generated@@11 true))))))))
(let (($generated@@696  (=> (and (<= ($generated@@324 (bvand $generated@@665 #x0000000f)) ($generated@@164 15)) (= $generated@@668 (bvand $generated@@665 #x0000000f))) (and (=> (= (ControlFlow 0 28) (- 0 29)) (and (<= ($generated@@166 (- 0.0 4.0)) ($generated@@454 ($generated@@324 $generated@@668))) (< ($generated@@454 ($generated@@324 $generated@@668)) 300.0))) (=> (and (<= ($generated@@166 (- 0.0 4.0)) ($generated@@454 ($generated@@324 $generated@@668))) (< ($generated@@454 ($generated@@324 $generated@@668)) 300.0)) (=> (= $generated@@669 ($generated@@454 ($generated@@324 (bvand $generated@@665 #x0000000f)))) (=> (and (= $generated@@663 $generated@@669) (= $generated@@662 $generated@@670)) (=> (and (and (= $generated@@661 $generated@@671) (= $generated@@660 $generated@@672)) (and (= $generated@@659 $generated@@673) (= (ControlFlow 0 28) 4))) $generated@@695))))))))
(let (($generated@@697  (=> ($generated@@0 ($generated@@282 ($generated@@11 true))) (and (=> (= (ControlFlow 0 26) (- 0 27)) (and (<= ($generated@@166 (- 0.0 4.0)) ($generated@@454 ($generated@@324 $generated@@665))) (< ($generated@@454 ($generated@@324 $generated@@665)) 300.0))) (=> (and (<= ($generated@@166 (- 0.0 4.0)) ($generated@@454 ($generated@@324 $generated@@665))) (< ($generated@@454 ($generated@@324 $generated@@665)) 300.0)) (=> (= $generated@@674 ($generated@@454 ($generated@@324 $generated@@665))) (=> (and (= $generated@@663 $generated@@674) (= $generated@@662 $generated@@670)) (=> (and (and (= $generated@@661 $generated@@671) (= $generated@@660 $generated@@672)) (and (= $generated@@659 $generated@@673) (= (ControlFlow 0 26) 4))) $generated@@695))))))))
(let (($generated@@698  (=> ($generated@@0 ($generated@@282 ($generated@@11 true))) (and (=> (= (ControlFlow 0 24) (- 0 25)) (and (<= ($generated@@166 (- 0.0 4.0)) ($generated@@454 ($generated@@322 $generated@@666))) (< ($generated@@454 ($generated@@322 $generated@@666)) 300.0))) (=> (and (<= ($generated@@166 (- 0.0 4.0)) ($generated@@454 ($generated@@322 $generated@@666))) (< ($generated@@454 ($generated@@322 $generated@@666)) 300.0)) (=> (= $generated@@675 ($generated@@454 ($generated@@322 $generated@@666))) (=> (and (= $generated@@663 $generated@@675) (= $generated@@662 $generated@@670)) (=> (and (and (= $generated@@661 $generated@@671) (= $generated@@660 $generated@@672)) (and (= $generated@@659 $generated@@673) (= (ControlFlow 0 24) 4))) $generated@@695))))))))
(let (($generated@@699  (=> ($generated@@0 ($generated@@282 ($generated@@11 true))) (and (=> (= (ControlFlow 0 22) (- 0 23)) (and (<= ($generated@@166 (- 0.0 4.0)) ($generated@@454 0)) (< ($generated@@454 0) 300.0))) (=> (and (<= ($generated@@166 (- 0.0 4.0)) ($generated@@454 0)) (< ($generated@@454 0) 300.0)) (=> (= $generated@@676 ($generated@@454 0)) (=> (and (= $generated@@663 $generated@@676) (= $generated@@662 $generated@@670)) (=> (and (and (= $generated@@661 $generated@@671) (= $generated@@660 $generated@@672)) (and (= $generated@@659 $generated@@673) (= (ControlFlow 0 22) 4))) $generated@@695))))))))
(let (($generated@@700  (=> (and ($generated@@0 ($generated@@282 ($generated@@11 true))) (= $generated@@677 ($generated@@278 $generated@@678))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (and (<= ($generated@@166 (- 0.0 4.0)) ($generated@@454 $generated@@677)) (< ($generated@@454 $generated@@677) 300.0))) (=> (and (<= ($generated@@166 (- 0.0 4.0)) ($generated@@454 $generated@@677)) (< ($generated@@454 $generated@@677) 300.0)) (=> (= $generated@@679 ($generated@@454 ($generated@@278 $generated@@678))) (=> (and (= $generated@@663 $generated@@679) (= $generated@@662 $generated@@670)) (=> (and (and (= $generated@@661 $generated@@671) (= $generated@@660 $generated@@672)) (and (= $generated@@659 $generated@@673) (= (ControlFlow 0 20) 4))) $generated@@695))))))))
(let (($generated@@701  (=> ($generated@@0 ($generated@@282 ($generated@@11 true))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (and (<= ($generated@@166 (- 0.0 4.0)) $generated@@678) (< $generated@@678 300.0))) (=> (and (<= ($generated@@166 (- 0.0 4.0)) $generated@@678) (< $generated@@678 300.0)) (=> (and (= $generated@@663 $generated@@678) (= $generated@@662 $generated@@670)) (=> (and (and (= $generated@@661 $generated@@671) (= $generated@@660 $generated@@672)) (and (= $generated@@659 $generated@@673) (= (ControlFlow 0 18) 4))) $generated@@695)))))))
(let (($generated@@702  (=> (and ($generated@@0 ($generated@@282 ($generated@@11 true))) (= $generated@@680 ($generated@@593 ($generated@@368 $generated@@664) ($generated@@164 2)))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (= ($generated@@165 $generated@@680 ($generated@@164 2)) ($generated@@164 0))) (=> (= ($generated@@165 $generated@@680 ($generated@@164 2)) ($generated@@164 0)) (=> (= $generated@@681 ($generated@@593 ($generated@@368 $generated@@664) ($generated@@164 2))) (=> (and (= $generated@@663 $generated@@678) (= $generated@@662 $generated@@681)) (=> (and (and (= $generated@@661 $generated@@671) (= $generated@@660 $generated@@672)) (and (= $generated@@659 $generated@@673) (= (ControlFlow 0 16) 4))) $generated@@695))))))))
(let (($generated@@703  (=> (and (and (and ($generated@@0 ($generated@@282 ($generated@@11 true))) (= $generated@@682 ($generated@@454 0))) (and (= $generated@@663 $generated@@678) (= $generated@@662 $generated@@670))) (and (and (= $generated@@661 $generated@@682) (= $generated@@660 $generated@@672)) (and (= $generated@@659 $generated@@673) (= (ControlFlow 0 15) 4)))) $generated@@695)))
(let (($generated@@704  (=> (and (and (and ($generated@@0 ($generated@@282 ($generated@@11 true))) (= $generated@@683 ($generated@@454 ($generated@@322 $generated@@666)))) (and (= $generated@@663 $generated@@678) (= $generated@@662 $generated@@670))) (and (and (= $generated@@661 $generated@@683) (= $generated@@660 $generated@@672)) (and (= $generated@@659 $generated@@673) (= (ControlFlow 0 14) 4)))) $generated@@695)))
(let (($generated@@705  (=> (and (and (and ($generated@@0 ($generated@@282 ($generated@@11 true))) (= $generated@@684 ($generated@@454 ($generated@@368 $generated@@664)))) (and (= $generated@@663 $generated@@678) (= $generated@@662 $generated@@670))) (and (and (= $generated@@661 $generated@@684) (= $generated@@660 $generated@@672)) (and (= $generated@@659 $generated@@673) (= (ControlFlow 0 13) 4)))) $generated@@695)))
(let (($generated@@706  (=> ($generated@@0 ($generated@@282 ($generated@@11 true))) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@176 ($generated@@8 ($generated@@368 $generated@@664)) $generated@@158)) (=> ($generated@@176 ($generated@@8 ($generated@@368 $generated@@664)) $generated@@158) (=> (= $generated@@685 ($generated@@368 $generated@@664)) (=> (and (= $generated@@663 $generated@@678) (= $generated@@662 $generated@@670)) (=> (and (and (= $generated@@661 $generated@@671) (= $generated@@660 $generated@@685)) (and (= $generated@@659 $generated@@673) (= (ControlFlow 0 11) 4))) $generated@@695))))))))
(let (($generated@@707  (=> ($generated@@0 ($generated@@282 ($generated@@11 true))) (and (=> (= (ControlFlow 0 9) (- 0 10)) ($generated@@176 ($generated@@8 0) $generated@@158)) (=> ($generated@@176 ($generated@@8 0) $generated@@158) (=> (= $generated@@686 0) (=> (and (= $generated@@663 $generated@@678) (= $generated@@662 $generated@@670)) (=> (and (and (= $generated@@661 $generated@@671) (= $generated@@660 $generated@@686)) (and (= $generated@@659 $generated@@673) (= (ControlFlow 0 9) 4))) $generated@@695))))))))
(let (($generated@@708  (=> (and (and (and ($generated@@0 ($generated@@282 ($generated@@11 true))) (= $generated@@687 0)) (and (= $generated@@663 $generated@@678) (= $generated@@662 $generated@@670))) (and (and (= $generated@@661 $generated@@671) (= $generated@@660 $generated@@672)) (and (= $generated@@659 $generated@@687) (= (ControlFlow 0 8) 4)))) $generated@@695)))
(let (($generated@@709  (=> (and (and (and ($generated@@0 ($generated@@282 ($generated@@11 true))) (= $generated@@688 ($generated@@322 $generated@@666))) (and (= $generated@@663 $generated@@678) (= $generated@@662 $generated@@670))) (and (and (= $generated@@661 $generated@@671) (= $generated@@660 $generated@@672)) (and (= $generated@@659 $generated@@688) (= (ControlFlow 0 7) 4)))) $generated@@695)))
(let (($generated@@710  (=> (and (and (and ($generated@@0 ($generated@@282 ($generated@@11 true))) (= $generated@@689 ($generated@@324 $generated@@665))) (and (= $generated@@663 $generated@@678) (= $generated@@662 $generated@@670))) (and (and (= $generated@@661 $generated@@671) (= $generated@@660 $generated@@672)) (and (= $generated@@659 $generated@@689) (= (ControlFlow 0 6) 4)))) $generated@@695)))
(let (($generated@@711  (=> (and (and (and ($generated@@0 ($generated@@282 ($generated@@11 true))) (= $generated@@690 ($generated@@368 $generated@@664))) (and (= $generated@@663 $generated@@678) (= $generated@@662 $generated@@670))) (and (and (= $generated@@661 $generated@@671) (= $generated@@660 $generated@@672)) (and (= $generated@@659 $generated@@690) (= (ControlFlow 0 5) 4)))) $generated@@695)))
(let (($generated@@712  (=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not ($generated@@0 ($generated@@282 ($generated@@11 true)))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (not ($generated@@0 ($generated@@282 ($generated@@11 true))))) (< ($generated@@164 15) ($generated@@324 (bvand $generated@@665 #x0000000f)))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@713  (=> (= $generated@@691 ($generated@@203 $generated@@692 $generated@@693 $generated@@60 false)) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 30) 5) $generated@@711) (=> (= (ControlFlow 0 30) 6) $generated@@710)) (=> (= (ControlFlow 0 30) 7) $generated@@709)) (=> (= (ControlFlow 0 30) 8) $generated@@708)) (=> (= (ControlFlow 0 30) 9) $generated@@707)) (=> (= (ControlFlow 0 30) 11) $generated@@706)) (=> (= (ControlFlow 0 30) 13) $generated@@705)) (=> (= (ControlFlow 0 30) 14) $generated@@704)) (=> (= (ControlFlow 0 30) 15) $generated@@703)) (=> (= (ControlFlow 0 30) 16) $generated@@702)) (=> (= (ControlFlow 0 30) 18) $generated@@701)) (=> (= (ControlFlow 0 30) 20) $generated@@700)) (=> (= (ControlFlow 0 30) 22) $generated@@699)) (=> (= (ControlFlow 0 30) 24) $generated@@698)) (=> (= (ControlFlow 0 30) 26) $generated@@697)) (=> (= (ControlFlow 0 30) 28) $generated@@696)) (=> (= (ControlFlow 0 30) 2) $generated@@712)))))
(let (($generated@@714  (=> (and (and ($generated@@286 $generated@@693) ($generated@@694 $generated@@693)) (and (<= ($generated@@164 0) $generated@@672) (= ($generated@@165 $generated@@670 ($generated@@164 2)) ($generated@@164 0)))) (=> (and (and (and (<= ($generated@@166 (- 0.0 4.0)) $generated@@678) (< $generated@@678 300.0)) (= 0 $generated@@667)) (and (= 2 $generated@@161) (= (ControlFlow 0 31) 30))) $generated@@713))))
$generated@@714)))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 26) (- 27))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@46 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@47 (Int) Int)
(declare-fun $generated@@48 (Int Int) Int)
(declare-fun $generated@@49 (Real) Real)
(declare-fun $generated@@59 (T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T T@T) T@T)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@U T@U) T@U)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@U T@U T@U) T@U)
(declare-fun $generated@@72 (T@T T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@178 (T@U) (_ BitVec 67))
(declare-fun $generated@@179 (T@U) (_ BitVec 32))
(declare-fun $generated@@180 (T@U) (_ BitVec 7))
(declare-fun $generated@@181 () T@T)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@184 ((_ BitVec 67)) T@U)
(declare-fun $generated@@185 ((_ BitVec 32)) T@U)
(declare-fun $generated@@186 ((_ BitVec 7)) T@U)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 (T@T T@U) T@U)
(declare-fun $generated@@207 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@50 Int) ($generated@@51 Int) ($generated@@52 Real) ($generated@@53 Int) ($generated@@54 Real) ($generated@@55 (_ BitVec 67)) ($generated@@56 (_ BitVec 32)) ($generated@@57 (_ BitVec 7)) ($generated@@58 Int) ) (!  (=> (or ($generated@@46 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58) (and (not (= 1 $generated@@44)) (and (and (and (<= ($generated@@47 0) $generated@@51) (= ($generated@@48 $generated@@53 ($generated@@47 2)) ($generated@@47 0))) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@54) (< $generated@@54 300.0))) (= 0 $generated@@58)))) true)
 :pattern ( ($generated@@45 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@76 $generated@@77)) 6)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@68 ($generated@@63 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@63 $generated@@78 $generated@@79))
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@69 ($generated@@63 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@63 $generated@@80 $generated@@81))
))) (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (let (($generated@@84 ($generated@@69 (type $generated@@82))))
(= (type ($generated@@67 $generated@@82 $generated@@83)) $generated@@84))
 :pattern ( ($generated@@67 $generated@@82 $generated@@83))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 (type $generated@@87)))
(let (($generated@@89 (type $generated@@86)))
(= (type ($generated@@70 $generated@@85 $generated@@86 $generated@@87)) ($generated@@63 $generated@@89 $generated@@88))))
 :pattern ( ($generated@@70 $generated@@85 $generated@@86 $generated@@87))
))) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@69 (type $generated@@90))))
 (=> (= (type $generated@@92) $generated@@93) (= ($generated@@67 ($generated@@70 $generated@@90 $generated@@91 $generated@@92) $generated@@91) $generated@@92)))
 :weight 0
))) (and (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (or (= $generated@@96 $generated@@97) (= ($generated@@67 ($generated@@70 $generated@@95 $generated@@96 $generated@@94) $generated@@97) ($generated@@67 $generated@@95 $generated@@97)))
 :weight 0
)) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or true (= ($generated@@67 ($generated@@70 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@67 $generated@@99 $generated@@101)))
 :weight 0
)))) (forall (($generated@@102 T@T) ) (= ($generated@@1 ($generated@@65 $generated@@102)) 7))) (forall (($generated@@103 T@T) ) (! (= ($generated@@61 ($generated@@65 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@65 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@61 (type $generated@@105))))
(= (type ($generated@@66 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@66 $generated@@104 $generated@@105))
))) (= ($generated@@1 $generated@@64) 8)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= (type ($generated@@71 $generated@@107 $generated@@108 $generated@@109)) $generated@@64)
 :pattern ( ($generated@@71 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@61 (type $generated@@111))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@66 ($generated@@71 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@66 ($generated@@71 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@66 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@66 ($generated@@71 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@66 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@62) 9)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@122 $generated@@123)) 10))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@124 $generated@@125)) $generated@@124)
 :pattern ( ($generated@@72 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (! (= ($generated@@74 ($generated@@72 $generated@@126 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@72 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@74 (type $generated@@128))))
(= (type ($generated@@59 $generated@@128 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@59 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(let (($generated@@137 (type $generated@@133)))
(= (type ($generated@@75 $generated@@132 $generated@@133 $generated@@134 $generated@@135)) ($generated@@72 $generated@@137 $generated@@136))))
 :pattern ( ($generated@@75 $generated@@132 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@74 (type $generated@@138))))
 (=> (= (type $generated@@141) $generated@@142) (= ($generated@@59 ($generated@@75 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@139 $generated@@140) $generated@@141)))
 :weight 0
))) (and (and (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@59 ($generated@@75 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@59 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@59 ($generated@@75 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@59 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or true (= ($generated@@59 ($generated@@75 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@59 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ) (! (= (type ($generated@@60 $generated@@161 $generated@@162 $generated@@163 $generated@@164)) ($generated@@72 $generated@@62 $generated@@4))
 :pattern ( ($generated@@60 $generated@@161 $generated@@162 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Bool) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (let (($generated@@171 ($generated@@61 (type $generated@@170))))
 (=> (and (and (and (and (= (type $generated@@165) $generated@@62) (= (type $generated@@166) ($generated@@63 $generated@@62 $generated@@64))) (= (type $generated@@167) ($generated@@65 $generated@@4))) (= (type $generated@@169) $generated@@62)) (= (type $generated@@170) ($generated@@65 $generated@@171))) (= ($generated@@0 ($generated@@59 ($generated@@60 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))  (=> (and (not (= $generated@@169 $generated@@165)) ($generated@@0 ($generated@@66 ($generated@@67 $generated@@166 $generated@@169) $generated@@167))) $generated@@168))))
 :pattern ( ($generated@@59 ($generated@@60 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 Int) ) (! (= ($generated@@47 $generated@@172) $generated@@172)
 :pattern ( ($generated@@47 $generated@@172))
)))
(assert (forall (($generated@@173 Real) ) (! (= ($generated@@49 $generated@@173) $generated@@173)
 :pattern ( ($generated@@49 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! (let (($generated@@176 (type $generated@@175)))
(= (type ($generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@174 $generated@@177) $generated@@177)
 :pattern ( ($generated@@174 $generated@@177))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@187 (_ BitVec 67)) ) (! (= ($generated@@178 ($generated@@184 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@184 $generated@@187))
)) (= ($generated@@1 $generated@@181) 11)) (forall (($generated@@188 T@U) ) (!  (=> (= (type $generated@@188) $generated@@181) (= ($generated@@184 ($generated@@178 $generated@@188)) $generated@@188))
 :pattern ( ($generated@@178 $generated@@188))
))) (forall (($generated@@189 (_ BitVec 67)) ) (! (= (type ($generated@@184 $generated@@189)) $generated@@181)
 :pattern ( ($generated@@184 $generated@@189))
))) (forall (($generated@@190 (_ BitVec 32)) ) (! (= ($generated@@179 ($generated@@185 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@185 $generated@@190))
))) (= ($generated@@1 $generated@@182) 12)) (forall (($generated@@191 T@U) ) (!  (=> (= (type $generated@@191) $generated@@182) (= ($generated@@185 ($generated@@179 $generated@@191)) $generated@@191))
 :pattern ( ($generated@@179 $generated@@191))
))) (forall (($generated@@192 (_ BitVec 32)) ) (! (= (type ($generated@@185 $generated@@192)) $generated@@182)
 :pattern ( ($generated@@185 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 7)) ) (! (= ($generated@@180 ($generated@@186 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@186 $generated@@193))
))) (= ($generated@@1 $generated@@183) 13)) (forall (($generated@@194 T@U) ) (!  (=> (= (type $generated@@194) $generated@@183) (= ($generated@@186 ($generated@@180 $generated@@194)) $generated@@194))
 :pattern ( ($generated@@180 $generated@@194))
))) (forall (($generated@@195 (_ BitVec 7)) ) (! (= (type ($generated@@186 $generated@@195)) $generated@@183)
 :pattern ( ($generated@@186 $generated@@195))
))))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@196 Int) ($generated@@197 Int) ($generated@@198 Real) ($generated@@199 Int) ($generated@@200 Real) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 Int) ) (!  (=> (and (and (and (= (type $generated@@201) $generated@@181) (= (type $generated@@202) $generated@@182)) (= (type $generated@@203) $generated@@183)) (or ($generated@@46 ($generated@@47 $generated@@196) ($generated@@47 $generated@@197) ($generated@@49 $generated@@198) ($generated@@47 $generated@@199) ($generated@@49 $generated@@200) ($generated@@178 ($generated@@174 $generated@@201)) ($generated@@179 ($generated@@174 $generated@@202)) ($generated@@180 ($generated@@174 $generated@@203)) ($generated@@47 $generated@@204)) (and (not (= 1 $generated@@44)) (and (and (and (<= ($generated@@47 0) $generated@@197) (= ($generated@@48 $generated@@199 ($generated@@47 2)) ($generated@@47 0))) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@200) (< $generated@@200 300.0))) (= 0 $generated@@204))))) (= ($generated@@45 ($generated@@47 $generated@@196) ($generated@@47 $generated@@197) ($generated@@49 $generated@@198) ($generated@@47 $generated@@199) ($generated@@49 $generated@@200) ($generated@@178 ($generated@@174 $generated@@201)) ($generated@@179 ($generated@@174 $generated@@202)) ($generated@@180 ($generated@@174 $generated@@203)) ($generated@@47 $generated@@204)) ($generated@@0 ($generated@@174 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@47 $generated@@196) ($generated@@47 $generated@@197) ($generated@@49 $generated@@198) ($generated@@47 $generated@@199) ($generated@@49 $generated@@200) ($generated@@178 ($generated@@174 $generated@@201)) ($generated@@179 ($generated@@174 $generated@@202)) ($generated@@180 ($generated@@174 $generated@@203)) ($generated@@47 $generated@@204)))
))))
(assert  (and (and (= ($generated@@1 $generated@@207) 14) (forall (($generated@@208 T@U) ) (! (= (type ($generated@@205 $generated@@208)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@208))
))) (forall (($generated@@209 T@T) ($generated@@210 T@U) ) (! (= (type ($generated@@206 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@206 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ) (! (let (($generated@@212 (type $generated@@211)))
(= ($generated@@206 $generated@@212 ($generated@@205 $generated@@211)) $generated@@211))
 :pattern ( ($generated@@205 $generated@@211))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@213 Int) ($generated@@214 Int) ($generated@@215 Real) ($generated@@216 Int) ($generated@@217 Real) ($generated@@218 (_ BitVec 67)) ($generated@@219 (_ BitVec 32)) ($generated@@220 (_ BitVec 7)) ($generated@@221 Int) ) (!  (=> (or ($generated@@46 $generated@@213 $generated@@214 $generated@@215 $generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221) (and (not (= 1 $generated@@44)) (and (and (and (<= ($generated@@47 0) $generated@@214) (= ($generated@@48 $generated@@216 ($generated@@47 2)) ($generated@@47 0))) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@217) (< $generated@@217 300.0))) (= 0 $generated@@221)))) (= ($generated@@45 $generated@@213 $generated@@214 $generated@@215 $generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221) ($generated@@0 ($generated@@174 ($generated@@11 true)))))
 :pattern ( ($generated@@45 $generated@@213 $generated@@214 $generated@@215 $generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 Int) ($generated@@223 Int) ) (! (= ($generated@@48 $generated@@222 $generated@@223) (mod $generated@@222 $generated@@223))
 :pattern ( ($generated@@48 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 Int) ) (! (= ($generated@@205 ($generated@@8 ($generated@@47 $generated@@224))) ($generated@@174 ($generated@@205 ($generated@@8 $generated@@224))))
 :pattern ( ($generated@@205 ($generated@@8 ($generated@@47 $generated@@224))))
)))
(assert (forall (($generated@@225 Real) ) (! (= ($generated@@205 ($generated@@9 ($generated@@49 $generated@@225))) ($generated@@174 ($generated@@205 ($generated@@9 $generated@@225))))
 :pattern ( ($generated@@205 ($generated@@9 ($generated@@49 $generated@@225))))
)))
(assert (forall (($generated@@226 T@U) ) (! (= ($generated@@205 ($generated@@174 $generated@@226)) ($generated@@174 ($generated@@205 $generated@@226)))
 :pattern ( ($generated@@205 ($generated@@174 $generated@@226)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@227 () Int)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 () Real)
(declare-fun $generated@@230 () Int)
(declare-fun $generated@@231 () Real)
(declare-fun $generated@@232 () (_ BitVec 67))
(declare-fun $generated@@233 () (_ BitVec 32))
(declare-fun $generated@@234 () (_ BitVec 7))
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () (_ BitVec 32))
(declare-fun $generated@@237 () (_ BitVec 67))
(declare-fun $generated@@238 () (_ BitVec 7))
(declare-fun $generated@@239 () (_ BitVec 7))
(declare-fun $generated@@240 () (_ BitVec 7))
(declare-fun $generated@@241 () (_ BitVec 32))
(declare-fun $generated@@242 () (_ BitVec 32))
(declare-fun $generated@@243 () (_ BitVec 67))
(declare-fun $generated@@244 () (_ BitVec 67))
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@245) ($generated@@72 $generated@@62 $generated@@4)) (= (type $generated@@246) $generated@@62)) (= (type $generated@@247) ($generated@@63 $generated@@62 $generated@@64))) (= (type $generated@@248) ($generated@@65 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@251  (=> (= (ControlFlow 0 4) (- 0 3)) (=> ($generated@@46 $generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233 $generated@@234 $generated@@235) (or ($generated@@45 $generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233 $generated@@234 $generated@@235) ($generated@@0 ($generated@@174 ($generated@@11 true))))))))
(let (($generated@@252  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (=> (and (and (= $generated@@234 #b0000000) (= $generated@@233 $generated@@236)) (and (= $generated@@232 $generated@@237) (= (ControlFlow 0 19) 4))) $generated@@251))))
(let (($generated@@253  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (=> (and (and (= $generated@@234 $generated@@238) (= $generated@@233 $generated@@236)) (and (= $generated@@232 $generated@@237) (= (ControlFlow 0 18) 4))) $generated@@251))))
(let (($generated@@254  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (bvult $generated@@236 #x00000080)) (=> (bvult $generated@@236 #x00000080) (=> (= $generated@@239 ((_ extract 6 0) $generated@@236)) (=> (and (and (= $generated@@234 $generated@@239) (= $generated@@233 $generated@@236)) (and (= $generated@@232 $generated@@237) (= (ControlFlow 0 16) 4))) $generated@@251)))))))
(let (($generated@@255  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (and (=> (= (ControlFlow 0 14) (- 0 15)) (bvult $generated@@237 #b0000000000000000000000000000000000000000000000000000000000010000000)) (=> (bvult $generated@@237 #b0000000000000000000000000000000000000000000000000000000000010000000) (=> (= $generated@@240 ((_ extract 6 0) $generated@@237)) (=> (and (and (= $generated@@234 $generated@@240) (= $generated@@233 $generated@@236)) (and (= $generated@@232 $generated@@237) (= (ControlFlow 0 14) 4))) $generated@@251)))))))
(let (($generated@@256  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (=> (and (and (= $generated@@234 $generated@@238) (= $generated@@233 #x00000000)) (and (= $generated@@232 $generated@@237) (= (ControlFlow 0 13) 4))) $generated@@251))))
(let (($generated@@257  (=> (and ($generated@@0 ($generated@@174 ($generated@@11 true))) (= $generated@@241 (concat #b0000000000000000000000000 $generated@@238))) (=> (and (and (= $generated@@234 $generated@@238) (= $generated@@233 $generated@@241)) (and (= $generated@@232 $generated@@237) (= (ControlFlow 0 12) 4))) $generated@@251))))
(let (($generated@@258  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (=> (and (and (= $generated@@234 $generated@@238) (= $generated@@233 $generated@@236)) (and (= $generated@@232 $generated@@237) (= (ControlFlow 0 11) 4))) $generated@@251))))
(let (($generated@@259  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (bvult $generated@@237 #b0000000000000000000000000000000000100000000000000000000000000000000)) (=> (bvult $generated@@237 #b0000000000000000000000000000000000100000000000000000000000000000000) (=> (= $generated@@242 ((_ extract 31 0) $generated@@237)) (=> (and (and (= $generated@@234 $generated@@238) (= $generated@@233 $generated@@242)) (and (= $generated@@232 $generated@@237) (= (ControlFlow 0 9) 4))) $generated@@251)))))))
(let (($generated@@260  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (=> (and (and (= $generated@@234 $generated@@238) (= $generated@@233 $generated@@236)) (and (= $generated@@232 #b0000000000000000000000000000000000000000000000000000000000000000000) (= (ControlFlow 0 8) 4))) $generated@@251))))
(let (($generated@@261  (=> (and ($generated@@0 ($generated@@174 ($generated@@11 true))) (= $generated@@243 (concat #b000000000000000000000000000000000000000000000000000000000000 $generated@@238))) (=> (and (and (= $generated@@234 $generated@@238) (= $generated@@233 $generated@@236)) (and (= $generated@@232 $generated@@243) (= (ControlFlow 0 7) 4))) $generated@@251))))
(let (($generated@@262  (=> (and ($generated@@0 ($generated@@174 ($generated@@11 true))) (= $generated@@244 (concat #b00000000000000000000000000000000000 $generated@@236))) (=> (and (and (= $generated@@234 $generated@@238) (= $generated@@233 $generated@@236)) (and (= $generated@@232 $generated@@244) (= (ControlFlow 0 6) 4))) $generated@@251))))
(let (($generated@@263  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (=> (and (and (= $generated@@234 $generated@@238) (= $generated@@233 $generated@@236)) (and (= $generated@@232 $generated@@237) (= (ControlFlow 0 5) 4))) $generated@@251))))
(let (($generated@@264  (=> (and (and (and (and (and (and (and (and (and (and (and (and (not ($generated@@0 ($generated@@174 ($generated@@11 true)))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@265  (=> (= $generated@@245 ($generated@@60 $generated@@246 $generated@@247 $generated@@248 false)) (and (and (and (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 20) 5) $generated@@263) (=> (= (ControlFlow 0 20) 6) $generated@@262)) (=> (= (ControlFlow 0 20) 7) $generated@@261)) (=> (= (ControlFlow 0 20) 8) $generated@@260)) (=> (= (ControlFlow 0 20) 9) $generated@@259)) (=> (= (ControlFlow 0 20) 11) $generated@@258)) (=> (= (ControlFlow 0 20) 12) $generated@@257)) (=> (= (ControlFlow 0 20) 13) $generated@@256)) (=> (= (ControlFlow 0 20) 14) $generated@@255)) (=> (= (ControlFlow 0 20) 16) $generated@@254)) (=> (= (ControlFlow 0 20) 18) $generated@@253)) (=> (= (ControlFlow 0 20) 19) $generated@@252)) (=> (= (ControlFlow 0 20) 2) $generated@@264)))))
(let (($generated@@266  (=> (and (and ($generated@@249 $generated@@247) ($generated@@250 $generated@@247)) (and (<= ($generated@@47 0) $generated@@228) (= ($generated@@48 $generated@@230 ($generated@@47 2)) ($generated@@47 0)))) (=> (and (and (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@231) (< $generated@@231 300.0)) (= 0 $generated@@235)) (and (= 2 $generated@@44) (= (ControlFlow 0 21) 20))) $generated@@265))))
$generated@@266)))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 9) (- 10))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 14) (- 15))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 16) (- 17))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@46 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@47 (Int) Int)
(declare-fun $generated@@48 (Int Int) Int)
(declare-fun $generated@@49 (Real) Real)
(declare-fun $generated@@59 (T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T T@T) T@T)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@U T@U) T@U)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@U T@U T@U) T@U)
(declare-fun $generated@@72 (T@T T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@178 (T@U) (_ BitVec 67))
(declare-fun $generated@@179 (T@U) (_ BitVec 32))
(declare-fun $generated@@180 (T@U) (_ BitVec 7))
(declare-fun $generated@@181 () T@T)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@184 ((_ BitVec 67)) T@U)
(declare-fun $generated@@185 ((_ BitVec 32)) T@U)
(declare-fun $generated@@186 ((_ BitVec 7)) T@U)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 (T@T T@U) T@U)
(declare-fun $generated@@207 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@50 Int) ($generated@@51 Int) ($generated@@52 Real) ($generated@@53 Int) ($generated@@54 Real) ($generated@@55 (_ BitVec 67)) ($generated@@56 (_ BitVec 32)) ($generated@@57 (_ BitVec 7)) ($generated@@58 Int) ) (!  (=> (or ($generated@@46 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58) (and (not (= 1 $generated@@44)) (and (and (and (<= ($generated@@47 0) $generated@@51) (= ($generated@@48 $generated@@53 ($generated@@47 2)) ($generated@@47 0))) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@54) (< $generated@@54 300.0))) (= 0 $generated@@58)))) true)
 :pattern ( ($generated@@45 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@76 $generated@@77)) 6)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@68 ($generated@@63 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@63 $generated@@78 $generated@@79))
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@69 ($generated@@63 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@63 $generated@@80 $generated@@81))
))) (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (let (($generated@@84 ($generated@@69 (type $generated@@82))))
(= (type ($generated@@67 $generated@@82 $generated@@83)) $generated@@84))
 :pattern ( ($generated@@67 $generated@@82 $generated@@83))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 (type $generated@@87)))
(let (($generated@@89 (type $generated@@86)))
(= (type ($generated@@70 $generated@@85 $generated@@86 $generated@@87)) ($generated@@63 $generated@@89 $generated@@88))))
 :pattern ( ($generated@@70 $generated@@85 $generated@@86 $generated@@87))
))) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@69 (type $generated@@90))))
 (=> (= (type $generated@@92) $generated@@93) (= ($generated@@67 ($generated@@70 $generated@@90 $generated@@91 $generated@@92) $generated@@91) $generated@@92)))
 :weight 0
))) (and (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (or (= $generated@@96 $generated@@97) (= ($generated@@67 ($generated@@70 $generated@@95 $generated@@96 $generated@@94) $generated@@97) ($generated@@67 $generated@@95 $generated@@97)))
 :weight 0
)) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or true (= ($generated@@67 ($generated@@70 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@67 $generated@@99 $generated@@101)))
 :weight 0
)))) (forall (($generated@@102 T@T) ) (= ($generated@@1 ($generated@@65 $generated@@102)) 7))) (forall (($generated@@103 T@T) ) (! (= ($generated@@61 ($generated@@65 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@65 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@61 (type $generated@@105))))
(= (type ($generated@@66 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@66 $generated@@104 $generated@@105))
))) (= ($generated@@1 $generated@@64) 8)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= (type ($generated@@71 $generated@@107 $generated@@108 $generated@@109)) $generated@@64)
 :pattern ( ($generated@@71 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@61 (type $generated@@111))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@66 ($generated@@71 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@66 ($generated@@71 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@66 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@66 ($generated@@71 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@66 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@62) 9)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@122 $generated@@123)) 10))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@124 $generated@@125)) $generated@@124)
 :pattern ( ($generated@@72 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (! (= ($generated@@74 ($generated@@72 $generated@@126 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@72 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@74 (type $generated@@128))))
(= (type ($generated@@59 $generated@@128 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@59 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(let (($generated@@137 (type $generated@@133)))
(= (type ($generated@@75 $generated@@132 $generated@@133 $generated@@134 $generated@@135)) ($generated@@72 $generated@@137 $generated@@136))))
 :pattern ( ($generated@@75 $generated@@132 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@74 (type $generated@@138))))
 (=> (= (type $generated@@141) $generated@@142) (= ($generated@@59 ($generated@@75 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@139 $generated@@140) $generated@@141)))
 :weight 0
))) (and (and (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@59 ($generated@@75 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@59 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@59 ($generated@@75 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@59 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or true (= ($generated@@59 ($generated@@75 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@59 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ) (! (= (type ($generated@@60 $generated@@161 $generated@@162 $generated@@163 $generated@@164)) ($generated@@72 $generated@@62 $generated@@4))
 :pattern ( ($generated@@60 $generated@@161 $generated@@162 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Bool) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (let (($generated@@171 ($generated@@61 (type $generated@@170))))
 (=> (and (and (and (and (= (type $generated@@165) $generated@@62) (= (type $generated@@166) ($generated@@63 $generated@@62 $generated@@64))) (= (type $generated@@167) ($generated@@65 $generated@@4))) (= (type $generated@@169) $generated@@62)) (= (type $generated@@170) ($generated@@65 $generated@@171))) (= ($generated@@0 ($generated@@59 ($generated@@60 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))  (=> (and (not (= $generated@@169 $generated@@165)) ($generated@@0 ($generated@@66 ($generated@@67 $generated@@166 $generated@@169) $generated@@167))) $generated@@168))))
 :pattern ( ($generated@@59 ($generated@@60 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 Int) ) (! (= ($generated@@47 $generated@@172) $generated@@172)
 :pattern ( ($generated@@47 $generated@@172))
)))
(assert (forall (($generated@@173 Real) ) (! (= ($generated@@49 $generated@@173) $generated@@173)
 :pattern ( ($generated@@49 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! (let (($generated@@176 (type $generated@@175)))
(= (type ($generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@174 $generated@@177) $generated@@177)
 :pattern ( ($generated@@174 $generated@@177))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@187 (_ BitVec 67)) ) (! (= ($generated@@178 ($generated@@184 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@184 $generated@@187))
)) (= ($generated@@1 $generated@@181) 11)) (forall (($generated@@188 T@U) ) (!  (=> (= (type $generated@@188) $generated@@181) (= ($generated@@184 ($generated@@178 $generated@@188)) $generated@@188))
 :pattern ( ($generated@@178 $generated@@188))
))) (forall (($generated@@189 (_ BitVec 67)) ) (! (= (type ($generated@@184 $generated@@189)) $generated@@181)
 :pattern ( ($generated@@184 $generated@@189))
))) (forall (($generated@@190 (_ BitVec 32)) ) (! (= ($generated@@179 ($generated@@185 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@185 $generated@@190))
))) (= ($generated@@1 $generated@@182) 12)) (forall (($generated@@191 T@U) ) (!  (=> (= (type $generated@@191) $generated@@182) (= ($generated@@185 ($generated@@179 $generated@@191)) $generated@@191))
 :pattern ( ($generated@@179 $generated@@191))
))) (forall (($generated@@192 (_ BitVec 32)) ) (! (= (type ($generated@@185 $generated@@192)) $generated@@182)
 :pattern ( ($generated@@185 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 7)) ) (! (= ($generated@@180 ($generated@@186 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@186 $generated@@193))
))) (= ($generated@@1 $generated@@183) 13)) (forall (($generated@@194 T@U) ) (!  (=> (= (type $generated@@194) $generated@@183) (= ($generated@@186 ($generated@@180 $generated@@194)) $generated@@194))
 :pattern ( ($generated@@180 $generated@@194))
))) (forall (($generated@@195 (_ BitVec 7)) ) (! (= (type ($generated@@186 $generated@@195)) $generated@@183)
 :pattern ( ($generated@@186 $generated@@195))
))))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@196 Int) ($generated@@197 Int) ($generated@@198 Real) ($generated@@199 Int) ($generated@@200 Real) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 Int) ) (!  (=> (and (and (and (= (type $generated@@201) $generated@@181) (= (type $generated@@202) $generated@@182)) (= (type $generated@@203) $generated@@183)) (or ($generated@@46 ($generated@@47 $generated@@196) ($generated@@47 $generated@@197) ($generated@@49 $generated@@198) ($generated@@47 $generated@@199) ($generated@@49 $generated@@200) ($generated@@178 ($generated@@174 $generated@@201)) ($generated@@179 ($generated@@174 $generated@@202)) ($generated@@180 ($generated@@174 $generated@@203)) ($generated@@47 $generated@@204)) (and (not (= 1 $generated@@44)) (and (and (and (<= ($generated@@47 0) $generated@@197) (= ($generated@@48 $generated@@199 ($generated@@47 2)) ($generated@@47 0))) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@200) (< $generated@@200 300.0))) (= 0 $generated@@204))))) (= ($generated@@45 ($generated@@47 $generated@@196) ($generated@@47 $generated@@197) ($generated@@49 $generated@@198) ($generated@@47 $generated@@199) ($generated@@49 $generated@@200) ($generated@@178 ($generated@@174 $generated@@201)) ($generated@@179 ($generated@@174 $generated@@202)) ($generated@@180 ($generated@@174 $generated@@203)) ($generated@@47 $generated@@204)) ($generated@@0 ($generated@@174 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@47 $generated@@196) ($generated@@47 $generated@@197) ($generated@@49 $generated@@198) ($generated@@47 $generated@@199) ($generated@@49 $generated@@200) ($generated@@178 ($generated@@174 $generated@@201)) ($generated@@179 ($generated@@174 $generated@@202)) ($generated@@180 ($generated@@174 $generated@@203)) ($generated@@47 $generated@@204)))
))))
(assert  (and (and (= ($generated@@1 $generated@@207) 14) (forall (($generated@@208 T@U) ) (! (= (type ($generated@@205 $generated@@208)) $generated@@207)
 :pattern ( ($generated@@205 $generated@@208))
))) (forall (($generated@@209 T@T) ($generated@@210 T@U) ) (! (= (type ($generated@@206 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@206 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ) (! (let (($generated@@212 (type $generated@@211)))
(= ($generated@@206 $generated@@212 ($generated@@205 $generated@@211)) $generated@@211))
 :pattern ( ($generated@@205 $generated@@211))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@213 Int) ($generated@@214 Int) ($generated@@215 Real) ($generated@@216 Int) ($generated@@217 Real) ($generated@@218 (_ BitVec 67)) ($generated@@219 (_ BitVec 32)) ($generated@@220 (_ BitVec 7)) ($generated@@221 Int) ) (!  (=> (or ($generated@@46 $generated@@213 $generated@@214 $generated@@215 $generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221) (and (not (= 1 $generated@@44)) (and (and (and (<= ($generated@@47 0) $generated@@214) (= ($generated@@48 $generated@@216 ($generated@@47 2)) ($generated@@47 0))) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@217) (< $generated@@217 300.0))) (= 0 $generated@@221)))) (= ($generated@@45 $generated@@213 $generated@@214 $generated@@215 $generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221) ($generated@@0 ($generated@@174 ($generated@@11 true)))))
 :pattern ( ($generated@@45 $generated@@213 $generated@@214 $generated@@215 $generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 Int) ($generated@@223 Int) ) (! (= ($generated@@48 $generated@@222 $generated@@223) (mod $generated@@222 $generated@@223))
 :pattern ( ($generated@@48 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 Int) ) (! (= ($generated@@205 ($generated@@8 ($generated@@47 $generated@@224))) ($generated@@174 ($generated@@205 ($generated@@8 $generated@@224))))
 :pattern ( ($generated@@205 ($generated@@8 ($generated@@47 $generated@@224))))
)))
(assert (forall (($generated@@225 Real) ) (! (= ($generated@@205 ($generated@@9 ($generated@@49 $generated@@225))) ($generated@@174 ($generated@@205 ($generated@@9 $generated@@225))))
 :pattern ( ($generated@@205 ($generated@@9 ($generated@@49 $generated@@225))))
)))
(assert (forall (($generated@@226 T@U) ) (! (= ($generated@@205 ($generated@@174 $generated@@226)) ($generated@@174 ($generated@@205 $generated@@226)))
 :pattern ( ($generated@@205 ($generated@@174 $generated@@226)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@227 () Int)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 () Real)
(declare-fun $generated@@230 () Int)
(declare-fun $generated@@231 () Real)
(declare-fun $generated@@232 () (_ BitVec 67))
(declare-fun $generated@@233 () (_ BitVec 32))
(declare-fun $generated@@234 () (_ BitVec 7))
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@237) ($generated@@72 $generated@@62 $generated@@4)) (= (type $generated@@238) $generated@@62)) (= (type $generated@@239) ($generated@@63 $generated@@62 $generated@@64))) (= (type $generated@@240) ($generated@@65 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@243  (=> (= (ControlFlow 0 4) (- 0 3)) (=> ($generated@@46 $generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233 $generated@@234 $generated@@235) (or ($generated@@45 $generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233 $generated@@234 $generated@@235) ($generated@@0 ($generated@@174 ($generated@@11 true))))))))
(let (($generated@@244  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (=> (and (= $generated@@235 $generated@@236) (= (ControlFlow 0 11) 4)) $generated@@243))))
(let (($generated@@245  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (bvult $generated@@234 #b0000001)) (=> (bvult $generated@@234 #b0000001) (=> (and (= $generated@@235 0) (= (ControlFlow 0 9) 4)) $generated@@243))))))
(let (($generated@@246  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (bvult $generated@@233 #x00000001)) (=> (bvult $generated@@233 #x00000001) (=> (and (= $generated@@235 0) (= (ControlFlow 0 7) 4)) $generated@@243))))))
(let (($generated@@247  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (bvult $generated@@232 #b0000000000000000000000000000000000000000000000000000000000000000001)) (=> (bvult $generated@@232 #b0000000000000000000000000000000000000000000000000000000000000000001) (=> (and (= $generated@@235 0) (= (ControlFlow 0 5) 4)) $generated@@243))))))
(let (($generated@@248  (=> (and (and (and (and (not ($generated@@0 ($generated@@174 ($generated@@11 true)))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@249  (=> (= $generated@@237 ($generated@@60 $generated@@238 $generated@@239 $generated@@240 false)) (and (and (and (and (=> (= (ControlFlow 0 12) 5) $generated@@247) (=> (= (ControlFlow 0 12) 7) $generated@@246)) (=> (= (ControlFlow 0 12) 9) $generated@@245)) (=> (= (ControlFlow 0 12) 11) $generated@@244)) (=> (= (ControlFlow 0 12) 2) $generated@@248)))))
(let (($generated@@250  (=> (and (and ($generated@@241 $generated@@239) ($generated@@242 $generated@@239)) (and (<= ($generated@@47 0) $generated@@228) (= ($generated@@48 $generated@@230 ($generated@@47 2)) ($generated@@47 0)))) (=> (and (and (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@231) (< $generated@@231 300.0)) (= 0 $generated@@236)) (and (= 2 $generated@@44) (= (ControlFlow 0 13) 12))) $generated@@249))))
$generated@@250)))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 6))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 7) (- 8))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 9) (- 10))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@46 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@47 (Int) Int)
(declare-fun $generated@@48 (Int Int) Int)
(declare-fun $generated@@49 (Real) Real)
(declare-fun $generated@@59 (T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T T@T) T@T)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@U T@U) T@U)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@U T@U T@U) T@U)
(declare-fun $generated@@72 (T@T T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@178 (T@U) (_ BitVec 67))
(declare-fun $generated@@179 (T@U) (_ BitVec 32))
(declare-fun $generated@@180 (T@U) (_ BitVec 7))
(declare-fun $generated@@181 () T@T)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@184 ((_ BitVec 67)) T@U)
(declare-fun $generated@@185 ((_ BitVec 32)) T@U)
(declare-fun $generated@@186 ((_ BitVec 7)) T@U)
(declare-fun $generated@@205 ((_ BitVec 7)) Int)
(declare-fun $generated@@207 ((_ BitVec 32)) Int)
(declare-fun $generated@@209 ((_ BitVec 67)) Int)
(declare-fun $generated@@211 (Int) Real)
(declare-fun $generated@@213 (T@U) T@U)
(declare-fun $generated@@214 (T@T T@U) T@U)
(declare-fun $generated@@215 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@50 Int) ($generated@@51 Int) ($generated@@52 Real) ($generated@@53 Int) ($generated@@54 Real) ($generated@@55 (_ BitVec 67)) ($generated@@56 (_ BitVec 32)) ($generated@@57 (_ BitVec 7)) ($generated@@58 Int) ) (!  (=> (or ($generated@@46 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58) (and (not (= 1 $generated@@44)) (and (and (and (<= ($generated@@47 0) $generated@@51) (= ($generated@@48 $generated@@53 ($generated@@47 2)) ($generated@@47 0))) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@54) (< $generated@@54 300.0))) (= 0 $generated@@58)))) true)
 :pattern ( ($generated@@45 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@76 $generated@@77)) 6)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@68 ($generated@@63 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@63 $generated@@78 $generated@@79))
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@69 ($generated@@63 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@63 $generated@@80 $generated@@81))
))) (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (let (($generated@@84 ($generated@@69 (type $generated@@82))))
(= (type ($generated@@67 $generated@@82 $generated@@83)) $generated@@84))
 :pattern ( ($generated@@67 $generated@@82 $generated@@83))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 (type $generated@@87)))
(let (($generated@@89 (type $generated@@86)))
(= (type ($generated@@70 $generated@@85 $generated@@86 $generated@@87)) ($generated@@63 $generated@@89 $generated@@88))))
 :pattern ( ($generated@@70 $generated@@85 $generated@@86 $generated@@87))
))) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@69 (type $generated@@90))))
 (=> (= (type $generated@@92) $generated@@93) (= ($generated@@67 ($generated@@70 $generated@@90 $generated@@91 $generated@@92) $generated@@91) $generated@@92)))
 :weight 0
))) (and (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (or (= $generated@@96 $generated@@97) (= ($generated@@67 ($generated@@70 $generated@@95 $generated@@96 $generated@@94) $generated@@97) ($generated@@67 $generated@@95 $generated@@97)))
 :weight 0
)) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or true (= ($generated@@67 ($generated@@70 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@67 $generated@@99 $generated@@101)))
 :weight 0
)))) (forall (($generated@@102 T@T) ) (= ($generated@@1 ($generated@@65 $generated@@102)) 7))) (forall (($generated@@103 T@T) ) (! (= ($generated@@61 ($generated@@65 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@65 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@61 (type $generated@@105))))
(= (type ($generated@@66 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@66 $generated@@104 $generated@@105))
))) (= ($generated@@1 $generated@@64) 8)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= (type ($generated@@71 $generated@@107 $generated@@108 $generated@@109)) $generated@@64)
 :pattern ( ($generated@@71 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@61 (type $generated@@111))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@66 ($generated@@71 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@66 ($generated@@71 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@66 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@66 ($generated@@71 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@66 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@62) 9)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@122 $generated@@123)) 10))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@124 $generated@@125)) $generated@@124)
 :pattern ( ($generated@@72 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (! (= ($generated@@74 ($generated@@72 $generated@@126 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@72 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@74 (type $generated@@128))))
(= (type ($generated@@59 $generated@@128 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@59 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(let (($generated@@137 (type $generated@@133)))
(= (type ($generated@@75 $generated@@132 $generated@@133 $generated@@134 $generated@@135)) ($generated@@72 $generated@@137 $generated@@136))))
 :pattern ( ($generated@@75 $generated@@132 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@74 (type $generated@@138))))
 (=> (= (type $generated@@141) $generated@@142) (= ($generated@@59 ($generated@@75 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@139 $generated@@140) $generated@@141)))
 :weight 0
))) (and (and (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@59 ($generated@@75 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@59 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@59 ($generated@@75 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@59 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or true (= ($generated@@59 ($generated@@75 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@59 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ) (! (= (type ($generated@@60 $generated@@161 $generated@@162 $generated@@163 $generated@@164)) ($generated@@72 $generated@@62 $generated@@4))
 :pattern ( ($generated@@60 $generated@@161 $generated@@162 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Bool) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (let (($generated@@171 ($generated@@61 (type $generated@@170))))
 (=> (and (and (and (and (= (type $generated@@165) $generated@@62) (= (type $generated@@166) ($generated@@63 $generated@@62 $generated@@64))) (= (type $generated@@167) ($generated@@65 $generated@@4))) (= (type $generated@@169) $generated@@62)) (= (type $generated@@170) ($generated@@65 $generated@@171))) (= ($generated@@0 ($generated@@59 ($generated@@60 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))  (=> (and (not (= $generated@@169 $generated@@165)) ($generated@@0 ($generated@@66 ($generated@@67 $generated@@166 $generated@@169) $generated@@167))) $generated@@168))))
 :pattern ( ($generated@@59 ($generated@@60 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 Int) ) (! (= ($generated@@47 $generated@@172) $generated@@172)
 :pattern ( ($generated@@47 $generated@@172))
)))
(assert (forall (($generated@@173 Real) ) (! (= ($generated@@49 $generated@@173) $generated@@173)
 :pattern ( ($generated@@49 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! (let (($generated@@176 (type $generated@@175)))
(= (type ($generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@174 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@174 $generated@@177) $generated@@177)
 :pattern ( ($generated@@174 $generated@@177))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@187 (_ BitVec 67)) ) (! (= ($generated@@178 ($generated@@184 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@184 $generated@@187))
)) (= ($generated@@1 $generated@@181) 11)) (forall (($generated@@188 T@U) ) (!  (=> (= (type $generated@@188) $generated@@181) (= ($generated@@184 ($generated@@178 $generated@@188)) $generated@@188))
 :pattern ( ($generated@@178 $generated@@188))
))) (forall (($generated@@189 (_ BitVec 67)) ) (! (= (type ($generated@@184 $generated@@189)) $generated@@181)
 :pattern ( ($generated@@184 $generated@@189))
))) (forall (($generated@@190 (_ BitVec 32)) ) (! (= ($generated@@179 ($generated@@185 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@185 $generated@@190))
))) (= ($generated@@1 $generated@@182) 12)) (forall (($generated@@191 T@U) ) (!  (=> (= (type $generated@@191) $generated@@182) (= ($generated@@185 ($generated@@179 $generated@@191)) $generated@@191))
 :pattern ( ($generated@@179 $generated@@191))
))) (forall (($generated@@192 (_ BitVec 32)) ) (! (= (type ($generated@@185 $generated@@192)) $generated@@182)
 :pattern ( ($generated@@185 $generated@@192))
))) (forall (($generated@@193 (_ BitVec 7)) ) (! (= ($generated@@180 ($generated@@186 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@186 $generated@@193))
))) (= ($generated@@1 $generated@@183) 13)) (forall (($generated@@194 T@U) ) (!  (=> (= (type $generated@@194) $generated@@183) (= ($generated@@186 ($generated@@180 $generated@@194)) $generated@@194))
 :pattern ( ($generated@@180 $generated@@194))
))) (forall (($generated@@195 (_ BitVec 7)) ) (! (= (type ($generated@@186 $generated@@195)) $generated@@183)
 :pattern ( ($generated@@186 $generated@@195))
))))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@196 Int) ($generated@@197 Int) ($generated@@198 Real) ($generated@@199 Int) ($generated@@200 Real) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 Int) ) (!  (=> (and (and (and (= (type $generated@@201) $generated@@181) (= (type $generated@@202) $generated@@182)) (= (type $generated@@203) $generated@@183)) (or ($generated@@46 ($generated@@47 $generated@@196) ($generated@@47 $generated@@197) ($generated@@49 $generated@@198) ($generated@@47 $generated@@199) ($generated@@49 $generated@@200) ($generated@@178 ($generated@@174 $generated@@201)) ($generated@@179 ($generated@@174 $generated@@202)) ($generated@@180 ($generated@@174 $generated@@203)) ($generated@@47 $generated@@204)) (and (not (= 1 $generated@@44)) (and (and (and (<= ($generated@@47 0) $generated@@197) (= ($generated@@48 $generated@@199 ($generated@@47 2)) ($generated@@47 0))) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@200) (< $generated@@200 300.0))) (= 0 $generated@@204))))) (= ($generated@@45 ($generated@@47 $generated@@196) ($generated@@47 $generated@@197) ($generated@@49 $generated@@198) ($generated@@47 $generated@@199) ($generated@@49 $generated@@200) ($generated@@178 ($generated@@174 $generated@@201)) ($generated@@179 ($generated@@174 $generated@@202)) ($generated@@180 ($generated@@174 $generated@@203)) ($generated@@47 $generated@@204)) ($generated@@0 ($generated@@174 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@47 $generated@@196) ($generated@@47 $generated@@197) ($generated@@49 $generated@@198) ($generated@@47 $generated@@199) ($generated@@49 $generated@@200) ($generated@@178 ($generated@@174 $generated@@201)) ($generated@@179 ($generated@@174 $generated@@202)) ($generated@@180 ($generated@@174 $generated@@203)) ($generated@@47 $generated@@204)))
))))
(assert (forall (($generated@@206 (_ BitVec 7)) ) (!  (and (and (<= 0 ($generated@@205 $generated@@206)) (< ($generated@@205 $generated@@206) 128)) (= ($generated@@205 $generated@@206) (bv2int $generated@@206)))
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 (_ BitVec 32)) ) (!  (and (and (<= 0 ($generated@@207 $generated@@208)) (< ($generated@@207 $generated@@208) 4294967296)) (= ($generated@@207 $generated@@208) (bv2int $generated@@208)))
 :pattern ( ($generated@@207 $generated@@208))
)))
(assert (forall (($generated@@210 (_ BitVec 67)) ) (!  (and (and (<= 0 ($generated@@209 $generated@@210)) (< ($generated@@209 $generated@@210) 147573952589676412928)) (= ($generated@@209 $generated@@210) (bv2int $generated@@210)))
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 Int) ) (! (= ($generated@@211 $generated@@212) (to_real $generated@@212))
 :pattern ( ($generated@@211 $generated@@212))
)))
(assert  (and (and (= ($generated@@1 $generated@@215) 14) (forall (($generated@@216 T@U) ) (! (= (type ($generated@@213 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@213 $generated@@216))
))) (forall (($generated@@217 T@T) ($generated@@218 T@U) ) (! (= (type ($generated@@214 $generated@@217 $generated@@218)) $generated@@217)
 :pattern ( ($generated@@214 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ) (! (let (($generated@@220 (type $generated@@219)))
(= ($generated@@214 $generated@@220 ($generated@@213 $generated@@219)) $generated@@219))
 :pattern ( ($generated@@213 $generated@@219))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@221 Int) ($generated@@222 Int) ($generated@@223 Real) ($generated@@224 Int) ($generated@@225 Real) ($generated@@226 (_ BitVec 67)) ($generated@@227 (_ BitVec 32)) ($generated@@228 (_ BitVec 7)) ($generated@@229 Int) ) (!  (=> (or ($generated@@46 $generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229) (and (not (= 1 $generated@@44)) (and (and (and (<= ($generated@@47 0) $generated@@222) (= ($generated@@48 $generated@@224 ($generated@@47 2)) ($generated@@47 0))) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@225) (< $generated@@225 300.0))) (= 0 $generated@@229)))) (= ($generated@@45 $generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229) ($generated@@0 ($generated@@174 ($generated@@11 true)))))
 :pattern ( ($generated@@45 $generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 Int) ($generated@@231 Int) ) (! (= ($generated@@48 $generated@@230 $generated@@231) (mod $generated@@230 $generated@@231))
 :pattern ( ($generated@@48 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@213 ($generated@@8 ($generated@@47 $generated@@232))) ($generated@@174 ($generated@@213 ($generated@@8 $generated@@232))))
 :pattern ( ($generated@@213 ($generated@@8 ($generated@@47 $generated@@232))))
)))
(assert (forall (($generated@@233 Real) ) (! (= ($generated@@213 ($generated@@9 ($generated@@49 $generated@@233))) ($generated@@174 ($generated@@213 ($generated@@9 $generated@@233))))
 :pattern ( ($generated@@213 ($generated@@9 ($generated@@49 $generated@@233))))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@213 ($generated@@174 $generated@@234)) ($generated@@174 ($generated@@213 $generated@@234)))
 :pattern ( ($generated@@213 ($generated@@174 $generated@@234)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 () Real)
(declare-fun $generated@@238 () Int)
(declare-fun $generated@@239 () Real)
(declare-fun $generated@@240 () (_ BitVec 67))
(declare-fun $generated@@241 () (_ BitVec 32))
(declare-fun $generated@@242 () (_ BitVec 7))
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 () Int)
(declare-fun $generated@@245 () Real)
(declare-fun $generated@@246 () Int)
(declare-fun $generated@@247 () Real)
(declare-fun $generated@@248 () Int)
(declare-fun $generated@@249 () Real)
(declare-fun $generated@@250 () Int)
(declare-fun $generated@@251 () Real)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 () Real)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@254) ($generated@@72 $generated@@62 $generated@@4)) (= (type $generated@@255) $generated@@62)) (= (type $generated@@256) ($generated@@63 $generated@@62 $generated@@64))) (= (type $generated@@257) ($generated@@65 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@260  (=> (= (ControlFlow 0 4) (- 0 3)) (=> ($generated@@46 $generated@@235 $generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243) (or ($generated@@45 $generated@@235 $generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243) ($generated@@0 ($generated@@174 ($generated@@11 true))))))))
(let (($generated@@261  (and (=> (= (ControlFlow 0 5) (- 0 7)) (<= ($generated@@47 0) $generated@@244)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (<= ($generated@@49 0.0) $generated@@245)) (=> (and (and (and (<= ($generated@@47 0) $generated@@244) (<= ($generated@@49 0.0) $generated@@245)) (= $generated@@237 $generated@@245)) (and (= $generated@@235 $generated@@244) (= (ControlFlow 0 5) 4))) $generated@@260)))))
(let (($generated@@262  (=> (and (< $generated@@244 ($generated@@47 0)) (= (ControlFlow 0 9) 5)) $generated@@261)))
(let (($generated@@263  (=> (and (<= ($generated@@47 0) $generated@@244) (= (ControlFlow 0 8) 5)) $generated@@261)))
(let (($generated@@264  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (=> (and (and (= $generated@@246 0) (= $generated@@247 ($generated@@211 0))) (and (= $generated@@244 $generated@@246) (= $generated@@245 $generated@@247))) (and (=> (= (ControlFlow 0 13) 8) $generated@@263) (=> (= (ControlFlow 0 13) 9) $generated@@262))))))
(let (($generated@@265  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (=> (and (and (= $generated@@248 ($generated@@205 $generated@@242)) (= $generated@@249 ($generated@@211 ($generated@@205 $generated@@242)))) (and (= $generated@@244 $generated@@248) (= $generated@@245 $generated@@249))) (and (=> (= (ControlFlow 0 12) 8) $generated@@263) (=> (= (ControlFlow 0 12) 9) $generated@@262))))))
(let (($generated@@266  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (=> (and (and (= $generated@@250 ($generated@@207 $generated@@241)) (= $generated@@251 ($generated@@211 ($generated@@207 $generated@@241)))) (and (= $generated@@244 $generated@@250) (= $generated@@245 $generated@@251))) (and (=> (= (ControlFlow 0 11) 8) $generated@@263) (=> (= (ControlFlow 0 11) 9) $generated@@262))))))
(let (($generated@@267  (=> ($generated@@0 ($generated@@174 ($generated@@11 true))) (=> (and (and (= $generated@@252 ($generated@@209 $generated@@240)) (= $generated@@253 ($generated@@211 ($generated@@209 $generated@@240)))) (and (= $generated@@244 $generated@@252) (= $generated@@245 $generated@@253))) (and (=> (= (ControlFlow 0 10) 8) $generated@@263) (=> (= (ControlFlow 0 10) 9) $generated@@262))))))
(let (($generated@@268  (=> (and (and (and (and (not ($generated@@0 ($generated@@174 ($generated@@11 true)))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (not ($generated@@0 ($generated@@174 ($generated@@11 true))))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@269  (=> (= $generated@@254 ($generated@@60 $generated@@255 $generated@@256 $generated@@257 false)) (and (and (and (and (=> (= (ControlFlow 0 14) 10) $generated@@267) (=> (= (ControlFlow 0 14) 11) $generated@@266)) (=> (= (ControlFlow 0 14) 12) $generated@@265)) (=> (= (ControlFlow 0 14) 13) $generated@@264)) (=> (= (ControlFlow 0 14) 2) $generated@@268)))))
(let (($generated@@270  (=> (and (and ($generated@@258 $generated@@256) ($generated@@259 $generated@@256)) (and (<= ($generated@@47 0) $generated@@236) (= ($generated@@48 $generated@@238 ($generated@@47 2)) ($generated@@47 0)))) (=> (and (and (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@239) (< $generated@@239 300.0)) (= 0 $generated@@243)) (and (= 2 $generated@@44) (= (ControlFlow 0 15) 14))) $generated@@269))))
$generated@@270))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@46 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@47 (Int) Int)
(declare-fun $generated@@48 (Int Int) Int)
(declare-fun $generated@@49 (Real) Real)
(declare-fun $generated@@59 (T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T T@T) T@T)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@U T@U) T@U)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@U T@U T@U) T@U)
(declare-fun $generated@@72 (T@T T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@172 (Real) Int)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@180 (T@U) (_ BitVec 67))
(declare-fun $generated@@181 (T@U) (_ BitVec 32))
(declare-fun $generated@@182 (T@U) (_ BitVec 7))
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@185 () T@T)
(declare-fun $generated@@186 ((_ BitVec 67)) T@U)
(declare-fun $generated@@187 ((_ BitVec 32)) T@U)
(declare-fun $generated@@188 ((_ BitVec 7)) T@U)
(declare-fun $generated@@207 ((_ BitVec 7)) Int)
(declare-fun $generated@@209 ((_ BitVec 67)) Int)
(declare-fun $generated@@211 (Int) Real)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@T T@U) T@U)
(declare-fun $generated@@216 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@50 Int) ($generated@@51 Int) ($generated@@52 Real) ($generated@@53 Int) ($generated@@54 Real) ($generated@@55 (_ BitVec 67)) ($generated@@56 (_ BitVec 32)) ($generated@@57 (_ BitVec 7)) ($generated@@58 Int) ) (!  (=> (or ($generated@@46 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58) (and (not (= 1 $generated@@44)) (and (and (and (<= ($generated@@47 0) $generated@@51) (= ($generated@@48 $generated@@53 ($generated@@47 2)) ($generated@@47 0))) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@54) (< $generated@@54 300.0))) (= 0 $generated@@58)))) true)
 :pattern ( ($generated@@45 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@76 $generated@@77)) 6)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@68 ($generated@@63 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@63 $generated@@78 $generated@@79))
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@69 ($generated@@63 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@63 $generated@@80 $generated@@81))
))) (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (let (($generated@@84 ($generated@@69 (type $generated@@82))))
(= (type ($generated@@67 $generated@@82 $generated@@83)) $generated@@84))
 :pattern ( ($generated@@67 $generated@@82 $generated@@83))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 (type $generated@@87)))
(let (($generated@@89 (type $generated@@86)))
(= (type ($generated@@70 $generated@@85 $generated@@86 $generated@@87)) ($generated@@63 $generated@@89 $generated@@88))))
 :pattern ( ($generated@@70 $generated@@85 $generated@@86 $generated@@87))
))) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@69 (type $generated@@90))))
 (=> (= (type $generated@@92) $generated@@93) (= ($generated@@67 ($generated@@70 $generated@@90 $generated@@91 $generated@@92) $generated@@91) $generated@@92)))
 :weight 0
))) (and (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (or (= $generated@@96 $generated@@97) (= ($generated@@67 ($generated@@70 $generated@@95 $generated@@96 $generated@@94) $generated@@97) ($generated@@67 $generated@@95 $generated@@97)))
 :weight 0
)) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or true (= ($generated@@67 ($generated@@70 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@67 $generated@@99 $generated@@101)))
 :weight 0
)))) (forall (($generated@@102 T@T) ) (= ($generated@@1 ($generated@@65 $generated@@102)) 7))) (forall (($generated@@103 T@T) ) (! (= ($generated@@61 ($generated@@65 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@65 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@61 (type $generated@@105))))
(= (type ($generated@@66 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@66 $generated@@104 $generated@@105))
))) (= ($generated@@1 $generated@@64) 8)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= (type ($generated@@71 $generated@@107 $generated@@108 $generated@@109)) $generated@@64)
 :pattern ( ($generated@@71 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@61 (type $generated@@111))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@66 ($generated@@71 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@66 ($generated@@71 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@66 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@66 ($generated@@71 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@66 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@62) 9)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@122 $generated@@123)) 10))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@124 $generated@@125)) $generated@@124)
 :pattern ( ($generated@@72 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (! (= ($generated@@74 ($generated@@72 $generated@@126 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@72 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@74 (type $generated@@128))))
(= (type ($generated@@59 $generated@@128 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@59 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(let (($generated@@137 (type $generated@@133)))
(= (type ($generated@@75 $generated@@132 $generated@@133 $generated@@134 $generated@@135)) ($generated@@72 $generated@@137 $generated@@136))))
 :pattern ( ($generated@@75 $generated@@132 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@74 (type $generated@@138))))
 (=> (= (type $generated@@141) $generated@@142) (= ($generated@@59 ($generated@@75 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@139 $generated@@140) $generated@@141)))
 :weight 0
))) (and (and (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@59 ($generated@@75 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@59 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@59 ($generated@@75 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@59 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or true (= ($generated@@59 ($generated@@75 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@59 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ) (! (= (type ($generated@@60 $generated@@161 $generated@@162 $generated@@163 $generated@@164)) ($generated@@72 $generated@@62 $generated@@4))
 :pattern ( ($generated@@60 $generated@@161 $generated@@162 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Bool) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (let (($generated@@171 ($generated@@61 (type $generated@@170))))
 (=> (and (and (and (and (= (type $generated@@165) $generated@@62) (= (type $generated@@166) ($generated@@63 $generated@@62 $generated@@64))) (= (type $generated@@167) ($generated@@65 $generated@@4))) (= (type $generated@@169) $generated@@62)) (= (type $generated@@170) ($generated@@65 $generated@@171))) (= ($generated@@0 ($generated@@59 ($generated@@60 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))  (=> (and (not (= $generated@@169 $generated@@165)) ($generated@@0 ($generated@@66 ($generated@@67 $generated@@166 $generated@@169) $generated@@167))) $generated@@168))))
 :pattern ( ($generated@@59 ($generated@@60 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@173 Real) ) (! (= ($generated@@172 $generated@@173) (to_int $generated@@173))
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@47 $generated@@174) $generated@@174)
 :pattern ( ($generated@@47 $generated@@174))
)))
(assert (forall (($generated@@175 Real) ) (! (= ($generated@@49 $generated@@175) $generated@@175)
 :pattern ( ($generated@@49 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= (type ($generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@176 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@176 $generated@@179) $generated@@179)
 :pattern ( ($generated@@176 $generated@@179))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@189 (_ BitVec 67)) ) (! (= ($generated@@180 ($generated@@186 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@186 $generated@@189))
)) (= ($generated@@1 $generated@@183) 11)) (forall (($generated@@190 T@U) ) (!  (=> (= (type $generated@@190) $generated@@183) (= ($generated@@186 ($generated@@180 $generated@@190)) $generated@@190))
 :pattern ( ($generated@@180 $generated@@190))
))) (forall (($generated@@191 (_ BitVec 67)) ) (! (= (type ($generated@@186 $generated@@191)) $generated@@183)
 :pattern ( ($generated@@186 $generated@@191))
))) (forall (($generated@@192 (_ BitVec 32)) ) (! (= ($generated@@181 ($generated@@187 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@187 $generated@@192))
))) (= ($generated@@1 $generated@@184) 12)) (forall (($generated@@193 T@U) ) (!  (=> (= (type $generated@@193) $generated@@184) (= ($generated@@187 ($generated@@181 $generated@@193)) $generated@@193))
 :pattern ( ($generated@@181 $generated@@193))
))) (forall (($generated@@194 (_ BitVec 32)) ) (! (= (type ($generated@@187 $generated@@194)) $generated@@184)
 :pattern ( ($generated@@187 $generated@@194))
))) (forall (($generated@@195 (_ BitVec 7)) ) (! (= ($generated@@182 ($generated@@188 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@188 $generated@@195))
))) (= ($generated@@1 $generated@@185) 13)) (forall (($generated@@196 T@U) ) (!  (=> (= (type $generated@@196) $generated@@185) (= ($generated@@188 ($generated@@182 $generated@@196)) $generated@@196))
 :pattern ( ($generated@@182 $generated@@196))
))) (forall (($generated@@197 (_ BitVec 7)) ) (! (= (type ($generated@@188 $generated@@197)) $generated@@185)
 :pattern ( ($generated@@188 $generated@@197))
))))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@198 Int) ($generated@@199 Int) ($generated@@200 Real) ($generated@@201 Int) ($generated@@202 Real) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Int) ) (!  (=> (and (and (and (= (type $generated@@203) $generated@@183) (= (type $generated@@204) $generated@@184)) (= (type $generated@@205) $generated@@185)) (or ($generated@@46 ($generated@@47 $generated@@198) ($generated@@47 $generated@@199) ($generated@@49 $generated@@200) ($generated@@47 $generated@@201) ($generated@@49 $generated@@202) ($generated@@180 ($generated@@176 $generated@@203)) ($generated@@181 ($generated@@176 $generated@@204)) ($generated@@182 ($generated@@176 $generated@@205)) ($generated@@47 $generated@@206)) (and (not (= 1 $generated@@44)) (and (and (and (<= ($generated@@47 0) $generated@@199) (= ($generated@@48 $generated@@201 ($generated@@47 2)) ($generated@@47 0))) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@202) (< $generated@@202 300.0))) (= 0 $generated@@206))))) (= ($generated@@45 ($generated@@47 $generated@@198) ($generated@@47 $generated@@199) ($generated@@49 $generated@@200) ($generated@@47 $generated@@201) ($generated@@49 $generated@@202) ($generated@@180 ($generated@@176 $generated@@203)) ($generated@@181 ($generated@@176 $generated@@204)) ($generated@@182 ($generated@@176 $generated@@205)) ($generated@@47 $generated@@206)) ($generated@@0 ($generated@@176 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@47 $generated@@198) ($generated@@47 $generated@@199) ($generated@@49 $generated@@200) ($generated@@47 $generated@@201) ($generated@@49 $generated@@202) ($generated@@180 ($generated@@176 $generated@@203)) ($generated@@181 ($generated@@176 $generated@@204)) ($generated@@182 ($generated@@176 $generated@@205)) ($generated@@47 $generated@@206)))
))))
(assert (forall (($generated@@208 (_ BitVec 7)) ) (!  (and (and (<= 0 ($generated@@207 $generated@@208)) (< ($generated@@207 $generated@@208) 128)) (= ($generated@@207 $generated@@208) (bv2int $generated@@208)))
 :pattern ( ($generated@@207 $generated@@208))
)))
(assert (forall (($generated@@210 (_ BitVec 67)) ) (!  (and (and (<= 0 ($generated@@209 $generated@@210)) (< ($generated@@209 $generated@@210) 147573952589676412928)) (= ($generated@@209 $generated@@210) (bv2int $generated@@210)))
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 Int) ) (! (= ($generated@@211 $generated@@212) (to_real $generated@@212))
 :pattern ( ($generated@@211 $generated@@212))
)))
(assert (forall (($generated@@213 Int) ) (! (= ($generated@@172 ($generated@@211 $generated@@213)) $generated@@213)
 :pattern ( ($generated@@172 ($generated@@211 $generated@@213)))
)))
(assert  (and (and (= ($generated@@1 $generated@@216) 14) (forall (($generated@@217 T@U) ) (! (= (type ($generated@@214 $generated@@217)) $generated@@216)
 :pattern ( ($generated@@214 $generated@@217))
))) (forall (($generated@@218 T@T) ($generated@@219 T@U) ) (! (= (type ($generated@@215 $generated@@218 $generated@@219)) $generated@@218)
 :pattern ( ($generated@@215 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ) (! (let (($generated@@221 (type $generated@@220)))
(= ($generated@@215 $generated@@221 ($generated@@214 $generated@@220)) $generated@@220))
 :pattern ( ($generated@@214 $generated@@220))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@222 Int) ($generated@@223 Int) ($generated@@224 Real) ($generated@@225 Int) ($generated@@226 Real) ($generated@@227 (_ BitVec 67)) ($generated@@228 (_ BitVec 32)) ($generated@@229 (_ BitVec 7)) ($generated@@230 Int) ) (!  (=> (or ($generated@@46 $generated@@222 $generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230) (and (not (= 1 $generated@@44)) (and (and (and (<= ($generated@@47 0) $generated@@223) (= ($generated@@48 $generated@@225 ($generated@@47 2)) ($generated@@47 0))) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@226) (< $generated@@226 300.0))) (= 0 $generated@@230)))) (= ($generated@@45 $generated@@222 $generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230) ($generated@@0 ($generated@@176 ($generated@@11 true)))))
 :pattern ( ($generated@@45 $generated@@222 $generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 Int) ($generated@@232 Int) ) (! (= ($generated@@48 $generated@@231 $generated@@232) (mod $generated@@231 $generated@@232))
 :pattern ( ($generated@@48 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 Int) ) (! (= ($generated@@214 ($generated@@8 ($generated@@47 $generated@@233))) ($generated@@176 ($generated@@214 ($generated@@8 $generated@@233))))
 :pattern ( ($generated@@214 ($generated@@8 ($generated@@47 $generated@@233))))
)))
(assert (forall (($generated@@234 Real) ) (! (= ($generated@@214 ($generated@@9 ($generated@@49 $generated@@234))) ($generated@@176 ($generated@@214 ($generated@@9 $generated@@234))))
 :pattern ( ($generated@@214 ($generated@@9 ($generated@@49 $generated@@234))))
)))
(assert (forall (($generated@@235 T@U) ) (! (= ($generated@@214 ($generated@@176 $generated@@235)) ($generated@@176 ($generated@@214 $generated@@235)))
 :pattern ( ($generated@@214 ($generated@@176 $generated@@235)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 () Int)
(declare-fun $generated@@238 () Real)
(declare-fun $generated@@239 () Int)
(declare-fun $generated@@240 () Real)
(declare-fun $generated@@241 () (_ BitVec 67))
(declare-fun $generated@@242 () (_ BitVec 32))
(declare-fun $generated@@243 () (_ BitVec 7))
(declare-fun $generated@@244 () Int)
(declare-fun $generated@@245 () Real)
(declare-fun $generated@@246 () Int)
(declare-fun $generated@@247 () Int)
(declare-fun $generated@@248 () Int)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 () Int)
(declare-fun $generated@@251 () Real)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 () Int)
(declare-fun $generated@@254 () Int)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@255) ($generated@@72 $generated@@62 $generated@@4)) (= (type $generated@@256) $generated@@62)) (= (type $generated@@257) ($generated@@63 $generated@@62 $generated@@64))) (= (type $generated@@258) ($generated@@65 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 29) (let (($generated@@261  (=> (= (ControlFlow 0 4) (- 0 3)) (=> ($generated@@46 $generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243 $generated@@244) (or ($generated@@45 $generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243 $generated@@244) ($generated@@0 ($generated@@176 ($generated@@11 true))))))))
(let (($generated@@262  (=> (and (= $generated@@245 ($generated@@211 ($generated@@172 $generated@@245))) (= ($generated@@48 ($generated@@172 $generated@@245) ($generated@@47 2)) ($generated@@47 0))) (and (=> (= (ControlFlow 0 19) (- 0 21)) (= ($generated@@211 ($generated@@172 $generated@@245)) $generated@@245)) (=> (= ($generated@@211 ($generated@@172 $generated@@245)) $generated@@245) (and (=> (= (ControlFlow 0 19) (- 0 20)) (= ($generated@@48 ($generated@@172 $generated@@245) ($generated@@47 2)) ($generated@@47 0))) (=> (= ($generated@@48 ($generated@@172 $generated@@245) ($generated@@47 2)) ($generated@@47 0)) (=> (and (and (= $generated@@246 ($generated@@172 $generated@@245)) (= $generated@@239 $generated@@246)) (and (= $generated@@240 $generated@@245) (= (ControlFlow 0 19) 4))) $generated@@261))))))))
(let (($generated@@263  (=> (and (not (= $generated@@245 ($generated@@211 ($generated@@172 $generated@@245)))) (= (ControlFlow 0 25) 19)) $generated@@262)))
(let (($generated@@264  (=> (= $generated@@245 ($generated@@211 ($generated@@172 $generated@@245))) (and (=> (= (ControlFlow 0 22) (- 0 24)) (= ($generated@@211 ($generated@@172 $generated@@245)) $generated@@245)) (=> (= ($generated@@211 ($generated@@172 $generated@@245)) $generated@@245) (and (=> (= (ControlFlow 0 22) (- 0 23)) (not (= ($generated@@47 2) 0))) (=> (not (= ($generated@@47 2) 0)) (=> (= (ControlFlow 0 22) 19) $generated@@262))))))))
(let (($generated@@265  (=> (= $generated@@247 ($generated@@172 $generated@@245)) (and (=> (= (ControlFlow 0 26) (- 0 27)) (and (<= ($generated@@49 (- 0.0 4.0)) ($generated@@211 $generated@@247)) (< ($generated@@211 $generated@@247) 300.0))) (=> (and (<= ($generated@@49 (- 0.0 4.0)) ($generated@@211 $generated@@247)) (< ($generated@@211 $generated@@247) 300.0)) (and (=> (= (ControlFlow 0 26) 22) $generated@@264) (=> (= (ControlFlow 0 26) 25) $generated@@263)))))))
(let (($generated@@266  (=> (= $generated@@248 ($generated@@172 $generated@@245)) (and (=> (= (ControlFlow 0 15) (- 0 18)) (and (<= ($generated@@49 (- 0.0 4.0)) ($generated@@211 $generated@@248)) (< ($generated@@211 $generated@@248) 300.0))) (=> (and (<= ($generated@@49 (- 0.0 4.0)) ($generated@@211 $generated@@248)) (< ($generated@@211 $generated@@248) 300.0)) (=> (= $generated@@245 ($generated@@211 ($generated@@172 $generated@@245))) (and (=> (= (ControlFlow 0 15) (- 0 17)) (= ($generated@@211 ($generated@@172 $generated@@245)) $generated@@245)) (=> (= ($generated@@211 ($generated@@172 $generated@@245)) $generated@@245) (and (=> (= (ControlFlow 0 15) (- 0 16)) (= ($generated@@48 ($generated@@172 $generated@@245) ($generated@@47 2)) ($generated@@47 0))) (=> (= ($generated@@48 ($generated@@172 $generated@@245) ($generated@@47 2)) ($generated@@47 0)) (=> (and (and (= $generated@@249 ($generated@@172 $generated@@245)) (= $generated@@239 $generated@@249)) (and (= $generated@@240 $generated@@245) (= (ControlFlow 0 15) 4))) $generated@@261)))))))))))
(let (($generated@@267  (=> ($generated@@0 ($generated@@176 ($generated@@11 true))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (= ($generated@@211 ($generated@@172 $generated@@245)) $generated@@245)) (=> (= ($generated@@211 ($generated@@172 $generated@@245)) $generated@@245) (and (=> (= (ControlFlow 0 12) (- 0 13)) (= ($generated@@48 ($generated@@172 $generated@@245) ($generated@@47 2)) ($generated@@47 0))) (=> (= ($generated@@48 ($generated@@172 $generated@@245) ($generated@@47 2)) ($generated@@47 0)) (=> (and (and (= $generated@@250 ($generated@@172 $generated@@245)) (= $generated@@239 $generated@@250)) (and (= $generated@@240 $generated@@245) (= (ControlFlow 0 12) 4))) $generated@@261))))))))
(let (($generated@@268  (=> ($generated@@0 ($generated@@176 ($generated@@11 true))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and (<= ($generated@@49 (- 0.0 4.0)) ($generated@@211 ($generated@@207 $generated@@243))) (< ($generated@@211 ($generated@@207 $generated@@243)) 300.0))) (=> (and (<= ($generated@@49 (- 0.0 4.0)) ($generated@@211 ($generated@@207 $generated@@243))) (< ($generated@@211 ($generated@@207 $generated@@243)) 300.0)) (=> (and (and (= $generated@@251 ($generated@@211 ($generated@@207 $generated@@243))) (= $generated@@239 $generated@@252)) (and (= $generated@@240 $generated@@251) (= (ControlFlow 0 10) 4))) $generated@@261))))))
(let (($generated@@269  (and (=> (= (ControlFlow 0 7) (- 0 9)) (not (= ($generated@@47 2) 0))) (=> (not (= ($generated@@47 2) 0)) (=> (= ($generated@@48 ($generated@@209 $generated@@241) ($generated@@47 2)) ($generated@@47 0)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (= ($generated@@48 ($generated@@209 $generated@@241) ($generated@@47 2)) ($generated@@47 0))) (=> (= ($generated@@48 ($generated@@209 $generated@@241) ($generated@@47 2)) ($generated@@47 0)) (=> (and (and (= $generated@@253 ($generated@@209 $generated@@241)) (= $generated@@239 $generated@@253)) (and (= $generated@@240 $generated@@245) (= (ControlFlow 0 7) 4))) $generated@@261))))))))
(let (($generated@@270  (=> ($generated@@0 ($generated@@176 ($generated@@11 true))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (= ($generated@@48 0 ($generated@@47 2)) ($generated@@47 0))) (=> (= ($generated@@48 0 ($generated@@47 2)) ($generated@@47 0)) (=> (and (and (= $generated@@254 0) (= $generated@@239 $generated@@254)) (and (= $generated@@240 $generated@@245) (= (ControlFlow 0 5) 4))) $generated@@261))))))
(let (($generated@@271  (=> (and (and (and (and (and (and (not ($generated@@0 ($generated@@176 ($generated@@11 true)))) (not (= ($generated@@48 ($generated@@209 $generated@@241) ($generated@@47 2)) ($generated@@47 0)))) (not ($generated@@0 ($generated@@176 ($generated@@11 true))))) (not ($generated@@0 ($generated@@176 ($generated@@11 true))))) (not (= $generated@@245 ($generated@@211 ($generated@@172 $generated@@245))))) (not (and (= $generated@@245 ($generated@@211 ($generated@@172 $generated@@245))) (= ($generated@@48 ($generated@@172 $generated@@245) ($generated@@47 2)) ($generated@@47 0))))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@272  (=> (= $generated@@255 ($generated@@60 $generated@@256 $generated@@257 $generated@@258 false)) (and (and (and (and (and (and (=> (= (ControlFlow 0 28) 5) $generated@@270) (=> (= (ControlFlow 0 28) 7) $generated@@269)) (=> (= (ControlFlow 0 28) 10) $generated@@268)) (=> (= (ControlFlow 0 28) 12) $generated@@267)) (=> (= (ControlFlow 0 28) 15) $generated@@266)) (=> (= (ControlFlow 0 28) 26) $generated@@265)) (=> (= (ControlFlow 0 28) 2) $generated@@271)))))
(let (($generated@@273  (=> (and (and ($generated@@259 $generated@@257) ($generated@@260 $generated@@257)) (and (<= ($generated@@47 0) $generated@@237) (= ($generated@@48 $generated@@252 ($generated@@47 2)) ($generated@@47 0)))) (=> (and (and (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@245) (< $generated@@245 300.0)) (= 0 $generated@@244)) (and (= 2 $generated@@44) (= (ControlFlow 0 29) 28))) $generated@@272))))
$generated@@273))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 12) (- 14))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 12) (- 13))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 15) (- 16))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@46 (Int Int Real Int Real (_ BitVec 67) (_ BitVec 32) (_ BitVec 7) Int) Bool)
(declare-fun $generated@@47 (Int) Int)
(declare-fun $generated@@48 (Int Int) Int)
(declare-fun $generated@@49 (Real) Real)
(declare-fun $generated@@59 (T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T T@T) T@T)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@U T@U) T@U)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@U T@U T@U) T@U)
(declare-fun $generated@@72 (T@T T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@172 (Real) Int)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@180 (T@U) (_ BitVec 67))
(declare-fun $generated@@181 (T@U) (_ BitVec 32))
(declare-fun $generated@@182 (T@U) (_ BitVec 7))
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@185 () T@T)
(declare-fun $generated@@186 ((_ BitVec 67)) T@U)
(declare-fun $generated@@187 ((_ BitVec 32)) T@U)
(declare-fun $generated@@188 ((_ BitVec 7)) T@U)
(declare-fun $generated@@207 (Int) Real)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@211 (T@T T@U) T@U)
(declare-fun $generated@@212 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@50 Int) ($generated@@51 Int) ($generated@@52 Real) ($generated@@53 Int) ($generated@@54 Real) ($generated@@55 (_ BitVec 67)) ($generated@@56 (_ BitVec 32)) ($generated@@57 (_ BitVec 7)) ($generated@@58 Int) ) (!  (=> (or ($generated@@46 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58) (and (not (= 1 $generated@@44)) (and (and (and (<= ($generated@@47 0) $generated@@51) (= ($generated@@48 $generated@@53 ($generated@@47 2)) ($generated@@47 0))) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@54) (< $generated@@54 300.0))) (= 0 $generated@@58)))) true)
 :pattern ( ($generated@@45 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@76 $generated@@77)) 6)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@68 ($generated@@63 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@63 $generated@@78 $generated@@79))
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@69 ($generated@@63 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@63 $generated@@80 $generated@@81))
))) (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (let (($generated@@84 ($generated@@69 (type $generated@@82))))
(= (type ($generated@@67 $generated@@82 $generated@@83)) $generated@@84))
 :pattern ( ($generated@@67 $generated@@82 $generated@@83))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 (type $generated@@87)))
(let (($generated@@89 (type $generated@@86)))
(= (type ($generated@@70 $generated@@85 $generated@@86 $generated@@87)) ($generated@@63 $generated@@89 $generated@@88))))
 :pattern ( ($generated@@70 $generated@@85 $generated@@86 $generated@@87))
))) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@69 (type $generated@@90))))
 (=> (= (type $generated@@92) $generated@@93) (= ($generated@@67 ($generated@@70 $generated@@90 $generated@@91 $generated@@92) $generated@@91) $generated@@92)))
 :weight 0
))) (and (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (or (= $generated@@96 $generated@@97) (= ($generated@@67 ($generated@@70 $generated@@95 $generated@@96 $generated@@94) $generated@@97) ($generated@@67 $generated@@95 $generated@@97)))
 :weight 0
)) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or true (= ($generated@@67 ($generated@@70 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@67 $generated@@99 $generated@@101)))
 :weight 0
)))) (forall (($generated@@102 T@T) ) (= ($generated@@1 ($generated@@65 $generated@@102)) 7))) (forall (($generated@@103 T@T) ) (! (= ($generated@@61 ($generated@@65 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@65 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@61 (type $generated@@105))))
(= (type ($generated@@66 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@66 $generated@@104 $generated@@105))
))) (= ($generated@@1 $generated@@64) 8)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= (type ($generated@@71 $generated@@107 $generated@@108 $generated@@109)) $generated@@64)
 :pattern ( ($generated@@71 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@61 (type $generated@@111))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@66 ($generated@@71 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@66 ($generated@@71 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@66 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@66 ($generated@@71 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@66 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@62) 9)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@122 $generated@@123)) 10))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@124 $generated@@125)) $generated@@124)
 :pattern ( ($generated@@72 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (! (= ($generated@@74 ($generated@@72 $generated@@126 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@72 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@74 (type $generated@@128))))
(= (type ($generated@@59 $generated@@128 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@59 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(let (($generated@@137 (type $generated@@133)))
(= (type ($generated@@75 $generated@@132 $generated@@133 $generated@@134 $generated@@135)) ($generated@@72 $generated@@137 $generated@@136))))
 :pattern ( ($generated@@75 $generated@@132 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@74 (type $generated@@138))))
 (=> (= (type $generated@@141) $generated@@142) (= ($generated@@59 ($generated@@75 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@139 $generated@@140) $generated@@141)))
 :weight 0
))) (and (and (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@59 ($generated@@75 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@59 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@59 ($generated@@75 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@59 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or true (= ($generated@@59 ($generated@@75 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@59 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ) (! (= (type ($generated@@60 $generated@@161 $generated@@162 $generated@@163 $generated@@164)) ($generated@@72 $generated@@62 $generated@@4))
 :pattern ( ($generated@@60 $generated@@161 $generated@@162 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Bool) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (let (($generated@@171 ($generated@@61 (type $generated@@170))))
 (=> (and (and (and (and (= (type $generated@@165) $generated@@62) (= (type $generated@@166) ($generated@@63 $generated@@62 $generated@@64))) (= (type $generated@@167) ($generated@@65 $generated@@4))) (= (type $generated@@169) $generated@@62)) (= (type $generated@@170) ($generated@@65 $generated@@171))) (= ($generated@@0 ($generated@@59 ($generated@@60 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))  (=> (and (not (= $generated@@169 $generated@@165)) ($generated@@0 ($generated@@66 ($generated@@67 $generated@@166 $generated@@169) $generated@@167))) $generated@@168))))
 :pattern ( ($generated@@59 ($generated@@60 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@173 Real) ) (! (= ($generated@@172 $generated@@173) (to_int $generated@@173))
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@47 $generated@@174) $generated@@174)
 :pattern ( ($generated@@47 $generated@@174))
)))
(assert (forall (($generated@@175 Real) ) (! (= ($generated@@49 $generated@@175) $generated@@175)
 :pattern ( ($generated@@49 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= (type ($generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@176 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@176 $generated@@179) $generated@@179)
 :pattern ( ($generated@@176 $generated@@179))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@189 (_ BitVec 67)) ) (! (= ($generated@@180 ($generated@@186 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@186 $generated@@189))
)) (= ($generated@@1 $generated@@183) 11)) (forall (($generated@@190 T@U) ) (!  (=> (= (type $generated@@190) $generated@@183) (= ($generated@@186 ($generated@@180 $generated@@190)) $generated@@190))
 :pattern ( ($generated@@180 $generated@@190))
))) (forall (($generated@@191 (_ BitVec 67)) ) (! (= (type ($generated@@186 $generated@@191)) $generated@@183)
 :pattern ( ($generated@@186 $generated@@191))
))) (forall (($generated@@192 (_ BitVec 32)) ) (! (= ($generated@@181 ($generated@@187 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@187 $generated@@192))
))) (= ($generated@@1 $generated@@184) 12)) (forall (($generated@@193 T@U) ) (!  (=> (= (type $generated@@193) $generated@@184) (= ($generated@@187 ($generated@@181 $generated@@193)) $generated@@193))
 :pattern ( ($generated@@181 $generated@@193))
))) (forall (($generated@@194 (_ BitVec 32)) ) (! (= (type ($generated@@187 $generated@@194)) $generated@@184)
 :pattern ( ($generated@@187 $generated@@194))
))) (forall (($generated@@195 (_ BitVec 7)) ) (! (= ($generated@@182 ($generated@@188 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@188 $generated@@195))
))) (= ($generated@@1 $generated@@185) 13)) (forall (($generated@@196 T@U) ) (!  (=> (= (type $generated@@196) $generated@@185) (= ($generated@@188 ($generated@@182 $generated@@196)) $generated@@196))
 :pattern ( ($generated@@182 $generated@@196))
))) (forall (($generated@@197 (_ BitVec 7)) ) (! (= (type ($generated@@188 $generated@@197)) $generated@@185)
 :pattern ( ($generated@@188 $generated@@197))
))))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@198 Int) ($generated@@199 Int) ($generated@@200 Real) ($generated@@201 Int) ($generated@@202 Real) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Int) ) (!  (=> (and (and (and (= (type $generated@@203) $generated@@183) (= (type $generated@@204) $generated@@184)) (= (type $generated@@205) $generated@@185)) (or ($generated@@46 ($generated@@47 $generated@@198) ($generated@@47 $generated@@199) ($generated@@49 $generated@@200) ($generated@@47 $generated@@201) ($generated@@49 $generated@@202) ($generated@@180 ($generated@@176 $generated@@203)) ($generated@@181 ($generated@@176 $generated@@204)) ($generated@@182 ($generated@@176 $generated@@205)) ($generated@@47 $generated@@206)) (and (not (= 1 $generated@@44)) (and (and (and (<= ($generated@@47 0) $generated@@199) (= ($generated@@48 $generated@@201 ($generated@@47 2)) ($generated@@47 0))) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@202) (< $generated@@202 300.0))) (= 0 $generated@@206))))) (= ($generated@@45 ($generated@@47 $generated@@198) ($generated@@47 $generated@@199) ($generated@@49 $generated@@200) ($generated@@47 $generated@@201) ($generated@@49 $generated@@202) ($generated@@180 ($generated@@176 $generated@@203)) ($generated@@181 ($generated@@176 $generated@@204)) ($generated@@182 ($generated@@176 $generated@@205)) ($generated@@47 $generated@@206)) ($generated@@0 ($generated@@176 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@47 $generated@@198) ($generated@@47 $generated@@199) ($generated@@49 $generated@@200) ($generated@@47 $generated@@201) ($generated@@49 $generated@@202) ($generated@@180 ($generated@@176 $generated@@203)) ($generated@@181 ($generated@@176 $generated@@204)) ($generated@@182 ($generated@@176 $generated@@205)) ($generated@@47 $generated@@206)))
))))
(assert (forall (($generated@@208 Int) ) (! (= ($generated@@207 $generated@@208) (to_real $generated@@208))
 :pattern ( ($generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 Int) ) (! (= ($generated@@172 ($generated@@207 $generated@@209)) $generated@@209)
 :pattern ( ($generated@@172 ($generated@@207 $generated@@209)))
)))
(assert  (and (and (= ($generated@@1 $generated@@212) 14) (forall (($generated@@213 T@U) ) (! (= (type ($generated@@210 $generated@@213)) $generated@@212)
 :pattern ( ($generated@@210 $generated@@213))
))) (forall (($generated@@214 T@T) ($generated@@215 T@U) ) (! (= (type ($generated@@211 $generated@@214 $generated@@215)) $generated@@214)
 :pattern ( ($generated@@211 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ) (! (let (($generated@@217 (type $generated@@216)))
(= ($generated@@211 $generated@@217 ($generated@@210 $generated@@216)) $generated@@216))
 :pattern ( ($generated@@210 $generated@@216))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@218 Int) ($generated@@219 Int) ($generated@@220 Real) ($generated@@221 Int) ($generated@@222 Real) ($generated@@223 (_ BitVec 67)) ($generated@@224 (_ BitVec 32)) ($generated@@225 (_ BitVec 7)) ($generated@@226 Int) ) (!  (=> (or ($generated@@46 $generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225 $generated@@226) (and (not (= 1 $generated@@44)) (and (and (and (<= ($generated@@47 0) $generated@@219) (= ($generated@@48 $generated@@221 ($generated@@47 2)) ($generated@@47 0))) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@222) (< $generated@@222 300.0))) (= 0 $generated@@226)))) (= ($generated@@45 $generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225 $generated@@226) ($generated@@0 ($generated@@176 ($generated@@11 true)))))
 :pattern ( ($generated@@45 $generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 Int) ($generated@@228 Int) ) (! (= ($generated@@48 $generated@@227 $generated@@228) (mod $generated@@227 $generated@@228))
 :pattern ( ($generated@@48 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 Int) ) (! (= ($generated@@210 ($generated@@8 ($generated@@47 $generated@@229))) ($generated@@176 ($generated@@210 ($generated@@8 $generated@@229))))
 :pattern ( ($generated@@210 ($generated@@8 ($generated@@47 $generated@@229))))
)))
(assert (forall (($generated@@230 Real) ) (! (= ($generated@@210 ($generated@@9 ($generated@@49 $generated@@230))) ($generated@@176 ($generated@@210 ($generated@@9 $generated@@230))))
 :pattern ( ($generated@@210 ($generated@@9 ($generated@@49 $generated@@230))))
)))
(assert (forall (($generated@@231 T@U) ) (! (= ($generated@@210 ($generated@@176 $generated@@231)) ($generated@@176 ($generated@@210 $generated@@231)))
 :pattern ( ($generated@@210 ($generated@@176 $generated@@231)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@232 () Int)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 () Real)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () Real)
(declare-fun $generated@@237 () (_ BitVec 67))
(declare-fun $generated@@238 () (_ BitVec 32))
(declare-fun $generated@@239 () (_ BitVec 7))
(declare-fun $generated@@240 () Int)
(declare-fun $generated@@241 () (_ BitVec 32))
(declare-fun $generated@@242 () (_ BitVec 7))
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 () (_ BitVec 67))
(declare-fun $generated@@245 () Int)
(declare-fun $generated@@246 () Int)
(declare-fun $generated@@247 () Real)
(declare-fun $generated@@248 () (_ BitVec 7))
(declare-fun $generated@@249 () (_ BitVec 32))
(declare-fun $generated@@250 () Real)
(declare-fun $generated@@251 () Real)
(declare-fun $generated@@252 () Real)
(declare-fun $generated@@253 () Int)
(declare-fun $generated@@254 () Int)
(declare-fun $generated@@255 () (_ BitVec 7))
(declare-fun $generated@@256 () Int)
(declare-fun $generated@@257 () (_ BitVec 7))
(declare-fun $generated@@258 () (_ BitVec 32))
(declare-fun $generated@@259 () (_ BitVec 67))
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@260) ($generated@@72 $generated@@62 $generated@@4)) (= (type $generated@@261) $generated@@62)) (= (type $generated@@262) ($generated@@63 $generated@@62 $generated@@64))) (= (type $generated@@263) ($generated@@65 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 38) (let (($generated@@266  (=> (= (ControlFlow 0 4) (- 0 3)) (=> ($generated@@46 $generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240) (or ($generated@@45 $generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240) ($generated@@0 ($generated@@176 ($generated@@11 true))))))))
(let (($generated@@267  (=> (and (<= ($generated@@47 0) $generated@@235) (< $generated@@235 4294967296)) (and (=> (= (ControlFlow 0 30) (- 0 31)) (and (<= 0 $generated@@235) (< $generated@@235 4294967296))) (=> (and (<= 0 $generated@@235) (< $generated@@235 4294967296)) (=> (and (= $generated@@241 ((_ int2bv 32) $generated@@235)) (= $generated@@239 $generated@@242)) (=> (and (and (= $generated@@238 $generated@@241) (= $generated@@240 $generated@@243)) (and (= $generated@@237 $generated@@244) (= (ControlFlow 0 30) 4))) $generated@@266)))))))
(let (($generated@@268  (=> (and (< $generated@@235 ($generated@@47 0)) (= (ControlFlow 0 34) 30)) $generated@@267)))
(let (($generated@@269  (=> (and (<= ($generated@@47 0) $generated@@235) (= $generated@@245 ($generated@@47 4294967296))) (and (=> (= (ControlFlow 0 32) (- 0 33)) (= ($generated@@48 $generated@@245 ($generated@@47 2)) ($generated@@47 0))) (=> (= ($generated@@48 $generated@@245 ($generated@@47 2)) ($generated@@47 0)) (=> (= (ControlFlow 0 32) 30) $generated@@267))))))
(let (($generated@@270  (=> (= $generated@@246 ($generated@@47 0)) (and (=> (= (ControlFlow 0 35) (- 0 36)) (= ($generated@@48 $generated@@246 ($generated@@47 2)) ($generated@@47 0))) (=> (= ($generated@@48 $generated@@246 ($generated@@47 2)) ($generated@@47 0)) (and (=> (= (ControlFlow 0 35) 32) $generated@@269) (=> (= (ControlFlow 0 35) 34) $generated@@268)))))))
(let (($generated@@271  (=> (= $generated@@247 (ite  (and (<= ($generated@@49 0.0) $generated@@236) (< $generated@@236 100.0)) $generated@@236 100.0)) (and (=> (= (ControlFlow 0 19) (- 0 21)) (= ($generated@@207 ($generated@@172 $generated@@247)) $generated@@247)) (=> (= ($generated@@207 ($generated@@172 $generated@@247)) $generated@@247) (and (=> (= (ControlFlow 0 19) (- 0 20)) (and (<= 0 ($generated@@172 $generated@@247)) (< ($generated@@172 $generated@@247) 128))) (=> (and (<= 0 ($generated@@172 $generated@@247)) (< ($generated@@172 $generated@@247) 128)) (=> (and (= $generated@@248 ((_ int2bv 7) ($generated@@172 (ite  (and (<= ($generated@@49 0.0) $generated@@236) (< $generated@@236 100.0)) $generated@@236 100.0)))) (= $generated@@239 $generated@@248)) (=> (and (and (= $generated@@238 $generated@@249) (= $generated@@240 $generated@@243)) (and (= $generated@@237 $generated@@244) (= (ControlFlow 0 19) 4))) $generated@@266)))))))))
(let (($generated@@272  (=> (and (not (and (<= ($generated@@49 0.0) $generated@@236) (< $generated@@236 100.0))) (= $generated@@250 ($generated@@49 100.0))) (and (=> (= (ControlFlow 0 23) (- 0 24)) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@250) (< $generated@@250 300.0))) (=> (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@250) (< $generated@@250 300.0)) (=> (= (ControlFlow 0 23) 19) $generated@@271))))))
(let (($generated@@273  (=> (and (and (<= ($generated@@49 0.0) $generated@@236) (< $generated@@236 100.0)) (= (ControlFlow 0 22) 19)) $generated@@271)))
(let (($generated@@274  (=> (< $generated@@236 ($generated@@49 0.0)) (and (=> (= (ControlFlow 0 27) 22) $generated@@273) (=> (= (ControlFlow 0 27) 23) $generated@@272)))))
(let (($generated@@275  (=> (and (<= ($generated@@49 0.0) $generated@@236) (= $generated@@251 ($generated@@49 100.0))) (and (=> (= (ControlFlow 0 25) (- 0 26)) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@251) (< $generated@@251 300.0))) (=> (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@251) (< $generated@@251 300.0)) (and (=> (= (ControlFlow 0 25) 22) $generated@@273) (=> (= (ControlFlow 0 25) 23) $generated@@272)))))))
(let (($generated@@276  (=> (and (= $generated@@236 ($generated@@207 ($generated@@172 $generated@@236))) (= $generated@@252 ($generated@@49 0.0))) (and (=> (= (ControlFlow 0 28) (- 0 29)) (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@252) (< $generated@@252 300.0))) (=> (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@252) (< $generated@@252 300.0)) (and (=> (= (ControlFlow 0 28) 25) $generated@@275) (=> (= (ControlFlow 0 28) 27) $generated@@274)))))))
(let (($generated@@277  (=> (< $generated@@233 1) (and (=> (= (ControlFlow 0 17) (- 0 18)) (and (<= 0 $generated@@233) (< $generated@@233 1))) (=> (and (<= 0 $generated@@233) (< $generated@@233 1)) (=> (and (= $generated@@253 0) (= $generated@@239 $generated@@242)) (=> (and (and (= $generated@@238 $generated@@249) (= $generated@@240 $generated@@253)) (and (= $generated@@237 $generated@@244) (= (ControlFlow 0 17) 4))) $generated@@266)))))))
(let (($generated@@278  (=> (= $generated@@233 ($generated@@47 0)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (and (<= 0 $generated@@233) (< $generated@@233 1))) (=> (and (<= 0 $generated@@233) (< $generated@@233 1)) (=> (and (= $generated@@254 0) (= $generated@@239 $generated@@242)) (=> (and (and (= $generated@@238 $generated@@249) (= $generated@@240 $generated@@254)) (and (= $generated@@237 $generated@@244) (= (ControlFlow 0 15) 4))) $generated@@266)))))))
(let (($generated@@279  (=> (< $generated@@233 128) (and (=> (= (ControlFlow 0 13) (- 0 14)) (and (<= 0 $generated@@233) (< $generated@@233 128))) (=> (and (<= 0 $generated@@233) (< $generated@@233 128)) (=> (and (= $generated@@255 ((_ int2bv 7) $generated@@233)) (= $generated@@239 $generated@@255)) (=> (and (and (= $generated@@238 $generated@@249) (= $generated@@240 $generated@@243)) (and (= $generated@@237 $generated@@244) (= (ControlFlow 0 13) 4))) $generated@@266)))))))
(let (($generated@@280  (=> ($generated@@0 ($generated@@176 ($generated@@11 true))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (and (<= 0 $generated@@232) (< $generated@@232 1))) (=> (and (<= 0 $generated@@232) (< $generated@@232 1)) (=> (and (= $generated@@256 0) (= $generated@@239 $generated@@242)) (=> (and (and (= $generated@@238 $generated@@249) (= $generated@@240 $generated@@256)) (and (= $generated@@237 $generated@@244) (= (ControlFlow 0 11) 4))) $generated@@266)))))))
(let (($generated@@281  (=> ($generated@@0 ($generated@@176 ($generated@@11 true))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 $generated@@232) (< $generated@@232 128))) (=> (and (<= 0 $generated@@232) (< $generated@@232 128)) (=> (and (= $generated@@257 ((_ int2bv 7) $generated@@232)) (= $generated@@239 $generated@@257)) (=> (and (and (= $generated@@238 $generated@@249) (= $generated@@240 $generated@@243)) (and (= $generated@@237 $generated@@244) (= (ControlFlow 0 9) 4))) $generated@@266)))))))
(let (($generated@@282  (=> ($generated@@0 ($generated@@176 ($generated@@11 true))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 $generated@@232) (< $generated@@232 4294967296))) (=> (and (<= 0 $generated@@232) (< $generated@@232 4294967296)) (=> (and (= $generated@@258 ((_ int2bv 32) $generated@@232)) (= $generated@@239 $generated@@242)) (=> (and (and (= $generated@@238 $generated@@258) (= $generated@@240 $generated@@243)) (and (= $generated@@237 $generated@@244) (= (ControlFlow 0 7) 4))) $generated@@266)))))))
(let (($generated@@283  (=> ($generated@@0 ($generated@@176 ($generated@@11 true))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 $generated@@232) (< $generated@@232 147573952589676412928))) (=> (and (<= 0 $generated@@232) (< $generated@@232 147573952589676412928)) (=> (and (= $generated@@259 ((_ int2bv 67) $generated@@232)) (= $generated@@239 $generated@@242)) (=> (and (and (= $generated@@238 $generated@@249) (= $generated@@240 $generated@@243)) (and (= $generated@@237 $generated@@259) (= (ControlFlow 0 5) 4))) $generated@@266)))))))
(let (($generated@@284  (=> (and (and (and (and (and (and (and (and (and (not ($generated@@0 ($generated@@176 ($generated@@11 true)))) (not ($generated@@0 ($generated@@176 ($generated@@11 true))))) (not ($generated@@0 ($generated@@176 ($generated@@11 true))))) (not ($generated@@0 ($generated@@176 ($generated@@11 true))))) (<= 128 $generated@@233)) (not (= $generated@@233 ($generated@@47 0)))) (<= 1 $generated@@233)) (not (and (<= ($generated@@47 0) $generated@@235) (< $generated@@235 4294967296)))) (not (= $generated@@236 ($generated@@207 ($generated@@172 $generated@@236))))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@285  (=> (and (= $generated@@260 ($generated@@60 $generated@@261 $generated@@262 $generated@@263 false)) (= $generated@@232 ($generated@@47 150))) (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 37) 5) $generated@@283) (=> (= (ControlFlow 0 37) 7) $generated@@282)) (=> (= (ControlFlow 0 37) 9) $generated@@281)) (=> (= (ControlFlow 0 37) 11) $generated@@280)) (=> (= (ControlFlow 0 37) 13) $generated@@279)) (=> (= (ControlFlow 0 37) 15) $generated@@278)) (=> (= (ControlFlow 0 37) 17) $generated@@277)) (=> (= (ControlFlow 0 37) 35) $generated@@270)) (=> (= (ControlFlow 0 37) 28) $generated@@276)) (=> (= (ControlFlow 0 37) 2) $generated@@284)))))
(let (($generated@@286  (=> (and (and ($generated@@264 $generated@@262) ($generated@@265 $generated@@262)) (and (<= ($generated@@47 0) $generated@@233) (= ($generated@@48 $generated@@235 ($generated@@47 2)) ($generated@@47 0)))) (=> (and (and (and (<= ($generated@@49 (- 0.0 4.0)) $generated@@236) (< $generated@@236 300.0)) (= 0 $generated@@243)) (and (= 2 $generated@@44) (= (ControlFlow 0 38) 37))) $generated@@285))))
$generated@@286))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 9) (- 10))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 11) (- 12))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
