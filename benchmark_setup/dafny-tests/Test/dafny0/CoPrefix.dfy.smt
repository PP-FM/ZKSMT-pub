(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@84 (T@U) Int)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@104 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (Int) T@U)
(declare-fun $generated@@106 (T@T T@T) T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U) T@U)
(declare-fun $generated@@114 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@199 (T@U T@U T@U) T@U)
(declare-fun $generated@@200 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@201 (T@T T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 (T@U T@U) T@U)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (Int) Int)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@292 (T@U T@U) T@U)
(declare-fun $generated@@298 (T@U) Bool)
(declare-fun $generated@@299 (T@U T@U T@U) Bool)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@333 (T@U) Int)
(declare-fun $generated@@334 (T@T) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@T T@T) T@U)
(declare-fun $generated@@344 (T@T T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@T T@T) T@U)
(declare-fun $generated@@362 (T@T T@T) T@T)
(declare-fun $generated@@363 (T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@378 (T@U) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@T T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@T) T@U)
(declare-fun $generated@@491 () T@T)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@541 (T@U Int) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(declare-fun $generated@@584 (T@U) Int)
(declare-fun $generated@@686 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@79) 11) (= ($generated@@1 $generated@@80) 12)) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@78 $generated@@91)) $generated@@80)
 :pattern ( ($generated@@78 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@83 $generated@@92)) $generated@@67)
 :pattern ( ($generated@@83 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@86 $generated@@93)) $generated@@79)
 :pattern ( ($generated@@86 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= (type ($generated@@87 $generated@@94 $generated@@95)) $generated@@79)
 :pattern ( ($generated@@87 $generated@@94 $generated@@95))
))) (forall (($generated@@96 Int) ) (! (= (type ($generated@@88 $generated@@96)) $generated@@79)
 :pattern ( ($generated@@88 $generated@@96))
))) (forall (($generated@@97 T@U) ) (! (= (type ($generated@@89 $generated@@97)) $generated@@81)
 :pattern ( ($generated@@89 $generated@@97))
))))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@98) $generated@@67) (= (type $generated@@99) $generated@@67)) (= (type $generated@@100) $generated@@79)) (= (type $generated@@101) $generated@@80)) (= (type $generated@@102) $generated@@81)) (= (type $generated@@103) $generated@@81)) (and ($generated@@82 $generated@@102 ($generated@@83 $generated@@98)) ($generated@@82 $generated@@103 ($generated@@83 $generated@@99)))) (= ($generated@@77 $generated@@98 $generated@@99 $generated@@100 ($generated@@78 $generated@@101) $generated@@102 $generated@@103)  (and (=> (< 0 ($generated@@84 $generated@@100)) (and (and ($generated@@85 $generated@@102) ($generated@@85 $generated@@103)) (=> (and ($generated@@85 $generated@@102) ($generated@@85 $generated@@103)) (and (= ($generated@@86 $generated@@102) ($generated@@86 $generated@@103)) ($generated@@77 $generated@@98 $generated@@99 ($generated@@87 $generated@@100 ($generated@@88 1)) $generated@@101 ($generated@@89 $generated@@102) ($generated@@89 $generated@@103)))))) (=> (and (not (= $generated@@100 ($generated@@88 0))) (= ($generated@@84 $generated@@100) 0)) ($generated@@90 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103)))))
 :pattern ( ($generated@@77 $generated@@98 $generated@@99 $generated@@100 ($generated@@78 $generated@@101) $generated@@102 $generated@@103))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (= ($generated@@1 ($generated@@106 $generated@@115 $generated@@116)) 14)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ) (! (= ($generated@@109 ($generated@@106 $generated@@117 $generated@@118)) $generated@@117)
 :pattern ( ($generated@@106 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (! (= ($generated@@110 ($generated@@106 $generated@@119 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@106 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@110 (type $generated@@121))))
(= (type ($generated@@111 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@111 $generated@@121 $generated@@122))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 (type $generated@@126)))
(let (($generated@@128 (type $generated@@125)))
(= (type ($generated@@112 $generated@@124 $generated@@125 $generated@@126)) ($generated@@106 $generated@@128 $generated@@127))))
 :pattern ( ($generated@@112 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@129))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@111 ($generated@@112 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@111 ($generated@@112 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@111 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@111 ($generated@@112 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@111 $generated@@138 $generated@@140)))
 :weight 0
)))) (= ($generated@@1 $generated@@107) 15)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (let (($generated@@143 ($generated@@70 (type $generated@@142))))
(= (type ($generated@@113 $generated@@141 $generated@@142)) $generated@@143))
 :pattern ( ($generated@@113 $generated@@141 $generated@@142))
))) (= ($generated@@1 $generated@@108) 16)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@114 $generated@@144 $generated@@145 $generated@@146)) $generated@@108)
 :pattern ( ($generated@@114 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (let (($generated@@150 ($generated@@70 (type $generated@@148))))
 (=> (= (type $generated@@149) $generated@@150) (= ($generated@@113 ($generated@@114 $generated@@147 $generated@@148 $generated@@149) $generated@@148) $generated@@149)))
 :weight 0
))) (and (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@153 $generated@@154) (= ($generated@@113 ($generated@@114 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@113 $generated@@152 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or true (= ($generated@@113 ($generated@@114 $generated@@156 $generated@@157 $generated@@155) $generated@@158) ($generated@@113 $generated@@156 $generated@@158)))
 :weight 0
)))) (forall (($generated@@159 Int) ) (! (= (type ($generated@@105 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@105 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@160) $generated@@2) (= (type $generated@@161) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@104 $generated@@160 ($generated@@105 0) $generated@@161))
 :pattern ( ($generated@@104 $generated@@160 ($generated@@105 0) $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@162) $generated@@67) (= (type $generated@@163) $generated@@67)) (= (type $generated@@164) $generated@@79)) (= (type $generated@@165) $generated@@80)) (= (type $generated@@166) $generated@@81)) (= (type $generated@@167) $generated@@81)) (not (= $generated@@164 ($generated@@88 0)))) (= ($generated@@77 $generated@@162 $generated@@163 $generated@@164 ($generated@@78 $generated@@165) $generated@@166 $generated@@167) ($generated@@77 $generated@@162 $generated@@163 $generated@@164 $generated@@165 $generated@@166 $generated@@167)))
 :pattern ( ($generated@@77 $generated@@162 $generated@@163 $generated@@164 ($generated@@78 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@79) (= (type $generated@@170) $generated@@79)) (= (type $generated@@171) $generated@@79)) (and ($generated@@168 $generated@@169 $generated@@170) ($generated@@168 $generated@@170 $generated@@171))) ($generated@@168 $generated@@169 $generated@@171))
 :pattern ( ($generated@@168 $generated@@169 $generated@@170) ($generated@@168 $generated@@170 $generated@@171))
 :pattern ( ($generated@@168 $generated@@169 $generated@@170) ($generated@@168 $generated@@169 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@81) ($generated@@172 $generated@@173)) ($generated@@85 $generated@@173))
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@2) ($generated@@82 $generated@@174 ($generated@@105 0)))
 :pattern ( ($generated@@82 $generated@@174 ($generated@@105 0)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 Int) ($generated@@177 Int) ) (!  (=> (= (type $generated@@175) $generated@@79) (=> (and (and (<= 0 $generated@@176) (<= 0 $generated@@177)) (<= (+ $generated@@176 $generated@@177) ($generated@@84 $generated@@175))) (= ($generated@@87 ($generated@@87 $generated@@175 ($generated@@88 $generated@@176)) ($generated@@88 $generated@@177)) ($generated@@87 $generated@@175 ($generated@@88 (+ $generated@@176 $generated@@177))))))
 :pattern ( ($generated@@87 ($generated@@87 $generated@@175 ($generated@@88 $generated@@176)) ($generated@@88 $generated@@177)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@180 $generated@@181)) $generated@@67)
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (and (= (type $generated@@182) $generated@@67) (= (type $generated@@183) $generated@@67)) (= (type $generated@@184) $generated@@81)) ($generated@@82 $generated@@184 ($generated@@179 $generated@@182 $generated@@183))) ($generated@@178 $generated@@184))
 :pattern ( ($generated@@178 $generated@@184) ($generated@@82 $generated@@184 ($generated@@179 $generated@@182 $generated@@183)))
)))
(assert  (and (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@79)
 :pattern ( ($generated@@186 $generated@@188))
)) (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@79)
 :pattern ( ($generated@@187 $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@190) $generated@@81) (= (type $generated@@191) $generated@@81)) true) (= ($generated@@185 $generated@@190 $generated@@191)  (and (= ($generated@@186 $generated@@190) ($generated@@186 $generated@@191)) (= ($generated@@187 $generated@@190) ($generated@@187 $generated@@191)))))
 :pattern ( ($generated@@185 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@67)
 :pattern ( ($generated@@192 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@195) ($generated@@106 $generated@@79 $generated@@2)) (= (type $generated@@196) $generated@@67)) ($generated@@82 $generated@@195 ($generated@@192 $generated@@196))) ($generated@@193 $generated@@195))
 :pattern ( ($generated@@82 $generated@@195 ($generated@@192 $generated@@196)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (= (type $generated@@197) $generated@@67) (= (type $generated@@198) $generated@@81)) ($generated@@82 $generated@@198 ($generated@@83 $generated@@197))) ($generated@@85 $generated@@198))
 :pattern ( ($generated@@85 $generated@@198) ($generated@@82 $generated@@198 ($generated@@83 $generated@@197)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@205 $generated@@206)) 17)) (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@207 $generated@@208)) $generated@@207)
 :pattern ( ($generated@@201 $generated@@207 $generated@@208))
))) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@203 ($generated@@201 $generated@@209 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@201 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@203 (type $generated@@211))))
(= (type ($generated@@199 $generated@@211 $generated@@212 $generated@@213)) $generated@@214))
 :pattern ( ($generated@@199 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(let (($generated@@220 (type $generated@@216)))
(= (type ($generated@@204 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@201 $generated@@220 $generated@@219))))
 :pattern ( ($generated@@204 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@203 (type $generated@@221))))
 (=> (= (type $generated@@224) $generated@@225) (= ($generated@@199 ($generated@@204 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@222 $generated@@223) $generated@@224)))
 :weight 0
))) (and (and (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@199 ($generated@@204 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@199 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@199 ($generated@@204 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@199 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or true (= ($generated@@199 ($generated@@204 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@199 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
)))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ) (! (= (type ($generated@@200 $generated@@244 $generated@@245 $generated@@246 $generated@@247)) ($generated@@201 $generated@@107 $generated@@4))
 :pattern ( ($generated@@200 $generated@@244 $generated@@245 $generated@@246 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@70 (type $generated@@253))))
 (=> (and (and (and (and (= (type $generated@@248) $generated@@107) (= (type $generated@@249) ($generated@@106 $generated@@107 $generated@@108))) (= (type $generated@@250) ($generated@@69 $generated@@4))) (= (type $generated@@252) $generated@@107)) (= (type $generated@@253) ($generated@@69 $generated@@254))) (= ($generated@@0 ($generated@@199 ($generated@@200 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))  (=> (and (not (= $generated@@252 $generated@@248)) ($generated@@0 ($generated@@113 ($generated@@111 $generated@@249 $generated@@252) $generated@@250))) $generated@@251))))
 :pattern ( ($generated@@199 ($generated@@200 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@255) $generated@@67) (= (type $generated@@256) $generated@@67)) (= (type $generated@@257) $generated@@79)) (= (type $generated@@258) $generated@@80)) (= (type $generated@@259) $generated@@81)) (= (type $generated@@260) $generated@@81)) (= $generated@@259 $generated@@260)) ($generated@@77 $generated@@255 $generated@@256 $generated@@257 ($generated@@78 $generated@@258) $generated@@259 $generated@@260))
 :pattern ( ($generated@@77 $generated@@255 $generated@@256 $generated@@257 ($generated@@78 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (! (= (type ($generated@@261 $generated@@263 $generated@@264)) $generated@@81)
 :pattern ( ($generated@@261 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (= (type $generated@@265) $generated@@67) (= (type $generated@@266) $generated@@67)) (= (type $generated@@267) $generated@@79)) (= (type $generated@@268) $generated@@79)) (= ($generated@@82 ($generated@@261 $generated@@267 $generated@@268) ($generated@@179 $generated@@265 $generated@@266))  (and ($generated@@262 $generated@@267 $generated@@265) ($generated@@262 $generated@@268 $generated@@266))))
 :pattern ( ($generated@@82 ($generated@@261 $generated@@267 $generated@@268) ($generated@@179 $generated@@265 $generated@@266)))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@269) $generated@@67) (= (type $generated@@270) $generated@@67)) (= (type $generated@@271) $generated@@80)) (= (type $generated@@272) $generated@@81)) (= (type $generated@@273) $generated@@81)) (= ($generated@@90 $generated@@269 $generated@@270 ($generated@@78 $generated@@271) $generated@@272 $generated@@273) (= $generated@@272 $generated@@273)))
 :pattern ( ($generated@@90 $generated@@269 $generated@@270 ($generated@@78 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@81) (= (type $generated@@275) $generated@@81)) (= ($generated@@185 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@185 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@67)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@106 $generated@@79 $generated@@4)) (= (type $generated@@279) $generated@@67)) (= ($generated@@82 $generated@@278 ($generated@@276 $generated@@279)) (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@79) ($generated@@0 ($generated@@111 $generated@@278 $generated@@280))) ($generated@@262 $generated@@280 $generated@@279))
 :pattern ( ($generated@@111 $generated@@278 $generated@@280))
))))
 :pattern ( ($generated@@82 $generated@@278 ($generated@@276 $generated@@279)))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@67)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@106 $generated@@79 $generated@@4)) (= (type $generated@@284) $generated@@67)) (= ($generated@@82 $generated@@283 ($generated@@281 $generated@@284)) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@79) ($generated@@0 ($generated@@111 $generated@@283 $generated@@285))) ($generated@@262 $generated@@285 $generated@@284))
 :pattern ( ($generated@@111 $generated@@283 $generated@@285))
))))
 :pattern ( ($generated@@82 $generated@@283 ($generated@@281 $generated@@284)))
)))
(assert (forall (($generated@@287 Int) ) (! (= ($generated@@286 $generated@@287) $generated@@287)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 (type $generated@@289)))
(= (type ($generated@@288 $generated@@289)) $generated@@290))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= ($generated@@288 $generated@@291) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (= (type ($generated@@292 $generated@@293 $generated@@294)) $generated@@81)
 :pattern ( ($generated@@292 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (= (type $generated@@295) $generated@@67) (= (type $generated@@296) $generated@@79)) (= (type $generated@@297) $generated@@81)) (= ($generated@@82 ($generated@@292 $generated@@296 $generated@@297) ($generated@@83 $generated@@295))  (and ($generated@@262 $generated@@296 $generated@@295) ($generated@@82 $generated@@297 ($generated@@83 $generated@@295)))))
 :pattern ( ($generated@@82 ($generated@@292 $generated@@296 $generated@@297) ($generated@@83 $generated@@295)))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) $generated@@67) (= (type $generated@@301) $generated@@67)) (= (type $generated@@302) $generated@@79)) (= (type $generated@@303) $generated@@79)) (= (type $generated@@304) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@298 $generated@@304)) (= ($generated@@104 ($generated@@261 $generated@@302 $generated@@303) ($generated@@179 $generated@@300 $generated@@301) $generated@@304)  (and ($generated@@299 $generated@@302 $generated@@300 $generated@@304) ($generated@@299 $generated@@303 $generated@@301 $generated@@304))))
 :pattern ( ($generated@@104 ($generated@@261 $generated@@302 $generated@@303) ($generated@@179 $generated@@300 $generated@@301) $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@71)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@81) (= ($generated@@178 $generated@@307) (= ($generated@@305 $generated@@307) $generated@@61)))
 :pattern ( ($generated@@178 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@81) (= ($generated@@85 $generated@@308) (= ($generated@@305 $generated@@308) $generated@@63)))
 :pattern ( ($generated@@85 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@81) ($generated@@178 $generated@@309)) (exists (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (and (and (= (type $generated@@310) $generated@@79) (= (type $generated@@311) $generated@@79)) (= $generated@@309 ($generated@@261 $generated@@310 $generated@@311)))
 :no-pattern (type $generated@@310)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@178 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@81) ($generated@@85 $generated@@312)) (exists (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (and (and (= (type $generated@@313) $generated@@79) (= (type $generated@@314) $generated@@81)) (= $generated@@312 ($generated@@292 $generated@@313 $generated@@314)))
 :no-pattern (type $generated@@313)
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
)))
 :pattern ( ($generated@@85 $generated@@312))
)))
(assert  (and (and (forall (($generated@@319 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@319)) 18)) (forall (($generated@@320 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@317 $generated@@320))
))) (forall (($generated@@321 T@T) ) (! (= (type ($generated@@315 $generated@@321)) ($generated@@317 $generated@@321))
 :pattern ( ($generated@@315 $generated@@321))
))))
(assert (forall (($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@322)) 0)
 :pattern ( ($generated@@315 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@323) $generated@@67) (= (type $generated@@324) $generated@@67)) (= (type $generated@@325) $generated@@80)) (= (type $generated@@326) $generated@@81)) (= (type $generated@@327) $generated@@81)) (and ($generated@@82 $generated@@326 ($generated@@83 $generated@@323)) ($generated@@82 $generated@@327 ($generated@@83 $generated@@324)))) (= ($generated@@90 $generated@@323 $generated@@324 ($generated@@78 $generated@@325) $generated@@326 $generated@@327)  (and (and ($generated@@85 $generated@@326) ($generated@@85 $generated@@327)) (=> (and ($generated@@85 $generated@@326) ($generated@@85 $generated@@327)) (and (= ($generated@@86 $generated@@326) ($generated@@86 $generated@@327)) ($generated@@90 $generated@@323 $generated@@324 $generated@@325 ($generated@@89 $generated@@326) ($generated@@89 $generated@@327)))))))
 :pattern ( ($generated@@90 $generated@@323 $generated@@324 ($generated@@78 $generated@@325) $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@79)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@67) (= (type $generated@@332) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@299 ($generated@@328 $generated@@330) $generated@@331 $generated@@332) ($generated@@104 $generated@@330 $generated@@331 $generated@@332)))
 :pattern ( ($generated@@299 ($generated@@328 $generated@@330) $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@335 T@T) ) (! (= (type ($generated@@334 $generated@@335)) ($generated@@106 $generated@@335 $generated@@2))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@109 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@106 $generated@@337 $generated@@2)) (and (= (= ($generated@@333 $generated@@336) 0) (= $generated@@336 ($generated@@334 $generated@@337))) (=> (not (= ($generated@@333 $generated@@336) 0)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) (< 0 ($generated ($generated@@111 $generated@@336 $generated@@338))))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@72)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@67) (and (= ($generated@@75 ($generated@@83 $generated@@341)) $generated@@64) (= ($generated@@339 ($generated@@83 $generated@@341)) $generated@@66)))
 :pattern ( ($generated@@83 $generated@@341))
)))
(assert  (and (and (and (and (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (= ($generated@@1 ($generated@@344 $generated@@347 $generated@@348)) 19)) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@344 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@346 ($generated@@344 $generated@@351 $generated@@352)) $generated@@352)
 :pattern ( ($generated@@344 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@345 (type $generated@@353))))
(= (type ($generated@@342 $generated@@353)) ($generated@@106 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@353))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= (type ($generated@@343 $generated@@355 $generated@@356)) ($generated@@344 $generated@@355 $generated@@356))
 :pattern ( ($generated@@343 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@T) ) (! (let (($generated@@359 (type $generated@@357)))
 (not ($generated@@0 ($generated@@111 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357))))
 :pattern ( (let (($generated@@359 (type $generated@@357)))
($generated@@111 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357)))
)))
(assert  (and (and (and (and (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (= ($generated@@1 ($generated@@362 $generated@@365 $generated@@366)) 20)) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@363 ($generated@@362 $generated@@367 $generated@@368)) $generated@@367)
 :pattern ( ($generated@@362 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= ($generated@@364 ($generated@@362 $generated@@369 $generated@@370)) $generated@@370)
 :pattern ( ($generated@@362 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@363 (type $generated@@371))))
(= (type ($generated@@360 $generated@@371)) ($generated@@106 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@371))
))) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= (type ($generated@@361 $generated@@373 $generated@@374)) ($generated@@362 $generated@@373 $generated@@374))
 :pattern ( ($generated@@361 $generated@@373 $generated@@374))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@T) ) (! (let (($generated@@377 (type $generated@@375)))
 (not ($generated@@0 ($generated@@111 ($generated@@360 ($generated@@361 $generated@@377 $generated@@376)) $generated@@375))))
 :pattern ( (let (($generated@@377 (type $generated@@375)))
($generated@@111 ($generated@@360 ($generated@@361 $generated@@377 $generated@@376)) $generated@@375)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@379) $generated@@79) (= (type $generated@@380) $generated@@79)) (and ($generated@@378 $generated@@380) (<= ($generated@@84 $generated@@380) ($generated@@84 $generated@@379)))) (and (= ($generated@@378 ($generated@@87 $generated@@379 $generated@@380)) ($generated@@378 $generated@@379)) (= ($generated@@84 ($generated@@87 $generated@@379 $generated@@380)) (- ($generated@@84 $generated@@379) ($generated@@84 $generated@@380)))))
 :pattern ( ($generated@@87 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 Int) ) (!  (=> (<= 0 $generated@@381) (and ($generated@@378 ($generated@@88 $generated@@381)) (= ($generated@@84 ($generated@@88 $generated@@381)) $generated@@381)))
 :pattern ( ($generated@@88 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@109 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@106 $generated@@383 $generated@@2)) (= ($generated@@193 $generated@@382) (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@383) (and (<= 0 ($generated ($generated@@111 $generated@@382 $generated@@384))) (<= ($generated ($generated@@111 $generated@@382 $generated@@384)) ($generated@@333 $generated@@382))))
 :pattern ( ($generated@@111 $generated@@382 $generated@@384))
)))))
 :pattern ( ($generated@@193 $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@346 (type $generated@@385))))
(let (($generated@@387 ($generated@@345 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@344 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@343 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) ($generated@@0 ($generated@@111 ($generated@@342 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@342 $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@346 (type $generated@@390))))
(= (type ($generated@@389 $generated@@390)) ($generated@@106 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@346 (type $generated@@392))))
(let (($generated@@394 ($generated@@345 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@344 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@343 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@393) ($generated@@0 ($generated@@111 ($generated@@389 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@389 $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@364 (type $generated@@396))))
(let (($generated@@398 ($generated@@363 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@362 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@361 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) ($generated@@0 ($generated@@111 ($generated@@360 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@360 $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@364 (type $generated@@401))))
(= (type ($generated@@400 $generated@@401)) ($generated@@106 $generated@@402 $generated@@4)))
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@364 (type $generated@@403))))
(let (($generated@@405 ($generated@@363 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@362 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@361 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@404) ($generated@@0 ($generated@@111 ($generated@@400 $generated@@403) $generated@@406)))
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@400 $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@106 $generated@@79 $generated@@2)) (= (type $generated@@408) $generated@@67)) (= ($generated@@82 $generated@@407 ($generated@@192 $generated@@408)) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@79) (< 0 ($generated ($generated@@111 $generated@@407 $generated@@409)))) ($generated@@262 $generated@@409 $generated@@408))
 :pattern ( ($generated@@111 $generated@@407 $generated@@409))
))))
 :pattern ( ($generated@@82 $generated@@407 ($generated@@192 $generated@@408)))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@79) (= (type $generated@@411) $generated@@79)) (or (or ($generated@@168 $generated@@410 $generated@@411) (= $generated@@410 $generated@@411)) ($generated@@168 $generated@@411 $generated@@410)))
 :pattern ( ($generated@@168 $generated@@410 $generated@@411) ($generated@@168 $generated@@411 $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@106 $generated@@79 $generated@@4)) (= (type $generated@@413) $generated@@67)) (= (type $generated@@414) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@412 ($generated@@276 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@79) ($generated@@0 ($generated@@111 $generated@@412 $generated@@415))) ($generated@@299 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@111 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@104 $generated@@412 ($generated@@276 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@106 $generated@@79 $generated@@4)) (= (type $generated@@417) $generated@@67)) (= (type $generated@@418) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@416 ($generated@@281 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@79) ($generated@@0 ($generated@@111 $generated@@416 $generated@@419))) ($generated@@299 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@111 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@104 $generated@@416 ($generated@@281 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(= ($generated ($generated@@111 ($generated@@334 $generated@@421) $generated@@420)) 0))
 :pattern ( (let (($generated@@421 (type $generated@@420)))
($generated@@111 ($generated@@334 $generated@@421) $generated@@420)))
)))
(assert  (and (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@422 $generated@@425)) ($generated@@106 $generated@@79 $generated@@4))
 :pattern ( ($generated@@422 $generated@@425))
)) (forall (($generated@@426 T@T) ($generated@@427 T@U) ) (! (= (type ($generated@@423 $generated@@426 $generated@@427)) $generated@@426)
 :pattern ( ($generated@@423 $generated@@426 $generated@@427))
))) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@346 (type $generated@@428))))
(let (($generated@@430 ($generated@@345 (type $generated@@428))))
(= (type ($generated@@424 $generated@@428)) ($generated@@106 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@424 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@344 $generated@@79 $generated@@79)) (= (type $generated@@432) $generated@@79)) (= ($generated@@0 ($generated@@111 ($generated@@422 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@111 ($generated@@342 $generated@@431) ($generated@@186 ($generated@@423 $generated@@81 $generated@@432)))) (= ($generated@@111 ($generated@@424 $generated@@431) ($generated@@186 ($generated@@423 $generated@@81 $generated@@432))) ($generated@@187 ($generated@@423 $generated@@81 $generated@@432))))))
 :pattern ( ($generated@@111 ($generated@@422 $generated@@431) $generated@@432))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@106 $generated@@79 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@364 (type $generated@@436))))
(let (($generated@@438 ($generated@@363 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@106 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@362 $generated@@79 $generated@@79)) (= (type $generated@@440) $generated@@79)) (= ($generated@@0 ($generated@@111 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@111 ($generated@@360 $generated@@439) ($generated@@186 ($generated@@423 $generated@@81 $generated@@440)))) (= ($generated@@111 ($generated@@434 $generated@@439) ($generated@@186 ($generated@@423 $generated@@81 $generated@@440))) ($generated@@187 ($generated@@423 $generated@@81 $generated@@440))))))
 :pattern ( ($generated@@111 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@345 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@344 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@111 ($generated@@389 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@111 ($generated@@342 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@111 ($generated@@424 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@111 ($generated@@342 $generated@@441) $generated@@445))
 :pattern ( ($generated@@111 ($generated@@424 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@111 ($generated@@389 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
(let (($generated@@449 ($generated@@363 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@362 $generated@@449 $generated@@448)) (= ($generated@@0 ($generated@@111 ($generated@@400 $generated@@446) $generated@@447)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) (and ($generated@@0 ($generated@@111 ($generated@@360 $generated@@446) $generated@@450)) (= $generated@@447 ($generated@@111 ($generated@@434 $generated@@446) $generated@@450))))
 :pattern ( ($generated@@111 ($generated@@360 $generated@@446) $generated@@450))
 :pattern ( ($generated@@111 ($generated@@434 $generated@@446) $generated@@450))
))))))
 :pattern ( ($generated@@111 ($generated@@400 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@344 $generated@@79 $generated@@79)) (= (type $generated@@455) $generated@@67)) (= (type $generated@@456) $generated@@67)) (= (type $generated@@457) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@79) ($generated@@0 ($generated@@111 ($generated@@342 $generated@@454) $generated@@458))) (and ($generated@@299 ($generated@@111 ($generated@@424 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@299 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@111 ($generated@@424 $generated@@454) $generated@@458))
 :pattern ( ($generated@@111 ($generated@@342 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@104 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@362 $generated@@79 $generated@@79)) (= (type $generated@@463) $generated@@67)) (= (type $generated@@464) $generated@@67)) (= (type $generated@@465) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@79) ($generated@@0 ($generated@@111 ($generated@@360 $generated@@462) $generated@@466))) (and ($generated@@299 ($generated@@111 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@299 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@111 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@111 ($generated@@360 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@104 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 T@T) ) (! (= (type ($generated@@467 $generated@@468)) ($generated@@106 $generated@@468 $generated@@4))
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@364 (type $generated@@469))))
(let (($generated@@471 ($generated@@363 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@362 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@361 $generated@@471 $generated@@470)) (= ($generated@@360 $generated@@469) ($generated@@467 $generated@@471))))))
 :pattern ( ($generated@@360 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@364 (type $generated@@472))))
(let (($generated@@474 ($generated@@363 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@362 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@361 $generated@@474 $generated@@473)) (= ($generated@@400 $generated@@472) ($generated@@467 $generated@@473))))))
 :pattern ( ($generated@@400 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@364 (type $generated@@475))))
(let (($generated@@477 ($generated@@363 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@362 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@361 $generated@@477 $generated@@476)) (= ($generated@@433 $generated@@475) ($generated@@467 $generated@@79))))))
 :pattern ( ($generated@@433 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@346 (type $generated@@478))))
(let (($generated@@480 ($generated@@345 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@344 $generated@@480 $generated@@479)) (or (= $generated@@478 ($generated@@343 $generated@@480 $generated@@479)) (exists (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (and (and (= (type $generated@@481) $generated@@79) (= (type $generated@@482) $generated@@79)) ($generated@@0 ($generated@@111 ($generated@@422 $generated@@478) ($generated@@328 ($generated@@261 $generated@@481 $generated@@482)))))
 :no-pattern (type $generated@@481)
 :no-pattern (type $generated@@482)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
))))))
 :pattern ( ($generated@@422 $generated@@478))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@364 (type $generated@@483))))
(let (($generated@@485 ($generated@@363 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@362 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@361 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@79) (= (type $generated@@487) $generated@@79)) ($generated@@0 ($generated@@111 ($generated@@433 $generated@@483) ($generated@@328 ($generated@@261 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@433 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@79) ($generated@@262 $generated@@488 $generated@@46)) (and (= ($generated@@328 ($generated@@423 $generated@@2 $generated@@488)) $generated@@488) ($generated@@82 ($generated@@423 $generated@@2 $generated@@488) $generated@@46)))
 :pattern ( ($generated@@262 $generated@@488 $generated@@46))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@79) ($generated@@262 $generated@@489 $generated@@47)) (and (= ($generated@@328 ($generated@@423 $generated@@3 $generated@@489)) $generated@@489) ($generated@@82 ($generated@@423 $generated@@3 $generated@@489) $generated@@47)))
 :pattern ( ($generated@@262 $generated@@489 $generated@@47))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@79) ($generated@@262 $generated@@490 $generated@@44)) (and (= ($generated@@328 ($generated@@423 $generated@@4 $generated@@490)) $generated@@490) ($generated@@82 ($generated@@423 $generated@@4 $generated@@490) $generated@@44)))
 :pattern ( ($generated@@262 $generated@@490 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@491) 21))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@79) ($generated@@262 $generated@@492 $generated@@45)) (and (= ($generated@@328 ($generated@@423 $generated@@491 $generated@@492)) $generated@@492) ($generated@@82 ($generated@@423 $generated@@491 $generated@@492) $generated@@45)))
 :pattern ( ($generated@@262 $generated@@492 $generated@@45))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@262 ($generated@@328 $generated@@493) $generated@@494) ($generated@@82 $generated@@493 $generated@@494)))
 :pattern ( ($generated@@262 ($generated@@328 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@79) (<= 0 ($generated@@84 $generated@@495)))
 :pattern ( ($generated@@84 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@109 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@106 $generated@@497 $generated@@2)) (<= 0 ($generated@@333 $generated@@496))))
 :pattern ( ($generated@@333 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@318 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@317 $generated@@499)) (<= 0 ($generated@@316 $generated@@498))))
 :pattern ( ($generated@@316 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@67) (= (type $generated@@503) $generated@@67)) (= ($generated@@500 ($generated@@451 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@451 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@67) (= (type $generated@@507) $generated@@67)) (= ($generated@@504 ($generated@@451 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@451 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@67) (= (type $generated@@509) $generated@@67)) (= ($generated@@75 ($generated@@451 $generated@@508 $generated@@509)) $generated@@58))
 :pattern ( ($generated@@451 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@67) (= (type $generated@@513) $generated@@67)) (= ($generated@@510 ($generated@@459 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@459 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@67)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@67) (= (type $generated@@517) $generated@@67)) (= ($generated@@514 ($generated@@459 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@459 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@67) (= (type $generated@@519) $generated@@67)) (= ($generated@@75 ($generated@@459 $generated@@518 $generated@@519)) $generated@@59))
 :pattern ( ($generated@@459 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@79) (= (type $generated@@521) $generated@@79)) (= ($generated@@305 ($generated@@261 $generated@@520 $generated@@521)) $generated@@61))
 :pattern ( ($generated@@261 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@67)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@67) (= (type $generated@@525) $generated@@67)) (= ($generated@@522 ($generated@@179 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@179 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@67)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@67) (= (type $generated@@529) $generated@@67)) (= ($generated@@526 ($generated@@179 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@179 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@79) (= (type $generated@@531) $generated@@79)) (= ($generated@@186 ($generated@@261 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@261 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@79) (= (type $generated@@533) $generated@@79)) (= ($generated@@187 ($generated@@261 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@261 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@79) (= (type $generated@@535) $generated@@81)) (= ($generated@@305 ($generated@@292 $generated@@534 $generated@@535)) $generated@@63))
 :pattern ( ($generated@@292 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@79) (= (type $generated@@537) $generated@@81)) (= ($generated@@86 ($generated@@292 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@292 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@79) (= (type $generated@@539) $generated@@81)) (= ($generated@@89 ($generated@@292 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@292 $generated@@538 $generated@@539))
)))
(assert  (and (forall (($generated@@542 T@U) ) (! (= (type ($generated@@540 $generated@@542)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@542))
)) (forall (($generated@@543 T@U) ($generated@@544 Int) ) (! (let (($generated@@545 ($generated@@318 (type $generated@@543))))
(= (type ($generated@@541 $generated@@543 $generated@@544)) $generated@@545))
 :pattern ( ($generated@@541 $generated@@543 $generated@@544))
))))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@317 $generated@@79)) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@546 ($generated@@540 $generated@@547) $generated@@548) (forall (($generated@@549 Int) ) (!  (=> (and (<= 0 $generated@@549) (< $generated@@549 ($generated@@316 $generated@@546))) ($generated@@299 ($generated@@541 $generated@@546 $generated@@549) $generated@@547 $generated@@548))
 :pattern ( ($generated@@541 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@104 $generated@@546 ($generated@@540 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@551 Int) ) (! (= ($generated@@550 ($generated@@105 $generated@@551)) $generated@@551)
 :pattern ( ($generated@@105 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@67)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@67) (= ($generated@@552 ($generated@@276 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@276 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@67) (= ($generated@@75 ($generated@@276 $generated@@555)) $generated@@54))
 :pattern ( ($generated@@276 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@67)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@67) (= ($generated@@556 ($generated@@281 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@281 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@67) (= ($generated@@75 ($generated@@281 $generated@@559)) $generated@@55))
 :pattern ( ($generated@@281 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@67)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@67) (= ($generated@@560 ($generated@@192 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@192 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@67) (= ($generated@@75 ($generated@@192 $generated@@563)) $generated@@56))
 :pattern ( ($generated@@192 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@67)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@67) (= ($generated@@564 ($generated@@540 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@540 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@67) (= ($generated@@75 ($generated@@540 $generated@@567)) $generated@@57))
 :pattern ( ($generated@@540 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@67)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@67) (= ($generated@@568 ($generated@@83 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@83 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
(= ($generated@@423 $generated@@572 ($generated@@328 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@328 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@344 $generated@@79 $generated@@79)) (= (type $generated@@574) $generated@@67)) (= (type $generated@@575) $generated@@67)) (= ($generated@@82 $generated@@573 ($generated@@451 $generated@@574 $generated@@575)) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@79) ($generated@@0 ($generated@@111 ($generated@@342 $generated@@573) $generated@@576))) (and ($generated@@262 ($generated@@111 ($generated@@424 $generated@@573) $generated@@576) $generated@@575) ($generated@@262 $generated@@576 $generated@@574)))
 :pattern ( ($generated@@111 ($generated@@424 $generated@@573) $generated@@576))
 :pattern ( ($generated@@111 ($generated@@342 $generated@@573) $generated@@576))
))))
 :pattern ( ($generated@@82 $generated@@573 ($generated@@451 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@362 $generated@@79 $generated@@79)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) $generated@@67)) (= ($generated@@82 $generated@@577 ($generated@@459 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@79) ($generated@@0 ($generated@@111 ($generated@@360 $generated@@577) $generated@@580))) (and ($generated@@262 ($generated@@111 ($generated@@434 $generated@@577) $generated@@580) $generated@@579) ($generated@@262 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@111 ($generated@@434 $generated@@577) $generated@@580))
 :pattern ( ($generated@@111 ($generated@@360 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@82 $generated@@577 ($generated@@459 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@79) (= (type $generated@@582) $generated@@79)) (and (and (and (=> ($generated@@168 $generated@@581 $generated@@582) (not (= $generated@@581 $generated@@582))) (=> (and ($generated@@378 $generated@@581) (not ($generated@@378 $generated@@582))) ($generated@@168 $generated@@581 $generated@@582))) (=> (and ($generated@@378 $generated@@581) ($generated@@378 $generated@@582)) (= ($generated@@168 $generated@@581 $generated@@582) (< ($generated@@84 $generated@@581) ($generated@@84 $generated@@582))))) (=> (and ($generated@@168 $generated@@581 $generated@@582) ($generated@@378 $generated@@582)) ($generated@@378 $generated@@581))))
 :pattern ( ($generated@@168 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@79) (= (type $generated@@586) $generated@@79)) (< ($generated@@583 $generated@@585) ($generated@@584 ($generated@@261 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@261 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@79) (= (type $generated@@588) $generated@@79)) (< ($generated@@583 $generated@@588) ($generated@@584 ($generated@@261 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@261 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@79) (= (type $generated@@590) $generated@@67)) (= (type $generated@@591) $generated@@67)) ($generated@@262 $generated@@589 ($generated@@451 $generated@@590 $generated@@591))) (and (= ($generated@@328 ($generated@@423 ($generated@@344 $generated@@79 $generated@@79) $generated@@589)) $generated@@589) ($generated@@82 ($generated@@423 ($generated@@344 $generated@@79 $generated@@79) $generated@@589) ($generated@@451 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@262 $generated@@589 ($generated@@451 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@79) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) $generated@@67)) ($generated@@262 $generated@@592 ($generated@@459 $generated@@593 $generated@@594))) (and (= ($generated@@328 ($generated@@423 ($generated@@362 $generated@@79 $generated@@79) $generated@@592)) $generated@@592) ($generated@@82 ($generated@@423 ($generated@@362 $generated@@79 $generated@@79) $generated@@592) ($generated@@459 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@262 $generated@@592 ($generated@@459 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@67) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) $generated@@79)) ($generated@@262 $generated@@597 ($generated@@179 $generated@@595 $generated@@596))) (and (= ($generated@@328 ($generated@@423 $generated@@81 $generated@@597)) $generated@@597) ($generated@@82 ($generated@@423 $generated@@81 $generated@@597) ($generated@@179 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@262 $generated@@597 ($generated@@179 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@598) $generated@@67) (= (type $generated@@599) $generated@@67)) (= (type $generated@@600) $generated@@80)) (= (type $generated@@601) $generated@@81)) (= (type $generated@@602) $generated@@81)) (= ($generated@@90 $generated@@598 $generated@@599 ($generated@@78 $generated@@600) $generated@@601 $generated@@602) (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@79) ($generated@@77 $generated@@598 $generated@@599 $generated@@603 ($generated@@78 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@77 $generated@@598 $generated@@599 $generated@@603 ($generated@@78 $generated@@600) $generated@@601 $generated@@602))
))))
 :pattern ( ($generated@@90 $generated@@598 $generated@@599 ($generated@@78 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@81) (= (type $generated@@605) $generated@@67)) (= (type $generated@@606) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@298 $generated@@606) (and ($generated@@85 $generated@@604) ($generated@@104 $generated@@604 ($generated@@83 $generated@@605) $generated@@606)))) ($generated@@299 ($generated@@86 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@299 ($generated@@86 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@607)))
 (not ($generated@@0 ($generated@@111 ($generated@@467 $generated@@608) $generated@@607))))
 :pattern ( (let (($generated@@608 (type $generated@@607)))
($generated@@111 ($generated@@467 $generated@@608) $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@67) (= (type $generated@@610) $generated@@67)) (and (= ($generated@@75 ($generated@@179 $generated@@609 $generated@@610)) $generated@@62) (= ($generated@@339 ($generated@@179 $generated@@609 $generated@@610)) $generated@@65)))
 :pattern ( ($generated@@179 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@81) (= ($generated@@583 ($generated@@328 $generated@@611)) ($generated@@584 $generated@@611)))
 :pattern ( ($generated@@583 ($generated@@328 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@79) ($generated@@262 $generated@@612 ($generated@@105 0))) (and (= ($generated@@328 ($generated@@423 $generated@@2 $generated@@612)) $generated@@612) ($generated@@82 ($generated@@423 ($generated@@106 $generated@@79 $generated@@4) $generated@@612) ($generated@@105 0))))
 :pattern ( ($generated@@262 $generated@@612 ($generated@@105 0)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@79) (= (type $generated@@614) $generated@@67)) ($generated@@262 $generated@@613 ($generated@@276 $generated@@614))) (and (= ($generated@@328 ($generated@@423 ($generated@@106 $generated@@79 $generated@@4) $generated@@613)) $generated@@613) ($generated@@82 ($generated@@423 ($generated@@106 $generated@@79 $generated@@4) $generated@@613) ($generated@@276 $generated@@614))))
 :pattern ( ($generated@@262 $generated@@613 ($generated@@276 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@79) (= (type $generated@@616) $generated@@67)) ($generated@@262 $generated@@615 ($generated@@281 $generated@@616))) (and (= ($generated@@328 ($generated@@423 ($generated@@106 $generated@@79 $generated@@4) $generated@@615)) $generated@@615) ($generated@@82 ($generated@@423 ($generated@@106 $generated@@79 $generated@@4) $generated@@615) ($generated@@281 $generated@@616))))
 :pattern ( ($generated@@262 $generated@@615 ($generated@@281 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@79) (= (type $generated@@618) $generated@@67)) ($generated@@262 $generated@@617 ($generated@@192 $generated@@618))) (and (= ($generated@@328 ($generated@@423 ($generated@@106 $generated@@79 $generated@@2) $generated@@617)) $generated@@617) ($generated@@82 ($generated@@423 ($generated@@106 $generated@@79 $generated@@2) $generated@@617) ($generated@@192 $generated@@618))))
 :pattern ( ($generated@@262 $generated@@617 ($generated@@192 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@79) (= (type $generated@@620) $generated@@67)) ($generated@@262 $generated@@619 ($generated@@540 $generated@@620))) (and (= ($generated@@328 ($generated@@423 ($generated@@317 $generated@@79) $generated@@619)) $generated@@619) ($generated@@82 ($generated@@423 ($generated@@317 $generated@@79) $generated@@619) ($generated@@540 $generated@@620))))
 :pattern ( ($generated@@262 $generated@@619 ($generated@@540 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@67) (= (type $generated@@622) $generated@@79)) ($generated@@262 $generated@@622 ($generated@@83 $generated@@621))) (and (= ($generated@@328 ($generated@@423 $generated@@81 $generated@@622)) $generated@@622) ($generated@@82 ($generated@@423 $generated@@81 $generated@@622) ($generated@@83 $generated@@621))))
 :pattern ( ($generated@@262 $generated@@622 ($generated@@83 $generated@@621)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@79) ($generated@@378 $generated@@623)) (= $generated@@623 ($generated@@88 ($generated@@84 $generated@@623))))
 :pattern ( ($generated@@84 $generated@@623))
 :pattern ( ($generated@@378 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) $generated@@81) (= (type $generated@@625) $generated@@67)) (= (type $generated@@626) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@298 $generated@@626) (and ($generated@@85 $generated@@624) ($generated@@104 $generated@@624 ($generated@@83 $generated@@625) $generated@@626)))) ($generated@@104 ($generated@@89 $generated@@624) ($generated@@83 $generated@@625) $generated@@626))
 :pattern ( ($generated@@104 ($generated@@89 $generated@@624) ($generated@@83 $generated@@625) $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@627) ($generated@@106 $generated@@79 $generated@@2)) (= (type $generated@@628) $generated@@67)) (= (type $generated@@629) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@627 ($generated@@192 $generated@@628) $generated@@629) (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@79) (< 0 ($generated ($generated@@111 $generated@@627 $generated@@630)))) ($generated@@299 $generated@@630 $generated@@628 $generated@@629))
 :pattern ( ($generated@@111 $generated@@627 $generated@@630))
))))
 :pattern ( ($generated@@104 $generated@@627 ($generated@@192 $generated@@628) $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@79) (= (type $generated@@632) $generated@@79)) (and ($generated@@378 $generated@@632) (<= ($generated@@84 $generated@@632) ($generated@@84 $generated@@631)))) (or (and (= $generated@@632 ($generated@@88 0)) (= ($generated@@87 $generated@@631 $generated@@632) $generated@@631)) (and (not (= $generated@@632 ($generated@@88 0))) ($generated@@168 ($generated@@87 $generated@@631 $generated@@632) $generated@@631))))
 :pattern ( ($generated@@87 $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@633) $generated@@67) (= (type $generated@@634) $generated@@67)) (= (type $generated@@635) $generated@@79)) (= (type $generated@@636) $generated@@80)) (= (type $generated@@637) $generated@@81)) (= (type $generated@@638) $generated@@81)) (= (type $generated@@639) $generated@@79)) (and ($generated@@168 $generated@@635 $generated@@639) ($generated@@77 $generated@@633 $generated@@634 $generated@@639 ($generated@@78 $generated@@636) $generated@@637 $generated@@638))) ($generated@@77 $generated@@633 $generated@@634 $generated@@635 ($generated@@78 $generated@@636) $generated@@637 $generated@@638))
 :pattern ( ($generated@@77 $generated@@633 $generated@@634 $generated@@635 ($generated@@78 $generated@@636) $generated@@637 $generated@@638) ($generated@@77 $generated@@633 $generated@@634 $generated@@639 ($generated@@78 $generated@@636) $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@640) $generated@@67) (= (type $generated@@641) $generated@@67)) (= (type $generated@@642) $generated@@80)) (= (type $generated@@643) $generated@@81)) (= (type $generated@@644) $generated@@81)) (= ($generated@@90 $generated@@640 $generated@@641 ($generated@@78 $generated@@642) $generated@@643 $generated@@644) ($generated@@90 $generated@@640 $generated@@641 $generated@@642 $generated@@643 $generated@@644)))
 :pattern ( ($generated@@90 $generated@@640 $generated@@641 ($generated@@78 $generated@@642) $generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) $generated@@81) (= (type $generated@@646) $generated@@67)) (= (type $generated@@647) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@298 $generated@@647) (and ($generated@@178 $generated@@645) (exists (($generated@@648 T@U) ) (!  (and (= (type $generated@@648) $generated@@67) ($generated@@104 $generated@@645 ($generated@@179 $generated@@646 $generated@@648) $generated@@647))
 :pattern ( ($generated@@104 $generated@@645 ($generated@@179 $generated@@646 $generated@@648) $generated@@647))
))))) ($generated@@299 ($generated@@186 $generated@@645) $generated@@646 $generated@@647))
 :pattern ( ($generated@@299 ($generated@@186 $generated@@645) $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) $generated@@81) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@298 $generated@@651) (and ($generated@@178 $generated@@649) (exists (($generated@@652 T@U) ) (!  (and (= (type $generated@@652) $generated@@67) ($generated@@104 $generated@@649 ($generated@@179 $generated@@652 $generated@@650) $generated@@651))
 :pattern ( ($generated@@104 $generated@@649 ($generated@@179 $generated@@652 $generated@@650) $generated@@651))
))))) ($generated@@299 ($generated@@187 $generated@@649) $generated@@650 $generated@@651))
 :pattern ( ($generated@@299 ($generated@@187 $generated@@649) $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@79) (= (type $generated@@654) $generated@@79)) (= ($generated@@261 ($generated@@288 $generated@@653) ($generated@@288 $generated@@654)) ($generated@@288 ($generated@@261 $generated@@653 $generated@@654))))
 :pattern ( ($generated@@261 ($generated@@288 $generated@@653) ($generated@@288 $generated@@654)))
)))
(assert (forall (($generated@@655 Int) ) (! (= ($generated@@328 ($generated@@8 ($generated@@286 $generated@@655))) ($generated@@288 ($generated@@328 ($generated@@8 $generated@@655))))
 :pattern ( ($generated@@328 ($generated@@8 ($generated@@286 $generated@@655))))
)))
(assert (forall (($generated@@656 T@U) ) (! (= ($generated@@328 ($generated@@288 $generated@@656)) ($generated@@288 ($generated@@328 $generated@@656)))
 :pattern ( ($generated@@328 ($generated@@288 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ) (! (let (($generated@@658 ($generated@@318 (type $generated@@657))))
 (=> (and (= (type $generated@@657) ($generated@@317 $generated@@658)) (= ($generated@@316 $generated@@657) 0)) (= $generated@@657 ($generated@@315 $generated@@658))))
 :pattern ( ($generated@@316 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (! (let (($generated@@662 (type $generated@@660)))
 (=> (and (and (= (type $generated@@659) ($generated@@106 $generated@@662 $generated@@2)) (= (type $generated@@661) $generated@@2)) (<= 0 ($generated $generated@@661))) (= ($generated@@333 ($generated@@112 $generated@@659 $generated@@660 $generated@@661)) (+ (- ($generated@@333 $generated@@659) ($generated ($generated@@111 $generated@@659 $generated@@660))) ($generated $generated@@661)))))
 :pattern ( ($generated@@333 ($generated@@112 $generated@@659 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@663) $generated@@67) (= (type $generated@@664) $generated@@67)) (= (type $generated@@665) $generated@@80)) (= (type $generated@@666) $generated@@81)) (= (type $generated@@667) $generated@@81)) (forall (($generated@@668 Int) ) (!  (=> (<= 0 $generated@@668) ($generated@@77 $generated@@663 $generated@@664 ($generated@@88 $generated@@668) ($generated@@78 $generated@@665) $generated@@666 $generated@@667))
 :pattern ( ($generated@@77 $generated@@663 $generated@@664 ($generated@@88 $generated@@668) ($generated@@78 $generated@@665) $generated@@666 $generated@@667))
))) ($generated@@90 $generated@@663 $generated@@664 ($generated@@78 $generated@@665) $generated@@666 $generated@@667))
 :pattern ( ($generated@@90 $generated@@663 $generated@@664 ($generated@@78 $generated@@665) $generated@@666 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@670) $generated@@2)) ($generated@@104 $generated@@670 $generated@@46 $generated@@669))
 :pattern ( ($generated@@104 $generated@@670 $generated@@46 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@672) $generated@@3)) ($generated@@104 $generated@@672 $generated@@47 $generated@@671))
 :pattern ( ($generated@@104 $generated@@672 $generated@@47 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@674) $generated@@4)) ($generated@@104 $generated@@674 $generated@@44 $generated@@673))
 :pattern ( ($generated@@104 $generated@@674 $generated@@44 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@676) $generated@@491)) ($generated@@104 $generated@@676 $generated@@45 $generated@@675))
 :pattern ( ($generated@@104 $generated@@676 $generated@@45 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@678) $generated@@79)) ($generated@@104 $generated@@678 $generated@@48 $generated@@677))
 :pattern ( ($generated@@104 $generated@@678 $generated@@48 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@679) $generated@@67) (= (type $generated@@680) $generated@@79)) (= (type $generated@@681) $generated@@81)) (= (type $generated@@682) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@298 $generated@@682)) (= ($generated@@104 ($generated@@292 $generated@@680 $generated@@681) ($generated@@83 $generated@@679) $generated@@682)  (and ($generated@@299 $generated@@680 $generated@@679 $generated@@682) ($generated@@104 $generated@@681 ($generated@@83 $generated@@679) $generated@@682))))
 :pattern ( ($generated@@104 ($generated@@292 $generated@@680 $generated@@681) ($generated@@83 $generated@@679) $generated@@682))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) ($generated@@317 $generated@@79)) (= (type $generated@@684) $generated@@67)) (= ($generated@@82 $generated@@683 ($generated@@540 $generated@@684)) (forall (($generated@@685 Int) ) (!  (=> (and (<= 0 $generated@@685) (< $generated@@685 ($generated@@316 $generated@@683))) ($generated@@262 ($generated@@541 $generated@@683 $generated@@685) $generated@@684))
 :pattern ( ($generated@@541 $generated@@683 $generated@@685))
))))
 :pattern ( ($generated@@82 $generated@@683 ($generated@@540 $generated@@684)))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 Int) ) (!  (=> (= (type $generated@@687) ($generated@@317 $generated@@79)) (=> (and (<= 0 $generated@@688) (< $generated@@688 ($generated@@316 $generated@@687))) (< ($generated@@584 ($generated@@423 $generated@@81 ($generated@@541 $generated@@687 $generated@@688))) ($generated@@686 $generated@@687))))
 :pattern ( ($generated@@584 ($generated@@423 $generated@@81 ($generated@@541 $generated@@687 $generated@@688))))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) ($generated@@344 $generated@@79 $generated@@79)) (= (type $generated@@690) $generated@@67)) (= (type $generated@@691) $generated@@67)) ($generated@@82 $generated@@689 ($generated@@451 $generated@@690 $generated@@691))) (and (and ($generated@@82 ($generated@@342 $generated@@689) ($generated@@276 $generated@@690)) ($generated@@82 ($generated@@389 $generated@@689) ($generated@@276 $generated@@691))) ($generated@@82 ($generated@@422 $generated@@689) ($generated@@276 ($generated@@179 $generated@@690 $generated@@691)))))
 :pattern ( ($generated@@82 $generated@@689 ($generated@@451 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) ($generated@@362 $generated@@79 $generated@@79)) (= (type $generated@@693) $generated@@67)) (= (type $generated@@694) $generated@@67)) ($generated@@82 $generated@@692 ($generated@@459 $generated@@693 $generated@@694))) (and (and ($generated@@82 ($generated@@360 $generated@@692) ($generated@@281 $generated@@693)) ($generated@@82 ($generated@@400 $generated@@692) ($generated@@281 $generated@@694))) ($generated@@82 ($generated@@433 $generated@@692) ($generated@@281 ($generated@@179 $generated@@693 $generated@@694)))))
 :pattern ( ($generated@@82 $generated@@692 ($generated@@459 $generated@@693 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@2) ($generated@@82 $generated@@695 $generated@@46))
 :pattern ( ($generated@@82 $generated@@695 $generated@@46))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@3) ($generated@@82 $generated@@696 $generated@@47))
 :pattern ( ($generated@@82 $generated@@696 $generated@@47))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@4) ($generated@@82 $generated@@697 $generated@@44))
 :pattern ( ($generated@@82 $generated@@697 $generated@@44))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@491) ($generated@@82 $generated@@698 $generated@@45))
 :pattern ( ($generated@@82 $generated@@698 $generated@@45))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@79) ($generated@@82 $generated@@699 $generated@@48))
 :pattern ( ($generated@@82 $generated@@699 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 (T@U) Bool)
(declare-fun $generated@@709 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@701) $generated@@79) (= (type $generated@@700) $generated@@67)) (= (type $generated@@702) $generated@@80)) (= (type $generated@@704) $generated@@81)) (= (type $generated@@703) $generated@@81)) (= (type $generated@@705) ($generated@@201 $generated@@107 $generated@@4))) (= (type $generated@@706) $generated@@107)) (= (type $generated@@707) ($generated@@106 $generated@@107 $generated@@108))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@710  (and (=> (= (ControlFlow 0 13) (- 0 14)) (or ($generated@@77 $generated@@700 $generated@@700 (ite (<= ($generated@@286 2) ($generated@@84 $generated@@701)) ($generated@@87 $generated@@701 ($generated@@88 2)) ($generated@@87 $generated@@701 ($generated@@88 1))) ($generated@@78 ($generated@@78 $generated@@702)) $generated@@703 $generated@@704) (=> (< 0 ($generated@@84 (ite (<= ($generated@@286 2) ($generated@@84 $generated@@701)) ($generated@@87 $generated@@701 ($generated@@88 2)) ($generated@@87 $generated@@701 ($generated@@88 1))))) (=> ($generated@@85 $generated@@703) (and ($generated@@85 $generated@@704) (and (= ($generated@@86 $generated@@703) ($generated@@86 $generated@@704)) ($generated@@77 $generated@@700 $generated@@700 ($generated@@87 (ite (<= ($generated@@286 2) ($generated@@84 $generated@@701)) ($generated@@87 $generated@@701 ($generated@@88 2)) ($generated@@87 $generated@@701 ($generated@@88 1))) ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@702)) ($generated@@89 $generated@@703) ($generated@@89 $generated@@704)))))))) (=> (= (ControlFlow 0 13) (- 0 12)) (or ($generated@@77 $generated@@700 $generated@@700 (ite (<= ($generated@@286 2) ($generated@@84 $generated@@701)) ($generated@@87 $generated@@701 ($generated@@88 2)) ($generated@@87 $generated@@701 ($generated@@88 1))) ($generated@@78 ($generated@@78 $generated@@702)) $generated@@703 $generated@@704) (or (=> (< 0 ($generated@@84 (ite (<= ($generated@@286 2) ($generated@@84 $generated@@701)) ($generated@@87 $generated@@701 ($generated@@88 2)) ($generated@@87 $generated@@701 ($generated@@88 1))))) (=> ($generated@@85 $generated@@703) (and ($generated@@85 $generated@@704) (and (= ($generated@@86 $generated@@703) ($generated@@86 $generated@@704)) ($generated@@77 $generated@@700 $generated@@700 ($generated@@87 (ite (<= ($generated@@286 2) ($generated@@84 $generated@@701)) ($generated@@87 $generated@@701 ($generated@@88 2)) ($generated@@87 $generated@@701 ($generated@@88 1))) ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@702)) ($generated@@89 $generated@@703) ($generated@@89 $generated@@704)))))) (=> (and (not (= (ite (<= ($generated@@286 2) ($generated@@84 $generated@@701)) ($generated@@87 $generated@@701 ($generated@@88 2)) ($generated@@87 $generated@@701 ($generated@@88 1))) ($generated@@88 0))) (= ($generated@@84 (ite (<= ($generated@@286 2) ($generated@@84 $generated@@701)) ($generated@@87 $generated@@701 ($generated@@88 2)) ($generated@@87 $generated@@701 ($generated@@88 1)))) 0)) ($generated@@90 $generated@@700 $generated@@700 ($generated@@78 ($generated@@78 $generated@@702)) $generated@@703 $generated@@704))))))))
(let (($generated@@711  (=> (< ($generated@@84 $generated@@701) ($generated@@286 2)) (and (=> (= (ControlFlow 0 18) (- 0 20)) ($generated@@378 ($generated@@288 ($generated@@88 1)))) (=> ($generated@@378 ($generated@@288 ($generated@@88 1))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (<= ($generated@@84 ($generated@@288 ($generated@@88 1))) ($generated@@84 $generated@@701))) (=> (<= ($generated@@84 ($generated@@288 ($generated@@88 1))) ($generated@@84 $generated@@701)) (=> (= (ControlFlow 0 18) 13) $generated@@710))))))))
(let (($generated@@712  (=> (<= ($generated@@286 2) ($generated@@84 $generated@@701)) (and (=> (= (ControlFlow 0 15) (- 0 17)) ($generated@@378 ($generated@@288 ($generated@@88 2)))) (=> ($generated@@378 ($generated@@288 ($generated@@88 2))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (<= ($generated@@84 ($generated@@288 ($generated@@88 2))) ($generated@@84 $generated@@701))) (=> (<= ($generated@@84 ($generated@@288 ($generated@@88 2))) ($generated@@84 $generated@@701)) (=> (= (ControlFlow 0 15) 13) $generated@@710))))))))
(let (($generated@@713  (and (=> (= (ControlFlow 0 21) 15) $generated@@712) (=> (= (ControlFlow 0 21) 18) $generated@@711))))
(let (($generated@@714 true))
(let (($generated@@715  (and (=> (= (ControlFlow 0 9) (- 0 10)) (or ($generated@@77 $generated@@700 $generated@@700 ($generated@@288 ($generated@@88 0)) ($generated@@78 ($generated@@78 $generated@@702)) $generated@@704 $generated@@703) (=> (< 0 ($generated@@84 ($generated@@288 ($generated@@88 0)))) (=> ($generated@@85 $generated@@704) (and ($generated@@85 $generated@@703) (and (= ($generated@@86 $generated@@704) ($generated@@86 $generated@@703)) ($generated@@77 $generated@@700 $generated@@700 ($generated@@87 ($generated@@288 ($generated@@88 0)) ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@702)) ($generated@@89 $generated@@704) ($generated@@89 $generated@@703)))))))) (=> (= (ControlFlow 0 9) (- 0 8)) (or ($generated@@77 $generated@@700 $generated@@700 ($generated@@288 ($generated@@88 0)) ($generated@@78 ($generated@@78 $generated@@702)) $generated@@704 $generated@@703) (or (=> (< 0 ($generated@@84 ($generated@@288 ($generated@@88 0)))) (=> ($generated@@85 $generated@@704) (and ($generated@@85 $generated@@703) (and (= ($generated@@86 $generated@@704) ($generated@@86 $generated@@703)) ($generated@@77 $generated@@700 $generated@@700 ($generated@@87 ($generated@@288 ($generated@@88 0)) ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@702)) ($generated@@89 $generated@@704) ($generated@@89 $generated@@703)))))) (=> (and (not (= ($generated@@288 ($generated@@88 0)) ($generated@@88 0))) (= ($generated@@84 ($generated@@288 ($generated@@88 0))) 0)) ($generated@@90 $generated@@700 $generated@@700 ($generated@@78 ($generated@@78 $generated@@702)) $generated@@704 $generated@@703))))))))
(let (($generated@@716  (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@378 ($generated@@288 ($generated@@88 1)))) (=> ($generated@@378 ($generated@@288 ($generated@@88 1))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (<= ($generated@@84 ($generated@@288 ($generated@@88 1))) ($generated@@84 $generated@@701))) (=> (<= ($generated@@84 ($generated@@288 ($generated@@88 1))) ($generated@@84 $generated@@701)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or ($generated@@77 $generated@@700 $generated@@700 ($generated@@87 $generated@@701 ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@702)) $generated@@704 $generated@@703) (=> (< 0 ($generated@@84 ($generated@@87 $generated@@701 ($generated@@88 1)))) (=> ($generated@@85 $generated@@704) (and ($generated@@85 $generated@@703) (and (= ($generated@@86 $generated@@704) ($generated@@86 $generated@@703)) ($generated@@77 $generated@@700 $generated@@700 ($generated@@87 ($generated@@87 $generated@@701 ($generated@@88 1)) ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@702)) ($generated@@89 $generated@@704) ($generated@@89 $generated@@703)))))))) (=> (= (ControlFlow 0 4) (- 0 3)) (or ($generated@@77 $generated@@700 $generated@@700 ($generated@@87 $generated@@701 ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@702)) $generated@@704 $generated@@703) (or (=> (< 0 ($generated@@84 ($generated@@87 $generated@@701 ($generated@@88 1)))) (=> ($generated@@85 $generated@@704) (and ($generated@@85 $generated@@703) (and (= ($generated@@86 $generated@@704) ($generated@@86 $generated@@703)) ($generated@@77 $generated@@700 $generated@@700 ($generated@@87 ($generated@@87 $generated@@701 ($generated@@88 1)) ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@702)) ($generated@@89 $generated@@704) ($generated@@89 $generated@@703)))))) (=> (and (not (= ($generated@@87 $generated@@701 ($generated@@88 1)) ($generated@@88 0))) (= ($generated@@84 ($generated@@87 $generated@@701 ($generated@@88 1))) 0)) ($generated@@90 $generated@@700 $generated@@700 ($generated@@78 ($generated@@78 $generated@@702)) $generated@@704 $generated@@703))))))))))))
(let (($generated@@717 true))
(let (($generated@@718  (=> (< 0 ($generated@@84 $generated@@701)) (and (and (and (and (=> (= (ControlFlow 0 22) 2) $generated@@717) (=> (= (ControlFlow 0 22) 4) $generated@@716)) (=> (= (ControlFlow 0 22) 21) $generated@@713)) (=> (= (ControlFlow 0 22) 9) $generated@@715)) (=> (= (ControlFlow 0 22) 11) $generated@@714)))))
(let (($generated@@719 true))
(let (($generated@@720  (=> (= $generated@@705 ($generated@@200 $generated@@706 $generated@@707 $generated@@60 false)) (and (=> (= (ControlFlow 0 23) 22) $generated@@718) (=> (= (ControlFlow 0 23) 1) $generated@@719)))))
(let (($generated@@721  (=> (and ($generated@@298 $generated@@707) ($generated@@708 $generated@@707)) (=> (and (and ($generated@@82 $generated@@704 ($generated@@83 $generated@@700)) ($generated@@104 $generated@@704 ($generated@@83 $generated@@700) $generated@@707)) ($generated@@172 $generated@@704)) (=> (and (and (and (and ($generated@@82 $generated@@703 ($generated@@83 $generated@@700)) ($generated@@104 $generated@@703 ($generated@@83 $generated@@700) $generated@@707)) ($generated@@172 $generated@@703)) (= 2 $generated@@709)) (and (= ($generated@@86 $generated@@704) ($generated@@86 $generated@@703)) (= (ControlFlow 0 24) 23))) $generated@@720)))))
$generated@@721)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 5))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 13) (- 14))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 (Int) T@U)
(declare-fun $generated@@51 (T@U) Int)
(declare-fun $generated@@58 (T@U T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert (= ($generated@@1 $generated@@45) 6))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and (and (and (= (type $generated@@46) $generated@@45) (= (type $generated@@47) $generated@@45)) (= (type $generated@@48) $generated@@45)) (and ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))) ($generated@@44 $generated@@46 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@46 $generated@@48))
)))
(assert  (and (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= (type ($generated@@49 $generated@@52 $generated@@53)) $generated@@45)
 :pattern ( ($generated@@49 $generated@@52 $generated@@53))
)) (forall (($generated@@54 Int) ) (! (= (type ($generated@@50 $generated@@54)) $generated@@45)
 :pattern ( ($generated@@50 $generated@@54))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 Int) ($generated@@57 Int) ) (!  (=> (= (type $generated@@55) $generated@@45) (=> (and (and (<= 0 $generated@@56) (<= 0 $generated@@57)) (<= (+ $generated@@56 $generated@@57) ($generated@@51 $generated@@55))) (= ($generated@@49 ($generated@@49 $generated@@55 ($generated@@50 $generated@@56)) ($generated@@50 $generated@@57)) ($generated@@49 $generated@@55 ($generated@@50 (+ $generated@@56 $generated@@57))))))
 :pattern ( ($generated@@49 ($generated@@49 $generated@@55 ($generated@@50 $generated@@56)) ($generated@@50 $generated@@57)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (= ($generated@@1 ($generated@@62 $generated@@75 $generated@@76)) 7)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@67 ($generated@@62 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@62 $generated@@77 $generated@@78))
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@68 ($generated@@62 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@62 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (let (($generated@@83 ($generated@@68 (type $generated@@81))))
(= (type ($generated@@66 $generated@@81 $generated@@82)) $generated@@83))
 :pattern ( ($generated@@66 $generated@@81 $generated@@82))
))) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 (type $generated@@86)))
(let (($generated@@88 (type $generated@@85)))
(= (type ($generated@@69 $generated@@84 $generated@@85 $generated@@86)) ($generated@@62 $generated@@88 $generated@@87))))
 :pattern ( ($generated@@69 $generated@@84 $generated@@85 $generated@@86))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 ($generated@@68 (type $generated@@89))))
 (=> (= (type $generated@@91) $generated@@92) (= ($generated@@66 ($generated@@69 $generated@@89 $generated@@90 $generated@@91) $generated@@90) $generated@@91)))
 :weight 0
))) (and (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (or (= $generated@@95 $generated@@96) (= ($generated@@66 ($generated@@69 $generated@@94 $generated@@95 $generated@@93) $generated@@96) ($generated@@66 $generated@@94 $generated@@96)))
 :weight 0
)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or true (= ($generated@@66 ($generated@@69 $generated@@98 $generated@@99 $generated@@97) $generated@@100) ($generated@@66 $generated@@98 $generated@@100)))
 :weight 0
)))) (forall (($generated@@101 T@T) ) (= ($generated@@1 ($generated@@64 $generated@@101)) 8))) (forall (($generated@@102 T@T) ) (! (= ($generated@@60 ($generated@@64 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@64 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@60 (type $generated@@104))))
(= (type ($generated@@65 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@65 $generated@@103 $generated@@104))
))) (= ($generated@@1 $generated@@63) 9)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= (type ($generated@@70 $generated@@106 $generated@@107 $generated@@108)) $generated@@63)
 :pattern ( ($generated@@70 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@60 (type $generated@@110))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@65 ($generated@@70 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@65 ($generated@@70 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@65 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@65 ($generated@@70 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@65 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@61) 10)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@121 $generated@@122)) 11))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@71 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@73 ($generated@@71 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@71 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@73 (type $generated@@127))))
(= (type ($generated@@58 $generated@@127 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@58 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 (type $generated@@134)))
(let (($generated@@136 (type $generated@@132)))
(= (type ($generated@@74 $generated@@131 $generated@@132 $generated@@133 $generated@@134)) ($generated@@71 $generated@@136 $generated@@135))))
 :pattern ( ($generated@@74 $generated@@131 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@137))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@58 ($generated@@74 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@138 $generated@@139) $generated@@140)))
 :weight 0
))) (and (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@58 ($generated@@74 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@58 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@58 ($generated@@74 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@58 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or true (= ($generated@@58 ($generated@@74 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@58 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Bool) ) (! (= (type ($generated@@59 $generated@@160 $generated@@161 $generated@@162 $generated@@163)) ($generated@@71 $generated@@61 $generated@@4))
 :pattern ( ($generated@@59 $generated@@160 $generated@@161 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@60 (type $generated@@169))))
 (=> (and (and (and (and (= (type $generated@@164) $generated@@61) (= (type $generated@@165) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@166) ($generated@@64 $generated@@4))) (= (type $generated@@168) $generated@@61)) (= (type $generated@@169) ($generated@@64 $generated@@170))) (= ($generated@@0 ($generated@@58 ($generated@@59 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (not (= $generated@@168 $generated@@164)) ($generated@@0 ($generated@@65 ($generated@@66 $generated@@165 $generated@@168) $generated@@166))) $generated@@167))))
 :pattern ( ($generated@@58 ($generated@@59 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(= (type ($generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@171 $generated@@174) $generated@@174)
 :pattern ( ($generated@@171 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@45) (= (type $generated@@177) $generated@@45)) (and ($generated@@175 $generated@@177) (<= ($generated@@51 $generated@@177) ($generated@@51 $generated@@176)))) (and (= ($generated@@175 ($generated@@49 $generated@@176 $generated@@177)) ($generated@@175 $generated@@176)) (= ($generated@@51 ($generated@@49 $generated@@176 $generated@@177)) (- ($generated@@51 $generated@@176) ($generated@@51 $generated@@177)))))
 :pattern ( ($generated@@49 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 Int) ) (!  (=> (<= 0 $generated@@178) (and ($generated@@175 ($generated@@50 $generated@@178)) (= ($generated@@51 ($generated@@50 $generated@@178)) $generated@@178)))
 :pattern ( ($generated@@50 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@45) (= (type $generated@@180) $generated@@45)) (or (or ($generated@@44 $generated@@179 $generated@@180) (= $generated@@179 $generated@@180)) ($generated@@44 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@44 $generated@@179 $generated@@180) ($generated@@44 $generated@@180 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@45) (<= 0 ($generated@@51 $generated@@181)))
 :pattern ( ($generated@@51 $generated@@181))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@45)
 :pattern ( ($generated@@182 $generated@@184))
)) (forall (($generated@@185 T@T) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(= ($generated@@183 $generated@@188 ($generated@@182 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@182 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (= (type $generated@@189) $generated@@45) (= (type $generated@@190) $generated@@45)) (and (and (and (=> ($generated@@44 $generated@@189 $generated@@190) (not (= $generated@@189 $generated@@190))) (=> (and ($generated@@175 $generated@@189) (not ($generated@@175 $generated@@190))) ($generated@@44 $generated@@189 $generated@@190))) (=> (and ($generated@@175 $generated@@189) ($generated@@175 $generated@@190)) (= ($generated@@44 $generated@@189 $generated@@190) (< ($generated@@51 $generated@@189) ($generated@@51 $generated@@190))))) (=> (and ($generated@@44 $generated@@189 $generated@@190) ($generated@@175 $generated@@190)) ($generated@@175 $generated@@189))))
 :pattern ( ($generated@@44 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@45) ($generated@@175 $generated@@191)) (= $generated@@191 ($generated@@50 ($generated@@51 $generated@@191))))
 :pattern ( ($generated@@51 $generated@@191))
 :pattern ( ($generated@@175 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) $generated@@45) (= (type $generated@@193) $generated@@45)) (and ($generated@@175 $generated@@193) (<= ($generated@@51 $generated@@193) ($generated@@51 $generated@@192)))) (or (and (= $generated@@193 ($generated@@50 0)) (= ($generated@@49 $generated@@192 $generated@@193) $generated@@192)) (and (not (= $generated@@193 ($generated@@50 0))) ($generated@@44 ($generated@@49 $generated@@192 $generated@@193) $generated@@192))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@182 ($generated@@171 $generated@@194)) ($generated@@171 ($generated@@182 $generated@@194)))
 :pattern ( ($generated@@182 ($generated@@171 $generated@@194)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () Int)
(assert  (and (and (and (and (= (type $generated@@195) $generated@@45) (= (type $generated@@196) ($generated@@71 $generated@@61 $generated@@4))) (= (type $generated@@197) $generated@@61)) (= (type $generated@@198) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@199) ($generated@@64 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@203 true))
(let (($generated@@204  (=> (< 0 ($generated@@51 $generated@@195)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@175 ($generated@@171 ($generated@@50 1)))) (=> ($generated@@175 ($generated@@171 ($generated@@50 1))) (=> (= (ControlFlow 0 2) (- 0 1)) (<= ($generated@@51 ($generated@@171 ($generated@@50 1))) ($generated@@51 $generated@@195))))))))
(let (($generated@@205  (=> (= $generated@@196 ($generated@@59 $generated@@197 $generated@@198 $generated@@199 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@204) (=> (= (ControlFlow 0 5) 4) $generated@@203)))))
(let (($generated@@206  (=> (and (and ($generated@@200 $generated@@198) ($generated@@201 $generated@@198)) (and (= 1 $generated@@202) (= (ControlFlow 0 6) 5))) $generated@@205)))
$generated@@206)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@148 (Int) T@U)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 (T@U T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) Int)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 (Int) T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U) Bool)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@210 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@218 (T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@220 (T@T T@T) T@T)
(declare-fun $generated@@221 (T@T) T@T)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@223 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@274 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@291 (T@U T@U) Bool)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@316 (Int) Int)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@322 (T@U T@U T@U) Bool)
(declare-fun $generated@@335 (T@U T@U T@U) Bool)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@345 () T@U)
(declare-fun $generated@@361 (T@T) T@U)
(declare-fun $generated@@362 (T@U) Int)
(declare-fun $generated@@363 (T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@385 (T@U) Int)
(declare-fun $generated@@386 (T@T) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@T T@T) T@U)
(declare-fun $generated@@393 (T@T T@T) T@T)
(declare-fun $generated@@394 (T@T) T@T)
(declare-fun $generated@@395 (T@T) T@T)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@T T@T) T@U)
(declare-fun $generated@@411 (T@T T@T) T@T)
(declare-fun $generated@@412 (T@T) T@T)
(declare-fun $generated@@413 (T@T) T@T)
(declare-fun $generated@@427 (T@U) Bool)
(declare-fun $generated@@434 (T@T T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@512 (T@U T@U) T@U)
(declare-fun $generated@@520 (T@U T@U) T@U)
(declare-fun $generated@@529 (T@T) T@U)
(declare-fun $generated@@553 () T@T)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@600 (T@U) T@U)
(declare-fun $generated@@604 (T@U) T@U)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@619 (T@U Int) T@U)
(declare-fun $generated@@628 (T@U) Int)
(declare-fun $generated@@630 (T@U) T@U)
(declare-fun $generated@@634 (T@U) T@U)
(declare-fun $generated@@638 (T@U) T@U)
(declare-fun $generated@@642 (T@U) T@U)
(declare-fun $generated@@658 (T@U) Int)
(declare-fun $generated@@659 (T@U) Int)
(declare-fun $generated@@675 (T@U) T@U)
(declare-fun $generated@@752 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert  (and (= ($generated@@1 $generated@@143) 15) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@142 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@142 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@143) (= (type $generated@@146) $generated@@81)) (= (type $generated@@147) $generated@@81)) (= ($generated@@141 ($generated@@142 $generated@@145) $generated@@146 $generated@@147) (= $generated@@146 $generated@@147)))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@145) $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 Int) ) (! (= (type ($generated@@148 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@2) (= (type $generated@@151) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@150 ($generated@@148 0) $generated@@151))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@148 0) $generated@@151))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@81)
 :pattern ( ($generated@@157 $generated@@160))
)))
(assert  (=> (<= 1 $generated@@152) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@143) (= (type $generated@@162) $generated@@81)) (= (type $generated@@163) $generated@@81)) (or ($generated@@154 $generated@@162 $generated@@163) (and (not (= 1 $generated@@152)) (and ($generated@@155 $generated@@162 $generated@@80) ($generated@@155 $generated@@163 $generated@@80))))) (and (=> (not ($generated@@156 $generated@@162)) (let (($generated@@164 ($generated@@157 $generated@@162)))
(let (($generated@@165 ($generated@@158 $generated@@162)))
 (=> ($generated@@159 $generated@@163) (=> (<= $generated@@165 ($generated@@158 $generated@@163)) ($generated@@154 $generated@@164 ($generated@@157 $generated@@163))))))) (= ($generated@@153 ($generated@@142 $generated@@161) $generated@@162 $generated@@163) (ite ($generated@@156 $generated@@162) true (let (($generated@@166 ($generated@@157 $generated@@162)))
(let (($generated@@167 ($generated@@158 $generated@@162)))
 (and (and ($generated@@159 $generated@@163) (<= $generated@@167 ($generated@@158 $generated@@163))) ($generated@@153 $generated@@161 $generated@@166 ($generated@@157 $generated@@163)))))))))
 :pattern ( ($generated@@153 ($generated@@142 $generated@@161) $generated@@162 $generated@@163))
))))
(assert (= ($generated@@1 $generated@@169) 16))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@169) (= (type $generated@@171) $generated@@169)) (= (type $generated@@172) $generated@@169)) (and ($generated@@168 $generated@@170 $generated@@171) ($generated@@168 $generated@@171 $generated@@172))) ($generated@@168 $generated@@170 $generated@@172))
 :pattern ( ($generated@@168 $generated@@170 $generated@@171) ($generated@@168 $generated@@171 $generated@@172))
 :pattern ( ($generated@@168 $generated@@170 $generated@@171) ($generated@@168 $generated@@170 $generated@@172))
)))
(assert  (and (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@169)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
)) (forall (($generated@@179 Int) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@169)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@180) $generated@@169) (= (type $generated@@181) $generated@@143)) (= (type $generated@@182) $generated@@81)) (= (type $generated@@183) $generated@@81)) (and ($generated@@155 $generated@@182 $generated@@80) ($generated@@155 $generated@@183 $generated@@80))) (= ($generated@@173 $generated@@180 ($generated@@142 $generated@@181) $generated@@182 $generated@@183)  (and (=> (< 0 ($generated@@174 $generated@@180)) (or (and ($generated@@156 $generated@@182) ($generated@@156 $generated@@183)) (and (and ($generated@@159 $generated@@182) ($generated@@159 $generated@@183)) (=> (and ($generated@@159 $generated@@182) ($generated@@159 $generated@@183)) (and (= ($generated@@158 $generated@@182) ($generated@@158 $generated@@183)) ($generated@@173 ($generated@@175 $generated@@180 ($generated@@176 1)) $generated@@181 ($generated@@157 $generated@@182) ($generated@@157 $generated@@183))))))) (=> (and (not (= $generated@@180 ($generated@@176 0))) (= ($generated@@174 $generated@@180) 0)) ($generated@@141 $generated@@181 $generated@@182 $generated@@183)))))
 :pattern ( ($generated@@173 $generated@@180 ($generated@@142 $generated@@181) $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@2) ($generated@@155 $generated@@184 ($generated@@148 0)))
 :pattern ( ($generated@@155 $generated@@184 ($generated@@148 0)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 Int) ($generated@@187 Int) ) (!  (=> (= (type $generated@@185) $generated@@169) (=> (and (and (<= 0 $generated@@186) (<= 0 $generated@@187)) (<= (+ $generated@@186 $generated@@187) ($generated@@174 $generated@@185))) (= ($generated@@175 ($generated@@175 $generated@@185 ($generated@@176 $generated@@186)) ($generated@@176 $generated@@187)) ($generated@@175 $generated@@185 ($generated@@176 (+ $generated@@186 $generated@@187))))))
 :pattern ( ($generated@@175 ($generated@@175 $generated@@185 ($generated@@176 $generated@@186)) ($generated@@176 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@190 $generated@@191)) $generated@@68)
 :pattern ( ($generated@@189 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (and (= (type $generated@@192) $generated@@68) (= (type $generated@@193) $generated@@68)) (= (type $generated@@194) $generated@@81)) ($generated@@155 $generated@@194 ($generated@@189 $generated@@192 $generated@@193))) ($generated@@188 $generated@@194))
 :pattern ( ($generated@@188 $generated@@194) ($generated@@155 $generated@@194 ($generated@@189 $generated@@192 $generated@@193)))
)))
(assert  (and (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@169)
 :pattern ( ($generated@@196 $generated@@198))
)) (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@169)
 :pattern ( ($generated@@197 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) $generated@@81) (= (type $generated@@201) $generated@@81)) true) (= ($generated@@195 $generated@@200 $generated@@201)  (and (= ($generated@@196 $generated@@200) ($generated@@196 $generated@@201)) (= ($generated@@197 $generated@@200) ($generated@@197 $generated@@201)))))
 :pattern ( ($generated@@195 $generated@@200 $generated@@201))
)))
(assert  (and (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@72)
 :pattern ( ($generated@@202 $generated@@204))
)) (= (type $generated@@203) $generated@@81)))
(assert (= ($generated@@202 $generated@@203) $generated@@63))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@205 $generated@@207)) $generated@@68)
 :pattern ( ($generated@@205 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (= (type $generated@@208) ($generated@@82 $generated@@169 $generated@@2)) (= (type $generated@@209) $generated@@68)) ($generated@@155 $generated@@208 ($generated@@205 $generated@@209))) ($generated@@206 $generated@@208))
 :pattern ( ($generated@@155 $generated@@208 ($generated@@205 $generated@@209)))
)))
(assert  (=> (<= 2 $generated@@152) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (and (= (type $generated@@211) $generated@@143) (= (type $generated@@212) $generated@@81)) (= (type $generated@@213) $generated@@81)) (and (and ($generated@@155 $generated@@212 $generated@@80) ($generated@@155 $generated@@213 $generated@@80)) ($generated@@153 ($generated@@142 $generated@@211) $generated@@212 $generated@@213))) (forall (($generated@@214 T@U) ) (!  (=> (= (type $generated@@214) $generated@@169) ($generated@@210 ($generated@@142 $generated@@211) $generated@@214 $generated@@212 $generated@@213))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@211) $generated@@214 $generated@@212 $generated@@213))
)))
 :pattern ( ($generated@@153 ($generated@@142 $generated@@211) $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@143) (= (type $generated@@216) $generated@@81)) (= (type $generated@@217) $generated@@81)) (and ($generated@@155 $generated@@216 $generated@@80) ($generated@@155 $generated@@217 $generated@@80))) (= ($generated@@141 ($generated@@142 $generated@@215) $generated@@216 $generated@@217)  (or (and ($generated@@156 $generated@@216) ($generated@@156 $generated@@217)) (and (and ($generated@@159 $generated@@216) ($generated@@159 $generated@@217)) (=> (and ($generated@@159 $generated@@216) ($generated@@159 $generated@@217)) (and (= ($generated@@158 $generated@@216) ($generated@@158 $generated@@217)) ($generated@@141 $generated@@215 ($generated@@157 $generated@@216) ($generated@@157 $generated@@217))))))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@215) $generated@@216 $generated@@217))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (= ($generated@@1 ($generated@@220 $generated@@224 $generated@@225)) 17)) (forall (($generated@@226 T@T) ($generated@@227 T@T) ) (! (= ($generated@@221 ($generated@@220 $generated@@226 $generated@@227)) $generated@@226)
 :pattern ( ($generated@@220 $generated@@226 $generated@@227))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= ($generated@@222 ($generated@@220 $generated@@228 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@220 $generated@@228 $generated@@229))
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@222 (type $generated@@230))))
(= (type ($generated@@218 $generated@@230 $generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@218 $generated@@230 $generated@@231 $generated@@232))
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 (type $generated@@237)))
(let (($generated@@239 (type $generated@@235)))
(= (type ($generated@@223 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@220 $generated@@239 $generated@@238))))
 :pattern ( ($generated@@223 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@222 (type $generated@@240))))
 (=> (= (type $generated@@243) $generated@@244) (= ($generated@@218 ($generated@@223 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@241 $generated@@242) $generated@@243)))
 :weight 0
))) (and (and (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or (= $generated@@247 $generated@@249) (= ($generated@@218 ($generated@@223 $generated@@246 $generated@@247 $generated@@248 $generated@@245) $generated@@249 $generated@@250) ($generated@@218 $generated@@246 $generated@@249 $generated@@250)))
 :weight 0
)) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (or (= $generated@@254 $generated@@256) (= ($generated@@218 ($generated@@223 $generated@@252 $generated@@253 $generated@@254 $generated@@251) $generated@@255 $generated@@256) ($generated@@218 $generated@@252 $generated@@255 $generated@@256)))
 :weight 0
))) (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (or true (= ($generated@@218 ($generated@@223 $generated@@258 $generated@@259 $generated@@260 $generated@@257) $generated@@261 $generated@@262) ($generated@@218 $generated@@258 $generated@@261 $generated@@262)))
 :weight 0
)))) (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 Bool) ) (! (= (type ($generated@@219 $generated@@263 $generated@@264 $generated@@265 $generated@@266)) ($generated@@220 $generated@@83 $generated@@4))
 :pattern ( ($generated@@219 $generated@@263 $generated@@264 $generated@@265 $generated@@266))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 Bool) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@71 (type $generated@@272))))
 (=> (and (and (and (and (= (type $generated@@267) $generated@@83) (= (type $generated@@268) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@269) ($generated@@70 $generated@@4))) (= (type $generated@@271) $generated@@83)) (= (type $generated@@272) ($generated@@70 $generated@@273))) (= ($generated@@0 ($generated@@218 ($generated@@219 $generated@@267 $generated@@268 $generated@@269 $generated@@270) $generated@@271 $generated@@272))  (=> (and (not (= $generated@@271 $generated@@267)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@268 $generated@@271) $generated@@269))) $generated@@270))))
 :pattern ( ($generated@@218 ($generated@@219 $generated@@267 $generated@@268 $generated@@269 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 Bool) ) (! (= (type ($generated@@274 $generated@@275 $generated@@276 $generated@@277 $generated@@278)) ($generated@@220 $generated@@83 $generated@@4))
 :pattern ( ($generated@@274 $generated@@275 $generated@@276 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 Bool) ($generated@@283 T@U) ($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@71 (type $generated@@284))))
 (=> (and (and (and (and (= (type $generated@@279) $generated@@83) (= (type $generated@@280) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@281) ($generated@@70 $generated@@4))) (= (type $generated@@283) $generated@@83)) (= (type $generated@@284) ($generated@@70 $generated@@285))) (= ($generated@@0 ($generated@@218 ($generated@@274 $generated@@279 $generated@@280 $generated@@281 $generated@@282) $generated@@283 $generated@@284))  (=> (and (not (= $generated@@283 $generated@@279)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@280 $generated@@283) $generated@@281))) $generated@@282))))
 :pattern ( ($generated@@218 ($generated@@274 $generated@@279 $generated@@280 $generated@@281 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (= (type $generated@@286) $generated@@143) (= (type $generated@@287) $generated@@81)) (= (type $generated@@288) $generated@@81)) (forall (($generated@@289 Int) ) (!  (=> (<= 0 $generated@@289) ($generated@@173 ($generated@@176 $generated@@289) ($generated@@142 $generated@@286) $generated@@287 $generated@@288))
 :pattern ( ($generated@@173 ($generated@@176 $generated@@289) ($generated@@142 $generated@@286) $generated@@287 $generated@@288))
))) ($generated@@141 ($generated@@142 $generated@@286) $generated@@287 $generated@@288))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (! (= (type ($generated@@290 $generated@@292 $generated@@293)) $generated@@81)
 :pattern ( ($generated@@290 $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (= (type $generated@@294) $generated@@68) (= (type $generated@@295) $generated@@68)) (= (type $generated@@296) $generated@@169)) (= (type $generated@@297) $generated@@169)) (= ($generated@@155 ($generated@@290 $generated@@296 $generated@@297) ($generated@@189 $generated@@294 $generated@@295))  (and ($generated@@291 $generated@@296 $generated@@294) ($generated@@291 $generated@@297 $generated@@295))))
 :pattern ( ($generated@@155 ($generated@@290 $generated@@296 $generated@@297) ($generated@@189 $generated@@294 $generated@@295)))
)))
(assert ($generated@@155 $generated@@203 $generated@@80))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@298)) ($generated@@78 $generated@@203 $generated@@80 $generated@@298))
 :pattern ( ($generated@@78 $generated@@203 $generated@@80 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@81) (= (type $generated@@300) $generated@@81)) (= ($generated@@195 $generated@@299 $generated@@300) (= $generated@@299 $generated@@300)))
 :pattern ( ($generated@@195 $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) $generated@@169) (= (type $generated@@302) $generated@@143)) (= (type $generated@@303) $generated@@81)) (= (type $generated@@304) $generated@@81)) (= (type $generated@@305) $generated@@169)) (and ($generated@@168 $generated@@301 $generated@@305) ($generated@@173 $generated@@305 ($generated@@142 $generated@@302) $generated@@303 $generated@@304))) ($generated@@173 $generated@@301 ($generated@@142 $generated@@302) $generated@@303 $generated@@304))
 :pattern ( ($generated@@173 $generated@@301 ($generated@@142 $generated@@302) $generated@@303 $generated@@304) ($generated@@173 $generated@@305 ($generated@@142 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@68)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) ($generated@@82 $generated@@169 $generated@@4)) (= (type $generated@@309) $generated@@68)) (= ($generated@@155 $generated@@308 ($generated@@306 $generated@@309)) (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@169) ($generated@@0 ($generated@@88 $generated@@308 $generated@@310))) ($generated@@291 $generated@@310 $generated@@309))
 :pattern ( ($generated@@88 $generated@@308 $generated@@310))
))))
 :pattern ( ($generated@@155 $generated@@308 ($generated@@306 $generated@@309)))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@68)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) ($generated@@82 $generated@@169 $generated@@4)) (= (type $generated@@314) $generated@@68)) (= ($generated@@155 $generated@@313 ($generated@@311 $generated@@314)) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@169) ($generated@@0 ($generated@@88 $generated@@313 $generated@@315))) ($generated@@291 $generated@@315 $generated@@314))
 :pattern ( ($generated@@88 $generated@@313 $generated@@315))
))))
 :pattern ( ($generated@@155 $generated@@313 ($generated@@311 $generated@@314)))
)))
(assert (forall (($generated@@317 Int) ) (! (= ($generated@@316 $generated@@317) $generated@@317)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 (type $generated@@319)))
(= (type ($generated@@318 $generated@@319)) $generated@@320))
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= ($generated@@318 $generated@@321) $generated@@321)
 :pattern ( ($generated@@318 $generated@@321))
)))
(assert  (=> (<= 2 $generated@@152) (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@323) $generated@@143) (= (type $generated@@324) $generated@@169)) (= (type $generated@@325) $generated@@81)) (= (type $generated@@326) $generated@@81)) (or ($generated@@322 ($generated@@318 $generated@@324) $generated@@325 $generated@@326) (and (not (= 2 $generated@@152)) (and ($generated@@155 $generated@@325 $generated@@80) ($generated@@155 $generated@@326 $generated@@80))))) (and (and (=> (< 0 ($generated@@174 $generated@@324)) (=> (not ($generated@@156 $generated@@325)) (let (($generated@@327 ($generated@@157 $generated@@325)))
(let (($generated@@328 ($generated@@158 $generated@@325)))
 (=> ($generated@@159 $generated@@326) (=> (<= $generated@@328 ($generated@@158 $generated@@326)) ($generated@@322 ($generated@@175 $generated@@324 ($generated@@176 1)) $generated@@327 ($generated@@157 $generated@@326)))))))) (=> (=> (< 0 ($generated@@174 $generated@@324)) (ite ($generated@@156 $generated@@325) true (let (($generated@@329 ($generated@@157 $generated@@325)))
(let (($generated@@330 ($generated@@158 $generated@@325)))
 (and (and ($generated@@159 $generated@@326) (<= $generated@@330 ($generated@@158 $generated@@326))) ($generated@@210 ($generated@@142 $generated@@323) ($generated@@175 $generated@@324 ($generated@@176 1)) $generated@@329 ($generated@@157 $generated@@326))))))) (=> (= ($generated@@316 0) ($generated@@174 $generated@@324)) (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@169) ($generated@@168 $generated@@331 $generated@@324)) ($generated@@322 $generated@@331 $generated@@325 $generated@@326))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@323) $generated@@331 $generated@@325 $generated@@326))
))))) (= ($generated@@210 ($generated@@142 $generated@@323) ($generated@@318 $generated@@324) $generated@@325 $generated@@326)  (and (=> (< 0 ($generated@@174 $generated@@324)) (ite ($generated@@156 $generated@@325) true (let (($generated@@332 ($generated@@157 $generated@@325)))
(let (($generated@@333 ($generated@@158 $generated@@325)))
 (and (and ($generated@@159 $generated@@326) (<= $generated@@333 ($generated@@158 $generated@@326))) ($generated@@210 ($generated@@142 $generated@@323) ($generated@@175 $generated@@324 ($generated@@176 1)) $generated@@332 ($generated@@157 $generated@@326))))))) (=> (= ($generated@@316 0) ($generated@@174 $generated@@324)) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@169) ($generated@@168 $generated@@334 $generated@@324)) ($generated@@210 ($generated@@142 $generated@@323) $generated@@334 $generated@@325 $generated@@326))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@323) $generated@@334 $generated@@325 $generated@@326))
)))))))
 :weight 3
 :pattern ( ($generated@@210 ($generated@@142 $generated@@323) ($generated@@318 $generated@@324) $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@336) $generated@@68) (= (type $generated@@337) $generated@@68)) (= (type $generated@@338) $generated@@169)) (= (type $generated@@339) $generated@@169)) (= (type $generated@@340) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@340)) (= ($generated@@78 ($generated@@290 $generated@@338 $generated@@339) ($generated@@189 $generated@@336 $generated@@337) $generated@@340)  (and ($generated@@335 $generated@@338 $generated@@336 $generated@@340) ($generated@@335 $generated@@339 $generated@@337 $generated@@340))))
 :pattern ( ($generated@@78 ($generated@@290 $generated@@338 $generated@@339) ($generated@@189 $generated@@336 $generated@@337) $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@81) (= ($generated@@188 $generated@@341) (= ($generated@@202 $generated@@341) $generated@@61)))
 :pattern ( ($generated@@188 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@81) (= ($generated@@156 $generated@@342) (= ($generated@@202 $generated@@342) $generated@@63)))
 :pattern ( ($generated@@156 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@81) (= ($generated@@159 $generated@@343) (= ($generated@@202 $generated@@343) $generated@@65)))
 :pattern ( ($generated@@159 $generated@@343))
)))
(assert  (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@346)) $generated@@143)
 :pattern ( ($generated@@344 $generated@@346))
)) (= (type $generated@@345) $generated@@143)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (and (= (type $generated@@347) $generated@@143) (= (type $generated@@348) $generated@@169)) (= (type $generated@@349) $generated@@81)) (= (type $generated@@350) $generated@@81)) (= ($generated@@210 $generated@@347 $generated@@348 $generated@@349 $generated@@350) ($generated@@210 $generated@@345 $generated@@348 $generated@@349 $generated@@350)))
 :pattern ( ($generated@@210 ($generated@@344 $generated@@347) $generated@@348 $generated@@349 $generated@@350))
)))
(assert  (=> (<= 2 $generated@@152) (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (and (= (type $generated@@351) $generated@@143) (= (type $generated@@352) $generated@@81)) (= (type $generated@@353) $generated@@81)) (and (and ($generated@@155 $generated@@352 $generated@@80) ($generated@@155 $generated@@353 $generated@@80)) (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@169) ($generated@@210 ($generated@@142 $generated@@351) $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@351) $generated@@354 $generated@@352 $generated@@353))
)))) ($generated@@153 ($generated@@142 $generated@@351) $generated@@352 $generated@@353))
 :pattern ( ($generated@@153 ($generated@@142 $generated@@351) $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@81) ($generated@@188 $generated@@355)) (exists (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (and (and (= (type $generated@@356) $generated@@169) (= (type $generated@@357) $generated@@169)) (= $generated@@355 ($generated@@290 $generated@@356 $generated@@357)))
 :no-pattern (type $generated@@356)
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
)))
 :pattern ( ($generated@@188 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@81) ($generated@@159 $generated@@358)) (exists (($generated@@359 Int) ($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@81) (= $generated@@358 ($generated@@79 $generated@@359 $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
)))
 :pattern ( ($generated@@159 $generated@@358))
)))
(assert  (and (and (forall (($generated@@365 T@T) ) (= ($generated@@1 ($generated@@363 $generated@@365)) 18)) (forall (($generated@@366 T@T) ) (! (= ($generated@@364 ($generated@@363 $generated@@366)) $generated@@366)
 :pattern ( ($generated@@363 $generated@@366))
))) (forall (($generated@@367 T@T) ) (! (= (type ($generated@@361 $generated@@367)) ($generated@@363 $generated@@367))
 :pattern ( ($generated@@361 $generated@@367))
))))
(assert (forall (($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@361 $generated@@368)) 0)
 :pattern ( ($generated@@361 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@81) ($generated@@156 $generated@@369)) (= $generated@@369 $generated@@203))
 :pattern ( ($generated@@156 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@370) $generated@@169) (= (type $generated@@371) $generated@@143)) (= (type $generated@@372) $generated@@81)) (= (type $generated@@373) $generated@@81)) (not (= $generated@@370 ($generated@@176 0)))) (= ($generated@@173 $generated@@370 ($generated@@142 $generated@@371) $generated@@372 $generated@@373) ($generated@@173 $generated@@370 $generated@@371 $generated@@372 $generated@@373)))
 :pattern ( ($generated@@173 $generated@@370 ($generated@@142 $generated@@371) $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) $generated@@143) (= (type $generated@@375) $generated@@81)) (= (type $generated@@376) $generated@@81)) (= ($generated@@141 ($generated@@142 $generated@@374) $generated@@375 $generated@@376) ($generated@@141 $generated@@374 $generated@@375 $generated@@376)))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@374) $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) $generated@@143) (= (type $generated@@378) $generated@@81)) (= (type $generated@@379) $generated@@81)) (= ($generated@@153 ($generated@@142 $generated@@377) $generated@@378 $generated@@379) ($generated@@153 $generated@@377 $generated@@378 $generated@@379)))
 :pattern ( ($generated@@153 ($generated@@142 $generated@@377) $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (= (type ($generated@@380 $generated@@381)) $generated@@169)
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@68) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@335 ($generated@@380 $generated@@382) $generated@@383 $generated@@384) ($generated@@78 $generated@@382 $generated@@383 $generated@@384)))
 :pattern ( ($generated@@335 ($generated@@380 $generated@@382) $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@387 T@T) ) (! (= (type ($generated@@386 $generated@@387)) ($generated@@82 $generated@@387 $generated@@2))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@86 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@82 $generated@@389 $generated@@2)) (and (= (= ($generated@@385 $generated@@388) 0) (= $generated@@388 ($generated@@386 $generated@@389))) (=> (not (= ($generated@@385 $generated@@388) 0)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (< 0 ($generated ($generated@@88 $generated@@388 $generated@@390))))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert  (and (and (and (and (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (= ($generated@@1 ($generated@@393 $generated@@396 $generated@@397)) 19)) (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (! (= ($generated@@394 ($generated@@393 $generated@@398 $generated@@399)) $generated@@398)
 :pattern ( ($generated@@393 $generated@@398 $generated@@399))
))) (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (! (= ($generated@@395 ($generated@@393 $generated@@400 $generated@@401)) $generated@@401)
 :pattern ( ($generated@@393 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@394 (type $generated@@402))))
(= (type ($generated@@391 $generated@@402)) ($generated@@82 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@402))
))) (forall (($generated@@404 T@T) ($generated@@405 T@T) ) (! (= (type ($generated@@392 $generated@@404 $generated@@405)) ($generated@@393 $generated@@404 $generated@@405))
 :pattern ( ($generated@@392 $generated@@404 $generated@@405))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@T) ) (! (let (($generated@@408 (type $generated@@406)))
 (not ($generated@@0 ($generated@@88 ($generated@@391 ($generated@@392 $generated@@408 $generated@@407)) $generated@@406))))
 :pattern ( (let (($generated@@408 (type $generated@@406)))
($generated@@88 ($generated@@391 ($generated@@392 $generated@@408 $generated@@407)) $generated@@406)))
)))
(assert  (and (and (and (and (forall (($generated@@414 T@T) ($generated@@415 T@T) ) (= ($generated@@1 ($generated@@411 $generated@@414 $generated@@415)) 20)) (forall (($generated@@416 T@T) ($generated@@417 T@T) ) (! (= ($generated@@412 ($generated@@411 $generated@@416 $generated@@417)) $generated@@416)
 :pattern ( ($generated@@411 $generated@@416 $generated@@417))
))) (forall (($generated@@418 T@T) ($generated@@419 T@T) ) (! (= ($generated@@413 ($generated@@411 $generated@@418 $generated@@419)) $generated@@419)
 :pattern ( ($generated@@411 $generated@@418 $generated@@419))
))) (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@412 (type $generated@@420))))
(= (type ($generated@@409 $generated@@420)) ($generated@@82 $generated@@421 $generated@@4)))
 :pattern ( ($generated@@409 $generated@@420))
))) (forall (($generated@@422 T@T) ($generated@@423 T@T) ) (! (= (type ($generated@@410 $generated@@422 $generated@@423)) ($generated@@411 $generated@@422 $generated@@423))
 :pattern ( ($generated@@410 $generated@@422 $generated@@423))
))))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@T) ) (! (let (($generated@@426 (type $generated@@424)))
 (not ($generated@@0 ($generated@@88 ($generated@@409 ($generated@@410 $generated@@426 $generated@@425)) $generated@@424))))
 :pattern ( (let (($generated@@426 (type $generated@@424)))
($generated@@88 ($generated@@409 ($generated@@410 $generated@@426 $generated@@425)) $generated@@424)))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (= (type $generated@@428) $generated@@169) (= (type $generated@@429) $generated@@169)) (and ($generated@@427 $generated@@429) (<= ($generated@@174 $generated@@429) ($generated@@174 $generated@@428)))) (and (= ($generated@@427 ($generated@@175 $generated@@428 $generated@@429)) ($generated@@427 $generated@@428)) (= ($generated@@174 ($generated@@175 $generated@@428 $generated@@429)) (- ($generated@@174 $generated@@428) ($generated@@174 $generated@@429)))))
 :pattern ( ($generated@@175 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 Int) ) (!  (=> (<= 0 $generated@@430) (and ($generated@@427 ($generated@@176 $generated@@430)) (= ($generated@@174 ($generated@@176 $generated@@430)) $generated@@430)))
 :pattern ( ($generated@@176 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@86 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@82 $generated@@432 $generated@@2)) (= ($generated@@206 $generated@@431) (forall (($generated@@433 T@U) ) (!  (=> (= (type $generated@@433) $generated@@432) (and (<= 0 ($generated ($generated@@88 $generated@@431 $generated@@433))) (<= ($generated ($generated@@88 $generated@@431 $generated@@433)) ($generated@@385 $generated@@431))))
 :pattern ( ($generated@@88 $generated@@431 $generated@@433))
)))))
 :pattern ( ($generated@@206 $generated@@431))
)))
(assert (forall (($generated@@435 T@T) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@435)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@169) ($generated@@291 $generated@@437 $generated@@80)) (and (= ($generated@@380 ($generated@@434 $generated@@81 $generated@@437)) $generated@@437) ($generated@@155 ($generated@@434 $generated@@81 $generated@@437) $generated@@80)))
 :pattern ( ($generated@@291 $generated@@437 $generated@@80))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (= (type $generated@@438) $generated@@143) (= (type $generated@@439) $generated@@81)) (= (type $generated@@440) $generated@@81)) (= ($generated@@141 ($generated@@142 $generated@@438) $generated@@439 $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@169) ($generated@@173 $generated@@441 ($generated@@142 $generated@@438) $generated@@439 $generated@@440))
 :pattern ( ($generated@@173 $generated@@441 ($generated@@142 $generated@@438) $generated@@439 $generated@@440))
))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@438) $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@395 (type $generated@@442))))
(let (($generated@@444 ($generated@@394 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@393 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@392 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) ($generated@@0 ($generated@@88 ($generated@@391 $generated@@442) $generated@@445)))
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@391 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@395 (type $generated@@447))))
(= (type ($generated@@446 $generated@@447)) ($generated@@82 $generated@@448 $generated@@4)))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@395 (type $generated@@449))))
(let (($generated@@451 ($generated@@394 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@393 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@392 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ) (!  (and (= (type $generated@@452) $generated@@450) ($generated@@0 ($generated@@88 ($generated@@446 $generated@@449) $generated@@452)))
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@446 $generated@@449))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@413 (type $generated@@453))))
(let (($generated@@455 ($generated@@412 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@411 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@410 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@455) ($generated@@0 ($generated@@88 ($generated@@409 $generated@@453) $generated@@456)))
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@409 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@413 (type $generated@@458))))
(= (type ($generated@@457 $generated@@458)) ($generated@@82 $generated@@459 $generated@@4)))
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@413 (type $generated@@460))))
(let (($generated@@462 ($generated@@412 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@411 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@410 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ) (!  (and (= (type $generated@@463) $generated@@461) ($generated@@0 ($generated@@88 ($generated@@457 $generated@@460) $generated@@463)))
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@457 $generated@@460))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) ($generated@@82 $generated@@169 $generated@@2)) (= (type $generated@@465) $generated@@68)) (= ($generated@@155 $generated@@464 ($generated@@205 $generated@@465)) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@169) (< 0 ($generated ($generated@@88 $generated@@464 $generated@@466)))) ($generated@@291 $generated@@466 $generated@@465))
 :pattern ( ($generated@@88 $generated@@464 $generated@@466))
))))
 :pattern ( ($generated@@155 $generated@@464 ($generated@@205 $generated@@465)))
)))
(assert  (=> (<= 2 $generated@@152) (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@467) $generated@@143) (= (type $generated@@468) $generated@@169)) (= (type $generated@@469) $generated@@81)) (= (type $generated@@470) $generated@@81)) (or ($generated@@322 $generated@@468 $generated@@469 $generated@@470) (and (not (= 2 $generated@@152)) (and ($generated@@155 $generated@@469 $generated@@80) ($generated@@155 $generated@@470 $generated@@80))))) true)
 :pattern ( ($generated@@210 $generated@@467 $generated@@468 $generated@@469 $generated@@470))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@169) (= (type $generated@@472) $generated@@169)) (or (or ($generated@@168 $generated@@471 $generated@@472) (= $generated@@471 $generated@@472)) ($generated@@168 $generated@@472 $generated@@471)))
 :pattern ( ($generated@@168 $generated@@471 $generated@@472) ($generated@@168 $generated@@472 $generated@@471))
)))
(assert  (=> (<= 1 $generated@@152) (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (and (= (type $generated@@473) $generated@@143) (= (type $generated@@474) $generated@@81)) (= (type $generated@@475) $generated@@81)) (or ($generated@@154 $generated@@474 $generated@@475) (and (not (= 1 $generated@@152)) (and ($generated@@155 $generated@@474 $generated@@80) ($generated@@155 $generated@@475 $generated@@80))))) true)
 :pattern ( ($generated@@153 $generated@@473 $generated@@474 $generated@@475))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@82 $generated@@169 $generated@@4)) (= (type $generated@@477) $generated@@68)) (= (type $generated@@478) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@476 ($generated@@306 $generated@@477) $generated@@478) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@169) ($generated@@0 ($generated@@88 $generated@@476 $generated@@479))) ($generated@@335 $generated@@479 $generated@@477 $generated@@478))
 :pattern ( ($generated@@88 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@78 $generated@@476 ($generated@@306 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@82 $generated@@169 $generated@@4)) (= (type $generated@@481) $generated@@68)) (= (type $generated@@482) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@480 ($generated@@311 $generated@@481) $generated@@482) (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@169) ($generated@@0 ($generated@@88 $generated@@480 $generated@@483))) ($generated@@335 $generated@@483 $generated@@481 $generated@@482))
 :pattern ( ($generated@@88 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@78 $generated@@480 ($generated@@311 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated ($generated@@88 ($generated@@386 $generated@@485) $generated@@484)) 0))
 :pattern ( (let (($generated@@485 (type $generated@@484)))
($generated@@88 ($generated@@386 $generated@@485) $generated@@484)))
)))
(assert  (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@488)) ($generated@@82 $generated@@169 $generated@@4))
 :pattern ( ($generated@@486 $generated@@488))
)) (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@395 (type $generated@@489))))
(let (($generated@@491 ($generated@@394 (type $generated@@489))))
(= (type ($generated@@487 $generated@@489)) ($generated@@82 $generated@@491 $generated@@490))))
 :pattern ( ($generated@@487 $generated@@489))
))))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) ($generated@@393 $generated@@169 $generated@@169)) (= (type $generated@@493) $generated@@169)) (= ($generated@@0 ($generated@@88 ($generated@@486 $generated@@492) $generated@@493))  (and ($generated@@0 ($generated@@88 ($generated@@391 $generated@@492) ($generated@@196 ($generated@@434 $generated@@81 $generated@@493)))) (= ($generated@@88 ($generated@@487 $generated@@492) ($generated@@196 ($generated@@434 $generated@@81 $generated@@493))) ($generated@@197 ($generated@@434 $generated@@81 $generated@@493))))))
 :pattern ( ($generated@@88 ($generated@@486 $generated@@492) $generated@@493))
)))
(assert  (and (forall (($generated@@496 T@U) ) (! (= (type ($generated@@494 $generated@@496)) ($generated@@82 $generated@@169 $generated@@4))
 :pattern ( ($generated@@494 $generated@@496))
)) (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@413 (type $generated@@497))))
(let (($generated@@499 ($generated@@412 (type $generated@@497))))
(= (type ($generated@@495 $generated@@497)) ($generated@@82 $generated@@499 $generated@@498))))
 :pattern ( ($generated@@495 $generated@@497))
))))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) ($generated@@411 $generated@@169 $generated@@169)) (= (type $generated@@501) $generated@@169)) (= ($generated@@0 ($generated@@88 ($generated@@494 $generated@@500) $generated@@501))  (and ($generated@@0 ($generated@@88 ($generated@@409 $generated@@500) ($generated@@196 ($generated@@434 $generated@@81 $generated@@501)))) (= ($generated@@88 ($generated@@495 $generated@@500) ($generated@@196 ($generated@@434 $generated@@81 $generated@@501))) ($generated@@197 ($generated@@434 $generated@@81 $generated@@501))))))
 :pattern ( ($generated@@88 ($generated@@494 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(let (($generated@@505 ($generated@@394 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@393 $generated@@505 $generated@@504)) (= ($generated@@0 ($generated@@88 ($generated@@446 $generated@@502) $generated@@503)) (exists (($generated@@506 T@U) ) (!  (and (= (type $generated@@506) $generated@@505) (and ($generated@@0 ($generated@@88 ($generated@@391 $generated@@502) $generated@@506)) (= $generated@@503 ($generated@@88 ($generated@@487 $generated@@502) $generated@@506))))
 :pattern ( ($generated@@88 ($generated@@391 $generated@@502) $generated@@506))
 :pattern ( ($generated@@88 ($generated@@487 $generated@@502) $generated@@506))
))))))
 :pattern ( ($generated@@88 ($generated@@446 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
(let (($generated@@510 ($generated@@412 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@411 $generated@@510 $generated@@509)) (= ($generated@@0 ($generated@@88 ($generated@@457 $generated@@507) $generated@@508)) (exists (($generated@@511 T@U) ) (!  (and (= (type $generated@@511) $generated@@510) (and ($generated@@0 ($generated@@88 ($generated@@409 $generated@@507) $generated@@511)) (= $generated@@508 ($generated@@88 ($generated@@495 $generated@@507) $generated@@511))))
 :pattern ( ($generated@@88 ($generated@@409 $generated@@507) $generated@@511))
 :pattern ( ($generated@@88 ($generated@@495 $generated@@507) $generated@@511))
))))))
 :pattern ( ($generated@@88 ($generated@@457 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@513 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) ($generated@@393 $generated@@169 $generated@@169)) (= (type $generated@@516) $generated@@68)) (= (type $generated@@517) $generated@@68)) (= (type $generated@@518) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@515 ($generated@@512 $generated@@516 $generated@@517) $generated@@518) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@169) ($generated@@0 ($generated@@88 ($generated@@391 $generated@@515) $generated@@519))) (and ($generated@@335 ($generated@@88 ($generated@@487 $generated@@515) $generated@@519) $generated@@517 $generated@@518) ($generated@@335 $generated@@519 $generated@@516 $generated@@518)))
 :pattern ( ($generated@@88 ($generated@@487 $generated@@515) $generated@@519))
 :pattern ( ($generated@@88 ($generated@@391 $generated@@515) $generated@@519))
))))
 :pattern ( ($generated@@78 $generated@@515 ($generated@@512 $generated@@516 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (! (= (type ($generated@@520 $generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@520 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) ($generated@@411 $generated@@169 $generated@@169)) (= (type $generated@@524) $generated@@68)) (= (type $generated@@525) $generated@@68)) (= (type $generated@@526) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@523 ($generated@@520 $generated@@524 $generated@@525) $generated@@526) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@169) ($generated@@0 ($generated@@88 ($generated@@409 $generated@@523) $generated@@527))) (and ($generated@@335 ($generated@@88 ($generated@@495 $generated@@523) $generated@@527) $generated@@525 $generated@@526) ($generated@@335 $generated@@527 $generated@@524 $generated@@526)))
 :pattern ( ($generated@@88 ($generated@@495 $generated@@523) $generated@@527))
 :pattern ( ($generated@@88 ($generated@@409 $generated@@523) $generated@@527))
))))
 :pattern ( ($generated@@78 $generated@@523 ($generated@@520 $generated@@524 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@81) ($generated@@155 $generated@@528 $generated@@80)) (or ($generated@@156 $generated@@528) ($generated@@159 $generated@@528)))
 :pattern ( ($generated@@159 $generated@@528) ($generated@@155 $generated@@528 $generated@@80))
 :pattern ( ($generated@@156 $generated@@528) ($generated@@155 $generated@@528 $generated@@80))
)))
(assert (forall (($generated@@530 T@T) ) (! (= (type ($generated@@529 $generated@@530)) ($generated@@82 $generated@@530 $generated@@4))
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@413 (type $generated@@531))))
(let (($generated@@533 ($generated@@412 (type $generated@@531))))
 (=> (= (type $generated@@531) ($generated@@411 $generated@@533 $generated@@532)) (= (= $generated@@531 ($generated@@410 $generated@@533 $generated@@532)) (= ($generated@@409 $generated@@531) ($generated@@529 $generated@@533))))))
 :pattern ( ($generated@@409 $generated@@531))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 ($generated@@413 (type $generated@@534))))
(let (($generated@@536 ($generated@@412 (type $generated@@534))))
 (=> (= (type $generated@@534) ($generated@@411 $generated@@536 $generated@@535)) (= (= $generated@@534 ($generated@@410 $generated@@536 $generated@@535)) (= ($generated@@457 $generated@@534) ($generated@@529 $generated@@535))))))
 :pattern ( ($generated@@457 $generated@@534))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 ($generated@@413 (type $generated@@537))))
(let (($generated@@539 ($generated@@412 (type $generated@@537))))
 (=> (= (type $generated@@537) ($generated@@411 $generated@@539 $generated@@538)) (= (= $generated@@537 ($generated@@410 $generated@@539 $generated@@538)) (= ($generated@@494 $generated@@537) ($generated@@529 $generated@@169))))))
 :pattern ( ($generated@@494 $generated@@537))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@395 (type $generated@@540))))
(let (($generated@@542 ($generated@@394 (type $generated@@540))))
 (=> (= (type $generated@@540) ($generated@@393 $generated@@542 $generated@@541)) (or (= $generated@@540 ($generated@@392 $generated@@542 $generated@@541)) (exists (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (and (and (= (type $generated@@543) $generated@@169) (= (type $generated@@544) $generated@@169)) ($generated@@0 ($generated@@88 ($generated@@486 $generated@@540) ($generated@@380 ($generated@@290 $generated@@543 $generated@@544)))))
 :no-pattern (type $generated@@543)
 :no-pattern (type $generated@@544)
 :no-pattern ($generated $generated@@543)
 :no-pattern ($generated@@0 $generated@@543)
 :no-pattern ($generated $generated@@544)
 :no-pattern ($generated@@0 $generated@@544)
))))))
 :pattern ( ($generated@@486 $generated@@540))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@413 (type $generated@@545))))
(let (($generated@@547 ($generated@@412 (type $generated@@545))))
 (=> (= (type $generated@@545) ($generated@@411 $generated@@547 $generated@@546)) (or (= $generated@@545 ($generated@@410 $generated@@547 $generated@@546)) (exists (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (and (and (= (type $generated@@548) $generated@@169) (= (type $generated@@549) $generated@@169)) ($generated@@0 ($generated@@88 ($generated@@494 $generated@@545) ($generated@@380 ($generated@@290 $generated@@548 $generated@@549)))))
 :no-pattern (type $generated@@548)
 :no-pattern (type $generated@@549)
 :no-pattern ($generated $generated@@548)
 :no-pattern ($generated@@0 $generated@@548)
 :no-pattern ($generated $generated@@549)
 :no-pattern ($generated@@0 $generated@@549)
))))))
 :pattern ( ($generated@@494 $generated@@545))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@169) ($generated@@291 $generated@@550 $generated@@46)) (and (= ($generated@@380 ($generated@@434 $generated@@2 $generated@@550)) $generated@@550) ($generated@@155 ($generated@@434 $generated@@2 $generated@@550) $generated@@46)))
 :pattern ( ($generated@@291 $generated@@550 $generated@@46))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@169) ($generated@@291 $generated@@551 $generated@@47)) (and (= ($generated@@380 ($generated@@434 $generated@@3 $generated@@551)) $generated@@551) ($generated@@155 ($generated@@434 $generated@@3 $generated@@551) $generated@@47)))
 :pattern ( ($generated@@291 $generated@@551 $generated@@47))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@169) ($generated@@291 $generated@@552 $generated@@44)) (and (= ($generated@@380 ($generated@@434 $generated@@4 $generated@@552)) $generated@@552) ($generated@@155 ($generated@@434 $generated@@4 $generated@@552) $generated@@44)))
 :pattern ( ($generated@@291 $generated@@552 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@553) 21))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@169) ($generated@@291 $generated@@554 $generated@@45)) (and (= ($generated@@380 ($generated@@434 $generated@@553 $generated@@554)) $generated@@554) ($generated@@155 ($generated@@434 $generated@@553 $generated@@554) $generated@@45)))
 :pattern ( ($generated@@291 $generated@@554 $generated@@45))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@68) (= ($generated@@291 ($generated@@380 $generated@@555) $generated@@556) ($generated@@155 $generated@@555 $generated@@556)))
 :pattern ( ($generated@@291 ($generated@@380 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@143) (= (type $generated@@558) $generated@@169)) (= (type $generated@@559) $generated@@81)) (= (type $generated@@560) $generated@@81)) (= ($generated@@210 ($generated@@142 $generated@@557) $generated@@558 $generated@@559 $generated@@560) ($generated@@210 $generated@@557 $generated@@558 $generated@@559 $generated@@560)))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@557) $generated@@558 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@169) (<= 0 ($generated@@174 $generated@@561)))
 :pattern ( ($generated@@174 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@86 (type $generated@@562))))
 (=> (= (type $generated@@562) ($generated@@82 $generated@@563 $generated@@2)) (<= 0 ($generated@@385 $generated@@562))))
 :pattern ( ($generated@@385 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@364 (type $generated@@564))))
 (=> (= (type $generated@@564) ($generated@@363 $generated@@565)) (<= 0 ($generated@@362 $generated@@564))))
 :pattern ( ($generated@@362 $generated@@564))
)))
(assert  (=> (<= 2 $generated@@152) (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@566) $generated@@143) (= (type $generated@@567) $generated@@169)) (= (type $generated@@568) $generated@@81)) (= (type $generated@@569) $generated@@81)) (or ($generated@@322 $generated@@567 $generated@@568 $generated@@569) (and (not (= 2 $generated@@152)) (and ($generated@@155 $generated@@568 $generated@@80) ($generated@@155 $generated@@569 $generated@@80))))) (and (and (=> (< 0 ($generated@@174 $generated@@567)) (=> (not ($generated@@156 $generated@@568)) (let (($generated@@570 ($generated@@157 $generated@@568)))
(let (($generated@@571 ($generated@@158 $generated@@568)))
 (=> ($generated@@159 $generated@@569) (=> (<= $generated@@571 ($generated@@158 $generated@@569)) ($generated@@322 ($generated@@175 $generated@@567 ($generated@@176 1)) $generated@@570 ($generated@@157 $generated@@569)))))))) (=> (=> (< 0 ($generated@@174 $generated@@567)) (ite ($generated@@156 $generated@@568) true (let (($generated@@572 ($generated@@157 $generated@@568)))
(let (($generated@@573 ($generated@@158 $generated@@568)))
 (and (and ($generated@@159 $generated@@569) (<= $generated@@573 ($generated@@158 $generated@@569))) ($generated@@210 $generated@@566 ($generated@@175 $generated@@567 ($generated@@176 1)) $generated@@572 ($generated@@157 $generated@@569))))))) (=> (= ($generated@@316 0) ($generated@@174 $generated@@567)) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@169) ($generated@@168 $generated@@574 $generated@@567)) ($generated@@322 $generated@@574 $generated@@568 $generated@@569))
 :pattern ( ($generated@@210 $generated@@566 $generated@@574 $generated@@568 $generated@@569))
))))) (= ($generated@@210 ($generated@@142 $generated@@566) $generated@@567 $generated@@568 $generated@@569)  (and (=> (< 0 ($generated@@174 $generated@@567)) (ite ($generated@@156 $generated@@568) true (let (($generated@@575 ($generated@@157 $generated@@568)))
(let (($generated@@576 ($generated@@158 $generated@@568)))
 (and (and ($generated@@159 $generated@@569) (<= $generated@@576 ($generated@@158 $generated@@569))) ($generated@@210 $generated@@566 ($generated@@175 $generated@@567 ($generated@@176 1)) $generated@@575 ($generated@@157 $generated@@569))))))) (=> (= ($generated@@316 0) ($generated@@174 $generated@@567)) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@169) ($generated@@168 $generated@@577 $generated@@567)) ($generated@@210 $generated@@566 $generated@@577 $generated@@568 $generated@@569))
 :pattern ( ($generated@@210 $generated@@566 $generated@@577 $generated@@568 $generated@@569))
)))))))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@566) $generated@@567 $generated@@568 $generated@@569))
))))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@68)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@68) (= (type $generated@@581) $generated@@68)) (= ($generated@@578 ($generated@@512 $generated@@580 $generated@@581)) $generated@@580))
 :pattern ( ($generated@@512 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@68)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@68) (= (type $generated@@585) $generated@@68)) (= ($generated@@582 ($generated@@512 $generated@@584 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@512 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@68) (= (type $generated@@587) $generated@@68)) (= ($generated@@76 ($generated@@512 $generated@@586 $generated@@587)) $generated@@58))
 :pattern ( ($generated@@512 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@68)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@68) (= (type $generated@@591) $generated@@68)) (= ($generated@@588 ($generated@@520 $generated@@590 $generated@@591)) $generated@@590))
 :pattern ( ($generated@@520 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@68)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@68) (= (type $generated@@595) $generated@@68)) (= ($generated@@592 ($generated@@520 $generated@@594 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@520 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@68) (= (type $generated@@597) $generated@@68)) (= ($generated@@76 ($generated@@520 $generated@@596 $generated@@597)) $generated@@59))
 :pattern ( ($generated@@520 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@169) (= (type $generated@@599) $generated@@169)) (= ($generated@@202 ($generated@@290 $generated@@598 $generated@@599)) $generated@@61))
 :pattern ( ($generated@@290 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ) (! (= (type ($generated@@600 $generated@@601)) $generated@@68)
 :pattern ( ($generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@68) (= (type $generated@@603) $generated@@68)) (= ($generated@@600 ($generated@@189 $generated@@602 $generated@@603)) $generated@@602))
 :pattern ( ($generated@@189 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ) (! (= (type ($generated@@604 $generated@@605)) $generated@@68)
 :pattern ( ($generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@68) (= (type $generated@@607) $generated@@68)) (= ($generated@@604 ($generated@@189 $generated@@606 $generated@@607)) $generated@@607))
 :pattern ( ($generated@@189 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@169) (= (type $generated@@609) $generated@@169)) (= ($generated@@196 ($generated@@290 $generated@@608 $generated@@609)) $generated@@608))
 :pattern ( ($generated@@290 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@169) (= (type $generated@@611) $generated@@169)) (= ($generated@@197 ($generated@@290 $generated@@610 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@290 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 Int) ($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@81) (= ($generated@@202 ($generated@@79 $generated@@612 $generated@@613)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 Int) ($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@81) (= ($generated@@158 ($generated@@79 $generated@@614 $generated@@615)) $generated@@614))
 :pattern ( ($generated@@79 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 Int) ($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@81) (= ($generated@@157 ($generated@@79 $generated@@616 $generated@@617)) $generated@@617))
 :pattern ( ($generated@@79 $generated@@616 $generated@@617))
)))
(assert  (and (forall (($generated@@620 T@U) ) (! (= (type ($generated@@618 $generated@@620)) $generated@@68)
 :pattern ( ($generated@@618 $generated@@620))
)) (forall (($generated@@621 T@U) ($generated@@622 Int) ) (! (let (($generated@@623 ($generated@@364 (type $generated@@621))))
(= (type ($generated@@619 $generated@@621 $generated@@622)) $generated@@623))
 :pattern ( ($generated@@619 $generated@@621 $generated@@622))
))))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@624) ($generated@@363 $generated@@169)) (= (type $generated@@625) $generated@@68)) (= (type $generated@@626) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@624 ($generated@@618 $generated@@625) $generated@@626) (forall (($generated@@627 Int) ) (!  (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@362 $generated@@624))) ($generated@@335 ($generated@@619 $generated@@624 $generated@@627) $generated@@625 $generated@@626))
 :pattern ( ($generated@@619 $generated@@624 $generated@@627))
))))
 :pattern ( ($generated@@78 $generated@@624 ($generated@@618 $generated@@625) $generated@@626))
)))
(assert (forall (($generated@@629 Int) ) (! (= ($generated@@628 ($generated@@148 $generated@@629)) $generated@@629)
 :pattern ( ($generated@@148 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ) (! (= (type ($generated@@630 $generated@@631)) $generated@@68)
 :pattern ( ($generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@68) (= ($generated@@630 ($generated@@306 $generated@@632)) $generated@@632))
 :pattern ( ($generated@@306 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@68) (= ($generated@@76 ($generated@@306 $generated@@633)) $generated@@54))
 :pattern ( ($generated@@306 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ) (! (= (type ($generated@@634 $generated@@635)) $generated@@68)
 :pattern ( ($generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@68) (= ($generated@@634 ($generated@@311 $generated@@636)) $generated@@636))
 :pattern ( ($generated@@311 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@68) (= ($generated@@76 ($generated@@311 $generated@@637)) $generated@@55))
 :pattern ( ($generated@@311 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ) (! (= (type ($generated@@638 $generated@@639)) $generated@@68)
 :pattern ( ($generated@@638 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@68) (= ($generated@@638 ($generated@@205 $generated@@640)) $generated@@640))
 :pattern ( ($generated@@205 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@68) (= ($generated@@76 ($generated@@205 $generated@@641)) $generated@@56))
 :pattern ( ($generated@@205 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ) (! (= (type ($generated@@642 $generated@@643)) $generated@@68)
 :pattern ( ($generated@@642 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@68) (= ($generated@@642 ($generated@@618 $generated@@644)) $generated@@644))
 :pattern ( ($generated@@618 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@68) (= ($generated@@76 ($generated@@618 $generated@@645)) $generated@@57))
 :pattern ( ($generated@@618 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (! (let (($generated@@647 (type $generated@@646)))
(= ($generated@@434 $generated@@647 ($generated@@380 $generated@@646)) $generated@@646))
 :pattern ( ($generated@@380 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@393 $generated@@169 $generated@@169)) (= (type $generated@@649) $generated@@68)) (= (type $generated@@650) $generated@@68)) (= ($generated@@155 $generated@@648 ($generated@@512 $generated@@649 $generated@@650)) (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@169) ($generated@@0 ($generated@@88 ($generated@@391 $generated@@648) $generated@@651))) (and ($generated@@291 ($generated@@88 ($generated@@487 $generated@@648) $generated@@651) $generated@@650) ($generated@@291 $generated@@651 $generated@@649)))
 :pattern ( ($generated@@88 ($generated@@487 $generated@@648) $generated@@651))
 :pattern ( ($generated@@88 ($generated@@391 $generated@@648) $generated@@651))
))))
 :pattern ( ($generated@@155 $generated@@648 ($generated@@512 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@652) ($generated@@411 $generated@@169 $generated@@169)) (= (type $generated@@653) $generated@@68)) (= (type $generated@@654) $generated@@68)) (= ($generated@@155 $generated@@652 ($generated@@520 $generated@@653 $generated@@654)) (forall (($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@169) ($generated@@0 ($generated@@88 ($generated@@409 $generated@@652) $generated@@655))) (and ($generated@@291 ($generated@@88 ($generated@@495 $generated@@652) $generated@@655) $generated@@654) ($generated@@291 $generated@@655 $generated@@653)))
 :pattern ( ($generated@@88 ($generated@@495 $generated@@652) $generated@@655))
 :pattern ( ($generated@@88 ($generated@@409 $generated@@652) $generated@@655))
))))
 :pattern ( ($generated@@155 $generated@@652 ($generated@@520 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@169) (= (type $generated@@657) $generated@@169)) (and (and (and (=> ($generated@@168 $generated@@656 $generated@@657) (not (= $generated@@656 $generated@@657))) (=> (and ($generated@@427 $generated@@656) (not ($generated@@427 $generated@@657))) ($generated@@168 $generated@@656 $generated@@657))) (=> (and ($generated@@427 $generated@@656) ($generated@@427 $generated@@657)) (= ($generated@@168 $generated@@656 $generated@@657) (< ($generated@@174 $generated@@656) ($generated@@174 $generated@@657))))) (=> (and ($generated@@168 $generated@@656 $generated@@657) ($generated@@427 $generated@@657)) ($generated@@427 $generated@@656))))
 :pattern ( ($generated@@168 $generated@@656 $generated@@657))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@169) (= (type $generated@@661) $generated@@169)) (< ($generated@@658 $generated@@660) ($generated@@659 ($generated@@290 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@290 $generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@169) (= (type $generated@@663) $generated@@169)) (< ($generated@@658 $generated@@663) ($generated@@659 ($generated@@290 $generated@@662 $generated@@663))))
 :pattern ( ($generated@@290 $generated@@662 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) $generated@@169) (= (type $generated@@665) $generated@@68)) (= (type $generated@@666) $generated@@68)) ($generated@@291 $generated@@664 ($generated@@512 $generated@@665 $generated@@666))) (and (= ($generated@@380 ($generated@@434 ($generated@@393 $generated@@169 $generated@@169) $generated@@664)) $generated@@664) ($generated@@155 ($generated@@434 ($generated@@393 $generated@@169 $generated@@169) $generated@@664) ($generated@@512 $generated@@665 $generated@@666))))
 :pattern ( ($generated@@291 $generated@@664 ($generated@@512 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@169) (= (type $generated@@668) $generated@@68)) (= (type $generated@@669) $generated@@68)) ($generated@@291 $generated@@667 ($generated@@520 $generated@@668 $generated@@669))) (and (= ($generated@@380 ($generated@@434 ($generated@@411 $generated@@169 $generated@@169) $generated@@667)) $generated@@667) ($generated@@155 ($generated@@434 ($generated@@411 $generated@@169 $generated@@169) $generated@@667) ($generated@@520 $generated@@668 $generated@@669))))
 :pattern ( ($generated@@291 $generated@@667 ($generated@@520 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) $generated@@68) (= (type $generated@@671) $generated@@68)) (= (type $generated@@672) $generated@@169)) ($generated@@291 $generated@@672 ($generated@@189 $generated@@670 $generated@@671))) (and (= ($generated@@380 ($generated@@434 $generated@@81 $generated@@672)) $generated@@672) ($generated@@155 ($generated@@434 $generated@@81 $generated@@672) ($generated@@189 $generated@@670 $generated@@671))))
 :pattern ( ($generated@@291 $generated@@672 ($generated@@189 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@673 T@U) ) (! (let (($generated@@674 (type $generated@@673)))
 (not ($generated@@0 ($generated@@88 ($generated@@529 $generated@@674) $generated@@673))))
 :pattern ( (let (($generated@@674 (type $generated@@673)))
($generated@@88 ($generated@@529 $generated@@674) $generated@@673)))
)))
(assert (forall (($generated@@676 T@U) ) (! (= (type ($generated@@675 $generated@@676)) $generated@@73)
 :pattern ( ($generated@@675 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@68) (= (type $generated@@678) $generated@@68)) (and (= ($generated@@76 ($generated@@189 $generated@@677 $generated@@678)) $generated@@62) (= ($generated@@675 ($generated@@189 $generated@@677 $generated@@678)) $generated@@66)))
 :pattern ( ($generated@@189 $generated@@677 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@679) $generated@@81) (= (type $generated@@680) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@680) (and ($generated@@159 $generated@@679) ($generated@@78 $generated@@679 $generated@@80 $generated@@680)))) ($generated@@78 ($generated@@8 ($generated@@158 $generated@@679)) $generated@@46 $generated@@680))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@158 $generated@@679)) $generated@@46 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@81) (= ($generated@@658 ($generated@@380 $generated@@681)) ($generated@@659 $generated@@681)))
 :pattern ( ($generated@@658 ($generated@@380 $generated@@681)))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@169) ($generated@@291 $generated@@682 ($generated@@148 0))) (and (= ($generated@@380 ($generated@@434 $generated@@2 $generated@@682)) $generated@@682) ($generated@@155 ($generated@@434 ($generated@@82 $generated@@169 $generated@@4) $generated@@682) ($generated@@148 0))))
 :pattern ( ($generated@@291 $generated@@682 ($generated@@148 0)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (= (type $generated@@683) $generated@@169) (= (type $generated@@684) $generated@@68)) ($generated@@291 $generated@@683 ($generated@@306 $generated@@684))) (and (= ($generated@@380 ($generated@@434 ($generated@@82 $generated@@169 $generated@@4) $generated@@683)) $generated@@683) ($generated@@155 ($generated@@434 ($generated@@82 $generated@@169 $generated@@4) $generated@@683) ($generated@@306 $generated@@684))))
 :pattern ( ($generated@@291 $generated@@683 ($generated@@306 $generated@@684)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (= (type $generated@@685) $generated@@169) (= (type $generated@@686) $generated@@68)) ($generated@@291 $generated@@685 ($generated@@311 $generated@@686))) (and (= ($generated@@380 ($generated@@434 ($generated@@82 $generated@@169 $generated@@4) $generated@@685)) $generated@@685) ($generated@@155 ($generated@@434 ($generated@@82 $generated@@169 $generated@@4) $generated@@685) ($generated@@311 $generated@@686))))
 :pattern ( ($generated@@291 $generated@@685 ($generated@@311 $generated@@686)))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (= (type $generated@@687) $generated@@169) (= (type $generated@@688) $generated@@68)) ($generated@@291 $generated@@687 ($generated@@205 $generated@@688))) (and (= ($generated@@380 ($generated@@434 ($generated@@82 $generated@@169 $generated@@2) $generated@@687)) $generated@@687) ($generated@@155 ($generated@@434 ($generated@@82 $generated@@169 $generated@@2) $generated@@687) ($generated@@205 $generated@@688))))
 :pattern ( ($generated@@291 $generated@@687 ($generated@@205 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (= (type $generated@@689) $generated@@169) (= (type $generated@@690) $generated@@68)) ($generated@@291 $generated@@689 ($generated@@618 $generated@@690))) (and (= ($generated@@380 ($generated@@434 ($generated@@363 $generated@@169) $generated@@689)) $generated@@689) ($generated@@155 ($generated@@434 ($generated@@363 $generated@@169) $generated@@689) ($generated@@618 $generated@@690))))
 :pattern ( ($generated@@291 $generated@@689 ($generated@@618 $generated@@690)))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@691) $generated@@169) ($generated@@427 $generated@@691)) (= $generated@@691 ($generated@@176 ($generated@@174 $generated@@691))))
 :pattern ( ($generated@@174 $generated@@691))
 :pattern ( ($generated@@427 $generated@@691))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@675 $generated@@80) $generated@@67))
(assert  (=> (<= 2 $generated@@152) (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@692) $generated@@143) (= (type $generated@@693) $generated@@169)) (= (type $generated@@694) $generated@@81)) (= (type $generated@@695) $generated@@81)) (or ($generated@@322 ($generated@@318 $generated@@693) ($generated@@318 $generated@@694) ($generated@@318 $generated@@695)) (and (not (= 2 $generated@@152)) (and ($generated@@155 $generated@@694 $generated@@80) ($generated@@155 $generated@@695 $generated@@80))))) (and (and (=> (< 0 ($generated@@174 $generated@@693)) (=> (not ($generated@@156 $generated@@694)) (let (($generated@@696 ($generated@@157 $generated@@694)))
(let (($generated@@697 ($generated@@158 $generated@@694)))
 (=> ($generated@@159 $generated@@695) (=> (<= $generated@@697 ($generated@@158 $generated@@695)) ($generated@@322 ($generated@@175 $generated@@693 ($generated@@176 1)) $generated@@696 ($generated@@157 $generated@@695)))))))) (=> (=> (< 0 ($generated@@174 $generated@@693)) (ite ($generated@@156 $generated@@694) true (let (($generated@@698 ($generated@@157 $generated@@694)))
(let (($generated@@699 ($generated@@158 $generated@@694)))
 (and (and ($generated@@159 $generated@@695) (<= $generated@@699 ($generated@@158 $generated@@695))) ($generated@@210 ($generated@@142 $generated@@692) ($generated@@175 $generated@@693 ($generated@@176 1)) $generated@@698 ($generated@@157 $generated@@695))))))) (=> (= ($generated@@316 0) ($generated@@174 $generated@@693)) (forall (($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@700) $generated@@169) ($generated@@168 $generated@@700 $generated@@693)) ($generated@@322 $generated@@700 $generated@@694 $generated@@695))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@692) $generated@@700 $generated@@694 $generated@@695))
))))) (= ($generated@@210 ($generated@@142 $generated@@692) ($generated@@318 $generated@@693) ($generated@@318 $generated@@694) ($generated@@318 $generated@@695))  (and (=> (< 0 ($generated@@174 $generated@@693)) (ite ($generated@@156 $generated@@694) true (let (($generated@@701 ($generated@@157 $generated@@694)))
(let (($generated@@702 ($generated@@158 $generated@@694)))
 (and (and ($generated@@159 $generated@@695) (<= $generated@@702 ($generated@@158 $generated@@695))) ($generated@@210 ($generated@@142 $generated@@692) ($generated@@175 $generated@@693 ($generated@@176 1)) $generated@@701 ($generated@@157 $generated@@695))))))) (=> (= ($generated@@316 0) ($generated@@174 $generated@@693)) (forall (($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@703) $generated@@169) ($generated@@168 $generated@@703 $generated@@693)) ($generated@@210 ($generated@@142 $generated@@692) $generated@@703 $generated@@694 $generated@@695))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@692) $generated@@703 $generated@@694 $generated@@695))
)))))))
 :weight 3
 :pattern ( ($generated@@210 ($generated@@142 $generated@@692) ($generated@@318 $generated@@693) ($generated@@318 $generated@@694) ($generated@@318 $generated@@695)))
))))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (= (type $generated@@704) ($generated@@82 $generated@@169 $generated@@2)) (= (type $generated@@705) $generated@@68)) (= (type $generated@@706) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@704 ($generated@@205 $generated@@705) $generated@@706) (forall (($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@169) (< 0 ($generated ($generated@@88 $generated@@704 $generated@@707)))) ($generated@@335 $generated@@707 $generated@@705 $generated@@706))
 :pattern ( ($generated@@88 $generated@@704 $generated@@707))
))))
 :pattern ( ($generated@@78 $generated@@704 ($generated@@205 $generated@@705) $generated@@706))
)))
(assert  (=> (<= 2 $generated@@152) (forall (($generated@@708 T@U) ($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@708) $generated@@143) (= (type $generated@@709) $generated@@81)) (= (type $generated@@710) $generated@@81)) (= (type $generated@@711) $generated@@169)) (and (and ($generated@@155 $generated@@709 $generated@@80) ($generated@@155 $generated@@710 $generated@@80)) (= $generated@@711 ($generated@@176 0)))) ($generated@@210 $generated@@708 $generated@@711 $generated@@709 $generated@@710))
 :pattern ( ($generated@@210 $generated@@708 $generated@@711 $generated@@709 $generated@@710))
))))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (= (type $generated@@712) $generated@@169) (= (type $generated@@713) $generated@@169)) (and ($generated@@427 $generated@@713) (<= ($generated@@174 $generated@@713) ($generated@@174 $generated@@712)))) (or (and (= $generated@@713 ($generated@@176 0)) (= ($generated@@175 $generated@@712 $generated@@713) $generated@@712)) (and (not (= $generated@@713 ($generated@@176 0))) ($generated@@168 ($generated@@175 $generated@@712 $generated@@713) $generated@@712))))
 :pattern ( ($generated@@175 $generated@@712 $generated@@713))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (and (= (type $generated@@714) $generated@@81) (= (type $generated@@715) $generated@@68)) (= (type $generated@@716) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@716) (and ($generated@@188 $generated@@714) (exists (($generated@@717 T@U) ) (!  (and (= (type $generated@@717) $generated@@68) ($generated@@78 $generated@@714 ($generated@@189 $generated@@715 $generated@@717) $generated@@716))
 :pattern ( ($generated@@78 $generated@@714 ($generated@@189 $generated@@715 $generated@@717) $generated@@716))
))))) ($generated@@335 ($generated@@196 $generated@@714) $generated@@715 $generated@@716))
 :pattern ( ($generated@@335 ($generated@@196 $generated@@714) $generated@@715 $generated@@716))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (and (= (type $generated@@718) $generated@@81) (= (type $generated@@719) $generated@@68)) (= (type $generated@@720) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@720) (and ($generated@@188 $generated@@718) (exists (($generated@@721 T@U) ) (!  (and (= (type $generated@@721) $generated@@68) ($generated@@78 $generated@@718 ($generated@@189 $generated@@721 $generated@@719) $generated@@720))
 :pattern ( ($generated@@78 $generated@@718 ($generated@@189 $generated@@721 $generated@@719) $generated@@720))
))))) ($generated@@335 ($generated@@197 $generated@@718) $generated@@719 $generated@@720))
 :pattern ( ($generated@@335 ($generated@@197 $generated@@718) $generated@@719 $generated@@720))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (= (type $generated@@722) $generated@@81) (= (type $generated@@723) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@723) (and ($generated@@159 $generated@@722) ($generated@@78 $generated@@722 $generated@@80 $generated@@723)))) ($generated@@78 ($generated@@157 $generated@@722) $generated@@80 $generated@@723))
 :pattern ( ($generated@@78 ($generated@@157 $generated@@722) $generated@@80 $generated@@723))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@724) $generated@@169) (= (type $generated@@725) $generated@@169)) (= ($generated@@290 ($generated@@318 $generated@@724) ($generated@@318 $generated@@725)) ($generated@@318 ($generated@@290 $generated@@724 $generated@@725))))
 :pattern ( ($generated@@290 ($generated@@318 $generated@@724) ($generated@@318 $generated@@725)))
)))
(assert (forall (($generated@@726 Int) ) (! (= ($generated@@380 ($generated@@8 ($generated@@316 $generated@@726))) ($generated@@318 ($generated@@380 ($generated@@8 $generated@@726))))
 :pattern ( ($generated@@380 ($generated@@8 ($generated@@316 $generated@@726))))
)))
(assert (forall (($generated@@727 T@U) ) (! (= ($generated@@380 ($generated@@318 $generated@@727)) ($generated@@318 ($generated@@380 $generated@@727)))
 :pattern ( ($generated@@380 ($generated@@318 $generated@@727)))
)))
(assert (forall (($generated@@728 Int) ($generated@@729 T@U) ) (!  (=> (= (type $generated@@729) $generated@@81) (= ($generated@@155 ($generated@@79 $generated@@728 $generated@@729) $generated@@80)  (and ($generated@@155 ($generated@@8 $generated@@728) $generated@@46) ($generated@@155 $generated@@729 $generated@@80))))
 :pattern ( ($generated@@155 ($generated@@79 $generated@@728 $generated@@729) $generated@@80))
)))
(assert (forall (($generated@@730 T@U) ) (! (let (($generated@@731 ($generated@@364 (type $generated@@730))))
 (=> (and (= (type $generated@@730) ($generated@@363 $generated@@731)) (= ($generated@@362 $generated@@730) 0)) (= $generated@@730 ($generated@@361 $generated@@731))))
 :pattern ( ($generated@@362 $generated@@730))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ($generated@@734 T@U) ) (! (let (($generated@@735 (type $generated@@733)))
 (=> (and (and (= (type $generated@@732) ($generated@@82 $generated@@735 $generated@@2)) (= (type $generated@@734) $generated@@2)) (<= 0 ($generated $generated@@734))) (= ($generated@@385 ($generated@@89 $generated@@732 $generated@@733 $generated@@734)) (+ (- ($generated@@385 $generated@@732) ($generated ($generated@@88 $generated@@732 $generated@@733))) ($generated $generated@@734)))))
 :pattern ( ($generated@@385 ($generated@@89 $generated@@732 $generated@@733 $generated@@734)))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (= (type $generated@@736) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@737) $generated@@2)) ($generated@@78 $generated@@737 $generated@@46 $generated@@736))
 :pattern ( ($generated@@78 $generated@@737 $generated@@46 $generated@@736))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (= (type $generated@@738) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@739) $generated@@3)) ($generated@@78 $generated@@739 $generated@@47 $generated@@738))
 :pattern ( ($generated@@78 $generated@@739 $generated@@47 $generated@@738))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (= (type $generated@@740) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@741) $generated@@4)) ($generated@@78 $generated@@741 $generated@@44 $generated@@740))
 :pattern ( ($generated@@78 $generated@@741 $generated@@44 $generated@@740))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (= (type $generated@@742) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@743) $generated@@553)) ($generated@@78 $generated@@743 $generated@@45 $generated@@742))
 :pattern ( ($generated@@78 $generated@@743 $generated@@45 $generated@@742))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (= (type $generated@@744) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@745) $generated@@169)) ($generated@@78 $generated@@745 $generated@@48 $generated@@744))
 :pattern ( ($generated@@78 $generated@@745 $generated@@48 $generated@@744))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (= (type $generated@@746) ($generated@@363 $generated@@169)) (= (type $generated@@747) $generated@@68)) (= ($generated@@155 $generated@@746 ($generated@@618 $generated@@747)) (forall (($generated@@748 Int) ) (!  (=> (and (<= 0 $generated@@748) (< $generated@@748 ($generated@@362 $generated@@746))) ($generated@@291 ($generated@@619 $generated@@746 $generated@@748) $generated@@747))
 :pattern ( ($generated@@619 $generated@@746 $generated@@748))
))))
 :pattern ( ($generated@@155 $generated@@746 ($generated@@618 $generated@@747)))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (and (= (type $generated@@749) $generated@@143) (= (type $generated@@750) $generated@@81)) (= (type $generated@@751) $generated@@81)) (= ($generated@@153 $generated@@749 $generated@@750 $generated@@751) ($generated@@153 $generated@@345 $generated@@750 $generated@@751)))
 :pattern ( ($generated@@153 ($generated@@344 $generated@@749) $generated@@750 $generated@@751))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 Int) ) (!  (=> (= (type $generated@@753) ($generated@@363 $generated@@169)) (=> (and (<= 0 $generated@@754) (< $generated@@754 ($generated@@362 $generated@@753))) (< ($generated@@659 ($generated@@434 $generated@@81 ($generated@@619 $generated@@753 $generated@@754))) ($generated@@752 $generated@@753))))
 :pattern ( ($generated@@659 ($generated@@434 $generated@@81 ($generated@@619 $generated@@753 $generated@@754))))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@755) $generated@@169) (= (type $generated@@756) $generated@@143)) (= (type $generated@@757) $generated@@81)) (= (type $generated@@758) $generated@@81)) (= $generated@@757 $generated@@758)) ($generated@@173 $generated@@755 ($generated@@142 $generated@@756) $generated@@757 $generated@@758))
 :pattern ( ($generated@@173 $generated@@755 ($generated@@142 $generated@@756) $generated@@757 $generated@@758))
)))
(assert (forall (($generated@@759 T@U) ($generated@@760 T@U) ($generated@@761 T@U) ) (!  (=> (and (and (and (= (type $generated@@759) ($generated@@393 $generated@@169 $generated@@169)) (= (type $generated@@760) $generated@@68)) (= (type $generated@@761) $generated@@68)) ($generated@@155 $generated@@759 ($generated@@512 $generated@@760 $generated@@761))) (and (and ($generated@@155 ($generated@@391 $generated@@759) ($generated@@306 $generated@@760)) ($generated@@155 ($generated@@446 $generated@@759) ($generated@@306 $generated@@761))) ($generated@@155 ($generated@@486 $generated@@759) ($generated@@306 ($generated@@189 $generated@@760 $generated@@761)))))
 :pattern ( ($generated@@155 $generated@@759 ($generated@@512 $generated@@760 $generated@@761)))
)))
(assert (forall (($generated@@762 T@U) ($generated@@763 T@U) ($generated@@764 T@U) ) (!  (=> (and (and (and (= (type $generated@@762) ($generated@@411 $generated@@169 $generated@@169)) (= (type $generated@@763) $generated@@68)) (= (type $generated@@764) $generated@@68)) ($generated@@155 $generated@@762 ($generated@@520 $generated@@763 $generated@@764))) (and (and ($generated@@155 ($generated@@409 $generated@@762) ($generated@@311 $generated@@763)) ($generated@@155 ($generated@@457 $generated@@762) ($generated@@311 $generated@@764))) ($generated@@155 ($generated@@494 $generated@@762) ($generated@@311 ($generated@@189 $generated@@763 $generated@@764)))))
 :pattern ( ($generated@@155 $generated@@762 ($generated@@520 $generated@@763 $generated@@764)))
)))
(assert (forall (($generated@@765 T@U) ) (!  (=> (= (type $generated@@765) $generated@@2) ($generated@@155 $generated@@765 $generated@@46))
 :pattern ( ($generated@@155 $generated@@765 $generated@@46))
)))
(assert (forall (($generated@@766 T@U) ) (!  (=> (= (type $generated@@766) $generated@@3) ($generated@@155 $generated@@766 $generated@@47))
 :pattern ( ($generated@@155 $generated@@766 $generated@@47))
)))
(assert (forall (($generated@@767 T@U) ) (!  (=> (= (type $generated@@767) $generated@@4) ($generated@@155 $generated@@767 $generated@@44))
 :pattern ( ($generated@@155 $generated@@767 $generated@@44))
)))
(assert (forall (($generated@@768 T@U) ) (!  (=> (= (type $generated@@768) $generated@@553) ($generated@@155 $generated@@768 $generated@@45))
 :pattern ( ($generated@@155 $generated@@768 $generated@@45))
)))
(assert (forall (($generated@@769 T@U) ) (!  (=> (= (type $generated@@769) $generated@@169) ($generated@@155 $generated@@769 $generated@@48))
 :pattern ( ($generated@@155 $generated@@769 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@770 () T@U)
(declare-fun $generated@@771 () Int)
(declare-fun $generated@@772 () T@U)
(declare-fun $generated@@773 () T@U)
(declare-fun $generated@@774 () T@U)
(declare-fun $generated@@775 () T@U)
(declare-fun $generated@@776 () Int)
(declare-fun $generated@@777 () T@U)
(declare-fun $generated@@778 () T@U)
(declare-fun $generated@@779 () Int)
(declare-fun $generated@@780 () T@U)
(declare-fun $generated@@781 () T@U)
(declare-fun $generated@@782 () T@U)
(declare-fun $generated@@783 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@770) $generated@@81) (= (type $generated@@772) $generated@@81)) (= (type $generated@@773) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@774) $generated@@81)) (= (type $generated@@775) $generated@@81)) (= (type $generated@@777) $generated@@81)) (= (type $generated@@778) $generated@@81)) (= (type $generated@@780) ($generated@@220 $generated@@83 $generated@@4))) (= (type $generated@@781) $generated@@83)) (= (type $generated@@782) ($generated@@220 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@784 true))
(let (($generated@@785  (=> (and (not (and ($generated@@159 $generated@@770) (<= $generated@@771 ($generated@@158 $generated@@770)))) (= (ControlFlow 0 7) 4)) $generated@@784)))
(let (($generated@@786  (=> (and ($generated@@159 $generated@@770) (<= $generated@@771 ($generated@@158 $generated@@770))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@159 $generated@@770)) (=> ($generated@@159 $generated@@770) (=> ($generated@@78 $generated@@772 $generated@@80 $generated@@773) (=> (and (and (= $generated@@774 ($generated@@157 $generated@@770)) ($generated@@78 $generated@@774 $generated@@80 $generated@@773)) (and ($generated@@154 $generated@@772 ($generated@@157 $generated@@770)) (= (ControlFlow 0 5) 4))) $generated@@784)))))))
(let (($generated@@787  (=> (not ($generated@@159 $generated@@770)) (and (=> (= (ControlFlow 0 10) 5) $generated@@786) (=> (= (ControlFlow 0 10) 7) $generated@@785)))))
(let (($generated@@788  (=> ($generated@@159 $generated@@770) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@159 $generated@@770)) (=> ($generated@@159 $generated@@770) (and (=> (= (ControlFlow 0 8) 5) $generated@@786) (=> (= (ControlFlow 0 8) 7) $generated@@785)))))))
(let (($generated@@789  (=> (and (= $generated@@775 ($generated@@79 $generated@@776 $generated@@777)) ($generated@@155 $generated@@777 $generated@@80)) (=> (and (and (and ($generated@@155 $generated@@772 $generated@@80) ($generated@@78 $generated@@772 $generated@@80 $generated@@773)) (and (= $generated@@778 $generated@@777) ($generated@@155 $generated@@778 $generated@@80))) (and (and (= $generated@@772 $generated@@778) (= $generated@@779 $generated@@776)) (and ($generated@@155 ($generated@@8 $generated@@779) $generated@@46) (= $generated@@771 $generated@@779)))) (and (=> (= (ControlFlow 0 11) 8) $generated@@788) (=> (= (ControlFlow 0 11) 10) $generated@@787))))))
(let (($generated@@790 true))
(let (($generated@@791  (=> (not (= $generated@@775 $generated@@203)) (and (=> (= (ControlFlow 0 12) 11) $generated@@789) (=> (= (ControlFlow 0 12) 3) $generated@@790)))))
(let (($generated@@792 true))
(let (($generated@@793  (=> (= $generated@@780 ($generated@@274 $generated@@781 $generated@@773 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 2) $generated@@792) (=> (= (ControlFlow 0 13) 12) $generated@@791)))))
(let (($generated@@794 true))
(let (($generated@@795  (=> (= $generated@@782 ($generated@@219 $generated@@781 $generated@@773 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 1) $generated@@794) (=> (= (ControlFlow 0 14) 13) $generated@@793)))))
(let (($generated@@796  (=> (and ($generated@@85 $generated@@773) ($generated@@783 $generated@@773)) (=> (and (and ($generated@@155 $generated@@775 $generated@@80) ($generated@@155 $generated@@770 $generated@@80)) (and (= 1 $generated@@152) (= (ControlFlow 0 15) 14))) $generated@@795))))
$generated@@796))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@84 (T@U) Int)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@104 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (Int) T@U)
(declare-fun $generated@@106 (T@T T@T) T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U) T@U)
(declare-fun $generated@@114 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@199 (T@U T@U T@U) T@U)
(declare-fun $generated@@200 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@201 (T@T T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 (T@U T@U) T@U)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@296 (T@U) Bool)
(declare-fun $generated@@297 (T@U T@U T@U) Bool)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@314 (T@U) Int)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@331 (T@U) Int)
(declare-fun $generated@@332 (T@T) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@376 (T@U) Bool)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@T T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@449 (T@U T@U) T@U)
(declare-fun $generated@@457 (T@U T@U) T@U)
(declare-fun $generated@@465 (T@T) T@U)
(declare-fun $generated@@489 () T@T)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@539 (T@U Int) T@U)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(declare-fun $generated@@582 (T@U) Int)
(declare-fun $generated@@683 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@79) 11) (= ($generated@@1 $generated@@80) 12)) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@78 $generated@@91)) $generated@@80)
 :pattern ( ($generated@@78 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@83 $generated@@92)) $generated@@67)
 :pattern ( ($generated@@83 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@86 $generated@@93)) $generated@@79)
 :pattern ( ($generated@@86 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= (type ($generated@@87 $generated@@94 $generated@@95)) $generated@@79)
 :pattern ( ($generated@@87 $generated@@94 $generated@@95))
))) (forall (($generated@@96 Int) ) (! (= (type ($generated@@88 $generated@@96)) $generated@@79)
 :pattern ( ($generated@@88 $generated@@96))
))) (forall (($generated@@97 T@U) ) (! (= (type ($generated@@89 $generated@@97)) $generated@@81)
 :pattern ( ($generated@@89 $generated@@97))
))))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@98) $generated@@67) (= (type $generated@@99) $generated@@67)) (= (type $generated@@100) $generated@@79)) (= (type $generated@@101) $generated@@80)) (= (type $generated@@102) $generated@@81)) (= (type $generated@@103) $generated@@81)) (and ($generated@@82 $generated@@102 ($generated@@83 $generated@@98)) ($generated@@82 $generated@@103 ($generated@@83 $generated@@99)))) (= ($generated@@77 $generated@@98 $generated@@99 $generated@@100 ($generated@@78 $generated@@101) $generated@@102 $generated@@103)  (and (=> (< 0 ($generated@@84 $generated@@100)) (and (and ($generated@@85 $generated@@102) ($generated@@85 $generated@@103)) (=> (and ($generated@@85 $generated@@102) ($generated@@85 $generated@@103)) (and (= ($generated@@86 $generated@@102) ($generated@@86 $generated@@103)) ($generated@@77 $generated@@98 $generated@@99 ($generated@@87 $generated@@100 ($generated@@88 1)) $generated@@101 ($generated@@89 $generated@@102) ($generated@@89 $generated@@103)))))) (=> (and (not (= $generated@@100 ($generated@@88 0))) (= ($generated@@84 $generated@@100) 0)) ($generated@@90 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103)))))
 :pattern ( ($generated@@77 $generated@@98 $generated@@99 $generated@@100 ($generated@@78 $generated@@101) $generated@@102 $generated@@103))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (= ($generated@@1 ($generated@@106 $generated@@115 $generated@@116)) 14)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ) (! (= ($generated@@109 ($generated@@106 $generated@@117 $generated@@118)) $generated@@117)
 :pattern ( ($generated@@106 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (! (= ($generated@@110 ($generated@@106 $generated@@119 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@106 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@110 (type $generated@@121))))
(= (type ($generated@@111 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@111 $generated@@121 $generated@@122))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 (type $generated@@126)))
(let (($generated@@128 (type $generated@@125)))
(= (type ($generated@@112 $generated@@124 $generated@@125 $generated@@126)) ($generated@@106 $generated@@128 $generated@@127))))
 :pattern ( ($generated@@112 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@129))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@111 ($generated@@112 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@111 ($generated@@112 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@111 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@111 ($generated@@112 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@111 $generated@@138 $generated@@140)))
 :weight 0
)))) (= ($generated@@1 $generated@@107) 15)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (let (($generated@@143 ($generated@@70 (type $generated@@142))))
(= (type ($generated@@113 $generated@@141 $generated@@142)) $generated@@143))
 :pattern ( ($generated@@113 $generated@@141 $generated@@142))
))) (= ($generated@@1 $generated@@108) 16)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@114 $generated@@144 $generated@@145 $generated@@146)) $generated@@108)
 :pattern ( ($generated@@114 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (let (($generated@@150 ($generated@@70 (type $generated@@148))))
 (=> (= (type $generated@@149) $generated@@150) (= ($generated@@113 ($generated@@114 $generated@@147 $generated@@148 $generated@@149) $generated@@148) $generated@@149)))
 :weight 0
))) (and (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@153 $generated@@154) (= ($generated@@113 ($generated@@114 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@113 $generated@@152 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or true (= ($generated@@113 ($generated@@114 $generated@@156 $generated@@157 $generated@@155) $generated@@158) ($generated@@113 $generated@@156 $generated@@158)))
 :weight 0
)))) (forall (($generated@@159 Int) ) (! (= (type ($generated@@105 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@105 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@160) $generated@@2) (= (type $generated@@161) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@104 $generated@@160 ($generated@@105 0) $generated@@161))
 :pattern ( ($generated@@104 $generated@@160 ($generated@@105 0) $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@162) $generated@@67) (= (type $generated@@163) $generated@@67)) (= (type $generated@@164) $generated@@79)) (= (type $generated@@165) $generated@@80)) (= (type $generated@@166) $generated@@81)) (= (type $generated@@167) $generated@@81)) (not (= $generated@@164 ($generated@@88 0)))) (= ($generated@@77 $generated@@162 $generated@@163 $generated@@164 ($generated@@78 $generated@@165) $generated@@166 $generated@@167) ($generated@@77 $generated@@162 $generated@@163 $generated@@164 $generated@@165 $generated@@166 $generated@@167)))
 :pattern ( ($generated@@77 $generated@@162 $generated@@163 $generated@@164 ($generated@@78 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@79) (= (type $generated@@170) $generated@@79)) (= (type $generated@@171) $generated@@79)) (and ($generated@@168 $generated@@169 $generated@@170) ($generated@@168 $generated@@170 $generated@@171))) ($generated@@168 $generated@@169 $generated@@171))
 :pattern ( ($generated@@168 $generated@@169 $generated@@170) ($generated@@168 $generated@@170 $generated@@171))
 :pattern ( ($generated@@168 $generated@@169 $generated@@170) ($generated@@168 $generated@@169 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@81) ($generated@@172 $generated@@173)) ($generated@@85 $generated@@173))
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@2) ($generated@@82 $generated@@174 ($generated@@105 0)))
 :pattern ( ($generated@@82 $generated@@174 ($generated@@105 0)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 Int) ($generated@@177 Int) ) (!  (=> (= (type $generated@@175) $generated@@79) (=> (and (and (<= 0 $generated@@176) (<= 0 $generated@@177)) (<= (+ $generated@@176 $generated@@177) ($generated@@84 $generated@@175))) (= ($generated@@87 ($generated@@87 $generated@@175 ($generated@@88 $generated@@176)) ($generated@@88 $generated@@177)) ($generated@@87 $generated@@175 ($generated@@88 (+ $generated@@176 $generated@@177))))))
 :pattern ( ($generated@@87 ($generated@@87 $generated@@175 ($generated@@88 $generated@@176)) ($generated@@88 $generated@@177)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@180 $generated@@181)) $generated@@67)
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (and (= (type $generated@@182) $generated@@67) (= (type $generated@@183) $generated@@67)) (= (type $generated@@184) $generated@@81)) ($generated@@82 $generated@@184 ($generated@@179 $generated@@182 $generated@@183))) ($generated@@178 $generated@@184))
 :pattern ( ($generated@@178 $generated@@184) ($generated@@82 $generated@@184 ($generated@@179 $generated@@182 $generated@@183)))
)))
(assert  (and (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@79)
 :pattern ( ($generated@@186 $generated@@188))
)) (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@79)
 :pattern ( ($generated@@187 $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@190) $generated@@81) (= (type $generated@@191) $generated@@81)) true) (= ($generated@@185 $generated@@190 $generated@@191)  (and (= ($generated@@186 $generated@@190) ($generated@@186 $generated@@191)) (= ($generated@@187 $generated@@190) ($generated@@187 $generated@@191)))))
 :pattern ( ($generated@@185 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@67)
 :pattern ( ($generated@@192 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@195) ($generated@@106 $generated@@79 $generated@@2)) (= (type $generated@@196) $generated@@67)) ($generated@@82 $generated@@195 ($generated@@192 $generated@@196))) ($generated@@193 $generated@@195))
 :pattern ( ($generated@@82 $generated@@195 ($generated@@192 $generated@@196)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (= (type $generated@@197) $generated@@67) (= (type $generated@@198) $generated@@81)) ($generated@@82 $generated@@198 ($generated@@83 $generated@@197))) ($generated@@85 $generated@@198))
 :pattern ( ($generated@@85 $generated@@198) ($generated@@82 $generated@@198 ($generated@@83 $generated@@197)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@205 $generated@@206)) 17)) (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@207 $generated@@208)) $generated@@207)
 :pattern ( ($generated@@201 $generated@@207 $generated@@208))
))) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@203 ($generated@@201 $generated@@209 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@201 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@203 (type $generated@@211))))
(= (type ($generated@@199 $generated@@211 $generated@@212 $generated@@213)) $generated@@214))
 :pattern ( ($generated@@199 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(let (($generated@@220 (type $generated@@216)))
(= (type ($generated@@204 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@201 $generated@@220 $generated@@219))))
 :pattern ( ($generated@@204 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@203 (type $generated@@221))))
 (=> (= (type $generated@@224) $generated@@225) (= ($generated@@199 ($generated@@204 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@222 $generated@@223) $generated@@224)))
 :weight 0
))) (and (and (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@199 ($generated@@204 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@199 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@199 ($generated@@204 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@199 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or true (= ($generated@@199 ($generated@@204 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@199 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
)))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ) (! (= (type ($generated@@200 $generated@@244 $generated@@245 $generated@@246 $generated@@247)) ($generated@@201 $generated@@107 $generated@@4))
 :pattern ( ($generated@@200 $generated@@244 $generated@@245 $generated@@246 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@70 (type $generated@@253))))
 (=> (and (and (and (and (= (type $generated@@248) $generated@@107) (= (type $generated@@249) ($generated@@106 $generated@@107 $generated@@108))) (= (type $generated@@250) ($generated@@69 $generated@@4))) (= (type $generated@@252) $generated@@107)) (= (type $generated@@253) ($generated@@69 $generated@@254))) (= ($generated@@0 ($generated@@199 ($generated@@200 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))  (=> (and (not (= $generated@@252 $generated@@248)) ($generated@@0 ($generated@@113 ($generated@@111 $generated@@249 $generated@@252) $generated@@250))) $generated@@251))))
 :pattern ( ($generated@@199 ($generated@@200 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@255) $generated@@67) (= (type $generated@@256) $generated@@67)) (= (type $generated@@257) $generated@@79)) (= (type $generated@@258) $generated@@80)) (= (type $generated@@259) $generated@@81)) (= (type $generated@@260) $generated@@81)) (= $generated@@259 $generated@@260)) ($generated@@77 $generated@@255 $generated@@256 $generated@@257 ($generated@@78 $generated@@258) $generated@@259 $generated@@260))
 :pattern ( ($generated@@77 $generated@@255 $generated@@256 $generated@@257 ($generated@@78 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (! (= (type ($generated@@261 $generated@@263 $generated@@264)) $generated@@81)
 :pattern ( ($generated@@261 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (= (type $generated@@265) $generated@@67) (= (type $generated@@266) $generated@@67)) (= (type $generated@@267) $generated@@79)) (= (type $generated@@268) $generated@@79)) (= ($generated@@82 ($generated@@261 $generated@@267 $generated@@268) ($generated@@179 $generated@@265 $generated@@266))  (and ($generated@@262 $generated@@267 $generated@@265) ($generated@@262 $generated@@268 $generated@@266))))
 :pattern ( ($generated@@82 ($generated@@261 $generated@@267 $generated@@268) ($generated@@179 $generated@@265 $generated@@266)))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@269) $generated@@67) (= (type $generated@@270) $generated@@67)) (= (type $generated@@271) $generated@@80)) (= (type $generated@@272) $generated@@81)) (= (type $generated@@273) $generated@@81)) (= ($generated@@90 $generated@@269 $generated@@270 ($generated@@78 $generated@@271) $generated@@272 $generated@@273) (= $generated@@272 $generated@@273)))
 :pattern ( ($generated@@90 $generated@@269 $generated@@270 ($generated@@78 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@81) (= (type $generated@@275) $generated@@81)) (= ($generated@@185 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@185 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@67)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@106 $generated@@79 $generated@@4)) (= (type $generated@@279) $generated@@67)) (= ($generated@@82 $generated@@278 ($generated@@276 $generated@@279)) (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@79) ($generated@@0 ($generated@@111 $generated@@278 $generated@@280))) ($generated@@262 $generated@@280 $generated@@279))
 :pattern ( ($generated@@111 $generated@@278 $generated@@280))
))))
 :pattern ( ($generated@@82 $generated@@278 ($generated@@276 $generated@@279)))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@67)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@106 $generated@@79 $generated@@4)) (= (type $generated@@284) $generated@@67)) (= ($generated@@82 $generated@@283 ($generated@@281 $generated@@284)) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@79) ($generated@@0 ($generated@@111 $generated@@283 $generated@@285))) ($generated@@262 $generated@@285 $generated@@284))
 :pattern ( ($generated@@111 $generated@@283 $generated@@285))
))))
 :pattern ( ($generated@@82 $generated@@283 ($generated@@281 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 (type $generated@@287)))
(= (type ($generated@@286 $generated@@287)) $generated@@288))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= ($generated@@286 $generated@@289) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@290 $generated@@291 $generated@@292)) $generated@@81)
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (= (type $generated@@293) $generated@@67) (= (type $generated@@294) $generated@@79)) (= (type $generated@@295) $generated@@81)) (= ($generated@@82 ($generated@@290 $generated@@294 $generated@@295) ($generated@@83 $generated@@293))  (and ($generated@@262 $generated@@294 $generated@@293) ($generated@@82 $generated@@295 ($generated@@83 $generated@@293)))))
 :pattern ( ($generated@@82 ($generated@@290 $generated@@294 $generated@@295) ($generated@@83 $generated@@293)))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@298) $generated@@67) (= (type $generated@@299) $generated@@67)) (= (type $generated@@300) $generated@@79)) (= (type $generated@@301) $generated@@79)) (= (type $generated@@302) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@296 $generated@@302)) (= ($generated@@104 ($generated@@261 $generated@@300 $generated@@301) ($generated@@179 $generated@@298 $generated@@299) $generated@@302)  (and ($generated@@297 $generated@@300 $generated@@298 $generated@@302) ($generated@@297 $generated@@301 $generated@@299 $generated@@302))))
 :pattern ( ($generated@@104 ($generated@@261 $generated@@300 $generated@@301) ($generated@@179 $generated@@298 $generated@@299) $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@71)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@81) (= ($generated@@178 $generated@@305) (= ($generated@@303 $generated@@305) $generated@@61)))
 :pattern ( ($generated@@178 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@81) (= ($generated@@85 $generated@@306) (= ($generated@@303 $generated@@306) $generated@@63)))
 :pattern ( ($generated@@85 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@81) ($generated@@178 $generated@@307)) (exists (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (and (and (= (type $generated@@308) $generated@@79) (= (type $generated@@309) $generated@@79)) (= $generated@@307 ($generated@@261 $generated@@308 $generated@@309)))
 :no-pattern (type $generated@@308)
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
)))
 :pattern ( ($generated@@178 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@81) ($generated@@85 $generated@@310)) (exists (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (and (and (= (type $generated@@311) $generated@@79) (= (type $generated@@312) $generated@@81)) (= $generated@@310 ($generated@@290 $generated@@311 $generated@@312)))
 :no-pattern (type $generated@@311)
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
)))
 :pattern ( ($generated@@85 $generated@@310))
)))
(assert  (and (and (forall (($generated@@317 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@317)) 18)) (forall (($generated@@318 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@315 $generated@@318))
))) (forall (($generated@@319 T@T) ) (! (= (type ($generated@@313 $generated@@319)) ($generated@@315 $generated@@319))
 :pattern ( ($generated@@313 $generated@@319))
))))
(assert (forall (($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@320)) 0)
 :pattern ( ($generated@@313 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@321) $generated@@67) (= (type $generated@@322) $generated@@67)) (= (type $generated@@323) $generated@@80)) (= (type $generated@@324) $generated@@81)) (= (type $generated@@325) $generated@@81)) (and ($generated@@82 $generated@@324 ($generated@@83 $generated@@321)) ($generated@@82 $generated@@325 ($generated@@83 $generated@@322)))) (= ($generated@@90 $generated@@321 $generated@@322 ($generated@@78 $generated@@323) $generated@@324 $generated@@325)  (and (and ($generated@@85 $generated@@324) ($generated@@85 $generated@@325)) (=> (and ($generated@@85 $generated@@324) ($generated@@85 $generated@@325)) (and (= ($generated@@86 $generated@@324) ($generated@@86 $generated@@325)) ($generated@@90 $generated@@321 $generated@@322 $generated@@323 ($generated@@89 $generated@@324) ($generated@@89 $generated@@325)))))))
 :pattern ( ($generated@@90 $generated@@321 $generated@@322 ($generated@@78 $generated@@323) $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@79)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@67) (= (type $generated@@330) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@297 ($generated@@326 $generated@@328) $generated@@329 $generated@@330) ($generated@@104 $generated@@328 $generated@@329 $generated@@330)))
 :pattern ( ($generated@@297 ($generated@@326 $generated@@328) $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@333 T@T) ) (! (= (type ($generated@@332 $generated@@333)) ($generated@@106 $generated@@333 $generated@@2))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@109 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@106 $generated@@335 $generated@@2)) (and (= (= ($generated@@331 $generated@@334) 0) (= $generated@@334 ($generated@@332 $generated@@335))) (=> (not (= ($generated@@331 $generated@@334) 0)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) (< 0 ($generated ($generated@@111 $generated@@334 $generated@@336))))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@72)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@67) (and (= ($generated@@75 ($generated@@83 $generated@@339)) $generated@@64) (= ($generated@@337 ($generated@@83 $generated@@339)) $generated@@66)))
 :pattern ( ($generated@@83 $generated@@339))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 19)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@106 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@111 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@111 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 20)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@106 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@111 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@111 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@377) $generated@@79) (= (type $generated@@378) $generated@@79)) (and ($generated@@376 $generated@@378) (<= ($generated@@84 $generated@@378) ($generated@@84 $generated@@377)))) (and (= ($generated@@376 ($generated@@87 $generated@@377 $generated@@378)) ($generated@@376 $generated@@377)) (= ($generated@@84 ($generated@@87 $generated@@377 $generated@@378)) (- ($generated@@84 $generated@@377) ($generated@@84 $generated@@378)))))
 :pattern ( ($generated@@87 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 Int) ) (!  (=> (<= 0 $generated@@379) (and ($generated@@376 ($generated@@88 $generated@@379)) (= ($generated@@84 ($generated@@88 $generated@@379)) $generated@@379)))
 :pattern ( ($generated@@88 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@109 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@106 $generated@@381 $generated@@2)) (= ($generated@@193 $generated@@380) (forall (($generated@@382 T@U) ) (!  (=> (= (type $generated@@382) $generated@@381) (and (<= 0 ($generated ($generated@@111 $generated@@380 $generated@@382))) (<= ($generated ($generated@@111 $generated@@380 $generated@@382)) ($generated@@331 $generated@@380))))
 :pattern ( ($generated@@111 $generated@@380 $generated@@382))
)))))
 :pattern ( ($generated@@193 $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@344 (type $generated@@383))))
(let (($generated@@385 ($generated@@343 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@342 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@341 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) ($generated@@0 ($generated@@111 ($generated@@340 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@340 $generated@@383))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@344 (type $generated@@388))))
(= (type ($generated@@387 $generated@@388)) ($generated@@106 $generated@@389 $generated@@4)))
 :pattern ( ($generated@@387 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@344 (type $generated@@390))))
(let (($generated@@392 ($generated@@343 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@342 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@341 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@391) ($generated@@0 ($generated@@111 ($generated@@387 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@387 $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@362 (type $generated@@394))))
(let (($generated@@396 ($generated@@361 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@360 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@359 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) ($generated@@0 ($generated@@111 ($generated@@358 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@358 $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@362 (type $generated@@399))))
(= (type ($generated@@398 $generated@@399)) ($generated@@106 $generated@@400 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@362 (type $generated@@401))))
(let (($generated@@403 ($generated@@361 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@360 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@359 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@402) ($generated@@0 ($generated@@111 ($generated@@398 $generated@@401) $generated@@404)))
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@398 $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@106 $generated@@79 $generated@@2)) (= (type $generated@@406) $generated@@67)) (= ($generated@@82 $generated@@405 ($generated@@192 $generated@@406)) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@79) (< 0 ($generated ($generated@@111 $generated@@405 $generated@@407)))) ($generated@@262 $generated@@407 $generated@@406))
 :pattern ( ($generated@@111 $generated@@405 $generated@@407))
))))
 :pattern ( ($generated@@82 $generated@@405 ($generated@@192 $generated@@406)))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@79) (= (type $generated@@409) $generated@@79)) (or (or ($generated@@168 $generated@@408 $generated@@409) (= $generated@@408 $generated@@409)) ($generated@@168 $generated@@409 $generated@@408)))
 :pattern ( ($generated@@168 $generated@@408 $generated@@409) ($generated@@168 $generated@@409 $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@410) ($generated@@106 $generated@@79 $generated@@4)) (= (type $generated@@411) $generated@@67)) (= (type $generated@@412) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@410 ($generated@@276 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@79) ($generated@@0 ($generated@@111 $generated@@410 $generated@@413))) ($generated@@297 $generated@@413 $generated@@411 $generated@@412))
 :pattern ( ($generated@@111 $generated@@410 $generated@@413))
))))
 :pattern ( ($generated@@104 $generated@@410 ($generated@@276 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) ($generated@@106 $generated@@79 $generated@@4)) (= (type $generated@@415) $generated@@67)) (= (type $generated@@416) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@414 ($generated@@281 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@79) ($generated@@0 ($generated@@111 $generated@@414 $generated@@417))) ($generated@@297 $generated@@417 $generated@@415 $generated@@416))
 :pattern ( ($generated@@111 $generated@@414 $generated@@417))
))))
 :pattern ( ($generated@@104 $generated@@414 ($generated@@281 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(= ($generated ($generated@@111 ($generated@@332 $generated@@419) $generated@@418)) 0))
 :pattern ( (let (($generated@@419 (type $generated@@418)))
($generated@@111 ($generated@@332 $generated@@419) $generated@@418)))
)))
(assert  (and (and (forall (($generated@@423 T@U) ) (! (= (type ($generated@@420 $generated@@423)) ($generated@@106 $generated@@79 $generated@@4))
 :pattern ( ($generated@@420 $generated@@423))
)) (forall (($generated@@424 T@T) ($generated@@425 T@U) ) (! (= (type ($generated@@421 $generated@@424 $generated@@425)) $generated@@424)
 :pattern ( ($generated@@421 $generated@@424 $generated@@425))
))) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@344 (type $generated@@426))))
(let (($generated@@428 ($generated@@343 (type $generated@@426))))
(= (type ($generated@@422 $generated@@426)) ($generated@@106 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@422 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@342 $generated@@79 $generated@@79)) (= (type $generated@@430) $generated@@79)) (= ($generated@@0 ($generated@@111 ($generated@@420 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@111 ($generated@@340 $generated@@429) ($generated@@186 ($generated@@421 $generated@@81 $generated@@430)))) (= ($generated@@111 ($generated@@422 $generated@@429) ($generated@@186 ($generated@@421 $generated@@81 $generated@@430))) ($generated@@187 ($generated@@421 $generated@@81 $generated@@430))))))
 :pattern ( ($generated@@111 ($generated@@420 $generated@@429) $generated@@430))
)))
(assert  (and (forall (($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@433)) ($generated@@106 $generated@@79 $generated@@4))
 :pattern ( ($generated@@431 $generated@@433))
)) (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@362 (type $generated@@434))))
(let (($generated@@436 ($generated@@361 (type $generated@@434))))
(= (type ($generated@@432 $generated@@434)) ($generated@@106 $generated@@436 $generated@@435))))
 :pattern ( ($generated@@432 $generated@@434))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) ($generated@@360 $generated@@79 $generated@@79)) (= (type $generated@@438) $generated@@79)) (= ($generated@@0 ($generated@@111 ($generated@@431 $generated@@437) $generated@@438))  (and ($generated@@0 ($generated@@111 ($generated@@358 $generated@@437) ($generated@@186 ($generated@@421 $generated@@81 $generated@@438)))) (= ($generated@@111 ($generated@@432 $generated@@437) ($generated@@186 ($generated@@421 $generated@@81 $generated@@438))) ($generated@@187 ($generated@@421 $generated@@81 $generated@@438))))))
 :pattern ( ($generated@@111 ($generated@@431 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(let (($generated@@442 ($generated@@343 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@342 $generated@@442 $generated@@441)) (= ($generated@@0 ($generated@@111 ($generated@@387 $generated@@439) $generated@@440)) (exists (($generated@@443 T@U) ) (!  (and (= (type $generated@@443) $generated@@442) (and ($generated@@0 ($generated@@111 ($generated@@340 $generated@@439) $generated@@443)) (= $generated@@440 ($generated@@111 ($generated@@422 $generated@@439) $generated@@443))))
 :pattern ( ($generated@@111 ($generated@@340 $generated@@439) $generated@@443))
 :pattern ( ($generated@@111 ($generated@@422 $generated@@439) $generated@@443))
))))))
 :pattern ( ($generated@@111 ($generated@@387 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@361 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@360 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@111 ($generated@@398 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@111 ($generated@@358 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@111 ($generated@@432 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@111 ($generated@@358 $generated@@444) $generated@@448))
 :pattern ( ($generated@@111 ($generated@@432 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@111 ($generated@@398 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (= (type $generated@@452) ($generated@@342 $generated@@79 $generated@@79)) (= (type $generated@@453) $generated@@67)) (= (type $generated@@454) $generated@@67)) (= (type $generated@@455) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@79) ($generated@@0 ($generated@@111 ($generated@@340 $generated@@452) $generated@@456))) (and ($generated@@297 ($generated@@111 ($generated@@422 $generated@@452) $generated@@456) $generated@@454 $generated@@455) ($generated@@297 $generated@@456 $generated@@453 $generated@@455)))
 :pattern ( ($generated@@111 ($generated@@422 $generated@@452) $generated@@456))
 :pattern ( ($generated@@111 ($generated@@340 $generated@@452) $generated@@456))
))))
 :pattern ( ($generated@@104 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@457 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (and (= (type $generated@@460) ($generated@@360 $generated@@79 $generated@@79)) (= (type $generated@@461) $generated@@67)) (= (type $generated@@462) $generated@@67)) (= (type $generated@@463) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@79) ($generated@@0 ($generated@@111 ($generated@@358 $generated@@460) $generated@@464))) (and ($generated@@297 ($generated@@111 ($generated@@432 $generated@@460) $generated@@464) $generated@@462 $generated@@463) ($generated@@297 $generated@@464 $generated@@461 $generated@@463)))
 :pattern ( ($generated@@111 ($generated@@432 $generated@@460) $generated@@464))
 :pattern ( ($generated@@111 ($generated@@358 $generated@@460) $generated@@464))
))))
 :pattern ( ($generated@@104 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@466 T@T) ) (! (= (type ($generated@@465 $generated@@466)) ($generated@@106 $generated@@466 $generated@@4))
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@362 (type $generated@@467))))
(let (($generated@@469 ($generated@@361 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@360 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@359 $generated@@469 $generated@@468)) (= ($generated@@358 $generated@@467) ($generated@@465 $generated@@469))))))
 :pattern ( ($generated@@358 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@362 (type $generated@@470))))
(let (($generated@@472 ($generated@@361 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@360 $generated@@472 $generated@@471)) (= (= $generated@@470 ($generated@@359 $generated@@472 $generated@@471)) (= ($generated@@398 $generated@@470) ($generated@@465 $generated@@471))))))
 :pattern ( ($generated@@398 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@362 (type $generated@@473))))
(let (($generated@@475 ($generated@@361 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@360 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@359 $generated@@475 $generated@@474)) (= ($generated@@431 $generated@@473) ($generated@@465 $generated@@79))))))
 :pattern ( ($generated@@431 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@344 (type $generated@@476))))
(let (($generated@@478 ($generated@@343 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@342 $generated@@478 $generated@@477)) (or (= $generated@@476 ($generated@@341 $generated@@478 $generated@@477)) (exists (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (and (and (= (type $generated@@479) $generated@@79) (= (type $generated@@480) $generated@@79)) ($generated@@0 ($generated@@111 ($generated@@420 $generated@@476) ($generated@@326 ($generated@@261 $generated@@479 $generated@@480)))))
 :no-pattern (type $generated@@479)
 :no-pattern (type $generated@@480)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
))))))
 :pattern ( ($generated@@420 $generated@@476))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@362 (type $generated@@481))))
(let (($generated@@483 ($generated@@361 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@360 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@359 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@79) (= (type $generated@@485) $generated@@79)) ($generated@@0 ($generated@@111 ($generated@@431 $generated@@481) ($generated@@326 ($generated@@261 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@431 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@79) ($generated@@262 $generated@@486 $generated@@46)) (and (= ($generated@@326 ($generated@@421 $generated@@2 $generated@@486)) $generated@@486) ($generated@@82 ($generated@@421 $generated@@2 $generated@@486) $generated@@46)))
 :pattern ( ($generated@@262 $generated@@486 $generated@@46))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@79) ($generated@@262 $generated@@487 $generated@@47)) (and (= ($generated@@326 ($generated@@421 $generated@@3 $generated@@487)) $generated@@487) ($generated@@82 ($generated@@421 $generated@@3 $generated@@487) $generated@@47)))
 :pattern ( ($generated@@262 $generated@@487 $generated@@47))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@79) ($generated@@262 $generated@@488 $generated@@44)) (and (= ($generated@@326 ($generated@@421 $generated@@4 $generated@@488)) $generated@@488) ($generated@@82 ($generated@@421 $generated@@4 $generated@@488) $generated@@44)))
 :pattern ( ($generated@@262 $generated@@488 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@489) 21))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@79) ($generated@@262 $generated@@490 $generated@@45)) (and (= ($generated@@326 ($generated@@421 $generated@@489 $generated@@490)) $generated@@490) ($generated@@82 ($generated@@421 $generated@@489 $generated@@490) $generated@@45)))
 :pattern ( ($generated@@262 $generated@@490 $generated@@45))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@262 ($generated@@326 $generated@@491) $generated@@492) ($generated@@82 $generated@@491 $generated@@492)))
 :pattern ( ($generated@@262 ($generated@@326 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@79) (<= 0 ($generated@@84 $generated@@493)))
 :pattern ( ($generated@@84 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@109 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@106 $generated@@495 $generated@@2)) (<= 0 ($generated@@331 $generated@@494))))
 :pattern ( ($generated@@331 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@316 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@315 $generated@@497)) (<= 0 ($generated@@314 $generated@@496))))
 :pattern ( ($generated@@314 $generated@@496))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@67) (= (type $generated@@501) $generated@@67)) (= ($generated@@498 ($generated@@449 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@449 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@67) (= (type $generated@@505) $generated@@67)) (= ($generated@@502 ($generated@@449 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@449 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@67) (= (type $generated@@507) $generated@@67)) (= ($generated@@75 ($generated@@449 $generated@@506 $generated@@507)) $generated@@58))
 :pattern ( ($generated@@449 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@67) (= (type $generated@@511) $generated@@67)) (= ($generated@@508 ($generated@@457 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@457 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= ($generated@@512 ($generated@@457 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@457 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@67) (= (type $generated@@517) $generated@@67)) (= ($generated@@75 ($generated@@457 $generated@@516 $generated@@517)) $generated@@59))
 :pattern ( ($generated@@457 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@79) (= (type $generated@@519) $generated@@79)) (= ($generated@@303 ($generated@@261 $generated@@518 $generated@@519)) $generated@@61))
 :pattern ( ($generated@@261 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) $generated@@67)) (= ($generated@@520 ($generated@@179 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@179 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@67) (= (type $generated@@527) $generated@@67)) (= ($generated@@524 ($generated@@179 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@179 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@79) (= (type $generated@@529) $generated@@79)) (= ($generated@@186 ($generated@@261 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@261 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@79) (= (type $generated@@531) $generated@@79)) (= ($generated@@187 ($generated@@261 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@261 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@79) (= (type $generated@@533) $generated@@81)) (= ($generated@@303 ($generated@@290 $generated@@532 $generated@@533)) $generated@@63))
 :pattern ( ($generated@@290 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@79) (= (type $generated@@535) $generated@@81)) (= ($generated@@86 ($generated@@290 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@290 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@79) (= (type $generated@@537) $generated@@81)) (= ($generated@@89 ($generated@@290 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@290 $generated@@536 $generated@@537))
)))
(assert  (and (forall (($generated@@540 T@U) ) (! (= (type ($generated@@538 $generated@@540)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@540))
)) (forall (($generated@@541 T@U) ($generated@@542 Int) ) (! (let (($generated@@543 ($generated@@316 (type $generated@@541))))
(= (type ($generated@@539 $generated@@541 $generated@@542)) $generated@@543))
 :pattern ( ($generated@@539 $generated@@541 $generated@@542))
))))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@315 $generated@@79)) (= (type $generated@@545) $generated@@67)) (= (type $generated@@546) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@544 ($generated@@538 $generated@@545) $generated@@546) (forall (($generated@@547 Int) ) (!  (=> (and (<= 0 $generated@@547) (< $generated@@547 ($generated@@314 $generated@@544))) ($generated@@297 ($generated@@539 $generated@@544 $generated@@547) $generated@@545 $generated@@546))
 :pattern ( ($generated@@539 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@104 $generated@@544 ($generated@@538 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@549 Int) ) (! (= ($generated@@548 ($generated@@105 $generated@@549)) $generated@@549)
 :pattern ( ($generated@@105 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@67)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@67) (= ($generated@@550 ($generated@@276 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@276 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@67) (= ($generated@@75 ($generated@@276 $generated@@553)) $generated@@54))
 :pattern ( ($generated@@276 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@67)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@67) (= ($generated@@554 ($generated@@281 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@281 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@67) (= ($generated@@75 ($generated@@281 $generated@@557)) $generated@@55))
 :pattern ( ($generated@@281 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@67)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@67) (= ($generated@@558 ($generated@@192 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@192 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@67) (= ($generated@@75 ($generated@@192 $generated@@561)) $generated@@56))
 :pattern ( ($generated@@192 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@67)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@67) (= ($generated@@562 ($generated@@538 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@538 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@67) (= ($generated@@75 ($generated@@538 $generated@@565)) $generated@@57))
 :pattern ( ($generated@@538 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@67)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@67) (= ($generated@@566 ($generated@@83 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@83 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@569)))
(= ($generated@@421 $generated@@570 ($generated@@326 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@326 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@342 $generated@@79 $generated@@79)) (= (type $generated@@572) $generated@@67)) (= (type $generated@@573) $generated@@67)) (= ($generated@@82 $generated@@571 ($generated@@449 $generated@@572 $generated@@573)) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@79) ($generated@@0 ($generated@@111 ($generated@@340 $generated@@571) $generated@@574))) (and ($generated@@262 ($generated@@111 ($generated@@422 $generated@@571) $generated@@574) $generated@@573) ($generated@@262 $generated@@574 $generated@@572)))
 :pattern ( ($generated@@111 ($generated@@422 $generated@@571) $generated@@574))
 :pattern ( ($generated@@111 ($generated@@340 $generated@@571) $generated@@574))
))))
 :pattern ( ($generated@@82 $generated@@571 ($generated@@449 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@360 $generated@@79 $generated@@79)) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) $generated@@67)) (= ($generated@@82 $generated@@575 ($generated@@457 $generated@@576 $generated@@577)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@79) ($generated@@0 ($generated@@111 ($generated@@358 $generated@@575) $generated@@578))) (and ($generated@@262 ($generated@@111 ($generated@@432 $generated@@575) $generated@@578) $generated@@577) ($generated@@262 $generated@@578 $generated@@576)))
 :pattern ( ($generated@@111 ($generated@@432 $generated@@575) $generated@@578))
 :pattern ( ($generated@@111 ($generated@@358 $generated@@575) $generated@@578))
))))
 :pattern ( ($generated@@82 $generated@@575 ($generated@@457 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@79) (= (type $generated@@580) $generated@@79)) (and (and (and (=> ($generated@@168 $generated@@579 $generated@@580) (not (= $generated@@579 $generated@@580))) (=> (and ($generated@@376 $generated@@579) (not ($generated@@376 $generated@@580))) ($generated@@168 $generated@@579 $generated@@580))) (=> (and ($generated@@376 $generated@@579) ($generated@@376 $generated@@580)) (= ($generated@@168 $generated@@579 $generated@@580) (< ($generated@@84 $generated@@579) ($generated@@84 $generated@@580))))) (=> (and ($generated@@168 $generated@@579 $generated@@580) ($generated@@376 $generated@@580)) ($generated@@376 $generated@@579))))
 :pattern ( ($generated@@168 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@79) (= (type $generated@@584) $generated@@79)) (< ($generated@@581 $generated@@583) ($generated@@582 ($generated@@261 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@261 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@79) (= (type $generated@@586) $generated@@79)) (< ($generated@@581 $generated@@586) ($generated@@582 ($generated@@261 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@261 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@79) (= (type $generated@@588) $generated@@67)) (= (type $generated@@589) $generated@@67)) ($generated@@262 $generated@@587 ($generated@@449 $generated@@588 $generated@@589))) (and (= ($generated@@326 ($generated@@421 ($generated@@342 $generated@@79 $generated@@79) $generated@@587)) $generated@@587) ($generated@@82 ($generated@@421 ($generated@@342 $generated@@79 $generated@@79) $generated@@587) ($generated@@449 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@262 $generated@@587 ($generated@@449 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@79) (= (type $generated@@591) $generated@@67)) (= (type $generated@@592) $generated@@67)) ($generated@@262 $generated@@590 ($generated@@457 $generated@@591 $generated@@592))) (and (= ($generated@@326 ($generated@@421 ($generated@@360 $generated@@79 $generated@@79) $generated@@590)) $generated@@590) ($generated@@82 ($generated@@421 ($generated@@360 $generated@@79 $generated@@79) $generated@@590) ($generated@@457 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@262 $generated@@590 ($generated@@457 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@67) (= (type $generated@@594) $generated@@67)) (= (type $generated@@595) $generated@@79)) ($generated@@262 $generated@@595 ($generated@@179 $generated@@593 $generated@@594))) (and (= ($generated@@326 ($generated@@421 $generated@@81 $generated@@595)) $generated@@595) ($generated@@82 ($generated@@421 $generated@@81 $generated@@595) ($generated@@179 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@262 $generated@@595 ($generated@@179 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@596) $generated@@67) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) $generated@@80)) (= (type $generated@@599) $generated@@81)) (= (type $generated@@600) $generated@@81)) (= ($generated@@90 $generated@@596 $generated@@597 ($generated@@78 $generated@@598) $generated@@599 $generated@@600) (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@79) ($generated@@77 $generated@@596 $generated@@597 $generated@@601 ($generated@@78 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@77 $generated@@596 $generated@@597 $generated@@601 ($generated@@78 $generated@@598) $generated@@599 $generated@@600))
))))
 :pattern ( ($generated@@90 $generated@@596 $generated@@597 ($generated@@78 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@81) (= (type $generated@@603) $generated@@67)) (= (type $generated@@604) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@296 $generated@@604) (and ($generated@@85 $generated@@602) ($generated@@104 $generated@@602 ($generated@@83 $generated@@603) $generated@@604)))) ($generated@@297 ($generated@@86 $generated@@602) $generated@@603 $generated@@604))
 :pattern ( ($generated@@297 ($generated@@86 $generated@@602) $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@605)))
 (not ($generated@@0 ($generated@@111 ($generated@@465 $generated@@606) $generated@@605))))
 :pattern ( (let (($generated@@606 (type $generated@@605)))
($generated@@111 ($generated@@465 $generated@@606) $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@67) (= (type $generated@@608) $generated@@67)) (and (= ($generated@@75 ($generated@@179 $generated@@607 $generated@@608)) $generated@@62) (= ($generated@@337 ($generated@@179 $generated@@607 $generated@@608)) $generated@@65)))
 :pattern ( ($generated@@179 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@81) (= ($generated@@581 ($generated@@326 $generated@@609)) ($generated@@582 $generated@@609)))
 :pattern ( ($generated@@581 ($generated@@326 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@79) ($generated@@262 $generated@@610 ($generated@@105 0))) (and (= ($generated@@326 ($generated@@421 $generated@@2 $generated@@610)) $generated@@610) ($generated@@82 ($generated@@421 ($generated@@106 $generated@@79 $generated@@4) $generated@@610) ($generated@@105 0))))
 :pattern ( ($generated@@262 $generated@@610 ($generated@@105 0)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@79) (= (type $generated@@612) $generated@@67)) ($generated@@262 $generated@@611 ($generated@@276 $generated@@612))) (and (= ($generated@@326 ($generated@@421 ($generated@@106 $generated@@79 $generated@@4) $generated@@611)) $generated@@611) ($generated@@82 ($generated@@421 ($generated@@106 $generated@@79 $generated@@4) $generated@@611) ($generated@@276 $generated@@612))))
 :pattern ( ($generated@@262 $generated@@611 ($generated@@276 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@79) (= (type $generated@@614) $generated@@67)) ($generated@@262 $generated@@613 ($generated@@281 $generated@@614))) (and (= ($generated@@326 ($generated@@421 ($generated@@106 $generated@@79 $generated@@4) $generated@@613)) $generated@@613) ($generated@@82 ($generated@@421 ($generated@@106 $generated@@79 $generated@@4) $generated@@613) ($generated@@281 $generated@@614))))
 :pattern ( ($generated@@262 $generated@@613 ($generated@@281 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@79) (= (type $generated@@616) $generated@@67)) ($generated@@262 $generated@@615 ($generated@@192 $generated@@616))) (and (= ($generated@@326 ($generated@@421 ($generated@@106 $generated@@79 $generated@@2) $generated@@615)) $generated@@615) ($generated@@82 ($generated@@421 ($generated@@106 $generated@@79 $generated@@2) $generated@@615) ($generated@@192 $generated@@616))))
 :pattern ( ($generated@@262 $generated@@615 ($generated@@192 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@79) (= (type $generated@@618) $generated@@67)) ($generated@@262 $generated@@617 ($generated@@538 $generated@@618))) (and (= ($generated@@326 ($generated@@421 ($generated@@315 $generated@@79) $generated@@617)) $generated@@617) ($generated@@82 ($generated@@421 ($generated@@315 $generated@@79) $generated@@617) ($generated@@538 $generated@@618))))
 :pattern ( ($generated@@262 $generated@@617 ($generated@@538 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@67) (= (type $generated@@620) $generated@@79)) ($generated@@262 $generated@@620 ($generated@@83 $generated@@619))) (and (= ($generated@@326 ($generated@@421 $generated@@81 $generated@@620)) $generated@@620) ($generated@@82 ($generated@@421 $generated@@81 $generated@@620) ($generated@@83 $generated@@619))))
 :pattern ( ($generated@@262 $generated@@620 ($generated@@83 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@79) ($generated@@376 $generated@@621)) (= $generated@@621 ($generated@@88 ($generated@@84 $generated@@621))))
 :pattern ( ($generated@@84 $generated@@621))
 :pattern ( ($generated@@376 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@81) (= (type $generated@@623) $generated@@67)) (= (type $generated@@624) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@296 $generated@@624) (and ($generated@@85 $generated@@622) ($generated@@104 $generated@@622 ($generated@@83 $generated@@623) $generated@@624)))) ($generated@@104 ($generated@@89 $generated@@622) ($generated@@83 $generated@@623) $generated@@624))
 :pattern ( ($generated@@104 ($generated@@89 $generated@@622) ($generated@@83 $generated@@623) $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@625) ($generated@@106 $generated@@79 $generated@@2)) (= (type $generated@@626) $generated@@67)) (= (type $generated@@627) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@625 ($generated@@192 $generated@@626) $generated@@627) (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@79) (< 0 ($generated ($generated@@111 $generated@@625 $generated@@628)))) ($generated@@297 $generated@@628 $generated@@626 $generated@@627))
 :pattern ( ($generated@@111 $generated@@625 $generated@@628))
))))
 :pattern ( ($generated@@104 $generated@@625 ($generated@@192 $generated@@626) $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@79) (= (type $generated@@630) $generated@@79)) (and ($generated@@376 $generated@@630) (<= ($generated@@84 $generated@@630) ($generated@@84 $generated@@629)))) (or (and (= $generated@@630 ($generated@@88 0)) (= ($generated@@87 $generated@@629 $generated@@630) $generated@@629)) (and (not (= $generated@@630 ($generated@@88 0))) ($generated@@168 ($generated@@87 $generated@@629 $generated@@630) $generated@@629))))
 :pattern ( ($generated@@87 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@631) $generated@@67) (= (type $generated@@632) $generated@@67)) (= (type $generated@@633) $generated@@79)) (= (type $generated@@634) $generated@@80)) (= (type $generated@@635) $generated@@81)) (= (type $generated@@636) $generated@@81)) (= (type $generated@@637) $generated@@79)) (and ($generated@@168 $generated@@633 $generated@@637) ($generated@@77 $generated@@631 $generated@@632 $generated@@637 ($generated@@78 $generated@@634) $generated@@635 $generated@@636))) ($generated@@77 $generated@@631 $generated@@632 $generated@@633 ($generated@@78 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@77 $generated@@631 $generated@@632 $generated@@633 ($generated@@78 $generated@@634) $generated@@635 $generated@@636) ($generated@@77 $generated@@631 $generated@@632 $generated@@637 ($generated@@78 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@638) $generated@@67) (= (type $generated@@639) $generated@@67)) (= (type $generated@@640) $generated@@80)) (= (type $generated@@641) $generated@@81)) (= (type $generated@@642) $generated@@81)) (= ($generated@@90 $generated@@638 $generated@@639 ($generated@@78 $generated@@640) $generated@@641 $generated@@642) ($generated@@90 $generated@@638 $generated@@639 $generated@@640 $generated@@641 $generated@@642)))
 :pattern ( ($generated@@90 $generated@@638 $generated@@639 ($generated@@78 $generated@@640) $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@81) (= (type $generated@@644) $generated@@67)) (= (type $generated@@645) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@296 $generated@@645) (and ($generated@@178 $generated@@643) (exists (($generated@@646 T@U) ) (!  (and (= (type $generated@@646) $generated@@67) ($generated@@104 $generated@@643 ($generated@@179 $generated@@644 $generated@@646) $generated@@645))
 :pattern ( ($generated@@104 $generated@@643 ($generated@@179 $generated@@644 $generated@@646) $generated@@645))
))))) ($generated@@297 ($generated@@186 $generated@@643) $generated@@644 $generated@@645))
 :pattern ( ($generated@@297 ($generated@@186 $generated@@643) $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@81) (= (type $generated@@648) $generated@@67)) (= (type $generated@@649) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@296 $generated@@649) (and ($generated@@178 $generated@@647) (exists (($generated@@650 T@U) ) (!  (and (= (type $generated@@650) $generated@@67) ($generated@@104 $generated@@647 ($generated@@179 $generated@@650 $generated@@648) $generated@@649))
 :pattern ( ($generated@@104 $generated@@647 ($generated@@179 $generated@@650 $generated@@648) $generated@@649))
))))) ($generated@@297 ($generated@@187 $generated@@647) $generated@@648 $generated@@649))
 :pattern ( ($generated@@297 ($generated@@187 $generated@@647) $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@79) (= (type $generated@@652) $generated@@79)) (= ($generated@@261 ($generated@@286 $generated@@651) ($generated@@286 $generated@@652)) ($generated@@286 ($generated@@261 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@261 ($generated@@286 $generated@@651) ($generated@@286 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (! (= ($generated@@326 ($generated@@286 $generated@@653)) ($generated@@286 ($generated@@326 $generated@@653)))
 :pattern ( ($generated@@326 ($generated@@286 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ) (! (let (($generated@@655 ($generated@@316 (type $generated@@654))))
 (=> (and (= (type $generated@@654) ($generated@@315 $generated@@655)) (= ($generated@@314 $generated@@654) 0)) (= $generated@@654 ($generated@@313 $generated@@655))))
 :pattern ( ($generated@@314 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (! (let (($generated@@659 (type $generated@@657)))
 (=> (and (and (= (type $generated@@656) ($generated@@106 $generated@@659 $generated@@2)) (= (type $generated@@658) $generated@@2)) (<= 0 ($generated $generated@@658))) (= ($generated@@331 ($generated@@112 $generated@@656 $generated@@657 $generated@@658)) (+ (- ($generated@@331 $generated@@656) ($generated ($generated@@111 $generated@@656 $generated@@657))) ($generated $generated@@658)))))
 :pattern ( ($generated@@331 ($generated@@112 $generated@@656 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@660) $generated@@67) (= (type $generated@@661) $generated@@67)) (= (type $generated@@662) $generated@@80)) (= (type $generated@@663) $generated@@81)) (= (type $generated@@664) $generated@@81)) (forall (($generated@@665 Int) ) (!  (=> (<= 0 $generated@@665) ($generated@@77 $generated@@660 $generated@@661 ($generated@@88 $generated@@665) ($generated@@78 $generated@@662) $generated@@663 $generated@@664))
 :pattern ( ($generated@@77 $generated@@660 $generated@@661 ($generated@@88 $generated@@665) ($generated@@78 $generated@@662) $generated@@663 $generated@@664))
))) ($generated@@90 $generated@@660 $generated@@661 ($generated@@78 $generated@@662) $generated@@663 $generated@@664))
 :pattern ( ($generated@@90 $generated@@660 $generated@@661 ($generated@@78 $generated@@662) $generated@@663 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@667) $generated@@2)) ($generated@@104 $generated@@667 $generated@@46 $generated@@666))
 :pattern ( ($generated@@104 $generated@@667 $generated@@46 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@669) $generated@@3)) ($generated@@104 $generated@@669 $generated@@47 $generated@@668))
 :pattern ( ($generated@@104 $generated@@669 $generated@@47 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@671) $generated@@4)) ($generated@@104 $generated@@671 $generated@@44 $generated@@670))
 :pattern ( ($generated@@104 $generated@@671 $generated@@44 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@673) $generated@@489)) ($generated@@104 $generated@@673 $generated@@45 $generated@@672))
 :pattern ( ($generated@@104 $generated@@673 $generated@@45 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@675) $generated@@79)) ($generated@@104 $generated@@675 $generated@@48 $generated@@674))
 :pattern ( ($generated@@104 $generated@@675 $generated@@48 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@676) $generated@@67) (= (type $generated@@677) $generated@@79)) (= (type $generated@@678) $generated@@81)) (= (type $generated@@679) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@296 $generated@@679)) (= ($generated@@104 ($generated@@290 $generated@@677 $generated@@678) ($generated@@83 $generated@@676) $generated@@679)  (and ($generated@@297 $generated@@677 $generated@@676 $generated@@679) ($generated@@104 $generated@@678 ($generated@@83 $generated@@676) $generated@@679))))
 :pattern ( ($generated@@104 ($generated@@290 $generated@@677 $generated@@678) ($generated@@83 $generated@@676) $generated@@679))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@315 $generated@@79)) (= (type $generated@@681) $generated@@67)) (= ($generated@@82 $generated@@680 ($generated@@538 $generated@@681)) (forall (($generated@@682 Int) ) (!  (=> (and (<= 0 $generated@@682) (< $generated@@682 ($generated@@314 $generated@@680))) ($generated@@262 ($generated@@539 $generated@@680 $generated@@682) $generated@@681))
 :pattern ( ($generated@@539 $generated@@680 $generated@@682))
))))
 :pattern ( ($generated@@82 $generated@@680 ($generated@@538 $generated@@681)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 Int) ) (!  (=> (= (type $generated@@684) ($generated@@315 $generated@@79)) (=> (and (<= 0 $generated@@685) (< $generated@@685 ($generated@@314 $generated@@684))) (< ($generated@@582 ($generated@@421 $generated@@81 ($generated@@539 $generated@@684 $generated@@685))) ($generated@@683 $generated@@684))))
 :pattern ( ($generated@@582 ($generated@@421 $generated@@81 ($generated@@539 $generated@@684 $generated@@685))))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@342 $generated@@79 $generated@@79)) (= (type $generated@@687) $generated@@67)) (= (type $generated@@688) $generated@@67)) ($generated@@82 $generated@@686 ($generated@@449 $generated@@687 $generated@@688))) (and (and ($generated@@82 ($generated@@340 $generated@@686) ($generated@@276 $generated@@687)) ($generated@@82 ($generated@@387 $generated@@686) ($generated@@276 $generated@@688))) ($generated@@82 ($generated@@420 $generated@@686) ($generated@@276 ($generated@@179 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@82 $generated@@686 ($generated@@449 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) ($generated@@360 $generated@@79 $generated@@79)) (= (type $generated@@690) $generated@@67)) (= (type $generated@@691) $generated@@67)) ($generated@@82 $generated@@689 ($generated@@457 $generated@@690 $generated@@691))) (and (and ($generated@@82 ($generated@@358 $generated@@689) ($generated@@281 $generated@@690)) ($generated@@82 ($generated@@398 $generated@@689) ($generated@@281 $generated@@691))) ($generated@@82 ($generated@@431 $generated@@689) ($generated@@281 ($generated@@179 $generated@@690 $generated@@691)))))
 :pattern ( ($generated@@82 $generated@@689 ($generated@@457 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@2) ($generated@@82 $generated@@692 $generated@@46))
 :pattern ( ($generated@@82 $generated@@692 $generated@@46))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@3) ($generated@@82 $generated@@693 $generated@@47))
 :pattern ( ($generated@@82 $generated@@693 $generated@@47))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@4) ($generated@@82 $generated@@694 $generated@@44))
 :pattern ( ($generated@@82 $generated@@694 $generated@@44))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@489) ($generated@@82 $generated@@695 $generated@@45))
 :pattern ( ($generated@@82 $generated@@695 $generated@@45))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@79) ($generated@@82 $generated@@696 $generated@@48))
 :pattern ( ($generated@@82 $generated@@696 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 (T@U) Bool)
(declare-fun $generated@@706 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@701) $generated@@79) (= (type $generated@@697) $generated@@67)) (= (type $generated@@698) $generated@@80)) (= (type $generated@@699) $generated@@81)) (= (type $generated@@700) $generated@@81)) (= (type $generated@@702) ($generated@@201 $generated@@107 $generated@@4))) (= (type $generated@@703) $generated@@107)) (= (type $generated@@704) ($generated@@106 $generated@@107 $generated@@108))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@707 true))
(let (($generated@@708  (and (=> (= (ControlFlow 0 14) (- 0 15)) (or ($generated@@77 $generated@@697 $generated@@697 ($generated@@286 ($generated@@88 0)) ($generated@@78 ($generated@@78 $generated@@698)) $generated@@699 $generated@@700) (=> (< 0 ($generated@@84 ($generated@@286 ($generated@@88 0)))) (=> ($generated@@85 $generated@@699) (and ($generated@@85 $generated@@700) (and (= ($generated@@86 $generated@@699) ($generated@@86 $generated@@700)) ($generated@@77 $generated@@697 $generated@@697 ($generated@@87 ($generated@@286 ($generated@@88 0)) ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@698)) ($generated@@89 $generated@@699) ($generated@@89 $generated@@700)))))))) (=> (= (ControlFlow 0 14) (- 0 13)) (or ($generated@@77 $generated@@697 $generated@@697 ($generated@@286 ($generated@@88 0)) ($generated@@78 ($generated@@78 $generated@@698)) $generated@@699 $generated@@700) (or (=> (< 0 ($generated@@84 ($generated@@286 ($generated@@88 0)))) (=> ($generated@@85 $generated@@699) (and ($generated@@85 $generated@@700) (and (= ($generated@@86 $generated@@699) ($generated@@86 $generated@@700)) ($generated@@77 $generated@@697 $generated@@697 ($generated@@87 ($generated@@286 ($generated@@88 0)) ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@698)) ($generated@@89 $generated@@699) ($generated@@89 $generated@@700)))))) (=> (and (not (= ($generated@@286 ($generated@@88 0)) ($generated@@88 0))) (= ($generated@@84 ($generated@@286 ($generated@@88 0))) 0)) ($generated@@90 $generated@@697 $generated@@697 ($generated@@78 ($generated@@78 $generated@@698)) $generated@@699 $generated@@700))))))))
(let (($generated@@709  (and (=> (= (ControlFlow 0 9) (- 0 12)) ($generated@@376 ($generated@@286 ($generated@@88 2)))) (=> ($generated@@376 ($generated@@286 ($generated@@88 2))) (and (=> (= (ControlFlow 0 9) (- 0 11)) (<= ($generated@@84 ($generated@@286 ($generated@@88 2))) ($generated@@84 $generated@@701))) (=> (<= ($generated@@84 ($generated@@286 ($generated@@88 2))) ($generated@@84 $generated@@701)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or ($generated@@77 $generated@@697 $generated@@697 ($generated@@87 $generated@@701 ($generated@@88 2)) ($generated@@78 ($generated@@78 $generated@@698)) $generated@@700 $generated@@699) (=> (< 0 ($generated@@84 ($generated@@87 $generated@@701 ($generated@@88 2)))) (=> ($generated@@85 $generated@@700) (and ($generated@@85 $generated@@699) (and (= ($generated@@86 $generated@@700) ($generated@@86 $generated@@699)) ($generated@@77 $generated@@697 $generated@@697 ($generated@@87 ($generated@@87 $generated@@701 ($generated@@88 2)) ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@698)) ($generated@@89 $generated@@700) ($generated@@89 $generated@@699)))))))) (=> (= (ControlFlow 0 9) (- 0 8)) (or ($generated@@77 $generated@@697 $generated@@697 ($generated@@87 $generated@@701 ($generated@@88 2)) ($generated@@78 ($generated@@78 $generated@@698)) $generated@@700 $generated@@699) (or (=> (< 0 ($generated@@84 ($generated@@87 $generated@@701 ($generated@@88 2)))) (=> ($generated@@85 $generated@@700) (and ($generated@@85 $generated@@699) (and (= ($generated@@86 $generated@@700) ($generated@@86 $generated@@699)) ($generated@@77 $generated@@697 $generated@@697 ($generated@@87 ($generated@@87 $generated@@701 ($generated@@88 2)) ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@698)) ($generated@@89 $generated@@700) ($generated@@89 $generated@@699)))))) (=> (and (not (= ($generated@@87 $generated@@701 ($generated@@88 2)) ($generated@@88 0))) (= ($generated@@84 ($generated@@87 $generated@@701 ($generated@@88 2))) 0)) ($generated@@90 $generated@@697 $generated@@697 ($generated@@78 ($generated@@78 $generated@@698)) $generated@@700 $generated@@699))))))))))))
(let (($generated@@710  (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@376 ($generated@@286 ($generated@@88 1)))) (=> ($generated@@376 ($generated@@286 ($generated@@88 1))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (<= ($generated@@84 ($generated@@286 ($generated@@88 1))) ($generated@@84 $generated@@701))) (=> (<= ($generated@@84 ($generated@@286 ($generated@@88 1))) ($generated@@84 $generated@@701)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or ($generated@@77 $generated@@697 $generated@@697 ($generated@@87 $generated@@701 ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@698)) $generated@@699 $generated@@700) (=> (< 0 ($generated@@84 ($generated@@87 $generated@@701 ($generated@@88 1)))) (=> ($generated@@85 $generated@@699) (and ($generated@@85 $generated@@700) (and (= ($generated@@86 $generated@@699) ($generated@@86 $generated@@700)) ($generated@@77 $generated@@697 $generated@@697 ($generated@@87 ($generated@@87 $generated@@701 ($generated@@88 1)) ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@698)) ($generated@@89 $generated@@699) ($generated@@89 $generated@@700)))))))) (=> (= (ControlFlow 0 4) (- 0 3)) (or ($generated@@77 $generated@@697 $generated@@697 ($generated@@87 $generated@@701 ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@698)) $generated@@699 $generated@@700) (or (=> (< 0 ($generated@@84 ($generated@@87 $generated@@701 ($generated@@88 1)))) (=> ($generated@@85 $generated@@699) (and ($generated@@85 $generated@@700) (and (= ($generated@@86 $generated@@699) ($generated@@86 $generated@@700)) ($generated@@77 $generated@@697 $generated@@697 ($generated@@87 ($generated@@87 $generated@@701 ($generated@@88 1)) ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@698)) ($generated@@89 $generated@@699) ($generated@@89 $generated@@700)))))) (=> (and (not (= ($generated@@87 $generated@@701 ($generated@@88 1)) ($generated@@88 0))) (= ($generated@@84 ($generated@@87 $generated@@701 ($generated@@88 1))) 0)) ($generated@@90 $generated@@697 $generated@@697 ($generated@@78 ($generated@@78 $generated@@698)) $generated@@699 $generated@@700))))))))))))
(let (($generated@@711 true))
(let (($generated@@712  (=> (< 0 ($generated@@84 $generated@@701)) (and (and (and (and (=> (= (ControlFlow 0 17) 2) $generated@@711) (=> (= (ControlFlow 0 17) 4) $generated@@710)) (=> (= (ControlFlow 0 17) 9) $generated@@709)) (=> (= (ControlFlow 0 17) 14) $generated@@708)) (=> (= (ControlFlow 0 17) 16) $generated@@707)))))
(let (($generated@@713 true))
(let (($generated@@714  (=> (= $generated@@702 ($generated@@200 $generated@@703 $generated@@704 $generated@@60 false)) (and (=> (= (ControlFlow 0 18) 17) $generated@@712) (=> (= (ControlFlow 0 18) 1) $generated@@713)))))
(let (($generated@@715  (=> (and ($generated@@296 $generated@@704) ($generated@@705 $generated@@704)) (=> (and (and ($generated@@82 $generated@@699 ($generated@@83 $generated@@697)) ($generated@@104 $generated@@699 ($generated@@83 $generated@@697) $generated@@704)) ($generated@@172 $generated@@699)) (=> (and (and (and (and ($generated@@82 $generated@@700 ($generated@@83 $generated@@697)) ($generated@@104 $generated@@700 ($generated@@83 $generated@@697) $generated@@704)) ($generated@@172 $generated@@700)) (= 2 $generated@@706)) (and ($generated@@90 $generated@@697 $generated@@697 ($generated@@78 ($generated@@78 $generated@@698)) $generated@@699 $generated@@700) (= (ControlFlow 0 19) 18))) $generated@@714)))))
$generated@@715))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 9) (- 11))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 (Int) T@U)
(declare-fun $generated@@51 (T@U) Int)
(declare-fun $generated@@58 (T@U T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert (= ($generated@@1 $generated@@45) 6))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and (and (and (= (type $generated@@46) $generated@@45) (= (type $generated@@47) $generated@@45)) (= (type $generated@@48) $generated@@45)) (and ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))) ($generated@@44 $generated@@46 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@46 $generated@@48))
)))
(assert  (and (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= (type ($generated@@49 $generated@@52 $generated@@53)) $generated@@45)
 :pattern ( ($generated@@49 $generated@@52 $generated@@53))
)) (forall (($generated@@54 Int) ) (! (= (type ($generated@@50 $generated@@54)) $generated@@45)
 :pattern ( ($generated@@50 $generated@@54))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 Int) ($generated@@57 Int) ) (!  (=> (= (type $generated@@55) $generated@@45) (=> (and (and (<= 0 $generated@@56) (<= 0 $generated@@57)) (<= (+ $generated@@56 $generated@@57) ($generated@@51 $generated@@55))) (= ($generated@@49 ($generated@@49 $generated@@55 ($generated@@50 $generated@@56)) ($generated@@50 $generated@@57)) ($generated@@49 $generated@@55 ($generated@@50 (+ $generated@@56 $generated@@57))))))
 :pattern ( ($generated@@49 ($generated@@49 $generated@@55 ($generated@@50 $generated@@56)) ($generated@@50 $generated@@57)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (= ($generated@@1 ($generated@@62 $generated@@75 $generated@@76)) 7)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@67 ($generated@@62 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@62 $generated@@77 $generated@@78))
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@68 ($generated@@62 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@62 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (let (($generated@@83 ($generated@@68 (type $generated@@81))))
(= (type ($generated@@66 $generated@@81 $generated@@82)) $generated@@83))
 :pattern ( ($generated@@66 $generated@@81 $generated@@82))
))) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 (type $generated@@86)))
(let (($generated@@88 (type $generated@@85)))
(= (type ($generated@@69 $generated@@84 $generated@@85 $generated@@86)) ($generated@@62 $generated@@88 $generated@@87))))
 :pattern ( ($generated@@69 $generated@@84 $generated@@85 $generated@@86))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 ($generated@@68 (type $generated@@89))))
 (=> (= (type $generated@@91) $generated@@92) (= ($generated@@66 ($generated@@69 $generated@@89 $generated@@90 $generated@@91) $generated@@90) $generated@@91)))
 :weight 0
))) (and (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (or (= $generated@@95 $generated@@96) (= ($generated@@66 ($generated@@69 $generated@@94 $generated@@95 $generated@@93) $generated@@96) ($generated@@66 $generated@@94 $generated@@96)))
 :weight 0
)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or true (= ($generated@@66 ($generated@@69 $generated@@98 $generated@@99 $generated@@97) $generated@@100) ($generated@@66 $generated@@98 $generated@@100)))
 :weight 0
)))) (forall (($generated@@101 T@T) ) (= ($generated@@1 ($generated@@64 $generated@@101)) 8))) (forall (($generated@@102 T@T) ) (! (= ($generated@@60 ($generated@@64 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@64 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@60 (type $generated@@104))))
(= (type ($generated@@65 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@65 $generated@@103 $generated@@104))
))) (= ($generated@@1 $generated@@63) 9)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= (type ($generated@@70 $generated@@106 $generated@@107 $generated@@108)) $generated@@63)
 :pattern ( ($generated@@70 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@60 (type $generated@@110))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@65 ($generated@@70 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@65 ($generated@@70 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@65 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@65 ($generated@@70 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@65 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@61) 10)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@121 $generated@@122)) 11))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@71 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@73 ($generated@@71 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@71 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@73 (type $generated@@127))))
(= (type ($generated@@58 $generated@@127 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@58 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 (type $generated@@134)))
(let (($generated@@136 (type $generated@@132)))
(= (type ($generated@@74 $generated@@131 $generated@@132 $generated@@133 $generated@@134)) ($generated@@71 $generated@@136 $generated@@135))))
 :pattern ( ($generated@@74 $generated@@131 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@137))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@58 ($generated@@74 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@138 $generated@@139) $generated@@140)))
 :weight 0
))) (and (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@58 ($generated@@74 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@58 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@58 ($generated@@74 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@58 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or true (= ($generated@@58 ($generated@@74 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@58 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Bool) ) (! (= (type ($generated@@59 $generated@@160 $generated@@161 $generated@@162 $generated@@163)) ($generated@@71 $generated@@61 $generated@@4))
 :pattern ( ($generated@@59 $generated@@160 $generated@@161 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@60 (type $generated@@169))))
 (=> (and (and (and (and (= (type $generated@@164) $generated@@61) (= (type $generated@@165) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@166) ($generated@@64 $generated@@4))) (= (type $generated@@168) $generated@@61)) (= (type $generated@@169) ($generated@@64 $generated@@170))) (= ($generated@@0 ($generated@@58 ($generated@@59 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (not (= $generated@@168 $generated@@164)) ($generated@@0 ($generated@@65 ($generated@@66 $generated@@165 $generated@@168) $generated@@166))) $generated@@167))))
 :pattern ( ($generated@@58 ($generated@@59 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(= (type ($generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@171 $generated@@174) $generated@@174)
 :pattern ( ($generated@@171 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@45) (= (type $generated@@177) $generated@@45)) (and ($generated@@175 $generated@@177) (<= ($generated@@51 $generated@@177) ($generated@@51 $generated@@176)))) (and (= ($generated@@175 ($generated@@49 $generated@@176 $generated@@177)) ($generated@@175 $generated@@176)) (= ($generated@@51 ($generated@@49 $generated@@176 $generated@@177)) (- ($generated@@51 $generated@@176) ($generated@@51 $generated@@177)))))
 :pattern ( ($generated@@49 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 Int) ) (!  (=> (<= 0 $generated@@178) (and ($generated@@175 ($generated@@50 $generated@@178)) (= ($generated@@51 ($generated@@50 $generated@@178)) $generated@@178)))
 :pattern ( ($generated@@50 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@45) (= (type $generated@@180) $generated@@45)) (or (or ($generated@@44 $generated@@179 $generated@@180) (= $generated@@179 $generated@@180)) ($generated@@44 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@44 $generated@@179 $generated@@180) ($generated@@44 $generated@@180 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@45) (<= 0 ($generated@@51 $generated@@181)))
 :pattern ( ($generated@@51 $generated@@181))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@45)
 :pattern ( ($generated@@182 $generated@@184))
)) (forall (($generated@@185 T@T) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(= ($generated@@183 $generated@@188 ($generated@@182 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@182 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (= (type $generated@@189) $generated@@45) (= (type $generated@@190) $generated@@45)) (and (and (and (=> ($generated@@44 $generated@@189 $generated@@190) (not (= $generated@@189 $generated@@190))) (=> (and ($generated@@175 $generated@@189) (not ($generated@@175 $generated@@190))) ($generated@@44 $generated@@189 $generated@@190))) (=> (and ($generated@@175 $generated@@189) ($generated@@175 $generated@@190)) (= ($generated@@44 $generated@@189 $generated@@190) (< ($generated@@51 $generated@@189) ($generated@@51 $generated@@190))))) (=> (and ($generated@@44 $generated@@189 $generated@@190) ($generated@@175 $generated@@190)) ($generated@@175 $generated@@189))))
 :pattern ( ($generated@@44 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@45) ($generated@@175 $generated@@191)) (= $generated@@191 ($generated@@50 ($generated@@51 $generated@@191))))
 :pattern ( ($generated@@51 $generated@@191))
 :pattern ( ($generated@@175 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) $generated@@45) (= (type $generated@@193) $generated@@45)) (and ($generated@@175 $generated@@193) (<= ($generated@@51 $generated@@193) ($generated@@51 $generated@@192)))) (or (and (= $generated@@193 ($generated@@50 0)) (= ($generated@@49 $generated@@192 $generated@@193) $generated@@192)) (and (not (= $generated@@193 ($generated@@50 0))) ($generated@@44 ($generated@@49 $generated@@192 $generated@@193) $generated@@192))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@182 ($generated@@171 $generated@@194)) ($generated@@171 ($generated@@182 $generated@@194)))
 :pattern ( ($generated@@182 ($generated@@171 $generated@@194)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () Int)
(assert  (and (and (and (and (= (type $generated@@195) $generated@@45) (= (type $generated@@196) ($generated@@71 $generated@@61 $generated@@4))) (= (type $generated@@197) $generated@@61)) (= (type $generated@@198) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@199) ($generated@@64 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@203 true))
(let (($generated@@204  (=> (< 0 ($generated@@51 $generated@@195)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@175 ($generated@@171 ($generated@@50 1)))) (=> ($generated@@175 ($generated@@171 ($generated@@50 1))) (=> (= (ControlFlow 0 2) (- 0 1)) (<= ($generated@@51 ($generated@@171 ($generated@@50 1))) ($generated@@51 $generated@@195))))))))
(let (($generated@@205  (=> (= $generated@@196 ($generated@@59 $generated@@197 $generated@@198 $generated@@199 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@204) (=> (= (ControlFlow 0 5) 4) $generated@@203)))))
(let (($generated@@206  (=> (and (and ($generated@@200 $generated@@198) ($generated@@201 $generated@@198)) (and (= 1 $generated@@202) (= (ControlFlow 0 6) 5))) $generated@@205)))
$generated@@206)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 (Int) T@U)
(declare-fun $generated@@51 (T@U) Int)
(declare-fun $generated@@58 (T@U T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert (= ($generated@@1 $generated@@45) 6))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and (and (and (= (type $generated@@46) $generated@@45) (= (type $generated@@47) $generated@@45)) (= (type $generated@@48) $generated@@45)) (and ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))) ($generated@@44 $generated@@46 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@46 $generated@@48))
)))
(assert  (and (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= (type ($generated@@49 $generated@@52 $generated@@53)) $generated@@45)
 :pattern ( ($generated@@49 $generated@@52 $generated@@53))
)) (forall (($generated@@54 Int) ) (! (= (type ($generated@@50 $generated@@54)) $generated@@45)
 :pattern ( ($generated@@50 $generated@@54))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 Int) ($generated@@57 Int) ) (!  (=> (= (type $generated@@55) $generated@@45) (=> (and (and (<= 0 $generated@@56) (<= 0 $generated@@57)) (<= (+ $generated@@56 $generated@@57) ($generated@@51 $generated@@55))) (= ($generated@@49 ($generated@@49 $generated@@55 ($generated@@50 $generated@@56)) ($generated@@50 $generated@@57)) ($generated@@49 $generated@@55 ($generated@@50 (+ $generated@@56 $generated@@57))))))
 :pattern ( ($generated@@49 ($generated@@49 $generated@@55 ($generated@@50 $generated@@56)) ($generated@@50 $generated@@57)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (= ($generated@@1 ($generated@@62 $generated@@75 $generated@@76)) 7)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@67 ($generated@@62 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@62 $generated@@77 $generated@@78))
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@68 ($generated@@62 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@62 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (let (($generated@@83 ($generated@@68 (type $generated@@81))))
(= (type ($generated@@66 $generated@@81 $generated@@82)) $generated@@83))
 :pattern ( ($generated@@66 $generated@@81 $generated@@82))
))) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 (type $generated@@86)))
(let (($generated@@88 (type $generated@@85)))
(= (type ($generated@@69 $generated@@84 $generated@@85 $generated@@86)) ($generated@@62 $generated@@88 $generated@@87))))
 :pattern ( ($generated@@69 $generated@@84 $generated@@85 $generated@@86))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 ($generated@@68 (type $generated@@89))))
 (=> (= (type $generated@@91) $generated@@92) (= ($generated@@66 ($generated@@69 $generated@@89 $generated@@90 $generated@@91) $generated@@90) $generated@@91)))
 :weight 0
))) (and (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (or (= $generated@@95 $generated@@96) (= ($generated@@66 ($generated@@69 $generated@@94 $generated@@95 $generated@@93) $generated@@96) ($generated@@66 $generated@@94 $generated@@96)))
 :weight 0
)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or true (= ($generated@@66 ($generated@@69 $generated@@98 $generated@@99 $generated@@97) $generated@@100) ($generated@@66 $generated@@98 $generated@@100)))
 :weight 0
)))) (forall (($generated@@101 T@T) ) (= ($generated@@1 ($generated@@64 $generated@@101)) 8))) (forall (($generated@@102 T@T) ) (! (= ($generated@@60 ($generated@@64 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@64 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@60 (type $generated@@104))))
(= (type ($generated@@65 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@65 $generated@@103 $generated@@104))
))) (= ($generated@@1 $generated@@63) 9)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= (type ($generated@@70 $generated@@106 $generated@@107 $generated@@108)) $generated@@63)
 :pattern ( ($generated@@70 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@60 (type $generated@@110))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@65 ($generated@@70 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@65 ($generated@@70 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@65 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@65 ($generated@@70 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@65 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@61) 10)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@121 $generated@@122)) 11))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@71 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@73 ($generated@@71 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@71 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@73 (type $generated@@127))))
(= (type ($generated@@58 $generated@@127 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@58 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 (type $generated@@134)))
(let (($generated@@136 (type $generated@@132)))
(= (type ($generated@@74 $generated@@131 $generated@@132 $generated@@133 $generated@@134)) ($generated@@71 $generated@@136 $generated@@135))))
 :pattern ( ($generated@@74 $generated@@131 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@137))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@58 ($generated@@74 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@138 $generated@@139) $generated@@140)))
 :weight 0
))) (and (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@58 ($generated@@74 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@58 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@58 ($generated@@74 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@58 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or true (= ($generated@@58 ($generated@@74 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@58 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Bool) ) (! (= (type ($generated@@59 $generated@@160 $generated@@161 $generated@@162 $generated@@163)) ($generated@@71 $generated@@61 $generated@@4))
 :pattern ( ($generated@@59 $generated@@160 $generated@@161 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@60 (type $generated@@169))))
 (=> (and (and (and (and (= (type $generated@@164) $generated@@61) (= (type $generated@@165) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@166) ($generated@@64 $generated@@4))) (= (type $generated@@168) $generated@@61)) (= (type $generated@@169) ($generated@@64 $generated@@170))) (= ($generated@@0 ($generated@@58 ($generated@@59 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (not (= $generated@@168 $generated@@164)) ($generated@@0 ($generated@@65 ($generated@@66 $generated@@165 $generated@@168) $generated@@166))) $generated@@167))))
 :pattern ( ($generated@@58 ($generated@@59 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(= (type ($generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@171 $generated@@174) $generated@@174)
 :pattern ( ($generated@@171 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@45) (= (type $generated@@177) $generated@@45)) (and ($generated@@175 $generated@@177) (<= ($generated@@51 $generated@@177) ($generated@@51 $generated@@176)))) (and (= ($generated@@175 ($generated@@49 $generated@@176 $generated@@177)) ($generated@@175 $generated@@176)) (= ($generated@@51 ($generated@@49 $generated@@176 $generated@@177)) (- ($generated@@51 $generated@@176) ($generated@@51 $generated@@177)))))
 :pattern ( ($generated@@49 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 Int) ) (!  (=> (<= 0 $generated@@178) (and ($generated@@175 ($generated@@50 $generated@@178)) (= ($generated@@51 ($generated@@50 $generated@@178)) $generated@@178)))
 :pattern ( ($generated@@50 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@45) (= (type $generated@@180) $generated@@45)) (or (or ($generated@@44 $generated@@179 $generated@@180) (= $generated@@179 $generated@@180)) ($generated@@44 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@44 $generated@@179 $generated@@180) ($generated@@44 $generated@@180 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@45) (<= 0 ($generated@@51 $generated@@181)))
 :pattern ( ($generated@@51 $generated@@181))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@45)
 :pattern ( ($generated@@182 $generated@@184))
)) (forall (($generated@@185 T@T) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(= ($generated@@183 $generated@@188 ($generated@@182 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@182 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (= (type $generated@@189) $generated@@45) (= (type $generated@@190) $generated@@45)) (and (and (and (=> ($generated@@44 $generated@@189 $generated@@190) (not (= $generated@@189 $generated@@190))) (=> (and ($generated@@175 $generated@@189) (not ($generated@@175 $generated@@190))) ($generated@@44 $generated@@189 $generated@@190))) (=> (and ($generated@@175 $generated@@189) ($generated@@175 $generated@@190)) (= ($generated@@44 $generated@@189 $generated@@190) (< ($generated@@51 $generated@@189) ($generated@@51 $generated@@190))))) (=> (and ($generated@@44 $generated@@189 $generated@@190) ($generated@@175 $generated@@190)) ($generated@@175 $generated@@189))))
 :pattern ( ($generated@@44 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@45) ($generated@@175 $generated@@191)) (= $generated@@191 ($generated@@50 ($generated@@51 $generated@@191))))
 :pattern ( ($generated@@51 $generated@@191))
 :pattern ( ($generated@@175 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) $generated@@45) (= (type $generated@@193) $generated@@45)) (and ($generated@@175 $generated@@193) (<= ($generated@@51 $generated@@193) ($generated@@51 $generated@@192)))) (or (and (= $generated@@193 ($generated@@50 0)) (= ($generated@@49 $generated@@192 $generated@@193) $generated@@192)) (and (not (= $generated@@193 ($generated@@50 0))) ($generated@@44 ($generated@@49 $generated@@192 $generated@@193) $generated@@192))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@182 ($generated@@171 $generated@@194)) ($generated@@171 ($generated@@182 $generated@@194)))
 :pattern ( ($generated@@182 ($generated@@171 $generated@@194)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@196) $generated@@45) (= (type $generated@@201) $generated@@45)) (= (type $generated@@202) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@200) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@198) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@203) ($generated@@71 $generated@@61 $generated@@4))) (= (type $generated@@204) $generated@@61)) (= (type $generated@@205) ($generated@@64 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@207  (=> (= (ControlFlow 0 2) (- 0 1)) (< $generated@@195 100))))
(let (($generated@@208  (=> (<= ($generated@@51 $generated@@196) 0) (=> (and (and (and ($generated@@197 $generated@@198) ($generated@@199 $generated@@198)) (= $generated@@200 $generated@@198)) (and (forall (($generated@@209 T@U) ($generated@@210 Int) ) (!  (=> (and (= (type $generated@@209) $generated@@45) ($generated@@44 $generated@@209 $generated@@196)) (< $generated@@210 100))
 :no-pattern (type $generated@@209)
 :no-pattern ($generated $generated@@209)
 :no-pattern ($generated@@0 $generated@@209)
)) (= (ControlFlow 0 6) 2))) $generated@@207))))
(let (($generated@@211  (=> (< 0 ($generated@@51 $generated@@196)) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@175 ($generated@@171 ($generated@@50 1)))) (=> ($generated@@175 ($generated@@171 ($generated@@50 1))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= ($generated@@51 ($generated@@171 ($generated@@50 1))) ($generated@@51 $generated@@196))) (=> (<= ($generated@@51 ($generated@@171 ($generated@@50 1))) ($generated@@51 $generated@@196)) (=> (= $generated@@201 ($generated@@49 $generated@@196 ($generated@@50 1))) (=> (and (and (and ($generated@@197 $generated@@202) ($generated@@199 $generated@@202)) (< $generated@@195 100)) (and (= $generated@@200 $generated@@202) (= (ControlFlow 0 3) 2))) $generated@@207)))))))))
(let (($generated@@212  (=> (= $generated@@203 ($generated@@59 $generated@@204 $generated@@200 $generated@@205 false)) (and (=> (= (ControlFlow 0 7) 3) $generated@@211) (=> (= (ControlFlow 0 7) 6) $generated@@208)))))
(let (($generated@@213  (=> (and (and ($generated@@197 $generated@@200) ($generated@@199 $generated@@200)) (and (= 1 $generated@@206) (= (ControlFlow 0 8) 7))) $generated@@212)))
$generated@@213))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 (Int) T@U)
(declare-fun $generated@@51 (T@U) Int)
(declare-fun $generated@@58 (T@U T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert (= ($generated@@1 $generated@@45) 6))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and (and (and (= (type $generated@@46) $generated@@45) (= (type $generated@@47) $generated@@45)) (= (type $generated@@48) $generated@@45)) (and ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))) ($generated@@44 $generated@@46 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@46 $generated@@48))
)))
(assert  (and (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= (type ($generated@@49 $generated@@52 $generated@@53)) $generated@@45)
 :pattern ( ($generated@@49 $generated@@52 $generated@@53))
)) (forall (($generated@@54 Int) ) (! (= (type ($generated@@50 $generated@@54)) $generated@@45)
 :pattern ( ($generated@@50 $generated@@54))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 Int) ($generated@@57 Int) ) (!  (=> (= (type $generated@@55) $generated@@45) (=> (and (and (<= 0 $generated@@56) (<= 0 $generated@@57)) (<= (+ $generated@@56 $generated@@57) ($generated@@51 $generated@@55))) (= ($generated@@49 ($generated@@49 $generated@@55 ($generated@@50 $generated@@56)) ($generated@@50 $generated@@57)) ($generated@@49 $generated@@55 ($generated@@50 (+ $generated@@56 $generated@@57))))))
 :pattern ( ($generated@@49 ($generated@@49 $generated@@55 ($generated@@50 $generated@@56)) ($generated@@50 $generated@@57)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (= ($generated@@1 ($generated@@62 $generated@@75 $generated@@76)) 7)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@67 ($generated@@62 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@62 $generated@@77 $generated@@78))
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@68 ($generated@@62 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@62 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (let (($generated@@83 ($generated@@68 (type $generated@@81))))
(= (type ($generated@@66 $generated@@81 $generated@@82)) $generated@@83))
 :pattern ( ($generated@@66 $generated@@81 $generated@@82))
))) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 (type $generated@@86)))
(let (($generated@@88 (type $generated@@85)))
(= (type ($generated@@69 $generated@@84 $generated@@85 $generated@@86)) ($generated@@62 $generated@@88 $generated@@87))))
 :pattern ( ($generated@@69 $generated@@84 $generated@@85 $generated@@86))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 ($generated@@68 (type $generated@@89))))
 (=> (= (type $generated@@91) $generated@@92) (= ($generated@@66 ($generated@@69 $generated@@89 $generated@@90 $generated@@91) $generated@@90) $generated@@91)))
 :weight 0
))) (and (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (or (= $generated@@95 $generated@@96) (= ($generated@@66 ($generated@@69 $generated@@94 $generated@@95 $generated@@93) $generated@@96) ($generated@@66 $generated@@94 $generated@@96)))
 :weight 0
)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or true (= ($generated@@66 ($generated@@69 $generated@@98 $generated@@99 $generated@@97) $generated@@100) ($generated@@66 $generated@@98 $generated@@100)))
 :weight 0
)))) (forall (($generated@@101 T@T) ) (= ($generated@@1 ($generated@@64 $generated@@101)) 8))) (forall (($generated@@102 T@T) ) (! (= ($generated@@60 ($generated@@64 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@64 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@60 (type $generated@@104))))
(= (type ($generated@@65 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@65 $generated@@103 $generated@@104))
))) (= ($generated@@1 $generated@@63) 9)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= (type ($generated@@70 $generated@@106 $generated@@107 $generated@@108)) $generated@@63)
 :pattern ( ($generated@@70 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@60 (type $generated@@110))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@65 ($generated@@70 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@65 ($generated@@70 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@65 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@65 ($generated@@70 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@65 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@61) 10)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@121 $generated@@122)) 11))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@71 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@73 ($generated@@71 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@71 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@73 (type $generated@@127))))
(= (type ($generated@@58 $generated@@127 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@58 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 (type $generated@@134)))
(let (($generated@@136 (type $generated@@132)))
(= (type ($generated@@74 $generated@@131 $generated@@132 $generated@@133 $generated@@134)) ($generated@@71 $generated@@136 $generated@@135))))
 :pattern ( ($generated@@74 $generated@@131 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@137))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@58 ($generated@@74 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@138 $generated@@139) $generated@@140)))
 :weight 0
))) (and (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@58 ($generated@@74 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@58 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@58 ($generated@@74 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@58 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or true (= ($generated@@58 ($generated@@74 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@58 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Bool) ) (! (= (type ($generated@@59 $generated@@160 $generated@@161 $generated@@162 $generated@@163)) ($generated@@71 $generated@@61 $generated@@4))
 :pattern ( ($generated@@59 $generated@@160 $generated@@161 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@60 (type $generated@@169))))
 (=> (and (and (and (and (= (type $generated@@164) $generated@@61) (= (type $generated@@165) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@166) ($generated@@64 $generated@@4))) (= (type $generated@@168) $generated@@61)) (= (type $generated@@169) ($generated@@64 $generated@@170))) (= ($generated@@0 ($generated@@58 ($generated@@59 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (not (= $generated@@168 $generated@@164)) ($generated@@0 ($generated@@65 ($generated@@66 $generated@@165 $generated@@168) $generated@@166))) $generated@@167))))
 :pattern ( ($generated@@58 ($generated@@59 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(= (type ($generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@171 $generated@@174) $generated@@174)
 :pattern ( ($generated@@171 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@45) (= (type $generated@@177) $generated@@45)) (and ($generated@@175 $generated@@177) (<= ($generated@@51 $generated@@177) ($generated@@51 $generated@@176)))) (and (= ($generated@@175 ($generated@@49 $generated@@176 $generated@@177)) ($generated@@175 $generated@@176)) (= ($generated@@51 ($generated@@49 $generated@@176 $generated@@177)) (- ($generated@@51 $generated@@176) ($generated@@51 $generated@@177)))))
 :pattern ( ($generated@@49 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 Int) ) (!  (=> (<= 0 $generated@@178) (and ($generated@@175 ($generated@@50 $generated@@178)) (= ($generated@@51 ($generated@@50 $generated@@178)) $generated@@178)))
 :pattern ( ($generated@@50 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@45) (= (type $generated@@180) $generated@@45)) (or (or ($generated@@44 $generated@@179 $generated@@180) (= $generated@@179 $generated@@180)) ($generated@@44 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@44 $generated@@179 $generated@@180) ($generated@@44 $generated@@180 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@45) (<= 0 ($generated@@51 $generated@@181)))
 :pattern ( ($generated@@51 $generated@@181))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@45)
 :pattern ( ($generated@@182 $generated@@184))
)) (forall (($generated@@185 T@T) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(= ($generated@@183 $generated@@188 ($generated@@182 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@182 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (= (type $generated@@189) $generated@@45) (= (type $generated@@190) $generated@@45)) (and (and (and (=> ($generated@@44 $generated@@189 $generated@@190) (not (= $generated@@189 $generated@@190))) (=> (and ($generated@@175 $generated@@189) (not ($generated@@175 $generated@@190))) ($generated@@44 $generated@@189 $generated@@190))) (=> (and ($generated@@175 $generated@@189) ($generated@@175 $generated@@190)) (= ($generated@@44 $generated@@189 $generated@@190) (< ($generated@@51 $generated@@189) ($generated@@51 $generated@@190))))) (=> (and ($generated@@44 $generated@@189 $generated@@190) ($generated@@175 $generated@@190)) ($generated@@175 $generated@@189))))
 :pattern ( ($generated@@44 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@45) ($generated@@175 $generated@@191)) (= $generated@@191 ($generated@@50 ($generated@@51 $generated@@191))))
 :pattern ( ($generated@@51 $generated@@191))
 :pattern ( ($generated@@175 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) $generated@@45) (= (type $generated@@193) $generated@@45)) (and ($generated@@175 $generated@@193) (<= ($generated@@51 $generated@@193) ($generated@@51 $generated@@192)))) (or (and (= $generated@@193 ($generated@@50 0)) (= ($generated@@49 $generated@@192 $generated@@193) $generated@@192)) (and (not (= $generated@@193 ($generated@@50 0))) ($generated@@44 ($generated@@49 $generated@@192 $generated@@193) $generated@@192))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@182 ($generated@@171 $generated@@194)) ($generated@@171 ($generated@@182 $generated@@194)))
 :pattern ( ($generated@@182 ($generated@@171 $generated@@194)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@196) $generated@@45) (= (type $generated@@201) $generated@@45)) (= (type $generated@@202) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@200) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@198) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@203) ($generated@@71 $generated@@61 $generated@@4))) (= (type $generated@@204) $generated@@61)) (= (type $generated@@205) ($generated@@64 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@207  (=> (= (ControlFlow 0 2) (- 0 1)) (< $generated@@195 100))))
(let (($generated@@208  (=> (<= ($generated@@51 $generated@@196) 0) (=> (and (and (and ($generated@@197 $generated@@198) ($generated@@199 $generated@@198)) (= $generated@@200 $generated@@198)) (and (forall (($generated@@209 T@U) ($generated@@210 Int) ) (!  (=> (and (= (type $generated@@209) $generated@@45) ($generated@@44 $generated@@209 $generated@@196)) (< $generated@@210 100))
 :no-pattern (type $generated@@209)
 :no-pattern ($generated $generated@@209)
 :no-pattern ($generated@@0 $generated@@209)
)) (= (ControlFlow 0 6) 2))) $generated@@207))))
(let (($generated@@211  (=> (< 0 ($generated@@51 $generated@@196)) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@175 ($generated@@171 ($generated@@50 1)))) (=> ($generated@@175 ($generated@@171 ($generated@@50 1))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= ($generated@@51 ($generated@@171 ($generated@@50 1))) ($generated@@51 $generated@@196))) (=> (<= ($generated@@51 ($generated@@171 ($generated@@50 1))) ($generated@@51 $generated@@196)) (=> (= $generated@@201 ($generated@@49 $generated@@196 ($generated@@50 1))) (=> (and (and (and ($generated@@197 $generated@@202) ($generated@@199 $generated@@202)) (< $generated@@195 100)) (and (= $generated@@200 $generated@@202) (= (ControlFlow 0 3) 2))) $generated@@207)))))))))
(let (($generated@@212  (=> (= $generated@@203 ($generated@@59 $generated@@204 $generated@@200 $generated@@205 false)) (and (=> (= (ControlFlow 0 7) 3) $generated@@211) (=> (= (ControlFlow 0 7) 6) $generated@@208)))))
(let (($generated@@213  (=> (and (and ($generated@@197 $generated@@200) ($generated@@199 $generated@@200)) (and (= 1 $generated@@206) (= (ControlFlow 0 8) 7))) $generated@@212)))
$generated@@213))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 (Int) T@U)
(declare-fun $generated@@51 (T@U) Int)
(declare-fun $generated@@58 (T@U T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert (= ($generated@@1 $generated@@45) 6))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and (and (and (= (type $generated@@46) $generated@@45) (= (type $generated@@47) $generated@@45)) (= (type $generated@@48) $generated@@45)) (and ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))) ($generated@@44 $generated@@46 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@46 $generated@@48))
)))
(assert  (and (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= (type ($generated@@49 $generated@@52 $generated@@53)) $generated@@45)
 :pattern ( ($generated@@49 $generated@@52 $generated@@53))
)) (forall (($generated@@54 Int) ) (! (= (type ($generated@@50 $generated@@54)) $generated@@45)
 :pattern ( ($generated@@50 $generated@@54))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 Int) ($generated@@57 Int) ) (!  (=> (= (type $generated@@55) $generated@@45) (=> (and (and (<= 0 $generated@@56) (<= 0 $generated@@57)) (<= (+ $generated@@56 $generated@@57) ($generated@@51 $generated@@55))) (= ($generated@@49 ($generated@@49 $generated@@55 ($generated@@50 $generated@@56)) ($generated@@50 $generated@@57)) ($generated@@49 $generated@@55 ($generated@@50 (+ $generated@@56 $generated@@57))))))
 :pattern ( ($generated@@49 ($generated@@49 $generated@@55 ($generated@@50 $generated@@56)) ($generated@@50 $generated@@57)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (= ($generated@@1 ($generated@@62 $generated@@75 $generated@@76)) 7)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@67 ($generated@@62 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@62 $generated@@77 $generated@@78))
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@68 ($generated@@62 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@62 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (let (($generated@@83 ($generated@@68 (type $generated@@81))))
(= (type ($generated@@66 $generated@@81 $generated@@82)) $generated@@83))
 :pattern ( ($generated@@66 $generated@@81 $generated@@82))
))) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 (type $generated@@86)))
(let (($generated@@88 (type $generated@@85)))
(= (type ($generated@@69 $generated@@84 $generated@@85 $generated@@86)) ($generated@@62 $generated@@88 $generated@@87))))
 :pattern ( ($generated@@69 $generated@@84 $generated@@85 $generated@@86))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 ($generated@@68 (type $generated@@89))))
 (=> (= (type $generated@@91) $generated@@92) (= ($generated@@66 ($generated@@69 $generated@@89 $generated@@90 $generated@@91) $generated@@90) $generated@@91)))
 :weight 0
))) (and (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (or (= $generated@@95 $generated@@96) (= ($generated@@66 ($generated@@69 $generated@@94 $generated@@95 $generated@@93) $generated@@96) ($generated@@66 $generated@@94 $generated@@96)))
 :weight 0
)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or true (= ($generated@@66 ($generated@@69 $generated@@98 $generated@@99 $generated@@97) $generated@@100) ($generated@@66 $generated@@98 $generated@@100)))
 :weight 0
)))) (forall (($generated@@101 T@T) ) (= ($generated@@1 ($generated@@64 $generated@@101)) 8))) (forall (($generated@@102 T@T) ) (! (= ($generated@@60 ($generated@@64 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@64 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@60 (type $generated@@104))))
(= (type ($generated@@65 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@65 $generated@@103 $generated@@104))
))) (= ($generated@@1 $generated@@63) 9)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= (type ($generated@@70 $generated@@106 $generated@@107 $generated@@108)) $generated@@63)
 :pattern ( ($generated@@70 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@60 (type $generated@@110))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@65 ($generated@@70 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@65 ($generated@@70 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@65 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@65 ($generated@@70 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@65 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@61) 10)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@121 $generated@@122)) 11))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@71 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@73 ($generated@@71 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@71 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@73 (type $generated@@127))))
(= (type ($generated@@58 $generated@@127 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@58 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 (type $generated@@134)))
(let (($generated@@136 (type $generated@@132)))
(= (type ($generated@@74 $generated@@131 $generated@@132 $generated@@133 $generated@@134)) ($generated@@71 $generated@@136 $generated@@135))))
 :pattern ( ($generated@@74 $generated@@131 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@137))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@58 ($generated@@74 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@138 $generated@@139) $generated@@140)))
 :weight 0
))) (and (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@58 ($generated@@74 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@58 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@58 ($generated@@74 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@58 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or true (= ($generated@@58 ($generated@@74 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@58 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Bool) ) (! (= (type ($generated@@59 $generated@@160 $generated@@161 $generated@@162 $generated@@163)) ($generated@@71 $generated@@61 $generated@@4))
 :pattern ( ($generated@@59 $generated@@160 $generated@@161 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@60 (type $generated@@169))))
 (=> (and (and (and (and (= (type $generated@@164) $generated@@61) (= (type $generated@@165) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@166) ($generated@@64 $generated@@4))) (= (type $generated@@168) $generated@@61)) (= (type $generated@@169) ($generated@@64 $generated@@170))) (= ($generated@@0 ($generated@@58 ($generated@@59 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (not (= $generated@@168 $generated@@164)) ($generated@@0 ($generated@@65 ($generated@@66 $generated@@165 $generated@@168) $generated@@166))) $generated@@167))))
 :pattern ( ($generated@@58 ($generated@@59 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(= (type ($generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@171 $generated@@174) $generated@@174)
 :pattern ( ($generated@@171 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@45) (= (type $generated@@177) $generated@@45)) (and ($generated@@175 $generated@@177) (<= ($generated@@51 $generated@@177) ($generated@@51 $generated@@176)))) (and (= ($generated@@175 ($generated@@49 $generated@@176 $generated@@177)) ($generated@@175 $generated@@176)) (= ($generated@@51 ($generated@@49 $generated@@176 $generated@@177)) (- ($generated@@51 $generated@@176) ($generated@@51 $generated@@177)))))
 :pattern ( ($generated@@49 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 Int) ) (!  (=> (<= 0 $generated@@178) (and ($generated@@175 ($generated@@50 $generated@@178)) (= ($generated@@51 ($generated@@50 $generated@@178)) $generated@@178)))
 :pattern ( ($generated@@50 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@45) (= (type $generated@@180) $generated@@45)) (or (or ($generated@@44 $generated@@179 $generated@@180) (= $generated@@179 $generated@@180)) ($generated@@44 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@44 $generated@@179 $generated@@180) ($generated@@44 $generated@@180 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@45) (<= 0 ($generated@@51 $generated@@181)))
 :pattern ( ($generated@@51 $generated@@181))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@45)
 :pattern ( ($generated@@182 $generated@@184))
)) (forall (($generated@@185 T@T) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(= ($generated@@183 $generated@@188 ($generated@@182 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@182 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (= (type $generated@@189) $generated@@45) (= (type $generated@@190) $generated@@45)) (and (and (and (=> ($generated@@44 $generated@@189 $generated@@190) (not (= $generated@@189 $generated@@190))) (=> (and ($generated@@175 $generated@@189) (not ($generated@@175 $generated@@190))) ($generated@@44 $generated@@189 $generated@@190))) (=> (and ($generated@@175 $generated@@189) ($generated@@175 $generated@@190)) (= ($generated@@44 $generated@@189 $generated@@190) (< ($generated@@51 $generated@@189) ($generated@@51 $generated@@190))))) (=> (and ($generated@@44 $generated@@189 $generated@@190) ($generated@@175 $generated@@190)) ($generated@@175 $generated@@189))))
 :pattern ( ($generated@@44 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@45) ($generated@@175 $generated@@191)) (= $generated@@191 ($generated@@50 ($generated@@51 $generated@@191))))
 :pattern ( ($generated@@51 $generated@@191))
 :pattern ( ($generated@@175 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) $generated@@45) (= (type $generated@@193) $generated@@45)) (and ($generated@@175 $generated@@193) (<= ($generated@@51 $generated@@193) ($generated@@51 $generated@@192)))) (or (and (= $generated@@193 ($generated@@50 0)) (= ($generated@@49 $generated@@192 $generated@@193) $generated@@192)) (and (not (= $generated@@193 ($generated@@50 0))) ($generated@@44 ($generated@@49 $generated@@192 $generated@@193) $generated@@192))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@182 ($generated@@171 $generated@@194)) ($generated@@171 ($generated@@182 $generated@@194)))
 :pattern ( ($generated@@182 ($generated@@171 $generated@@194)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@204 () Int)
(assert  (and (and (and (and (and (= (type $generated@@195) $generated@@45) (= (type $generated@@196) $generated@@45)) (= (type $generated@@198) ($generated@@71 $generated@@61 $generated@@4))) (= (type $generated@@199) $generated@@61)) (= (type $generated@@200) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@201) ($generated@@64 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@205 true))
(let (($generated@@206  (=> (< 0 ($generated@@51 $generated@@195)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@175 ($generated@@171 ($generated@@50 1)))) (=> ($generated@@175 ($generated@@171 ($generated@@50 1))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@51 ($generated@@171 ($generated@@50 1))) ($generated@@51 $generated@@195))) (=> (<= ($generated@@51 ($generated@@171 ($generated@@50 1))) ($generated@@51 $generated@@195)) (=> (= $generated@@196 ($generated@@49 $generated@@195 ($generated@@50 1))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@197) ($generated@@44 $generated@@196 $generated@@195)) (= $generated@@197 $generated@@197))) (=> (or (or (<= 0 $generated@@197) ($generated@@44 $generated@@196 $generated@@195)) (= $generated@@197 $generated@@197)) (=> (= (ControlFlow 0 2) (- 0 1)) (or ($generated@@44 $generated@@196 $generated@@195) (and (= $generated@@196 $generated@@195) (< $generated@@197 $generated@@197))))))))))))))
(let (($generated@@207  (=> (= $generated@@198 ($generated@@59 $generated@@199 $generated@@200 $generated@@201 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@206) (=> (= (ControlFlow 0 7) 6) $generated@@205)))))
(let (($generated@@208  (=> (and (and ($generated@@202 $generated@@200) ($generated@@203 $generated@@200)) (and (= 0 $generated@@204) (= (ControlFlow 0 8) 7))) $generated@@207)))
$generated@@208)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@49 (T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U) T@U)
(declare-fun $generated@@61 (T@U T@U T@U) T@U)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@166 (Int) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U) Int)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert (= ($generated@@1 $generated@@45) 6))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and (and (and (= (type $generated@@46) $generated@@45) (= (type $generated@@47) $generated@@45)) (= (type $generated@@48) $generated@@45)) (and ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))) ($generated@@44 $generated@@46 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@46 $generated@@48))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@1 ($generated@@53 $generated@@66 $generated@@67)) 7)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@58 ($generated@@53 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@53 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@59 ($generated@@53 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@53 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@59 (type $generated@@72))))
(= (type ($generated@@57 $generated@@72 $generated@@73)) $generated@@74))
 :pattern ( ($generated@@57 $generated@@72 $generated@@73))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 (type $generated@@77)))
(let (($generated@@79 (type $generated@@76)))
(= (type ($generated@@60 $generated@@75 $generated@@76 $generated@@77)) ($generated@@53 $generated@@79 $generated@@78))))
 :pattern ( ($generated@@60 $generated@@75 $generated@@76 $generated@@77))
))) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (let (($generated@@83 ($generated@@59 (type $generated@@80))))
 (=> (= (type $generated@@82) $generated@@83) (= ($generated@@57 ($generated@@60 $generated@@80 $generated@@81 $generated@@82) $generated@@81) $generated@@82)))
 :weight 0
))) (and (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (or (= $generated@@86 $generated@@87) (= ($generated@@57 ($generated@@60 $generated@@85 $generated@@86 $generated@@84) $generated@@87) ($generated@@57 $generated@@85 $generated@@87)))
 :weight 0
)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (or true (= ($generated@@57 ($generated@@60 $generated@@89 $generated@@90 $generated@@88) $generated@@91) ($generated@@57 $generated@@89 $generated@@91)))
 :weight 0
)))) (forall (($generated@@92 T@T) ) (= ($generated@@1 ($generated@@55 $generated@@92)) 8))) (forall (($generated@@93 T@T) ) (! (= ($generated@@51 ($generated@@55 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@55 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@51 (type $generated@@95))))
(= (type ($generated@@56 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@56 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@54) 9)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= (type ($generated@@61 $generated@@97 $generated@@98 $generated@@99)) $generated@@54)
 :pattern ( ($generated@@61 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@51 (type $generated@@101))))
 (=> (= (type $generated@@102) $generated@@103) (= ($generated@@56 ($generated@@61 $generated@@100 $generated@@101 $generated@@102) $generated@@101) $generated@@102)))
 :weight 0
))) (and (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@106 $generated@@107) (= ($generated@@56 ($generated@@61 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@56 $generated@@105 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or true (= ($generated@@56 ($generated@@61 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@56 $generated@@109 $generated@@111)))
 :weight 0
)))) (= ($generated@@1 $generated@@52) 10)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@62 $generated@@112 $generated@@113)) 11))) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@63 ($generated@@62 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@62 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@64 ($generated@@62 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@62 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@64 (type $generated@@118))))
(= (type ($generated@@49 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@49 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@65 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@62 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@65 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@64 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@49 ($generated@@65 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@49 ($generated@@65 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@49 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@49 ($generated@@65 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@49 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@49 ($generated@@65 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@49 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@50 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@62 $generated@@52 $generated@@4))
 :pattern ( ($generated@@50 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@51 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@52) (= (type $generated@@156) ($generated@@53 $generated@@52 $generated@@54))) (= (type $generated@@157) ($generated@@55 $generated@@4))) (= (type $generated@@159) $generated@@52)) (= (type $generated@@160) ($generated@@55 $generated@@161))) (= ($generated@@0 ($generated@@49 ($generated@@50 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@56 ($generated@@57 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@49 ($generated@@50 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (let (($generated@@164 (type $generated@@163)))
(= (type ($generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@162 $generated@@165) $generated@@165)
 :pattern ( ($generated@@162 $generated@@165))
)))
(assert (forall (($generated@@169 Int) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@45)
 :pattern ( ($generated@@166 $generated@@169))
)))
(assert (forall (($generated@@170 Int) ) (!  (=> (<= 0 $generated@@170) (and ($generated@@167 ($generated@@166 $generated@@170)) (= ($generated@@168 ($generated@@166 $generated@@170)) $generated@@170)))
 :pattern ( ($generated@@166 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@45) (= (type $generated@@172) $generated@@45)) (or (or ($generated@@44 $generated@@171 $generated@@172) (= $generated@@171 $generated@@172)) ($generated@@44 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@44 $generated@@171 $generated@@172) ($generated@@44 $generated@@172 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@45) (<= 0 ($generated@@168 $generated@@173)))
 :pattern ( ($generated@@168 $generated@@173))
)))
(assert  (and (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@45)
 :pattern ( ($generated@@174 $generated@@176))
)) (forall (($generated@@177 T@T) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(= ($generated@@175 $generated@@180 ($generated@@174 $generated@@179)) $generated@@179))
 :pattern ( ($generated@@174 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (= (type $generated@@181) $generated@@45) (= (type $generated@@182) $generated@@45)) (and (and (and (=> ($generated@@44 $generated@@181 $generated@@182) (not (= $generated@@181 $generated@@182))) (=> (and ($generated@@167 $generated@@181) (not ($generated@@167 $generated@@182))) ($generated@@44 $generated@@181 $generated@@182))) (=> (and ($generated@@167 $generated@@181) ($generated@@167 $generated@@182)) (= ($generated@@44 $generated@@181 $generated@@182) (< ($generated@@168 $generated@@181) ($generated@@168 $generated@@182))))) (=> (and ($generated@@44 $generated@@181 $generated@@182) ($generated@@167 $generated@@182)) ($generated@@167 $generated@@181))))
 :pattern ( ($generated@@44 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@183) $generated@@45) ($generated@@167 $generated@@183)) (= $generated@@183 ($generated@@166 ($generated@@168 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@183))
 :pattern ( ($generated@@167 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (! (= ($generated@@174 ($generated@@162 $generated@@184)) ($generated@@162 ($generated@@174 $generated@@184)))
 :pattern ( ($generated@@174 ($generated@@162 $generated@@184)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 () Int)
(assert  (and (and (and (and (and (= (type $generated@@185) $generated@@45) (= (type $generated@@186) $generated@@45)) (= (type $generated@@188) ($generated@@62 $generated@@52 $generated@@4))) (= (type $generated@@189) $generated@@52)) (= (type $generated@@190) ($generated@@53 $generated@@52 $generated@@54))) (= (type $generated@@191) ($generated@@55 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@195 true))
(let (($generated@@196  (=> (and (< 0 ($generated@@168 $generated@@185)) (= $generated@@186 ($generated@@162 ($generated@@166 10)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@187) ($generated@@44 $generated@@186 $generated@@185)) (= $generated@@187 $generated@@187))) (=> (or (or (<= 0 $generated@@187) ($generated@@44 $generated@@186 $generated@@185)) (= $generated@@187 $generated@@187)) (=> (= (ControlFlow 0 2) (- 0 1)) (or ($generated@@44 $generated@@186 $generated@@185) (and (= $generated@@186 $generated@@185) (< $generated@@187 $generated@@187)))))))))
(let (($generated@@197  (=> (= $generated@@188 ($generated@@50 $generated@@189 $generated@@190 $generated@@191 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@196) (=> (= (ControlFlow 0 5) 4) $generated@@195)))))
(let (($generated@@198  (=> (and (and ($generated@@192 $generated@@190) ($generated@@193 $generated@@190)) (and (= 0 $generated@@194) (= (ControlFlow 0 6) 5))) $generated@@197)))
$generated@@198)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@148 (Int) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@157 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Int)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) Int)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 (Int) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@203 (T@U T@U T@U) T@U)
(declare-fun $generated@@204 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@205 (T@T T@T) T@T)
(declare-fun $generated@@206 (T@T) T@T)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@259 () Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 () Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@265 () Bool)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (Int) Int)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@304 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@305 (T@U T@U T@U) Bool)
(declare-fun $generated@@318 (T@U T@U T@U) Bool)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 () T@U)
(declare-fun $generated@@340 (T@T) T@U)
(declare-fun $generated@@341 (T@U) Int)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@361 (T@U) Int)
(declare-fun $generated@@362 (T@T) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@T) T@U)
(declare-fun $generated@@369 (T@T T@T) T@T)
(declare-fun $generated@@370 (T@T) T@T)
(declare-fun $generated@@371 (T@T) T@T)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@T) T@U)
(declare-fun $generated@@387 (T@T T@T) T@T)
(declare-fun $generated@@388 (T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@403 (T@U) Bool)
(declare-fun $generated@@410 (T@T T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@485 (T@U T@U) T@U)
(declare-fun $generated@@493 (T@U T@U) T@U)
(declare-fun $generated@@504 (T@T) T@U)
(declare-fun $generated@@528 () T@T)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@594 (T@U Int) T@U)
(declare-fun $generated@@603 (T@U) Int)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@633 (T@U) Int)
(declare-fun $generated@@634 (T@U) Int)
(declare-fun $generated@@652 (T@U) T@U)
(declare-fun $generated@@728 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert  (and (= ($generated@@1 $generated@@143) 15) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@142 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@142 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@143) (= (type $generated@@146) $generated@@81)) (= (type $generated@@147) $generated@@81)) (= ($generated@@141 ($generated@@142 $generated@@145) $generated@@146 $generated@@147) (= $generated@@146 $generated@@147)))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@145) $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 Int) ) (! (= (type ($generated@@148 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@2) (= (type $generated@@151) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@150 ($generated@@148 0) $generated@@151))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@148 0) $generated@@151))
)))
(assert (= ($generated@@1 $generated@@153) 16))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@153) (= (type $generated@@155) $generated@@153)) (= (type $generated@@156) $generated@@153)) (and ($generated@@152 $generated@@154 $generated@@155) ($generated@@152 $generated@@155 $generated@@156))) ($generated@@152 $generated@@154 $generated@@156))
 :pattern ( ($generated@@152 $generated@@154 $generated@@155) ($generated@@152 $generated@@155 $generated@@156))
 :pattern ( ($generated@@152 $generated@@154 $generated@@155) ($generated@@152 $generated@@154 $generated@@156))
)))
(assert  (and (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@163 $generated@@166 $generated@@167)) $generated@@153)
 :pattern ( ($generated@@163 $generated@@166 $generated@@167))
)) (forall (($generated@@168 Int) ) (! (= (type ($generated@@164 $generated@@168)) $generated@@153)
 :pattern ( ($generated@@164 $generated@@168))
))) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@81)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@170) $generated@@153) (= (type $generated@@171) $generated@@143)) (= (type $generated@@172) $generated@@81)) (= (type $generated@@173) $generated@@81)) (and ($generated@@158 $generated@@172 $generated@@80) ($generated@@158 $generated@@173 $generated@@80))) (= ($generated@@157 $generated@@170 ($generated@@142 $generated@@171) $generated@@172 $generated@@173)  (and (=> (< 0 ($generated@@159 $generated@@170)) (or (and ($generated@@160 $generated@@172) ($generated@@160 $generated@@173)) (and (and ($generated@@161 $generated@@172) ($generated@@161 $generated@@173)) (=> (and ($generated@@161 $generated@@172) ($generated@@161 $generated@@173)) (and (= ($generated@@162 $generated@@172) ($generated@@162 $generated@@173)) ($generated@@157 ($generated@@163 $generated@@170 ($generated@@164 1)) $generated@@171 ($generated@@165 $generated@@172) ($generated@@165 $generated@@173))))))) (=> (and (not (= $generated@@170 ($generated@@164 0))) (= ($generated@@159 $generated@@170) 0)) ($generated@@141 $generated@@171 $generated@@172 $generated@@173)))))
 :pattern ( ($generated@@157 $generated@@170 ($generated@@142 $generated@@171) $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@2) ($generated@@158 $generated@@174 ($generated@@148 0)))
 :pattern ( ($generated@@158 $generated@@174 ($generated@@148 0)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 Int) ($generated@@177 Int) ) (!  (=> (= (type $generated@@175) $generated@@153) (=> (and (and (<= 0 $generated@@176) (<= 0 $generated@@177)) (<= (+ $generated@@176 $generated@@177) ($generated@@159 $generated@@175))) (= ($generated@@163 ($generated@@163 $generated@@175 ($generated@@164 $generated@@176)) ($generated@@164 $generated@@177)) ($generated@@163 $generated@@175 ($generated@@164 (+ $generated@@176 $generated@@177))))))
 :pattern ( ($generated@@163 ($generated@@163 $generated@@175 ($generated@@164 $generated@@176)) ($generated@@164 $generated@@177)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@180 $generated@@181)) $generated@@68)
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (and (= (type $generated@@182) $generated@@68) (= (type $generated@@183) $generated@@68)) (= (type $generated@@184) $generated@@81)) ($generated@@158 $generated@@184 ($generated@@179 $generated@@182 $generated@@183))) ($generated@@178 $generated@@184))
 :pattern ( ($generated@@178 $generated@@184) ($generated@@158 $generated@@184 ($generated@@179 $generated@@182 $generated@@183)))
)))
(assert  (and (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@153)
 :pattern ( ($generated@@186 $generated@@188))
)) (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@153)
 :pattern ( ($generated@@187 $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@190) $generated@@81) (= (type $generated@@191) $generated@@81)) true) (= ($generated@@185 $generated@@190 $generated@@191)  (and (= ($generated@@186 $generated@@190) ($generated@@186 $generated@@191)) (= ($generated@@187 $generated@@190) ($generated@@187 $generated@@191)))))
 :pattern ( ($generated@@185 $generated@@190 $generated@@191))
)))
(assert  (and (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@72)
 :pattern ( ($generated@@192 $generated@@194))
)) (= (type $generated@@193) $generated@@81)))
(assert (= ($generated@@192 $generated@@193) $generated@@63))
(assert (forall (($generated@@197 T@U) ) (! (= (type ($generated@@195 $generated@@197)) $generated@@68)
 :pattern ( ($generated@@195 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (= (type $generated@@198) ($generated@@82 $generated@@153 $generated@@2)) (= (type $generated@@199) $generated@@68)) ($generated@@158 $generated@@198 ($generated@@195 $generated@@199))) ($generated@@196 $generated@@198))
 :pattern ( ($generated@@158 $generated@@198 ($generated@@195 $generated@@199)))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (and (and (= (type $generated@@200) $generated@@143) (= (type $generated@@201) $generated@@81)) (= (type $generated@@202) $generated@@81)) (and ($generated@@158 $generated@@201 $generated@@80) ($generated@@158 $generated@@202 $generated@@80))) (= ($generated@@141 ($generated@@142 $generated@@200) $generated@@201 $generated@@202)  (or (and ($generated@@160 $generated@@201) ($generated@@160 $generated@@202)) (and (and ($generated@@161 $generated@@201) ($generated@@161 $generated@@202)) (=> (and ($generated@@161 $generated@@201) ($generated@@161 $generated@@202)) (and (= ($generated@@162 $generated@@201) ($generated@@162 $generated@@202)) ($generated@@141 $generated@@200 ($generated@@165 $generated@@201) ($generated@@165 $generated@@202))))))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@200) $generated@@201 $generated@@202))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@1 ($generated@@205 $generated@@209 $generated@@210)) 17)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@205 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@207 ($generated@@205 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@205 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@207 (type $generated@@215))))
(= (type ($generated@@203 $generated@@215 $generated@@216 $generated@@217)) $generated@@218))
 :pattern ( ($generated@@203 $generated@@215 $generated@@216 $generated@@217))
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 (type $generated@@222)))
(let (($generated@@224 (type $generated@@220)))
(= (type ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@205 $generated@@224 $generated@@223))))
 :pattern ( ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@207 (type $generated@@225))))
 (=> (= (type $generated@@228) $generated@@229) (= ($generated@@203 ($generated@@208 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@226 $generated@@227) $generated@@228)))
 :weight 0
))) (and (and (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@203 ($generated@@208 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@203 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or (= $generated@@239 $generated@@241) (= ($generated@@203 ($generated@@208 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@203 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (or true (= ($generated@@203 ($generated@@208 $generated@@243 $generated@@244 $generated@@245 $generated@@242) $generated@@246 $generated@@247) ($generated@@203 $generated@@243 $generated@@246 $generated@@247)))
 :weight 0
)))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ) (! (= (type ($generated@@204 $generated@@248 $generated@@249 $generated@@250 $generated@@251)) ($generated@@205 $generated@@83 $generated@@4))
 :pattern ( ($generated@@204 $generated@@248 $generated@@249 $generated@@250 $generated@@251))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@71 (type $generated@@257))))
 (=> (and (and (and (and (= (type $generated@@252) $generated@@83) (= (type $generated@@253) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@254) ($generated@@70 $generated@@4))) (= (type $generated@@256) $generated@@83)) (= (type $generated@@257) ($generated@@70 $generated@@258))) (= ($generated@@0 ($generated@@203 ($generated@@204 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))  (=> (and (not (= $generated@@256 $generated@@252)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@253 $generated@@256) $generated@@254))) $generated@@255))))
 :pattern ( ($generated@@203 ($generated@@204 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@260 $generated@@262)) $generated@@81)
 :pattern ( ($generated@@260 $generated@@262))
)))
(assert  (=> (<= 1 $generated@@259) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@143) (or $generated@@261 (not (= 1 $generated@@259)))) ($generated@@158 ($generated@@260 $generated@@263) $generated@@80))
 :pattern ( ($generated@@260 $generated@@263))
))))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@264 $generated@@266)) $generated@@81)
 :pattern ( ($generated@@264 $generated@@266))
)))
(assert  (=> (<= 1 $generated@@259) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@143) (or $generated@@265 (not (= 1 $generated@@259)))) ($generated@@158 ($generated@@264 $generated@@267) $generated@@80))
 :pattern ( ($generated@@264 $generated@@267))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@268) $generated@@143) (= (type $generated@@269) $generated@@81)) (= (type $generated@@270) $generated@@81)) (forall (($generated@@271 Int) ) (!  (=> (<= 0 $generated@@271) ($generated@@157 ($generated@@164 $generated@@271) ($generated@@142 $generated@@268) $generated@@269 $generated@@270))
 :pattern ( ($generated@@157 ($generated@@164 $generated@@271) ($generated@@142 $generated@@268) $generated@@269 $generated@@270))
))) ($generated@@141 ($generated@@142 $generated@@268) $generated@@269 $generated@@270))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@268) $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@274 $generated@@275)) $generated@@81)
 :pattern ( ($generated@@272 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (= (type $generated@@276) $generated@@68) (= (type $generated@@277) $generated@@68)) (= (type $generated@@278) $generated@@153)) (= (type $generated@@279) $generated@@153)) (= ($generated@@158 ($generated@@272 $generated@@278 $generated@@279) ($generated@@179 $generated@@276 $generated@@277))  (and ($generated@@273 $generated@@278 $generated@@276) ($generated@@273 $generated@@279 $generated@@277))))
 :pattern ( ($generated@@158 ($generated@@272 $generated@@278 $generated@@279) ($generated@@179 $generated@@276 $generated@@277)))
)))
(assert ($generated@@158 $generated@@193 $generated@@80))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@280)) ($generated@@78 $generated@@193 $generated@@80 $generated@@280))
 :pattern ( ($generated@@78 $generated@@193 $generated@@80 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@81) (= (type $generated@@282) $generated@@81)) (= ($generated@@185 $generated@@281 $generated@@282) (= $generated@@281 $generated@@282)))
 :pattern ( ($generated@@185 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@153) (= (type $generated@@284) $generated@@143)) (= (type $generated@@285) $generated@@81)) (= (type $generated@@286) $generated@@81)) (= (type $generated@@287) $generated@@153)) (and ($generated@@152 $generated@@283 $generated@@287) ($generated@@157 $generated@@287 ($generated@@142 $generated@@284) $generated@@285 $generated@@286))) ($generated@@157 $generated@@283 ($generated@@142 $generated@@284) $generated@@285 $generated@@286))
 :pattern ( ($generated@@157 $generated@@283 ($generated@@142 $generated@@284) $generated@@285 $generated@@286) ($generated@@157 $generated@@287 ($generated@@142 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@68)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) ($generated@@82 $generated@@153 $generated@@4)) (= (type $generated@@291) $generated@@68)) (= ($generated@@158 $generated@@290 ($generated@@288 $generated@@291)) (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@153) ($generated@@0 ($generated@@88 $generated@@290 $generated@@292))) ($generated@@273 $generated@@292 $generated@@291))
 :pattern ( ($generated@@88 $generated@@290 $generated@@292))
))))
 :pattern ( ($generated@@158 $generated@@290 ($generated@@288 $generated@@291)))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@68)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) ($generated@@82 $generated@@153 $generated@@4)) (= (type $generated@@296) $generated@@68)) (= ($generated@@158 $generated@@295 ($generated@@293 $generated@@296)) (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@153) ($generated@@0 ($generated@@88 $generated@@295 $generated@@297))) ($generated@@273 $generated@@297 $generated@@296))
 :pattern ( ($generated@@88 $generated@@295 $generated@@297))
))))
 :pattern ( ($generated@@158 $generated@@295 ($generated@@293 $generated@@296)))
)))
(assert (forall (($generated@@299 Int) ) (! (= ($generated@@298 $generated@@299) $generated@@299)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 (type $generated@@301)))
(= (type ($generated@@300 $generated@@301)) $generated@@302))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ) (! (= ($generated@@300 $generated@@303) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert  (=> (<= 2 $generated@@259) (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@306) $generated@@143) (= (type $generated@@307) $generated@@153)) (= (type $generated@@308) $generated@@81)) (= (type $generated@@309) $generated@@81)) (or ($generated@@305 ($generated@@300 $generated@@307) $generated@@308 $generated@@309) (and (not (= 2 $generated@@259)) (and ($generated@@158 $generated@@308 $generated@@80) ($generated@@158 $generated@@309 $generated@@80))))) (and (and (=> (< 0 ($generated@@159 $generated@@307)) (=> (not ($generated@@160 $generated@@308)) (let (($generated@@310 ($generated@@165 $generated@@308)))
(let (($generated@@311 ($generated@@162 $generated@@308)))
 (=> ($generated@@161 $generated@@309) (=> (<= $generated@@311 ($generated@@162 $generated@@309)) ($generated@@305 ($generated@@163 $generated@@307 ($generated@@164 1)) $generated@@310 ($generated@@165 $generated@@309)))))))) (=> (=> (< 0 ($generated@@159 $generated@@307)) (ite ($generated@@160 $generated@@308) true (let (($generated@@312 ($generated@@165 $generated@@308)))
(let (($generated@@313 ($generated@@162 $generated@@308)))
 (and (and ($generated@@161 $generated@@309) (<= $generated@@313 ($generated@@162 $generated@@309))) ($generated@@304 ($generated@@142 $generated@@306) ($generated@@163 $generated@@307 ($generated@@164 1)) $generated@@312 ($generated@@165 $generated@@309))))))) (=> (= ($generated@@298 0) ($generated@@159 $generated@@307)) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@153) ($generated@@152 $generated@@314 $generated@@307)) ($generated@@305 $generated@@314 $generated@@308 $generated@@309))
 :pattern ( ($generated@@304 ($generated@@142 $generated@@306) $generated@@314 $generated@@308 $generated@@309))
))))) (= ($generated@@304 ($generated@@142 $generated@@306) ($generated@@300 $generated@@307) $generated@@308 $generated@@309)  (and (=> (< 0 ($generated@@159 $generated@@307)) (ite ($generated@@160 $generated@@308) true (let (($generated@@315 ($generated@@165 $generated@@308)))
(let (($generated@@316 ($generated@@162 $generated@@308)))
 (and (and ($generated@@161 $generated@@309) (<= $generated@@316 ($generated@@162 $generated@@309))) ($generated@@304 ($generated@@142 $generated@@306) ($generated@@163 $generated@@307 ($generated@@164 1)) $generated@@315 ($generated@@165 $generated@@309))))))) (=> (= ($generated@@298 0) ($generated@@159 $generated@@307)) (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@153) ($generated@@152 $generated@@317 $generated@@307)) ($generated@@304 ($generated@@142 $generated@@306) $generated@@317 $generated@@308 $generated@@309))
 :pattern ( ($generated@@304 ($generated@@142 $generated@@306) $generated@@317 $generated@@308 $generated@@309))
)))))))
 :weight 3
 :pattern ( ($generated@@304 ($generated@@142 $generated@@306) ($generated@@300 $generated@@307) $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@319) $generated@@68) (= (type $generated@@320) $generated@@68)) (= (type $generated@@321) $generated@@153)) (= (type $generated@@322) $generated@@153)) (= (type $generated@@323) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@323)) (= ($generated@@78 ($generated@@272 $generated@@321 $generated@@322) ($generated@@179 $generated@@319 $generated@@320) $generated@@323)  (and ($generated@@318 $generated@@321 $generated@@319 $generated@@323) ($generated@@318 $generated@@322 $generated@@320 $generated@@323))))
 :pattern ( ($generated@@78 ($generated@@272 $generated@@321 $generated@@322) ($generated@@179 $generated@@319 $generated@@320) $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@81) (= ($generated@@178 $generated@@324) (= ($generated@@192 $generated@@324) $generated@@61)))
 :pattern ( ($generated@@178 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@81) (= ($generated@@160 $generated@@325) (= ($generated@@192 $generated@@325) $generated@@63)))
 :pattern ( ($generated@@160 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@81) (= ($generated@@161 $generated@@326) (= ($generated@@192 $generated@@326) $generated@@65)))
 :pattern ( ($generated@@161 $generated@@326))
)))
(assert  (and (forall (($generated@@329 T@U) ) (! (= (type ($generated@@327 $generated@@329)) $generated@@143)
 :pattern ( ($generated@@327 $generated@@329))
)) (= (type $generated@@328) $generated@@143)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (and (= (type $generated@@330) $generated@@143) (= (type $generated@@331) $generated@@153)) (= (type $generated@@332) $generated@@81)) (= (type $generated@@333) $generated@@81)) (= ($generated@@304 $generated@@330 $generated@@331 $generated@@332 $generated@@333) ($generated@@304 $generated@@328 $generated@@331 $generated@@332 $generated@@333)))
 :pattern ( ($generated@@304 ($generated@@327 $generated@@330) $generated@@331 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@81) ($generated@@178 $generated@@334)) (exists (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (and (and (= (type $generated@@335) $generated@@153) (= (type $generated@@336) $generated@@153)) (= $generated@@334 ($generated@@272 $generated@@335 $generated@@336)))
 :no-pattern (type $generated@@335)
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
)))
 :pattern ( ($generated@@178 $generated@@334))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@81) ($generated@@161 $generated@@337)) (exists (($generated@@338 Int) ($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@81) (= $generated@@337 ($generated@@79 $generated@@338 $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
)))
 :pattern ( ($generated@@161 $generated@@337))
)))
(assert  (and (and (forall (($generated@@344 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@344)) 18)) (forall (($generated@@345 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@342 $generated@@345))
))) (forall (($generated@@346 T@T) ) (! (= (type ($generated@@340 $generated@@346)) ($generated@@342 $generated@@346))
 :pattern ( ($generated@@340 $generated@@346))
))))
(assert (forall (($generated@@347 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@347)) 0)
 :pattern ( ($generated@@340 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@81) ($generated@@160 $generated@@348)) (= $generated@@348 $generated@@193))
 :pattern ( ($generated@@160 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@349) $generated@@153) (= (type $generated@@350) $generated@@143)) (= (type $generated@@351) $generated@@81)) (= (type $generated@@352) $generated@@81)) (not (= $generated@@349 ($generated@@164 0)))) (= ($generated@@157 $generated@@349 ($generated@@142 $generated@@350) $generated@@351 $generated@@352) ($generated@@157 $generated@@349 $generated@@350 $generated@@351 $generated@@352)))
 :pattern ( ($generated@@157 $generated@@349 ($generated@@142 $generated@@350) $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) $generated@@143) (= (type $generated@@354) $generated@@81)) (= (type $generated@@355) $generated@@81)) (= ($generated@@141 ($generated@@142 $generated@@353) $generated@@354 $generated@@355) ($generated@@141 $generated@@353 $generated@@354 $generated@@355)))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@353) $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (= (type ($generated@@356 $generated@@357)) $generated@@153)
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@68) (= (type $generated@@360) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@318 ($generated@@356 $generated@@358) $generated@@359 $generated@@360) ($generated@@78 $generated@@358 $generated@@359 $generated@@360)))
 :pattern ( ($generated@@318 ($generated@@356 $generated@@358) $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@363 T@T) ) (! (= (type ($generated@@362 $generated@@363)) ($generated@@82 $generated@@363 $generated@@2))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@86 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@82 $generated@@365 $generated@@2)) (and (= (= ($generated@@361 $generated@@364) 0) (= $generated@@364 ($generated@@362 $generated@@365))) (=> (not (= ($generated@@361 $generated@@364) 0)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (< 0 ($generated ($generated@@88 $generated@@364 $generated@@366))))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert  (and (and (and (and (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (= ($generated@@1 ($generated@@369 $generated@@372 $generated@@373)) 19)) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@370 ($generated@@369 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@369 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= ($generated@@371 ($generated@@369 $generated@@376 $generated@@377)) $generated@@377)
 :pattern ( ($generated@@369 $generated@@376 $generated@@377))
))) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@370 (type $generated@@378))))
(= (type ($generated@@367 $generated@@378)) ($generated@@82 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@378))
))) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= (type ($generated@@368 $generated@@380 $generated@@381)) ($generated@@369 $generated@@380 $generated@@381))
 :pattern ( ($generated@@368 $generated@@380 $generated@@381))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@T) ) (! (let (($generated@@384 (type $generated@@382)))
 (not ($generated@@0 ($generated@@88 ($generated@@367 ($generated@@368 $generated@@384 $generated@@383)) $generated@@382))))
 :pattern ( (let (($generated@@384 (type $generated@@382)))
($generated@@88 ($generated@@367 ($generated@@368 $generated@@384 $generated@@383)) $generated@@382)))
)))
(assert  (and (and (and (and (forall (($generated@@390 T@T) ($generated@@391 T@T) ) (= ($generated@@1 ($generated@@387 $generated@@390 $generated@@391)) 20)) (forall (($generated@@392 T@T) ($generated@@393 T@T) ) (! (= ($generated@@388 ($generated@@387 $generated@@392 $generated@@393)) $generated@@392)
 :pattern ( ($generated@@387 $generated@@392 $generated@@393))
))) (forall (($generated@@394 T@T) ($generated@@395 T@T) ) (! (= ($generated@@389 ($generated@@387 $generated@@394 $generated@@395)) $generated@@395)
 :pattern ( ($generated@@387 $generated@@394 $generated@@395))
))) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@388 (type $generated@@396))))
(= (type ($generated@@385 $generated@@396)) ($generated@@82 $generated@@397 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@396))
))) (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (! (= (type ($generated@@386 $generated@@398 $generated@@399)) ($generated@@387 $generated@@398 $generated@@399))
 :pattern ( ($generated@@386 $generated@@398 $generated@@399))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@T) ) (! (let (($generated@@402 (type $generated@@400)))
 (not ($generated@@0 ($generated@@88 ($generated@@385 ($generated@@386 $generated@@402 $generated@@401)) $generated@@400))))
 :pattern ( (let (($generated@@402 (type $generated@@400)))
($generated@@88 ($generated@@385 ($generated@@386 $generated@@402 $generated@@401)) $generated@@400)))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (= (type $generated@@404) $generated@@153) (= (type $generated@@405) $generated@@153)) (and ($generated@@403 $generated@@405) (<= ($generated@@159 $generated@@405) ($generated@@159 $generated@@404)))) (and (= ($generated@@403 ($generated@@163 $generated@@404 $generated@@405)) ($generated@@403 $generated@@404)) (= ($generated@@159 ($generated@@163 $generated@@404 $generated@@405)) (- ($generated@@159 $generated@@404) ($generated@@159 $generated@@405)))))
 :pattern ( ($generated@@163 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 Int) ) (!  (=> (<= 0 $generated@@406) (and ($generated@@403 ($generated@@164 $generated@@406)) (= ($generated@@159 ($generated@@164 $generated@@406)) $generated@@406)))
 :pattern ( ($generated@@164 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@86 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@82 $generated@@408 $generated@@2)) (= ($generated@@196 $generated@@407) (forall (($generated@@409 T@U) ) (!  (=> (= (type $generated@@409) $generated@@408) (and (<= 0 ($generated ($generated@@88 $generated@@407 $generated@@409))) (<= ($generated ($generated@@88 $generated@@407 $generated@@409)) ($generated@@361 $generated@@407))))
 :pattern ( ($generated@@88 $generated@@407 $generated@@409))
)))))
 :pattern ( ($generated@@196 $generated@@407))
)))
(assert (forall (($generated@@411 T@T) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@411)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@153) ($generated@@273 $generated@@413 $generated@@80)) (and (= ($generated@@356 ($generated@@410 $generated@@81 $generated@@413)) $generated@@413) ($generated@@158 ($generated@@410 $generated@@81 $generated@@413) $generated@@80)))
 :pattern ( ($generated@@273 $generated@@413 $generated@@80))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) $generated@@143) (= (type $generated@@415) $generated@@81)) (= (type $generated@@416) $generated@@81)) (= ($generated@@141 ($generated@@142 $generated@@414) $generated@@415 $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@153) ($generated@@157 $generated@@417 ($generated@@142 $generated@@414) $generated@@415 $generated@@416))
 :pattern ( ($generated@@157 $generated@@417 ($generated@@142 $generated@@414) $generated@@415 $generated@@416))
))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@414) $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@371 (type $generated@@418))))
(let (($generated@@420 ($generated@@370 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@369 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@368 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) ($generated@@0 ($generated@@88 ($generated@@367 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@367 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@371 (type $generated@@423))))
(= (type ($generated@@422 $generated@@423)) ($generated@@82 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@371 (type $generated@@425))))
(let (($generated@@427 ($generated@@370 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@369 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@368 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@426) ($generated@@0 ($generated@@88 ($generated@@422 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@422 $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@389 (type $generated@@429))))
(let (($generated@@431 ($generated@@388 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@387 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@386 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) ($generated@@0 ($generated@@88 ($generated@@385 $generated@@429) $generated@@432)))
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@385 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@389 (type $generated@@434))))
(= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@435 $generated@@4)))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@389 (type $generated@@436))))
(let (($generated@@438 ($generated@@388 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@387 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@386 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@437) ($generated@@0 ($generated@@88 ($generated@@433 $generated@@436) $generated@@439)))
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@433 $generated@@436))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@82 $generated@@153 $generated@@2)) (= (type $generated@@441) $generated@@68)) (= ($generated@@158 $generated@@440 ($generated@@195 $generated@@441)) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@153) (< 0 ($generated ($generated@@88 $generated@@440 $generated@@442)))) ($generated@@273 $generated@@442 $generated@@441))
 :pattern ( ($generated@@88 $generated@@440 $generated@@442))
))))
 :pattern ( ($generated@@158 $generated@@440 ($generated@@195 $generated@@441)))
)))
(assert  (=> (<= 2 $generated@@259) (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@443) $generated@@143) (= (type $generated@@444) $generated@@153)) (= (type $generated@@445) $generated@@81)) (= (type $generated@@446) $generated@@81)) (or ($generated@@305 $generated@@444 $generated@@445 $generated@@446) (and (not (= 2 $generated@@259)) (and ($generated@@158 $generated@@445 $generated@@80) ($generated@@158 $generated@@446 $generated@@80))))) true)
 :pattern ( ($generated@@304 $generated@@443 $generated@@444 $generated@@445 $generated@@446))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@153) (= (type $generated@@448) $generated@@153)) (or (or ($generated@@152 $generated@@447 $generated@@448) (= $generated@@447 $generated@@448)) ($generated@@152 $generated@@448 $generated@@447)))
 :pattern ( ($generated@@152 $generated@@447 $generated@@448) ($generated@@152 $generated@@448 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (= (type $generated@@449) ($generated@@82 $generated@@153 $generated@@4)) (= (type $generated@@450) $generated@@68)) (= (type $generated@@451) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@449 ($generated@@288 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@153) ($generated@@0 ($generated@@88 $generated@@449 $generated@@452))) ($generated@@318 $generated@@452 $generated@@450 $generated@@451))
 :pattern ( ($generated@@88 $generated@@449 $generated@@452))
))))
 :pattern ( ($generated@@78 $generated@@449 ($generated@@288 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (= (type $generated@@453) ($generated@@82 $generated@@153 $generated@@4)) (= (type $generated@@454) $generated@@68)) (= (type $generated@@455) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@453 ($generated@@293 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@153) ($generated@@0 ($generated@@88 $generated@@453 $generated@@456))) ($generated@@318 $generated@@456 $generated@@454 $generated@@455))
 :pattern ( ($generated@@88 $generated@@453 $generated@@456))
))))
 :pattern ( ($generated@@78 $generated@@453 ($generated@@293 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
(= ($generated ($generated@@88 ($generated@@362 $generated@@458) $generated@@457)) 0))
 :pattern ( (let (($generated@@458 (type $generated@@457)))
($generated@@88 ($generated@@362 $generated@@458) $generated@@457)))
)))
(assert  (and (forall (($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@461)) ($generated@@82 $generated@@153 $generated@@4))
 :pattern ( ($generated@@459 $generated@@461))
)) (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@371 (type $generated@@462))))
(let (($generated@@464 ($generated@@370 (type $generated@@462))))
(= (type ($generated@@460 $generated@@462)) ($generated@@82 $generated@@464 $generated@@463))))
 :pattern ( ($generated@@460 $generated@@462))
))))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) ($generated@@369 $generated@@153 $generated@@153)) (= (type $generated@@466) $generated@@153)) (= ($generated@@0 ($generated@@88 ($generated@@459 $generated@@465) $generated@@466))  (and ($generated@@0 ($generated@@88 ($generated@@367 $generated@@465) ($generated@@186 ($generated@@410 $generated@@81 $generated@@466)))) (= ($generated@@88 ($generated@@460 $generated@@465) ($generated@@186 ($generated@@410 $generated@@81 $generated@@466))) ($generated@@187 ($generated@@410 $generated@@81 $generated@@466))))))
 :pattern ( ($generated@@88 ($generated@@459 $generated@@465) $generated@@466))
)))
(assert  (and (forall (($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@469)) ($generated@@82 $generated@@153 $generated@@4))
 :pattern ( ($generated@@467 $generated@@469))
)) (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@389 (type $generated@@470))))
(let (($generated@@472 ($generated@@388 (type $generated@@470))))
(= (type ($generated@@468 $generated@@470)) ($generated@@82 $generated@@472 $generated@@471))))
 :pattern ( ($generated@@468 $generated@@470))
))))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) ($generated@@387 $generated@@153 $generated@@153)) (= (type $generated@@474) $generated@@153)) (= ($generated@@0 ($generated@@88 ($generated@@467 $generated@@473) $generated@@474))  (and ($generated@@0 ($generated@@88 ($generated@@385 $generated@@473) ($generated@@186 ($generated@@410 $generated@@81 $generated@@474)))) (= ($generated@@88 ($generated@@468 $generated@@473) ($generated@@186 ($generated@@410 $generated@@81 $generated@@474))) ($generated@@187 ($generated@@410 $generated@@81 $generated@@474))))))
 :pattern ( ($generated@@88 ($generated@@467 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@476)))
(let (($generated@@478 ($generated@@370 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@369 $generated@@478 $generated@@477)) (= ($generated@@0 ($generated@@88 ($generated@@422 $generated@@475) $generated@@476)) (exists (($generated@@479 T@U) ) (!  (and (= (type $generated@@479) $generated@@478) (and ($generated@@0 ($generated@@88 ($generated@@367 $generated@@475) $generated@@479)) (= $generated@@476 ($generated@@88 ($generated@@460 $generated@@475) $generated@@479))))
 :pattern ( ($generated@@88 ($generated@@367 $generated@@475) $generated@@479))
 :pattern ( ($generated@@88 ($generated@@460 $generated@@475) $generated@@479))
))))))
 :pattern ( ($generated@@88 ($generated@@422 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (let (($generated@@482 (type $generated@@481)))
(let (($generated@@483 ($generated@@388 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@387 $generated@@483 $generated@@482)) (= ($generated@@0 ($generated@@88 ($generated@@433 $generated@@480) $generated@@481)) (exists (($generated@@484 T@U) ) (!  (and (= (type $generated@@484) $generated@@483) (and ($generated@@0 ($generated@@88 ($generated@@385 $generated@@480) $generated@@484)) (= $generated@@481 ($generated@@88 ($generated@@468 $generated@@480) $generated@@484))))
 :pattern ( ($generated@@88 ($generated@@385 $generated@@480) $generated@@484))
 :pattern ( ($generated@@88 ($generated@@468 $generated@@480) $generated@@484))
))))))
 :pattern ( ($generated@@88 ($generated@@433 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (and (= (type $generated@@488) ($generated@@369 $generated@@153 $generated@@153)) (= (type $generated@@489) $generated@@68)) (= (type $generated@@490) $generated@@68)) (= (type $generated@@491) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491) (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@153) ($generated@@0 ($generated@@88 ($generated@@367 $generated@@488) $generated@@492))) (and ($generated@@318 ($generated@@88 ($generated@@460 $generated@@488) $generated@@492) $generated@@490 $generated@@491) ($generated@@318 $generated@@492 $generated@@489 $generated@@491)))
 :pattern ( ($generated@@88 ($generated@@460 $generated@@488) $generated@@492))
 :pattern ( ($generated@@88 ($generated@@367 $generated@@488) $generated@@492))
))))
 :pattern ( ($generated@@78 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (and (= (type $generated@@496) ($generated@@387 $generated@@153 $generated@@153)) (= (type $generated@@497) $generated@@68)) (= (type $generated@@498) $generated@@68)) (= (type $generated@@499) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@496 ($generated@@493 $generated@@497 $generated@@498) $generated@@499) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@153) ($generated@@0 ($generated@@88 ($generated@@385 $generated@@496) $generated@@500))) (and ($generated@@318 ($generated@@88 ($generated@@468 $generated@@496) $generated@@500) $generated@@498 $generated@@499) ($generated@@318 $generated@@500 $generated@@497 $generated@@499)))
 :pattern ( ($generated@@88 ($generated@@468 $generated@@496) $generated@@500))
 :pattern ( ($generated@@88 ($generated@@385 $generated@@496) $generated@@500))
))))
 :pattern ( ($generated@@78 $generated@@496 ($generated@@493 $generated@@497 $generated@@498) $generated@@499))
)))
(assert  (=> (<= 1 $generated@@259) (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@143) (or $generated@@261 (not (= 1 $generated@@259)))) (and $generated@@261 (= ($generated@@260 ($generated@@142 $generated@@501)) ($generated@@300 ($generated@@79 ($generated@@298 0) ($generated@@300 ($generated@@260 $generated@@501)))))))
 :pattern ( ($generated@@260 ($generated@@142 $generated@@501)))
))))
(assert  (=> (<= 1 $generated@@259) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@143) (or $generated@@265 (not (= 1 $generated@@259)))) (and $generated@@265 (= ($generated@@264 ($generated@@142 $generated@@502)) ($generated@@300 ($generated@@79 ($generated@@298 1) ($generated@@300 ($generated@@264 $generated@@502)))))))
 :pattern ( ($generated@@264 ($generated@@142 $generated@@502)))
))))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@81) ($generated@@158 $generated@@503 $generated@@80)) (or ($generated@@160 $generated@@503) ($generated@@161 $generated@@503)))
 :pattern ( ($generated@@161 $generated@@503) ($generated@@158 $generated@@503 $generated@@80))
 :pattern ( ($generated@@160 $generated@@503) ($generated@@158 $generated@@503 $generated@@80))
)))
(assert (forall (($generated@@505 T@T) ) (! (= (type ($generated@@504 $generated@@505)) ($generated@@82 $generated@@505 $generated@@4))
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@389 (type $generated@@506))))
(let (($generated@@508 ($generated@@388 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@387 $generated@@508 $generated@@507)) (= (= $generated@@506 ($generated@@386 $generated@@508 $generated@@507)) (= ($generated@@385 $generated@@506) ($generated@@504 $generated@@508))))))
 :pattern ( ($generated@@385 $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@389 (type $generated@@509))))
(let (($generated@@511 ($generated@@388 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@387 $generated@@511 $generated@@510)) (= (= $generated@@509 ($generated@@386 $generated@@511 $generated@@510)) (= ($generated@@433 $generated@@509) ($generated@@504 $generated@@510))))))
 :pattern ( ($generated@@433 $generated@@509))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@389 (type $generated@@512))))
(let (($generated@@514 ($generated@@388 (type $generated@@512))))
 (=> (= (type $generated@@512) ($generated@@387 $generated@@514 $generated@@513)) (= (= $generated@@512 ($generated@@386 $generated@@514 $generated@@513)) (= ($generated@@467 $generated@@512) ($generated@@504 $generated@@153))))))
 :pattern ( ($generated@@467 $generated@@512))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@371 (type $generated@@515))))
(let (($generated@@517 ($generated@@370 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@369 $generated@@517 $generated@@516)) (or (= $generated@@515 ($generated@@368 $generated@@517 $generated@@516)) (exists (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (and (and (= (type $generated@@518) $generated@@153) (= (type $generated@@519) $generated@@153)) ($generated@@0 ($generated@@88 ($generated@@459 $generated@@515) ($generated@@356 ($generated@@272 $generated@@518 $generated@@519)))))
 :no-pattern (type $generated@@518)
 :no-pattern (type $generated@@519)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
 :no-pattern ($generated $generated@@519)
 :no-pattern ($generated@@0 $generated@@519)
))))))
 :pattern ( ($generated@@459 $generated@@515))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@389 (type $generated@@520))))
(let (($generated@@522 ($generated@@388 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@387 $generated@@522 $generated@@521)) (or (= $generated@@520 ($generated@@386 $generated@@522 $generated@@521)) (exists (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (and (and (= (type $generated@@523) $generated@@153) (= (type $generated@@524) $generated@@153)) ($generated@@0 ($generated@@88 ($generated@@467 $generated@@520) ($generated@@356 ($generated@@272 $generated@@523 $generated@@524)))))
 :no-pattern (type $generated@@523)
 :no-pattern (type $generated@@524)
 :no-pattern ($generated $generated@@523)
 :no-pattern ($generated@@0 $generated@@523)
 :no-pattern ($generated $generated@@524)
 :no-pattern ($generated@@0 $generated@@524)
))))))
 :pattern ( ($generated@@467 $generated@@520))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@153) ($generated@@273 $generated@@525 $generated@@46)) (and (= ($generated@@356 ($generated@@410 $generated@@2 $generated@@525)) $generated@@525) ($generated@@158 ($generated@@410 $generated@@2 $generated@@525) $generated@@46)))
 :pattern ( ($generated@@273 $generated@@525 $generated@@46))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@153) ($generated@@273 $generated@@526 $generated@@47)) (and (= ($generated@@356 ($generated@@410 $generated@@3 $generated@@526)) $generated@@526) ($generated@@158 ($generated@@410 $generated@@3 $generated@@526) $generated@@47)))
 :pattern ( ($generated@@273 $generated@@526 $generated@@47))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@153) ($generated@@273 $generated@@527 $generated@@44)) (and (= ($generated@@356 ($generated@@410 $generated@@4 $generated@@527)) $generated@@527) ($generated@@158 ($generated@@410 $generated@@4 $generated@@527) $generated@@44)))
 :pattern ( ($generated@@273 $generated@@527 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@528) 21))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@153) ($generated@@273 $generated@@529 $generated@@45)) (and (= ($generated@@356 ($generated@@410 $generated@@528 $generated@@529)) $generated@@529) ($generated@@158 ($generated@@410 $generated@@528 $generated@@529) $generated@@45)))
 :pattern ( ($generated@@273 $generated@@529 $generated@@45))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@273 ($generated@@356 $generated@@530) $generated@@531) ($generated@@158 $generated@@530 $generated@@531)))
 :pattern ( ($generated@@273 ($generated@@356 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@143) (= (type $generated@@533) $generated@@153)) (= (type $generated@@534) $generated@@81)) (= (type $generated@@535) $generated@@81)) (= ($generated@@304 ($generated@@142 $generated@@532) $generated@@533 $generated@@534 $generated@@535) ($generated@@304 $generated@@532 $generated@@533 $generated@@534 $generated@@535)))
 :pattern ( ($generated@@304 ($generated@@142 $generated@@532) $generated@@533 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@153) (<= 0 ($generated@@159 $generated@@536)))
 :pattern ( ($generated@@159 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 ($generated@@86 (type $generated@@537))))
 (=> (= (type $generated@@537) ($generated@@82 $generated@@538 $generated@@2)) (<= 0 ($generated@@361 $generated@@537))))
 :pattern ( ($generated@@361 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@343 (type $generated@@539))))
 (=> (= (type $generated@@539) ($generated@@342 $generated@@540)) (<= 0 ($generated@@341 $generated@@539))))
 :pattern ( ($generated@@341 $generated@@539))
)))
(assert  (=> (<= 2 $generated@@259) (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@541) $generated@@143) (= (type $generated@@542) $generated@@153)) (= (type $generated@@543) $generated@@81)) (= (type $generated@@544) $generated@@81)) (or ($generated@@305 $generated@@542 $generated@@543 $generated@@544) (and (not (= 2 $generated@@259)) (and ($generated@@158 $generated@@543 $generated@@80) ($generated@@158 $generated@@544 $generated@@80))))) (and (and (=> (< 0 ($generated@@159 $generated@@542)) (=> (not ($generated@@160 $generated@@543)) (let (($generated@@545 ($generated@@165 $generated@@543)))
(let (($generated@@546 ($generated@@162 $generated@@543)))
 (=> ($generated@@161 $generated@@544) (=> (<= $generated@@546 ($generated@@162 $generated@@544)) ($generated@@305 ($generated@@163 $generated@@542 ($generated@@164 1)) $generated@@545 ($generated@@165 $generated@@544)))))))) (=> (=> (< 0 ($generated@@159 $generated@@542)) (ite ($generated@@160 $generated@@543) true (let (($generated@@547 ($generated@@165 $generated@@543)))
(let (($generated@@548 ($generated@@162 $generated@@543)))
 (and (and ($generated@@161 $generated@@544) (<= $generated@@548 ($generated@@162 $generated@@544))) ($generated@@304 $generated@@541 ($generated@@163 $generated@@542 ($generated@@164 1)) $generated@@547 ($generated@@165 $generated@@544))))))) (=> (= ($generated@@298 0) ($generated@@159 $generated@@542)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@153) ($generated@@152 $generated@@549 $generated@@542)) ($generated@@305 $generated@@549 $generated@@543 $generated@@544))
 :pattern ( ($generated@@304 $generated@@541 $generated@@549 $generated@@543 $generated@@544))
))))) (= ($generated@@304 ($generated@@142 $generated@@541) $generated@@542 $generated@@543 $generated@@544)  (and (=> (< 0 ($generated@@159 $generated@@542)) (ite ($generated@@160 $generated@@543) true (let (($generated@@550 ($generated@@165 $generated@@543)))
(let (($generated@@551 ($generated@@162 $generated@@543)))
 (and (and ($generated@@161 $generated@@544) (<= $generated@@551 ($generated@@162 $generated@@544))) ($generated@@304 $generated@@541 ($generated@@163 $generated@@542 ($generated@@164 1)) $generated@@550 ($generated@@165 $generated@@544))))))) (=> (= ($generated@@298 0) ($generated@@159 $generated@@542)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@153) ($generated@@152 $generated@@552 $generated@@542)) ($generated@@304 $generated@@541 $generated@@552 $generated@@543 $generated@@544))
 :pattern ( ($generated@@304 $generated@@541 $generated@@552 $generated@@543 $generated@@544))
)))))))
 :pattern ( ($generated@@304 ($generated@@142 $generated@@541) $generated@@542 $generated@@543 $generated@@544))
))))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@68)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@68) (= (type $generated@@556) $generated@@68)) (= ($generated@@553 ($generated@@485 $generated@@555 $generated@@556)) $generated@@555))
 :pattern ( ($generated@@485 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@68)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@68) (= (type $generated@@560) $generated@@68)) (= ($generated@@557 ($generated@@485 $generated@@559 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@485 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@68) (= (type $generated@@562) $generated@@68)) (= ($generated@@76 ($generated@@485 $generated@@561 $generated@@562)) $generated@@58))
 :pattern ( ($generated@@485 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@68) (= (type $generated@@566) $generated@@68)) (= ($generated@@563 ($generated@@493 $generated@@565 $generated@@566)) $generated@@565))
 :pattern ( ($generated@@493 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@68)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@68) (= (type $generated@@570) $generated@@68)) (= ($generated@@567 ($generated@@493 $generated@@569 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@493 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@68) (= (type $generated@@572) $generated@@68)) (= ($generated@@76 ($generated@@493 $generated@@571 $generated@@572)) $generated@@59))
 :pattern ( ($generated@@493 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@153) (= (type $generated@@574) $generated@@153)) (= ($generated@@192 ($generated@@272 $generated@@573 $generated@@574)) $generated@@61))
 :pattern ( ($generated@@272 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@68)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@68) (= (type $generated@@578) $generated@@68)) (= ($generated@@575 ($generated@@179 $generated@@577 $generated@@578)) $generated@@577))
 :pattern ( ($generated@@179 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@68)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@68) (= (type $generated@@582) $generated@@68)) (= ($generated@@579 ($generated@@179 $generated@@581 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@179 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@153) (= (type $generated@@584) $generated@@153)) (= ($generated@@186 ($generated@@272 $generated@@583 $generated@@584)) $generated@@583))
 :pattern ( ($generated@@272 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@153) (= (type $generated@@586) $generated@@153)) (= ($generated@@187 ($generated@@272 $generated@@585 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@272 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 Int) ($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@81) (= ($generated@@192 ($generated@@79 $generated@@587 $generated@@588)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 Int) ($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@81) (= ($generated@@162 ($generated@@79 $generated@@589 $generated@@590)) $generated@@589))
 :pattern ( ($generated@@79 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 Int) ($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@81) (= ($generated@@165 ($generated@@79 $generated@@591 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@79 $generated@@591 $generated@@592))
)))
(assert  (and (forall (($generated@@595 T@U) ) (! (= (type ($generated@@593 $generated@@595)) $generated@@68)
 :pattern ( ($generated@@593 $generated@@595))
)) (forall (($generated@@596 T@U) ($generated@@597 Int) ) (! (let (($generated@@598 ($generated@@343 (type $generated@@596))))
(= (type ($generated@@594 $generated@@596 $generated@@597)) $generated@@598))
 :pattern ( ($generated@@594 $generated@@596 $generated@@597))
))))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@342 $generated@@153)) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@599 ($generated@@593 $generated@@600) $generated@@601) (forall (($generated@@602 Int) ) (!  (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@341 $generated@@599))) ($generated@@318 ($generated@@594 $generated@@599 $generated@@602) $generated@@600 $generated@@601))
 :pattern ( ($generated@@594 $generated@@599 $generated@@602))
))))
 :pattern ( ($generated@@78 $generated@@599 ($generated@@593 $generated@@600) $generated@@601))
)))
(assert (forall (($generated@@604 Int) ) (! (= ($generated@@603 ($generated@@148 $generated@@604)) $generated@@604)
 :pattern ( ($generated@@148 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@68)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@68) (= ($generated@@605 ($generated@@288 $generated@@607)) $generated@@607))
 :pattern ( ($generated@@288 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@68) (= ($generated@@76 ($generated@@288 $generated@@608)) $generated@@54))
 :pattern ( ($generated@@288 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@68)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@68) (= ($generated@@609 ($generated@@293 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@293 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@68) (= ($generated@@76 ($generated@@293 $generated@@612)) $generated@@55))
 :pattern ( ($generated@@293 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ) (! (= (type ($generated@@613 $generated@@614)) $generated@@68)
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@68) (= ($generated@@613 ($generated@@195 $generated@@615)) $generated@@615))
 :pattern ( ($generated@@195 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@68) (= ($generated@@76 ($generated@@195 $generated@@616)) $generated@@56))
 :pattern ( ($generated@@195 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ) (! (= (type ($generated@@617 $generated@@618)) $generated@@68)
 :pattern ( ($generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@68) (= ($generated@@617 ($generated@@593 $generated@@619)) $generated@@619))
 :pattern ( ($generated@@593 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@68) (= ($generated@@76 ($generated@@593 $generated@@620)) $generated@@57))
 :pattern ( ($generated@@593 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
(= ($generated@@410 $generated@@622 ($generated@@356 $generated@@621)) $generated@@621))
 :pattern ( ($generated@@356 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@623) ($generated@@369 $generated@@153 $generated@@153)) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) $generated@@68)) (= ($generated@@158 $generated@@623 ($generated@@485 $generated@@624 $generated@@625)) (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@153) ($generated@@0 ($generated@@88 ($generated@@367 $generated@@623) $generated@@626))) (and ($generated@@273 ($generated@@88 ($generated@@460 $generated@@623) $generated@@626) $generated@@625) ($generated@@273 $generated@@626 $generated@@624)))
 :pattern ( ($generated@@88 ($generated@@460 $generated@@623) $generated@@626))
 :pattern ( ($generated@@88 ($generated@@367 $generated@@623) $generated@@626))
))))
 :pattern ( ($generated@@158 $generated@@623 ($generated@@485 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@627) ($generated@@387 $generated@@153 $generated@@153)) (= (type $generated@@628) $generated@@68)) (= (type $generated@@629) $generated@@68)) (= ($generated@@158 $generated@@627 ($generated@@493 $generated@@628 $generated@@629)) (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@153) ($generated@@0 ($generated@@88 ($generated@@385 $generated@@627) $generated@@630))) (and ($generated@@273 ($generated@@88 ($generated@@468 $generated@@627) $generated@@630) $generated@@629) ($generated@@273 $generated@@630 $generated@@628)))
 :pattern ( ($generated@@88 ($generated@@468 $generated@@627) $generated@@630))
 :pattern ( ($generated@@88 ($generated@@385 $generated@@627) $generated@@630))
))))
 :pattern ( ($generated@@158 $generated@@627 ($generated@@493 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@153) (= (type $generated@@632) $generated@@153)) (and (and (and (=> ($generated@@152 $generated@@631 $generated@@632) (not (= $generated@@631 $generated@@632))) (=> (and ($generated@@403 $generated@@631) (not ($generated@@403 $generated@@632))) ($generated@@152 $generated@@631 $generated@@632))) (=> (and ($generated@@403 $generated@@631) ($generated@@403 $generated@@632)) (= ($generated@@152 $generated@@631 $generated@@632) (< ($generated@@159 $generated@@631) ($generated@@159 $generated@@632))))) (=> (and ($generated@@152 $generated@@631 $generated@@632) ($generated@@403 $generated@@632)) ($generated@@403 $generated@@631))))
 :pattern ( ($generated@@152 $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@153) (= (type $generated@@636) $generated@@153)) (< ($generated@@633 $generated@@635) ($generated@@634 ($generated@@272 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@272 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@153) (= (type $generated@@638) $generated@@153)) (< ($generated@@633 $generated@@638) ($generated@@634 ($generated@@272 $generated@@637 $generated@@638))))
 :pattern ( ($generated@@272 $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@143) (= ($generated@@260 $generated@@639) ($generated@@260 $generated@@328)))
 :pattern ( ($generated@@260 ($generated@@327 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@143) (= ($generated@@264 $generated@@640) ($generated@@264 $generated@@328)))
 :pattern ( ($generated@@264 ($generated@@327 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@153) (= (type $generated@@642) $generated@@68)) (= (type $generated@@643) $generated@@68)) ($generated@@273 $generated@@641 ($generated@@485 $generated@@642 $generated@@643))) (and (= ($generated@@356 ($generated@@410 ($generated@@369 $generated@@153 $generated@@153) $generated@@641)) $generated@@641) ($generated@@158 ($generated@@410 ($generated@@369 $generated@@153 $generated@@153) $generated@@641) ($generated@@485 $generated@@642 $generated@@643))))
 :pattern ( ($generated@@273 $generated@@641 ($generated@@485 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) $generated@@153) (= (type $generated@@645) $generated@@68)) (= (type $generated@@646) $generated@@68)) ($generated@@273 $generated@@644 ($generated@@493 $generated@@645 $generated@@646))) (and (= ($generated@@356 ($generated@@410 ($generated@@387 $generated@@153 $generated@@153) $generated@@644)) $generated@@644) ($generated@@158 ($generated@@410 ($generated@@387 $generated@@153 $generated@@153) $generated@@644) ($generated@@493 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@273 $generated@@644 ($generated@@493 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@68) (= (type $generated@@648) $generated@@68)) (= (type $generated@@649) $generated@@153)) ($generated@@273 $generated@@649 ($generated@@179 $generated@@647 $generated@@648))) (and (= ($generated@@356 ($generated@@410 $generated@@81 $generated@@649)) $generated@@649) ($generated@@158 ($generated@@410 $generated@@81 $generated@@649) ($generated@@179 $generated@@647 $generated@@648))))
 :pattern ( ($generated@@273 $generated@@649 ($generated@@179 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ) (! (let (($generated@@651 (type $generated@@650)))
 (not ($generated@@0 ($generated@@88 ($generated@@504 $generated@@651) $generated@@650))))
 :pattern ( (let (($generated@@651 (type $generated@@650)))
($generated@@88 ($generated@@504 $generated@@651) $generated@@650)))
)))
(assert (forall (($generated@@653 T@U) ) (! (= (type ($generated@@652 $generated@@653)) $generated@@73)
 :pattern ( ($generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@68) (= (type $generated@@655) $generated@@68)) (and (= ($generated@@76 ($generated@@179 $generated@@654 $generated@@655)) $generated@@62) (= ($generated@@652 ($generated@@179 $generated@@654 $generated@@655)) $generated@@66)))
 :pattern ( ($generated@@179 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@656) $generated@@81) (= (type $generated@@657) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@657) (and ($generated@@161 $generated@@656) ($generated@@78 $generated@@656 $generated@@80 $generated@@657)))) ($generated@@78 ($generated@@8 ($generated@@162 $generated@@656)) $generated@@46 $generated@@657))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@162 $generated@@656)) $generated@@46 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@81) (= ($generated@@633 ($generated@@356 $generated@@658)) ($generated@@634 $generated@@658)))
 :pattern ( ($generated@@633 ($generated@@356 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@143) (= ($generated@@260 ($generated@@142 $generated@@659)) ($generated@@260 $generated@@659)))
 :pattern ( ($generated@@260 ($generated@@142 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@143) (= ($generated@@264 ($generated@@142 $generated@@660)) ($generated@@264 $generated@@660)))
 :pattern ( ($generated@@264 ($generated@@142 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@661) $generated@@153) ($generated@@273 $generated@@661 ($generated@@148 0))) (and (= ($generated@@356 ($generated@@410 $generated@@2 $generated@@661)) $generated@@661) ($generated@@158 ($generated@@410 ($generated@@82 $generated@@153 $generated@@4) $generated@@661) ($generated@@148 0))))
 :pattern ( ($generated@@273 $generated@@661 ($generated@@148 0)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@662) $generated@@153) (= (type $generated@@663) $generated@@68)) ($generated@@273 $generated@@662 ($generated@@288 $generated@@663))) (and (= ($generated@@356 ($generated@@410 ($generated@@82 $generated@@153 $generated@@4) $generated@@662)) $generated@@662) ($generated@@158 ($generated@@410 ($generated@@82 $generated@@153 $generated@@4) $generated@@662) ($generated@@288 $generated@@663))))
 :pattern ( ($generated@@273 $generated@@662 ($generated@@288 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@664) $generated@@153) (= (type $generated@@665) $generated@@68)) ($generated@@273 $generated@@664 ($generated@@293 $generated@@665))) (and (= ($generated@@356 ($generated@@410 ($generated@@82 $generated@@153 $generated@@4) $generated@@664)) $generated@@664) ($generated@@158 ($generated@@410 ($generated@@82 $generated@@153 $generated@@4) $generated@@664) ($generated@@293 $generated@@665))))
 :pattern ( ($generated@@273 $generated@@664 ($generated@@293 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@666) $generated@@153) (= (type $generated@@667) $generated@@68)) ($generated@@273 $generated@@666 ($generated@@195 $generated@@667))) (and (= ($generated@@356 ($generated@@410 ($generated@@82 $generated@@153 $generated@@2) $generated@@666)) $generated@@666) ($generated@@158 ($generated@@410 ($generated@@82 $generated@@153 $generated@@2) $generated@@666) ($generated@@195 $generated@@667))))
 :pattern ( ($generated@@273 $generated@@666 ($generated@@195 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (= (type $generated@@668) $generated@@153) (= (type $generated@@669) $generated@@68)) ($generated@@273 $generated@@668 ($generated@@593 $generated@@669))) (and (= ($generated@@356 ($generated@@410 ($generated@@342 $generated@@153) $generated@@668)) $generated@@668) ($generated@@158 ($generated@@410 ($generated@@342 $generated@@153) $generated@@668) ($generated@@593 $generated@@669))))
 :pattern ( ($generated@@273 $generated@@668 ($generated@@593 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@153) ($generated@@403 $generated@@670)) (= $generated@@670 ($generated@@164 ($generated@@159 $generated@@670))))
 :pattern ( ($generated@@159 $generated@@670))
 :pattern ( ($generated@@403 $generated@@670))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@652 $generated@@80) $generated@@67))
(assert  (=> (<= 2 $generated@@259) (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@671) $generated@@143) (= (type $generated@@672) $generated@@153)) (= (type $generated@@673) $generated@@81)) (= (type $generated@@674) $generated@@81)) (or ($generated@@305 ($generated@@300 $generated@@672) ($generated@@300 $generated@@673) ($generated@@300 $generated@@674)) (and (not (= 2 $generated@@259)) (and ($generated@@158 $generated@@673 $generated@@80) ($generated@@158 $generated@@674 $generated@@80))))) (and (and (=> (< 0 ($generated@@159 $generated@@672)) (=> (not ($generated@@160 $generated@@673)) (let (($generated@@675 ($generated@@165 $generated@@673)))
(let (($generated@@676 ($generated@@162 $generated@@673)))
 (=> ($generated@@161 $generated@@674) (=> (<= $generated@@676 ($generated@@162 $generated@@674)) ($generated@@305 ($generated@@163 $generated@@672 ($generated@@164 1)) $generated@@675 ($generated@@165 $generated@@674)))))))) (=> (=> (< 0 ($generated@@159 $generated@@672)) (ite ($generated@@160 $generated@@673) true (let (($generated@@677 ($generated@@165 $generated@@673)))
(let (($generated@@678 ($generated@@162 $generated@@673)))
 (and (and ($generated@@161 $generated@@674) (<= $generated@@678 ($generated@@162 $generated@@674))) ($generated@@304 ($generated@@142 $generated@@671) ($generated@@163 $generated@@672 ($generated@@164 1)) $generated@@677 ($generated@@165 $generated@@674))))))) (=> (= ($generated@@298 0) ($generated@@159 $generated@@672)) (forall (($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@679) $generated@@153) ($generated@@152 $generated@@679 $generated@@672)) ($generated@@305 $generated@@679 $generated@@673 $generated@@674))
 :pattern ( ($generated@@304 ($generated@@142 $generated@@671) $generated@@679 $generated@@673 $generated@@674))
))))) (= ($generated@@304 ($generated@@142 $generated@@671) ($generated@@300 $generated@@672) ($generated@@300 $generated@@673) ($generated@@300 $generated@@674))  (and (=> (< 0 ($generated@@159 $generated@@672)) (ite ($generated@@160 $generated@@673) true (let (($generated@@680 ($generated@@165 $generated@@673)))
(let (($generated@@681 ($generated@@162 $generated@@673)))
 (and (and ($generated@@161 $generated@@674) (<= $generated@@681 ($generated@@162 $generated@@674))) ($generated@@304 ($generated@@142 $generated@@671) ($generated@@163 $generated@@672 ($generated@@164 1)) $generated@@680 ($generated@@165 $generated@@674))))))) (=> (= ($generated@@298 0) ($generated@@159 $generated@@672)) (forall (($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@153) ($generated@@152 $generated@@682 $generated@@672)) ($generated@@304 ($generated@@142 $generated@@671) $generated@@682 $generated@@673 $generated@@674))
 :pattern ( ($generated@@304 ($generated@@142 $generated@@671) $generated@@682 $generated@@673 $generated@@674))
)))))))
 :weight 3
 :pattern ( ($generated@@304 ($generated@@142 $generated@@671) ($generated@@300 $generated@@672) ($generated@@300 $generated@@673) ($generated@@300 $generated@@674)))
))))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (= (type $generated@@683) ($generated@@82 $generated@@153 $generated@@2)) (= (type $generated@@684) $generated@@68)) (= (type $generated@@685) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@683 ($generated@@195 $generated@@684) $generated@@685) (forall (($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@686) $generated@@153) (< 0 ($generated ($generated@@88 $generated@@683 $generated@@686)))) ($generated@@318 $generated@@686 $generated@@684 $generated@@685))
 :pattern ( ($generated@@88 $generated@@683 $generated@@686))
))))
 :pattern ( ($generated@@78 $generated@@683 ($generated@@195 $generated@@684) $generated@@685))
)))
(assert  (=> (<= 2 $generated@@259) (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@687) $generated@@143) (= (type $generated@@688) $generated@@81)) (= (type $generated@@689) $generated@@81)) (= (type $generated@@690) $generated@@153)) (and (and ($generated@@158 $generated@@688 $generated@@80) ($generated@@158 $generated@@689 $generated@@80)) (= $generated@@690 ($generated@@164 0)))) ($generated@@304 $generated@@687 $generated@@690 $generated@@688 $generated@@689))
 :pattern ( ($generated@@304 $generated@@687 $generated@@690 $generated@@688 $generated@@689))
))))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@691) $generated@@153) (= (type $generated@@692) $generated@@153)) (and ($generated@@403 $generated@@692) (<= ($generated@@159 $generated@@692) ($generated@@159 $generated@@691)))) (or (and (= $generated@@692 ($generated@@164 0)) (= ($generated@@163 $generated@@691 $generated@@692) $generated@@691)) (and (not (= $generated@@692 ($generated@@164 0))) ($generated@@152 ($generated@@163 $generated@@691 $generated@@692) $generated@@691))))
 :pattern ( ($generated@@163 $generated@@691 $generated@@692))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) $generated@@81) (= (type $generated@@694) $generated@@68)) (= (type $generated@@695) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@695) (and ($generated@@178 $generated@@693) (exists (($generated@@696 T@U) ) (!  (and (= (type $generated@@696) $generated@@68) ($generated@@78 $generated@@693 ($generated@@179 $generated@@694 $generated@@696) $generated@@695))
 :pattern ( ($generated@@78 $generated@@693 ($generated@@179 $generated@@694 $generated@@696) $generated@@695))
))))) ($generated@@318 ($generated@@186 $generated@@693) $generated@@694 $generated@@695))
 :pattern ( ($generated@@318 ($generated@@186 $generated@@693) $generated@@694 $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (and (and (= (type $generated@@697) $generated@@81) (= (type $generated@@698) $generated@@68)) (= (type $generated@@699) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@699) (and ($generated@@178 $generated@@697) (exists (($generated@@700 T@U) ) (!  (and (= (type $generated@@700) $generated@@68) ($generated@@78 $generated@@697 ($generated@@179 $generated@@700 $generated@@698) $generated@@699))
 :pattern ( ($generated@@78 $generated@@697 ($generated@@179 $generated@@700 $generated@@698) $generated@@699))
))))) ($generated@@318 ($generated@@187 $generated@@697) $generated@@698 $generated@@699))
 :pattern ( ($generated@@318 ($generated@@187 $generated@@697) $generated@@698 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (= (type $generated@@701) $generated@@81) (= (type $generated@@702) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@702) (and ($generated@@161 $generated@@701) ($generated@@78 $generated@@701 $generated@@80 $generated@@702)))) ($generated@@78 ($generated@@165 $generated@@701) $generated@@80 $generated@@702))
 :pattern ( ($generated@@78 ($generated@@165 $generated@@701) $generated@@80 $generated@@702))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) $generated@@153) (= (type $generated@@704) $generated@@153)) (= ($generated@@272 ($generated@@300 $generated@@703) ($generated@@300 $generated@@704)) ($generated@@300 ($generated@@272 $generated@@703 $generated@@704))))
 :pattern ( ($generated@@272 ($generated@@300 $generated@@703) ($generated@@300 $generated@@704)))
)))
(assert (forall (($generated@@705 Int) ) (! (= ($generated@@356 ($generated@@8 ($generated@@298 $generated@@705))) ($generated@@300 ($generated@@356 ($generated@@8 $generated@@705))))
 :pattern ( ($generated@@356 ($generated@@8 ($generated@@298 $generated@@705))))
)))
(assert (forall (($generated@@706 T@U) ) (! (= ($generated@@356 ($generated@@300 $generated@@706)) ($generated@@300 ($generated@@356 $generated@@706)))
 :pattern ( ($generated@@356 ($generated@@300 $generated@@706)))
)))
(assert (forall (($generated@@707 Int) ($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@81) (= ($generated@@158 ($generated@@79 $generated@@707 $generated@@708) $generated@@80)  (and ($generated@@158 ($generated@@8 $generated@@707) $generated@@46) ($generated@@158 $generated@@708 $generated@@80))))
 :pattern ( ($generated@@158 ($generated@@79 $generated@@707 $generated@@708) $generated@@80))
)))
(assert (forall (($generated@@709 T@U) ) (! (let (($generated@@710 ($generated@@343 (type $generated@@709))))
 (=> (and (= (type $generated@@709) ($generated@@342 $generated@@710)) (= ($generated@@341 $generated@@709) 0)) (= $generated@@709 ($generated@@340 $generated@@710))))
 :pattern ( ($generated@@341 $generated@@709))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ($generated@@713 T@U) ) (! (let (($generated@@714 (type $generated@@712)))
 (=> (and (and (= (type $generated@@711) ($generated@@82 $generated@@714 $generated@@2)) (= (type $generated@@713) $generated@@2)) (<= 0 ($generated $generated@@713))) (= ($generated@@361 ($generated@@89 $generated@@711 $generated@@712 $generated@@713)) (+ (- ($generated@@361 $generated@@711) ($generated ($generated@@88 $generated@@711 $generated@@712))) ($generated $generated@@713)))))
 :pattern ( ($generated@@361 ($generated@@89 $generated@@711 $generated@@712 $generated@@713)))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (= (type $generated@@715) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@716) $generated@@2)) ($generated@@78 $generated@@716 $generated@@46 $generated@@715))
 :pattern ( ($generated@@78 $generated@@716 $generated@@46 $generated@@715))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (= (type $generated@@717) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@718) $generated@@3)) ($generated@@78 $generated@@718 $generated@@47 $generated@@717))
 :pattern ( ($generated@@78 $generated@@718 $generated@@47 $generated@@717))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (= (type $generated@@719) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@720) $generated@@4)) ($generated@@78 $generated@@720 $generated@@44 $generated@@719))
 :pattern ( ($generated@@78 $generated@@720 $generated@@44 $generated@@719))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (= (type $generated@@721) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@722) $generated@@528)) ($generated@@78 $generated@@722 $generated@@45 $generated@@721))
 :pattern ( ($generated@@78 $generated@@722 $generated@@45 $generated@@721))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (= (type $generated@@723) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@724) $generated@@153)) ($generated@@78 $generated@@724 $generated@@48 $generated@@723))
 :pattern ( ($generated@@78 $generated@@724 $generated@@48 $generated@@723))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (= (type $generated@@725) ($generated@@342 $generated@@153)) (= (type $generated@@726) $generated@@68)) (= ($generated@@158 $generated@@725 ($generated@@593 $generated@@726)) (forall (($generated@@727 Int) ) (!  (=> (and (<= 0 $generated@@727) (< $generated@@727 ($generated@@341 $generated@@725))) ($generated@@273 ($generated@@594 $generated@@725 $generated@@727) $generated@@726))
 :pattern ( ($generated@@594 $generated@@725 $generated@@727))
))))
 :pattern ( ($generated@@158 $generated@@725 ($generated@@593 $generated@@726)))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 Int) ) (!  (=> (= (type $generated@@729) ($generated@@342 $generated@@153)) (=> (and (<= 0 $generated@@730) (< $generated@@730 ($generated@@341 $generated@@729))) (< ($generated@@634 ($generated@@410 $generated@@81 ($generated@@594 $generated@@729 $generated@@730))) ($generated@@728 $generated@@729))))
 :pattern ( ($generated@@634 ($generated@@410 $generated@@81 ($generated@@594 $generated@@729 $generated@@730))))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@731) $generated@@153) (= (type $generated@@732) $generated@@143)) (= (type $generated@@733) $generated@@81)) (= (type $generated@@734) $generated@@81)) (= $generated@@733 $generated@@734)) ($generated@@157 $generated@@731 ($generated@@142 $generated@@732) $generated@@733 $generated@@734))
 :pattern ( ($generated@@157 $generated@@731 ($generated@@142 $generated@@732) $generated@@733 $generated@@734))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (and (and (= (type $generated@@735) ($generated@@369 $generated@@153 $generated@@153)) (= (type $generated@@736) $generated@@68)) (= (type $generated@@737) $generated@@68)) ($generated@@158 $generated@@735 ($generated@@485 $generated@@736 $generated@@737))) (and (and ($generated@@158 ($generated@@367 $generated@@735) ($generated@@288 $generated@@736)) ($generated@@158 ($generated@@422 $generated@@735) ($generated@@288 $generated@@737))) ($generated@@158 ($generated@@459 $generated@@735) ($generated@@288 ($generated@@179 $generated@@736 $generated@@737)))))
 :pattern ( ($generated@@158 $generated@@735 ($generated@@485 $generated@@736 $generated@@737)))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ($generated@@740 T@U) ) (!  (=> (and (and (and (= (type $generated@@738) ($generated@@387 $generated@@153 $generated@@153)) (= (type $generated@@739) $generated@@68)) (= (type $generated@@740) $generated@@68)) ($generated@@158 $generated@@738 ($generated@@493 $generated@@739 $generated@@740))) (and (and ($generated@@158 ($generated@@385 $generated@@738) ($generated@@293 $generated@@739)) ($generated@@158 ($generated@@433 $generated@@738) ($generated@@293 $generated@@740))) ($generated@@158 ($generated@@467 $generated@@738) ($generated@@293 ($generated@@179 $generated@@739 $generated@@740)))))
 :pattern ( ($generated@@158 $generated@@738 ($generated@@493 $generated@@739 $generated@@740)))
)))
(assert (forall (($generated@@741 T@U) ) (!  (=> (= (type $generated@@741) $generated@@2) ($generated@@158 $generated@@741 $generated@@46))
 :pattern ( ($generated@@158 $generated@@741 $generated@@46))
)))
(assert (forall (($generated@@742 T@U) ) (!  (=> (= (type $generated@@742) $generated@@3) ($generated@@158 $generated@@742 $generated@@47))
 :pattern ( ($generated@@158 $generated@@742 $generated@@47))
)))
(assert (forall (($generated@@743 T@U) ) (!  (=> (= (type $generated@@743) $generated@@4) ($generated@@158 $generated@@743 $generated@@44))
 :pattern ( ($generated@@158 $generated@@743 $generated@@44))
)))
(assert (forall (($generated@@744 T@U) ) (!  (=> (= (type $generated@@744) $generated@@528) ($generated@@158 $generated@@744 $generated@@45))
 :pattern ( ($generated@@158 $generated@@744 $generated@@45))
)))
(assert (forall (($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@153) ($generated@@158 $generated@@745 $generated@@48))
 :pattern ( ($generated@@158 $generated@@745 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@746 () T@U)
(declare-fun $generated@@747 () T@U)
(declare-fun $generated@@748 () T@U)
(declare-fun $generated@@749 (T@U) Bool)
(declare-fun $generated@@750 () T@U)
(declare-fun $generated@@751 () T@U)
(declare-fun $generated@@752 () T@U)
(declare-fun $generated@@753 () T@U)
(declare-fun $generated@@754 () T@U)
(declare-fun $generated@@755 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@746) $generated@@153) (= (type $generated@@753) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@750) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@751) $generated@@153)) (= (type $generated@@752) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@747) $generated@@153)) (= (type $generated@@748) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@754) ($generated@@205 $generated@@83 $generated@@4))) (= (type $generated@@755) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@756  (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> ($generated@@305 $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (< 0 ($generated@@159 $generated@@746)) (=> ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))))))) ($generated@@0 ($generated@@300 ($generated@@11 true)))))))) (=> (=> ($generated@@305 $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (< 0 ($generated@@159 $generated@@746)) (=> ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))))))) ($generated@@0 ($generated@@300 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@305 $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (< 0 ($generated@@159 $generated@@746)) (=> (not ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))))))) ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@161 ($generated@@300 ($generated@@264 ($generated@@142 ($generated@@142 $generated@@328))))))))))))) (=> (=> ($generated@@305 $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (< 0 ($generated@@159 $generated@@746)) (=> (not ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))))))) ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@161 ($generated@@300 ($generated@@264 ($generated@@142 ($generated@@142 $generated@@328)))))))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@305 $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (< 0 ($generated@@159 $generated@@746)) (=> (not ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))))))) (let (($generated@@757 ($generated@@298 ($generated@@162 ($generated@@300 ($generated@@260 ($generated@@142 ($generated@@142 $generated@@328))))))))
(<= $generated@@757 ($generated@@298 ($generated@@162 ($generated@@300 ($generated@@264 ($generated@@142 ($generated@@142 $generated@@328))))))))))))) (=> (=> ($generated@@305 $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (< 0 ($generated@@159 $generated@@746)) (=> (not ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))))))) (let (($generated@@758 ($generated@@298 ($generated@@162 ($generated@@300 ($generated@@260 ($generated@@142 ($generated@@142 $generated@@328))))))))
(<= $generated@@758 ($generated@@298 ($generated@@162 ($generated@@300 ($generated@@264 ($generated@@142 ($generated@@142 $generated@@328)))))))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@305 $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (< 0 ($generated@@159 $generated@@746)) (=> (not ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))))))) (let (($generated@@759 ($generated@@300 ($generated@@165 ($generated@@300 ($generated@@260 ($generated@@142 ($generated@@142 $generated@@328))))))))
($generated@@304 ($generated@@142 ($generated@@142 $generated@@328)) ($generated@@163 $generated@@746 ($generated@@164 1)) $generated@@759 ($generated@@300 ($generated@@165 ($generated@@300 ($generated@@264 ($generated@@142 ($generated@@142 $generated@@328))))))))))))) (=> (=> ($generated@@305 $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (< 0 ($generated@@159 $generated@@746)) (=> (not ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))))))) (let (($generated@@760 ($generated@@300 ($generated@@165 ($generated@@300 ($generated@@260 ($generated@@142 ($generated@@142 $generated@@328))))))))
($generated@@304 ($generated@@142 ($generated@@142 $generated@@328)) ($generated@@163 $generated@@746 ($generated@@164 1)) $generated@@760 ($generated@@300 ($generated@@165 ($generated@@300 ($generated@@264 ($generated@@142 ($generated@@142 $generated@@328)))))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@305 $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@746 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (= ($generated@@298 0) ($generated@@159 $generated@@746)) (forall (($generated@@761 T@U) ) (!  (=> (and (= (type $generated@@761) $generated@@153) ($generated@@152 $generated@@761 $generated@@746)) ($generated@@304 ($generated@@142 ($generated@@142 $generated@@328)) $generated@@761 ($generated@@300 ($generated@@260 ($generated@@142 ($generated@@142 $generated@@328)))) ($generated@@300 ($generated@@264 ($generated@@142 ($generated@@142 $generated@@328))))))
 :pattern ( ($generated@@304 ($generated@@142 ($generated@@142 $generated@@328)) $generated@@761 ($generated@@260 ($generated@@142 ($generated@@142 $generated@@328))) ($generated@@264 ($generated@@142 ($generated@@142 $generated@@328)))))
))))))))))))))))
(let (($generated@@762  (and (=> (= (ControlFlow 0 12) (- 0 15)) ($generated@@403 ($generated@@300 ($generated@@164 1)))) (=> ($generated@@403 ($generated@@300 ($generated@@164 1))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (<= ($generated@@159 ($generated@@300 ($generated@@164 1))) ($generated@@159 $generated@@746))) (=> (<= ($generated@@159 ($generated@@300 ($generated@@164 1))) ($generated@@159 $generated@@746)) (=> (= $generated@@747 ($generated@@163 $generated@@746 ($generated@@164 1))) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@152 $generated@@747 $generated@@746)) (=> ($generated@@152 $generated@@747 $generated@@746) (=> (and ($generated@@85 $generated@@748) ($generated@@749 $generated@@748)) (=> (and (and (and $generated@@261 $generated@@265) ($generated@@305 $generated@@747 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328))))) (and (and ($generated@@305 $generated@@747 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (and ($generated@@304 ($generated@@142 $generated@@328) $generated@@747 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (and (=> (< 0 ($generated@@159 $generated@@747)) (ite ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))) true (let (($generated@@763 ($generated@@300 ($generated@@165 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))))))
(let (($generated@@764 ($generated@@298 ($generated@@162 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))))))
 (and (and ($generated@@161 ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (<= $generated@@764 ($generated@@298 ($generated@@162 ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328))))))) ($generated@@304 ($generated@@142 $generated@@328) ($generated@@163 $generated@@747 ($generated@@164 1)) $generated@@763 ($generated@@300 ($generated@@165 ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328))))))))))) (=> (= ($generated@@298 0) ($generated@@159 $generated@@747)) (forall (($generated@@765 T@U) ) (!  (=> (and (= (type $generated@@765) $generated@@153) ($generated@@152 $generated@@765 $generated@@747)) ($generated@@304 ($generated@@142 $generated@@328) $generated@@765 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))))
 :pattern ( ($generated@@304 ($generated@@142 $generated@@328) $generated@@765 ($generated@@260 ($generated@@142 $generated@@328)) ($generated@@264 ($generated@@142 $generated@@328))))
)))))) (and (= $generated@@750 $generated@@748) (= (ControlFlow 0 12) 2)))) $generated@@756)))))))))))
(let (($generated@@766  (and (=> (= (ControlFlow 0 8) (- 0 11)) ($generated@@403 ($generated@@300 ($generated@@164 1)))) (=> ($generated@@403 ($generated@@300 ($generated@@164 1))) (and (=> (= (ControlFlow 0 8) (- 0 10)) (<= ($generated@@159 ($generated@@300 ($generated@@164 1))) ($generated@@159 $generated@@746))) (=> (<= ($generated@@159 ($generated@@300 ($generated@@164 1))) ($generated@@159 $generated@@746)) (=> (= $generated@@751 ($generated@@163 $generated@@746 ($generated@@164 1))) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@152 $generated@@751 $generated@@746)) (=> ($generated@@152 $generated@@751 $generated@@746) (=> (and ($generated@@85 $generated@@752) ($generated@@749 $generated@@752)) (=> (and (and (and $generated@@261 $generated@@265) ($generated@@305 $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328))))) (and (and ($generated@@305 $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (and ($generated@@304 ($generated@@142 $generated@@328) $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (and (=> (< 0 ($generated@@159 $generated@@751)) (ite ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))) true (let (($generated@@767 ($generated@@300 ($generated@@165 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))))))
(let (($generated@@768 ($generated@@298 ($generated@@162 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))))))
 (and (and ($generated@@161 ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (<= $generated@@768 ($generated@@298 ($generated@@162 ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328))))))) ($generated@@304 ($generated@@142 $generated@@328) ($generated@@163 $generated@@751 ($generated@@164 1)) $generated@@767 ($generated@@300 ($generated@@165 ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328))))))))))) (=> (= ($generated@@298 0) ($generated@@159 $generated@@751)) (forall (($generated@@769 T@U) ) (!  (=> (and (= (type $generated@@769) $generated@@153) ($generated@@152 $generated@@769 $generated@@751)) ($generated@@304 ($generated@@142 $generated@@328) $generated@@769 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))))
 :pattern ( ($generated@@304 ($generated@@142 $generated@@328) $generated@@769 ($generated@@260 ($generated@@142 $generated@@328)) ($generated@@264 ($generated@@142 $generated@@328))))
)))))) (and (= $generated@@750 $generated@@752) (= (ControlFlow 0 8) 2)))) $generated@@756)))))))))))
(let (($generated@@770  (=> (< 0 ($generated@@159 $generated@@746)) (and (=> (= (ControlFlow 0 16) 8) $generated@@766) (=> (= (ControlFlow 0 16) 12) $generated@@762)))))
(let (($generated@@771  (=> (<= ($generated@@159 $generated@@746) 0) (=> (and (and (and ($generated@@85 $generated@@753) ($generated@@749 $generated@@753)) (= $generated@@750 $generated@@753)) (and (forall (($generated@@772 T@U) ) (!  (=> (and (= (type $generated@@772) $generated@@153) ($generated@@152 $generated@@772 $generated@@746)) ($generated@@304 ($generated@@142 $generated@@328) $generated@@772 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))))
 :no-pattern (type $generated@@772)
 :no-pattern ($generated $generated@@772)
 :no-pattern ($generated@@0 $generated@@772)
)) (= (ControlFlow 0 7) 2))) $generated@@756))))
(let (($generated@@773  (=> (= $generated@@754 ($generated@@204 $generated@@755 $generated@@750 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) 16) $generated@@770) (=> (= (ControlFlow 0 17) 7) $generated@@771)))))
(let (($generated@@774  (=> (and (and ($generated@@85 $generated@@750) ($generated@@749 $generated@@750)) (and (= 3 $generated@@259) (= (ControlFlow 0 18) 17))) $generated@@773)))
$generated@@774))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 (Int) T@U)
(declare-fun $generated@@51 (T@U) Int)
(declare-fun $generated@@58 (T@U T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert (= ($generated@@1 $generated@@45) 6))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and (and (and (= (type $generated@@46) $generated@@45) (= (type $generated@@47) $generated@@45)) (= (type $generated@@48) $generated@@45)) (and ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))) ($generated@@44 $generated@@46 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@46 $generated@@48))
)))
(assert  (and (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= (type ($generated@@49 $generated@@52 $generated@@53)) $generated@@45)
 :pattern ( ($generated@@49 $generated@@52 $generated@@53))
)) (forall (($generated@@54 Int) ) (! (= (type ($generated@@50 $generated@@54)) $generated@@45)
 :pattern ( ($generated@@50 $generated@@54))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 Int) ($generated@@57 Int) ) (!  (=> (= (type $generated@@55) $generated@@45) (=> (and (and (<= 0 $generated@@56) (<= 0 $generated@@57)) (<= (+ $generated@@56 $generated@@57) ($generated@@51 $generated@@55))) (= ($generated@@49 ($generated@@49 $generated@@55 ($generated@@50 $generated@@56)) ($generated@@50 $generated@@57)) ($generated@@49 $generated@@55 ($generated@@50 (+ $generated@@56 $generated@@57))))))
 :pattern ( ($generated@@49 ($generated@@49 $generated@@55 ($generated@@50 $generated@@56)) ($generated@@50 $generated@@57)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (= ($generated@@1 ($generated@@62 $generated@@75 $generated@@76)) 7)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@67 ($generated@@62 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@62 $generated@@77 $generated@@78))
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@68 ($generated@@62 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@62 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (let (($generated@@83 ($generated@@68 (type $generated@@81))))
(= (type ($generated@@66 $generated@@81 $generated@@82)) $generated@@83))
 :pattern ( ($generated@@66 $generated@@81 $generated@@82))
))) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 (type $generated@@86)))
(let (($generated@@88 (type $generated@@85)))
(= (type ($generated@@69 $generated@@84 $generated@@85 $generated@@86)) ($generated@@62 $generated@@88 $generated@@87))))
 :pattern ( ($generated@@69 $generated@@84 $generated@@85 $generated@@86))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 ($generated@@68 (type $generated@@89))))
 (=> (= (type $generated@@91) $generated@@92) (= ($generated@@66 ($generated@@69 $generated@@89 $generated@@90 $generated@@91) $generated@@90) $generated@@91)))
 :weight 0
))) (and (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (or (= $generated@@95 $generated@@96) (= ($generated@@66 ($generated@@69 $generated@@94 $generated@@95 $generated@@93) $generated@@96) ($generated@@66 $generated@@94 $generated@@96)))
 :weight 0
)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or true (= ($generated@@66 ($generated@@69 $generated@@98 $generated@@99 $generated@@97) $generated@@100) ($generated@@66 $generated@@98 $generated@@100)))
 :weight 0
)))) (forall (($generated@@101 T@T) ) (= ($generated@@1 ($generated@@64 $generated@@101)) 8))) (forall (($generated@@102 T@T) ) (! (= ($generated@@60 ($generated@@64 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@64 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@60 (type $generated@@104))))
(= (type ($generated@@65 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@65 $generated@@103 $generated@@104))
))) (= ($generated@@1 $generated@@63) 9)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= (type ($generated@@70 $generated@@106 $generated@@107 $generated@@108)) $generated@@63)
 :pattern ( ($generated@@70 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@60 (type $generated@@110))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@65 ($generated@@70 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@65 ($generated@@70 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@65 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@65 ($generated@@70 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@65 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@61) 10)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@121 $generated@@122)) 11))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@71 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@73 ($generated@@71 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@71 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@73 (type $generated@@127))))
(= (type ($generated@@58 $generated@@127 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@58 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 (type $generated@@134)))
(let (($generated@@136 (type $generated@@132)))
(= (type ($generated@@74 $generated@@131 $generated@@132 $generated@@133 $generated@@134)) ($generated@@71 $generated@@136 $generated@@135))))
 :pattern ( ($generated@@74 $generated@@131 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@137))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@58 ($generated@@74 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@138 $generated@@139) $generated@@140)))
 :weight 0
))) (and (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@58 ($generated@@74 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@58 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@58 ($generated@@74 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@58 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or true (= ($generated@@58 ($generated@@74 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@58 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Bool) ) (! (= (type ($generated@@59 $generated@@160 $generated@@161 $generated@@162 $generated@@163)) ($generated@@71 $generated@@61 $generated@@4))
 :pattern ( ($generated@@59 $generated@@160 $generated@@161 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@60 (type $generated@@169))))
 (=> (and (and (and (and (= (type $generated@@164) $generated@@61) (= (type $generated@@165) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@166) ($generated@@64 $generated@@4))) (= (type $generated@@168) $generated@@61)) (= (type $generated@@169) ($generated@@64 $generated@@170))) (= ($generated@@0 ($generated@@58 ($generated@@59 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (not (= $generated@@168 $generated@@164)) ($generated@@0 ($generated@@65 ($generated@@66 $generated@@165 $generated@@168) $generated@@166))) $generated@@167))))
 :pattern ( ($generated@@58 ($generated@@59 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(= (type ($generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@171 $generated@@174) $generated@@174)
 :pattern ( ($generated@@171 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@45) (= (type $generated@@177) $generated@@45)) (and ($generated@@175 $generated@@177) (<= ($generated@@51 $generated@@177) ($generated@@51 $generated@@176)))) (and (= ($generated@@175 ($generated@@49 $generated@@176 $generated@@177)) ($generated@@175 $generated@@176)) (= ($generated@@51 ($generated@@49 $generated@@176 $generated@@177)) (- ($generated@@51 $generated@@176) ($generated@@51 $generated@@177)))))
 :pattern ( ($generated@@49 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 Int) ) (!  (=> (<= 0 $generated@@178) (and ($generated@@175 ($generated@@50 $generated@@178)) (= ($generated@@51 ($generated@@50 $generated@@178)) $generated@@178)))
 :pattern ( ($generated@@50 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@45) (= (type $generated@@180) $generated@@45)) (or (or ($generated@@44 $generated@@179 $generated@@180) (= $generated@@179 $generated@@180)) ($generated@@44 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@44 $generated@@179 $generated@@180) ($generated@@44 $generated@@180 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@45) (<= 0 ($generated@@51 $generated@@181)))
 :pattern ( ($generated@@51 $generated@@181))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@45)
 :pattern ( ($generated@@182 $generated@@184))
)) (forall (($generated@@185 T@T) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(= ($generated@@183 $generated@@188 ($generated@@182 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@182 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (= (type $generated@@189) $generated@@45) (= (type $generated@@190) $generated@@45)) (and (and (and (=> ($generated@@44 $generated@@189 $generated@@190) (not (= $generated@@189 $generated@@190))) (=> (and ($generated@@175 $generated@@189) (not ($generated@@175 $generated@@190))) ($generated@@44 $generated@@189 $generated@@190))) (=> (and ($generated@@175 $generated@@189) ($generated@@175 $generated@@190)) (= ($generated@@44 $generated@@189 $generated@@190) (< ($generated@@51 $generated@@189) ($generated@@51 $generated@@190))))) (=> (and ($generated@@44 $generated@@189 $generated@@190) ($generated@@175 $generated@@190)) ($generated@@175 $generated@@189))))
 :pattern ( ($generated@@44 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@45) ($generated@@175 $generated@@191)) (= $generated@@191 ($generated@@50 ($generated@@51 $generated@@191))))
 :pattern ( ($generated@@51 $generated@@191))
 :pattern ( ($generated@@175 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) $generated@@45) (= (type $generated@@193) $generated@@45)) (and ($generated@@175 $generated@@193) (<= ($generated@@51 $generated@@193) ($generated@@51 $generated@@192)))) (or (and (= $generated@@193 ($generated@@50 0)) (= ($generated@@49 $generated@@192 $generated@@193) $generated@@192)) (and (not (= $generated@@193 ($generated@@50 0))) ($generated@@44 ($generated@@49 $generated@@192 $generated@@193) $generated@@192))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@182 ($generated@@171 $generated@@194)) ($generated@@171 ($generated@@182 $generated@@194)))
 :pattern ( ($generated@@182 ($generated@@171 $generated@@194)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@204 () Int)
(assert  (and (and (and (and (and (= (type $generated@@195) $generated@@45) (= (type $generated@@196) $generated@@45)) (= (type $generated@@198) ($generated@@71 $generated@@61 $generated@@4))) (= (type $generated@@199) $generated@@61)) (= (type $generated@@200) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@201) ($generated@@64 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@205 true))
(let (($generated@@206  (=> (< 0 ($generated@@51 $generated@@195)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@175 ($generated@@171 ($generated@@50 1)))) (=> ($generated@@175 ($generated@@171 ($generated@@50 1))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@51 ($generated@@171 ($generated@@50 1))) ($generated@@51 $generated@@195))) (=> (<= ($generated@@51 ($generated@@171 ($generated@@50 1))) ($generated@@51 $generated@@195)) (=> (= $generated@@196 ($generated@@49 $generated@@195 ($generated@@50 1))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@197) ($generated@@44 $generated@@196 $generated@@195)) (= $generated@@197 $generated@@197))) (=> (or (or (<= 0 $generated@@197) ($generated@@44 $generated@@196 $generated@@195)) (= $generated@@197 $generated@@197)) (=> (= (ControlFlow 0 2) (- 0 1)) (or ($generated@@44 $generated@@196 $generated@@195) (and (= $generated@@196 $generated@@195) (< $generated@@197 $generated@@197))))))))))))))
(let (($generated@@207  (=> (= $generated@@198 ($generated@@59 $generated@@199 $generated@@200 $generated@@201 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@206) (=> (= (ControlFlow 0 7) 6) $generated@@205)))))
(let (($generated@@208  (=> (and (and ($generated@@202 $generated@@200) ($generated@@203 $generated@@200)) (and (= 0 $generated@@204) (= (ControlFlow 0 8) 7))) $generated@@207)))
$generated@@208)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@49 (T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U) T@U)
(declare-fun $generated@@61 (T@U T@U T@U) T@U)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@166 (Int) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U) Int)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert (= ($generated@@1 $generated@@45) 6))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and (and (and (= (type $generated@@46) $generated@@45) (= (type $generated@@47) $generated@@45)) (= (type $generated@@48) $generated@@45)) (and ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))) ($generated@@44 $generated@@46 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@46 $generated@@48))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@1 ($generated@@53 $generated@@66 $generated@@67)) 7)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@58 ($generated@@53 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@53 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@59 ($generated@@53 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@53 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@59 (type $generated@@72))))
(= (type ($generated@@57 $generated@@72 $generated@@73)) $generated@@74))
 :pattern ( ($generated@@57 $generated@@72 $generated@@73))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 (type $generated@@77)))
(let (($generated@@79 (type $generated@@76)))
(= (type ($generated@@60 $generated@@75 $generated@@76 $generated@@77)) ($generated@@53 $generated@@79 $generated@@78))))
 :pattern ( ($generated@@60 $generated@@75 $generated@@76 $generated@@77))
))) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (let (($generated@@83 ($generated@@59 (type $generated@@80))))
 (=> (= (type $generated@@82) $generated@@83) (= ($generated@@57 ($generated@@60 $generated@@80 $generated@@81 $generated@@82) $generated@@81) $generated@@82)))
 :weight 0
))) (and (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (or (= $generated@@86 $generated@@87) (= ($generated@@57 ($generated@@60 $generated@@85 $generated@@86 $generated@@84) $generated@@87) ($generated@@57 $generated@@85 $generated@@87)))
 :weight 0
)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (or true (= ($generated@@57 ($generated@@60 $generated@@89 $generated@@90 $generated@@88) $generated@@91) ($generated@@57 $generated@@89 $generated@@91)))
 :weight 0
)))) (forall (($generated@@92 T@T) ) (= ($generated@@1 ($generated@@55 $generated@@92)) 8))) (forall (($generated@@93 T@T) ) (! (= ($generated@@51 ($generated@@55 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@55 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@51 (type $generated@@95))))
(= (type ($generated@@56 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@56 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@54) 9)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= (type ($generated@@61 $generated@@97 $generated@@98 $generated@@99)) $generated@@54)
 :pattern ( ($generated@@61 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@51 (type $generated@@101))))
 (=> (= (type $generated@@102) $generated@@103) (= ($generated@@56 ($generated@@61 $generated@@100 $generated@@101 $generated@@102) $generated@@101) $generated@@102)))
 :weight 0
))) (and (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@106 $generated@@107) (= ($generated@@56 ($generated@@61 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@56 $generated@@105 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or true (= ($generated@@56 ($generated@@61 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@56 $generated@@109 $generated@@111)))
 :weight 0
)))) (= ($generated@@1 $generated@@52) 10)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@62 $generated@@112 $generated@@113)) 11))) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@63 ($generated@@62 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@62 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@64 ($generated@@62 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@62 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@64 (type $generated@@118))))
(= (type ($generated@@49 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@49 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@65 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@62 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@65 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@64 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@49 ($generated@@65 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@49 ($generated@@65 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@49 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@49 ($generated@@65 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@49 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@49 ($generated@@65 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@49 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@50 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@62 $generated@@52 $generated@@4))
 :pattern ( ($generated@@50 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@51 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@52) (= (type $generated@@156) ($generated@@53 $generated@@52 $generated@@54))) (= (type $generated@@157) ($generated@@55 $generated@@4))) (= (type $generated@@159) $generated@@52)) (= (type $generated@@160) ($generated@@55 $generated@@161))) (= ($generated@@0 ($generated@@49 ($generated@@50 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@56 ($generated@@57 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@49 ($generated@@50 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (let (($generated@@164 (type $generated@@163)))
(= (type ($generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@162 $generated@@165) $generated@@165)
 :pattern ( ($generated@@162 $generated@@165))
)))
(assert (forall (($generated@@169 Int) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@45)
 :pattern ( ($generated@@166 $generated@@169))
)))
(assert (forall (($generated@@170 Int) ) (!  (=> (<= 0 $generated@@170) (and ($generated@@167 ($generated@@166 $generated@@170)) (= ($generated@@168 ($generated@@166 $generated@@170)) $generated@@170)))
 :pattern ( ($generated@@166 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@45) (= (type $generated@@172) $generated@@45)) (or (or ($generated@@44 $generated@@171 $generated@@172) (= $generated@@171 $generated@@172)) ($generated@@44 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@44 $generated@@171 $generated@@172) ($generated@@44 $generated@@172 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@45) (<= 0 ($generated@@168 $generated@@173)))
 :pattern ( ($generated@@168 $generated@@173))
)))
(assert  (and (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@45)
 :pattern ( ($generated@@174 $generated@@176))
)) (forall (($generated@@177 T@T) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(= ($generated@@175 $generated@@180 ($generated@@174 $generated@@179)) $generated@@179))
 :pattern ( ($generated@@174 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (= (type $generated@@181) $generated@@45) (= (type $generated@@182) $generated@@45)) (and (and (and (=> ($generated@@44 $generated@@181 $generated@@182) (not (= $generated@@181 $generated@@182))) (=> (and ($generated@@167 $generated@@181) (not ($generated@@167 $generated@@182))) ($generated@@44 $generated@@181 $generated@@182))) (=> (and ($generated@@167 $generated@@181) ($generated@@167 $generated@@182)) (= ($generated@@44 $generated@@181 $generated@@182) (< ($generated@@168 $generated@@181) ($generated@@168 $generated@@182))))) (=> (and ($generated@@44 $generated@@181 $generated@@182) ($generated@@167 $generated@@182)) ($generated@@167 $generated@@181))))
 :pattern ( ($generated@@44 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@183) $generated@@45) ($generated@@167 $generated@@183)) (= $generated@@183 ($generated@@166 ($generated@@168 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@183))
 :pattern ( ($generated@@167 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (! (= ($generated@@174 ($generated@@162 $generated@@184)) ($generated@@162 ($generated@@174 $generated@@184)))
 :pattern ( ($generated@@174 ($generated@@162 $generated@@184)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 () Int)
(assert  (and (and (and (and (and (= (type $generated@@185) $generated@@45) (= (type $generated@@186) $generated@@45)) (= (type $generated@@188) ($generated@@62 $generated@@52 $generated@@4))) (= (type $generated@@189) $generated@@52)) (= (type $generated@@190) ($generated@@53 $generated@@52 $generated@@54))) (= (type $generated@@191) ($generated@@55 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@195 true))
(let (($generated@@196  (=> (and ($generated@@44 ($generated@@166 10) $generated@@185) (= $generated@@186 ($generated@@162 ($generated@@166 10)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (or (<= 0 $generated@@187) ($generated@@44 $generated@@186 $generated@@185)) (= $generated@@187 $generated@@187))) (=> (or (or (<= 0 $generated@@187) ($generated@@44 $generated@@186 $generated@@185)) (= $generated@@187 $generated@@187)) (=> (= (ControlFlow 0 3) (- 0 2)) (or ($generated@@44 $generated@@186 $generated@@185) (and (= $generated@@186 $generated@@185) (< $generated@@187 $generated@@187)))))))))
(let (($generated@@197  (=> (< 0 ($generated@@168 $generated@@185)) (and (=> (= (ControlFlow 0 6) 3) $generated@@196) (=> (= (ControlFlow 0 6) 5) $generated@@195)))))
(let (($generated@@198 true))
(let (($generated@@199  (=> (= $generated@@188 ($generated@@50 $generated@@189 $generated@@190 $generated@@191 false)) (and (=> (= (ControlFlow 0 7) 6) $generated@@197) (=> (= (ControlFlow 0 7) 1) $generated@@198)))))
(let (($generated@@200  (=> (and (and ($generated@@192 $generated@@190) ($generated@@193 $generated@@190)) (and (= 0 $generated@@194) (= (ControlFlow 0 8) 7))) $generated@@199)))
$generated@@200)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@148 (Int) T@U)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 (T@U T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) Int)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 (Int) T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U) Bool)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@210 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@218 (T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@220 (T@T T@T) T@T)
(declare-fun $generated@@221 (T@T) T@T)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@223 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 () Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@279 () Bool)
(declare-fun $generated@@286 (T@U T@U) T@U)
(declare-fun $generated@@287 (T@U T@U) Bool)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (Int) Int)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@318 (T@U T@U T@U) Bool)
(declare-fun $generated@@331 (T@U T@U T@U) Bool)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 () T@U)
(declare-fun $generated@@357 (T@T) T@U)
(declare-fun $generated@@358 (T@U) Int)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@381 (T@U) Int)
(declare-fun $generated@@382 (T@T) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@T T@T) T@U)
(declare-fun $generated@@389 (T@T T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@391 (T@T) T@T)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@T T@T) T@U)
(declare-fun $generated@@407 (T@T T@T) T@T)
(declare-fun $generated@@408 (T@T) T@T)
(declare-fun $generated@@409 (T@T) T@T)
(declare-fun $generated@@423 (T@U) Bool)
(declare-fun $generated@@430 (T@T T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@508 (T@U T@U) T@U)
(declare-fun $generated@@516 (T@U T@U) T@U)
(declare-fun $generated@@527 (T@T) T@U)
(declare-fun $generated@@551 () T@T)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@616 (T@U) T@U)
(declare-fun $generated@@617 (T@U Int) T@U)
(declare-fun $generated@@626 (T@U) Int)
(declare-fun $generated@@628 (T@U) T@U)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@636 (T@U) T@U)
(declare-fun $generated@@640 (T@U) T@U)
(declare-fun $generated@@656 (T@U) Int)
(declare-fun $generated@@657 (T@U) Int)
(declare-fun $generated@@675 (T@U) T@U)
(declare-fun $generated@@754 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert  (and (= ($generated@@1 $generated@@143) 15) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@142 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@142 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@143) (= (type $generated@@146) $generated@@81)) (= (type $generated@@147) $generated@@81)) (= ($generated@@141 ($generated@@142 $generated@@145) $generated@@146 $generated@@147) (= $generated@@146 $generated@@147)))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@145) $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 Int) ) (! (= (type ($generated@@148 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@2) (= (type $generated@@151) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@150 ($generated@@148 0) $generated@@151))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@148 0) $generated@@151))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@81)
 :pattern ( ($generated@@157 $generated@@160))
)))
(assert  (=> (<= 1 $generated@@152) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@143) (= (type $generated@@162) $generated@@81)) (= (type $generated@@163) $generated@@81)) (or ($generated@@154 $generated@@162 $generated@@163) (and (not (= 1 $generated@@152)) (and ($generated@@155 $generated@@162 $generated@@80) ($generated@@155 $generated@@163 $generated@@80))))) (and (=> (not ($generated@@156 $generated@@162)) (let (($generated@@164 ($generated@@157 $generated@@162)))
(let (($generated@@165 ($generated@@158 $generated@@162)))
 (=> ($generated@@159 $generated@@163) (=> (<= $generated@@165 ($generated@@158 $generated@@163)) ($generated@@154 $generated@@164 ($generated@@157 $generated@@163))))))) (= ($generated@@153 ($generated@@142 $generated@@161) $generated@@162 $generated@@163) (ite ($generated@@156 $generated@@162) true (let (($generated@@166 ($generated@@157 $generated@@162)))
(let (($generated@@167 ($generated@@158 $generated@@162)))
 (and (and ($generated@@159 $generated@@163) (<= $generated@@167 ($generated@@158 $generated@@163))) ($generated@@153 $generated@@161 $generated@@166 ($generated@@157 $generated@@163)))))))))
 :pattern ( ($generated@@153 ($generated@@142 $generated@@161) $generated@@162 $generated@@163))
))))
(assert (= ($generated@@1 $generated@@169) 16))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@169) (= (type $generated@@171) $generated@@169)) (= (type $generated@@172) $generated@@169)) (and ($generated@@168 $generated@@170 $generated@@171) ($generated@@168 $generated@@171 $generated@@172))) ($generated@@168 $generated@@170 $generated@@172))
 :pattern ( ($generated@@168 $generated@@170 $generated@@171) ($generated@@168 $generated@@171 $generated@@172))
 :pattern ( ($generated@@168 $generated@@170 $generated@@171) ($generated@@168 $generated@@170 $generated@@172))
)))
(assert  (and (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@169)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
)) (forall (($generated@@179 Int) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@169)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@180) $generated@@169) (= (type $generated@@181) $generated@@143)) (= (type $generated@@182) $generated@@81)) (= (type $generated@@183) $generated@@81)) (and ($generated@@155 $generated@@182 $generated@@80) ($generated@@155 $generated@@183 $generated@@80))) (= ($generated@@173 $generated@@180 ($generated@@142 $generated@@181) $generated@@182 $generated@@183)  (and (=> (< 0 ($generated@@174 $generated@@180)) (or (and ($generated@@156 $generated@@182) ($generated@@156 $generated@@183)) (and (and ($generated@@159 $generated@@182) ($generated@@159 $generated@@183)) (=> (and ($generated@@159 $generated@@182) ($generated@@159 $generated@@183)) (and (= ($generated@@158 $generated@@182) ($generated@@158 $generated@@183)) ($generated@@173 ($generated@@175 $generated@@180 ($generated@@176 1)) $generated@@181 ($generated@@157 $generated@@182) ($generated@@157 $generated@@183))))))) (=> (and (not (= $generated@@180 ($generated@@176 0))) (= ($generated@@174 $generated@@180) 0)) ($generated@@141 $generated@@181 $generated@@182 $generated@@183)))))
 :pattern ( ($generated@@173 $generated@@180 ($generated@@142 $generated@@181) $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@2) ($generated@@155 $generated@@184 ($generated@@148 0)))
 :pattern ( ($generated@@155 $generated@@184 ($generated@@148 0)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 Int) ($generated@@187 Int) ) (!  (=> (= (type $generated@@185) $generated@@169) (=> (and (and (<= 0 $generated@@186) (<= 0 $generated@@187)) (<= (+ $generated@@186 $generated@@187) ($generated@@174 $generated@@185))) (= ($generated@@175 ($generated@@175 $generated@@185 ($generated@@176 $generated@@186)) ($generated@@176 $generated@@187)) ($generated@@175 $generated@@185 ($generated@@176 (+ $generated@@186 $generated@@187))))))
 :pattern ( ($generated@@175 ($generated@@175 $generated@@185 ($generated@@176 $generated@@186)) ($generated@@176 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@190 $generated@@191)) $generated@@68)
 :pattern ( ($generated@@189 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (and (= (type $generated@@192) $generated@@68) (= (type $generated@@193) $generated@@68)) (= (type $generated@@194) $generated@@81)) ($generated@@155 $generated@@194 ($generated@@189 $generated@@192 $generated@@193))) ($generated@@188 $generated@@194))
 :pattern ( ($generated@@188 $generated@@194) ($generated@@155 $generated@@194 ($generated@@189 $generated@@192 $generated@@193)))
)))
(assert  (and (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@169)
 :pattern ( ($generated@@196 $generated@@198))
)) (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@169)
 :pattern ( ($generated@@197 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) $generated@@81) (= (type $generated@@201) $generated@@81)) true) (= ($generated@@195 $generated@@200 $generated@@201)  (and (= ($generated@@196 $generated@@200) ($generated@@196 $generated@@201)) (= ($generated@@197 $generated@@200) ($generated@@197 $generated@@201)))))
 :pattern ( ($generated@@195 $generated@@200 $generated@@201))
)))
(assert  (and (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@72)
 :pattern ( ($generated@@202 $generated@@204))
)) (= (type $generated@@203) $generated@@81)))
(assert (= ($generated@@202 $generated@@203) $generated@@63))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@205 $generated@@207)) $generated@@68)
 :pattern ( ($generated@@205 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (= (type $generated@@208) ($generated@@82 $generated@@169 $generated@@2)) (= (type $generated@@209) $generated@@68)) ($generated@@155 $generated@@208 ($generated@@205 $generated@@209))) ($generated@@206 $generated@@208))
 :pattern ( ($generated@@155 $generated@@208 ($generated@@205 $generated@@209)))
)))
(assert  (=> (<= 2 $generated@@152) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (and (= (type $generated@@211) $generated@@143) (= (type $generated@@212) $generated@@81)) (= (type $generated@@213) $generated@@81)) (and (and ($generated@@155 $generated@@212 $generated@@80) ($generated@@155 $generated@@213 $generated@@80)) ($generated@@153 ($generated@@142 $generated@@211) $generated@@212 $generated@@213))) (forall (($generated@@214 T@U) ) (!  (=> (= (type $generated@@214) $generated@@169) ($generated@@210 ($generated@@142 $generated@@211) $generated@@214 $generated@@212 $generated@@213))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@211) $generated@@214 $generated@@212 $generated@@213))
)))
 :pattern ( ($generated@@153 ($generated@@142 $generated@@211) $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@143) (= (type $generated@@216) $generated@@81)) (= (type $generated@@217) $generated@@81)) (and ($generated@@155 $generated@@216 $generated@@80) ($generated@@155 $generated@@217 $generated@@80))) (= ($generated@@141 ($generated@@142 $generated@@215) $generated@@216 $generated@@217)  (or (and ($generated@@156 $generated@@216) ($generated@@156 $generated@@217)) (and (and ($generated@@159 $generated@@216) ($generated@@159 $generated@@217)) (=> (and ($generated@@159 $generated@@216) ($generated@@159 $generated@@217)) (and (= ($generated@@158 $generated@@216) ($generated@@158 $generated@@217)) ($generated@@141 $generated@@215 ($generated@@157 $generated@@216) ($generated@@157 $generated@@217))))))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@215) $generated@@216 $generated@@217))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (= ($generated@@1 ($generated@@220 $generated@@224 $generated@@225)) 17)) (forall (($generated@@226 T@T) ($generated@@227 T@T) ) (! (= ($generated@@221 ($generated@@220 $generated@@226 $generated@@227)) $generated@@226)
 :pattern ( ($generated@@220 $generated@@226 $generated@@227))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= ($generated@@222 ($generated@@220 $generated@@228 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@220 $generated@@228 $generated@@229))
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@222 (type $generated@@230))))
(= (type ($generated@@218 $generated@@230 $generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@218 $generated@@230 $generated@@231 $generated@@232))
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 (type $generated@@237)))
(let (($generated@@239 (type $generated@@235)))
(= (type ($generated@@223 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@220 $generated@@239 $generated@@238))))
 :pattern ( ($generated@@223 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@222 (type $generated@@240))))
 (=> (= (type $generated@@243) $generated@@244) (= ($generated@@218 ($generated@@223 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@241 $generated@@242) $generated@@243)))
 :weight 0
))) (and (and (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or (= $generated@@247 $generated@@249) (= ($generated@@218 ($generated@@223 $generated@@246 $generated@@247 $generated@@248 $generated@@245) $generated@@249 $generated@@250) ($generated@@218 $generated@@246 $generated@@249 $generated@@250)))
 :weight 0
)) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (or (= $generated@@254 $generated@@256) (= ($generated@@218 ($generated@@223 $generated@@252 $generated@@253 $generated@@254 $generated@@251) $generated@@255 $generated@@256) ($generated@@218 $generated@@252 $generated@@255 $generated@@256)))
 :weight 0
))) (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (or true (= ($generated@@218 ($generated@@223 $generated@@258 $generated@@259 $generated@@260 $generated@@257) $generated@@261 $generated@@262) ($generated@@218 $generated@@258 $generated@@261 $generated@@262)))
 :weight 0
)))) (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 Bool) ) (! (= (type ($generated@@219 $generated@@263 $generated@@264 $generated@@265 $generated@@266)) ($generated@@220 $generated@@83 $generated@@4))
 :pattern ( ($generated@@219 $generated@@263 $generated@@264 $generated@@265 $generated@@266))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 Bool) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@71 (type $generated@@272))))
 (=> (and (and (and (and (= (type $generated@@267) $generated@@83) (= (type $generated@@268) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@269) ($generated@@70 $generated@@4))) (= (type $generated@@271) $generated@@83)) (= (type $generated@@272) ($generated@@70 $generated@@273))) (= ($generated@@0 ($generated@@218 ($generated@@219 $generated@@267 $generated@@268 $generated@@269 $generated@@270) $generated@@271 $generated@@272))  (=> (and (not (= $generated@@271 $generated@@267)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@268 $generated@@271) $generated@@269))) $generated@@270))))
 :pattern ( ($generated@@218 ($generated@@219 $generated@@267 $generated@@268 $generated@@269 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@274 $generated@@276)) $generated@@81)
 :pattern ( ($generated@@274 $generated@@276))
)))
(assert  (=> (<= 1 $generated@@152) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@143) (or $generated@@275 (not (= 1 $generated@@152)))) ($generated@@155 ($generated@@274 $generated@@277) $generated@@80))
 :pattern ( ($generated@@274 $generated@@277))
))))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@278 $generated@@280)) $generated@@81)
 :pattern ( ($generated@@278 $generated@@280))
)))
(assert  (=> (<= 1 $generated@@152) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@143) (or $generated@@279 (not (= 1 $generated@@152)))) ($generated@@155 ($generated@@278 $generated@@281) $generated@@80))
 :pattern ( ($generated@@278 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (= (type $generated@@282) $generated@@143) (= (type $generated@@283) $generated@@81)) (= (type $generated@@284) $generated@@81)) (forall (($generated@@285 Int) ) (!  (=> (<= 0 $generated@@285) ($generated@@173 ($generated@@176 $generated@@285) ($generated@@142 $generated@@282) $generated@@283 $generated@@284))
 :pattern ( ($generated@@173 ($generated@@176 $generated@@285) ($generated@@142 $generated@@282) $generated@@283 $generated@@284))
))) ($generated@@141 ($generated@@142 $generated@@282) $generated@@283 $generated@@284))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (= (type ($generated@@286 $generated@@288 $generated@@289)) $generated@@81)
 :pattern ( ($generated@@286 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (= (type $generated@@290) $generated@@68) (= (type $generated@@291) $generated@@68)) (= (type $generated@@292) $generated@@169)) (= (type $generated@@293) $generated@@169)) (= ($generated@@155 ($generated@@286 $generated@@292 $generated@@293) ($generated@@189 $generated@@290 $generated@@291))  (and ($generated@@287 $generated@@292 $generated@@290) ($generated@@287 $generated@@293 $generated@@291))))
 :pattern ( ($generated@@155 ($generated@@286 $generated@@292 $generated@@293) ($generated@@189 $generated@@290 $generated@@291)))
)))
(assert ($generated@@155 $generated@@203 $generated@@80))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@294)) ($generated@@78 $generated@@203 $generated@@80 $generated@@294))
 :pattern ( ($generated@@78 $generated@@203 $generated@@80 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@81) (= (type $generated@@296) $generated@@81)) (= ($generated@@195 $generated@@295 $generated@@296) (= $generated@@295 $generated@@296)))
 :pattern ( ($generated@@195 $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) $generated@@169) (= (type $generated@@298) $generated@@143)) (= (type $generated@@299) $generated@@81)) (= (type $generated@@300) $generated@@81)) (= (type $generated@@301) $generated@@169)) (and ($generated@@168 $generated@@297 $generated@@301) ($generated@@173 $generated@@301 ($generated@@142 $generated@@298) $generated@@299 $generated@@300))) ($generated@@173 $generated@@297 ($generated@@142 $generated@@298) $generated@@299 $generated@@300))
 :pattern ( ($generated@@173 $generated@@297 ($generated@@142 $generated@@298) $generated@@299 $generated@@300) ($generated@@173 $generated@@301 ($generated@@142 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@68)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) ($generated@@82 $generated@@169 $generated@@4)) (= (type $generated@@305) $generated@@68)) (= ($generated@@155 $generated@@304 ($generated@@302 $generated@@305)) (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@169) ($generated@@0 ($generated@@88 $generated@@304 $generated@@306))) ($generated@@287 $generated@@306 $generated@@305))
 :pattern ( ($generated@@88 $generated@@304 $generated@@306))
))))
 :pattern ( ($generated@@155 $generated@@304 ($generated@@302 $generated@@305)))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@68)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) ($generated@@82 $generated@@169 $generated@@4)) (= (type $generated@@310) $generated@@68)) (= ($generated@@155 $generated@@309 ($generated@@307 $generated@@310)) (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@169) ($generated@@0 ($generated@@88 $generated@@309 $generated@@311))) ($generated@@287 $generated@@311 $generated@@310))
 :pattern ( ($generated@@88 $generated@@309 $generated@@311))
))))
 :pattern ( ($generated@@155 $generated@@309 ($generated@@307 $generated@@310)))
)))
(assert (forall (($generated@@313 Int) ) (! (= ($generated@@312 $generated@@313) $generated@@313)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 (type $generated@@315)))
(= (type ($generated@@314 $generated@@315)) $generated@@316))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (= ($generated@@314 $generated@@317) $generated@@317)
 :pattern ( ($generated@@314 $generated@@317))
)))
(assert  (=> (<= 2 $generated@@152) (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@319) $generated@@143) (= (type $generated@@320) $generated@@169)) (= (type $generated@@321) $generated@@81)) (= (type $generated@@322) $generated@@81)) (or ($generated@@318 ($generated@@314 $generated@@320) $generated@@321 $generated@@322) (and (not (= 2 $generated@@152)) (and ($generated@@155 $generated@@321 $generated@@80) ($generated@@155 $generated@@322 $generated@@80))))) (and (and (=> (< 0 ($generated@@174 $generated@@320)) (=> (not ($generated@@156 $generated@@321)) (let (($generated@@323 ($generated@@157 $generated@@321)))
(let (($generated@@324 ($generated@@158 $generated@@321)))
 (=> ($generated@@159 $generated@@322) (=> (<= $generated@@324 ($generated@@158 $generated@@322)) ($generated@@318 ($generated@@175 $generated@@320 ($generated@@176 1)) $generated@@323 ($generated@@157 $generated@@322)))))))) (=> (=> (< 0 ($generated@@174 $generated@@320)) (ite ($generated@@156 $generated@@321) true (let (($generated@@325 ($generated@@157 $generated@@321)))
(let (($generated@@326 ($generated@@158 $generated@@321)))
 (and (and ($generated@@159 $generated@@322) (<= $generated@@326 ($generated@@158 $generated@@322))) ($generated@@210 ($generated@@142 $generated@@319) ($generated@@175 $generated@@320 ($generated@@176 1)) $generated@@325 ($generated@@157 $generated@@322))))))) (=> (= ($generated@@312 0) ($generated@@174 $generated@@320)) (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@169) ($generated@@168 $generated@@327 $generated@@320)) ($generated@@318 $generated@@327 $generated@@321 $generated@@322))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@319) $generated@@327 $generated@@321 $generated@@322))
))))) (= ($generated@@210 ($generated@@142 $generated@@319) ($generated@@314 $generated@@320) $generated@@321 $generated@@322)  (and (=> (< 0 ($generated@@174 $generated@@320)) (ite ($generated@@156 $generated@@321) true (let (($generated@@328 ($generated@@157 $generated@@321)))
(let (($generated@@329 ($generated@@158 $generated@@321)))
 (and (and ($generated@@159 $generated@@322) (<= $generated@@329 ($generated@@158 $generated@@322))) ($generated@@210 ($generated@@142 $generated@@319) ($generated@@175 $generated@@320 ($generated@@176 1)) $generated@@328 ($generated@@157 $generated@@322))))))) (=> (= ($generated@@312 0) ($generated@@174 $generated@@320)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@169) ($generated@@168 $generated@@330 $generated@@320)) ($generated@@210 ($generated@@142 $generated@@319) $generated@@330 $generated@@321 $generated@@322))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@319) $generated@@330 $generated@@321 $generated@@322))
)))))))
 :weight 3
 :pattern ( ($generated@@210 ($generated@@142 $generated@@319) ($generated@@314 $generated@@320) $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@332) $generated@@68) (= (type $generated@@333) $generated@@68)) (= (type $generated@@334) $generated@@169)) (= (type $generated@@335) $generated@@169)) (= (type $generated@@336) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@336)) (= ($generated@@78 ($generated@@286 $generated@@334 $generated@@335) ($generated@@189 $generated@@332 $generated@@333) $generated@@336)  (and ($generated@@331 $generated@@334 $generated@@332 $generated@@336) ($generated@@331 $generated@@335 $generated@@333 $generated@@336))))
 :pattern ( ($generated@@78 ($generated@@286 $generated@@334 $generated@@335) ($generated@@189 $generated@@332 $generated@@333) $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@81) (= ($generated@@188 $generated@@337) (= ($generated@@202 $generated@@337) $generated@@61)))
 :pattern ( ($generated@@188 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@81) (= ($generated@@156 $generated@@338) (= ($generated@@202 $generated@@338) $generated@@63)))
 :pattern ( ($generated@@156 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@81) (= ($generated@@159 $generated@@339) (= ($generated@@202 $generated@@339) $generated@@65)))
 :pattern ( ($generated@@159 $generated@@339))
)))
(assert  (and (forall (($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@342)) $generated@@143)
 :pattern ( ($generated@@340 $generated@@342))
)) (= (type $generated@@341) $generated@@143)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (and (= (type $generated@@343) $generated@@143) (= (type $generated@@344) $generated@@169)) (= (type $generated@@345) $generated@@81)) (= (type $generated@@346) $generated@@81)) (= ($generated@@210 $generated@@343 $generated@@344 $generated@@345 $generated@@346) ($generated@@210 $generated@@341 $generated@@344 $generated@@345 $generated@@346)))
 :pattern ( ($generated@@210 ($generated@@340 $generated@@343) $generated@@344 $generated@@345 $generated@@346))
)))
(assert  (=> (<= 2 $generated@@152) (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (and (= (type $generated@@347) $generated@@143) (= (type $generated@@348) $generated@@81)) (= (type $generated@@349) $generated@@81)) (and (and ($generated@@155 $generated@@348 $generated@@80) ($generated@@155 $generated@@349 $generated@@80)) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@169) ($generated@@210 ($generated@@142 $generated@@347) $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@347) $generated@@350 $generated@@348 $generated@@349))
)))) ($generated@@153 ($generated@@142 $generated@@347) $generated@@348 $generated@@349))
 :pattern ( ($generated@@153 ($generated@@142 $generated@@347) $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@81) ($generated@@188 $generated@@351)) (exists (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (and (and (= (type $generated@@352) $generated@@169) (= (type $generated@@353) $generated@@169)) (= $generated@@351 ($generated@@286 $generated@@352 $generated@@353)))
 :no-pattern (type $generated@@352)
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
)))
 :pattern ( ($generated@@188 $generated@@351))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@81) ($generated@@159 $generated@@354)) (exists (($generated@@355 Int) ($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@81) (= $generated@@354 ($generated@@79 $generated@@355 $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
)))
 :pattern ( ($generated@@159 $generated@@354))
)))
(assert  (and (and (forall (($generated@@361 T@T) ) (= ($generated@@1 ($generated@@359 $generated@@361)) 18)) (forall (($generated@@362 T@T) ) (! (= ($generated@@360 ($generated@@359 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@359 $generated@@362))
))) (forall (($generated@@363 T@T) ) (! (= (type ($generated@@357 $generated@@363)) ($generated@@359 $generated@@363))
 :pattern ( ($generated@@357 $generated@@363))
))))
(assert (forall (($generated@@364 T@T) ) (! (= ($generated@@358 ($generated@@357 $generated@@364)) 0)
 :pattern ( ($generated@@357 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@81) ($generated@@156 $generated@@365)) (= $generated@@365 $generated@@203))
 :pattern ( ($generated@@156 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@366) $generated@@169) (= (type $generated@@367) $generated@@143)) (= (type $generated@@368) $generated@@81)) (= (type $generated@@369) $generated@@81)) (not (= $generated@@366 ($generated@@176 0)))) (= ($generated@@173 $generated@@366 ($generated@@142 $generated@@367) $generated@@368 $generated@@369) ($generated@@173 $generated@@366 $generated@@367 $generated@@368 $generated@@369)))
 :pattern ( ($generated@@173 $generated@@366 ($generated@@142 $generated@@367) $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) $generated@@143) (= (type $generated@@371) $generated@@81)) (= (type $generated@@372) $generated@@81)) (= ($generated@@141 ($generated@@142 $generated@@370) $generated@@371 $generated@@372) ($generated@@141 $generated@@370 $generated@@371 $generated@@372)))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@370) $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) $generated@@143) (= (type $generated@@374) $generated@@81)) (= (type $generated@@375) $generated@@81)) (= ($generated@@153 ($generated@@142 $generated@@373) $generated@@374 $generated@@375) ($generated@@153 $generated@@373 $generated@@374 $generated@@375)))
 :pattern ( ($generated@@153 ($generated@@142 $generated@@373) $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (= (type ($generated@@376 $generated@@377)) $generated@@169)
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@68) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@331 ($generated@@376 $generated@@378) $generated@@379 $generated@@380) ($generated@@78 $generated@@378 $generated@@379 $generated@@380)))
 :pattern ( ($generated@@331 ($generated@@376 $generated@@378) $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@383 T@T) ) (! (= (type ($generated@@382 $generated@@383)) ($generated@@82 $generated@@383 $generated@@2))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@86 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@82 $generated@@385 $generated@@2)) (and (= (= ($generated@@381 $generated@@384) 0) (= $generated@@384 ($generated@@382 $generated@@385))) (=> (not (= ($generated@@381 $generated@@384) 0)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (< 0 ($generated ($generated@@88 $generated@@384 $generated@@386))))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert  (and (and (and (and (forall (($generated@@392 T@T) ($generated@@393 T@T) ) (= ($generated@@1 ($generated@@389 $generated@@392 $generated@@393)) 19)) (forall (($generated@@394 T@T) ($generated@@395 T@T) ) (! (= ($generated@@390 ($generated@@389 $generated@@394 $generated@@395)) $generated@@394)
 :pattern ( ($generated@@389 $generated@@394 $generated@@395))
))) (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (! (= ($generated@@391 ($generated@@389 $generated@@396 $generated@@397)) $generated@@397)
 :pattern ( ($generated@@389 $generated@@396 $generated@@397))
))) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@390 (type $generated@@398))))
(= (type ($generated@@387 $generated@@398)) ($generated@@82 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@387 $generated@@398))
))) (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (! (= (type ($generated@@388 $generated@@400 $generated@@401)) ($generated@@389 $generated@@400 $generated@@401))
 :pattern ( ($generated@@388 $generated@@400 $generated@@401))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@T) ) (! (let (($generated@@404 (type $generated@@402)))
 (not ($generated@@0 ($generated@@88 ($generated@@387 ($generated@@388 $generated@@404 $generated@@403)) $generated@@402))))
 :pattern ( (let (($generated@@404 (type $generated@@402)))
($generated@@88 ($generated@@387 ($generated@@388 $generated@@404 $generated@@403)) $generated@@402)))
)))
(assert  (and (and (and (and (forall (($generated@@410 T@T) ($generated@@411 T@T) ) (= ($generated@@1 ($generated@@407 $generated@@410 $generated@@411)) 20)) (forall (($generated@@412 T@T) ($generated@@413 T@T) ) (! (= ($generated@@408 ($generated@@407 $generated@@412 $generated@@413)) $generated@@412)
 :pattern ( ($generated@@407 $generated@@412 $generated@@413))
))) (forall (($generated@@414 T@T) ($generated@@415 T@T) ) (! (= ($generated@@409 ($generated@@407 $generated@@414 $generated@@415)) $generated@@415)
 :pattern ( ($generated@@407 $generated@@414 $generated@@415))
))) (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@408 (type $generated@@416))))
(= (type ($generated@@405 $generated@@416)) ($generated@@82 $generated@@417 $generated@@4)))
 :pattern ( ($generated@@405 $generated@@416))
))) (forall (($generated@@418 T@T) ($generated@@419 T@T) ) (! (= (type ($generated@@406 $generated@@418 $generated@@419)) ($generated@@407 $generated@@418 $generated@@419))
 :pattern ( ($generated@@406 $generated@@418 $generated@@419))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@T) ) (! (let (($generated@@422 (type $generated@@420)))
 (not ($generated@@0 ($generated@@88 ($generated@@405 ($generated@@406 $generated@@422 $generated@@421)) $generated@@420))))
 :pattern ( (let (($generated@@422 (type $generated@@420)))
($generated@@88 ($generated@@405 ($generated@@406 $generated@@422 $generated@@421)) $generated@@420)))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@424) $generated@@169) (= (type $generated@@425) $generated@@169)) (and ($generated@@423 $generated@@425) (<= ($generated@@174 $generated@@425) ($generated@@174 $generated@@424)))) (and (= ($generated@@423 ($generated@@175 $generated@@424 $generated@@425)) ($generated@@423 $generated@@424)) (= ($generated@@174 ($generated@@175 $generated@@424 $generated@@425)) (- ($generated@@174 $generated@@424) ($generated@@174 $generated@@425)))))
 :pattern ( ($generated@@175 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 Int) ) (!  (=> (<= 0 $generated@@426) (and ($generated@@423 ($generated@@176 $generated@@426)) (= ($generated@@174 ($generated@@176 $generated@@426)) $generated@@426)))
 :pattern ( ($generated@@176 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@86 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@82 $generated@@428 $generated@@2)) (= ($generated@@206 $generated@@427) (forall (($generated@@429 T@U) ) (!  (=> (= (type $generated@@429) $generated@@428) (and (<= 0 ($generated ($generated@@88 $generated@@427 $generated@@429))) (<= ($generated ($generated@@88 $generated@@427 $generated@@429)) ($generated@@381 $generated@@427))))
 :pattern ( ($generated@@88 $generated@@427 $generated@@429))
)))))
 :pattern ( ($generated@@206 $generated@@427))
)))
(assert (forall (($generated@@431 T@T) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@431)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@169) ($generated@@287 $generated@@433 $generated@@80)) (and (= ($generated@@376 ($generated@@430 $generated@@81 $generated@@433)) $generated@@433) ($generated@@155 ($generated@@430 $generated@@81 $generated@@433) $generated@@80)))
 :pattern ( ($generated@@287 $generated@@433 $generated@@80))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (= (type $generated@@434) $generated@@143) (= (type $generated@@435) $generated@@81)) (= (type $generated@@436) $generated@@81)) (= ($generated@@141 ($generated@@142 $generated@@434) $generated@@435 $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@169) ($generated@@173 $generated@@437 ($generated@@142 $generated@@434) $generated@@435 $generated@@436))
 :pattern ( ($generated@@173 $generated@@437 ($generated@@142 $generated@@434) $generated@@435 $generated@@436))
))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@434) $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@391 (type $generated@@438))))
(let (($generated@@440 ($generated@@390 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@389 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@388 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) ($generated@@0 ($generated@@88 ($generated@@387 $generated@@438) $generated@@441)))
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@387 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@391 (type $generated@@443))))
(= (type ($generated@@442 $generated@@443)) ($generated@@82 $generated@@444 $generated@@4)))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@391 (type $generated@@445))))
(let (($generated@@447 ($generated@@390 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@389 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@388 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@446) ($generated@@0 ($generated@@88 ($generated@@442 $generated@@445) $generated@@448)))
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@442 $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@409 (type $generated@@449))))
(let (($generated@@451 ($generated@@408 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@407 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@406 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ) (!  (and (= (type $generated@@452) $generated@@451) ($generated@@0 ($generated@@88 ($generated@@405 $generated@@449) $generated@@452)))
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@405 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@409 (type $generated@@454))))
(= (type ($generated@@453 $generated@@454)) ($generated@@82 $generated@@455 $generated@@4)))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@409 (type $generated@@456))))
(let (($generated@@458 ($generated@@408 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@407 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@406 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ) (!  (and (= (type $generated@@459) $generated@@457) ($generated@@0 ($generated@@88 ($generated@@453 $generated@@456) $generated@@459)))
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@453 $generated@@456))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) ($generated@@82 $generated@@169 $generated@@2)) (= (type $generated@@461) $generated@@68)) (= ($generated@@155 $generated@@460 ($generated@@205 $generated@@461)) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@169) (< 0 ($generated ($generated@@88 $generated@@460 $generated@@462)))) ($generated@@287 $generated@@462 $generated@@461))
 :pattern ( ($generated@@88 $generated@@460 $generated@@462))
))))
 :pattern ( ($generated@@155 $generated@@460 ($generated@@205 $generated@@461)))
)))
(assert  (=> (<= 2 $generated@@152) (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@463) $generated@@143) (= (type $generated@@464) $generated@@169)) (= (type $generated@@465) $generated@@81)) (= (type $generated@@466) $generated@@81)) (or ($generated@@318 $generated@@464 $generated@@465 $generated@@466) (and (not (= 2 $generated@@152)) (and ($generated@@155 $generated@@465 $generated@@80) ($generated@@155 $generated@@466 $generated@@80))))) true)
 :pattern ( ($generated@@210 $generated@@463 $generated@@464 $generated@@465 $generated@@466))
))))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@169) (= (type $generated@@468) $generated@@169)) (or (or ($generated@@168 $generated@@467 $generated@@468) (= $generated@@467 $generated@@468)) ($generated@@168 $generated@@468 $generated@@467)))
 :pattern ( ($generated@@168 $generated@@467 $generated@@468) ($generated@@168 $generated@@468 $generated@@467))
)))
(assert  (=> (<= 1 $generated@@152) (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (and (= (type $generated@@469) $generated@@143) (= (type $generated@@470) $generated@@81)) (= (type $generated@@471) $generated@@81)) (or ($generated@@154 $generated@@470 $generated@@471) (and (not (= 1 $generated@@152)) (and ($generated@@155 $generated@@470 $generated@@80) ($generated@@155 $generated@@471 $generated@@80))))) true)
 :pattern ( ($generated@@153 $generated@@469 $generated@@470 $generated@@471))
))))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (and (= (type $generated@@472) ($generated@@82 $generated@@169 $generated@@4)) (= (type $generated@@473) $generated@@68)) (= (type $generated@@474) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@472 ($generated@@302 $generated@@473) $generated@@474) (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@169) ($generated@@0 ($generated@@88 $generated@@472 $generated@@475))) ($generated@@331 $generated@@475 $generated@@473 $generated@@474))
 :pattern ( ($generated@@88 $generated@@472 $generated@@475))
))))
 :pattern ( ($generated@@78 $generated@@472 ($generated@@302 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@82 $generated@@169 $generated@@4)) (= (type $generated@@477) $generated@@68)) (= (type $generated@@478) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@476 ($generated@@307 $generated@@477) $generated@@478) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@169) ($generated@@0 ($generated@@88 $generated@@476 $generated@@479))) ($generated@@331 $generated@@479 $generated@@477 $generated@@478))
 :pattern ( ($generated@@88 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@78 $generated@@476 ($generated@@307 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
(= ($generated ($generated@@88 ($generated@@382 $generated@@481) $generated@@480)) 0))
 :pattern ( (let (($generated@@481 (type $generated@@480)))
($generated@@88 ($generated@@382 $generated@@481) $generated@@480)))
)))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) ($generated@@82 $generated@@169 $generated@@4))
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@391 (type $generated@@485))))
(let (($generated@@487 ($generated@@390 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485)) ($generated@@82 $generated@@487 $generated@@486))))
 :pattern ( ($generated@@483 $generated@@485))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) ($generated@@389 $generated@@169 $generated@@169)) (= (type $generated@@489) $generated@@169)) (= ($generated@@0 ($generated@@88 ($generated@@482 $generated@@488) $generated@@489))  (and ($generated@@0 ($generated@@88 ($generated@@387 $generated@@488) ($generated@@196 ($generated@@430 $generated@@81 $generated@@489)))) (= ($generated@@88 ($generated@@483 $generated@@488) ($generated@@196 ($generated@@430 $generated@@81 $generated@@489))) ($generated@@197 ($generated@@430 $generated@@81 $generated@@489))))))
 :pattern ( ($generated@@88 ($generated@@482 $generated@@488) $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) ($generated@@82 $generated@@169 $generated@@4))
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@409 (type $generated@@493))))
(let (($generated@@495 ($generated@@408 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493)) ($generated@@82 $generated@@495 $generated@@494))))
 :pattern ( ($generated@@491 $generated@@493))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) ($generated@@407 $generated@@169 $generated@@169)) (= (type $generated@@497) $generated@@169)) (= ($generated@@0 ($generated@@88 ($generated@@490 $generated@@496) $generated@@497))  (and ($generated@@0 ($generated@@88 ($generated@@405 $generated@@496) ($generated@@196 ($generated@@430 $generated@@81 $generated@@497)))) (= ($generated@@88 ($generated@@491 $generated@@496) ($generated@@196 ($generated@@430 $generated@@81 $generated@@497))) ($generated@@197 ($generated@@430 $generated@@81 $generated@@497))))))
 :pattern ( ($generated@@88 ($generated@@490 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (! (let (($generated@@500 (type $generated@@499)))
(let (($generated@@501 ($generated@@390 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@389 $generated@@501 $generated@@500)) (= ($generated@@0 ($generated@@88 ($generated@@442 $generated@@498) $generated@@499)) (exists (($generated@@502 T@U) ) (!  (and (= (type $generated@@502) $generated@@501) (and ($generated@@0 ($generated@@88 ($generated@@387 $generated@@498) $generated@@502)) (= $generated@@499 ($generated@@88 ($generated@@483 $generated@@498) $generated@@502))))
 :pattern ( ($generated@@88 ($generated@@387 $generated@@498) $generated@@502))
 :pattern ( ($generated@@88 ($generated@@483 $generated@@498) $generated@@502))
))))))
 :pattern ( ($generated@@88 ($generated@@442 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(let (($generated@@506 ($generated@@408 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@407 $generated@@506 $generated@@505)) (= ($generated@@0 ($generated@@88 ($generated@@453 $generated@@503) $generated@@504)) (exists (($generated@@507 T@U) ) (!  (and (= (type $generated@@507) $generated@@506) (and ($generated@@0 ($generated@@88 ($generated@@405 $generated@@503) $generated@@507)) (= $generated@@504 ($generated@@88 ($generated@@491 $generated@@503) $generated@@507))))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@503) $generated@@507))
 :pattern ( ($generated@@88 ($generated@@491 $generated@@503) $generated@@507))
))))))
 :pattern ( ($generated@@88 ($generated@@453 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (! (= (type ($generated@@508 $generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) ($generated@@389 $generated@@169 $generated@@169)) (= (type $generated@@512) $generated@@68)) (= (type $generated@@513) $generated@@68)) (= (type $generated@@514) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@511 ($generated@@508 $generated@@512 $generated@@513) $generated@@514) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@169) ($generated@@0 ($generated@@88 ($generated@@387 $generated@@511) $generated@@515))) (and ($generated@@331 ($generated@@88 ($generated@@483 $generated@@511) $generated@@515) $generated@@513 $generated@@514) ($generated@@331 $generated@@515 $generated@@512 $generated@@514)))
 :pattern ( ($generated@@88 ($generated@@483 $generated@@511) $generated@@515))
 :pattern ( ($generated@@88 ($generated@@387 $generated@@511) $generated@@515))
))))
 :pattern ( ($generated@@78 $generated@@511 ($generated@@508 $generated@@512 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (! (= (type ($generated@@516 $generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) ($generated@@407 $generated@@169 $generated@@169)) (= (type $generated@@520) $generated@@68)) (= (type $generated@@521) $generated@@68)) (= (type $generated@@522) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@519 ($generated@@516 $generated@@520 $generated@@521) $generated@@522) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@169) ($generated@@0 ($generated@@88 ($generated@@405 $generated@@519) $generated@@523))) (and ($generated@@331 ($generated@@88 ($generated@@491 $generated@@519) $generated@@523) $generated@@521 $generated@@522) ($generated@@331 $generated@@523 $generated@@520 $generated@@522)))
 :pattern ( ($generated@@88 ($generated@@491 $generated@@519) $generated@@523))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@519) $generated@@523))
))))
 :pattern ( ($generated@@78 $generated@@519 ($generated@@516 $generated@@520 $generated@@521) $generated@@522))
)))
(assert  (=> (<= 1 $generated@@152) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@143) (or $generated@@275 (not (= 1 $generated@@152)))) (and $generated@@275 (= ($generated@@274 ($generated@@142 $generated@@524)) ($generated@@314 ($generated@@79 ($generated@@312 0) ($generated@@314 ($generated@@274 $generated@@524)))))))
 :pattern ( ($generated@@274 ($generated@@142 $generated@@524)))
))))
(assert  (=> (<= 1 $generated@@152) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@143) (or $generated@@279 (not (= 1 $generated@@152)))) (and $generated@@279 (= ($generated@@278 ($generated@@142 $generated@@525)) ($generated@@314 ($generated@@79 ($generated@@312 1) ($generated@@314 ($generated@@278 $generated@@525)))))))
 :pattern ( ($generated@@278 ($generated@@142 $generated@@525)))
))))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@81) ($generated@@155 $generated@@526 $generated@@80)) (or ($generated@@156 $generated@@526) ($generated@@159 $generated@@526)))
 :pattern ( ($generated@@159 $generated@@526) ($generated@@155 $generated@@526 $generated@@80))
 :pattern ( ($generated@@156 $generated@@526) ($generated@@155 $generated@@526 $generated@@80))
)))
(assert (forall (($generated@@528 T@T) ) (! (= (type ($generated@@527 $generated@@528)) ($generated@@82 $generated@@528 $generated@@4))
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 ($generated@@409 (type $generated@@529))))
(let (($generated@@531 ($generated@@408 (type $generated@@529))))
 (=> (= (type $generated@@529) ($generated@@407 $generated@@531 $generated@@530)) (= (= $generated@@529 ($generated@@406 $generated@@531 $generated@@530)) (= ($generated@@405 $generated@@529) ($generated@@527 $generated@@531))))))
 :pattern ( ($generated@@405 $generated@@529))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@409 (type $generated@@532))))
(let (($generated@@534 ($generated@@408 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@407 $generated@@534 $generated@@533)) (= (= $generated@@532 ($generated@@406 $generated@@534 $generated@@533)) (= ($generated@@453 $generated@@532) ($generated@@527 $generated@@533))))))
 :pattern ( ($generated@@453 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@409 (type $generated@@535))))
(let (($generated@@537 ($generated@@408 (type $generated@@535))))
 (=> (= (type $generated@@535) ($generated@@407 $generated@@537 $generated@@536)) (= (= $generated@@535 ($generated@@406 $generated@@537 $generated@@536)) (= ($generated@@490 $generated@@535) ($generated@@527 $generated@@169))))))
 :pattern ( ($generated@@490 $generated@@535))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@391 (type $generated@@538))))
(let (($generated@@540 ($generated@@390 (type $generated@@538))))
 (=> (= (type $generated@@538) ($generated@@389 $generated@@540 $generated@@539)) (or (= $generated@@538 ($generated@@388 $generated@@540 $generated@@539)) (exists (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (and (and (= (type $generated@@541) $generated@@169) (= (type $generated@@542) $generated@@169)) ($generated@@0 ($generated@@88 ($generated@@482 $generated@@538) ($generated@@376 ($generated@@286 $generated@@541 $generated@@542)))))
 :no-pattern (type $generated@@541)
 :no-pattern (type $generated@@542)
 :no-pattern ($generated $generated@@541)
 :no-pattern ($generated@@0 $generated@@541)
 :no-pattern ($generated $generated@@542)
 :no-pattern ($generated@@0 $generated@@542)
))))))
 :pattern ( ($generated@@482 $generated@@538))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 ($generated@@409 (type $generated@@543))))
(let (($generated@@545 ($generated@@408 (type $generated@@543))))
 (=> (= (type $generated@@543) ($generated@@407 $generated@@545 $generated@@544)) (or (= $generated@@543 ($generated@@406 $generated@@545 $generated@@544)) (exists (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (and (and (= (type $generated@@546) $generated@@169) (= (type $generated@@547) $generated@@169)) ($generated@@0 ($generated@@88 ($generated@@490 $generated@@543) ($generated@@376 ($generated@@286 $generated@@546 $generated@@547)))))
 :no-pattern (type $generated@@546)
 :no-pattern (type $generated@@547)
 :no-pattern ($generated $generated@@546)
 :no-pattern ($generated@@0 $generated@@546)
 :no-pattern ($generated $generated@@547)
 :no-pattern ($generated@@0 $generated@@547)
))))))
 :pattern ( ($generated@@490 $generated@@543))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@169) ($generated@@287 $generated@@548 $generated@@46)) (and (= ($generated@@376 ($generated@@430 $generated@@2 $generated@@548)) $generated@@548) ($generated@@155 ($generated@@430 $generated@@2 $generated@@548) $generated@@46)))
 :pattern ( ($generated@@287 $generated@@548 $generated@@46))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@169) ($generated@@287 $generated@@549 $generated@@47)) (and (= ($generated@@376 ($generated@@430 $generated@@3 $generated@@549)) $generated@@549) ($generated@@155 ($generated@@430 $generated@@3 $generated@@549) $generated@@47)))
 :pattern ( ($generated@@287 $generated@@549 $generated@@47))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@169) ($generated@@287 $generated@@550 $generated@@44)) (and (= ($generated@@376 ($generated@@430 $generated@@4 $generated@@550)) $generated@@550) ($generated@@155 ($generated@@430 $generated@@4 $generated@@550) $generated@@44)))
 :pattern ( ($generated@@287 $generated@@550 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@551) 21))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@169) ($generated@@287 $generated@@552 $generated@@45)) (and (= ($generated@@376 ($generated@@430 $generated@@551 $generated@@552)) $generated@@552) ($generated@@155 ($generated@@430 $generated@@551 $generated@@552) $generated@@45)))
 :pattern ( ($generated@@287 $generated@@552 $generated@@45))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@287 ($generated@@376 $generated@@553) $generated@@554) ($generated@@155 $generated@@553 $generated@@554)))
 :pattern ( ($generated@@287 ($generated@@376 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@143) (= (type $generated@@556) $generated@@169)) (= (type $generated@@557) $generated@@81)) (= (type $generated@@558) $generated@@81)) (= ($generated@@210 ($generated@@142 $generated@@555) $generated@@556 $generated@@557 $generated@@558) ($generated@@210 $generated@@555 $generated@@556 $generated@@557 $generated@@558)))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@555) $generated@@556 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@169) (<= 0 ($generated@@174 $generated@@559)))
 :pattern ( ($generated@@174 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@86 (type $generated@@560))))
 (=> (= (type $generated@@560) ($generated@@82 $generated@@561 $generated@@2)) (<= 0 ($generated@@381 $generated@@560))))
 :pattern ( ($generated@@381 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@360 (type $generated@@562))))
 (=> (= (type $generated@@562) ($generated@@359 $generated@@563)) (<= 0 ($generated@@358 $generated@@562))))
 :pattern ( ($generated@@358 $generated@@562))
)))
(assert  (=> (<= 2 $generated@@152) (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@564) $generated@@143) (= (type $generated@@565) $generated@@169)) (= (type $generated@@566) $generated@@81)) (= (type $generated@@567) $generated@@81)) (or ($generated@@318 $generated@@565 $generated@@566 $generated@@567) (and (not (= 2 $generated@@152)) (and ($generated@@155 $generated@@566 $generated@@80) ($generated@@155 $generated@@567 $generated@@80))))) (and (and (=> (< 0 ($generated@@174 $generated@@565)) (=> (not ($generated@@156 $generated@@566)) (let (($generated@@568 ($generated@@157 $generated@@566)))
(let (($generated@@569 ($generated@@158 $generated@@566)))
 (=> ($generated@@159 $generated@@567) (=> (<= $generated@@569 ($generated@@158 $generated@@567)) ($generated@@318 ($generated@@175 $generated@@565 ($generated@@176 1)) $generated@@568 ($generated@@157 $generated@@567)))))))) (=> (=> (< 0 ($generated@@174 $generated@@565)) (ite ($generated@@156 $generated@@566) true (let (($generated@@570 ($generated@@157 $generated@@566)))
(let (($generated@@571 ($generated@@158 $generated@@566)))
 (and (and ($generated@@159 $generated@@567) (<= $generated@@571 ($generated@@158 $generated@@567))) ($generated@@210 $generated@@564 ($generated@@175 $generated@@565 ($generated@@176 1)) $generated@@570 ($generated@@157 $generated@@567))))))) (=> (= ($generated@@312 0) ($generated@@174 $generated@@565)) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@169) ($generated@@168 $generated@@572 $generated@@565)) ($generated@@318 $generated@@572 $generated@@566 $generated@@567))
 :pattern ( ($generated@@210 $generated@@564 $generated@@572 $generated@@566 $generated@@567))
))))) (= ($generated@@210 ($generated@@142 $generated@@564) $generated@@565 $generated@@566 $generated@@567)  (and (=> (< 0 ($generated@@174 $generated@@565)) (ite ($generated@@156 $generated@@566) true (let (($generated@@573 ($generated@@157 $generated@@566)))
(let (($generated@@574 ($generated@@158 $generated@@566)))
 (and (and ($generated@@159 $generated@@567) (<= $generated@@574 ($generated@@158 $generated@@567))) ($generated@@210 $generated@@564 ($generated@@175 $generated@@565 ($generated@@176 1)) $generated@@573 ($generated@@157 $generated@@567))))))) (=> (= ($generated@@312 0) ($generated@@174 $generated@@565)) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@169) ($generated@@168 $generated@@575 $generated@@565)) ($generated@@210 $generated@@564 $generated@@575 $generated@@566 $generated@@567))
 :pattern ( ($generated@@210 $generated@@564 $generated@@575 $generated@@566 $generated@@567))
)))))))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@564) $generated@@565 $generated@@566 $generated@@567))
))))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@68)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@68) (= (type $generated@@579) $generated@@68)) (= ($generated@@576 ($generated@@508 $generated@@578 $generated@@579)) $generated@@578))
 :pattern ( ($generated@@508 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@68)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@68) (= (type $generated@@583) $generated@@68)) (= ($generated@@580 ($generated@@508 $generated@@582 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@508 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@68) (= (type $generated@@585) $generated@@68)) (= ($generated@@76 ($generated@@508 $generated@@584 $generated@@585)) $generated@@58))
 :pattern ( ($generated@@508 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@68)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@68) (= (type $generated@@589) $generated@@68)) (= ($generated@@586 ($generated@@516 $generated@@588 $generated@@589)) $generated@@588))
 :pattern ( ($generated@@516 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@68)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@68) (= (type $generated@@593) $generated@@68)) (= ($generated@@590 ($generated@@516 $generated@@592 $generated@@593)) $generated@@593))
 :pattern ( ($generated@@516 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@68) (= (type $generated@@595) $generated@@68)) (= ($generated@@76 ($generated@@516 $generated@@594 $generated@@595)) $generated@@59))
 :pattern ( ($generated@@516 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@169) (= (type $generated@@597) $generated@@169)) (= ($generated@@202 ($generated@@286 $generated@@596 $generated@@597)) $generated@@61))
 :pattern ( ($generated@@286 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@68)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@68) (= (type $generated@@601) $generated@@68)) (= ($generated@@598 ($generated@@189 $generated@@600 $generated@@601)) $generated@@600))
 :pattern ( ($generated@@189 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@68)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@68) (= (type $generated@@605) $generated@@68)) (= ($generated@@602 ($generated@@189 $generated@@604 $generated@@605)) $generated@@605))
 :pattern ( ($generated@@189 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@169) (= (type $generated@@607) $generated@@169)) (= ($generated@@196 ($generated@@286 $generated@@606 $generated@@607)) $generated@@606))
 :pattern ( ($generated@@286 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@169) (= (type $generated@@609) $generated@@169)) (= ($generated@@197 ($generated@@286 $generated@@608 $generated@@609)) $generated@@609))
 :pattern ( ($generated@@286 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 Int) ($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@81) (= ($generated@@202 ($generated@@79 $generated@@610 $generated@@611)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 Int) ($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@81) (= ($generated@@158 ($generated@@79 $generated@@612 $generated@@613)) $generated@@612))
 :pattern ( ($generated@@79 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 Int) ($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@81) (= ($generated@@157 ($generated@@79 $generated@@614 $generated@@615)) $generated@@615))
 :pattern ( ($generated@@79 $generated@@614 $generated@@615))
)))
(assert  (and (forall (($generated@@618 T@U) ) (! (= (type ($generated@@616 $generated@@618)) $generated@@68)
 :pattern ( ($generated@@616 $generated@@618))
)) (forall (($generated@@619 T@U) ($generated@@620 Int) ) (! (let (($generated@@621 ($generated@@360 (type $generated@@619))))
(= (type ($generated@@617 $generated@@619 $generated@@620)) $generated@@621))
 :pattern ( ($generated@@617 $generated@@619 $generated@@620))
))))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@622) ($generated@@359 $generated@@169)) (= (type $generated@@623) $generated@@68)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@622 ($generated@@616 $generated@@623) $generated@@624) (forall (($generated@@625 Int) ) (!  (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@358 $generated@@622))) ($generated@@331 ($generated@@617 $generated@@622 $generated@@625) $generated@@623 $generated@@624))
 :pattern ( ($generated@@617 $generated@@622 $generated@@625))
))))
 :pattern ( ($generated@@78 $generated@@622 ($generated@@616 $generated@@623) $generated@@624))
)))
(assert (forall (($generated@@627 Int) ) (! (= ($generated@@626 ($generated@@148 $generated@@627)) $generated@@627)
 :pattern ( ($generated@@148 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ) (! (= (type ($generated@@628 $generated@@629)) $generated@@68)
 :pattern ( ($generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@68) (= ($generated@@628 ($generated@@302 $generated@@630)) $generated@@630))
 :pattern ( ($generated@@302 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@68) (= ($generated@@76 ($generated@@302 $generated@@631)) $generated@@54))
 :pattern ( ($generated@@302 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ) (! (= (type ($generated@@632 $generated@@633)) $generated@@68)
 :pattern ( ($generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@68) (= ($generated@@632 ($generated@@307 $generated@@634)) $generated@@634))
 :pattern ( ($generated@@307 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@68) (= ($generated@@76 ($generated@@307 $generated@@635)) $generated@@55))
 :pattern ( ($generated@@307 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ) (! (= (type ($generated@@636 $generated@@637)) $generated@@68)
 :pattern ( ($generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@68) (= ($generated@@636 ($generated@@205 $generated@@638)) $generated@@638))
 :pattern ( ($generated@@205 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@68) (= ($generated@@76 ($generated@@205 $generated@@639)) $generated@@56))
 :pattern ( ($generated@@205 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ) (! (= (type ($generated@@640 $generated@@641)) $generated@@68)
 :pattern ( ($generated@@640 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@68) (= ($generated@@640 ($generated@@616 $generated@@642)) $generated@@642))
 :pattern ( ($generated@@616 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@68) (= ($generated@@76 ($generated@@616 $generated@@643)) $generated@@57))
 :pattern ( ($generated@@616 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 (type $generated@@644)))
(= ($generated@@430 $generated@@645 ($generated@@376 $generated@@644)) $generated@@644))
 :pattern ( ($generated@@376 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@646) ($generated@@389 $generated@@169 $generated@@169)) (= (type $generated@@647) $generated@@68)) (= (type $generated@@648) $generated@@68)) (= ($generated@@155 $generated@@646 ($generated@@508 $generated@@647 $generated@@648)) (forall (($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@169) ($generated@@0 ($generated@@88 ($generated@@387 $generated@@646) $generated@@649))) (and ($generated@@287 ($generated@@88 ($generated@@483 $generated@@646) $generated@@649) $generated@@648) ($generated@@287 $generated@@649 $generated@@647)))
 :pattern ( ($generated@@88 ($generated@@483 $generated@@646) $generated@@649))
 :pattern ( ($generated@@88 ($generated@@387 $generated@@646) $generated@@649))
))))
 :pattern ( ($generated@@155 $generated@@646 ($generated@@508 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@650) ($generated@@407 $generated@@169 $generated@@169)) (= (type $generated@@651) $generated@@68)) (= (type $generated@@652) $generated@@68)) (= ($generated@@155 $generated@@650 ($generated@@516 $generated@@651 $generated@@652)) (forall (($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@169) ($generated@@0 ($generated@@88 ($generated@@405 $generated@@650) $generated@@653))) (and ($generated@@287 ($generated@@88 ($generated@@491 $generated@@650) $generated@@653) $generated@@652) ($generated@@287 $generated@@653 $generated@@651)))
 :pattern ( ($generated@@88 ($generated@@491 $generated@@650) $generated@@653))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@650) $generated@@653))
))))
 :pattern ( ($generated@@155 $generated@@650 ($generated@@516 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@169) (= (type $generated@@655) $generated@@169)) (and (and (and (=> ($generated@@168 $generated@@654 $generated@@655) (not (= $generated@@654 $generated@@655))) (=> (and ($generated@@423 $generated@@654) (not ($generated@@423 $generated@@655))) ($generated@@168 $generated@@654 $generated@@655))) (=> (and ($generated@@423 $generated@@654) ($generated@@423 $generated@@655)) (= ($generated@@168 $generated@@654 $generated@@655) (< ($generated@@174 $generated@@654) ($generated@@174 $generated@@655))))) (=> (and ($generated@@168 $generated@@654 $generated@@655) ($generated@@423 $generated@@655)) ($generated@@423 $generated@@654))))
 :pattern ( ($generated@@168 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@169) (= (type $generated@@659) $generated@@169)) (< ($generated@@656 $generated@@658) ($generated@@657 ($generated@@286 $generated@@658 $generated@@659))))
 :pattern ( ($generated@@286 $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@169) (= (type $generated@@661) $generated@@169)) (< ($generated@@656 $generated@@661) ($generated@@657 ($generated@@286 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@286 $generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@143) (= ($generated@@274 $generated@@662) ($generated@@274 $generated@@341)))
 :pattern ( ($generated@@274 ($generated@@340 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@143) (= ($generated@@278 $generated@@663) ($generated@@278 $generated@@341)))
 :pattern ( ($generated@@278 ($generated@@340 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) $generated@@169) (= (type $generated@@665) $generated@@68)) (= (type $generated@@666) $generated@@68)) ($generated@@287 $generated@@664 ($generated@@508 $generated@@665 $generated@@666))) (and (= ($generated@@376 ($generated@@430 ($generated@@389 $generated@@169 $generated@@169) $generated@@664)) $generated@@664) ($generated@@155 ($generated@@430 ($generated@@389 $generated@@169 $generated@@169) $generated@@664) ($generated@@508 $generated@@665 $generated@@666))))
 :pattern ( ($generated@@287 $generated@@664 ($generated@@508 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@169) (= (type $generated@@668) $generated@@68)) (= (type $generated@@669) $generated@@68)) ($generated@@287 $generated@@667 ($generated@@516 $generated@@668 $generated@@669))) (and (= ($generated@@376 ($generated@@430 ($generated@@407 $generated@@169 $generated@@169) $generated@@667)) $generated@@667) ($generated@@155 ($generated@@430 ($generated@@407 $generated@@169 $generated@@169) $generated@@667) ($generated@@516 $generated@@668 $generated@@669))))
 :pattern ( ($generated@@287 $generated@@667 ($generated@@516 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) $generated@@68) (= (type $generated@@671) $generated@@68)) (= (type $generated@@672) $generated@@169)) ($generated@@287 $generated@@672 ($generated@@189 $generated@@670 $generated@@671))) (and (= ($generated@@376 ($generated@@430 $generated@@81 $generated@@672)) $generated@@672) ($generated@@155 ($generated@@430 $generated@@81 $generated@@672) ($generated@@189 $generated@@670 $generated@@671))))
 :pattern ( ($generated@@287 $generated@@672 ($generated@@189 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@673 T@U) ) (! (let (($generated@@674 (type $generated@@673)))
 (not ($generated@@0 ($generated@@88 ($generated@@527 $generated@@674) $generated@@673))))
 :pattern ( (let (($generated@@674 (type $generated@@673)))
($generated@@88 ($generated@@527 $generated@@674) $generated@@673)))
)))
(assert (forall (($generated@@676 T@U) ) (! (= (type ($generated@@675 $generated@@676)) $generated@@73)
 :pattern ( ($generated@@675 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@68) (= (type $generated@@678) $generated@@68)) (and (= ($generated@@76 ($generated@@189 $generated@@677 $generated@@678)) $generated@@62) (= ($generated@@675 ($generated@@189 $generated@@677 $generated@@678)) $generated@@66)))
 :pattern ( ($generated@@189 $generated@@677 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@679) $generated@@81) (= (type $generated@@680) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@680) (and ($generated@@159 $generated@@679) ($generated@@78 $generated@@679 $generated@@80 $generated@@680)))) ($generated@@78 ($generated@@8 ($generated@@158 $generated@@679)) $generated@@46 $generated@@680))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@158 $generated@@679)) $generated@@46 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@81) (= ($generated@@656 ($generated@@376 $generated@@681)) ($generated@@657 $generated@@681)))
 :pattern ( ($generated@@656 ($generated@@376 $generated@@681)))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@143) (= ($generated@@274 ($generated@@142 $generated@@682)) ($generated@@274 $generated@@682)))
 :pattern ( ($generated@@274 ($generated@@142 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@143) (= ($generated@@278 ($generated@@142 $generated@@683)) ($generated@@278 $generated@@683)))
 :pattern ( ($generated@@278 ($generated@@142 $generated@@683)))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@684) $generated@@169) ($generated@@287 $generated@@684 ($generated@@148 0))) (and (= ($generated@@376 ($generated@@430 $generated@@2 $generated@@684)) $generated@@684) ($generated@@155 ($generated@@430 ($generated@@82 $generated@@169 $generated@@4) $generated@@684) ($generated@@148 0))))
 :pattern ( ($generated@@287 $generated@@684 ($generated@@148 0)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (= (type $generated@@685) $generated@@169) (= (type $generated@@686) $generated@@68)) ($generated@@287 $generated@@685 ($generated@@302 $generated@@686))) (and (= ($generated@@376 ($generated@@430 ($generated@@82 $generated@@169 $generated@@4) $generated@@685)) $generated@@685) ($generated@@155 ($generated@@430 ($generated@@82 $generated@@169 $generated@@4) $generated@@685) ($generated@@302 $generated@@686))))
 :pattern ( ($generated@@287 $generated@@685 ($generated@@302 $generated@@686)))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (= (type $generated@@687) $generated@@169) (= (type $generated@@688) $generated@@68)) ($generated@@287 $generated@@687 ($generated@@307 $generated@@688))) (and (= ($generated@@376 ($generated@@430 ($generated@@82 $generated@@169 $generated@@4) $generated@@687)) $generated@@687) ($generated@@155 ($generated@@430 ($generated@@82 $generated@@169 $generated@@4) $generated@@687) ($generated@@307 $generated@@688))))
 :pattern ( ($generated@@287 $generated@@687 ($generated@@307 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (= (type $generated@@689) $generated@@169) (= (type $generated@@690) $generated@@68)) ($generated@@287 $generated@@689 ($generated@@205 $generated@@690))) (and (= ($generated@@376 ($generated@@430 ($generated@@82 $generated@@169 $generated@@2) $generated@@689)) $generated@@689) ($generated@@155 ($generated@@430 ($generated@@82 $generated@@169 $generated@@2) $generated@@689) ($generated@@205 $generated@@690))))
 :pattern ( ($generated@@287 $generated@@689 ($generated@@205 $generated@@690)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@691) $generated@@169) (= (type $generated@@692) $generated@@68)) ($generated@@287 $generated@@691 ($generated@@616 $generated@@692))) (and (= ($generated@@376 ($generated@@430 ($generated@@359 $generated@@169) $generated@@691)) $generated@@691) ($generated@@155 ($generated@@430 ($generated@@359 $generated@@169) $generated@@691) ($generated@@616 $generated@@692))))
 :pattern ( ($generated@@287 $generated@@691 ($generated@@616 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@693) $generated@@169) ($generated@@423 $generated@@693)) (= $generated@@693 ($generated@@176 ($generated@@174 $generated@@693))))
 :pattern ( ($generated@@174 $generated@@693))
 :pattern ( ($generated@@423 $generated@@693))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@675 $generated@@80) $generated@@67))
(assert  (=> (<= 2 $generated@@152) (forall (($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@694) $generated@@143) (= (type $generated@@695) $generated@@169)) (= (type $generated@@696) $generated@@81)) (= (type $generated@@697) $generated@@81)) (or ($generated@@318 ($generated@@314 $generated@@695) ($generated@@314 $generated@@696) ($generated@@314 $generated@@697)) (and (not (= 2 $generated@@152)) (and ($generated@@155 $generated@@696 $generated@@80) ($generated@@155 $generated@@697 $generated@@80))))) (and (and (=> (< 0 ($generated@@174 $generated@@695)) (=> (not ($generated@@156 $generated@@696)) (let (($generated@@698 ($generated@@157 $generated@@696)))
(let (($generated@@699 ($generated@@158 $generated@@696)))
 (=> ($generated@@159 $generated@@697) (=> (<= $generated@@699 ($generated@@158 $generated@@697)) ($generated@@318 ($generated@@175 $generated@@695 ($generated@@176 1)) $generated@@698 ($generated@@157 $generated@@697)))))))) (=> (=> (< 0 ($generated@@174 $generated@@695)) (ite ($generated@@156 $generated@@696) true (let (($generated@@700 ($generated@@157 $generated@@696)))
(let (($generated@@701 ($generated@@158 $generated@@696)))
 (and (and ($generated@@159 $generated@@697) (<= $generated@@701 ($generated@@158 $generated@@697))) ($generated@@210 ($generated@@142 $generated@@694) ($generated@@175 $generated@@695 ($generated@@176 1)) $generated@@700 ($generated@@157 $generated@@697))))))) (=> (= ($generated@@312 0) ($generated@@174 $generated@@695)) (forall (($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@702) $generated@@169) ($generated@@168 $generated@@702 $generated@@695)) ($generated@@318 $generated@@702 $generated@@696 $generated@@697))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@694) $generated@@702 $generated@@696 $generated@@697))
))))) (= ($generated@@210 ($generated@@142 $generated@@694) ($generated@@314 $generated@@695) ($generated@@314 $generated@@696) ($generated@@314 $generated@@697))  (and (=> (< 0 ($generated@@174 $generated@@695)) (ite ($generated@@156 $generated@@696) true (let (($generated@@703 ($generated@@157 $generated@@696)))
(let (($generated@@704 ($generated@@158 $generated@@696)))
 (and (and ($generated@@159 $generated@@697) (<= $generated@@704 ($generated@@158 $generated@@697))) ($generated@@210 ($generated@@142 $generated@@694) ($generated@@175 $generated@@695 ($generated@@176 1)) $generated@@703 ($generated@@157 $generated@@697))))))) (=> (= ($generated@@312 0) ($generated@@174 $generated@@695)) (forall (($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@705) $generated@@169) ($generated@@168 $generated@@705 $generated@@695)) ($generated@@210 ($generated@@142 $generated@@694) $generated@@705 $generated@@696 $generated@@697))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@694) $generated@@705 $generated@@696 $generated@@697))
)))))))
 :weight 3
 :pattern ( ($generated@@210 ($generated@@142 $generated@@694) ($generated@@314 $generated@@695) ($generated@@314 $generated@@696) ($generated@@314 $generated@@697)))
))))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (= (type $generated@@706) ($generated@@82 $generated@@169 $generated@@2)) (= (type $generated@@707) $generated@@68)) (= (type $generated@@708) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@706 ($generated@@205 $generated@@707) $generated@@708) (forall (($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@709) $generated@@169) (< 0 ($generated ($generated@@88 $generated@@706 $generated@@709)))) ($generated@@331 $generated@@709 $generated@@707 $generated@@708))
 :pattern ( ($generated@@88 $generated@@706 $generated@@709))
))))
 :pattern ( ($generated@@78 $generated@@706 ($generated@@205 $generated@@707) $generated@@708))
)))
(assert  (=> (<= 2 $generated@@152) (forall (($generated@@710 T@U) ($generated@@711 T@U) ($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@710) $generated@@143) (= (type $generated@@711) $generated@@81)) (= (type $generated@@712) $generated@@81)) (= (type $generated@@713) $generated@@169)) (and (and ($generated@@155 $generated@@711 $generated@@80) ($generated@@155 $generated@@712 $generated@@80)) (= $generated@@713 ($generated@@176 0)))) ($generated@@210 $generated@@710 $generated@@713 $generated@@711 $generated@@712))
 :pattern ( ($generated@@210 $generated@@710 $generated@@713 $generated@@711 $generated@@712))
))))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (and (= (type $generated@@714) $generated@@169) (= (type $generated@@715) $generated@@169)) (and ($generated@@423 $generated@@715) (<= ($generated@@174 $generated@@715) ($generated@@174 $generated@@714)))) (or (and (= $generated@@715 ($generated@@176 0)) (= ($generated@@175 $generated@@714 $generated@@715) $generated@@714)) (and (not (= $generated@@715 ($generated@@176 0))) ($generated@@168 ($generated@@175 $generated@@714 $generated@@715) $generated@@714))))
 :pattern ( ($generated@@175 $generated@@714 $generated@@715))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (and (= (type $generated@@716) $generated@@81) (= (type $generated@@717) $generated@@68)) (= (type $generated@@718) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@718) (and ($generated@@188 $generated@@716) (exists (($generated@@719 T@U) ) (!  (and (= (type $generated@@719) $generated@@68) ($generated@@78 $generated@@716 ($generated@@189 $generated@@717 $generated@@719) $generated@@718))
 :pattern ( ($generated@@78 $generated@@716 ($generated@@189 $generated@@717 $generated@@719) $generated@@718))
))))) ($generated@@331 ($generated@@196 $generated@@716) $generated@@717 $generated@@718))
 :pattern ( ($generated@@331 ($generated@@196 $generated@@716) $generated@@717 $generated@@718))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (and (= (type $generated@@720) $generated@@81) (= (type $generated@@721) $generated@@68)) (= (type $generated@@722) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@722) (and ($generated@@188 $generated@@720) (exists (($generated@@723 T@U) ) (!  (and (= (type $generated@@723) $generated@@68) ($generated@@78 $generated@@720 ($generated@@189 $generated@@723 $generated@@721) $generated@@722))
 :pattern ( ($generated@@78 $generated@@720 ($generated@@189 $generated@@723 $generated@@721) $generated@@722))
))))) ($generated@@331 ($generated@@197 $generated@@720) $generated@@721 $generated@@722))
 :pattern ( ($generated@@331 ($generated@@197 $generated@@720) $generated@@721 $generated@@722))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (= (type $generated@@724) $generated@@81) (= (type $generated@@725) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@725) (and ($generated@@159 $generated@@724) ($generated@@78 $generated@@724 $generated@@80 $generated@@725)))) ($generated@@78 ($generated@@157 $generated@@724) $generated@@80 $generated@@725))
 :pattern ( ($generated@@78 ($generated@@157 $generated@@724) $generated@@80 $generated@@725))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (= (type $generated@@726) $generated@@169) (= (type $generated@@727) $generated@@169)) (= ($generated@@286 ($generated@@314 $generated@@726) ($generated@@314 $generated@@727)) ($generated@@314 ($generated@@286 $generated@@726 $generated@@727))))
 :pattern ( ($generated@@286 ($generated@@314 $generated@@726) ($generated@@314 $generated@@727)))
)))
(assert (forall (($generated@@728 Int) ) (! (= ($generated@@376 ($generated@@8 ($generated@@312 $generated@@728))) ($generated@@314 ($generated@@376 ($generated@@8 $generated@@728))))
 :pattern ( ($generated@@376 ($generated@@8 ($generated@@312 $generated@@728))))
)))
(assert (forall (($generated@@729 T@U) ) (! (= ($generated@@376 ($generated@@314 $generated@@729)) ($generated@@314 ($generated@@376 $generated@@729)))
 :pattern ( ($generated@@376 ($generated@@314 $generated@@729)))
)))
(assert (forall (($generated@@730 Int) ($generated@@731 T@U) ) (!  (=> (= (type $generated@@731) $generated@@81) (= ($generated@@155 ($generated@@79 $generated@@730 $generated@@731) $generated@@80)  (and ($generated@@155 ($generated@@8 $generated@@730) $generated@@46) ($generated@@155 $generated@@731 $generated@@80))))
 :pattern ( ($generated@@155 ($generated@@79 $generated@@730 $generated@@731) $generated@@80))
)))
(assert (forall (($generated@@732 T@U) ) (! (let (($generated@@733 ($generated@@360 (type $generated@@732))))
 (=> (and (= (type $generated@@732) ($generated@@359 $generated@@733)) (= ($generated@@358 $generated@@732) 0)) (= $generated@@732 ($generated@@357 $generated@@733))))
 :pattern ( ($generated@@358 $generated@@732))
)))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ($generated@@736 T@U) ) (! (let (($generated@@737 (type $generated@@735)))
 (=> (and (and (= (type $generated@@734) ($generated@@82 $generated@@737 $generated@@2)) (= (type $generated@@736) $generated@@2)) (<= 0 ($generated $generated@@736))) (= ($generated@@381 ($generated@@89 $generated@@734 $generated@@735 $generated@@736)) (+ (- ($generated@@381 $generated@@734) ($generated ($generated@@88 $generated@@734 $generated@@735))) ($generated $generated@@736)))))
 :pattern ( ($generated@@381 ($generated@@89 $generated@@734 $generated@@735 $generated@@736)))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (= (type $generated@@738) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@739) $generated@@2)) ($generated@@78 $generated@@739 $generated@@46 $generated@@738))
 :pattern ( ($generated@@78 $generated@@739 $generated@@46 $generated@@738))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (= (type $generated@@740) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@741) $generated@@3)) ($generated@@78 $generated@@741 $generated@@47 $generated@@740))
 :pattern ( ($generated@@78 $generated@@741 $generated@@47 $generated@@740))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (= (type $generated@@742) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@743) $generated@@4)) ($generated@@78 $generated@@743 $generated@@44 $generated@@742))
 :pattern ( ($generated@@78 $generated@@743 $generated@@44 $generated@@742))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (= (type $generated@@744) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@745) $generated@@551)) ($generated@@78 $generated@@745 $generated@@45 $generated@@744))
 :pattern ( ($generated@@78 $generated@@745 $generated@@45 $generated@@744))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (= (type $generated@@746) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@747) $generated@@169)) ($generated@@78 $generated@@747 $generated@@48 $generated@@746))
 :pattern ( ($generated@@78 $generated@@747 $generated@@48 $generated@@746))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ) (!  (=> (and (= (type $generated@@748) ($generated@@359 $generated@@169)) (= (type $generated@@749) $generated@@68)) (= ($generated@@155 $generated@@748 ($generated@@616 $generated@@749)) (forall (($generated@@750 Int) ) (!  (=> (and (<= 0 $generated@@750) (< $generated@@750 ($generated@@358 $generated@@748))) ($generated@@287 ($generated@@617 $generated@@748 $generated@@750) $generated@@749))
 :pattern ( ($generated@@617 $generated@@748 $generated@@750))
))))
 :pattern ( ($generated@@155 $generated@@748 ($generated@@616 $generated@@749)))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (and (= (type $generated@@751) $generated@@143) (= (type $generated@@752) $generated@@81)) (= (type $generated@@753) $generated@@81)) (= ($generated@@153 $generated@@751 $generated@@752 $generated@@753) ($generated@@153 $generated@@341 $generated@@752 $generated@@753)))
 :pattern ( ($generated@@153 ($generated@@340 $generated@@751) $generated@@752 $generated@@753))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 Int) ) (!  (=> (= (type $generated@@755) ($generated@@359 $generated@@169)) (=> (and (<= 0 $generated@@756) (< $generated@@756 ($generated@@358 $generated@@755))) (< ($generated@@657 ($generated@@430 $generated@@81 ($generated@@617 $generated@@755 $generated@@756))) ($generated@@754 $generated@@755))))
 :pattern ( ($generated@@657 ($generated@@430 $generated@@81 ($generated@@617 $generated@@755 $generated@@756))))
)))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ($generated@@759 T@U) ($generated@@760 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@757) $generated@@169) (= (type $generated@@758) $generated@@143)) (= (type $generated@@759) $generated@@81)) (= (type $generated@@760) $generated@@81)) (= $generated@@759 $generated@@760)) ($generated@@173 $generated@@757 ($generated@@142 $generated@@758) $generated@@759 $generated@@760))
 :pattern ( ($generated@@173 $generated@@757 ($generated@@142 $generated@@758) $generated@@759 $generated@@760))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ($generated@@763 T@U) ) (!  (=> (and (and (and (= (type $generated@@761) ($generated@@389 $generated@@169 $generated@@169)) (= (type $generated@@762) $generated@@68)) (= (type $generated@@763) $generated@@68)) ($generated@@155 $generated@@761 ($generated@@508 $generated@@762 $generated@@763))) (and (and ($generated@@155 ($generated@@387 $generated@@761) ($generated@@302 $generated@@762)) ($generated@@155 ($generated@@442 $generated@@761) ($generated@@302 $generated@@763))) ($generated@@155 ($generated@@482 $generated@@761) ($generated@@302 ($generated@@189 $generated@@762 $generated@@763)))))
 :pattern ( ($generated@@155 $generated@@761 ($generated@@508 $generated@@762 $generated@@763)))
)))
(assert (forall (($generated@@764 T@U) ($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (and (and (= (type $generated@@764) ($generated@@407 $generated@@169 $generated@@169)) (= (type $generated@@765) $generated@@68)) (= (type $generated@@766) $generated@@68)) ($generated@@155 $generated@@764 ($generated@@516 $generated@@765 $generated@@766))) (and (and ($generated@@155 ($generated@@405 $generated@@764) ($generated@@307 $generated@@765)) ($generated@@155 ($generated@@453 $generated@@764) ($generated@@307 $generated@@766))) ($generated@@155 ($generated@@490 $generated@@764) ($generated@@307 ($generated@@189 $generated@@765 $generated@@766)))))
 :pattern ( ($generated@@155 $generated@@764 ($generated@@516 $generated@@765 $generated@@766)))
)))
(assert (forall (($generated@@767 T@U) ) (!  (=> (= (type $generated@@767) $generated@@2) ($generated@@155 $generated@@767 $generated@@46))
 :pattern ( ($generated@@155 $generated@@767 $generated@@46))
)))
(assert (forall (($generated@@768 T@U) ) (!  (=> (= (type $generated@@768) $generated@@3) ($generated@@155 $generated@@768 $generated@@47))
 :pattern ( ($generated@@155 $generated@@768 $generated@@47))
)))
(assert (forall (($generated@@769 T@U) ) (!  (=> (= (type $generated@@769) $generated@@4) ($generated@@155 $generated@@769 $generated@@44))
 :pattern ( ($generated@@155 $generated@@769 $generated@@44))
)))
(assert (forall (($generated@@770 T@U) ) (!  (=> (= (type $generated@@770) $generated@@551) ($generated@@155 $generated@@770 $generated@@45))
 :pattern ( ($generated@@155 $generated@@770 $generated@@45))
)))
(assert (forall (($generated@@771 T@U) ) (!  (=> (= (type $generated@@771) $generated@@169) ($generated@@155 $generated@@771 $generated@@48))
 :pattern ( ($generated@@155 $generated@@771 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@772 () T@U)
(declare-fun $generated@@773 (T@U) Bool)
(declare-fun $generated@@774 () T@U)
(declare-fun $generated@@775 () T@U)
(declare-fun $generated@@776 () T@U)
(assert  (and (and (and (= (type $generated@@772) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@774) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@775) ($generated@@220 $generated@@83 $generated@@4))) (= (type $generated@@776) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@777  (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> ($generated@@154 ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))) ($generated@@314 ($generated@@278 ($generated@@142 $generated@@341)))) (or ($generated@@0 ($generated@@314 ($generated@@11 ($generated@@153 ($generated@@142 $generated@@341) ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))) ($generated@@314 ($generated@@278 ($generated@@142 $generated@@341))))))) (=> ($generated@@0 ($generated@@314 ($generated@@11 ($generated@@156 ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))))))) ($generated@@0 ($generated@@314 ($generated@@11 true))))))) (=> (=> ($generated@@154 ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))) ($generated@@314 ($generated@@278 ($generated@@142 $generated@@341)))) (or ($generated@@0 ($generated@@314 ($generated@@11 ($generated@@153 ($generated@@142 $generated@@341) ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))) ($generated@@314 ($generated@@278 ($generated@@142 $generated@@341))))))) (=> ($generated@@0 ($generated@@314 ($generated@@11 ($generated@@156 ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))))))) ($generated@@0 ($generated@@314 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> ($generated@@154 ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))) ($generated@@314 ($generated@@278 ($generated@@142 $generated@@341)))) (or ($generated@@0 ($generated@@314 ($generated@@11 ($generated@@153 ($generated@@142 $generated@@341) ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))) ($generated@@314 ($generated@@278 ($generated@@142 $generated@@341))))))) (=> (not ($generated@@0 ($generated@@314 ($generated@@11 ($generated@@156 ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341)))))))) ($generated@@0 ($generated@@314 ($generated@@11 ($generated@@159 ($generated@@314 ($generated@@278 ($generated@@142 ($generated@@142 $generated@@341)))))))))))) (=> (=> ($generated@@154 ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))) ($generated@@314 ($generated@@278 ($generated@@142 $generated@@341)))) (or ($generated@@0 ($generated@@314 ($generated@@11 ($generated@@153 ($generated@@142 $generated@@341) ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))) ($generated@@314 ($generated@@278 ($generated@@142 $generated@@341))))))) (=> (not ($generated@@0 ($generated@@314 ($generated@@11 ($generated@@156 ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341)))))))) ($generated@@0 ($generated@@314 ($generated@@11 ($generated@@159 ($generated@@314 ($generated@@278 ($generated@@142 ($generated@@142 $generated@@341))))))))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@154 ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))) ($generated@@314 ($generated@@278 ($generated@@142 $generated@@341)))) (or ($generated@@0 ($generated@@314 ($generated@@11 ($generated@@153 ($generated@@142 $generated@@341) ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))) ($generated@@314 ($generated@@278 ($generated@@142 $generated@@341))))))) (=> (not ($generated@@0 ($generated@@314 ($generated@@11 ($generated@@156 ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341)))))))) (let (($generated@@778 ($generated@@312 ($generated@@158 ($generated@@314 ($generated@@274 ($generated@@142 ($generated@@142 $generated@@341))))))))
(<= $generated@@778 ($generated@@312 ($generated@@158 ($generated@@314 ($generated@@278 ($generated@@142 ($generated@@142 $generated@@341)))))))))))) (=> (=> ($generated@@154 ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))) ($generated@@314 ($generated@@278 ($generated@@142 $generated@@341)))) (or ($generated@@0 ($generated@@314 ($generated@@11 ($generated@@153 ($generated@@142 $generated@@341) ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))) ($generated@@314 ($generated@@278 ($generated@@142 $generated@@341))))))) (=> (not ($generated@@0 ($generated@@314 ($generated@@11 ($generated@@156 ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341)))))))) (let (($generated@@779 ($generated@@312 ($generated@@158 ($generated@@314 ($generated@@274 ($generated@@142 ($generated@@142 $generated@@341))))))))
(<= $generated@@779 ($generated@@312 ($generated@@158 ($generated@@314 ($generated@@278 ($generated@@142 ($generated@@142 $generated@@341))))))))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@154 ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))) ($generated@@314 ($generated@@278 ($generated@@142 $generated@@341)))) (or ($generated@@0 ($generated@@314 ($generated@@11 ($generated@@153 ($generated@@142 $generated@@341) ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))) ($generated@@314 ($generated@@278 ($generated@@142 $generated@@341))))))) (=> (not ($generated@@0 ($generated@@314 ($generated@@11 ($generated@@156 ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341)))))))) (let (($generated@@780 ($generated@@314 ($generated@@157 ($generated@@314 ($generated@@274 ($generated@@142 ($generated@@142 $generated@@341))))))))
($generated@@153 ($generated@@142 ($generated@@142 $generated@@341)) $generated@@780 ($generated@@314 ($generated@@157 ($generated@@314 ($generated@@278 ($generated@@142 ($generated@@142 $generated@@341))))))))))))))))))))
(let (($generated@@781  (=> (and (and (and ($generated@@85 $generated@@772) ($generated@@773 $generated@@772)) (= $generated@@774 $generated@@772)) (and (forall (($generated@@782 T@U) ) (!  (=> (and (= (type $generated@@782) $generated@@169) ($generated@@0 ($generated@@314 ($generated@@11 true)))) ($generated@@210 ($generated@@142 $generated@@341) $generated@@782 ($generated@@314 ($generated@@274 ($generated@@142 $generated@@341))) ($generated@@314 ($generated@@278 ($generated@@142 $generated@@341)))))
 :pattern ( ($generated@@210 ($generated@@142 $generated@@341) $generated@@782 ($generated@@274 ($generated@@142 $generated@@341)) ($generated@@278 ($generated@@142 $generated@@341))))
)) (= (ControlFlow 0 7) 3))) $generated@@777)))
(let (($generated@@783 true))
(let (($generated@@784  (=> (= $generated@@775 ($generated@@219 $generated@@776 $generated@@774 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@783) (=> (= (ControlFlow 0 8) 7) $generated@@781)))))
(let (($generated@@785  (=> (and (and ($generated@@85 $generated@@774) ($generated@@773 $generated@@774)) (and (= 4 $generated@@152) (= (ControlFlow 0 9) 8))) $generated@@784)))
$generated@@785))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 (Int) T@U)
(declare-fun $generated@@51 (T@U) Int)
(declare-fun $generated@@58 (T@U T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert (= ($generated@@1 $generated@@45) 6))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and (and (and (= (type $generated@@46) $generated@@45) (= (type $generated@@47) $generated@@45)) (= (type $generated@@48) $generated@@45)) (and ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))) ($generated@@44 $generated@@46 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@46 $generated@@48))
)))
(assert  (and (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= (type ($generated@@49 $generated@@52 $generated@@53)) $generated@@45)
 :pattern ( ($generated@@49 $generated@@52 $generated@@53))
)) (forall (($generated@@54 Int) ) (! (= (type ($generated@@50 $generated@@54)) $generated@@45)
 :pattern ( ($generated@@50 $generated@@54))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 Int) ($generated@@57 Int) ) (!  (=> (= (type $generated@@55) $generated@@45) (=> (and (and (<= 0 $generated@@56) (<= 0 $generated@@57)) (<= (+ $generated@@56 $generated@@57) ($generated@@51 $generated@@55))) (= ($generated@@49 ($generated@@49 $generated@@55 ($generated@@50 $generated@@56)) ($generated@@50 $generated@@57)) ($generated@@49 $generated@@55 ($generated@@50 (+ $generated@@56 $generated@@57))))))
 :pattern ( ($generated@@49 ($generated@@49 $generated@@55 ($generated@@50 $generated@@56)) ($generated@@50 $generated@@57)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (= ($generated@@1 ($generated@@62 $generated@@75 $generated@@76)) 7)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@67 ($generated@@62 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@62 $generated@@77 $generated@@78))
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@68 ($generated@@62 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@62 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (let (($generated@@83 ($generated@@68 (type $generated@@81))))
(= (type ($generated@@66 $generated@@81 $generated@@82)) $generated@@83))
 :pattern ( ($generated@@66 $generated@@81 $generated@@82))
))) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 (type $generated@@86)))
(let (($generated@@88 (type $generated@@85)))
(= (type ($generated@@69 $generated@@84 $generated@@85 $generated@@86)) ($generated@@62 $generated@@88 $generated@@87))))
 :pattern ( ($generated@@69 $generated@@84 $generated@@85 $generated@@86))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 ($generated@@68 (type $generated@@89))))
 (=> (= (type $generated@@91) $generated@@92) (= ($generated@@66 ($generated@@69 $generated@@89 $generated@@90 $generated@@91) $generated@@90) $generated@@91)))
 :weight 0
))) (and (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (or (= $generated@@95 $generated@@96) (= ($generated@@66 ($generated@@69 $generated@@94 $generated@@95 $generated@@93) $generated@@96) ($generated@@66 $generated@@94 $generated@@96)))
 :weight 0
)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or true (= ($generated@@66 ($generated@@69 $generated@@98 $generated@@99 $generated@@97) $generated@@100) ($generated@@66 $generated@@98 $generated@@100)))
 :weight 0
)))) (forall (($generated@@101 T@T) ) (= ($generated@@1 ($generated@@64 $generated@@101)) 8))) (forall (($generated@@102 T@T) ) (! (= ($generated@@60 ($generated@@64 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@64 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@60 (type $generated@@104))))
(= (type ($generated@@65 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@65 $generated@@103 $generated@@104))
))) (= ($generated@@1 $generated@@63) 9)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= (type ($generated@@70 $generated@@106 $generated@@107 $generated@@108)) $generated@@63)
 :pattern ( ($generated@@70 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@60 (type $generated@@110))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@65 ($generated@@70 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@65 ($generated@@70 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@65 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@65 ($generated@@70 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@65 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@61) 10)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@121 $generated@@122)) 11))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@71 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@73 ($generated@@71 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@71 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@73 (type $generated@@127))))
(= (type ($generated@@58 $generated@@127 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@58 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 (type $generated@@134)))
(let (($generated@@136 (type $generated@@132)))
(= (type ($generated@@74 $generated@@131 $generated@@132 $generated@@133 $generated@@134)) ($generated@@71 $generated@@136 $generated@@135))))
 :pattern ( ($generated@@74 $generated@@131 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@73 (type $generated@@137))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@58 ($generated@@74 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@138 $generated@@139) $generated@@140)))
 :weight 0
))) (and (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@58 ($generated@@74 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@58 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@58 ($generated@@74 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@58 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or true (= ($generated@@58 ($generated@@74 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@58 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Bool) ) (! (= (type ($generated@@59 $generated@@160 $generated@@161 $generated@@162 $generated@@163)) ($generated@@71 $generated@@61 $generated@@4))
 :pattern ( ($generated@@59 $generated@@160 $generated@@161 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@60 (type $generated@@169))))
 (=> (and (and (and (and (= (type $generated@@164) $generated@@61) (= (type $generated@@165) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@166) ($generated@@64 $generated@@4))) (= (type $generated@@168) $generated@@61)) (= (type $generated@@169) ($generated@@64 $generated@@170))) (= ($generated@@0 ($generated@@58 ($generated@@59 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (not (= $generated@@168 $generated@@164)) ($generated@@0 ($generated@@65 ($generated@@66 $generated@@165 $generated@@168) $generated@@166))) $generated@@167))))
 :pattern ( ($generated@@58 ($generated@@59 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(= (type ($generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@171 $generated@@174) $generated@@174)
 :pattern ( ($generated@@171 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@45) (= (type $generated@@177) $generated@@45)) (and ($generated@@175 $generated@@177) (<= ($generated@@51 $generated@@177) ($generated@@51 $generated@@176)))) (and (= ($generated@@175 ($generated@@49 $generated@@176 $generated@@177)) ($generated@@175 $generated@@176)) (= ($generated@@51 ($generated@@49 $generated@@176 $generated@@177)) (- ($generated@@51 $generated@@176) ($generated@@51 $generated@@177)))))
 :pattern ( ($generated@@49 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 Int) ) (!  (=> (<= 0 $generated@@178) (and ($generated@@175 ($generated@@50 $generated@@178)) (= ($generated@@51 ($generated@@50 $generated@@178)) $generated@@178)))
 :pattern ( ($generated@@50 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@45) (= (type $generated@@180) $generated@@45)) (or (or ($generated@@44 $generated@@179 $generated@@180) (= $generated@@179 $generated@@180)) ($generated@@44 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@44 $generated@@179 $generated@@180) ($generated@@44 $generated@@180 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@45) (<= 0 ($generated@@51 $generated@@181)))
 :pattern ( ($generated@@51 $generated@@181))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@45)
 :pattern ( ($generated@@182 $generated@@184))
)) (forall (($generated@@185 T@T) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(= ($generated@@183 $generated@@188 ($generated@@182 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@182 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (= (type $generated@@189) $generated@@45) (= (type $generated@@190) $generated@@45)) (and (and (and (=> ($generated@@44 $generated@@189 $generated@@190) (not (= $generated@@189 $generated@@190))) (=> (and ($generated@@175 $generated@@189) (not ($generated@@175 $generated@@190))) ($generated@@44 $generated@@189 $generated@@190))) (=> (and ($generated@@175 $generated@@189) ($generated@@175 $generated@@190)) (= ($generated@@44 $generated@@189 $generated@@190) (< ($generated@@51 $generated@@189) ($generated@@51 $generated@@190))))) (=> (and ($generated@@44 $generated@@189 $generated@@190) ($generated@@175 $generated@@190)) ($generated@@175 $generated@@189))))
 :pattern ( ($generated@@44 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@45) ($generated@@175 $generated@@191)) (= $generated@@191 ($generated@@50 ($generated@@51 $generated@@191))))
 :pattern ( ($generated@@51 $generated@@191))
 :pattern ( ($generated@@175 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) $generated@@45) (= (type $generated@@193) $generated@@45)) (and ($generated@@175 $generated@@193) (<= ($generated@@51 $generated@@193) ($generated@@51 $generated@@192)))) (or (and (= $generated@@193 ($generated@@50 0)) (= ($generated@@49 $generated@@192 $generated@@193) $generated@@192)) (and (not (= $generated@@193 ($generated@@50 0))) ($generated@@44 ($generated@@49 $generated@@192 $generated@@193) $generated@@192))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@182 ($generated@@171 $generated@@194)) ($generated@@171 ($generated@@182 $generated@@194)))
 :pattern ( ($generated@@182 ($generated@@171 $generated@@194)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@204 () Int)
(assert  (and (and (and (and (and (= (type $generated@@195) $generated@@45) (= (type $generated@@196) $generated@@45)) (= (type $generated@@198) ($generated@@71 $generated@@61 $generated@@4))) (= (type $generated@@199) $generated@@61)) (= (type $generated@@200) ($generated@@62 $generated@@61 $generated@@63))) (= (type $generated@@201) ($generated@@64 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@205 true))
(let (($generated@@206  (=> (< 0 ($generated@@51 $generated@@195)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@175 ($generated@@171 ($generated@@50 1)))) (=> ($generated@@175 ($generated@@171 ($generated@@50 1))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@51 ($generated@@171 ($generated@@50 1))) ($generated@@51 $generated@@195))) (=> (<= ($generated@@51 ($generated@@171 ($generated@@50 1))) ($generated@@51 $generated@@195)) (=> (= $generated@@196 ($generated@@49 $generated@@195 ($generated@@50 1))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@197) ($generated@@44 $generated@@196 $generated@@195)) (= $generated@@197 $generated@@197))) (=> (or (or (<= 0 $generated@@197) ($generated@@44 $generated@@196 $generated@@195)) (= $generated@@197 $generated@@197)) (=> (= (ControlFlow 0 2) (- 0 1)) (or ($generated@@44 $generated@@196 $generated@@195) (and (= $generated@@196 $generated@@195) (< $generated@@197 $generated@@197))))))))))))))
(let (($generated@@207  (=> (= $generated@@198 ($generated@@59 $generated@@199 $generated@@200 $generated@@201 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@206) (=> (= (ControlFlow 0 7) 6) $generated@@205)))))
(let (($generated@@208  (=> (and (and ($generated@@202 $generated@@200) ($generated@@203 $generated@@200)) (and (= 0 $generated@@204) (= (ControlFlow 0 8) 7))) $generated@@207)))
$generated@@208)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int T@U) T@U)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (Int) T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@161 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U) Int)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 (Int) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@208 (T@U T@U T@U) T@U)
(declare-fun $generated@@209 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@210 (T@T T@T) T@T)
(declare-fun $generated@@211 (T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@213 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@264 () Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@266 () Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 () Bool)
(declare-fun $generated@@277 (T@U T@U) T@U)
(declare-fun $generated@@278 (T@U T@U) Bool)
(declare-fun $generated@@285 () T@U)
(declare-fun $generated@@290 (T@U T@U) Bool)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@308 (Int) Int)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@314 (T@U) Bool)
(declare-fun $generated@@317 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@318 (T@U T@U T@U) Bool)
(declare-fun $generated@@331 (T@U T@U T@U) Bool)
(declare-fun $generated@@341 (T@U) Bool)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 () T@U)
(declare-fun $generated@@356 (T@T) T@U)
(declare-fun $generated@@357 (T@U) Int)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@382 (T@U) Int)
(declare-fun $generated@@383 (T@T) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@T T@T) T@U)
(declare-fun $generated@@390 (T@T T@T) T@T)
(declare-fun $generated@@391 (T@T) T@T)
(declare-fun $generated@@392 (T@T) T@T)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@T T@T) T@U)
(declare-fun $generated@@408 (T@T T@T) T@T)
(declare-fun $generated@@409 (T@T) T@T)
(declare-fun $generated@@410 (T@T) T@T)
(declare-fun $generated@@424 (T@U) Bool)
(declare-fun $generated@@431 (T@T T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@474 (T@U) Bool)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@514 (T@U T@U) T@U)
(declare-fun $generated@@522 (T@U T@U) T@U)
(declare-fun $generated@@536 (T@T) T@U)
(declare-fun $generated@@560 () T@T)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@599 (T@U) T@U)
(declare-fun $generated@@607 (T@U) T@U)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@625 (T@U) T@U)
(declare-fun $generated@@626 (T@U Int) T@U)
(declare-fun $generated@@635 (T@U) Int)
(declare-fun $generated@@637 (T@U) T@U)
(declare-fun $generated@@641 (T@U) T@U)
(declare-fun $generated@@645 (T@U) T@U)
(declare-fun $generated@@649 (T@U) T@U)
(declare-fun $generated@@667 (T@U) Int)
(declare-fun $generated@@668 (T@U) Int)
(declare-fun $generated@@687 (T@U) T@U)
(declare-fun $generated@@766 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@76)) (= (type $generated@@67) $generated@@73)) (= (type $generated@@68) $generated@@76)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@85) 11) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@96 $generated@@97)) 12))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@86 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@86 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@86 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@86 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@86 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@75 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@88)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@75 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ($generated@@141 T@U) ) (! (= (type ($generated@@83 $generated@@140 $generated@@141)) $generated@@85)
 :pattern ( ($generated@@83 $generated@@140 $generated@@141))
))) (= (type $generated@@84) $generated@@72)))
(assert (forall (($generated@@142 Int) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@85) (= (type $generated@@144) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@144)) (= ($generated@@82 ($generated@@83 $generated@@142 $generated@@143) $generated@@84 $generated@@144)  (and ($generated@@82 ($generated@@8 $generated@@142) $generated@@46 $generated@@144) ($generated@@82 $generated@@143 $generated@@84 $generated@@144))))
 :pattern ( ($generated@@82 ($generated@@83 $generated@@142 $generated@@143) $generated@@84 $generated@@144))
)))
(assert  (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@146 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@147) (= (type $generated@@150) $generated@@85)) (= (type $generated@@151) $generated@@85)) (= ($generated@@145 ($generated@@146 $generated@@149) $generated@@150 $generated@@151) (= $generated@@150 $generated@@151)))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@149) $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 Int) ) (! (= (type ($generated@@152 $generated@@153)) $generated@@72)
 :pattern ( ($generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@82 $generated@@154 ($generated@@152 0) $generated@@155))
 :pattern ( ($generated@@82 $generated@@154 ($generated@@152 0) $generated@@155))
)))
(assert (= ($generated@@1 $generated@@157) 16))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@157) (= (type $generated@@159) $generated@@157)) (= (type $generated@@160) $generated@@157)) (and ($generated@@156 $generated@@158 $generated@@159) ($generated@@156 $generated@@159 $generated@@160))) ($generated@@156 $generated@@158 $generated@@160))
 :pattern ( ($generated@@156 $generated@@158 $generated@@159) ($generated@@156 $generated@@159 $generated@@160))
 :pattern ( ($generated@@156 $generated@@158 $generated@@159) ($generated@@156 $generated@@158 $generated@@160))
)))
(assert  (and (and (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@167 $generated@@170 $generated@@171)) $generated@@157)
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
)) (forall (($generated@@172 Int) ) (! (= (type ($generated@@168 $generated@@172)) $generated@@157)
 :pattern ( ($generated@@168 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@169 $generated@@173)) $generated@@85)
 :pattern ( ($generated@@169 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@174) $generated@@157) (= (type $generated@@175) $generated@@147)) (= (type $generated@@176) $generated@@85)) (= (type $generated@@177) $generated@@85)) (and ($generated@@162 $generated@@176 $generated@@84) ($generated@@162 $generated@@177 $generated@@84))) (= ($generated@@161 $generated@@174 ($generated@@146 $generated@@175) $generated@@176 $generated@@177)  (and (=> (< 0 ($generated@@163 $generated@@174)) (or (and ($generated@@164 $generated@@176) ($generated@@164 $generated@@177)) (and (and ($generated@@165 $generated@@176) ($generated@@165 $generated@@177)) (=> (and ($generated@@165 $generated@@176) ($generated@@165 $generated@@177)) (and (= ($generated@@166 $generated@@176) ($generated@@166 $generated@@177)) ($generated@@161 ($generated@@167 $generated@@174 ($generated@@168 1)) $generated@@175 ($generated@@169 $generated@@176) ($generated@@169 $generated@@177))))))) (=> (and (not (= $generated@@174 ($generated@@168 0))) (= ($generated@@163 $generated@@174) 0)) ($generated@@145 $generated@@175 $generated@@176 $generated@@177)))))
 :pattern ( ($generated@@161 $generated@@174 ($generated@@146 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@2) ($generated@@162 $generated@@178 ($generated@@152 0)))
 :pattern ( ($generated@@162 $generated@@178 ($generated@@152 0)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 Int) ) (!  (=> (= (type $generated@@179) $generated@@157) (=> (and (and (<= 0 $generated@@180) (<= 0 $generated@@181)) (<= (+ $generated@@180 $generated@@181) ($generated@@163 $generated@@179))) (= ($generated@@167 ($generated@@167 $generated@@179 ($generated@@168 $generated@@180)) ($generated@@168 $generated@@181)) ($generated@@167 $generated@@179 ($generated@@168 (+ $generated@@180 $generated@@181))))))
 :pattern ( ($generated@@167 ($generated@@167 $generated@@179 ($generated@@168 $generated@@180)) ($generated@@168 $generated@@181)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@184 $generated@@185)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@72) (= (type $generated@@187) $generated@@72)) (= (type $generated@@188) $generated@@85)) ($generated@@162 $generated@@188 ($generated@@183 $generated@@186 $generated@@187))) ($generated@@182 $generated@@188))
 :pattern ( ($generated@@182 $generated@@188) ($generated@@162 $generated@@188 ($generated@@183 $generated@@186 $generated@@187)))
)))
(assert  (and (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@157)
 :pattern ( ($generated@@190 $generated@@192))
)) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@157)
 :pattern ( ($generated@@191 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@85) (= (type $generated@@195) $generated@@85)) true) (= ($generated@@189 $generated@@194 $generated@@195)  (and (= ($generated@@190 $generated@@194) ($generated@@190 $generated@@195)) (= ($generated@@191 $generated@@194) ($generated@@191 $generated@@195)))))
 :pattern ( ($generated@@189 $generated@@194 $generated@@195))
)))
(assert  (and (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@76)
 :pattern ( ($generated@@196 $generated@@198))
)) (= (type $generated@@197) $generated@@85)))
(assert (= ($generated@@196 $generated@@197) $generated@@63))
(assert (= (type $generated@@199) $generated@@85))
(assert (= ($generated@@196 $generated@@199) $generated@@66))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@72)
 :pattern ( ($generated@@200 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) ($generated@@86 $generated@@157 $generated@@2)) (= (type $generated@@204) $generated@@72)) ($generated@@162 $generated@@203 ($generated@@200 $generated@@204))) ($generated@@201 $generated@@203))
 :pattern ( ($generated@@162 $generated@@203 ($generated@@200 $generated@@204)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and (and (= (type $generated@@205) $generated@@147) (= (type $generated@@206) $generated@@85)) (= (type $generated@@207) $generated@@85)) (and ($generated@@162 $generated@@206 $generated@@84) ($generated@@162 $generated@@207 $generated@@84))) (= ($generated@@145 ($generated@@146 $generated@@205) $generated@@206 $generated@@207)  (or (and ($generated@@164 $generated@@206) ($generated@@164 $generated@@207)) (and (and ($generated@@165 $generated@@206) ($generated@@165 $generated@@207)) (=> (and ($generated@@165 $generated@@206) ($generated@@165 $generated@@207)) (and (= ($generated@@166 $generated@@206) ($generated@@166 $generated@@207)) ($generated@@145 $generated@@205 ($generated@@169 $generated@@206) ($generated@@169 $generated@@207))))))))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@205) $generated@@206 $generated@@207))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (= ($generated@@1 ($generated@@210 $generated@@214 $generated@@215)) 17)) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@211 ($generated@@210 $generated@@216 $generated@@217)) $generated@@216)
 :pattern ( ($generated@@210 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@212 ($generated@@210 $generated@@218 $generated@@219)) $generated@@219)
 :pattern ( ($generated@@210 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@212 (type $generated@@220))))
(= (type ($generated@@208 $generated@@220 $generated@@221 $generated@@222)) $generated@@223))
 :pattern ( ($generated@@208 $generated@@220 $generated@@221 $generated@@222))
))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 (type $generated@@227)))
(let (($generated@@229 (type $generated@@225)))
(= (type ($generated@@213 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@210 $generated@@229 $generated@@228))))
 :pattern ( ($generated@@213 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@212 (type $generated@@230))))
 (=> (= (type $generated@@233) $generated@@234) (= ($generated@@208 ($generated@@213 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@231 $generated@@232) $generated@@233)))
 :weight 0
))) (and (and (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@208 ($generated@@213 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@208 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
)) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (or (= $generated@@244 $generated@@246) (= ($generated@@208 ($generated@@213 $generated@@242 $generated@@243 $generated@@244 $generated@@241) $generated@@245 $generated@@246) ($generated@@208 $generated@@242 $generated@@245 $generated@@246)))
 :weight 0
))) (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (or true (= ($generated@@208 ($generated@@213 $generated@@248 $generated@@249 $generated@@250 $generated@@247) $generated@@251 $generated@@252) ($generated@@208 $generated@@248 $generated@@251 $generated@@252)))
 :weight 0
)))) (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 Bool) ) (! (= (type ($generated@@209 $generated@@253 $generated@@254 $generated@@255 $generated@@256)) ($generated@@210 $generated@@87 $generated@@4))
 :pattern ( ($generated@@209 $generated@@253 $generated@@254 $generated@@255 $generated@@256))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 Bool) ($generated@@261 T@U) ($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@75 (type $generated@@262))))
 (=> (and (and (and (and (= (type $generated@@257) $generated@@87) (= (type $generated@@258) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@259) ($generated@@74 $generated@@4))) (= (type $generated@@261) $generated@@87)) (= (type $generated@@262) ($generated@@74 $generated@@263))) (= ($generated@@0 ($generated@@208 ($generated@@209 $generated@@257 $generated@@258 $generated@@259 $generated@@260) $generated@@261 $generated@@262))  (=> (and (not (= $generated@@261 $generated@@257)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@258 $generated@@261) $generated@@259))) $generated@@260))))
 :pattern ( ($generated@@208 ($generated@@209 $generated@@257 $generated@@258 $generated@@259 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@265 $generated@@267)) $generated@@85)
 :pattern ( ($generated@@265 $generated@@267))
)))
(assert  (=> (<= 1 $generated@@264) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@147) (or $generated@@266 (not (= 1 $generated@@264)))) ($generated@@162 ($generated@@265 $generated@@268) $generated@@84))
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@269 $generated@@271)) $generated@@85)
 :pattern ( ($generated@@269 $generated@@271))
)))
(assert  (=> (<= 1 $generated@@264) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@147) (or $generated@@270 (not (= 1 $generated@@264)))) ($generated@@162 ($generated@@269 $generated@@272) $generated@@84))
 :pattern ( ($generated@@269 $generated@@272))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (= (type $generated@@273) $generated@@147) (= (type $generated@@274) $generated@@85)) (= (type $generated@@275) $generated@@85)) (forall (($generated@@276 Int) ) (!  (=> (<= 0 $generated@@276) ($generated@@161 ($generated@@168 $generated@@276) ($generated@@146 $generated@@273) $generated@@274 $generated@@275))
 :pattern ( ($generated@@161 ($generated@@168 $generated@@276) ($generated@@146 $generated@@273) $generated@@274 $generated@@275))
))) ($generated@@145 ($generated@@146 $generated@@273) $generated@@274 $generated@@275))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (= (type ($generated@@277 $generated@@279 $generated@@280)) $generated@@85)
 :pattern ( ($generated@@277 $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (= (type $generated@@281) $generated@@72) (= (type $generated@@282) $generated@@72)) (= (type $generated@@283) $generated@@157)) (= (type $generated@@284) $generated@@157)) (= ($generated@@162 ($generated@@277 $generated@@283 $generated@@284) ($generated@@183 $generated@@281 $generated@@282))  (and ($generated@@278 $generated@@283 $generated@@281) ($generated@@278 $generated@@284 $generated@@282))))
 :pattern ( ($generated@@162 ($generated@@277 $generated@@283 $generated@@284) ($generated@@183 $generated@@281 $generated@@282)))
)))
(assert ($generated@@162 $generated@@197 $generated@@84))
(assert (= (type $generated@@285) $generated@@72))
(assert ($generated@@162 $generated@@199 $generated@@285))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) ($generated@@86 $generated@@87 $generated@@88)) ($generated@@89 $generated@@286)) ($generated@@82 $generated@@197 $generated@@84 $generated@@286))
 :pattern ( ($generated@@82 $generated@@197 $generated@@84 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@86 $generated@@87 $generated@@88)) ($generated@@89 $generated@@287)) ($generated@@82 $generated@@199 $generated@@285 $generated@@287))
 :pattern ( ($generated@@82 $generated@@199 $generated@@285 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@85) (= (type $generated@@289) $generated@@85)) (= ($generated@@189 $generated@@288 $generated@@289) (= $generated@@288 $generated@@289)))
 :pattern ( ($generated@@189 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@85) (= (type $generated@@292) $generated@@85)) (= ($generated@@290 $generated@@291 $generated@@292) (= $generated@@291 $generated@@292)))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) $generated@@157) (= (type $generated@@294) $generated@@147)) (= (type $generated@@295) $generated@@85)) (= (type $generated@@296) $generated@@85)) (= (type $generated@@297) $generated@@157)) (and ($generated@@156 $generated@@293 $generated@@297) ($generated@@161 $generated@@297 ($generated@@146 $generated@@294) $generated@@295 $generated@@296))) ($generated@@161 $generated@@293 ($generated@@146 $generated@@294) $generated@@295 $generated@@296))
 :pattern ( ($generated@@161 $generated@@293 ($generated@@146 $generated@@294) $generated@@295 $generated@@296) ($generated@@161 $generated@@297 ($generated@@146 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@72)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) ($generated@@86 $generated@@157 $generated@@4)) (= (type $generated@@301) $generated@@72)) (= ($generated@@162 $generated@@300 ($generated@@298 $generated@@301)) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@157) ($generated@@0 ($generated@@92 $generated@@300 $generated@@302))) ($generated@@278 $generated@@302 $generated@@301))
 :pattern ( ($generated@@92 $generated@@300 $generated@@302))
))))
 :pattern ( ($generated@@162 $generated@@300 ($generated@@298 $generated@@301)))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@72)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) ($generated@@86 $generated@@157 $generated@@4)) (= (type $generated@@306) $generated@@72)) (= ($generated@@162 $generated@@305 ($generated@@303 $generated@@306)) (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@157) ($generated@@0 ($generated@@92 $generated@@305 $generated@@307))) ($generated@@278 $generated@@307 $generated@@306))
 :pattern ( ($generated@@92 $generated@@305 $generated@@307))
))))
 :pattern ( ($generated@@162 $generated@@305 ($generated@@303 $generated@@306)))
)))
(assert (forall (($generated@@309 Int) ) (! (= ($generated@@308 $generated@@309) $generated@@309)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 (type $generated@@311)))
(= (type ($generated@@310 $generated@@311)) $generated@@312))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (= ($generated@@310 $generated@@313) $generated@@313)
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (= (type $generated@@315) $generated@@85) (= (type $generated@@316) $generated@@85)) (and ($generated@@314 $generated@@315) ($generated@@314 $generated@@316))) (= ($generated@@290 $generated@@315 $generated@@316) true))
 :pattern ( ($generated@@290 $generated@@315 $generated@@316) ($generated@@314 $generated@@315))
 :pattern ( ($generated@@290 $generated@@315 $generated@@316) ($generated@@314 $generated@@316))
)))
(assert  (=> (<= 2 $generated@@264) (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@319) $generated@@147) (= (type $generated@@320) $generated@@157)) (= (type $generated@@321) $generated@@85)) (= (type $generated@@322) $generated@@85)) (or ($generated@@318 ($generated@@310 $generated@@320) $generated@@321 $generated@@322) (and (not (= 2 $generated@@264)) (and ($generated@@162 $generated@@321 $generated@@84) ($generated@@162 $generated@@322 $generated@@84))))) (and (and (=> (< 0 ($generated@@163 $generated@@320)) (=> (not ($generated@@164 $generated@@321)) (let (($generated@@323 ($generated@@169 $generated@@321)))
(let (($generated@@324 ($generated@@166 $generated@@321)))
 (=> ($generated@@165 $generated@@322) (=> (<= $generated@@324 ($generated@@166 $generated@@322)) ($generated@@318 ($generated@@167 $generated@@320 ($generated@@168 1)) $generated@@323 ($generated@@169 $generated@@322)))))))) (=> (=> (< 0 ($generated@@163 $generated@@320)) (ite ($generated@@164 $generated@@321) true (let (($generated@@325 ($generated@@169 $generated@@321)))
(let (($generated@@326 ($generated@@166 $generated@@321)))
 (and (and ($generated@@165 $generated@@322) (<= $generated@@326 ($generated@@166 $generated@@322))) ($generated@@317 ($generated@@146 $generated@@319) ($generated@@167 $generated@@320 ($generated@@168 1)) $generated@@325 ($generated@@169 $generated@@322))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@320)) (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@157) ($generated@@156 $generated@@327 $generated@@320)) ($generated@@318 $generated@@327 $generated@@321 $generated@@322))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@319) $generated@@327 $generated@@321 $generated@@322))
))))) (= ($generated@@317 ($generated@@146 $generated@@319) ($generated@@310 $generated@@320) $generated@@321 $generated@@322)  (and (=> (< 0 ($generated@@163 $generated@@320)) (ite ($generated@@164 $generated@@321) true (let (($generated@@328 ($generated@@169 $generated@@321)))
(let (($generated@@329 ($generated@@166 $generated@@321)))
 (and (and ($generated@@165 $generated@@322) (<= $generated@@329 ($generated@@166 $generated@@322))) ($generated@@317 ($generated@@146 $generated@@319) ($generated@@167 $generated@@320 ($generated@@168 1)) $generated@@328 ($generated@@169 $generated@@322))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@320)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@157) ($generated@@156 $generated@@330 $generated@@320)) ($generated@@317 ($generated@@146 $generated@@319) $generated@@330 $generated@@321 $generated@@322))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@319) $generated@@330 $generated@@321 $generated@@322))
)))))))
 :weight 3
 :pattern ( ($generated@@317 ($generated@@146 $generated@@319) ($generated@@310 $generated@@320) $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@332) $generated@@72) (= (type $generated@@333) $generated@@72)) (= (type $generated@@334) $generated@@157)) (= (type $generated@@335) $generated@@157)) (= (type $generated@@336) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@336)) (= ($generated@@82 ($generated@@277 $generated@@334 $generated@@335) ($generated@@183 $generated@@332 $generated@@333) $generated@@336)  (and ($generated@@331 $generated@@334 $generated@@332 $generated@@336) ($generated@@331 $generated@@335 $generated@@333 $generated@@336))))
 :pattern ( ($generated@@82 ($generated@@277 $generated@@334 $generated@@335) ($generated@@183 $generated@@332 $generated@@333) $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@85) (= ($generated@@182 $generated@@337) (= ($generated@@196 $generated@@337) $generated@@61)))
 :pattern ( ($generated@@182 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@85) (= ($generated@@164 $generated@@338) (= ($generated@@196 $generated@@338) $generated@@63)))
 :pattern ( ($generated@@164 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@85) (= ($generated@@165 $generated@@339) (= ($generated@@196 $generated@@339) $generated@@65)))
 :pattern ( ($generated@@165 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@85) (= ($generated@@314 $generated@@340) (= ($generated@@196 $generated@@340) $generated@@66)))
 :pattern ( ($generated@@314 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@85) (= ($generated@@341 $generated@@342) (= ($generated@@196 $generated@@342) $generated@@68)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert  (and (forall (($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@345)) $generated@@147)
 :pattern ( ($generated@@343 $generated@@345))
)) (= (type $generated@@344) $generated@@147)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (and (= (type $generated@@346) $generated@@147) (= (type $generated@@347) $generated@@157)) (= (type $generated@@348) $generated@@85)) (= (type $generated@@349) $generated@@85)) (= ($generated@@317 $generated@@346 $generated@@347 $generated@@348 $generated@@349) ($generated@@317 $generated@@344 $generated@@347 $generated@@348 $generated@@349)))
 :pattern ( ($generated@@317 ($generated@@343 $generated@@346) $generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@85) ($generated@@182 $generated@@350)) (exists (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (and (and (= (type $generated@@351) $generated@@157) (= (type $generated@@352) $generated@@157)) (= $generated@@350 ($generated@@277 $generated@@351 $generated@@352)))
 :no-pattern (type $generated@@351)
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
)))
 :pattern ( ($generated@@182 $generated@@350))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@85) ($generated@@165 $generated@@353)) (exists (($generated@@354 Int) ($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@85) (= $generated@@353 ($generated@@83 $generated@@354 $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
)))
 :pattern ( ($generated@@165 $generated@@353))
)))
(assert  (and (and (forall (($generated@@360 T@T) ) (= ($generated@@1 ($generated@@358 $generated@@360)) 18)) (forall (($generated@@361 T@T) ) (! (= ($generated@@359 ($generated@@358 $generated@@361)) $generated@@361)
 :pattern ( ($generated@@358 $generated@@361))
))) (forall (($generated@@362 T@T) ) (! (= (type ($generated@@356 $generated@@362)) ($generated@@358 $generated@@362))
 :pattern ( ($generated@@356 $generated@@362))
))))
(assert (forall (($generated@@363 T@T) ) (! (= ($generated@@357 ($generated@@356 $generated@@363)) 0)
 :pattern ( ($generated@@356 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@85) ($generated@@164 $generated@@364)) (= $generated@@364 $generated@@197))
 :pattern ( ($generated@@164 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@85) ($generated@@314 $generated@@365)) (= $generated@@365 $generated@@199))
 :pattern ( ($generated@@314 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (= (type ($generated@@366 $generated@@367)) $generated@@85)
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@85) ($generated@@341 $generated@@368)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@85) (= $generated@@368 ($generated@@366 $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
)))
 :pattern ( ($generated@@341 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@370) $generated@@157) (= (type $generated@@371) $generated@@147)) (= (type $generated@@372) $generated@@85)) (= (type $generated@@373) $generated@@85)) (not (= $generated@@370 ($generated@@168 0)))) (= ($generated@@161 $generated@@370 ($generated@@146 $generated@@371) $generated@@372 $generated@@373) ($generated@@161 $generated@@370 $generated@@371 $generated@@372 $generated@@373)))
 :pattern ( ($generated@@161 $generated@@370 ($generated@@146 $generated@@371) $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) $generated@@147) (= (type $generated@@375) $generated@@85)) (= (type $generated@@376) $generated@@85)) (= ($generated@@145 ($generated@@146 $generated@@374) $generated@@375 $generated@@376) ($generated@@145 $generated@@374 $generated@@375 $generated@@376)))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@374) $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (= (type ($generated@@377 $generated@@378)) $generated@@157)
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@72) (= (type $generated@@381) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@331 ($generated@@377 $generated@@379) $generated@@380 $generated@@381) ($generated@@82 $generated@@379 $generated@@380 $generated@@381)))
 :pattern ( ($generated@@331 ($generated@@377 $generated@@379) $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@384 T@T) ) (! (= (type ($generated@@383 $generated@@384)) ($generated@@86 $generated@@384 $generated@@2))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@90 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@86 $generated@@386 $generated@@2)) (and (= (= ($generated@@382 $generated@@385) 0) (= $generated@@385 ($generated@@383 $generated@@386))) (=> (not (= ($generated@@382 $generated@@385) 0)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (< 0 ($generated ($generated@@92 $generated@@385 $generated@@387))))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert  (and (and (and (and (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (= ($generated@@1 ($generated@@390 $generated@@393 $generated@@394)) 19)) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@391 ($generated@@390 $generated@@395 $generated@@396)) $generated@@395)
 :pattern ( ($generated@@390 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (! (= ($generated@@392 ($generated@@390 $generated@@397 $generated@@398)) $generated@@398)
 :pattern ( ($generated@@390 $generated@@397 $generated@@398))
))) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@391 (type $generated@@399))))
(= (type ($generated@@388 $generated@@399)) ($generated@@86 $generated@@400 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@399))
))) (forall (($generated@@401 T@T) ($generated@@402 T@T) ) (! (= (type ($generated@@389 $generated@@401 $generated@@402)) ($generated@@390 $generated@@401 $generated@@402))
 :pattern ( ($generated@@389 $generated@@401 $generated@@402))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@T) ) (! (let (($generated@@405 (type $generated@@403)))
 (not ($generated@@0 ($generated@@92 ($generated@@388 ($generated@@389 $generated@@405 $generated@@404)) $generated@@403))))
 :pattern ( (let (($generated@@405 (type $generated@@403)))
($generated@@92 ($generated@@388 ($generated@@389 $generated@@405 $generated@@404)) $generated@@403)))
)))
(assert  (and (and (and (and (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (= ($generated@@1 ($generated@@408 $generated@@411 $generated@@412)) 20)) (forall (($generated@@413 T@T) ($generated@@414 T@T) ) (! (= ($generated@@409 ($generated@@408 $generated@@413 $generated@@414)) $generated@@413)
 :pattern ( ($generated@@408 $generated@@413 $generated@@414))
))) (forall (($generated@@415 T@T) ($generated@@416 T@T) ) (! (= ($generated@@410 ($generated@@408 $generated@@415 $generated@@416)) $generated@@416)
 :pattern ( ($generated@@408 $generated@@415 $generated@@416))
))) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@409 (type $generated@@417))))
(= (type ($generated@@406 $generated@@417)) ($generated@@86 $generated@@418 $generated@@4)))
 :pattern ( ($generated@@406 $generated@@417))
))) (forall (($generated@@419 T@T) ($generated@@420 T@T) ) (! (= (type ($generated@@407 $generated@@419 $generated@@420)) ($generated@@408 $generated@@419 $generated@@420))
 :pattern ( ($generated@@407 $generated@@419 $generated@@420))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@T) ) (! (let (($generated@@423 (type $generated@@421)))
 (not ($generated@@0 ($generated@@92 ($generated@@406 ($generated@@407 $generated@@423 $generated@@422)) $generated@@421))))
 :pattern ( (let (($generated@@423 (type $generated@@421)))
($generated@@92 ($generated@@406 ($generated@@407 $generated@@423 $generated@@422)) $generated@@421)))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (= (type $generated@@425) $generated@@157) (= (type $generated@@426) $generated@@157)) (and ($generated@@424 $generated@@426) (<= ($generated@@163 $generated@@426) ($generated@@163 $generated@@425)))) (and (= ($generated@@424 ($generated@@167 $generated@@425 $generated@@426)) ($generated@@424 $generated@@425)) (= ($generated@@163 ($generated@@167 $generated@@425 $generated@@426)) (- ($generated@@163 $generated@@425) ($generated@@163 $generated@@426)))))
 :pattern ( ($generated@@167 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 Int) ) (!  (=> (<= 0 $generated@@427) (and ($generated@@424 ($generated@@168 $generated@@427)) (= ($generated@@163 ($generated@@168 $generated@@427)) $generated@@427)))
 :pattern ( ($generated@@168 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@90 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@86 $generated@@429 $generated@@2)) (= ($generated@@201 $generated@@428) (forall (($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@429) (and (<= 0 ($generated ($generated@@92 $generated@@428 $generated@@430))) (<= ($generated ($generated@@92 $generated@@428 $generated@@430)) ($generated@@382 $generated@@428))))
 :pattern ( ($generated@@92 $generated@@428 $generated@@430))
)))))
 :pattern ( ($generated@@201 $generated@@428))
)))
(assert (forall (($generated@@432 T@T) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@432)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@157) ($generated@@278 $generated@@434 $generated@@84)) (and (= ($generated@@377 ($generated@@431 $generated@@85 $generated@@434)) $generated@@434) ($generated@@162 ($generated@@431 $generated@@85 $generated@@434) $generated@@84)))
 :pattern ( ($generated@@278 $generated@@434 $generated@@84))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@278 $generated@@435 $generated@@285)) (and (= ($generated@@377 ($generated@@431 $generated@@85 $generated@@435)) $generated@@435) ($generated@@162 ($generated@@431 $generated@@85 $generated@@435) $generated@@285)))
 :pattern ( ($generated@@278 $generated@@435 $generated@@285))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@85) (= ($generated@@162 ($generated@@366 $generated@@436) $generated@@285) ($generated@@162 $generated@@436 $generated@@285)))
 :pattern ( ($generated@@162 ($generated@@366 $generated@@436) $generated@@285))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (= (type $generated@@437) $generated@@147) (= (type $generated@@438) $generated@@85)) (= (type $generated@@439) $generated@@85)) (= ($generated@@145 ($generated@@146 $generated@@437) $generated@@438 $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@157) ($generated@@161 $generated@@440 ($generated@@146 $generated@@437) $generated@@438 $generated@@439))
 :pattern ( ($generated@@161 $generated@@440 ($generated@@146 $generated@@437) $generated@@438 $generated@@439))
))))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@437) $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@85)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (= (type $generated@@443) $generated@@85) (= (type $generated@@444) $generated@@85)) (and ($generated@@341 $generated@@443) ($generated@@341 $generated@@444))) (= ($generated@@290 $generated@@443 $generated@@444) ($generated@@290 ($generated@@441 $generated@@443) ($generated@@441 $generated@@444))))
 :pattern ( ($generated@@290 $generated@@443 $generated@@444) ($generated@@341 $generated@@443))
 :pattern ( ($generated@@290 $generated@@443 $generated@@444) ($generated@@341 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@392 (type $generated@@445))))
(let (($generated@@447 ($generated@@391 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@390 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@389 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) ($generated@@0 ($generated@@92 ($generated@@388 $generated@@445) $generated@@448)))
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@392 (type $generated@@450))))
(= (type ($generated@@449 $generated@@450)) ($generated@@86 $generated@@451 $generated@@4)))
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@392 (type $generated@@452))))
(let (($generated@@454 ($generated@@391 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@390 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@389 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ) (!  (and (= (type $generated@@455) $generated@@453) ($generated@@0 ($generated@@92 ($generated@@449 $generated@@452) $generated@@455)))
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@449 $generated@@452))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@410 (type $generated@@456))))
(let (($generated@@458 ($generated@@409 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@408 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@407 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ) (!  (and (= (type $generated@@459) $generated@@458) ($generated@@0 ($generated@@92 ($generated@@406 $generated@@456) $generated@@459)))
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@406 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@410 (type $generated@@461))))
(= (type ($generated@@460 $generated@@461)) ($generated@@86 $generated@@462 $generated@@4)))
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@410 (type $generated@@463))))
(let (($generated@@465 ($generated@@409 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@408 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@407 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ) (!  (and (= (type $generated@@466) $generated@@464) ($generated@@0 ($generated@@92 ($generated@@460 $generated@@463) $generated@@466)))
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@460 $generated@@463))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) ($generated@@86 $generated@@157 $generated@@2)) (= (type $generated@@468) $generated@@72)) (= ($generated@@162 $generated@@467 ($generated@@200 $generated@@468)) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@157) (< 0 ($generated ($generated@@92 $generated@@467 $generated@@469)))) ($generated@@278 $generated@@469 $generated@@468))
 :pattern ( ($generated@@92 $generated@@467 $generated@@469))
))))
 :pattern ( ($generated@@162 $generated@@467 ($generated@@200 $generated@@468)))
)))
(assert  (=> (<= 2 $generated@@264) (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@470) $generated@@147) (= (type $generated@@471) $generated@@157)) (= (type $generated@@472) $generated@@85)) (= (type $generated@@473) $generated@@85)) (or ($generated@@318 $generated@@471 $generated@@472 $generated@@473) (and (not (= 2 $generated@@264)) (and ($generated@@162 $generated@@472 $generated@@84) ($generated@@162 $generated@@473 $generated@@84))))) true)
 :pattern ( ($generated@@317 $generated@@470 $generated@@471 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@85) ($generated@@474 $generated@@475)) (or ($generated@@314 $generated@@475) ($generated@@341 $generated@@475)))
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@157) (= (type $generated@@477) $generated@@157)) (or (or ($generated@@156 $generated@@476 $generated@@477) (= $generated@@476 $generated@@477)) ($generated@@156 $generated@@477 $generated@@476)))
 :pattern ( ($generated@@156 $generated@@476 $generated@@477) ($generated@@156 $generated@@477 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@86 $generated@@157 $generated@@4)) (= (type $generated@@479) $generated@@72)) (= (type $generated@@480) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@478 ($generated@@298 $generated@@479) $generated@@480) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@157) ($generated@@0 ($generated@@92 $generated@@478 $generated@@481))) ($generated@@331 $generated@@481 $generated@@479 $generated@@480))
 :pattern ( ($generated@@92 $generated@@478 $generated@@481))
))))
 :pattern ( ($generated@@82 $generated@@478 ($generated@@298 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@86 $generated@@157 $generated@@4)) (= (type $generated@@483) $generated@@72)) (= (type $generated@@484) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@482 ($generated@@303 $generated@@483) $generated@@484) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@157) ($generated@@0 ($generated@@92 $generated@@482 $generated@@485))) ($generated@@331 $generated@@485 $generated@@483 $generated@@484))
 :pattern ( ($generated@@92 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@82 $generated@@482 ($generated@@303 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
(= ($generated ($generated@@92 ($generated@@383 $generated@@487) $generated@@486)) 0))
 :pattern ( (let (($generated@@487 (type $generated@@486)))
($generated@@92 ($generated@@383 $generated@@487) $generated@@486)))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) ($generated@@86 $generated@@157 $generated@@4))
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@392 (type $generated@@491))))
(let (($generated@@493 ($generated@@391 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491)) ($generated@@86 $generated@@493 $generated@@492))))
 :pattern ( ($generated@@489 $generated@@491))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) ($generated@@390 $generated@@157 $generated@@157)) (= (type $generated@@495) $generated@@157)) (= ($generated@@0 ($generated@@92 ($generated@@488 $generated@@494) $generated@@495))  (and ($generated@@0 ($generated@@92 ($generated@@388 $generated@@494) ($generated@@190 ($generated@@431 $generated@@85 $generated@@495)))) (= ($generated@@92 ($generated@@489 $generated@@494) ($generated@@190 ($generated@@431 $generated@@85 $generated@@495))) ($generated@@191 ($generated@@431 $generated@@85 $generated@@495))))))
 :pattern ( ($generated@@92 ($generated@@488 $generated@@494) $generated@@495))
)))
(assert  (and (forall (($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@498)) ($generated@@86 $generated@@157 $generated@@4))
 :pattern ( ($generated@@496 $generated@@498))
)) (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@410 (type $generated@@499))))
(let (($generated@@501 ($generated@@409 (type $generated@@499))))
(= (type ($generated@@497 $generated@@499)) ($generated@@86 $generated@@501 $generated@@500))))
 :pattern ( ($generated@@497 $generated@@499))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) ($generated@@408 $generated@@157 $generated@@157)) (= (type $generated@@503) $generated@@157)) (= ($generated@@0 ($generated@@92 ($generated@@496 $generated@@502) $generated@@503))  (and ($generated@@0 ($generated@@92 ($generated@@406 $generated@@502) ($generated@@190 ($generated@@431 $generated@@85 $generated@@503)))) (= ($generated@@92 ($generated@@497 $generated@@502) ($generated@@190 ($generated@@431 $generated@@85 $generated@@503))) ($generated@@191 ($generated@@431 $generated@@85 $generated@@503))))))
 :pattern ( ($generated@@92 ($generated@@496 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(let (($generated@@507 ($generated@@391 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@390 $generated@@507 $generated@@506)) (= ($generated@@0 ($generated@@92 ($generated@@449 $generated@@504) $generated@@505)) (exists (($generated@@508 T@U) ) (!  (and (= (type $generated@@508) $generated@@507) (and ($generated@@0 ($generated@@92 ($generated@@388 $generated@@504) $generated@@508)) (= $generated@@505 ($generated@@92 ($generated@@489 $generated@@504) $generated@@508))))
 :pattern ( ($generated@@92 ($generated@@388 $generated@@504) $generated@@508))
 :pattern ( ($generated@@92 ($generated@@489 $generated@@504) $generated@@508))
))))))
 :pattern ( ($generated@@92 ($generated@@449 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(let (($generated@@512 ($generated@@409 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@408 $generated@@512 $generated@@511)) (= ($generated@@0 ($generated@@92 ($generated@@460 $generated@@509) $generated@@510)) (exists (($generated@@513 T@U) ) (!  (and (= (type $generated@@513) $generated@@512) (and ($generated@@0 ($generated@@92 ($generated@@406 $generated@@509) $generated@@513)) (= $generated@@510 ($generated@@92 ($generated@@497 $generated@@509) $generated@@513))))
 :pattern ( ($generated@@92 ($generated@@406 $generated@@509) $generated@@513))
 :pattern ( ($generated@@92 ($generated@@497 $generated@@509) $generated@@513))
))))))
 :pattern ( ($generated@@92 ($generated@@460 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (! (= (type ($generated@@514 $generated@@515 $generated@@516)) $generated@@72)
 :pattern ( ($generated@@514 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) ($generated@@390 $generated@@157 $generated@@157)) (= (type $generated@@518) $generated@@72)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@517 ($generated@@514 $generated@@518 $generated@@519) $generated@@520) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@157) ($generated@@0 ($generated@@92 ($generated@@388 $generated@@517) $generated@@521))) (and ($generated@@331 ($generated@@92 ($generated@@489 $generated@@517) $generated@@521) $generated@@519 $generated@@520) ($generated@@331 $generated@@521 $generated@@518 $generated@@520)))
 :pattern ( ($generated@@92 ($generated@@489 $generated@@517) $generated@@521))
 :pattern ( ($generated@@92 ($generated@@388 $generated@@517) $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@517 ($generated@@514 $generated@@518 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (! (= (type ($generated@@522 $generated@@523 $generated@@524)) $generated@@72)
 :pattern ( ($generated@@522 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) ($generated@@408 $generated@@157 $generated@@157)) (= (type $generated@@526) $generated@@72)) (= (type $generated@@527) $generated@@72)) (= (type $generated@@528) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@525 ($generated@@522 $generated@@526 $generated@@527) $generated@@528) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@157) ($generated@@0 ($generated@@92 ($generated@@406 $generated@@525) $generated@@529))) (and ($generated@@331 ($generated@@92 ($generated@@497 $generated@@525) $generated@@529) $generated@@527 $generated@@528) ($generated@@331 $generated@@529 $generated@@526 $generated@@528)))
 :pattern ( ($generated@@92 ($generated@@497 $generated@@525) $generated@@529))
 :pattern ( ($generated@@92 ($generated@@406 $generated@@525) $generated@@529))
))))
 :pattern ( ($generated@@82 $generated@@525 ($generated@@522 $generated@@526 $generated@@527) $generated@@528))
)))
(assert  (=> (<= 1 $generated@@264) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@147) (or $generated@@266 (not (= 1 $generated@@264)))) (and $generated@@266 (= ($generated@@265 ($generated@@146 $generated@@530)) ($generated@@310 ($generated@@83 ($generated@@308 0) ($generated@@310 ($generated@@265 $generated@@530)))))))
 :pattern ( ($generated@@265 ($generated@@146 $generated@@530)))
))))
(assert  (=> (<= 1 $generated@@264) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@147) (or $generated@@270 (not (= 1 $generated@@264)))) (and $generated@@270 (= ($generated@@269 ($generated@@146 $generated@@531)) ($generated@@310 ($generated@@83 ($generated@@308 1) ($generated@@310 ($generated@@269 $generated@@531)))))))
 :pattern ( ($generated@@269 ($generated@@146 $generated@@531)))
))))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@85) (= (type $generated@@533) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@533)) (= ($generated@@82 ($generated@@366 $generated@@532) $generated@@285 $generated@@533) ($generated@@82 $generated@@532 $generated@@285 $generated@@533)))
 :pattern ( ($generated@@82 ($generated@@366 $generated@@532) $generated@@285 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@85) ($generated@@162 $generated@@534 $generated@@84)) (or ($generated@@164 $generated@@534) ($generated@@165 $generated@@534)))
 :pattern ( ($generated@@165 $generated@@534) ($generated@@162 $generated@@534 $generated@@84))
 :pattern ( ($generated@@164 $generated@@534) ($generated@@162 $generated@@534 $generated@@84))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@85) ($generated@@162 $generated@@535 $generated@@285)) (or ($generated@@314 $generated@@535) ($generated@@341 $generated@@535)))
 :pattern ( ($generated@@341 $generated@@535) ($generated@@162 $generated@@535 $generated@@285))
 :pattern ( ($generated@@314 $generated@@535) ($generated@@162 $generated@@535 $generated@@285))
)))
(assert (forall (($generated@@537 T@T) ) (! (= (type ($generated@@536 $generated@@537)) ($generated@@86 $generated@@537 $generated@@4))
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@410 (type $generated@@538))))
(let (($generated@@540 ($generated@@409 (type $generated@@538))))
 (=> (= (type $generated@@538) ($generated@@408 $generated@@540 $generated@@539)) (= (= $generated@@538 ($generated@@407 $generated@@540 $generated@@539)) (= ($generated@@406 $generated@@538) ($generated@@536 $generated@@540))))))
 :pattern ( ($generated@@406 $generated@@538))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@410 (type $generated@@541))))
(let (($generated@@543 ($generated@@409 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@408 $generated@@543 $generated@@542)) (= (= $generated@@541 ($generated@@407 $generated@@543 $generated@@542)) (= ($generated@@460 $generated@@541) ($generated@@536 $generated@@542))))))
 :pattern ( ($generated@@460 $generated@@541))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@410 (type $generated@@544))))
(let (($generated@@546 ($generated@@409 (type $generated@@544))))
 (=> (= (type $generated@@544) ($generated@@408 $generated@@546 $generated@@545)) (= (= $generated@@544 ($generated@@407 $generated@@546 $generated@@545)) (= ($generated@@496 $generated@@544) ($generated@@536 $generated@@157))))))
 :pattern ( ($generated@@496 $generated@@544))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@392 (type $generated@@547))))
(let (($generated@@549 ($generated@@391 (type $generated@@547))))
 (=> (= (type $generated@@547) ($generated@@390 $generated@@549 $generated@@548)) (or (= $generated@@547 ($generated@@389 $generated@@549 $generated@@548)) (exists (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (and (and (= (type $generated@@550) $generated@@157) (= (type $generated@@551) $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@488 $generated@@547) ($generated@@377 ($generated@@277 $generated@@550 $generated@@551)))))
 :no-pattern (type $generated@@550)
 :no-pattern (type $generated@@551)
 :no-pattern ($generated $generated@@550)
 :no-pattern ($generated@@0 $generated@@550)
 :no-pattern ($generated $generated@@551)
 :no-pattern ($generated@@0 $generated@@551)
))))))
 :pattern ( ($generated@@488 $generated@@547))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@410 (type $generated@@552))))
(let (($generated@@554 ($generated@@409 (type $generated@@552))))
 (=> (= (type $generated@@552) ($generated@@408 $generated@@554 $generated@@553)) (or (= $generated@@552 ($generated@@407 $generated@@554 $generated@@553)) (exists (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (and (and (= (type $generated@@555) $generated@@157) (= (type $generated@@556) $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@496 $generated@@552) ($generated@@377 ($generated@@277 $generated@@555 $generated@@556)))))
 :no-pattern (type $generated@@555)
 :no-pattern (type $generated@@556)
 :no-pattern ($generated $generated@@555)
 :no-pattern ($generated@@0 $generated@@555)
 :no-pattern ($generated $generated@@556)
 :no-pattern ($generated@@0 $generated@@556)
))))))
 :pattern ( ($generated@@496 $generated@@552))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@157) ($generated@@278 $generated@@557 $generated@@46)) (and (= ($generated@@377 ($generated@@431 $generated@@2 $generated@@557)) $generated@@557) ($generated@@162 ($generated@@431 $generated@@2 $generated@@557) $generated@@46)))
 :pattern ( ($generated@@278 $generated@@557 $generated@@46))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@157) ($generated@@278 $generated@@558 $generated@@47)) (and (= ($generated@@377 ($generated@@431 $generated@@3 $generated@@558)) $generated@@558) ($generated@@162 ($generated@@431 $generated@@3 $generated@@558) $generated@@47)))
 :pattern ( ($generated@@278 $generated@@558 $generated@@47))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@157) ($generated@@278 $generated@@559 $generated@@44)) (and (= ($generated@@377 ($generated@@431 $generated@@4 $generated@@559)) $generated@@559) ($generated@@162 ($generated@@431 $generated@@4 $generated@@559) $generated@@44)))
 :pattern ( ($generated@@278 $generated@@559 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@560) 21))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@157) ($generated@@278 $generated@@561 $generated@@45)) (and (= ($generated@@377 ($generated@@431 $generated@@560 $generated@@561)) $generated@@561) ($generated@@162 ($generated@@431 $generated@@560 $generated@@561) $generated@@45)))
 :pattern ( ($generated@@278 $generated@@561 $generated@@45))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@72) (= ($generated@@278 ($generated@@377 $generated@@562) $generated@@563) ($generated@@162 $generated@@562 $generated@@563)))
 :pattern ( ($generated@@278 ($generated@@377 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@147) (= (type $generated@@565) $generated@@157)) (= (type $generated@@566) $generated@@85)) (= (type $generated@@567) $generated@@85)) (= ($generated@@317 ($generated@@146 $generated@@564) $generated@@565 $generated@@566 $generated@@567) ($generated@@317 $generated@@564 $generated@@565 $generated@@566 $generated@@567)))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@564) $generated@@565 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@157) (<= 0 ($generated@@163 $generated@@568)))
 :pattern ( ($generated@@163 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@90 (type $generated@@569))))
 (=> (= (type $generated@@569) ($generated@@86 $generated@@570 $generated@@2)) (<= 0 ($generated@@382 $generated@@569))))
 :pattern ( ($generated@@382 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@359 (type $generated@@571))))
 (=> (= (type $generated@@571) ($generated@@358 $generated@@572)) (<= 0 ($generated@@357 $generated@@571))))
 :pattern ( ($generated@@357 $generated@@571))
)))
(assert  (=> (<= 2 $generated@@264) (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@573) $generated@@147) (= (type $generated@@574) $generated@@157)) (= (type $generated@@575) $generated@@85)) (= (type $generated@@576) $generated@@85)) (or ($generated@@318 $generated@@574 $generated@@575 $generated@@576) (and (not (= 2 $generated@@264)) (and ($generated@@162 $generated@@575 $generated@@84) ($generated@@162 $generated@@576 $generated@@84))))) (and (and (=> (< 0 ($generated@@163 $generated@@574)) (=> (not ($generated@@164 $generated@@575)) (let (($generated@@577 ($generated@@169 $generated@@575)))
(let (($generated@@578 ($generated@@166 $generated@@575)))
 (=> ($generated@@165 $generated@@576) (=> (<= $generated@@578 ($generated@@166 $generated@@576)) ($generated@@318 ($generated@@167 $generated@@574 ($generated@@168 1)) $generated@@577 ($generated@@169 $generated@@576)))))))) (=> (=> (< 0 ($generated@@163 $generated@@574)) (ite ($generated@@164 $generated@@575) true (let (($generated@@579 ($generated@@169 $generated@@575)))
(let (($generated@@580 ($generated@@166 $generated@@575)))
 (and (and ($generated@@165 $generated@@576) (<= $generated@@580 ($generated@@166 $generated@@576))) ($generated@@317 $generated@@573 ($generated@@167 $generated@@574 ($generated@@168 1)) $generated@@579 ($generated@@169 $generated@@576))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@574)) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@157) ($generated@@156 $generated@@581 $generated@@574)) ($generated@@318 $generated@@581 $generated@@575 $generated@@576))
 :pattern ( ($generated@@317 $generated@@573 $generated@@581 $generated@@575 $generated@@576))
))))) (= ($generated@@317 ($generated@@146 $generated@@573) $generated@@574 $generated@@575 $generated@@576)  (and (=> (< 0 ($generated@@163 $generated@@574)) (ite ($generated@@164 $generated@@575) true (let (($generated@@582 ($generated@@169 $generated@@575)))
(let (($generated@@583 ($generated@@166 $generated@@575)))
 (and (and ($generated@@165 $generated@@576) (<= $generated@@583 ($generated@@166 $generated@@576))) ($generated@@317 $generated@@573 ($generated@@167 $generated@@574 ($generated@@168 1)) $generated@@582 ($generated@@169 $generated@@576))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@574)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@157) ($generated@@156 $generated@@584 $generated@@574)) ($generated@@317 $generated@@573 $generated@@584 $generated@@575 $generated@@576))
 :pattern ( ($generated@@317 $generated@@573 $generated@@584 $generated@@575 $generated@@576))
)))))))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@573) $generated@@574 $generated@@575 $generated@@576))
))))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@72)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@72) (= (type $generated@@588) $generated@@72)) (= ($generated@@585 ($generated@@514 $generated@@587 $generated@@588)) $generated@@587))
 :pattern ( ($generated@@514 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@72)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@72) (= (type $generated@@592) $generated@@72)) (= ($generated@@589 ($generated@@514 $generated@@591 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@514 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@72) (= (type $generated@@594) $generated@@72)) (= ($generated@@80 ($generated@@514 $generated@@593 $generated@@594)) $generated@@58))
 :pattern ( ($generated@@514 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@72)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@72) (= (type $generated@@598) $generated@@72)) (= ($generated@@595 ($generated@@522 $generated@@597 $generated@@598)) $generated@@597))
 :pattern ( ($generated@@522 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ) (! (= (type ($generated@@599 $generated@@600)) $generated@@72)
 :pattern ( ($generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@72) (= (type $generated@@602) $generated@@72)) (= ($generated@@599 ($generated@@522 $generated@@601 $generated@@602)) $generated@@602))
 :pattern ( ($generated@@522 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@72) (= (type $generated@@604) $generated@@72)) (= ($generated@@80 ($generated@@522 $generated@@603 $generated@@604)) $generated@@59))
 :pattern ( ($generated@@522 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@157) (= (type $generated@@606) $generated@@157)) (= ($generated@@196 ($generated@@277 $generated@@605 $generated@@606)) $generated@@61))
 :pattern ( ($generated@@277 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ) (! (= (type ($generated@@607 $generated@@608)) $generated@@72)
 :pattern ( ($generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@72) (= (type $generated@@610) $generated@@72)) (= ($generated@@607 ($generated@@183 $generated@@609 $generated@@610)) $generated@@609))
 :pattern ( ($generated@@183 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ) (! (= (type ($generated@@611 $generated@@612)) $generated@@72)
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@72) (= (type $generated@@614) $generated@@72)) (= ($generated@@611 ($generated@@183 $generated@@613 $generated@@614)) $generated@@614))
 :pattern ( ($generated@@183 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@157) (= (type $generated@@616) $generated@@157)) (= ($generated@@190 ($generated@@277 $generated@@615 $generated@@616)) $generated@@615))
 :pattern ( ($generated@@277 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@157) (= (type $generated@@618) $generated@@157)) (= ($generated@@191 ($generated@@277 $generated@@617 $generated@@618)) $generated@@618))
 :pattern ( ($generated@@277 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 Int) ($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@85) (= ($generated@@196 ($generated@@83 $generated@@619 $generated@@620)) $generated@@65))
 :pattern ( ($generated@@83 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 Int) ($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@85) (= ($generated@@166 ($generated@@83 $generated@@621 $generated@@622)) $generated@@621))
 :pattern ( ($generated@@83 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 Int) ($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@85) (= ($generated@@169 ($generated@@83 $generated@@623 $generated@@624)) $generated@@624))
 :pattern ( ($generated@@83 $generated@@623 $generated@@624))
)))
(assert  (and (forall (($generated@@627 T@U) ) (! (= (type ($generated@@625 $generated@@627)) $generated@@72)
 :pattern ( ($generated@@625 $generated@@627))
)) (forall (($generated@@628 T@U) ($generated@@629 Int) ) (! (let (($generated@@630 ($generated@@359 (type $generated@@628))))
(= (type ($generated@@626 $generated@@628 $generated@@629)) $generated@@630))
 :pattern ( ($generated@@626 $generated@@628 $generated@@629))
))))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@631) ($generated@@358 $generated@@157)) (= (type $generated@@632) $generated@@72)) (= (type $generated@@633) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@631 ($generated@@625 $generated@@632) $generated@@633) (forall (($generated@@634 Int) ) (!  (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@357 $generated@@631))) ($generated@@331 ($generated@@626 $generated@@631 $generated@@634) $generated@@632 $generated@@633))
 :pattern ( ($generated@@626 $generated@@631 $generated@@634))
))))
 :pattern ( ($generated@@82 $generated@@631 ($generated@@625 $generated@@632) $generated@@633))
)))
(assert (forall (($generated@@636 Int) ) (! (= ($generated@@635 ($generated@@152 $generated@@636)) $generated@@636)
 :pattern ( ($generated@@152 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ) (! (= (type ($generated@@637 $generated@@638)) $generated@@72)
 :pattern ( ($generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@72) (= ($generated@@637 ($generated@@298 $generated@@639)) $generated@@639))
 :pattern ( ($generated@@298 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@72) (= ($generated@@80 ($generated@@298 $generated@@640)) $generated@@54))
 :pattern ( ($generated@@298 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ) (! (= (type ($generated@@641 $generated@@642)) $generated@@72)
 :pattern ( ($generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@72) (= ($generated@@641 ($generated@@303 $generated@@643)) $generated@@643))
 :pattern ( ($generated@@303 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@72) (= ($generated@@80 ($generated@@303 $generated@@644)) $generated@@55))
 :pattern ( ($generated@@303 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ) (! (= (type ($generated@@645 $generated@@646)) $generated@@72)
 :pattern ( ($generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@72) (= ($generated@@645 ($generated@@200 $generated@@647)) $generated@@647))
 :pattern ( ($generated@@200 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@72) (= ($generated@@80 ($generated@@200 $generated@@648)) $generated@@56))
 :pattern ( ($generated@@200 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ) (! (= (type ($generated@@649 $generated@@650)) $generated@@72)
 :pattern ( ($generated@@649 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@72) (= ($generated@@649 ($generated@@625 $generated@@651)) $generated@@651))
 :pattern ( ($generated@@625 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@72) (= ($generated@@80 ($generated@@625 $generated@@652)) $generated@@57))
 :pattern ( ($generated@@625 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@85) (= ($generated@@196 ($generated@@366 $generated@@653)) $generated@@68))
 :pattern ( ($generated@@366 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@85) (= ($generated@@441 ($generated@@366 $generated@@654)) $generated@@654))
 :pattern ( ($generated@@366 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 (type $generated@@655)))
(= ($generated@@431 $generated@@656 ($generated@@377 $generated@@655)) $generated@@655))
 :pattern ( ($generated@@377 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (= (type $generated@@657) ($generated@@390 $generated@@157 $generated@@157)) (= (type $generated@@658) $generated@@72)) (= (type $generated@@659) $generated@@72)) (= ($generated@@162 $generated@@657 ($generated@@514 $generated@@658 $generated@@659)) (forall (($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@157) ($generated@@0 ($generated@@92 ($generated@@388 $generated@@657) $generated@@660))) (and ($generated@@278 ($generated@@92 ($generated@@489 $generated@@657) $generated@@660) $generated@@659) ($generated@@278 $generated@@660 $generated@@658)))
 :pattern ( ($generated@@92 ($generated@@489 $generated@@657) $generated@@660))
 :pattern ( ($generated@@92 ($generated@@388 $generated@@657) $generated@@660))
))))
 :pattern ( ($generated@@162 $generated@@657 ($generated@@514 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@661) ($generated@@408 $generated@@157 $generated@@157)) (= (type $generated@@662) $generated@@72)) (= (type $generated@@663) $generated@@72)) (= ($generated@@162 $generated@@661 ($generated@@522 $generated@@662 $generated@@663)) (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@157) ($generated@@0 ($generated@@92 ($generated@@406 $generated@@661) $generated@@664))) (and ($generated@@278 ($generated@@92 ($generated@@497 $generated@@661) $generated@@664) $generated@@663) ($generated@@278 $generated@@664 $generated@@662)))
 :pattern ( ($generated@@92 ($generated@@497 $generated@@661) $generated@@664))
 :pattern ( ($generated@@92 ($generated@@406 $generated@@661) $generated@@664))
))))
 :pattern ( ($generated@@162 $generated@@661 ($generated@@522 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) $generated@@157) (= (type $generated@@666) $generated@@157)) (and (and (and (=> ($generated@@156 $generated@@665 $generated@@666) (not (= $generated@@665 $generated@@666))) (=> (and ($generated@@424 $generated@@665) (not ($generated@@424 $generated@@666))) ($generated@@156 $generated@@665 $generated@@666))) (=> (and ($generated@@424 $generated@@665) ($generated@@424 $generated@@666)) (= ($generated@@156 $generated@@665 $generated@@666) (< ($generated@@163 $generated@@665) ($generated@@163 $generated@@666))))) (=> (and ($generated@@156 $generated@@665 $generated@@666) ($generated@@424 $generated@@666)) ($generated@@424 $generated@@665))))
 :pattern ( ($generated@@156 $generated@@665 $generated@@666))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@157) (= (type $generated@@670) $generated@@157)) (< ($generated@@667 $generated@@669) ($generated@@668 ($generated@@277 $generated@@669 $generated@@670))))
 :pattern ( ($generated@@277 $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@157) (= (type $generated@@672) $generated@@157)) (< ($generated@@667 $generated@@672) ($generated@@668 ($generated@@277 $generated@@671 $generated@@672))))
 :pattern ( ($generated@@277 $generated@@671 $generated@@672))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@147) (= ($generated@@265 $generated@@673) ($generated@@265 $generated@@344)))
 :pattern ( ($generated@@265 ($generated@@343 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@147) (= ($generated@@269 $generated@@674) ($generated@@269 $generated@@344)))
 :pattern ( ($generated@@269 ($generated@@343 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) $generated@@157) (= (type $generated@@676) $generated@@72)) (= (type $generated@@677) $generated@@72)) ($generated@@278 $generated@@675 ($generated@@514 $generated@@676 $generated@@677))) (and (= ($generated@@377 ($generated@@431 ($generated@@390 $generated@@157 $generated@@157) $generated@@675)) $generated@@675) ($generated@@162 ($generated@@431 ($generated@@390 $generated@@157 $generated@@157) $generated@@675) ($generated@@514 $generated@@676 $generated@@677))))
 :pattern ( ($generated@@278 $generated@@675 ($generated@@514 $generated@@676 $generated@@677)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (and (= (type $generated@@678) $generated@@157) (= (type $generated@@679) $generated@@72)) (= (type $generated@@680) $generated@@72)) ($generated@@278 $generated@@678 ($generated@@522 $generated@@679 $generated@@680))) (and (= ($generated@@377 ($generated@@431 ($generated@@408 $generated@@157 $generated@@157) $generated@@678)) $generated@@678) ($generated@@162 ($generated@@431 ($generated@@408 $generated@@157 $generated@@157) $generated@@678) ($generated@@522 $generated@@679 $generated@@680))))
 :pattern ( ($generated@@278 $generated@@678 ($generated@@522 $generated@@679 $generated@@680)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (and (and (= (type $generated@@681) $generated@@72) (= (type $generated@@682) $generated@@72)) (= (type $generated@@683) $generated@@157)) ($generated@@278 $generated@@683 ($generated@@183 $generated@@681 $generated@@682))) (and (= ($generated@@377 ($generated@@431 $generated@@85 $generated@@683)) $generated@@683) ($generated@@162 ($generated@@431 $generated@@85 $generated@@683) ($generated@@183 $generated@@681 $generated@@682))))
 :pattern ( ($generated@@278 $generated@@683 ($generated@@183 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@85) (< ($generated@@668 $generated@@684) ($generated@@668 ($generated@@366 $generated@@684))))
 :pattern ( ($generated@@366 $generated@@684))
)))
(assert (forall (($generated@@685 T@U) ) (! (let (($generated@@686 (type $generated@@685)))
 (not ($generated@@0 ($generated@@92 ($generated@@536 $generated@@686) $generated@@685))))
 :pattern ( (let (($generated@@686 (type $generated@@685)))
($generated@@92 ($generated@@536 $generated@@686) $generated@@685)))
)))
(assert (forall (($generated@@688 T@U) ) (! (= (type ($generated@@687 $generated@@688)) $generated@@77)
 :pattern ( ($generated@@687 $generated@@688))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) $generated@@72) (= (type $generated@@690) $generated@@72)) (and (= ($generated@@80 ($generated@@183 $generated@@689 $generated@@690)) $generated@@62) (= ($generated@@687 ($generated@@183 $generated@@689 $generated@@690)) $generated@@69)))
 :pattern ( ($generated@@183 $generated@@689 $generated@@690))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@691) $generated@@85) (= (type $generated@@692) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@692) (and ($generated@@165 $generated@@691) ($generated@@82 $generated@@691 $generated@@84 $generated@@692)))) ($generated@@82 ($generated@@8 ($generated@@166 $generated@@691)) $generated@@46 $generated@@692))
 :pattern ( ($generated@@82 ($generated@@8 ($generated@@166 $generated@@691)) $generated@@46 $generated@@692))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@85) (= ($generated@@667 ($generated@@377 $generated@@693)) ($generated@@668 $generated@@693)))
 :pattern ( ($generated@@667 ($generated@@377 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@147) (= ($generated@@265 ($generated@@146 $generated@@694)) ($generated@@265 $generated@@694)))
 :pattern ( ($generated@@265 ($generated@@146 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@147) (= ($generated@@269 ($generated@@146 $generated@@695)) ($generated@@269 $generated@@695)))
 :pattern ( ($generated@@269 ($generated@@146 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@696) $generated@@157) ($generated@@278 $generated@@696 ($generated@@152 0))) (and (= ($generated@@377 ($generated@@431 $generated@@2 $generated@@696)) $generated@@696) ($generated@@162 ($generated@@431 ($generated@@86 $generated@@157 $generated@@4) $generated@@696) ($generated@@152 0))))
 :pattern ( ($generated@@278 $generated@@696 ($generated@@152 0)))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (= (type $generated@@697) $generated@@157) (= (type $generated@@698) $generated@@72)) ($generated@@278 $generated@@697 ($generated@@298 $generated@@698))) (and (= ($generated@@377 ($generated@@431 ($generated@@86 $generated@@157 $generated@@4) $generated@@697)) $generated@@697) ($generated@@162 ($generated@@431 ($generated@@86 $generated@@157 $generated@@4) $generated@@697) ($generated@@298 $generated@@698))))
 :pattern ( ($generated@@278 $generated@@697 ($generated@@298 $generated@@698)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (= (type $generated@@699) $generated@@157) (= (type $generated@@700) $generated@@72)) ($generated@@278 $generated@@699 ($generated@@303 $generated@@700))) (and (= ($generated@@377 ($generated@@431 ($generated@@86 $generated@@157 $generated@@4) $generated@@699)) $generated@@699) ($generated@@162 ($generated@@431 ($generated@@86 $generated@@157 $generated@@4) $generated@@699) ($generated@@303 $generated@@700))))
 :pattern ( ($generated@@278 $generated@@699 ($generated@@303 $generated@@700)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (= (type $generated@@701) $generated@@157) (= (type $generated@@702) $generated@@72)) ($generated@@278 $generated@@701 ($generated@@200 $generated@@702))) (and (= ($generated@@377 ($generated@@431 ($generated@@86 $generated@@157 $generated@@2) $generated@@701)) $generated@@701) ($generated@@162 ($generated@@431 ($generated@@86 $generated@@157 $generated@@2) $generated@@701) ($generated@@200 $generated@@702))))
 :pattern ( ($generated@@278 $generated@@701 ($generated@@200 $generated@@702)))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (and (= (type $generated@@703) $generated@@157) (= (type $generated@@704) $generated@@72)) ($generated@@278 $generated@@703 ($generated@@625 $generated@@704))) (and (= ($generated@@377 ($generated@@431 ($generated@@358 $generated@@157) $generated@@703)) $generated@@703) ($generated@@162 ($generated@@431 ($generated@@358 $generated@@157) $generated@@703) ($generated@@625 $generated@@704))))
 :pattern ( ($generated@@278 $generated@@703 ($generated@@625 $generated@@704)))
)))
(assert (forall (($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@705) $generated@@157) ($generated@@424 $generated@@705)) (= $generated@@705 ($generated@@168 ($generated@@163 $generated@@705))))
 :pattern ( ($generated@@163 $generated@@705))
 :pattern ( ($generated@@424 $generated@@705))
)))
(assert (= ($generated@@80 $generated@@84) $generated@@64))
(assert (= ($generated@@687 $generated@@84) $generated@@70))
(assert (= ($generated@@80 $generated@@285) $generated@@67))
(assert (= ($generated@@687 $generated@@285) $generated@@71))
(assert  (=> (<= 2 $generated@@264) (forall (($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@706) $generated@@147) (= (type $generated@@707) $generated@@157)) (= (type $generated@@708) $generated@@85)) (= (type $generated@@709) $generated@@85)) (or ($generated@@318 ($generated@@310 $generated@@707) ($generated@@310 $generated@@708) ($generated@@310 $generated@@709)) (and (not (= 2 $generated@@264)) (and ($generated@@162 $generated@@708 $generated@@84) ($generated@@162 $generated@@709 $generated@@84))))) (and (and (=> (< 0 ($generated@@163 $generated@@707)) (=> (not ($generated@@164 $generated@@708)) (let (($generated@@710 ($generated@@169 $generated@@708)))
(let (($generated@@711 ($generated@@166 $generated@@708)))
 (=> ($generated@@165 $generated@@709) (=> (<= $generated@@711 ($generated@@166 $generated@@709)) ($generated@@318 ($generated@@167 $generated@@707 ($generated@@168 1)) $generated@@710 ($generated@@169 $generated@@709)))))))) (=> (=> (< 0 ($generated@@163 $generated@@707)) (ite ($generated@@164 $generated@@708) true (let (($generated@@712 ($generated@@169 $generated@@708)))
(let (($generated@@713 ($generated@@166 $generated@@708)))
 (and (and ($generated@@165 $generated@@709) (<= $generated@@713 ($generated@@166 $generated@@709))) ($generated@@317 ($generated@@146 $generated@@706) ($generated@@167 $generated@@707 ($generated@@168 1)) $generated@@712 ($generated@@169 $generated@@709))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@707)) (forall (($generated@@714 T@U) ) (!  (=> (and (= (type $generated@@714) $generated@@157) ($generated@@156 $generated@@714 $generated@@707)) ($generated@@318 $generated@@714 $generated@@708 $generated@@709))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@706) $generated@@714 $generated@@708 $generated@@709))
))))) (= ($generated@@317 ($generated@@146 $generated@@706) ($generated@@310 $generated@@707) ($generated@@310 $generated@@708) ($generated@@310 $generated@@709))  (and (=> (< 0 ($generated@@163 $generated@@707)) (ite ($generated@@164 $generated@@708) true (let (($generated@@715 ($generated@@169 $generated@@708)))
(let (($generated@@716 ($generated@@166 $generated@@708)))
 (and (and ($generated@@165 $generated@@709) (<= $generated@@716 ($generated@@166 $generated@@709))) ($generated@@317 ($generated@@146 $generated@@706) ($generated@@167 $generated@@707 ($generated@@168 1)) $generated@@715 ($generated@@169 $generated@@709))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@707)) (forall (($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@717) $generated@@157) ($generated@@156 $generated@@717 $generated@@707)) ($generated@@317 ($generated@@146 $generated@@706) $generated@@717 $generated@@708 $generated@@709))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@706) $generated@@717 $generated@@708 $generated@@709))
)))))))
 :weight 3
 :pattern ( ($generated@@317 ($generated@@146 $generated@@706) ($generated@@310 $generated@@707) ($generated@@310 $generated@@708) ($generated@@310 $generated@@709)))
))))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (= (type $generated@@718) ($generated@@86 $generated@@157 $generated@@2)) (= (type $generated@@719) $generated@@72)) (= (type $generated@@720) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@718 ($generated@@200 $generated@@719) $generated@@720) (forall (($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@721) $generated@@157) (< 0 ($generated ($generated@@92 $generated@@718 $generated@@721)))) ($generated@@331 $generated@@721 $generated@@719 $generated@@720))
 :pattern ( ($generated@@92 $generated@@718 $generated@@721))
))))
 :pattern ( ($generated@@82 $generated@@718 ($generated@@200 $generated@@719) $generated@@720))
)))
(assert  (=> (<= 2 $generated@@264) (forall (($generated@@722 T@U) ($generated@@723 T@U) ($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@722) $generated@@147) (= (type $generated@@723) $generated@@85)) (= (type $generated@@724) $generated@@85)) (= (type $generated@@725) $generated@@157)) (and (and ($generated@@162 $generated@@723 $generated@@84) ($generated@@162 $generated@@724 $generated@@84)) (= $generated@@725 ($generated@@168 0)))) ($generated@@317 $generated@@722 $generated@@725 $generated@@723 $generated@@724))
 :pattern ( ($generated@@317 $generated@@722 $generated@@725 $generated@@723 $generated@@724))
))))
(assert (= $generated@@199 ($generated@@310 $generated@@199)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (= (type $generated@@726) $generated@@157) (= (type $generated@@727) $generated@@157)) (and ($generated@@424 $generated@@727) (<= ($generated@@163 $generated@@727) ($generated@@163 $generated@@726)))) (or (and (= $generated@@727 ($generated@@168 0)) (= ($generated@@167 $generated@@726 $generated@@727) $generated@@726)) (and (not (= $generated@@727 ($generated@@168 0))) ($generated@@156 ($generated@@167 $generated@@726 $generated@@727) $generated@@726))))
 :pattern ( ($generated@@167 $generated@@726 $generated@@727))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (and (and (= (type $generated@@728) $generated@@85) (= (type $generated@@729) $generated@@72)) (= (type $generated@@730) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@730) (and ($generated@@182 $generated@@728) (exists (($generated@@731 T@U) ) (!  (and (= (type $generated@@731) $generated@@72) ($generated@@82 $generated@@728 ($generated@@183 $generated@@729 $generated@@731) $generated@@730))
 :pattern ( ($generated@@82 $generated@@728 ($generated@@183 $generated@@729 $generated@@731) $generated@@730))
))))) ($generated@@331 ($generated@@190 $generated@@728) $generated@@729 $generated@@730))
 :pattern ( ($generated@@331 ($generated@@190 $generated@@728) $generated@@729 $generated@@730))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (and (and (= (type $generated@@732) $generated@@85) (= (type $generated@@733) $generated@@72)) (= (type $generated@@734) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@734) (and ($generated@@182 $generated@@732) (exists (($generated@@735 T@U) ) (!  (and (= (type $generated@@735) $generated@@72) ($generated@@82 $generated@@732 ($generated@@183 $generated@@735 $generated@@733) $generated@@734))
 :pattern ( ($generated@@82 $generated@@732 ($generated@@183 $generated@@735 $generated@@733) $generated@@734))
))))) ($generated@@331 ($generated@@191 $generated@@732) $generated@@733 $generated@@734))
 :pattern ( ($generated@@331 ($generated@@191 $generated@@732) $generated@@733 $generated@@734))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (and (= (type $generated@@736) $generated@@85) (= (type $generated@@737) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@737) (and ($generated@@165 $generated@@736) ($generated@@82 $generated@@736 $generated@@84 $generated@@737)))) ($generated@@82 ($generated@@169 $generated@@736) $generated@@84 $generated@@737))
 :pattern ( ($generated@@82 ($generated@@169 $generated@@736) $generated@@84 $generated@@737))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (and (= (type $generated@@738) $generated@@85) (= (type $generated@@739) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@739) (and ($generated@@341 $generated@@738) ($generated@@82 $generated@@738 $generated@@285 $generated@@739)))) ($generated@@82 ($generated@@441 $generated@@738) $generated@@285 $generated@@739))
 :pattern ( ($generated@@82 ($generated@@441 $generated@@738) $generated@@285 $generated@@739))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (= (type $generated@@740) $generated@@157) (= (type $generated@@741) $generated@@157)) (= ($generated@@277 ($generated@@310 $generated@@740) ($generated@@310 $generated@@741)) ($generated@@310 ($generated@@277 $generated@@740 $generated@@741))))
 :pattern ( ($generated@@277 ($generated@@310 $generated@@740) ($generated@@310 $generated@@741)))
)))
(assert (forall (($generated@@742 Int) ) (! (= ($generated@@377 ($generated@@8 ($generated@@308 $generated@@742))) ($generated@@310 ($generated@@377 ($generated@@8 $generated@@742))))
 :pattern ( ($generated@@377 ($generated@@8 ($generated@@308 $generated@@742))))
)))
(assert (forall (($generated@@743 T@U) ) (!  (=> (= (type $generated@@743) $generated@@85) (= ($generated@@366 ($generated@@310 $generated@@743)) ($generated@@310 ($generated@@366 $generated@@743))))
 :pattern ( ($generated@@366 ($generated@@310 $generated@@743)))
)))
(assert (forall (($generated@@744 T@U) ) (! (= ($generated@@377 ($generated@@310 $generated@@744)) ($generated@@310 ($generated@@377 $generated@@744)))
 :pattern ( ($generated@@377 ($generated@@310 $generated@@744)))
)))
(assert (forall (($generated@@745 Int) ($generated@@746 T@U) ) (!  (=> (= (type $generated@@746) $generated@@85) (= ($generated@@162 ($generated@@83 $generated@@745 $generated@@746) $generated@@84)  (and ($generated@@162 ($generated@@8 $generated@@745) $generated@@46) ($generated@@162 $generated@@746 $generated@@84))))
 :pattern ( ($generated@@162 ($generated@@83 $generated@@745 $generated@@746) $generated@@84))
)))
(assert (forall (($generated@@747 T@U) ) (! (let (($generated@@748 ($generated@@359 (type $generated@@747))))
 (=> (and (= (type $generated@@747) ($generated@@358 $generated@@748)) (= ($generated@@357 $generated@@747) 0)) (= $generated@@747 ($generated@@356 $generated@@748))))
 :pattern ( ($generated@@357 $generated@@747))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ($generated@@751 T@U) ) (! (let (($generated@@752 (type $generated@@750)))
 (=> (and (and (= (type $generated@@749) ($generated@@86 $generated@@752 $generated@@2)) (= (type $generated@@751) $generated@@2)) (<= 0 ($generated $generated@@751))) (= ($generated@@382 ($generated@@93 $generated@@749 $generated@@750 $generated@@751)) (+ (- ($generated@@382 $generated@@749) ($generated ($generated@@92 $generated@@749 $generated@@750))) ($generated $generated@@751)))))
 :pattern ( ($generated@@382 ($generated@@93 $generated@@749 $generated@@750 $generated@@751)))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ) (!  (=> (and (= (type $generated@@753) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@754) $generated@@2)) ($generated@@82 $generated@@754 $generated@@46 $generated@@753))
 :pattern ( ($generated@@82 $generated@@754 $generated@@46 $generated@@753))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 T@U) ) (!  (=> (and (= (type $generated@@755) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@756) $generated@@3)) ($generated@@82 $generated@@756 $generated@@47 $generated@@755))
 :pattern ( ($generated@@82 $generated@@756 $generated@@47 $generated@@755))
)))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (= (type $generated@@757) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@758) $generated@@4)) ($generated@@82 $generated@@758 $generated@@44 $generated@@757))
 :pattern ( ($generated@@82 $generated@@758 $generated@@44 $generated@@757))
)))
(assert (forall (($generated@@759 T@U) ($generated@@760 T@U) ) (!  (=> (and (= (type $generated@@759) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@760) $generated@@560)) ($generated@@82 $generated@@760 $generated@@45 $generated@@759))
 :pattern ( ($generated@@82 $generated@@760 $generated@@45 $generated@@759))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (= (type $generated@@761) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@762) $generated@@157)) ($generated@@82 $generated@@762 $generated@@48 $generated@@761))
 :pattern ( ($generated@@82 $generated@@762 $generated@@48 $generated@@761))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ) (!  (=> (and (= (type $generated@@763) ($generated@@358 $generated@@157)) (= (type $generated@@764) $generated@@72)) (= ($generated@@162 $generated@@763 ($generated@@625 $generated@@764)) (forall (($generated@@765 Int) ) (!  (=> (and (<= 0 $generated@@765) (< $generated@@765 ($generated@@357 $generated@@763))) ($generated@@278 ($generated@@626 $generated@@763 $generated@@765) $generated@@764))
 :pattern ( ($generated@@626 $generated@@763 $generated@@765))
))))
 :pattern ( ($generated@@162 $generated@@763 ($generated@@625 $generated@@764)))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 Int) ) (!  (=> (= (type $generated@@767) ($generated@@358 $generated@@157)) (=> (and (<= 0 $generated@@768) (< $generated@@768 ($generated@@357 $generated@@767))) (< ($generated@@668 ($generated@@431 $generated@@85 ($generated@@626 $generated@@767 $generated@@768))) ($generated@@766 $generated@@767))))
 :pattern ( ($generated@@668 ($generated@@431 $generated@@85 ($generated@@626 $generated@@767 $generated@@768))))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ($generated@@771 T@U) ($generated@@772 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@769) $generated@@157) (= (type $generated@@770) $generated@@147)) (= (type $generated@@771) $generated@@85)) (= (type $generated@@772) $generated@@85)) (= $generated@@771 $generated@@772)) ($generated@@161 $generated@@769 ($generated@@146 $generated@@770) $generated@@771 $generated@@772))
 :pattern ( ($generated@@161 $generated@@769 ($generated@@146 $generated@@770) $generated@@771 $generated@@772))
)))
(assert (forall (($generated@@773 T@U) ($generated@@774 T@U) ($generated@@775 T@U) ) (!  (=> (and (and (and (= (type $generated@@773) ($generated@@390 $generated@@157 $generated@@157)) (= (type $generated@@774) $generated@@72)) (= (type $generated@@775) $generated@@72)) ($generated@@162 $generated@@773 ($generated@@514 $generated@@774 $generated@@775))) (and (and ($generated@@162 ($generated@@388 $generated@@773) ($generated@@298 $generated@@774)) ($generated@@162 ($generated@@449 $generated@@773) ($generated@@298 $generated@@775))) ($generated@@162 ($generated@@488 $generated@@773) ($generated@@298 ($generated@@183 $generated@@774 $generated@@775)))))
 :pattern ( ($generated@@162 $generated@@773 ($generated@@514 $generated@@774 $generated@@775)))
)))
(assert (forall (($generated@@776 T@U) ($generated@@777 T@U) ($generated@@778 T@U) ) (!  (=> (and (and (and (= (type $generated@@776) ($generated@@408 $generated@@157 $generated@@157)) (= (type $generated@@777) $generated@@72)) (= (type $generated@@778) $generated@@72)) ($generated@@162 $generated@@776 ($generated@@522 $generated@@777 $generated@@778))) (and (and ($generated@@162 ($generated@@406 $generated@@776) ($generated@@303 $generated@@777)) ($generated@@162 ($generated@@460 $generated@@776) ($generated@@303 $generated@@778))) ($generated@@162 ($generated@@496 $generated@@776) ($generated@@303 ($generated@@183 $generated@@777 $generated@@778)))))
 :pattern ( ($generated@@162 $generated@@776 ($generated@@522 $generated@@777 $generated@@778)))
)))
(assert (forall (($generated@@779 T@U) ) (!  (=> (= (type $generated@@779) $generated@@2) ($generated@@162 $generated@@779 $generated@@46))
 :pattern ( ($generated@@162 $generated@@779 $generated@@46))
)))
(assert (forall (($generated@@780 T@U) ) (!  (=> (= (type $generated@@780) $generated@@3) ($generated@@162 $generated@@780 $generated@@47))
 :pattern ( ($generated@@162 $generated@@780 $generated@@47))
)))
(assert (forall (($generated@@781 T@U) ) (!  (=> (= (type $generated@@781) $generated@@4) ($generated@@162 $generated@@781 $generated@@44))
 :pattern ( ($generated@@162 $generated@@781 $generated@@44))
)))
(assert (forall (($generated@@782 T@U) ) (!  (=> (= (type $generated@@782) $generated@@560) ($generated@@162 $generated@@782 $generated@@45))
 :pattern ( ($generated@@162 $generated@@782 $generated@@45))
)))
(assert (forall (($generated@@783 T@U) ) (!  (=> (= (type $generated@@783) $generated@@157) ($generated@@162 $generated@@783 $generated@@48))
 :pattern ( ($generated@@162 $generated@@783 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@784 () T@U)
(declare-fun $generated@@785 () T@U)
(declare-fun $generated@@786 () T@U)
(declare-fun $generated@@787 () T@U)
(declare-fun $generated@@788 (T@U) Bool)
(declare-fun $generated@@789 () T@U)
(declare-fun $generated@@790 () T@U)
(declare-fun $generated@@791 () T@U)
(declare-fun $generated@@792 () T@U)
(declare-fun $generated@@793 () T@U)
(declare-fun $generated@@794 () T@U)
(declare-fun $generated@@795 () T@U)
(declare-fun $generated@@796 () T@U)
(declare-fun $generated@@797 () T@U)
(declare-fun $generated@@798 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@784) $generated@@157) (= (type $generated@@796) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@791) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@785) $generated@@157)) (= (type $generated@@786) $generated@@85)) (= (type $generated@@787) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@789) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@795) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@790) $generated@@85)) (= (type $generated@@792) $generated@@85)) (= (type $generated@@793) $generated@@85)) (= (type $generated@@794) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@797) ($generated@@210 $generated@@87 $generated@@4))) (= (type $generated@@798) $generated@@87)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@799 true))
(let (($generated@@800  (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (< 0 ($generated@@163 $generated@@784)) (=> ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))))))) ($generated@@0 ($generated@@310 ($generated@@11 true)))))))) (=> (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (< 0 ($generated@@163 $generated@@784)) (=> ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))))))) ($generated@@0 ($generated@@310 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (< 0 ($generated@@163 $generated@@784)) (=> (not ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))) ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@165 ($generated@@310 ($generated@@269 ($generated@@146 ($generated@@146 $generated@@344))))))))))))) (=> (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (< 0 ($generated@@163 $generated@@784)) (=> (not ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))) ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@165 ($generated@@310 ($generated@@269 ($generated@@146 ($generated@@146 $generated@@344)))))))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (< 0 ($generated@@163 $generated@@784)) (=> (not ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))) (let (($generated@@801 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@265 ($generated@@146 ($generated@@146 $generated@@344))))))))
(<= $generated@@801 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@269 ($generated@@146 ($generated@@146 $generated@@344))))))))))))) (=> (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (< 0 ($generated@@163 $generated@@784)) (=> (not ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))) (let (($generated@@802 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@265 ($generated@@146 ($generated@@146 $generated@@344))))))))
(<= $generated@@802 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@269 ($generated@@146 ($generated@@146 $generated@@344)))))))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (< 0 ($generated@@163 $generated@@784)) (=> (not ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))) (let (($generated@@803 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@265 ($generated@@146 ($generated@@146 $generated@@344))))))))
($generated@@317 ($generated@@146 ($generated@@146 $generated@@344)) ($generated@@167 $generated@@784 ($generated@@168 1)) $generated@@803 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@269 ($generated@@146 ($generated@@146 $generated@@344))))))))))))) (=> (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (< 0 ($generated@@163 $generated@@784)) (=> (not ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))) (let (($generated@@804 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@265 ($generated@@146 ($generated@@146 $generated@@344))))))))
($generated@@317 ($generated@@146 ($generated@@146 $generated@@344)) ($generated@@167 $generated@@784 ($generated@@168 1)) $generated@@804 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@269 ($generated@@146 ($generated@@146 $generated@@344)))))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@784)) (forall (($generated@@805 T@U) ) (!  (=> (and (= (type $generated@@805) $generated@@157) ($generated@@156 $generated@@805 $generated@@784)) ($generated@@317 ($generated@@146 ($generated@@146 $generated@@344)) $generated@@805 ($generated@@310 ($generated@@265 ($generated@@146 ($generated@@146 $generated@@344)))) ($generated@@310 ($generated@@269 ($generated@@146 ($generated@@146 $generated@@344))))))
 :pattern ( ($generated@@317 ($generated@@146 ($generated@@146 $generated@@344)) $generated@@805 ($generated@@265 ($generated@@146 ($generated@@146 $generated@@344))) ($generated@@269 ($generated@@146 ($generated@@146 $generated@@344)))))
))))))))))))))))
(let (($generated@@806  (and (=> (= (ControlFlow 0 9) (- 0 12)) ($generated@@424 ($generated@@310 ($generated@@168 1)))) (=> ($generated@@424 ($generated@@310 ($generated@@168 1))) (and (=> (= (ControlFlow 0 9) (- 0 11)) (<= ($generated@@163 ($generated@@310 ($generated@@168 1))) ($generated@@163 $generated@@784))) (=> (<= ($generated@@163 ($generated@@310 ($generated@@168 1))) ($generated@@163 $generated@@784)) (=> (= $generated@@785 ($generated@@167 $generated@@784 ($generated@@168 1))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or ($generated@@156 $generated@@785 $generated@@784) (and (= $generated@@785 $generated@@784) (< ($generated@@668 $generated@@786) ($generated@@668 $generated@@786))))) (=> (or ($generated@@156 $generated@@785 $generated@@784) (and (= $generated@@785 $generated@@784) (< ($generated@@668 $generated@@786) ($generated@@668 $generated@@786)))) (=> (and ($generated@@89 $generated@@787) ($generated@@788 $generated@@787)) (=> (and (and (and $generated@@266 $generated@@270) ($generated@@318 $generated@@785 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))) (and (and ($generated@@318 $generated@@785 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (and ($generated@@317 ($generated@@146 $generated@@344) $generated@@785 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (and (=> (< 0 ($generated@@163 $generated@@785)) (ite ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))) true (let (($generated@@807 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))
(let (($generated@@808 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))
 (and (and ($generated@@165 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (<= $generated@@808 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))))) ($generated@@317 ($generated@@146 $generated@@344) ($generated@@167 $generated@@785 ($generated@@168 1)) $generated@@807 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@785)) (forall (($generated@@809 T@U) ) (!  (=> (and (= (type $generated@@809) $generated@@157) ($generated@@156 $generated@@809 $generated@@785)) ($generated@@317 ($generated@@146 $generated@@344) $generated@@809 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@344) $generated@@809 ($generated@@265 ($generated@@146 $generated@@344)) ($generated@@269 ($generated@@146 $generated@@344))))
)))))) (and (= $generated@@789 $generated@@787) (= (ControlFlow 0 9) 2)))) $generated@@800)))))))))))
(let (($generated@@810  (=> (= $generated@@786 ($generated@@366 $generated@@790)) (=> (and ($generated@@162 $generated@@790 $generated@@285) ($generated@@82 $generated@@790 $generated@@285 $generated@@791)) (=> (and (and (and ($generated@@162 $generated@@792 $generated@@285) ($generated@@82 $generated@@792 $generated@@285 $generated@@791)) (= $generated@@793 $generated@@790)) (and ($generated@@162 $generated@@793 $generated@@285) (= $generated@@792 $generated@@793))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (or ($generated@@156 $generated@@784 $generated@@784) (and (= $generated@@784 $generated@@784) (< ($generated@@668 $generated@@792) ($generated@@668 $generated@@786))))) (=> (or ($generated@@156 $generated@@784 $generated@@784) (and (= $generated@@784 $generated@@784) (< ($generated@@668 $generated@@792) ($generated@@668 $generated@@786)))) (=> (and ($generated@@89 $generated@@794) ($generated@@788 $generated@@794)) (=> (and (and $generated@@266 $generated@@270) ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))) (=> (and (and (and ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (and ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (and (=> (< 0 ($generated@@163 $generated@@784)) (ite ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))) true (let (($generated@@811 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))
(let (($generated@@812 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))
 (and (and ($generated@@165 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (<= $generated@@812 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))))) ($generated@@317 ($generated@@146 $generated@@344) ($generated@@167 $generated@@784 ($generated@@168 1)) $generated@@811 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@784)) (forall (($generated@@813 T@U) ) (!  (=> (and (= (type $generated@@813) $generated@@157) ($generated@@156 $generated@@813 $generated@@784)) ($generated@@317 ($generated@@146 $generated@@344) $generated@@813 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@344) $generated@@813 ($generated@@265 ($generated@@146 $generated@@344)) ($generated@@269 ($generated@@146 $generated@@344))))
)))))) (= $generated@@791 $generated@@794)) (and (= $generated@@789 $generated@@794) (= (ControlFlow 0 15) 9))) $generated@@806))))))))))
(let (($generated@@814  (=> (not (= $generated@@786 $generated@@199)) (and (=> (= (ControlFlow 0 17) 15) $generated@@810) (=> (= (ControlFlow 0 17) 8) $generated@@799)))))
(let (($generated@@815  (=> (= $generated@@786 $generated@@199) (and (=> (= (ControlFlow 0 13) (- 0 14)) (or ($generated@@156 $generated@@784 $generated@@784) (and (= $generated@@784 $generated@@784) (< ($generated@@668 $generated@@786) ($generated@@668 $generated@@786))))) (=> (or ($generated@@156 $generated@@784 $generated@@784) (and (= $generated@@784 $generated@@784) (< ($generated@@668 $generated@@786) ($generated@@668 $generated@@786)))) (=> (and ($generated@@89 $generated@@795) ($generated@@788 $generated@@795)) (=> (and (and $generated@@266 $generated@@270) ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))) (=> (and (and (and ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (and ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (and (=> (< 0 ($generated@@163 $generated@@784)) (ite ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))) true (let (($generated@@816 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))
(let (($generated@@817 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))
 (and (and ($generated@@165 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (<= $generated@@817 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))))) ($generated@@317 ($generated@@146 $generated@@344) ($generated@@167 $generated@@784 ($generated@@168 1)) $generated@@816 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@784)) (forall (($generated@@818 T@U) ) (!  (=> (and (= (type $generated@@818) $generated@@157) ($generated@@156 $generated@@818 $generated@@784)) ($generated@@317 ($generated@@146 $generated@@344) $generated@@818 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@344) $generated@@818 ($generated@@265 ($generated@@146 $generated@@344)) ($generated@@269 ($generated@@146 $generated@@344))))
)))))) (= $generated@@791 $generated@@795)) (and (= $generated@@789 $generated@@795) (= (ControlFlow 0 13) 9))) $generated@@806))))))))
(let (($generated@@819  (=> (< 0 ($generated@@163 $generated@@784)) (and (=> (= (ControlFlow 0 18) 13) $generated@@815) (=> (= (ControlFlow 0 18) 17) $generated@@814)))))
(let (($generated@@820  (=> (<= ($generated@@163 $generated@@784) 0) (=> (and (and (and ($generated@@89 $generated@@796) ($generated@@788 $generated@@796)) (= $generated@@791 $generated@@796)) (and (forall (($generated@@821 T@U) ($generated@@822 T@U) ) (!  (=> (and (and (= (type $generated@@821) $generated@@157) (= (type $generated@@822) $generated@@85)) (and ($generated@@162 $generated@@822 $generated@@285) ($generated@@156 $generated@@821 $generated@@784))) ($generated@@317 ($generated@@146 $generated@@344) $generated@@821 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))))
 :no-pattern (type $generated@@821)
 :no-pattern (type $generated@@822)
 :no-pattern ($generated $generated@@821)
 :no-pattern ($generated@@0 $generated@@821)
 :no-pattern ($generated $generated@@822)
 :no-pattern ($generated@@0 $generated@@822)
)) (= (ControlFlow 0 7) 2))) $generated@@800))))
(let (($generated@@823  (=> (= $generated@@797 ($generated@@209 $generated@@798 $generated@@791 $generated@@60 false)) (and (=> (= (ControlFlow 0 19) 18) $generated@@819) (=> (= (ControlFlow 0 19) 7) $generated@@820)))))
(let (($generated@@824  (=> (and ($generated@@89 $generated@@791) ($generated@@788 $generated@@791)) (=> (and (and (and ($generated@@162 $generated@@786 $generated@@285) ($generated@@82 $generated@@786 $generated@@285 $generated@@791)) ($generated@@474 $generated@@786)) (and (= 3 $generated@@264) (= (ControlFlow 0 20) 19))) $generated@@823))))
$generated@@824)))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 13) (- 14))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@49 (T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U) T@U)
(declare-fun $generated@@61 (T@U T@U T@U) T@U)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@166 (Int) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U) Int)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert (= ($generated@@1 $generated@@45) 6))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and (and (and (= (type $generated@@46) $generated@@45) (= (type $generated@@47) $generated@@45)) (= (type $generated@@48) $generated@@45)) (and ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))) ($generated@@44 $generated@@46 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@47 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47) ($generated@@44 $generated@@46 $generated@@48))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@1 ($generated@@53 $generated@@66 $generated@@67)) 7)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@58 ($generated@@53 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@53 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@59 ($generated@@53 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@53 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@59 (type $generated@@72))))
(= (type ($generated@@57 $generated@@72 $generated@@73)) $generated@@74))
 :pattern ( ($generated@@57 $generated@@72 $generated@@73))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 (type $generated@@77)))
(let (($generated@@79 (type $generated@@76)))
(= (type ($generated@@60 $generated@@75 $generated@@76 $generated@@77)) ($generated@@53 $generated@@79 $generated@@78))))
 :pattern ( ($generated@@60 $generated@@75 $generated@@76 $generated@@77))
))) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (let (($generated@@83 ($generated@@59 (type $generated@@80))))
 (=> (= (type $generated@@82) $generated@@83) (= ($generated@@57 ($generated@@60 $generated@@80 $generated@@81 $generated@@82) $generated@@81) $generated@@82)))
 :weight 0
))) (and (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (or (= $generated@@86 $generated@@87) (= ($generated@@57 ($generated@@60 $generated@@85 $generated@@86 $generated@@84) $generated@@87) ($generated@@57 $generated@@85 $generated@@87)))
 :weight 0
)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (or true (= ($generated@@57 ($generated@@60 $generated@@89 $generated@@90 $generated@@88) $generated@@91) ($generated@@57 $generated@@89 $generated@@91)))
 :weight 0
)))) (forall (($generated@@92 T@T) ) (= ($generated@@1 ($generated@@55 $generated@@92)) 8))) (forall (($generated@@93 T@T) ) (! (= ($generated@@51 ($generated@@55 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@55 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@51 (type $generated@@95))))
(= (type ($generated@@56 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@56 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@54) 9)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= (type ($generated@@61 $generated@@97 $generated@@98 $generated@@99)) $generated@@54)
 :pattern ( ($generated@@61 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@51 (type $generated@@101))))
 (=> (= (type $generated@@102) $generated@@103) (= ($generated@@56 ($generated@@61 $generated@@100 $generated@@101 $generated@@102) $generated@@101) $generated@@102)))
 :weight 0
))) (and (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@106 $generated@@107) (= ($generated@@56 ($generated@@61 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@56 $generated@@105 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or true (= ($generated@@56 ($generated@@61 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@56 $generated@@109 $generated@@111)))
 :weight 0
)))) (= ($generated@@1 $generated@@52) 10)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@62 $generated@@112 $generated@@113)) 11))) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@63 ($generated@@62 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@62 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@64 ($generated@@62 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@62 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@64 (type $generated@@118))))
(= (type ($generated@@49 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@49 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@65 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@62 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@65 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@64 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@49 ($generated@@65 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@49 ($generated@@65 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@49 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@49 ($generated@@65 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@49 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@49 ($generated@@65 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@49 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@50 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@62 $generated@@52 $generated@@4))
 :pattern ( ($generated@@50 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@51 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@52) (= (type $generated@@156) ($generated@@53 $generated@@52 $generated@@54))) (= (type $generated@@157) ($generated@@55 $generated@@4))) (= (type $generated@@159) $generated@@52)) (= (type $generated@@160) ($generated@@55 $generated@@161))) (= ($generated@@0 ($generated@@49 ($generated@@50 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@56 ($generated@@57 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@49 ($generated@@50 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (let (($generated@@164 (type $generated@@163)))
(= (type ($generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@162 $generated@@165) $generated@@165)
 :pattern ( ($generated@@162 $generated@@165))
)))
(assert (forall (($generated@@169 Int) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@45)
 :pattern ( ($generated@@166 $generated@@169))
)))
(assert (forall (($generated@@170 Int) ) (!  (=> (<= 0 $generated@@170) (and ($generated@@167 ($generated@@166 $generated@@170)) (= ($generated@@168 ($generated@@166 $generated@@170)) $generated@@170)))
 :pattern ( ($generated@@166 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@45) (= (type $generated@@172) $generated@@45)) (or (or ($generated@@44 $generated@@171 $generated@@172) (= $generated@@171 $generated@@172)) ($generated@@44 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@44 $generated@@171 $generated@@172) ($generated@@44 $generated@@172 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@45) (<= 0 ($generated@@168 $generated@@173)))
 :pattern ( ($generated@@168 $generated@@173))
)))
(assert  (and (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@45)
 :pattern ( ($generated@@174 $generated@@176))
)) (forall (($generated@@177 T@T) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(= ($generated@@175 $generated@@180 ($generated@@174 $generated@@179)) $generated@@179))
 :pattern ( ($generated@@174 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (= (type $generated@@181) $generated@@45) (= (type $generated@@182) $generated@@45)) (and (and (and (=> ($generated@@44 $generated@@181 $generated@@182) (not (= $generated@@181 $generated@@182))) (=> (and ($generated@@167 $generated@@181) (not ($generated@@167 $generated@@182))) ($generated@@44 $generated@@181 $generated@@182))) (=> (and ($generated@@167 $generated@@181) ($generated@@167 $generated@@182)) (= ($generated@@44 $generated@@181 $generated@@182) (< ($generated@@168 $generated@@181) ($generated@@168 $generated@@182))))) (=> (and ($generated@@44 $generated@@181 $generated@@182) ($generated@@167 $generated@@182)) ($generated@@167 $generated@@181))))
 :pattern ( ($generated@@44 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@183) $generated@@45) ($generated@@167 $generated@@183)) (= $generated@@183 ($generated@@166 ($generated@@168 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@183))
 :pattern ( ($generated@@167 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (! (= ($generated@@174 ($generated@@162 $generated@@184)) ($generated@@162 ($generated@@174 $generated@@184)))
 :pattern ( ($generated@@174 ($generated@@162 $generated@@184)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 () Int)
(assert  (and (and (and (and (= (type $generated@@187) $generated@@45) (= (type $generated@@188) ($generated@@62 $generated@@52 $generated@@4))) (= (type $generated@@189) $generated@@52)) (= (type $generated@@190) ($generated@@53 $generated@@52 $generated@@54))) (= (type $generated@@191) ($generated@@55 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@195 true))
(let (($generated@@196  (=> (and (< 0 $generated@@185) (= $generated@@186 (- $generated@@185 1))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (or (<= 0 $generated@@185) ($generated@@44 $generated@@187 $generated@@187)) (= $generated@@186 $generated@@185))) (=> (or (or (<= 0 $generated@@185) ($generated@@44 $generated@@187 $generated@@187)) (= $generated@@186 $generated@@185)) (=> (= (ControlFlow 0 3) (- 0 2)) (or ($generated@@44 $generated@@187 $generated@@187) (and (= $generated@@187 $generated@@187) (< $generated@@186 $generated@@185)))))))))
(let (($generated@@197  (=> (< 0 ($generated@@168 $generated@@187)) (and (=> (= (ControlFlow 0 6) 3) $generated@@196) (=> (= (ControlFlow 0 6) 5) $generated@@195)))))
(let (($generated@@198 true))
(let (($generated@@199  (=> (= $generated@@188 ($generated@@50 $generated@@189 $generated@@190 $generated@@191 false)) (and (=> (= (ControlFlow 0 7) 6) $generated@@197) (=> (= (ControlFlow 0 7) 1) $generated@@198)))))
(let (($generated@@200  (=> (and (and ($generated@@192 $generated@@190) ($generated@@193 $generated@@190)) (and (= 0 $generated@@194) (= (ControlFlow 0 8) 7))) $generated@@199)))
$generated@@200)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int T@U) T@U)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (Int) T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@161 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U) Int)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 (Int) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@208 (T@U T@U T@U) T@U)
(declare-fun $generated@@209 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@210 (T@T T@T) T@T)
(declare-fun $generated@@211 (T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@213 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@264 () Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@266 () Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 () Bool)
(declare-fun $generated@@277 (T@U T@U) T@U)
(declare-fun $generated@@278 (T@U T@U) Bool)
(declare-fun $generated@@285 () T@U)
(declare-fun $generated@@290 (T@U T@U) Bool)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@308 (Int) Int)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@314 (T@U) Bool)
(declare-fun $generated@@317 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@318 (T@U T@U T@U) Bool)
(declare-fun $generated@@331 (T@U T@U T@U) Bool)
(declare-fun $generated@@341 (T@U) Bool)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 () T@U)
(declare-fun $generated@@356 (T@T) T@U)
(declare-fun $generated@@357 (T@U) Int)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@382 (T@U) Int)
(declare-fun $generated@@383 (T@T) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@T T@T) T@U)
(declare-fun $generated@@390 (T@T T@T) T@T)
(declare-fun $generated@@391 (T@T) T@T)
(declare-fun $generated@@392 (T@T) T@T)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@T T@T) T@U)
(declare-fun $generated@@408 (T@T T@T) T@T)
(declare-fun $generated@@409 (T@T) T@T)
(declare-fun $generated@@410 (T@T) T@T)
(declare-fun $generated@@424 (T@U) Bool)
(declare-fun $generated@@431 (T@T T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@474 (T@U) Bool)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@514 (T@U T@U) T@U)
(declare-fun $generated@@522 (T@U T@U) T@U)
(declare-fun $generated@@536 (T@T) T@U)
(declare-fun $generated@@560 () T@T)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@599 (T@U) T@U)
(declare-fun $generated@@607 (T@U) T@U)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@625 (T@U) T@U)
(declare-fun $generated@@626 (T@U Int) T@U)
(declare-fun $generated@@635 (T@U) Int)
(declare-fun $generated@@637 (T@U) T@U)
(declare-fun $generated@@641 (T@U) T@U)
(declare-fun $generated@@645 (T@U) T@U)
(declare-fun $generated@@649 (T@U) T@U)
(declare-fun $generated@@667 (T@U) Int)
(declare-fun $generated@@668 (T@U) Int)
(declare-fun $generated@@687 (T@U) T@U)
(declare-fun $generated@@766 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@76)) (= (type $generated@@67) $generated@@73)) (= (type $generated@@68) $generated@@76)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@85) 11) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@96 $generated@@97)) 12))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@86 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@86 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@86 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@86 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@86 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@75 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@88)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@75 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ($generated@@141 T@U) ) (! (= (type ($generated@@83 $generated@@140 $generated@@141)) $generated@@85)
 :pattern ( ($generated@@83 $generated@@140 $generated@@141))
))) (= (type $generated@@84) $generated@@72)))
(assert (forall (($generated@@142 Int) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@85) (= (type $generated@@144) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@144)) (= ($generated@@82 ($generated@@83 $generated@@142 $generated@@143) $generated@@84 $generated@@144)  (and ($generated@@82 ($generated@@8 $generated@@142) $generated@@46 $generated@@144) ($generated@@82 $generated@@143 $generated@@84 $generated@@144))))
 :pattern ( ($generated@@82 ($generated@@83 $generated@@142 $generated@@143) $generated@@84 $generated@@144))
)))
(assert  (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@146 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@147) (= (type $generated@@150) $generated@@85)) (= (type $generated@@151) $generated@@85)) (= ($generated@@145 ($generated@@146 $generated@@149) $generated@@150 $generated@@151) (= $generated@@150 $generated@@151)))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@149) $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 Int) ) (! (= (type ($generated@@152 $generated@@153)) $generated@@72)
 :pattern ( ($generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@82 $generated@@154 ($generated@@152 0) $generated@@155))
 :pattern ( ($generated@@82 $generated@@154 ($generated@@152 0) $generated@@155))
)))
(assert (= ($generated@@1 $generated@@157) 16))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@157) (= (type $generated@@159) $generated@@157)) (= (type $generated@@160) $generated@@157)) (and ($generated@@156 $generated@@158 $generated@@159) ($generated@@156 $generated@@159 $generated@@160))) ($generated@@156 $generated@@158 $generated@@160))
 :pattern ( ($generated@@156 $generated@@158 $generated@@159) ($generated@@156 $generated@@159 $generated@@160))
 :pattern ( ($generated@@156 $generated@@158 $generated@@159) ($generated@@156 $generated@@158 $generated@@160))
)))
(assert  (and (and (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@167 $generated@@170 $generated@@171)) $generated@@157)
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
)) (forall (($generated@@172 Int) ) (! (= (type ($generated@@168 $generated@@172)) $generated@@157)
 :pattern ( ($generated@@168 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@169 $generated@@173)) $generated@@85)
 :pattern ( ($generated@@169 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@174) $generated@@157) (= (type $generated@@175) $generated@@147)) (= (type $generated@@176) $generated@@85)) (= (type $generated@@177) $generated@@85)) (and ($generated@@162 $generated@@176 $generated@@84) ($generated@@162 $generated@@177 $generated@@84))) (= ($generated@@161 $generated@@174 ($generated@@146 $generated@@175) $generated@@176 $generated@@177)  (and (=> (< 0 ($generated@@163 $generated@@174)) (or (and ($generated@@164 $generated@@176) ($generated@@164 $generated@@177)) (and (and ($generated@@165 $generated@@176) ($generated@@165 $generated@@177)) (=> (and ($generated@@165 $generated@@176) ($generated@@165 $generated@@177)) (and (= ($generated@@166 $generated@@176) ($generated@@166 $generated@@177)) ($generated@@161 ($generated@@167 $generated@@174 ($generated@@168 1)) $generated@@175 ($generated@@169 $generated@@176) ($generated@@169 $generated@@177))))))) (=> (and (not (= $generated@@174 ($generated@@168 0))) (= ($generated@@163 $generated@@174) 0)) ($generated@@145 $generated@@175 $generated@@176 $generated@@177)))))
 :pattern ( ($generated@@161 $generated@@174 ($generated@@146 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@2) ($generated@@162 $generated@@178 ($generated@@152 0)))
 :pattern ( ($generated@@162 $generated@@178 ($generated@@152 0)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 Int) ) (!  (=> (= (type $generated@@179) $generated@@157) (=> (and (and (<= 0 $generated@@180) (<= 0 $generated@@181)) (<= (+ $generated@@180 $generated@@181) ($generated@@163 $generated@@179))) (= ($generated@@167 ($generated@@167 $generated@@179 ($generated@@168 $generated@@180)) ($generated@@168 $generated@@181)) ($generated@@167 $generated@@179 ($generated@@168 (+ $generated@@180 $generated@@181))))))
 :pattern ( ($generated@@167 ($generated@@167 $generated@@179 ($generated@@168 $generated@@180)) ($generated@@168 $generated@@181)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@184 $generated@@185)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@72) (= (type $generated@@187) $generated@@72)) (= (type $generated@@188) $generated@@85)) ($generated@@162 $generated@@188 ($generated@@183 $generated@@186 $generated@@187))) ($generated@@182 $generated@@188))
 :pattern ( ($generated@@182 $generated@@188) ($generated@@162 $generated@@188 ($generated@@183 $generated@@186 $generated@@187)))
)))
(assert  (and (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@157)
 :pattern ( ($generated@@190 $generated@@192))
)) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@157)
 :pattern ( ($generated@@191 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@85) (= (type $generated@@195) $generated@@85)) true) (= ($generated@@189 $generated@@194 $generated@@195)  (and (= ($generated@@190 $generated@@194) ($generated@@190 $generated@@195)) (= ($generated@@191 $generated@@194) ($generated@@191 $generated@@195)))))
 :pattern ( ($generated@@189 $generated@@194 $generated@@195))
)))
(assert  (and (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@76)
 :pattern ( ($generated@@196 $generated@@198))
)) (= (type $generated@@197) $generated@@85)))
(assert (= ($generated@@196 $generated@@197) $generated@@63))
(assert (= (type $generated@@199) $generated@@85))
(assert (= ($generated@@196 $generated@@199) $generated@@66))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@72)
 :pattern ( ($generated@@200 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) ($generated@@86 $generated@@157 $generated@@2)) (= (type $generated@@204) $generated@@72)) ($generated@@162 $generated@@203 ($generated@@200 $generated@@204))) ($generated@@201 $generated@@203))
 :pattern ( ($generated@@162 $generated@@203 ($generated@@200 $generated@@204)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and (and (= (type $generated@@205) $generated@@147) (= (type $generated@@206) $generated@@85)) (= (type $generated@@207) $generated@@85)) (and ($generated@@162 $generated@@206 $generated@@84) ($generated@@162 $generated@@207 $generated@@84))) (= ($generated@@145 ($generated@@146 $generated@@205) $generated@@206 $generated@@207)  (or (and ($generated@@164 $generated@@206) ($generated@@164 $generated@@207)) (and (and ($generated@@165 $generated@@206) ($generated@@165 $generated@@207)) (=> (and ($generated@@165 $generated@@206) ($generated@@165 $generated@@207)) (and (= ($generated@@166 $generated@@206) ($generated@@166 $generated@@207)) ($generated@@145 $generated@@205 ($generated@@169 $generated@@206) ($generated@@169 $generated@@207))))))))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@205) $generated@@206 $generated@@207))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (= ($generated@@1 ($generated@@210 $generated@@214 $generated@@215)) 17)) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@211 ($generated@@210 $generated@@216 $generated@@217)) $generated@@216)
 :pattern ( ($generated@@210 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@212 ($generated@@210 $generated@@218 $generated@@219)) $generated@@219)
 :pattern ( ($generated@@210 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@212 (type $generated@@220))))
(= (type ($generated@@208 $generated@@220 $generated@@221 $generated@@222)) $generated@@223))
 :pattern ( ($generated@@208 $generated@@220 $generated@@221 $generated@@222))
))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 (type $generated@@227)))
(let (($generated@@229 (type $generated@@225)))
(= (type ($generated@@213 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@210 $generated@@229 $generated@@228))))
 :pattern ( ($generated@@213 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@212 (type $generated@@230))))
 (=> (= (type $generated@@233) $generated@@234) (= ($generated@@208 ($generated@@213 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@231 $generated@@232) $generated@@233)))
 :weight 0
))) (and (and (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@208 ($generated@@213 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@208 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
)) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (or (= $generated@@244 $generated@@246) (= ($generated@@208 ($generated@@213 $generated@@242 $generated@@243 $generated@@244 $generated@@241) $generated@@245 $generated@@246) ($generated@@208 $generated@@242 $generated@@245 $generated@@246)))
 :weight 0
))) (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (or true (= ($generated@@208 ($generated@@213 $generated@@248 $generated@@249 $generated@@250 $generated@@247) $generated@@251 $generated@@252) ($generated@@208 $generated@@248 $generated@@251 $generated@@252)))
 :weight 0
)))) (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 Bool) ) (! (= (type ($generated@@209 $generated@@253 $generated@@254 $generated@@255 $generated@@256)) ($generated@@210 $generated@@87 $generated@@4))
 :pattern ( ($generated@@209 $generated@@253 $generated@@254 $generated@@255 $generated@@256))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 Bool) ($generated@@261 T@U) ($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@75 (type $generated@@262))))
 (=> (and (and (and (and (= (type $generated@@257) $generated@@87) (= (type $generated@@258) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@259) ($generated@@74 $generated@@4))) (= (type $generated@@261) $generated@@87)) (= (type $generated@@262) ($generated@@74 $generated@@263))) (= ($generated@@0 ($generated@@208 ($generated@@209 $generated@@257 $generated@@258 $generated@@259 $generated@@260) $generated@@261 $generated@@262))  (=> (and (not (= $generated@@261 $generated@@257)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@258 $generated@@261) $generated@@259))) $generated@@260))))
 :pattern ( ($generated@@208 ($generated@@209 $generated@@257 $generated@@258 $generated@@259 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@265 $generated@@267)) $generated@@85)
 :pattern ( ($generated@@265 $generated@@267))
)))
(assert  (=> (<= 1 $generated@@264) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@147) (or $generated@@266 (not (= 1 $generated@@264)))) ($generated@@162 ($generated@@265 $generated@@268) $generated@@84))
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@269 $generated@@271)) $generated@@85)
 :pattern ( ($generated@@269 $generated@@271))
)))
(assert  (=> (<= 1 $generated@@264) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@147) (or $generated@@270 (not (= 1 $generated@@264)))) ($generated@@162 ($generated@@269 $generated@@272) $generated@@84))
 :pattern ( ($generated@@269 $generated@@272))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (= (type $generated@@273) $generated@@147) (= (type $generated@@274) $generated@@85)) (= (type $generated@@275) $generated@@85)) (forall (($generated@@276 Int) ) (!  (=> (<= 0 $generated@@276) ($generated@@161 ($generated@@168 $generated@@276) ($generated@@146 $generated@@273) $generated@@274 $generated@@275))
 :pattern ( ($generated@@161 ($generated@@168 $generated@@276) ($generated@@146 $generated@@273) $generated@@274 $generated@@275))
))) ($generated@@145 ($generated@@146 $generated@@273) $generated@@274 $generated@@275))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (= (type ($generated@@277 $generated@@279 $generated@@280)) $generated@@85)
 :pattern ( ($generated@@277 $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (= (type $generated@@281) $generated@@72) (= (type $generated@@282) $generated@@72)) (= (type $generated@@283) $generated@@157)) (= (type $generated@@284) $generated@@157)) (= ($generated@@162 ($generated@@277 $generated@@283 $generated@@284) ($generated@@183 $generated@@281 $generated@@282))  (and ($generated@@278 $generated@@283 $generated@@281) ($generated@@278 $generated@@284 $generated@@282))))
 :pattern ( ($generated@@162 ($generated@@277 $generated@@283 $generated@@284) ($generated@@183 $generated@@281 $generated@@282)))
)))
(assert ($generated@@162 $generated@@197 $generated@@84))
(assert (= (type $generated@@285) $generated@@72))
(assert ($generated@@162 $generated@@199 $generated@@285))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) ($generated@@86 $generated@@87 $generated@@88)) ($generated@@89 $generated@@286)) ($generated@@82 $generated@@197 $generated@@84 $generated@@286))
 :pattern ( ($generated@@82 $generated@@197 $generated@@84 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@86 $generated@@87 $generated@@88)) ($generated@@89 $generated@@287)) ($generated@@82 $generated@@199 $generated@@285 $generated@@287))
 :pattern ( ($generated@@82 $generated@@199 $generated@@285 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@85) (= (type $generated@@289) $generated@@85)) (= ($generated@@189 $generated@@288 $generated@@289) (= $generated@@288 $generated@@289)))
 :pattern ( ($generated@@189 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@85) (= (type $generated@@292) $generated@@85)) (= ($generated@@290 $generated@@291 $generated@@292) (= $generated@@291 $generated@@292)))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) $generated@@157) (= (type $generated@@294) $generated@@147)) (= (type $generated@@295) $generated@@85)) (= (type $generated@@296) $generated@@85)) (= (type $generated@@297) $generated@@157)) (and ($generated@@156 $generated@@293 $generated@@297) ($generated@@161 $generated@@297 ($generated@@146 $generated@@294) $generated@@295 $generated@@296))) ($generated@@161 $generated@@293 ($generated@@146 $generated@@294) $generated@@295 $generated@@296))
 :pattern ( ($generated@@161 $generated@@293 ($generated@@146 $generated@@294) $generated@@295 $generated@@296) ($generated@@161 $generated@@297 ($generated@@146 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@72)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) ($generated@@86 $generated@@157 $generated@@4)) (= (type $generated@@301) $generated@@72)) (= ($generated@@162 $generated@@300 ($generated@@298 $generated@@301)) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@157) ($generated@@0 ($generated@@92 $generated@@300 $generated@@302))) ($generated@@278 $generated@@302 $generated@@301))
 :pattern ( ($generated@@92 $generated@@300 $generated@@302))
))))
 :pattern ( ($generated@@162 $generated@@300 ($generated@@298 $generated@@301)))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@72)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) ($generated@@86 $generated@@157 $generated@@4)) (= (type $generated@@306) $generated@@72)) (= ($generated@@162 $generated@@305 ($generated@@303 $generated@@306)) (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@157) ($generated@@0 ($generated@@92 $generated@@305 $generated@@307))) ($generated@@278 $generated@@307 $generated@@306))
 :pattern ( ($generated@@92 $generated@@305 $generated@@307))
))))
 :pattern ( ($generated@@162 $generated@@305 ($generated@@303 $generated@@306)))
)))
(assert (forall (($generated@@309 Int) ) (! (= ($generated@@308 $generated@@309) $generated@@309)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 (type $generated@@311)))
(= (type ($generated@@310 $generated@@311)) $generated@@312))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (= ($generated@@310 $generated@@313) $generated@@313)
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (= (type $generated@@315) $generated@@85) (= (type $generated@@316) $generated@@85)) (and ($generated@@314 $generated@@315) ($generated@@314 $generated@@316))) (= ($generated@@290 $generated@@315 $generated@@316) true))
 :pattern ( ($generated@@290 $generated@@315 $generated@@316) ($generated@@314 $generated@@315))
 :pattern ( ($generated@@290 $generated@@315 $generated@@316) ($generated@@314 $generated@@316))
)))
(assert  (=> (<= 2 $generated@@264) (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@319) $generated@@147) (= (type $generated@@320) $generated@@157)) (= (type $generated@@321) $generated@@85)) (= (type $generated@@322) $generated@@85)) (or ($generated@@318 ($generated@@310 $generated@@320) $generated@@321 $generated@@322) (and (not (= 2 $generated@@264)) (and ($generated@@162 $generated@@321 $generated@@84) ($generated@@162 $generated@@322 $generated@@84))))) (and (and (=> (< 0 ($generated@@163 $generated@@320)) (=> (not ($generated@@164 $generated@@321)) (let (($generated@@323 ($generated@@169 $generated@@321)))
(let (($generated@@324 ($generated@@166 $generated@@321)))
 (=> ($generated@@165 $generated@@322) (=> (<= $generated@@324 ($generated@@166 $generated@@322)) ($generated@@318 ($generated@@167 $generated@@320 ($generated@@168 1)) $generated@@323 ($generated@@169 $generated@@322)))))))) (=> (=> (< 0 ($generated@@163 $generated@@320)) (ite ($generated@@164 $generated@@321) true (let (($generated@@325 ($generated@@169 $generated@@321)))
(let (($generated@@326 ($generated@@166 $generated@@321)))
 (and (and ($generated@@165 $generated@@322) (<= $generated@@326 ($generated@@166 $generated@@322))) ($generated@@317 ($generated@@146 $generated@@319) ($generated@@167 $generated@@320 ($generated@@168 1)) $generated@@325 ($generated@@169 $generated@@322))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@320)) (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@157) ($generated@@156 $generated@@327 $generated@@320)) ($generated@@318 $generated@@327 $generated@@321 $generated@@322))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@319) $generated@@327 $generated@@321 $generated@@322))
))))) (= ($generated@@317 ($generated@@146 $generated@@319) ($generated@@310 $generated@@320) $generated@@321 $generated@@322)  (and (=> (< 0 ($generated@@163 $generated@@320)) (ite ($generated@@164 $generated@@321) true (let (($generated@@328 ($generated@@169 $generated@@321)))
(let (($generated@@329 ($generated@@166 $generated@@321)))
 (and (and ($generated@@165 $generated@@322) (<= $generated@@329 ($generated@@166 $generated@@322))) ($generated@@317 ($generated@@146 $generated@@319) ($generated@@167 $generated@@320 ($generated@@168 1)) $generated@@328 ($generated@@169 $generated@@322))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@320)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@157) ($generated@@156 $generated@@330 $generated@@320)) ($generated@@317 ($generated@@146 $generated@@319) $generated@@330 $generated@@321 $generated@@322))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@319) $generated@@330 $generated@@321 $generated@@322))
)))))))
 :weight 3
 :pattern ( ($generated@@317 ($generated@@146 $generated@@319) ($generated@@310 $generated@@320) $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@332) $generated@@72) (= (type $generated@@333) $generated@@72)) (= (type $generated@@334) $generated@@157)) (= (type $generated@@335) $generated@@157)) (= (type $generated@@336) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@336)) (= ($generated@@82 ($generated@@277 $generated@@334 $generated@@335) ($generated@@183 $generated@@332 $generated@@333) $generated@@336)  (and ($generated@@331 $generated@@334 $generated@@332 $generated@@336) ($generated@@331 $generated@@335 $generated@@333 $generated@@336))))
 :pattern ( ($generated@@82 ($generated@@277 $generated@@334 $generated@@335) ($generated@@183 $generated@@332 $generated@@333) $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@85) (= ($generated@@182 $generated@@337) (= ($generated@@196 $generated@@337) $generated@@61)))
 :pattern ( ($generated@@182 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@85) (= ($generated@@164 $generated@@338) (= ($generated@@196 $generated@@338) $generated@@63)))
 :pattern ( ($generated@@164 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@85) (= ($generated@@165 $generated@@339) (= ($generated@@196 $generated@@339) $generated@@65)))
 :pattern ( ($generated@@165 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@85) (= ($generated@@314 $generated@@340) (= ($generated@@196 $generated@@340) $generated@@66)))
 :pattern ( ($generated@@314 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@85) (= ($generated@@341 $generated@@342) (= ($generated@@196 $generated@@342) $generated@@68)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert  (and (forall (($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@345)) $generated@@147)
 :pattern ( ($generated@@343 $generated@@345))
)) (= (type $generated@@344) $generated@@147)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (and (= (type $generated@@346) $generated@@147) (= (type $generated@@347) $generated@@157)) (= (type $generated@@348) $generated@@85)) (= (type $generated@@349) $generated@@85)) (= ($generated@@317 $generated@@346 $generated@@347 $generated@@348 $generated@@349) ($generated@@317 $generated@@344 $generated@@347 $generated@@348 $generated@@349)))
 :pattern ( ($generated@@317 ($generated@@343 $generated@@346) $generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@85) ($generated@@182 $generated@@350)) (exists (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (and (and (= (type $generated@@351) $generated@@157) (= (type $generated@@352) $generated@@157)) (= $generated@@350 ($generated@@277 $generated@@351 $generated@@352)))
 :no-pattern (type $generated@@351)
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
)))
 :pattern ( ($generated@@182 $generated@@350))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@85) ($generated@@165 $generated@@353)) (exists (($generated@@354 Int) ($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@85) (= $generated@@353 ($generated@@83 $generated@@354 $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
)))
 :pattern ( ($generated@@165 $generated@@353))
)))
(assert  (and (and (forall (($generated@@360 T@T) ) (= ($generated@@1 ($generated@@358 $generated@@360)) 18)) (forall (($generated@@361 T@T) ) (! (= ($generated@@359 ($generated@@358 $generated@@361)) $generated@@361)
 :pattern ( ($generated@@358 $generated@@361))
))) (forall (($generated@@362 T@T) ) (! (= (type ($generated@@356 $generated@@362)) ($generated@@358 $generated@@362))
 :pattern ( ($generated@@356 $generated@@362))
))))
(assert (forall (($generated@@363 T@T) ) (! (= ($generated@@357 ($generated@@356 $generated@@363)) 0)
 :pattern ( ($generated@@356 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@85) ($generated@@164 $generated@@364)) (= $generated@@364 $generated@@197))
 :pattern ( ($generated@@164 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@85) ($generated@@314 $generated@@365)) (= $generated@@365 $generated@@199))
 :pattern ( ($generated@@314 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (= (type ($generated@@366 $generated@@367)) $generated@@85)
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@85) ($generated@@341 $generated@@368)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@85) (= $generated@@368 ($generated@@366 $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
)))
 :pattern ( ($generated@@341 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@370) $generated@@157) (= (type $generated@@371) $generated@@147)) (= (type $generated@@372) $generated@@85)) (= (type $generated@@373) $generated@@85)) (not (= $generated@@370 ($generated@@168 0)))) (= ($generated@@161 $generated@@370 ($generated@@146 $generated@@371) $generated@@372 $generated@@373) ($generated@@161 $generated@@370 $generated@@371 $generated@@372 $generated@@373)))
 :pattern ( ($generated@@161 $generated@@370 ($generated@@146 $generated@@371) $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) $generated@@147) (= (type $generated@@375) $generated@@85)) (= (type $generated@@376) $generated@@85)) (= ($generated@@145 ($generated@@146 $generated@@374) $generated@@375 $generated@@376) ($generated@@145 $generated@@374 $generated@@375 $generated@@376)))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@374) $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (= (type ($generated@@377 $generated@@378)) $generated@@157)
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@72) (= (type $generated@@381) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@331 ($generated@@377 $generated@@379) $generated@@380 $generated@@381) ($generated@@82 $generated@@379 $generated@@380 $generated@@381)))
 :pattern ( ($generated@@331 ($generated@@377 $generated@@379) $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@384 T@T) ) (! (= (type ($generated@@383 $generated@@384)) ($generated@@86 $generated@@384 $generated@@2))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@90 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@86 $generated@@386 $generated@@2)) (and (= (= ($generated@@382 $generated@@385) 0) (= $generated@@385 ($generated@@383 $generated@@386))) (=> (not (= ($generated@@382 $generated@@385) 0)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (< 0 ($generated ($generated@@92 $generated@@385 $generated@@387))))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert  (and (and (and (and (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (= ($generated@@1 ($generated@@390 $generated@@393 $generated@@394)) 19)) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@391 ($generated@@390 $generated@@395 $generated@@396)) $generated@@395)
 :pattern ( ($generated@@390 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (! (= ($generated@@392 ($generated@@390 $generated@@397 $generated@@398)) $generated@@398)
 :pattern ( ($generated@@390 $generated@@397 $generated@@398))
))) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@391 (type $generated@@399))))
(= (type ($generated@@388 $generated@@399)) ($generated@@86 $generated@@400 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@399))
))) (forall (($generated@@401 T@T) ($generated@@402 T@T) ) (! (= (type ($generated@@389 $generated@@401 $generated@@402)) ($generated@@390 $generated@@401 $generated@@402))
 :pattern ( ($generated@@389 $generated@@401 $generated@@402))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@T) ) (! (let (($generated@@405 (type $generated@@403)))
 (not ($generated@@0 ($generated@@92 ($generated@@388 ($generated@@389 $generated@@405 $generated@@404)) $generated@@403))))
 :pattern ( (let (($generated@@405 (type $generated@@403)))
($generated@@92 ($generated@@388 ($generated@@389 $generated@@405 $generated@@404)) $generated@@403)))
)))
(assert  (and (and (and (and (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (= ($generated@@1 ($generated@@408 $generated@@411 $generated@@412)) 20)) (forall (($generated@@413 T@T) ($generated@@414 T@T) ) (! (= ($generated@@409 ($generated@@408 $generated@@413 $generated@@414)) $generated@@413)
 :pattern ( ($generated@@408 $generated@@413 $generated@@414))
))) (forall (($generated@@415 T@T) ($generated@@416 T@T) ) (! (= ($generated@@410 ($generated@@408 $generated@@415 $generated@@416)) $generated@@416)
 :pattern ( ($generated@@408 $generated@@415 $generated@@416))
))) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@409 (type $generated@@417))))
(= (type ($generated@@406 $generated@@417)) ($generated@@86 $generated@@418 $generated@@4)))
 :pattern ( ($generated@@406 $generated@@417))
))) (forall (($generated@@419 T@T) ($generated@@420 T@T) ) (! (= (type ($generated@@407 $generated@@419 $generated@@420)) ($generated@@408 $generated@@419 $generated@@420))
 :pattern ( ($generated@@407 $generated@@419 $generated@@420))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@T) ) (! (let (($generated@@423 (type $generated@@421)))
 (not ($generated@@0 ($generated@@92 ($generated@@406 ($generated@@407 $generated@@423 $generated@@422)) $generated@@421))))
 :pattern ( (let (($generated@@423 (type $generated@@421)))
($generated@@92 ($generated@@406 ($generated@@407 $generated@@423 $generated@@422)) $generated@@421)))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (= (type $generated@@425) $generated@@157) (= (type $generated@@426) $generated@@157)) (and ($generated@@424 $generated@@426) (<= ($generated@@163 $generated@@426) ($generated@@163 $generated@@425)))) (and (= ($generated@@424 ($generated@@167 $generated@@425 $generated@@426)) ($generated@@424 $generated@@425)) (= ($generated@@163 ($generated@@167 $generated@@425 $generated@@426)) (- ($generated@@163 $generated@@425) ($generated@@163 $generated@@426)))))
 :pattern ( ($generated@@167 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 Int) ) (!  (=> (<= 0 $generated@@427) (and ($generated@@424 ($generated@@168 $generated@@427)) (= ($generated@@163 ($generated@@168 $generated@@427)) $generated@@427)))
 :pattern ( ($generated@@168 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@90 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@86 $generated@@429 $generated@@2)) (= ($generated@@201 $generated@@428) (forall (($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@429) (and (<= 0 ($generated ($generated@@92 $generated@@428 $generated@@430))) (<= ($generated ($generated@@92 $generated@@428 $generated@@430)) ($generated@@382 $generated@@428))))
 :pattern ( ($generated@@92 $generated@@428 $generated@@430))
)))))
 :pattern ( ($generated@@201 $generated@@428))
)))
(assert (forall (($generated@@432 T@T) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@432)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@157) ($generated@@278 $generated@@434 $generated@@84)) (and (= ($generated@@377 ($generated@@431 $generated@@85 $generated@@434)) $generated@@434) ($generated@@162 ($generated@@431 $generated@@85 $generated@@434) $generated@@84)))
 :pattern ( ($generated@@278 $generated@@434 $generated@@84))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@278 $generated@@435 $generated@@285)) (and (= ($generated@@377 ($generated@@431 $generated@@85 $generated@@435)) $generated@@435) ($generated@@162 ($generated@@431 $generated@@85 $generated@@435) $generated@@285)))
 :pattern ( ($generated@@278 $generated@@435 $generated@@285))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@85) (= ($generated@@162 ($generated@@366 $generated@@436) $generated@@285) ($generated@@162 $generated@@436 $generated@@285)))
 :pattern ( ($generated@@162 ($generated@@366 $generated@@436) $generated@@285))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (= (type $generated@@437) $generated@@147) (= (type $generated@@438) $generated@@85)) (= (type $generated@@439) $generated@@85)) (= ($generated@@145 ($generated@@146 $generated@@437) $generated@@438 $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@157) ($generated@@161 $generated@@440 ($generated@@146 $generated@@437) $generated@@438 $generated@@439))
 :pattern ( ($generated@@161 $generated@@440 ($generated@@146 $generated@@437) $generated@@438 $generated@@439))
))))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@437) $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@85)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (= (type $generated@@443) $generated@@85) (= (type $generated@@444) $generated@@85)) (and ($generated@@341 $generated@@443) ($generated@@341 $generated@@444))) (= ($generated@@290 $generated@@443 $generated@@444) ($generated@@290 ($generated@@441 $generated@@443) ($generated@@441 $generated@@444))))
 :pattern ( ($generated@@290 $generated@@443 $generated@@444) ($generated@@341 $generated@@443))
 :pattern ( ($generated@@290 $generated@@443 $generated@@444) ($generated@@341 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@392 (type $generated@@445))))
(let (($generated@@447 ($generated@@391 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@390 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@389 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) ($generated@@0 ($generated@@92 ($generated@@388 $generated@@445) $generated@@448)))
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@392 (type $generated@@450))))
(= (type ($generated@@449 $generated@@450)) ($generated@@86 $generated@@451 $generated@@4)))
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@392 (type $generated@@452))))
(let (($generated@@454 ($generated@@391 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@390 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@389 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ) (!  (and (= (type $generated@@455) $generated@@453) ($generated@@0 ($generated@@92 ($generated@@449 $generated@@452) $generated@@455)))
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@449 $generated@@452))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@410 (type $generated@@456))))
(let (($generated@@458 ($generated@@409 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@408 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@407 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ) (!  (and (= (type $generated@@459) $generated@@458) ($generated@@0 ($generated@@92 ($generated@@406 $generated@@456) $generated@@459)))
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@406 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@410 (type $generated@@461))))
(= (type ($generated@@460 $generated@@461)) ($generated@@86 $generated@@462 $generated@@4)))
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@410 (type $generated@@463))))
(let (($generated@@465 ($generated@@409 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@408 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@407 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ) (!  (and (= (type $generated@@466) $generated@@464) ($generated@@0 ($generated@@92 ($generated@@460 $generated@@463) $generated@@466)))
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@460 $generated@@463))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) ($generated@@86 $generated@@157 $generated@@2)) (= (type $generated@@468) $generated@@72)) (= ($generated@@162 $generated@@467 ($generated@@200 $generated@@468)) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@157) (< 0 ($generated ($generated@@92 $generated@@467 $generated@@469)))) ($generated@@278 $generated@@469 $generated@@468))
 :pattern ( ($generated@@92 $generated@@467 $generated@@469))
))))
 :pattern ( ($generated@@162 $generated@@467 ($generated@@200 $generated@@468)))
)))
(assert  (=> (<= 2 $generated@@264) (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@470) $generated@@147) (= (type $generated@@471) $generated@@157)) (= (type $generated@@472) $generated@@85)) (= (type $generated@@473) $generated@@85)) (or ($generated@@318 $generated@@471 $generated@@472 $generated@@473) (and (not (= 2 $generated@@264)) (and ($generated@@162 $generated@@472 $generated@@84) ($generated@@162 $generated@@473 $generated@@84))))) true)
 :pattern ( ($generated@@317 $generated@@470 $generated@@471 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@85) ($generated@@474 $generated@@475)) (or ($generated@@314 $generated@@475) ($generated@@341 $generated@@475)))
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@157) (= (type $generated@@477) $generated@@157)) (or (or ($generated@@156 $generated@@476 $generated@@477) (= $generated@@476 $generated@@477)) ($generated@@156 $generated@@477 $generated@@476)))
 :pattern ( ($generated@@156 $generated@@476 $generated@@477) ($generated@@156 $generated@@477 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@86 $generated@@157 $generated@@4)) (= (type $generated@@479) $generated@@72)) (= (type $generated@@480) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@478 ($generated@@298 $generated@@479) $generated@@480) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@157) ($generated@@0 ($generated@@92 $generated@@478 $generated@@481))) ($generated@@331 $generated@@481 $generated@@479 $generated@@480))
 :pattern ( ($generated@@92 $generated@@478 $generated@@481))
))))
 :pattern ( ($generated@@82 $generated@@478 ($generated@@298 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@86 $generated@@157 $generated@@4)) (= (type $generated@@483) $generated@@72)) (= (type $generated@@484) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@482 ($generated@@303 $generated@@483) $generated@@484) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@157) ($generated@@0 ($generated@@92 $generated@@482 $generated@@485))) ($generated@@331 $generated@@485 $generated@@483 $generated@@484))
 :pattern ( ($generated@@92 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@82 $generated@@482 ($generated@@303 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
(= ($generated ($generated@@92 ($generated@@383 $generated@@487) $generated@@486)) 0))
 :pattern ( (let (($generated@@487 (type $generated@@486)))
($generated@@92 ($generated@@383 $generated@@487) $generated@@486)))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) ($generated@@86 $generated@@157 $generated@@4))
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@392 (type $generated@@491))))
(let (($generated@@493 ($generated@@391 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491)) ($generated@@86 $generated@@493 $generated@@492))))
 :pattern ( ($generated@@489 $generated@@491))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) ($generated@@390 $generated@@157 $generated@@157)) (= (type $generated@@495) $generated@@157)) (= ($generated@@0 ($generated@@92 ($generated@@488 $generated@@494) $generated@@495))  (and ($generated@@0 ($generated@@92 ($generated@@388 $generated@@494) ($generated@@190 ($generated@@431 $generated@@85 $generated@@495)))) (= ($generated@@92 ($generated@@489 $generated@@494) ($generated@@190 ($generated@@431 $generated@@85 $generated@@495))) ($generated@@191 ($generated@@431 $generated@@85 $generated@@495))))))
 :pattern ( ($generated@@92 ($generated@@488 $generated@@494) $generated@@495))
)))
(assert  (and (forall (($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@498)) ($generated@@86 $generated@@157 $generated@@4))
 :pattern ( ($generated@@496 $generated@@498))
)) (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@410 (type $generated@@499))))
(let (($generated@@501 ($generated@@409 (type $generated@@499))))
(= (type ($generated@@497 $generated@@499)) ($generated@@86 $generated@@501 $generated@@500))))
 :pattern ( ($generated@@497 $generated@@499))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) ($generated@@408 $generated@@157 $generated@@157)) (= (type $generated@@503) $generated@@157)) (= ($generated@@0 ($generated@@92 ($generated@@496 $generated@@502) $generated@@503))  (and ($generated@@0 ($generated@@92 ($generated@@406 $generated@@502) ($generated@@190 ($generated@@431 $generated@@85 $generated@@503)))) (= ($generated@@92 ($generated@@497 $generated@@502) ($generated@@190 ($generated@@431 $generated@@85 $generated@@503))) ($generated@@191 ($generated@@431 $generated@@85 $generated@@503))))))
 :pattern ( ($generated@@92 ($generated@@496 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(let (($generated@@507 ($generated@@391 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@390 $generated@@507 $generated@@506)) (= ($generated@@0 ($generated@@92 ($generated@@449 $generated@@504) $generated@@505)) (exists (($generated@@508 T@U) ) (!  (and (= (type $generated@@508) $generated@@507) (and ($generated@@0 ($generated@@92 ($generated@@388 $generated@@504) $generated@@508)) (= $generated@@505 ($generated@@92 ($generated@@489 $generated@@504) $generated@@508))))
 :pattern ( ($generated@@92 ($generated@@388 $generated@@504) $generated@@508))
 :pattern ( ($generated@@92 ($generated@@489 $generated@@504) $generated@@508))
))))))
 :pattern ( ($generated@@92 ($generated@@449 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(let (($generated@@512 ($generated@@409 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@408 $generated@@512 $generated@@511)) (= ($generated@@0 ($generated@@92 ($generated@@460 $generated@@509) $generated@@510)) (exists (($generated@@513 T@U) ) (!  (and (= (type $generated@@513) $generated@@512) (and ($generated@@0 ($generated@@92 ($generated@@406 $generated@@509) $generated@@513)) (= $generated@@510 ($generated@@92 ($generated@@497 $generated@@509) $generated@@513))))
 :pattern ( ($generated@@92 ($generated@@406 $generated@@509) $generated@@513))
 :pattern ( ($generated@@92 ($generated@@497 $generated@@509) $generated@@513))
))))))
 :pattern ( ($generated@@92 ($generated@@460 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (! (= (type ($generated@@514 $generated@@515 $generated@@516)) $generated@@72)
 :pattern ( ($generated@@514 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) ($generated@@390 $generated@@157 $generated@@157)) (= (type $generated@@518) $generated@@72)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@517 ($generated@@514 $generated@@518 $generated@@519) $generated@@520) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@157) ($generated@@0 ($generated@@92 ($generated@@388 $generated@@517) $generated@@521))) (and ($generated@@331 ($generated@@92 ($generated@@489 $generated@@517) $generated@@521) $generated@@519 $generated@@520) ($generated@@331 $generated@@521 $generated@@518 $generated@@520)))
 :pattern ( ($generated@@92 ($generated@@489 $generated@@517) $generated@@521))
 :pattern ( ($generated@@92 ($generated@@388 $generated@@517) $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@517 ($generated@@514 $generated@@518 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (! (= (type ($generated@@522 $generated@@523 $generated@@524)) $generated@@72)
 :pattern ( ($generated@@522 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) ($generated@@408 $generated@@157 $generated@@157)) (= (type $generated@@526) $generated@@72)) (= (type $generated@@527) $generated@@72)) (= (type $generated@@528) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@525 ($generated@@522 $generated@@526 $generated@@527) $generated@@528) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@157) ($generated@@0 ($generated@@92 ($generated@@406 $generated@@525) $generated@@529))) (and ($generated@@331 ($generated@@92 ($generated@@497 $generated@@525) $generated@@529) $generated@@527 $generated@@528) ($generated@@331 $generated@@529 $generated@@526 $generated@@528)))
 :pattern ( ($generated@@92 ($generated@@497 $generated@@525) $generated@@529))
 :pattern ( ($generated@@92 ($generated@@406 $generated@@525) $generated@@529))
))))
 :pattern ( ($generated@@82 $generated@@525 ($generated@@522 $generated@@526 $generated@@527) $generated@@528))
)))
(assert  (=> (<= 1 $generated@@264) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@147) (or $generated@@266 (not (= 1 $generated@@264)))) (and $generated@@266 (= ($generated@@265 ($generated@@146 $generated@@530)) ($generated@@310 ($generated@@83 ($generated@@308 0) ($generated@@310 ($generated@@265 $generated@@530)))))))
 :pattern ( ($generated@@265 ($generated@@146 $generated@@530)))
))))
(assert  (=> (<= 1 $generated@@264) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@147) (or $generated@@270 (not (= 1 $generated@@264)))) (and $generated@@270 (= ($generated@@269 ($generated@@146 $generated@@531)) ($generated@@310 ($generated@@83 ($generated@@308 1) ($generated@@310 ($generated@@269 $generated@@531)))))))
 :pattern ( ($generated@@269 ($generated@@146 $generated@@531)))
))))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@85) (= (type $generated@@533) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@89 $generated@@533)) (= ($generated@@82 ($generated@@366 $generated@@532) $generated@@285 $generated@@533) ($generated@@82 $generated@@532 $generated@@285 $generated@@533)))
 :pattern ( ($generated@@82 ($generated@@366 $generated@@532) $generated@@285 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@85) ($generated@@162 $generated@@534 $generated@@84)) (or ($generated@@164 $generated@@534) ($generated@@165 $generated@@534)))
 :pattern ( ($generated@@165 $generated@@534) ($generated@@162 $generated@@534 $generated@@84))
 :pattern ( ($generated@@164 $generated@@534) ($generated@@162 $generated@@534 $generated@@84))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@85) ($generated@@162 $generated@@535 $generated@@285)) (or ($generated@@314 $generated@@535) ($generated@@341 $generated@@535)))
 :pattern ( ($generated@@341 $generated@@535) ($generated@@162 $generated@@535 $generated@@285))
 :pattern ( ($generated@@314 $generated@@535) ($generated@@162 $generated@@535 $generated@@285))
)))
(assert (forall (($generated@@537 T@T) ) (! (= (type ($generated@@536 $generated@@537)) ($generated@@86 $generated@@537 $generated@@4))
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@410 (type $generated@@538))))
(let (($generated@@540 ($generated@@409 (type $generated@@538))))
 (=> (= (type $generated@@538) ($generated@@408 $generated@@540 $generated@@539)) (= (= $generated@@538 ($generated@@407 $generated@@540 $generated@@539)) (= ($generated@@406 $generated@@538) ($generated@@536 $generated@@540))))))
 :pattern ( ($generated@@406 $generated@@538))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@410 (type $generated@@541))))
(let (($generated@@543 ($generated@@409 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@408 $generated@@543 $generated@@542)) (= (= $generated@@541 ($generated@@407 $generated@@543 $generated@@542)) (= ($generated@@460 $generated@@541) ($generated@@536 $generated@@542))))))
 :pattern ( ($generated@@460 $generated@@541))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@410 (type $generated@@544))))
(let (($generated@@546 ($generated@@409 (type $generated@@544))))
 (=> (= (type $generated@@544) ($generated@@408 $generated@@546 $generated@@545)) (= (= $generated@@544 ($generated@@407 $generated@@546 $generated@@545)) (= ($generated@@496 $generated@@544) ($generated@@536 $generated@@157))))))
 :pattern ( ($generated@@496 $generated@@544))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@392 (type $generated@@547))))
(let (($generated@@549 ($generated@@391 (type $generated@@547))))
 (=> (= (type $generated@@547) ($generated@@390 $generated@@549 $generated@@548)) (or (= $generated@@547 ($generated@@389 $generated@@549 $generated@@548)) (exists (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (and (and (= (type $generated@@550) $generated@@157) (= (type $generated@@551) $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@488 $generated@@547) ($generated@@377 ($generated@@277 $generated@@550 $generated@@551)))))
 :no-pattern (type $generated@@550)
 :no-pattern (type $generated@@551)
 :no-pattern ($generated $generated@@550)
 :no-pattern ($generated@@0 $generated@@550)
 :no-pattern ($generated $generated@@551)
 :no-pattern ($generated@@0 $generated@@551)
))))))
 :pattern ( ($generated@@488 $generated@@547))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@410 (type $generated@@552))))
(let (($generated@@554 ($generated@@409 (type $generated@@552))))
 (=> (= (type $generated@@552) ($generated@@408 $generated@@554 $generated@@553)) (or (= $generated@@552 ($generated@@407 $generated@@554 $generated@@553)) (exists (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (and (and (= (type $generated@@555) $generated@@157) (= (type $generated@@556) $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@496 $generated@@552) ($generated@@377 ($generated@@277 $generated@@555 $generated@@556)))))
 :no-pattern (type $generated@@555)
 :no-pattern (type $generated@@556)
 :no-pattern ($generated $generated@@555)
 :no-pattern ($generated@@0 $generated@@555)
 :no-pattern ($generated $generated@@556)
 :no-pattern ($generated@@0 $generated@@556)
))))))
 :pattern ( ($generated@@496 $generated@@552))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@157) ($generated@@278 $generated@@557 $generated@@46)) (and (= ($generated@@377 ($generated@@431 $generated@@2 $generated@@557)) $generated@@557) ($generated@@162 ($generated@@431 $generated@@2 $generated@@557) $generated@@46)))
 :pattern ( ($generated@@278 $generated@@557 $generated@@46))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@157) ($generated@@278 $generated@@558 $generated@@47)) (and (= ($generated@@377 ($generated@@431 $generated@@3 $generated@@558)) $generated@@558) ($generated@@162 ($generated@@431 $generated@@3 $generated@@558) $generated@@47)))
 :pattern ( ($generated@@278 $generated@@558 $generated@@47))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@157) ($generated@@278 $generated@@559 $generated@@44)) (and (= ($generated@@377 ($generated@@431 $generated@@4 $generated@@559)) $generated@@559) ($generated@@162 ($generated@@431 $generated@@4 $generated@@559) $generated@@44)))
 :pattern ( ($generated@@278 $generated@@559 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@560) 21))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@157) ($generated@@278 $generated@@561 $generated@@45)) (and (= ($generated@@377 ($generated@@431 $generated@@560 $generated@@561)) $generated@@561) ($generated@@162 ($generated@@431 $generated@@560 $generated@@561) $generated@@45)))
 :pattern ( ($generated@@278 $generated@@561 $generated@@45))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@72) (= ($generated@@278 ($generated@@377 $generated@@562) $generated@@563) ($generated@@162 $generated@@562 $generated@@563)))
 :pattern ( ($generated@@278 ($generated@@377 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@147) (= (type $generated@@565) $generated@@157)) (= (type $generated@@566) $generated@@85)) (= (type $generated@@567) $generated@@85)) (= ($generated@@317 ($generated@@146 $generated@@564) $generated@@565 $generated@@566 $generated@@567) ($generated@@317 $generated@@564 $generated@@565 $generated@@566 $generated@@567)))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@564) $generated@@565 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@157) (<= 0 ($generated@@163 $generated@@568)))
 :pattern ( ($generated@@163 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@90 (type $generated@@569))))
 (=> (= (type $generated@@569) ($generated@@86 $generated@@570 $generated@@2)) (<= 0 ($generated@@382 $generated@@569))))
 :pattern ( ($generated@@382 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@359 (type $generated@@571))))
 (=> (= (type $generated@@571) ($generated@@358 $generated@@572)) (<= 0 ($generated@@357 $generated@@571))))
 :pattern ( ($generated@@357 $generated@@571))
)))
(assert  (=> (<= 2 $generated@@264) (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@573) $generated@@147) (= (type $generated@@574) $generated@@157)) (= (type $generated@@575) $generated@@85)) (= (type $generated@@576) $generated@@85)) (or ($generated@@318 $generated@@574 $generated@@575 $generated@@576) (and (not (= 2 $generated@@264)) (and ($generated@@162 $generated@@575 $generated@@84) ($generated@@162 $generated@@576 $generated@@84))))) (and (and (=> (< 0 ($generated@@163 $generated@@574)) (=> (not ($generated@@164 $generated@@575)) (let (($generated@@577 ($generated@@169 $generated@@575)))
(let (($generated@@578 ($generated@@166 $generated@@575)))
 (=> ($generated@@165 $generated@@576) (=> (<= $generated@@578 ($generated@@166 $generated@@576)) ($generated@@318 ($generated@@167 $generated@@574 ($generated@@168 1)) $generated@@577 ($generated@@169 $generated@@576)))))))) (=> (=> (< 0 ($generated@@163 $generated@@574)) (ite ($generated@@164 $generated@@575) true (let (($generated@@579 ($generated@@169 $generated@@575)))
(let (($generated@@580 ($generated@@166 $generated@@575)))
 (and (and ($generated@@165 $generated@@576) (<= $generated@@580 ($generated@@166 $generated@@576))) ($generated@@317 $generated@@573 ($generated@@167 $generated@@574 ($generated@@168 1)) $generated@@579 ($generated@@169 $generated@@576))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@574)) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@157) ($generated@@156 $generated@@581 $generated@@574)) ($generated@@318 $generated@@581 $generated@@575 $generated@@576))
 :pattern ( ($generated@@317 $generated@@573 $generated@@581 $generated@@575 $generated@@576))
))))) (= ($generated@@317 ($generated@@146 $generated@@573) $generated@@574 $generated@@575 $generated@@576)  (and (=> (< 0 ($generated@@163 $generated@@574)) (ite ($generated@@164 $generated@@575) true (let (($generated@@582 ($generated@@169 $generated@@575)))
(let (($generated@@583 ($generated@@166 $generated@@575)))
 (and (and ($generated@@165 $generated@@576) (<= $generated@@583 ($generated@@166 $generated@@576))) ($generated@@317 $generated@@573 ($generated@@167 $generated@@574 ($generated@@168 1)) $generated@@582 ($generated@@169 $generated@@576))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@574)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@157) ($generated@@156 $generated@@584 $generated@@574)) ($generated@@317 $generated@@573 $generated@@584 $generated@@575 $generated@@576))
 :pattern ( ($generated@@317 $generated@@573 $generated@@584 $generated@@575 $generated@@576))
)))))))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@573) $generated@@574 $generated@@575 $generated@@576))
))))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@72)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@72) (= (type $generated@@588) $generated@@72)) (= ($generated@@585 ($generated@@514 $generated@@587 $generated@@588)) $generated@@587))
 :pattern ( ($generated@@514 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@72)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@72) (= (type $generated@@592) $generated@@72)) (= ($generated@@589 ($generated@@514 $generated@@591 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@514 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@72) (= (type $generated@@594) $generated@@72)) (= ($generated@@80 ($generated@@514 $generated@@593 $generated@@594)) $generated@@58))
 :pattern ( ($generated@@514 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@72)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@72) (= (type $generated@@598) $generated@@72)) (= ($generated@@595 ($generated@@522 $generated@@597 $generated@@598)) $generated@@597))
 :pattern ( ($generated@@522 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ) (! (= (type ($generated@@599 $generated@@600)) $generated@@72)
 :pattern ( ($generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@72) (= (type $generated@@602) $generated@@72)) (= ($generated@@599 ($generated@@522 $generated@@601 $generated@@602)) $generated@@602))
 :pattern ( ($generated@@522 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@72) (= (type $generated@@604) $generated@@72)) (= ($generated@@80 ($generated@@522 $generated@@603 $generated@@604)) $generated@@59))
 :pattern ( ($generated@@522 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@157) (= (type $generated@@606) $generated@@157)) (= ($generated@@196 ($generated@@277 $generated@@605 $generated@@606)) $generated@@61))
 :pattern ( ($generated@@277 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ) (! (= (type ($generated@@607 $generated@@608)) $generated@@72)
 :pattern ( ($generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@72) (= (type $generated@@610) $generated@@72)) (= ($generated@@607 ($generated@@183 $generated@@609 $generated@@610)) $generated@@609))
 :pattern ( ($generated@@183 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ) (! (= (type ($generated@@611 $generated@@612)) $generated@@72)
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@72) (= (type $generated@@614) $generated@@72)) (= ($generated@@611 ($generated@@183 $generated@@613 $generated@@614)) $generated@@614))
 :pattern ( ($generated@@183 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@157) (= (type $generated@@616) $generated@@157)) (= ($generated@@190 ($generated@@277 $generated@@615 $generated@@616)) $generated@@615))
 :pattern ( ($generated@@277 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@157) (= (type $generated@@618) $generated@@157)) (= ($generated@@191 ($generated@@277 $generated@@617 $generated@@618)) $generated@@618))
 :pattern ( ($generated@@277 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 Int) ($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@85) (= ($generated@@196 ($generated@@83 $generated@@619 $generated@@620)) $generated@@65))
 :pattern ( ($generated@@83 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 Int) ($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@85) (= ($generated@@166 ($generated@@83 $generated@@621 $generated@@622)) $generated@@621))
 :pattern ( ($generated@@83 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 Int) ($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@85) (= ($generated@@169 ($generated@@83 $generated@@623 $generated@@624)) $generated@@624))
 :pattern ( ($generated@@83 $generated@@623 $generated@@624))
)))
(assert  (and (forall (($generated@@627 T@U) ) (! (= (type ($generated@@625 $generated@@627)) $generated@@72)
 :pattern ( ($generated@@625 $generated@@627))
)) (forall (($generated@@628 T@U) ($generated@@629 Int) ) (! (let (($generated@@630 ($generated@@359 (type $generated@@628))))
(= (type ($generated@@626 $generated@@628 $generated@@629)) $generated@@630))
 :pattern ( ($generated@@626 $generated@@628 $generated@@629))
))))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@631) ($generated@@358 $generated@@157)) (= (type $generated@@632) $generated@@72)) (= (type $generated@@633) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@631 ($generated@@625 $generated@@632) $generated@@633) (forall (($generated@@634 Int) ) (!  (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@357 $generated@@631))) ($generated@@331 ($generated@@626 $generated@@631 $generated@@634) $generated@@632 $generated@@633))
 :pattern ( ($generated@@626 $generated@@631 $generated@@634))
))))
 :pattern ( ($generated@@82 $generated@@631 ($generated@@625 $generated@@632) $generated@@633))
)))
(assert (forall (($generated@@636 Int) ) (! (= ($generated@@635 ($generated@@152 $generated@@636)) $generated@@636)
 :pattern ( ($generated@@152 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ) (! (= (type ($generated@@637 $generated@@638)) $generated@@72)
 :pattern ( ($generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@72) (= ($generated@@637 ($generated@@298 $generated@@639)) $generated@@639))
 :pattern ( ($generated@@298 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@72) (= ($generated@@80 ($generated@@298 $generated@@640)) $generated@@54))
 :pattern ( ($generated@@298 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ) (! (= (type ($generated@@641 $generated@@642)) $generated@@72)
 :pattern ( ($generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@72) (= ($generated@@641 ($generated@@303 $generated@@643)) $generated@@643))
 :pattern ( ($generated@@303 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@72) (= ($generated@@80 ($generated@@303 $generated@@644)) $generated@@55))
 :pattern ( ($generated@@303 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ) (! (= (type ($generated@@645 $generated@@646)) $generated@@72)
 :pattern ( ($generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@72) (= ($generated@@645 ($generated@@200 $generated@@647)) $generated@@647))
 :pattern ( ($generated@@200 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@72) (= ($generated@@80 ($generated@@200 $generated@@648)) $generated@@56))
 :pattern ( ($generated@@200 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ) (! (= (type ($generated@@649 $generated@@650)) $generated@@72)
 :pattern ( ($generated@@649 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@72) (= ($generated@@649 ($generated@@625 $generated@@651)) $generated@@651))
 :pattern ( ($generated@@625 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@72) (= ($generated@@80 ($generated@@625 $generated@@652)) $generated@@57))
 :pattern ( ($generated@@625 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@85) (= ($generated@@196 ($generated@@366 $generated@@653)) $generated@@68))
 :pattern ( ($generated@@366 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@85) (= ($generated@@441 ($generated@@366 $generated@@654)) $generated@@654))
 :pattern ( ($generated@@366 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 (type $generated@@655)))
(= ($generated@@431 $generated@@656 ($generated@@377 $generated@@655)) $generated@@655))
 :pattern ( ($generated@@377 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (= (type $generated@@657) ($generated@@390 $generated@@157 $generated@@157)) (= (type $generated@@658) $generated@@72)) (= (type $generated@@659) $generated@@72)) (= ($generated@@162 $generated@@657 ($generated@@514 $generated@@658 $generated@@659)) (forall (($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@157) ($generated@@0 ($generated@@92 ($generated@@388 $generated@@657) $generated@@660))) (and ($generated@@278 ($generated@@92 ($generated@@489 $generated@@657) $generated@@660) $generated@@659) ($generated@@278 $generated@@660 $generated@@658)))
 :pattern ( ($generated@@92 ($generated@@489 $generated@@657) $generated@@660))
 :pattern ( ($generated@@92 ($generated@@388 $generated@@657) $generated@@660))
))))
 :pattern ( ($generated@@162 $generated@@657 ($generated@@514 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@661) ($generated@@408 $generated@@157 $generated@@157)) (= (type $generated@@662) $generated@@72)) (= (type $generated@@663) $generated@@72)) (= ($generated@@162 $generated@@661 ($generated@@522 $generated@@662 $generated@@663)) (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@157) ($generated@@0 ($generated@@92 ($generated@@406 $generated@@661) $generated@@664))) (and ($generated@@278 ($generated@@92 ($generated@@497 $generated@@661) $generated@@664) $generated@@663) ($generated@@278 $generated@@664 $generated@@662)))
 :pattern ( ($generated@@92 ($generated@@497 $generated@@661) $generated@@664))
 :pattern ( ($generated@@92 ($generated@@406 $generated@@661) $generated@@664))
))))
 :pattern ( ($generated@@162 $generated@@661 ($generated@@522 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) $generated@@157) (= (type $generated@@666) $generated@@157)) (and (and (and (=> ($generated@@156 $generated@@665 $generated@@666) (not (= $generated@@665 $generated@@666))) (=> (and ($generated@@424 $generated@@665) (not ($generated@@424 $generated@@666))) ($generated@@156 $generated@@665 $generated@@666))) (=> (and ($generated@@424 $generated@@665) ($generated@@424 $generated@@666)) (= ($generated@@156 $generated@@665 $generated@@666) (< ($generated@@163 $generated@@665) ($generated@@163 $generated@@666))))) (=> (and ($generated@@156 $generated@@665 $generated@@666) ($generated@@424 $generated@@666)) ($generated@@424 $generated@@665))))
 :pattern ( ($generated@@156 $generated@@665 $generated@@666))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@157) (= (type $generated@@670) $generated@@157)) (< ($generated@@667 $generated@@669) ($generated@@668 ($generated@@277 $generated@@669 $generated@@670))))
 :pattern ( ($generated@@277 $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@157) (= (type $generated@@672) $generated@@157)) (< ($generated@@667 $generated@@672) ($generated@@668 ($generated@@277 $generated@@671 $generated@@672))))
 :pattern ( ($generated@@277 $generated@@671 $generated@@672))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@147) (= ($generated@@265 $generated@@673) ($generated@@265 $generated@@344)))
 :pattern ( ($generated@@265 ($generated@@343 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@147) (= ($generated@@269 $generated@@674) ($generated@@269 $generated@@344)))
 :pattern ( ($generated@@269 ($generated@@343 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) $generated@@157) (= (type $generated@@676) $generated@@72)) (= (type $generated@@677) $generated@@72)) ($generated@@278 $generated@@675 ($generated@@514 $generated@@676 $generated@@677))) (and (= ($generated@@377 ($generated@@431 ($generated@@390 $generated@@157 $generated@@157) $generated@@675)) $generated@@675) ($generated@@162 ($generated@@431 ($generated@@390 $generated@@157 $generated@@157) $generated@@675) ($generated@@514 $generated@@676 $generated@@677))))
 :pattern ( ($generated@@278 $generated@@675 ($generated@@514 $generated@@676 $generated@@677)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (and (= (type $generated@@678) $generated@@157) (= (type $generated@@679) $generated@@72)) (= (type $generated@@680) $generated@@72)) ($generated@@278 $generated@@678 ($generated@@522 $generated@@679 $generated@@680))) (and (= ($generated@@377 ($generated@@431 ($generated@@408 $generated@@157 $generated@@157) $generated@@678)) $generated@@678) ($generated@@162 ($generated@@431 ($generated@@408 $generated@@157 $generated@@157) $generated@@678) ($generated@@522 $generated@@679 $generated@@680))))
 :pattern ( ($generated@@278 $generated@@678 ($generated@@522 $generated@@679 $generated@@680)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (and (and (= (type $generated@@681) $generated@@72) (= (type $generated@@682) $generated@@72)) (= (type $generated@@683) $generated@@157)) ($generated@@278 $generated@@683 ($generated@@183 $generated@@681 $generated@@682))) (and (= ($generated@@377 ($generated@@431 $generated@@85 $generated@@683)) $generated@@683) ($generated@@162 ($generated@@431 $generated@@85 $generated@@683) ($generated@@183 $generated@@681 $generated@@682))))
 :pattern ( ($generated@@278 $generated@@683 ($generated@@183 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@85) (< ($generated@@668 $generated@@684) ($generated@@668 ($generated@@366 $generated@@684))))
 :pattern ( ($generated@@366 $generated@@684))
)))
(assert (forall (($generated@@685 T@U) ) (! (let (($generated@@686 (type $generated@@685)))
 (not ($generated@@0 ($generated@@92 ($generated@@536 $generated@@686) $generated@@685))))
 :pattern ( (let (($generated@@686 (type $generated@@685)))
($generated@@92 ($generated@@536 $generated@@686) $generated@@685)))
)))
(assert (forall (($generated@@688 T@U) ) (! (= (type ($generated@@687 $generated@@688)) $generated@@77)
 :pattern ( ($generated@@687 $generated@@688))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) $generated@@72) (= (type $generated@@690) $generated@@72)) (and (= ($generated@@80 ($generated@@183 $generated@@689 $generated@@690)) $generated@@62) (= ($generated@@687 ($generated@@183 $generated@@689 $generated@@690)) $generated@@69)))
 :pattern ( ($generated@@183 $generated@@689 $generated@@690))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@691) $generated@@85) (= (type $generated@@692) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@692) (and ($generated@@165 $generated@@691) ($generated@@82 $generated@@691 $generated@@84 $generated@@692)))) ($generated@@82 ($generated@@8 ($generated@@166 $generated@@691)) $generated@@46 $generated@@692))
 :pattern ( ($generated@@82 ($generated@@8 ($generated@@166 $generated@@691)) $generated@@46 $generated@@692))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@85) (= ($generated@@667 ($generated@@377 $generated@@693)) ($generated@@668 $generated@@693)))
 :pattern ( ($generated@@667 ($generated@@377 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@147) (= ($generated@@265 ($generated@@146 $generated@@694)) ($generated@@265 $generated@@694)))
 :pattern ( ($generated@@265 ($generated@@146 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@147) (= ($generated@@269 ($generated@@146 $generated@@695)) ($generated@@269 $generated@@695)))
 :pattern ( ($generated@@269 ($generated@@146 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@696) $generated@@157) ($generated@@278 $generated@@696 ($generated@@152 0))) (and (= ($generated@@377 ($generated@@431 $generated@@2 $generated@@696)) $generated@@696) ($generated@@162 ($generated@@431 ($generated@@86 $generated@@157 $generated@@4) $generated@@696) ($generated@@152 0))))
 :pattern ( ($generated@@278 $generated@@696 ($generated@@152 0)))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (= (type $generated@@697) $generated@@157) (= (type $generated@@698) $generated@@72)) ($generated@@278 $generated@@697 ($generated@@298 $generated@@698))) (and (= ($generated@@377 ($generated@@431 ($generated@@86 $generated@@157 $generated@@4) $generated@@697)) $generated@@697) ($generated@@162 ($generated@@431 ($generated@@86 $generated@@157 $generated@@4) $generated@@697) ($generated@@298 $generated@@698))))
 :pattern ( ($generated@@278 $generated@@697 ($generated@@298 $generated@@698)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (= (type $generated@@699) $generated@@157) (= (type $generated@@700) $generated@@72)) ($generated@@278 $generated@@699 ($generated@@303 $generated@@700))) (and (= ($generated@@377 ($generated@@431 ($generated@@86 $generated@@157 $generated@@4) $generated@@699)) $generated@@699) ($generated@@162 ($generated@@431 ($generated@@86 $generated@@157 $generated@@4) $generated@@699) ($generated@@303 $generated@@700))))
 :pattern ( ($generated@@278 $generated@@699 ($generated@@303 $generated@@700)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (= (type $generated@@701) $generated@@157) (= (type $generated@@702) $generated@@72)) ($generated@@278 $generated@@701 ($generated@@200 $generated@@702))) (and (= ($generated@@377 ($generated@@431 ($generated@@86 $generated@@157 $generated@@2) $generated@@701)) $generated@@701) ($generated@@162 ($generated@@431 ($generated@@86 $generated@@157 $generated@@2) $generated@@701) ($generated@@200 $generated@@702))))
 :pattern ( ($generated@@278 $generated@@701 ($generated@@200 $generated@@702)))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (and (= (type $generated@@703) $generated@@157) (= (type $generated@@704) $generated@@72)) ($generated@@278 $generated@@703 ($generated@@625 $generated@@704))) (and (= ($generated@@377 ($generated@@431 ($generated@@358 $generated@@157) $generated@@703)) $generated@@703) ($generated@@162 ($generated@@431 ($generated@@358 $generated@@157) $generated@@703) ($generated@@625 $generated@@704))))
 :pattern ( ($generated@@278 $generated@@703 ($generated@@625 $generated@@704)))
)))
(assert (forall (($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@705) $generated@@157) ($generated@@424 $generated@@705)) (= $generated@@705 ($generated@@168 ($generated@@163 $generated@@705))))
 :pattern ( ($generated@@163 $generated@@705))
 :pattern ( ($generated@@424 $generated@@705))
)))
(assert (= ($generated@@80 $generated@@84) $generated@@64))
(assert (= ($generated@@687 $generated@@84) $generated@@70))
(assert (= ($generated@@80 $generated@@285) $generated@@67))
(assert (= ($generated@@687 $generated@@285) $generated@@71))
(assert  (=> (<= 2 $generated@@264) (forall (($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@706) $generated@@147) (= (type $generated@@707) $generated@@157)) (= (type $generated@@708) $generated@@85)) (= (type $generated@@709) $generated@@85)) (or ($generated@@318 ($generated@@310 $generated@@707) ($generated@@310 $generated@@708) ($generated@@310 $generated@@709)) (and (not (= 2 $generated@@264)) (and ($generated@@162 $generated@@708 $generated@@84) ($generated@@162 $generated@@709 $generated@@84))))) (and (and (=> (< 0 ($generated@@163 $generated@@707)) (=> (not ($generated@@164 $generated@@708)) (let (($generated@@710 ($generated@@169 $generated@@708)))
(let (($generated@@711 ($generated@@166 $generated@@708)))
 (=> ($generated@@165 $generated@@709) (=> (<= $generated@@711 ($generated@@166 $generated@@709)) ($generated@@318 ($generated@@167 $generated@@707 ($generated@@168 1)) $generated@@710 ($generated@@169 $generated@@709)))))))) (=> (=> (< 0 ($generated@@163 $generated@@707)) (ite ($generated@@164 $generated@@708) true (let (($generated@@712 ($generated@@169 $generated@@708)))
(let (($generated@@713 ($generated@@166 $generated@@708)))
 (and (and ($generated@@165 $generated@@709) (<= $generated@@713 ($generated@@166 $generated@@709))) ($generated@@317 ($generated@@146 $generated@@706) ($generated@@167 $generated@@707 ($generated@@168 1)) $generated@@712 ($generated@@169 $generated@@709))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@707)) (forall (($generated@@714 T@U) ) (!  (=> (and (= (type $generated@@714) $generated@@157) ($generated@@156 $generated@@714 $generated@@707)) ($generated@@318 $generated@@714 $generated@@708 $generated@@709))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@706) $generated@@714 $generated@@708 $generated@@709))
))))) (= ($generated@@317 ($generated@@146 $generated@@706) ($generated@@310 $generated@@707) ($generated@@310 $generated@@708) ($generated@@310 $generated@@709))  (and (=> (< 0 ($generated@@163 $generated@@707)) (ite ($generated@@164 $generated@@708) true (let (($generated@@715 ($generated@@169 $generated@@708)))
(let (($generated@@716 ($generated@@166 $generated@@708)))
 (and (and ($generated@@165 $generated@@709) (<= $generated@@716 ($generated@@166 $generated@@709))) ($generated@@317 ($generated@@146 $generated@@706) ($generated@@167 $generated@@707 ($generated@@168 1)) $generated@@715 ($generated@@169 $generated@@709))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@707)) (forall (($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@717) $generated@@157) ($generated@@156 $generated@@717 $generated@@707)) ($generated@@317 ($generated@@146 $generated@@706) $generated@@717 $generated@@708 $generated@@709))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@706) $generated@@717 $generated@@708 $generated@@709))
)))))))
 :weight 3
 :pattern ( ($generated@@317 ($generated@@146 $generated@@706) ($generated@@310 $generated@@707) ($generated@@310 $generated@@708) ($generated@@310 $generated@@709)))
))))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (= (type $generated@@718) ($generated@@86 $generated@@157 $generated@@2)) (= (type $generated@@719) $generated@@72)) (= (type $generated@@720) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@82 $generated@@718 ($generated@@200 $generated@@719) $generated@@720) (forall (($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@721) $generated@@157) (< 0 ($generated ($generated@@92 $generated@@718 $generated@@721)))) ($generated@@331 $generated@@721 $generated@@719 $generated@@720))
 :pattern ( ($generated@@92 $generated@@718 $generated@@721))
))))
 :pattern ( ($generated@@82 $generated@@718 ($generated@@200 $generated@@719) $generated@@720))
)))
(assert  (=> (<= 2 $generated@@264) (forall (($generated@@722 T@U) ($generated@@723 T@U) ($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@722) $generated@@147) (= (type $generated@@723) $generated@@85)) (= (type $generated@@724) $generated@@85)) (= (type $generated@@725) $generated@@157)) (and (and ($generated@@162 $generated@@723 $generated@@84) ($generated@@162 $generated@@724 $generated@@84)) (= $generated@@725 ($generated@@168 0)))) ($generated@@317 $generated@@722 $generated@@725 $generated@@723 $generated@@724))
 :pattern ( ($generated@@317 $generated@@722 $generated@@725 $generated@@723 $generated@@724))
))))
(assert (= $generated@@199 ($generated@@310 $generated@@199)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (= (type $generated@@726) $generated@@157) (= (type $generated@@727) $generated@@157)) (and ($generated@@424 $generated@@727) (<= ($generated@@163 $generated@@727) ($generated@@163 $generated@@726)))) (or (and (= $generated@@727 ($generated@@168 0)) (= ($generated@@167 $generated@@726 $generated@@727) $generated@@726)) (and (not (= $generated@@727 ($generated@@168 0))) ($generated@@156 ($generated@@167 $generated@@726 $generated@@727) $generated@@726))))
 :pattern ( ($generated@@167 $generated@@726 $generated@@727))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (and (and (= (type $generated@@728) $generated@@85) (= (type $generated@@729) $generated@@72)) (= (type $generated@@730) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@730) (and ($generated@@182 $generated@@728) (exists (($generated@@731 T@U) ) (!  (and (= (type $generated@@731) $generated@@72) ($generated@@82 $generated@@728 ($generated@@183 $generated@@729 $generated@@731) $generated@@730))
 :pattern ( ($generated@@82 $generated@@728 ($generated@@183 $generated@@729 $generated@@731) $generated@@730))
))))) ($generated@@331 ($generated@@190 $generated@@728) $generated@@729 $generated@@730))
 :pattern ( ($generated@@331 ($generated@@190 $generated@@728) $generated@@729 $generated@@730))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (and (and (= (type $generated@@732) $generated@@85) (= (type $generated@@733) $generated@@72)) (= (type $generated@@734) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@734) (and ($generated@@182 $generated@@732) (exists (($generated@@735 T@U) ) (!  (and (= (type $generated@@735) $generated@@72) ($generated@@82 $generated@@732 ($generated@@183 $generated@@735 $generated@@733) $generated@@734))
 :pattern ( ($generated@@82 $generated@@732 ($generated@@183 $generated@@735 $generated@@733) $generated@@734))
))))) ($generated@@331 ($generated@@191 $generated@@732) $generated@@733 $generated@@734))
 :pattern ( ($generated@@331 ($generated@@191 $generated@@732) $generated@@733 $generated@@734))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (and (= (type $generated@@736) $generated@@85) (= (type $generated@@737) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@737) (and ($generated@@165 $generated@@736) ($generated@@82 $generated@@736 $generated@@84 $generated@@737)))) ($generated@@82 ($generated@@169 $generated@@736) $generated@@84 $generated@@737))
 :pattern ( ($generated@@82 ($generated@@169 $generated@@736) $generated@@84 $generated@@737))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (and (= (type $generated@@738) $generated@@85) (= (type $generated@@739) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@89 $generated@@739) (and ($generated@@341 $generated@@738) ($generated@@82 $generated@@738 $generated@@285 $generated@@739)))) ($generated@@82 ($generated@@441 $generated@@738) $generated@@285 $generated@@739))
 :pattern ( ($generated@@82 ($generated@@441 $generated@@738) $generated@@285 $generated@@739))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (= (type $generated@@740) $generated@@157) (= (type $generated@@741) $generated@@157)) (= ($generated@@277 ($generated@@310 $generated@@740) ($generated@@310 $generated@@741)) ($generated@@310 ($generated@@277 $generated@@740 $generated@@741))))
 :pattern ( ($generated@@277 ($generated@@310 $generated@@740) ($generated@@310 $generated@@741)))
)))
(assert (forall (($generated@@742 Int) ) (! (= ($generated@@377 ($generated@@8 ($generated@@308 $generated@@742))) ($generated@@310 ($generated@@377 ($generated@@8 $generated@@742))))
 :pattern ( ($generated@@377 ($generated@@8 ($generated@@308 $generated@@742))))
)))
(assert (forall (($generated@@743 T@U) ) (!  (=> (= (type $generated@@743) $generated@@85) (= ($generated@@366 ($generated@@310 $generated@@743)) ($generated@@310 ($generated@@366 $generated@@743))))
 :pattern ( ($generated@@366 ($generated@@310 $generated@@743)))
)))
(assert (forall (($generated@@744 T@U) ) (! (= ($generated@@377 ($generated@@310 $generated@@744)) ($generated@@310 ($generated@@377 $generated@@744)))
 :pattern ( ($generated@@377 ($generated@@310 $generated@@744)))
)))
(assert (forall (($generated@@745 Int) ($generated@@746 T@U) ) (!  (=> (= (type $generated@@746) $generated@@85) (= ($generated@@162 ($generated@@83 $generated@@745 $generated@@746) $generated@@84)  (and ($generated@@162 ($generated@@8 $generated@@745) $generated@@46) ($generated@@162 $generated@@746 $generated@@84))))
 :pattern ( ($generated@@162 ($generated@@83 $generated@@745 $generated@@746) $generated@@84))
)))
(assert (forall (($generated@@747 T@U) ) (! (let (($generated@@748 ($generated@@359 (type $generated@@747))))
 (=> (and (= (type $generated@@747) ($generated@@358 $generated@@748)) (= ($generated@@357 $generated@@747) 0)) (= $generated@@747 ($generated@@356 $generated@@748))))
 :pattern ( ($generated@@357 $generated@@747))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ($generated@@751 T@U) ) (! (let (($generated@@752 (type $generated@@750)))
 (=> (and (and (= (type $generated@@749) ($generated@@86 $generated@@752 $generated@@2)) (= (type $generated@@751) $generated@@2)) (<= 0 ($generated $generated@@751))) (= ($generated@@382 ($generated@@93 $generated@@749 $generated@@750 $generated@@751)) (+ (- ($generated@@382 $generated@@749) ($generated ($generated@@92 $generated@@749 $generated@@750))) ($generated $generated@@751)))))
 :pattern ( ($generated@@382 ($generated@@93 $generated@@749 $generated@@750 $generated@@751)))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ) (!  (=> (and (= (type $generated@@753) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@754) $generated@@2)) ($generated@@82 $generated@@754 $generated@@46 $generated@@753))
 :pattern ( ($generated@@82 $generated@@754 $generated@@46 $generated@@753))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 T@U) ) (!  (=> (and (= (type $generated@@755) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@756) $generated@@3)) ($generated@@82 $generated@@756 $generated@@47 $generated@@755))
 :pattern ( ($generated@@82 $generated@@756 $generated@@47 $generated@@755))
)))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (= (type $generated@@757) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@758) $generated@@4)) ($generated@@82 $generated@@758 $generated@@44 $generated@@757))
 :pattern ( ($generated@@82 $generated@@758 $generated@@44 $generated@@757))
)))
(assert (forall (($generated@@759 T@U) ($generated@@760 T@U) ) (!  (=> (and (= (type $generated@@759) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@760) $generated@@560)) ($generated@@82 $generated@@760 $generated@@45 $generated@@759))
 :pattern ( ($generated@@82 $generated@@760 $generated@@45 $generated@@759))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (= (type $generated@@761) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@762) $generated@@157)) ($generated@@82 $generated@@762 $generated@@48 $generated@@761))
 :pattern ( ($generated@@82 $generated@@762 $generated@@48 $generated@@761))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ) (!  (=> (and (= (type $generated@@763) ($generated@@358 $generated@@157)) (= (type $generated@@764) $generated@@72)) (= ($generated@@162 $generated@@763 ($generated@@625 $generated@@764)) (forall (($generated@@765 Int) ) (!  (=> (and (<= 0 $generated@@765) (< $generated@@765 ($generated@@357 $generated@@763))) ($generated@@278 ($generated@@626 $generated@@763 $generated@@765) $generated@@764))
 :pattern ( ($generated@@626 $generated@@763 $generated@@765))
))))
 :pattern ( ($generated@@162 $generated@@763 ($generated@@625 $generated@@764)))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 Int) ) (!  (=> (= (type $generated@@767) ($generated@@358 $generated@@157)) (=> (and (<= 0 $generated@@768) (< $generated@@768 ($generated@@357 $generated@@767))) (< ($generated@@668 ($generated@@431 $generated@@85 ($generated@@626 $generated@@767 $generated@@768))) ($generated@@766 $generated@@767))))
 :pattern ( ($generated@@668 ($generated@@431 $generated@@85 ($generated@@626 $generated@@767 $generated@@768))))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ($generated@@771 T@U) ($generated@@772 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@769) $generated@@157) (= (type $generated@@770) $generated@@147)) (= (type $generated@@771) $generated@@85)) (= (type $generated@@772) $generated@@85)) (= $generated@@771 $generated@@772)) ($generated@@161 $generated@@769 ($generated@@146 $generated@@770) $generated@@771 $generated@@772))
 :pattern ( ($generated@@161 $generated@@769 ($generated@@146 $generated@@770) $generated@@771 $generated@@772))
)))
(assert (forall (($generated@@773 T@U) ($generated@@774 T@U) ($generated@@775 T@U) ) (!  (=> (and (and (and (= (type $generated@@773) ($generated@@390 $generated@@157 $generated@@157)) (= (type $generated@@774) $generated@@72)) (= (type $generated@@775) $generated@@72)) ($generated@@162 $generated@@773 ($generated@@514 $generated@@774 $generated@@775))) (and (and ($generated@@162 ($generated@@388 $generated@@773) ($generated@@298 $generated@@774)) ($generated@@162 ($generated@@449 $generated@@773) ($generated@@298 $generated@@775))) ($generated@@162 ($generated@@488 $generated@@773) ($generated@@298 ($generated@@183 $generated@@774 $generated@@775)))))
 :pattern ( ($generated@@162 $generated@@773 ($generated@@514 $generated@@774 $generated@@775)))
)))
(assert (forall (($generated@@776 T@U) ($generated@@777 T@U) ($generated@@778 T@U) ) (!  (=> (and (and (and (= (type $generated@@776) ($generated@@408 $generated@@157 $generated@@157)) (= (type $generated@@777) $generated@@72)) (= (type $generated@@778) $generated@@72)) ($generated@@162 $generated@@776 ($generated@@522 $generated@@777 $generated@@778))) (and (and ($generated@@162 ($generated@@406 $generated@@776) ($generated@@303 $generated@@777)) ($generated@@162 ($generated@@460 $generated@@776) ($generated@@303 $generated@@778))) ($generated@@162 ($generated@@496 $generated@@776) ($generated@@303 ($generated@@183 $generated@@777 $generated@@778)))))
 :pattern ( ($generated@@162 $generated@@776 ($generated@@522 $generated@@777 $generated@@778)))
)))
(assert (forall (($generated@@779 T@U) ) (!  (=> (= (type $generated@@779) $generated@@2) ($generated@@162 $generated@@779 $generated@@46))
 :pattern ( ($generated@@162 $generated@@779 $generated@@46))
)))
(assert (forall (($generated@@780 T@U) ) (!  (=> (= (type $generated@@780) $generated@@3) ($generated@@162 $generated@@780 $generated@@47))
 :pattern ( ($generated@@162 $generated@@780 $generated@@47))
)))
(assert (forall (($generated@@781 T@U) ) (!  (=> (= (type $generated@@781) $generated@@4) ($generated@@162 $generated@@781 $generated@@44))
 :pattern ( ($generated@@162 $generated@@781 $generated@@44))
)))
(assert (forall (($generated@@782 T@U) ) (!  (=> (= (type $generated@@782) $generated@@560) ($generated@@162 $generated@@782 $generated@@45))
 :pattern ( ($generated@@162 $generated@@782 $generated@@45))
)))
(assert (forall (($generated@@783 T@U) ) (!  (=> (= (type $generated@@783) $generated@@157) ($generated@@162 $generated@@783 $generated@@48))
 :pattern ( ($generated@@162 $generated@@783 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@784 () T@U)
(declare-fun $generated@@785 () T@U)
(declare-fun $generated@@786 () T@U)
(declare-fun $generated@@787 () T@U)
(declare-fun $generated@@788 (T@U) Bool)
(declare-fun $generated@@789 () T@U)
(declare-fun $generated@@790 () T@U)
(declare-fun $generated@@791 () T@U)
(declare-fun $generated@@792 () T@U)
(declare-fun $generated@@793 () T@U)
(declare-fun $generated@@794 () T@U)
(declare-fun $generated@@795 () T@U)
(declare-fun $generated@@796 () T@U)
(declare-fun $generated@@797 () T@U)
(declare-fun $generated@@798 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@784) $generated@@157) (= (type $generated@@796) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@791) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@785) $generated@@157)) (= (type $generated@@786) $generated@@85)) (= (type $generated@@787) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@789) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@795) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@790) $generated@@85)) (= (type $generated@@792) $generated@@85)) (= (type $generated@@793) $generated@@85)) (= (type $generated@@794) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@797) ($generated@@210 $generated@@87 $generated@@4))) (= (type $generated@@798) $generated@@87)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@799 true))
(let (($generated@@800  (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (< 0 ($generated@@163 $generated@@784)) (=> ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))))))) ($generated@@0 ($generated@@310 ($generated@@11 true)))))))) (=> (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (< 0 ($generated@@163 $generated@@784)) (=> ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))))))) ($generated@@0 ($generated@@310 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (< 0 ($generated@@163 $generated@@784)) (=> (not ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))) ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@165 ($generated@@310 ($generated@@269 ($generated@@146 ($generated@@146 $generated@@344))))))))))))) (=> (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (< 0 ($generated@@163 $generated@@784)) (=> (not ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))) ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@165 ($generated@@310 ($generated@@269 ($generated@@146 ($generated@@146 $generated@@344)))))))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (< 0 ($generated@@163 $generated@@784)) (=> (not ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))) (let (($generated@@801 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@265 ($generated@@146 ($generated@@146 $generated@@344))))))))
(<= $generated@@801 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@269 ($generated@@146 ($generated@@146 $generated@@344))))))))))))) (=> (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (< 0 ($generated@@163 $generated@@784)) (=> (not ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))) (let (($generated@@802 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@265 ($generated@@146 ($generated@@146 $generated@@344))))))))
(<= $generated@@802 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@269 ($generated@@146 ($generated@@146 $generated@@344)))))))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (< 0 ($generated@@163 $generated@@784)) (=> (not ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))) (let (($generated@@803 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@265 ($generated@@146 ($generated@@146 $generated@@344))))))))
($generated@@317 ($generated@@146 ($generated@@146 $generated@@344)) ($generated@@167 $generated@@784 ($generated@@168 1)) $generated@@803 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@269 ($generated@@146 ($generated@@146 $generated@@344))))))))))))) (=> (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (< 0 ($generated@@163 $generated@@784)) (=> (not ($generated@@0 ($generated@@310 ($generated@@11 ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))) (let (($generated@@804 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@265 ($generated@@146 ($generated@@146 $generated@@344))))))))
($generated@@317 ($generated@@146 ($generated@@146 $generated@@344)) ($generated@@167 $generated@@784 ($generated@@168 1)) $generated@@804 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@269 ($generated@@146 ($generated@@146 $generated@@344)))))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (or ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@784)) (forall (($generated@@805 T@U) ) (!  (=> (and (= (type $generated@@805) $generated@@157) ($generated@@156 $generated@@805 $generated@@784)) ($generated@@317 ($generated@@146 ($generated@@146 $generated@@344)) $generated@@805 ($generated@@310 ($generated@@265 ($generated@@146 ($generated@@146 $generated@@344)))) ($generated@@310 ($generated@@269 ($generated@@146 ($generated@@146 $generated@@344))))))
 :pattern ( ($generated@@317 ($generated@@146 ($generated@@146 $generated@@344)) $generated@@805 ($generated@@265 ($generated@@146 ($generated@@146 $generated@@344))) ($generated@@269 ($generated@@146 ($generated@@146 $generated@@344)))))
))))))))))))))))
(let (($generated@@806  (and (=> (= (ControlFlow 0 9) (- 0 12)) ($generated@@424 ($generated@@310 ($generated@@168 1)))) (=> ($generated@@424 ($generated@@310 ($generated@@168 1))) (and (=> (= (ControlFlow 0 9) (- 0 11)) (<= ($generated@@163 ($generated@@310 ($generated@@168 1))) ($generated@@163 $generated@@784))) (=> (<= ($generated@@163 ($generated@@310 ($generated@@168 1))) ($generated@@163 $generated@@784)) (=> (= $generated@@785 ($generated@@167 $generated@@784 ($generated@@168 1))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or ($generated@@156 $generated@@785 $generated@@784) (and (= $generated@@785 $generated@@784) (< ($generated@@668 $generated@@786) ($generated@@668 $generated@@786))))) (=> (or ($generated@@156 $generated@@785 $generated@@784) (and (= $generated@@785 $generated@@784) (< ($generated@@668 $generated@@786) ($generated@@668 $generated@@786)))) (=> (and ($generated@@89 $generated@@787) ($generated@@788 $generated@@787)) (=> (and (and (and $generated@@266 $generated@@270) ($generated@@318 $generated@@785 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))) (and (and ($generated@@318 $generated@@785 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (and ($generated@@317 ($generated@@146 $generated@@344) $generated@@785 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (and (=> (< 0 ($generated@@163 $generated@@785)) (ite ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))) true (let (($generated@@807 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))
(let (($generated@@808 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))
 (and (and ($generated@@165 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (<= $generated@@808 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))))) ($generated@@317 ($generated@@146 $generated@@344) ($generated@@167 $generated@@785 ($generated@@168 1)) $generated@@807 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@785)) (forall (($generated@@809 T@U) ) (!  (=> (and (= (type $generated@@809) $generated@@157) ($generated@@156 $generated@@809 $generated@@785)) ($generated@@317 ($generated@@146 $generated@@344) $generated@@809 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@344) $generated@@809 ($generated@@265 ($generated@@146 $generated@@344)) ($generated@@269 ($generated@@146 $generated@@344))))
)))))) (and (= $generated@@789 $generated@@787) (= (ControlFlow 0 9) 2)))) $generated@@800)))))))))))
(let (($generated@@810  (=> (= $generated@@786 ($generated@@366 $generated@@790)) (=> (and ($generated@@162 $generated@@790 $generated@@285) ($generated@@82 $generated@@790 $generated@@285 $generated@@791)) (=> (and (and (and ($generated@@162 $generated@@792 $generated@@285) ($generated@@82 $generated@@792 $generated@@285 $generated@@791)) (= $generated@@793 $generated@@790)) (and ($generated@@162 $generated@@793 $generated@@285) (= $generated@@792 $generated@@793))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (or ($generated@@156 $generated@@784 $generated@@784) (and (= $generated@@784 $generated@@784) (< ($generated@@668 $generated@@792) ($generated@@668 $generated@@786))))) (=> (or ($generated@@156 $generated@@784 $generated@@784) (and (= $generated@@784 $generated@@784) (< ($generated@@668 $generated@@792) ($generated@@668 $generated@@786)))) (=> (and ($generated@@89 $generated@@794) ($generated@@788 $generated@@794)) (=> (and (and $generated@@266 $generated@@270) ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))) (=> (and (and (and ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (and ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (and (=> (< 0 ($generated@@163 $generated@@784)) (ite ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))) true (let (($generated@@811 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))
(let (($generated@@812 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))
 (and (and ($generated@@165 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (<= $generated@@812 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))))) ($generated@@317 ($generated@@146 $generated@@344) ($generated@@167 $generated@@784 ($generated@@168 1)) $generated@@811 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@784)) (forall (($generated@@813 T@U) ) (!  (=> (and (= (type $generated@@813) $generated@@157) ($generated@@156 $generated@@813 $generated@@784)) ($generated@@317 ($generated@@146 $generated@@344) $generated@@813 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@344) $generated@@813 ($generated@@265 ($generated@@146 $generated@@344)) ($generated@@269 ($generated@@146 $generated@@344))))
)))))) (= $generated@@791 $generated@@794)) (and (= $generated@@789 $generated@@794) (= (ControlFlow 0 15) 9))) $generated@@806))))))))))
(let (($generated@@814  (=> (not (= $generated@@786 $generated@@199)) (and (=> (= (ControlFlow 0 17) 15) $generated@@810) (=> (= (ControlFlow 0 17) 8) $generated@@799)))))
(let (($generated@@815  (=> (= $generated@@786 $generated@@199) (and (=> (= (ControlFlow 0 13) (- 0 14)) (or ($generated@@156 $generated@@784 $generated@@784) (and (= $generated@@784 $generated@@784) (< ($generated@@668 $generated@@786) ($generated@@668 $generated@@786))))) (=> (or ($generated@@156 $generated@@784 $generated@@784) (and (= $generated@@784 $generated@@784) (< ($generated@@668 $generated@@786) ($generated@@668 $generated@@786)))) (=> (and ($generated@@89 $generated@@795) ($generated@@788 $generated@@795)) (=> (and (and $generated@@266 $generated@@270) ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))) (=> (and (and (and ($generated@@318 $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (and ($generated@@317 ($generated@@146 $generated@@344) $generated@@784 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (and (=> (< 0 ($generated@@163 $generated@@784)) (ite ($generated@@164 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))) true (let (($generated@@816 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))
(let (($generated@@817 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344)))))))
 (and (and ($generated@@165 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))) (<= $generated@@817 ($generated@@308 ($generated@@166 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))))) ($generated@@317 ($generated@@146 $generated@@344) ($generated@@167 $generated@@784 ($generated@@168 1)) $generated@@816 ($generated@@310 ($generated@@169 ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344))))))))))) (=> (= ($generated@@308 0) ($generated@@163 $generated@@784)) (forall (($generated@@818 T@U) ) (!  (=> (and (= (type $generated@@818) $generated@@157) ($generated@@156 $generated@@818 $generated@@784)) ($generated@@317 ($generated@@146 $generated@@344) $generated@@818 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))))
 :pattern ( ($generated@@317 ($generated@@146 $generated@@344) $generated@@818 ($generated@@265 ($generated@@146 $generated@@344)) ($generated@@269 ($generated@@146 $generated@@344))))
)))))) (= $generated@@791 $generated@@795)) (and (= $generated@@789 $generated@@795) (= (ControlFlow 0 13) 9))) $generated@@806))))))))
(let (($generated@@819  (=> (< 0 ($generated@@163 $generated@@784)) (and (=> (= (ControlFlow 0 18) 13) $generated@@815) (=> (= (ControlFlow 0 18) 17) $generated@@814)))))
(let (($generated@@820  (=> (<= ($generated@@163 $generated@@784) 0) (=> (and (and (and ($generated@@89 $generated@@796) ($generated@@788 $generated@@796)) (= $generated@@791 $generated@@796)) (and (forall (($generated@@821 T@U) ($generated@@822 T@U) ) (!  (=> (and (and (= (type $generated@@821) $generated@@157) (= (type $generated@@822) $generated@@85)) (and ($generated@@162 $generated@@822 $generated@@285) ($generated@@156 $generated@@821 $generated@@784))) ($generated@@317 ($generated@@146 $generated@@344) $generated@@821 ($generated@@310 ($generated@@265 ($generated@@146 $generated@@344))) ($generated@@310 ($generated@@269 ($generated@@146 $generated@@344)))))
 :no-pattern (type $generated@@821)
 :no-pattern (type $generated@@822)
 :no-pattern ($generated $generated@@821)
 :no-pattern ($generated@@0 $generated@@821)
 :no-pattern ($generated $generated@@822)
 :no-pattern ($generated@@0 $generated@@822)
)) (= (ControlFlow 0 7) 2))) $generated@@800))))
(let (($generated@@823  (=> (= $generated@@797 ($generated@@209 $generated@@798 $generated@@791 $generated@@60 false)) (and (=> (= (ControlFlow 0 19) 18) $generated@@819) (=> (= (ControlFlow 0 19) 7) $generated@@820)))))
(let (($generated@@824  (=> (and ($generated@@89 $generated@@791) ($generated@@788 $generated@@791)) (=> (and (and (and ($generated@@162 $generated@@786 $generated@@285) ($generated@@82 $generated@@786 $generated@@285 $generated@@791)) ($generated@@474 $generated@@786)) (and (= 3 $generated@@264) (= (ControlFlow 0 20) 19))) $generated@@823))))
$generated@@824)))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 13) (- 14))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@148 (Int) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@157 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Int)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) Int)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 (Int) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@203 (T@U T@U T@U) T@U)
(declare-fun $generated@@204 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@205 (T@T T@T) T@T)
(declare-fun $generated@@206 (T@T) T@T)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@259 () Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 () Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@265 () Bool)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (Int) Int)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@304 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@305 (T@U T@U T@U) Bool)
(declare-fun $generated@@318 (T@U T@U T@U) Bool)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 () T@U)
(declare-fun $generated@@340 (T@T) T@U)
(declare-fun $generated@@341 (T@U) Int)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@361 (T@U) Int)
(declare-fun $generated@@362 (T@T) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@T) T@U)
(declare-fun $generated@@369 (T@T T@T) T@T)
(declare-fun $generated@@370 (T@T) T@T)
(declare-fun $generated@@371 (T@T) T@T)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@T) T@U)
(declare-fun $generated@@387 (T@T T@T) T@T)
(declare-fun $generated@@388 (T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@403 (T@U) Bool)
(declare-fun $generated@@410 (T@T T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@485 (T@U T@U) T@U)
(declare-fun $generated@@493 (T@U T@U) T@U)
(declare-fun $generated@@504 (T@T) T@U)
(declare-fun $generated@@528 () T@T)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@594 (T@U Int) T@U)
(declare-fun $generated@@603 (T@U) Int)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@633 (T@U) Int)
(declare-fun $generated@@634 (T@U) Int)
(declare-fun $generated@@652 (T@U) T@U)
(declare-fun $generated@@728 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert  (and (= ($generated@@1 $generated@@143) 15) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@142 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@142 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@143) (= (type $generated@@146) $generated@@81)) (= (type $generated@@147) $generated@@81)) (= ($generated@@141 ($generated@@142 $generated@@145) $generated@@146 $generated@@147) (= $generated@@146 $generated@@147)))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@145) $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 Int) ) (! (= (type ($generated@@148 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@2) (= (type $generated@@151) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@150 ($generated@@148 0) $generated@@151))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@148 0) $generated@@151))
)))
(assert (= ($generated@@1 $generated@@153) 16))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@153) (= (type $generated@@155) $generated@@153)) (= (type $generated@@156) $generated@@153)) (and ($generated@@152 $generated@@154 $generated@@155) ($generated@@152 $generated@@155 $generated@@156))) ($generated@@152 $generated@@154 $generated@@156))
 :pattern ( ($generated@@152 $generated@@154 $generated@@155) ($generated@@152 $generated@@155 $generated@@156))
 :pattern ( ($generated@@152 $generated@@154 $generated@@155) ($generated@@152 $generated@@154 $generated@@156))
)))
(assert  (and (and (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@163 $generated@@166 $generated@@167)) $generated@@153)
 :pattern ( ($generated@@163 $generated@@166 $generated@@167))
)) (forall (($generated@@168 Int) ) (! (= (type ($generated@@164 $generated@@168)) $generated@@153)
 :pattern ( ($generated@@164 $generated@@168))
))) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@81)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@170) $generated@@153) (= (type $generated@@171) $generated@@143)) (= (type $generated@@172) $generated@@81)) (= (type $generated@@173) $generated@@81)) (and ($generated@@158 $generated@@172 $generated@@80) ($generated@@158 $generated@@173 $generated@@80))) (= ($generated@@157 $generated@@170 ($generated@@142 $generated@@171) $generated@@172 $generated@@173)  (and (=> (< 0 ($generated@@159 $generated@@170)) (or (and ($generated@@160 $generated@@172) ($generated@@160 $generated@@173)) (and (and ($generated@@161 $generated@@172) ($generated@@161 $generated@@173)) (=> (and ($generated@@161 $generated@@172) ($generated@@161 $generated@@173)) (and (= ($generated@@162 $generated@@172) ($generated@@162 $generated@@173)) ($generated@@157 ($generated@@163 $generated@@170 ($generated@@164 1)) $generated@@171 ($generated@@165 $generated@@172) ($generated@@165 $generated@@173))))))) (=> (and (not (= $generated@@170 ($generated@@164 0))) (= ($generated@@159 $generated@@170) 0)) ($generated@@141 $generated@@171 $generated@@172 $generated@@173)))))
 :pattern ( ($generated@@157 $generated@@170 ($generated@@142 $generated@@171) $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@2) ($generated@@158 $generated@@174 ($generated@@148 0)))
 :pattern ( ($generated@@158 $generated@@174 ($generated@@148 0)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 Int) ($generated@@177 Int) ) (!  (=> (= (type $generated@@175) $generated@@153) (=> (and (and (<= 0 $generated@@176) (<= 0 $generated@@177)) (<= (+ $generated@@176 $generated@@177) ($generated@@159 $generated@@175))) (= ($generated@@163 ($generated@@163 $generated@@175 ($generated@@164 $generated@@176)) ($generated@@164 $generated@@177)) ($generated@@163 $generated@@175 ($generated@@164 (+ $generated@@176 $generated@@177))))))
 :pattern ( ($generated@@163 ($generated@@163 $generated@@175 ($generated@@164 $generated@@176)) ($generated@@164 $generated@@177)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@180 $generated@@181)) $generated@@68)
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (and (= (type $generated@@182) $generated@@68) (= (type $generated@@183) $generated@@68)) (= (type $generated@@184) $generated@@81)) ($generated@@158 $generated@@184 ($generated@@179 $generated@@182 $generated@@183))) ($generated@@178 $generated@@184))
 :pattern ( ($generated@@178 $generated@@184) ($generated@@158 $generated@@184 ($generated@@179 $generated@@182 $generated@@183)))
)))
(assert  (and (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@153)
 :pattern ( ($generated@@186 $generated@@188))
)) (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@153)
 :pattern ( ($generated@@187 $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@190) $generated@@81) (= (type $generated@@191) $generated@@81)) true) (= ($generated@@185 $generated@@190 $generated@@191)  (and (= ($generated@@186 $generated@@190) ($generated@@186 $generated@@191)) (= ($generated@@187 $generated@@190) ($generated@@187 $generated@@191)))))
 :pattern ( ($generated@@185 $generated@@190 $generated@@191))
)))
(assert  (and (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@72)
 :pattern ( ($generated@@192 $generated@@194))
)) (= (type $generated@@193) $generated@@81)))
(assert (= ($generated@@192 $generated@@193) $generated@@63))
(assert (forall (($generated@@197 T@U) ) (! (= (type ($generated@@195 $generated@@197)) $generated@@68)
 :pattern ( ($generated@@195 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (= (type $generated@@198) ($generated@@82 $generated@@153 $generated@@2)) (= (type $generated@@199) $generated@@68)) ($generated@@158 $generated@@198 ($generated@@195 $generated@@199))) ($generated@@196 $generated@@198))
 :pattern ( ($generated@@158 $generated@@198 ($generated@@195 $generated@@199)))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (and (and (= (type $generated@@200) $generated@@143) (= (type $generated@@201) $generated@@81)) (= (type $generated@@202) $generated@@81)) (and ($generated@@158 $generated@@201 $generated@@80) ($generated@@158 $generated@@202 $generated@@80))) (= ($generated@@141 ($generated@@142 $generated@@200) $generated@@201 $generated@@202)  (or (and ($generated@@160 $generated@@201) ($generated@@160 $generated@@202)) (and (and ($generated@@161 $generated@@201) ($generated@@161 $generated@@202)) (=> (and ($generated@@161 $generated@@201) ($generated@@161 $generated@@202)) (and (= ($generated@@162 $generated@@201) ($generated@@162 $generated@@202)) ($generated@@141 $generated@@200 ($generated@@165 $generated@@201) ($generated@@165 $generated@@202))))))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@200) $generated@@201 $generated@@202))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@1 ($generated@@205 $generated@@209 $generated@@210)) 17)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@205 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@207 ($generated@@205 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@205 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@207 (type $generated@@215))))
(= (type ($generated@@203 $generated@@215 $generated@@216 $generated@@217)) $generated@@218))
 :pattern ( ($generated@@203 $generated@@215 $generated@@216 $generated@@217))
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 (type $generated@@222)))
(let (($generated@@224 (type $generated@@220)))
(= (type ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@205 $generated@@224 $generated@@223))))
 :pattern ( ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@207 (type $generated@@225))))
 (=> (= (type $generated@@228) $generated@@229) (= ($generated@@203 ($generated@@208 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@226 $generated@@227) $generated@@228)))
 :weight 0
))) (and (and (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@203 ($generated@@208 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@203 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or (= $generated@@239 $generated@@241) (= ($generated@@203 ($generated@@208 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@203 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (or true (= ($generated@@203 ($generated@@208 $generated@@243 $generated@@244 $generated@@245 $generated@@242) $generated@@246 $generated@@247) ($generated@@203 $generated@@243 $generated@@246 $generated@@247)))
 :weight 0
)))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ) (! (= (type ($generated@@204 $generated@@248 $generated@@249 $generated@@250 $generated@@251)) ($generated@@205 $generated@@83 $generated@@4))
 :pattern ( ($generated@@204 $generated@@248 $generated@@249 $generated@@250 $generated@@251))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@71 (type $generated@@257))))
 (=> (and (and (and (and (= (type $generated@@252) $generated@@83) (= (type $generated@@253) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@254) ($generated@@70 $generated@@4))) (= (type $generated@@256) $generated@@83)) (= (type $generated@@257) ($generated@@70 $generated@@258))) (= ($generated@@0 ($generated@@203 ($generated@@204 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))  (=> (and (not (= $generated@@256 $generated@@252)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@253 $generated@@256) $generated@@254))) $generated@@255))))
 :pattern ( ($generated@@203 ($generated@@204 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@260 $generated@@262)) $generated@@81)
 :pattern ( ($generated@@260 $generated@@262))
)))
(assert  (=> (<= 1 $generated@@259) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@143) (or $generated@@261 (not (= 1 $generated@@259)))) ($generated@@158 ($generated@@260 $generated@@263) $generated@@80))
 :pattern ( ($generated@@260 $generated@@263))
))))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@264 $generated@@266)) $generated@@81)
 :pattern ( ($generated@@264 $generated@@266))
)))
(assert  (=> (<= 1 $generated@@259) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@143) (or $generated@@265 (not (= 1 $generated@@259)))) ($generated@@158 ($generated@@264 $generated@@267) $generated@@80))
 :pattern ( ($generated@@264 $generated@@267))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@268) $generated@@143) (= (type $generated@@269) $generated@@81)) (= (type $generated@@270) $generated@@81)) (forall (($generated@@271 Int) ) (!  (=> (<= 0 $generated@@271) ($generated@@157 ($generated@@164 $generated@@271) ($generated@@142 $generated@@268) $generated@@269 $generated@@270))
 :pattern ( ($generated@@157 ($generated@@164 $generated@@271) ($generated@@142 $generated@@268) $generated@@269 $generated@@270))
))) ($generated@@141 ($generated@@142 $generated@@268) $generated@@269 $generated@@270))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@268) $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@274 $generated@@275)) $generated@@81)
 :pattern ( ($generated@@272 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (= (type $generated@@276) $generated@@68) (= (type $generated@@277) $generated@@68)) (= (type $generated@@278) $generated@@153)) (= (type $generated@@279) $generated@@153)) (= ($generated@@158 ($generated@@272 $generated@@278 $generated@@279) ($generated@@179 $generated@@276 $generated@@277))  (and ($generated@@273 $generated@@278 $generated@@276) ($generated@@273 $generated@@279 $generated@@277))))
 :pattern ( ($generated@@158 ($generated@@272 $generated@@278 $generated@@279) ($generated@@179 $generated@@276 $generated@@277)))
)))
(assert ($generated@@158 $generated@@193 $generated@@80))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@280)) ($generated@@78 $generated@@193 $generated@@80 $generated@@280))
 :pattern ( ($generated@@78 $generated@@193 $generated@@80 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@81) (= (type $generated@@282) $generated@@81)) (= ($generated@@185 $generated@@281 $generated@@282) (= $generated@@281 $generated@@282)))
 :pattern ( ($generated@@185 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@153) (= (type $generated@@284) $generated@@143)) (= (type $generated@@285) $generated@@81)) (= (type $generated@@286) $generated@@81)) (= (type $generated@@287) $generated@@153)) (and ($generated@@152 $generated@@283 $generated@@287) ($generated@@157 $generated@@287 ($generated@@142 $generated@@284) $generated@@285 $generated@@286))) ($generated@@157 $generated@@283 ($generated@@142 $generated@@284) $generated@@285 $generated@@286))
 :pattern ( ($generated@@157 $generated@@283 ($generated@@142 $generated@@284) $generated@@285 $generated@@286) ($generated@@157 $generated@@287 ($generated@@142 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@68)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) ($generated@@82 $generated@@153 $generated@@4)) (= (type $generated@@291) $generated@@68)) (= ($generated@@158 $generated@@290 ($generated@@288 $generated@@291)) (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@153) ($generated@@0 ($generated@@88 $generated@@290 $generated@@292))) ($generated@@273 $generated@@292 $generated@@291))
 :pattern ( ($generated@@88 $generated@@290 $generated@@292))
))))
 :pattern ( ($generated@@158 $generated@@290 ($generated@@288 $generated@@291)))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@68)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) ($generated@@82 $generated@@153 $generated@@4)) (= (type $generated@@296) $generated@@68)) (= ($generated@@158 $generated@@295 ($generated@@293 $generated@@296)) (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@153) ($generated@@0 ($generated@@88 $generated@@295 $generated@@297))) ($generated@@273 $generated@@297 $generated@@296))
 :pattern ( ($generated@@88 $generated@@295 $generated@@297))
))))
 :pattern ( ($generated@@158 $generated@@295 ($generated@@293 $generated@@296)))
)))
(assert (forall (($generated@@299 Int) ) (! (= ($generated@@298 $generated@@299) $generated@@299)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 (type $generated@@301)))
(= (type ($generated@@300 $generated@@301)) $generated@@302))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ) (! (= ($generated@@300 $generated@@303) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert  (=> (<= 2 $generated@@259) (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@306) $generated@@143) (= (type $generated@@307) $generated@@153)) (= (type $generated@@308) $generated@@81)) (= (type $generated@@309) $generated@@81)) (or ($generated@@305 ($generated@@300 $generated@@307) $generated@@308 $generated@@309) (and (not (= 2 $generated@@259)) (and ($generated@@158 $generated@@308 $generated@@80) ($generated@@158 $generated@@309 $generated@@80))))) (and (and (=> (< 0 ($generated@@159 $generated@@307)) (=> (not ($generated@@160 $generated@@308)) (let (($generated@@310 ($generated@@165 $generated@@308)))
(let (($generated@@311 ($generated@@162 $generated@@308)))
 (=> ($generated@@161 $generated@@309) (=> (<= $generated@@311 ($generated@@162 $generated@@309)) ($generated@@305 ($generated@@163 $generated@@307 ($generated@@164 1)) $generated@@310 ($generated@@165 $generated@@309)))))))) (=> (=> (< 0 ($generated@@159 $generated@@307)) (ite ($generated@@160 $generated@@308) true (let (($generated@@312 ($generated@@165 $generated@@308)))
(let (($generated@@313 ($generated@@162 $generated@@308)))
 (and (and ($generated@@161 $generated@@309) (<= $generated@@313 ($generated@@162 $generated@@309))) ($generated@@304 ($generated@@142 $generated@@306) ($generated@@163 $generated@@307 ($generated@@164 1)) $generated@@312 ($generated@@165 $generated@@309))))))) (=> (= ($generated@@298 0) ($generated@@159 $generated@@307)) (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@153) ($generated@@152 $generated@@314 $generated@@307)) ($generated@@305 $generated@@314 $generated@@308 $generated@@309))
 :pattern ( ($generated@@304 ($generated@@142 $generated@@306) $generated@@314 $generated@@308 $generated@@309))
))))) (= ($generated@@304 ($generated@@142 $generated@@306) ($generated@@300 $generated@@307) $generated@@308 $generated@@309)  (and (=> (< 0 ($generated@@159 $generated@@307)) (ite ($generated@@160 $generated@@308) true (let (($generated@@315 ($generated@@165 $generated@@308)))
(let (($generated@@316 ($generated@@162 $generated@@308)))
 (and (and ($generated@@161 $generated@@309) (<= $generated@@316 ($generated@@162 $generated@@309))) ($generated@@304 ($generated@@142 $generated@@306) ($generated@@163 $generated@@307 ($generated@@164 1)) $generated@@315 ($generated@@165 $generated@@309))))))) (=> (= ($generated@@298 0) ($generated@@159 $generated@@307)) (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@153) ($generated@@152 $generated@@317 $generated@@307)) ($generated@@304 ($generated@@142 $generated@@306) $generated@@317 $generated@@308 $generated@@309))
 :pattern ( ($generated@@304 ($generated@@142 $generated@@306) $generated@@317 $generated@@308 $generated@@309))
)))))))
 :weight 3
 :pattern ( ($generated@@304 ($generated@@142 $generated@@306) ($generated@@300 $generated@@307) $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@319) $generated@@68) (= (type $generated@@320) $generated@@68)) (= (type $generated@@321) $generated@@153)) (= (type $generated@@322) $generated@@153)) (= (type $generated@@323) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@323)) (= ($generated@@78 ($generated@@272 $generated@@321 $generated@@322) ($generated@@179 $generated@@319 $generated@@320) $generated@@323)  (and ($generated@@318 $generated@@321 $generated@@319 $generated@@323) ($generated@@318 $generated@@322 $generated@@320 $generated@@323))))
 :pattern ( ($generated@@78 ($generated@@272 $generated@@321 $generated@@322) ($generated@@179 $generated@@319 $generated@@320) $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@81) (= ($generated@@178 $generated@@324) (= ($generated@@192 $generated@@324) $generated@@61)))
 :pattern ( ($generated@@178 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@81) (= ($generated@@160 $generated@@325) (= ($generated@@192 $generated@@325) $generated@@63)))
 :pattern ( ($generated@@160 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@81) (= ($generated@@161 $generated@@326) (= ($generated@@192 $generated@@326) $generated@@65)))
 :pattern ( ($generated@@161 $generated@@326))
)))
(assert  (and (forall (($generated@@329 T@U) ) (! (= (type ($generated@@327 $generated@@329)) $generated@@143)
 :pattern ( ($generated@@327 $generated@@329))
)) (= (type $generated@@328) $generated@@143)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (and (= (type $generated@@330) $generated@@143) (= (type $generated@@331) $generated@@153)) (= (type $generated@@332) $generated@@81)) (= (type $generated@@333) $generated@@81)) (= ($generated@@304 $generated@@330 $generated@@331 $generated@@332 $generated@@333) ($generated@@304 $generated@@328 $generated@@331 $generated@@332 $generated@@333)))
 :pattern ( ($generated@@304 ($generated@@327 $generated@@330) $generated@@331 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@81) ($generated@@178 $generated@@334)) (exists (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (and (and (= (type $generated@@335) $generated@@153) (= (type $generated@@336) $generated@@153)) (= $generated@@334 ($generated@@272 $generated@@335 $generated@@336)))
 :no-pattern (type $generated@@335)
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
)))
 :pattern ( ($generated@@178 $generated@@334))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@81) ($generated@@161 $generated@@337)) (exists (($generated@@338 Int) ($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@81) (= $generated@@337 ($generated@@79 $generated@@338 $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
)))
 :pattern ( ($generated@@161 $generated@@337))
)))
(assert  (and (and (forall (($generated@@344 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@344)) 18)) (forall (($generated@@345 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@342 $generated@@345))
))) (forall (($generated@@346 T@T) ) (! (= (type ($generated@@340 $generated@@346)) ($generated@@342 $generated@@346))
 :pattern ( ($generated@@340 $generated@@346))
))))
(assert (forall (($generated@@347 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@347)) 0)
 :pattern ( ($generated@@340 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@81) ($generated@@160 $generated@@348)) (= $generated@@348 $generated@@193))
 :pattern ( ($generated@@160 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@349) $generated@@153) (= (type $generated@@350) $generated@@143)) (= (type $generated@@351) $generated@@81)) (= (type $generated@@352) $generated@@81)) (not (= $generated@@349 ($generated@@164 0)))) (= ($generated@@157 $generated@@349 ($generated@@142 $generated@@350) $generated@@351 $generated@@352) ($generated@@157 $generated@@349 $generated@@350 $generated@@351 $generated@@352)))
 :pattern ( ($generated@@157 $generated@@349 ($generated@@142 $generated@@350) $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) $generated@@143) (= (type $generated@@354) $generated@@81)) (= (type $generated@@355) $generated@@81)) (= ($generated@@141 ($generated@@142 $generated@@353) $generated@@354 $generated@@355) ($generated@@141 $generated@@353 $generated@@354 $generated@@355)))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@353) $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (= (type ($generated@@356 $generated@@357)) $generated@@153)
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@68) (= (type $generated@@360) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@318 ($generated@@356 $generated@@358) $generated@@359 $generated@@360) ($generated@@78 $generated@@358 $generated@@359 $generated@@360)))
 :pattern ( ($generated@@318 ($generated@@356 $generated@@358) $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@363 T@T) ) (! (= (type ($generated@@362 $generated@@363)) ($generated@@82 $generated@@363 $generated@@2))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@86 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@82 $generated@@365 $generated@@2)) (and (= (= ($generated@@361 $generated@@364) 0) (= $generated@@364 ($generated@@362 $generated@@365))) (=> (not (= ($generated@@361 $generated@@364) 0)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (< 0 ($generated ($generated@@88 $generated@@364 $generated@@366))))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert  (and (and (and (and (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (= ($generated@@1 ($generated@@369 $generated@@372 $generated@@373)) 19)) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@370 ($generated@@369 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@369 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= ($generated@@371 ($generated@@369 $generated@@376 $generated@@377)) $generated@@377)
 :pattern ( ($generated@@369 $generated@@376 $generated@@377))
))) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@370 (type $generated@@378))))
(= (type ($generated@@367 $generated@@378)) ($generated@@82 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@378))
))) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= (type ($generated@@368 $generated@@380 $generated@@381)) ($generated@@369 $generated@@380 $generated@@381))
 :pattern ( ($generated@@368 $generated@@380 $generated@@381))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@T) ) (! (let (($generated@@384 (type $generated@@382)))
 (not ($generated@@0 ($generated@@88 ($generated@@367 ($generated@@368 $generated@@384 $generated@@383)) $generated@@382))))
 :pattern ( (let (($generated@@384 (type $generated@@382)))
($generated@@88 ($generated@@367 ($generated@@368 $generated@@384 $generated@@383)) $generated@@382)))
)))
(assert  (and (and (and (and (forall (($generated@@390 T@T) ($generated@@391 T@T) ) (= ($generated@@1 ($generated@@387 $generated@@390 $generated@@391)) 20)) (forall (($generated@@392 T@T) ($generated@@393 T@T) ) (! (= ($generated@@388 ($generated@@387 $generated@@392 $generated@@393)) $generated@@392)
 :pattern ( ($generated@@387 $generated@@392 $generated@@393))
))) (forall (($generated@@394 T@T) ($generated@@395 T@T) ) (! (= ($generated@@389 ($generated@@387 $generated@@394 $generated@@395)) $generated@@395)
 :pattern ( ($generated@@387 $generated@@394 $generated@@395))
))) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@388 (type $generated@@396))))
(= (type ($generated@@385 $generated@@396)) ($generated@@82 $generated@@397 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@396))
))) (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (! (= (type ($generated@@386 $generated@@398 $generated@@399)) ($generated@@387 $generated@@398 $generated@@399))
 :pattern ( ($generated@@386 $generated@@398 $generated@@399))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@T) ) (! (let (($generated@@402 (type $generated@@400)))
 (not ($generated@@0 ($generated@@88 ($generated@@385 ($generated@@386 $generated@@402 $generated@@401)) $generated@@400))))
 :pattern ( (let (($generated@@402 (type $generated@@400)))
($generated@@88 ($generated@@385 ($generated@@386 $generated@@402 $generated@@401)) $generated@@400)))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (= (type $generated@@404) $generated@@153) (= (type $generated@@405) $generated@@153)) (and ($generated@@403 $generated@@405) (<= ($generated@@159 $generated@@405) ($generated@@159 $generated@@404)))) (and (= ($generated@@403 ($generated@@163 $generated@@404 $generated@@405)) ($generated@@403 $generated@@404)) (= ($generated@@159 ($generated@@163 $generated@@404 $generated@@405)) (- ($generated@@159 $generated@@404) ($generated@@159 $generated@@405)))))
 :pattern ( ($generated@@163 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 Int) ) (!  (=> (<= 0 $generated@@406) (and ($generated@@403 ($generated@@164 $generated@@406)) (= ($generated@@159 ($generated@@164 $generated@@406)) $generated@@406)))
 :pattern ( ($generated@@164 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@86 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@82 $generated@@408 $generated@@2)) (= ($generated@@196 $generated@@407) (forall (($generated@@409 T@U) ) (!  (=> (= (type $generated@@409) $generated@@408) (and (<= 0 ($generated ($generated@@88 $generated@@407 $generated@@409))) (<= ($generated ($generated@@88 $generated@@407 $generated@@409)) ($generated@@361 $generated@@407))))
 :pattern ( ($generated@@88 $generated@@407 $generated@@409))
)))))
 :pattern ( ($generated@@196 $generated@@407))
)))
(assert (forall (($generated@@411 T@T) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@411)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@153) ($generated@@273 $generated@@413 $generated@@80)) (and (= ($generated@@356 ($generated@@410 $generated@@81 $generated@@413)) $generated@@413) ($generated@@158 ($generated@@410 $generated@@81 $generated@@413) $generated@@80)))
 :pattern ( ($generated@@273 $generated@@413 $generated@@80))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) $generated@@143) (= (type $generated@@415) $generated@@81)) (= (type $generated@@416) $generated@@81)) (= ($generated@@141 ($generated@@142 $generated@@414) $generated@@415 $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@153) ($generated@@157 $generated@@417 ($generated@@142 $generated@@414) $generated@@415 $generated@@416))
 :pattern ( ($generated@@157 $generated@@417 ($generated@@142 $generated@@414) $generated@@415 $generated@@416))
))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@414) $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@371 (type $generated@@418))))
(let (($generated@@420 ($generated@@370 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@369 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@368 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) ($generated@@0 ($generated@@88 ($generated@@367 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@367 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@371 (type $generated@@423))))
(= (type ($generated@@422 $generated@@423)) ($generated@@82 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@371 (type $generated@@425))))
(let (($generated@@427 ($generated@@370 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@369 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@368 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@426) ($generated@@0 ($generated@@88 ($generated@@422 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@422 $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@389 (type $generated@@429))))
(let (($generated@@431 ($generated@@388 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@387 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@386 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) ($generated@@0 ($generated@@88 ($generated@@385 $generated@@429) $generated@@432)))
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@385 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@389 (type $generated@@434))))
(= (type ($generated@@433 $generated@@434)) ($generated@@82 $generated@@435 $generated@@4)))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@389 (type $generated@@436))))
(let (($generated@@438 ($generated@@388 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@387 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@386 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@437) ($generated@@0 ($generated@@88 ($generated@@433 $generated@@436) $generated@@439)))
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@433 $generated@@436))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@82 $generated@@153 $generated@@2)) (= (type $generated@@441) $generated@@68)) (= ($generated@@158 $generated@@440 ($generated@@195 $generated@@441)) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@153) (< 0 ($generated ($generated@@88 $generated@@440 $generated@@442)))) ($generated@@273 $generated@@442 $generated@@441))
 :pattern ( ($generated@@88 $generated@@440 $generated@@442))
))))
 :pattern ( ($generated@@158 $generated@@440 ($generated@@195 $generated@@441)))
)))
(assert  (=> (<= 2 $generated@@259) (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@443) $generated@@143) (= (type $generated@@444) $generated@@153)) (= (type $generated@@445) $generated@@81)) (= (type $generated@@446) $generated@@81)) (or ($generated@@305 $generated@@444 $generated@@445 $generated@@446) (and (not (= 2 $generated@@259)) (and ($generated@@158 $generated@@445 $generated@@80) ($generated@@158 $generated@@446 $generated@@80))))) true)
 :pattern ( ($generated@@304 $generated@@443 $generated@@444 $generated@@445 $generated@@446))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@153) (= (type $generated@@448) $generated@@153)) (or (or ($generated@@152 $generated@@447 $generated@@448) (= $generated@@447 $generated@@448)) ($generated@@152 $generated@@448 $generated@@447)))
 :pattern ( ($generated@@152 $generated@@447 $generated@@448) ($generated@@152 $generated@@448 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (= (type $generated@@449) ($generated@@82 $generated@@153 $generated@@4)) (= (type $generated@@450) $generated@@68)) (= (type $generated@@451) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@449 ($generated@@288 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@153) ($generated@@0 ($generated@@88 $generated@@449 $generated@@452))) ($generated@@318 $generated@@452 $generated@@450 $generated@@451))
 :pattern ( ($generated@@88 $generated@@449 $generated@@452))
))))
 :pattern ( ($generated@@78 $generated@@449 ($generated@@288 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (= (type $generated@@453) ($generated@@82 $generated@@153 $generated@@4)) (= (type $generated@@454) $generated@@68)) (= (type $generated@@455) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@453 ($generated@@293 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@153) ($generated@@0 ($generated@@88 $generated@@453 $generated@@456))) ($generated@@318 $generated@@456 $generated@@454 $generated@@455))
 :pattern ( ($generated@@88 $generated@@453 $generated@@456))
))))
 :pattern ( ($generated@@78 $generated@@453 ($generated@@293 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
(= ($generated ($generated@@88 ($generated@@362 $generated@@458) $generated@@457)) 0))
 :pattern ( (let (($generated@@458 (type $generated@@457)))
($generated@@88 ($generated@@362 $generated@@458) $generated@@457)))
)))
(assert  (and (forall (($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@461)) ($generated@@82 $generated@@153 $generated@@4))
 :pattern ( ($generated@@459 $generated@@461))
)) (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@371 (type $generated@@462))))
(let (($generated@@464 ($generated@@370 (type $generated@@462))))
(= (type ($generated@@460 $generated@@462)) ($generated@@82 $generated@@464 $generated@@463))))
 :pattern ( ($generated@@460 $generated@@462))
))))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) ($generated@@369 $generated@@153 $generated@@153)) (= (type $generated@@466) $generated@@153)) (= ($generated@@0 ($generated@@88 ($generated@@459 $generated@@465) $generated@@466))  (and ($generated@@0 ($generated@@88 ($generated@@367 $generated@@465) ($generated@@186 ($generated@@410 $generated@@81 $generated@@466)))) (= ($generated@@88 ($generated@@460 $generated@@465) ($generated@@186 ($generated@@410 $generated@@81 $generated@@466))) ($generated@@187 ($generated@@410 $generated@@81 $generated@@466))))))
 :pattern ( ($generated@@88 ($generated@@459 $generated@@465) $generated@@466))
)))
(assert  (and (forall (($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@469)) ($generated@@82 $generated@@153 $generated@@4))
 :pattern ( ($generated@@467 $generated@@469))
)) (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@389 (type $generated@@470))))
(let (($generated@@472 ($generated@@388 (type $generated@@470))))
(= (type ($generated@@468 $generated@@470)) ($generated@@82 $generated@@472 $generated@@471))))
 :pattern ( ($generated@@468 $generated@@470))
))))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) ($generated@@387 $generated@@153 $generated@@153)) (= (type $generated@@474) $generated@@153)) (= ($generated@@0 ($generated@@88 ($generated@@467 $generated@@473) $generated@@474))  (and ($generated@@0 ($generated@@88 ($generated@@385 $generated@@473) ($generated@@186 ($generated@@410 $generated@@81 $generated@@474)))) (= ($generated@@88 ($generated@@468 $generated@@473) ($generated@@186 ($generated@@410 $generated@@81 $generated@@474))) ($generated@@187 ($generated@@410 $generated@@81 $generated@@474))))))
 :pattern ( ($generated@@88 ($generated@@467 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@476)))
(let (($generated@@478 ($generated@@370 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@369 $generated@@478 $generated@@477)) (= ($generated@@0 ($generated@@88 ($generated@@422 $generated@@475) $generated@@476)) (exists (($generated@@479 T@U) ) (!  (and (= (type $generated@@479) $generated@@478) (and ($generated@@0 ($generated@@88 ($generated@@367 $generated@@475) $generated@@479)) (= $generated@@476 ($generated@@88 ($generated@@460 $generated@@475) $generated@@479))))
 :pattern ( ($generated@@88 ($generated@@367 $generated@@475) $generated@@479))
 :pattern ( ($generated@@88 ($generated@@460 $generated@@475) $generated@@479))
))))))
 :pattern ( ($generated@@88 ($generated@@422 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (let (($generated@@482 (type $generated@@481)))
(let (($generated@@483 ($generated@@388 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@387 $generated@@483 $generated@@482)) (= ($generated@@0 ($generated@@88 ($generated@@433 $generated@@480) $generated@@481)) (exists (($generated@@484 T@U) ) (!  (and (= (type $generated@@484) $generated@@483) (and ($generated@@0 ($generated@@88 ($generated@@385 $generated@@480) $generated@@484)) (= $generated@@481 ($generated@@88 ($generated@@468 $generated@@480) $generated@@484))))
 :pattern ( ($generated@@88 ($generated@@385 $generated@@480) $generated@@484))
 :pattern ( ($generated@@88 ($generated@@468 $generated@@480) $generated@@484))
))))))
 :pattern ( ($generated@@88 ($generated@@433 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (and (= (type $generated@@488) ($generated@@369 $generated@@153 $generated@@153)) (= (type $generated@@489) $generated@@68)) (= (type $generated@@490) $generated@@68)) (= (type $generated@@491) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491) (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@153) ($generated@@0 ($generated@@88 ($generated@@367 $generated@@488) $generated@@492))) (and ($generated@@318 ($generated@@88 ($generated@@460 $generated@@488) $generated@@492) $generated@@490 $generated@@491) ($generated@@318 $generated@@492 $generated@@489 $generated@@491)))
 :pattern ( ($generated@@88 ($generated@@460 $generated@@488) $generated@@492))
 :pattern ( ($generated@@88 ($generated@@367 $generated@@488) $generated@@492))
))))
 :pattern ( ($generated@@78 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (and (= (type $generated@@496) ($generated@@387 $generated@@153 $generated@@153)) (= (type $generated@@497) $generated@@68)) (= (type $generated@@498) $generated@@68)) (= (type $generated@@499) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@496 ($generated@@493 $generated@@497 $generated@@498) $generated@@499) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@153) ($generated@@0 ($generated@@88 ($generated@@385 $generated@@496) $generated@@500))) (and ($generated@@318 ($generated@@88 ($generated@@468 $generated@@496) $generated@@500) $generated@@498 $generated@@499) ($generated@@318 $generated@@500 $generated@@497 $generated@@499)))
 :pattern ( ($generated@@88 ($generated@@468 $generated@@496) $generated@@500))
 :pattern ( ($generated@@88 ($generated@@385 $generated@@496) $generated@@500))
))))
 :pattern ( ($generated@@78 $generated@@496 ($generated@@493 $generated@@497 $generated@@498) $generated@@499))
)))
(assert  (=> (<= 1 $generated@@259) (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@143) (or $generated@@261 (not (= 1 $generated@@259)))) (and $generated@@261 (= ($generated@@260 ($generated@@142 $generated@@501)) ($generated@@300 ($generated@@79 ($generated@@298 0) ($generated@@300 ($generated@@260 $generated@@501)))))))
 :pattern ( ($generated@@260 ($generated@@142 $generated@@501)))
))))
(assert  (=> (<= 1 $generated@@259) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@143) (or $generated@@265 (not (= 1 $generated@@259)))) (and $generated@@265 (= ($generated@@264 ($generated@@142 $generated@@502)) ($generated@@300 ($generated@@79 ($generated@@298 1) ($generated@@300 ($generated@@264 $generated@@502)))))))
 :pattern ( ($generated@@264 ($generated@@142 $generated@@502)))
))))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@81) ($generated@@158 $generated@@503 $generated@@80)) (or ($generated@@160 $generated@@503) ($generated@@161 $generated@@503)))
 :pattern ( ($generated@@161 $generated@@503) ($generated@@158 $generated@@503 $generated@@80))
 :pattern ( ($generated@@160 $generated@@503) ($generated@@158 $generated@@503 $generated@@80))
)))
(assert (forall (($generated@@505 T@T) ) (! (= (type ($generated@@504 $generated@@505)) ($generated@@82 $generated@@505 $generated@@4))
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@389 (type $generated@@506))))
(let (($generated@@508 ($generated@@388 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@387 $generated@@508 $generated@@507)) (= (= $generated@@506 ($generated@@386 $generated@@508 $generated@@507)) (= ($generated@@385 $generated@@506) ($generated@@504 $generated@@508))))))
 :pattern ( ($generated@@385 $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@389 (type $generated@@509))))
(let (($generated@@511 ($generated@@388 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@387 $generated@@511 $generated@@510)) (= (= $generated@@509 ($generated@@386 $generated@@511 $generated@@510)) (= ($generated@@433 $generated@@509) ($generated@@504 $generated@@510))))))
 :pattern ( ($generated@@433 $generated@@509))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@389 (type $generated@@512))))
(let (($generated@@514 ($generated@@388 (type $generated@@512))))
 (=> (= (type $generated@@512) ($generated@@387 $generated@@514 $generated@@513)) (= (= $generated@@512 ($generated@@386 $generated@@514 $generated@@513)) (= ($generated@@467 $generated@@512) ($generated@@504 $generated@@153))))))
 :pattern ( ($generated@@467 $generated@@512))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@371 (type $generated@@515))))
(let (($generated@@517 ($generated@@370 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@369 $generated@@517 $generated@@516)) (or (= $generated@@515 ($generated@@368 $generated@@517 $generated@@516)) (exists (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (and (and (= (type $generated@@518) $generated@@153) (= (type $generated@@519) $generated@@153)) ($generated@@0 ($generated@@88 ($generated@@459 $generated@@515) ($generated@@356 ($generated@@272 $generated@@518 $generated@@519)))))
 :no-pattern (type $generated@@518)
 :no-pattern (type $generated@@519)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
 :no-pattern ($generated $generated@@519)
 :no-pattern ($generated@@0 $generated@@519)
))))))
 :pattern ( ($generated@@459 $generated@@515))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@389 (type $generated@@520))))
(let (($generated@@522 ($generated@@388 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@387 $generated@@522 $generated@@521)) (or (= $generated@@520 ($generated@@386 $generated@@522 $generated@@521)) (exists (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (and (and (= (type $generated@@523) $generated@@153) (= (type $generated@@524) $generated@@153)) ($generated@@0 ($generated@@88 ($generated@@467 $generated@@520) ($generated@@356 ($generated@@272 $generated@@523 $generated@@524)))))
 :no-pattern (type $generated@@523)
 :no-pattern (type $generated@@524)
 :no-pattern ($generated $generated@@523)
 :no-pattern ($generated@@0 $generated@@523)
 :no-pattern ($generated $generated@@524)
 :no-pattern ($generated@@0 $generated@@524)
))))))
 :pattern ( ($generated@@467 $generated@@520))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@153) ($generated@@273 $generated@@525 $generated@@46)) (and (= ($generated@@356 ($generated@@410 $generated@@2 $generated@@525)) $generated@@525) ($generated@@158 ($generated@@410 $generated@@2 $generated@@525) $generated@@46)))
 :pattern ( ($generated@@273 $generated@@525 $generated@@46))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@153) ($generated@@273 $generated@@526 $generated@@47)) (and (= ($generated@@356 ($generated@@410 $generated@@3 $generated@@526)) $generated@@526) ($generated@@158 ($generated@@410 $generated@@3 $generated@@526) $generated@@47)))
 :pattern ( ($generated@@273 $generated@@526 $generated@@47))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@153) ($generated@@273 $generated@@527 $generated@@44)) (and (= ($generated@@356 ($generated@@410 $generated@@4 $generated@@527)) $generated@@527) ($generated@@158 ($generated@@410 $generated@@4 $generated@@527) $generated@@44)))
 :pattern ( ($generated@@273 $generated@@527 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@528) 21))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@153) ($generated@@273 $generated@@529 $generated@@45)) (and (= ($generated@@356 ($generated@@410 $generated@@528 $generated@@529)) $generated@@529) ($generated@@158 ($generated@@410 $generated@@528 $generated@@529) $generated@@45)))
 :pattern ( ($generated@@273 $generated@@529 $generated@@45))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@273 ($generated@@356 $generated@@530) $generated@@531) ($generated@@158 $generated@@530 $generated@@531)))
 :pattern ( ($generated@@273 ($generated@@356 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@143) (= (type $generated@@533) $generated@@153)) (= (type $generated@@534) $generated@@81)) (= (type $generated@@535) $generated@@81)) (= ($generated@@304 ($generated@@142 $generated@@532) $generated@@533 $generated@@534 $generated@@535) ($generated@@304 $generated@@532 $generated@@533 $generated@@534 $generated@@535)))
 :pattern ( ($generated@@304 ($generated@@142 $generated@@532) $generated@@533 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@153) (<= 0 ($generated@@159 $generated@@536)))
 :pattern ( ($generated@@159 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 ($generated@@86 (type $generated@@537))))
 (=> (= (type $generated@@537) ($generated@@82 $generated@@538 $generated@@2)) (<= 0 ($generated@@361 $generated@@537))))
 :pattern ( ($generated@@361 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@343 (type $generated@@539))))
 (=> (= (type $generated@@539) ($generated@@342 $generated@@540)) (<= 0 ($generated@@341 $generated@@539))))
 :pattern ( ($generated@@341 $generated@@539))
)))
(assert  (=> (<= 2 $generated@@259) (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@541) $generated@@143) (= (type $generated@@542) $generated@@153)) (= (type $generated@@543) $generated@@81)) (= (type $generated@@544) $generated@@81)) (or ($generated@@305 $generated@@542 $generated@@543 $generated@@544) (and (not (= 2 $generated@@259)) (and ($generated@@158 $generated@@543 $generated@@80) ($generated@@158 $generated@@544 $generated@@80))))) (and (and (=> (< 0 ($generated@@159 $generated@@542)) (=> (not ($generated@@160 $generated@@543)) (let (($generated@@545 ($generated@@165 $generated@@543)))
(let (($generated@@546 ($generated@@162 $generated@@543)))
 (=> ($generated@@161 $generated@@544) (=> (<= $generated@@546 ($generated@@162 $generated@@544)) ($generated@@305 ($generated@@163 $generated@@542 ($generated@@164 1)) $generated@@545 ($generated@@165 $generated@@544)))))))) (=> (=> (< 0 ($generated@@159 $generated@@542)) (ite ($generated@@160 $generated@@543) true (let (($generated@@547 ($generated@@165 $generated@@543)))
(let (($generated@@548 ($generated@@162 $generated@@543)))
 (and (and ($generated@@161 $generated@@544) (<= $generated@@548 ($generated@@162 $generated@@544))) ($generated@@304 $generated@@541 ($generated@@163 $generated@@542 ($generated@@164 1)) $generated@@547 ($generated@@165 $generated@@544))))))) (=> (= ($generated@@298 0) ($generated@@159 $generated@@542)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@153) ($generated@@152 $generated@@549 $generated@@542)) ($generated@@305 $generated@@549 $generated@@543 $generated@@544))
 :pattern ( ($generated@@304 $generated@@541 $generated@@549 $generated@@543 $generated@@544))
))))) (= ($generated@@304 ($generated@@142 $generated@@541) $generated@@542 $generated@@543 $generated@@544)  (and (=> (< 0 ($generated@@159 $generated@@542)) (ite ($generated@@160 $generated@@543) true (let (($generated@@550 ($generated@@165 $generated@@543)))
(let (($generated@@551 ($generated@@162 $generated@@543)))
 (and (and ($generated@@161 $generated@@544) (<= $generated@@551 ($generated@@162 $generated@@544))) ($generated@@304 $generated@@541 ($generated@@163 $generated@@542 ($generated@@164 1)) $generated@@550 ($generated@@165 $generated@@544))))))) (=> (= ($generated@@298 0) ($generated@@159 $generated@@542)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@153) ($generated@@152 $generated@@552 $generated@@542)) ($generated@@304 $generated@@541 $generated@@552 $generated@@543 $generated@@544))
 :pattern ( ($generated@@304 $generated@@541 $generated@@552 $generated@@543 $generated@@544))
)))))))
 :pattern ( ($generated@@304 ($generated@@142 $generated@@541) $generated@@542 $generated@@543 $generated@@544))
))))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@68)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@68) (= (type $generated@@556) $generated@@68)) (= ($generated@@553 ($generated@@485 $generated@@555 $generated@@556)) $generated@@555))
 :pattern ( ($generated@@485 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@68)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@68) (= (type $generated@@560) $generated@@68)) (= ($generated@@557 ($generated@@485 $generated@@559 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@485 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@68) (= (type $generated@@562) $generated@@68)) (= ($generated@@76 ($generated@@485 $generated@@561 $generated@@562)) $generated@@58))
 :pattern ( ($generated@@485 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@68) (= (type $generated@@566) $generated@@68)) (= ($generated@@563 ($generated@@493 $generated@@565 $generated@@566)) $generated@@565))
 :pattern ( ($generated@@493 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@68)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@68) (= (type $generated@@570) $generated@@68)) (= ($generated@@567 ($generated@@493 $generated@@569 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@493 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@68) (= (type $generated@@572) $generated@@68)) (= ($generated@@76 ($generated@@493 $generated@@571 $generated@@572)) $generated@@59))
 :pattern ( ($generated@@493 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@153) (= (type $generated@@574) $generated@@153)) (= ($generated@@192 ($generated@@272 $generated@@573 $generated@@574)) $generated@@61))
 :pattern ( ($generated@@272 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@68)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@68) (= (type $generated@@578) $generated@@68)) (= ($generated@@575 ($generated@@179 $generated@@577 $generated@@578)) $generated@@577))
 :pattern ( ($generated@@179 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@68)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@68) (= (type $generated@@582) $generated@@68)) (= ($generated@@579 ($generated@@179 $generated@@581 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@179 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@153) (= (type $generated@@584) $generated@@153)) (= ($generated@@186 ($generated@@272 $generated@@583 $generated@@584)) $generated@@583))
 :pattern ( ($generated@@272 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@153) (= (type $generated@@586) $generated@@153)) (= ($generated@@187 ($generated@@272 $generated@@585 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@272 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 Int) ($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@81) (= ($generated@@192 ($generated@@79 $generated@@587 $generated@@588)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 Int) ($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@81) (= ($generated@@162 ($generated@@79 $generated@@589 $generated@@590)) $generated@@589))
 :pattern ( ($generated@@79 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 Int) ($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@81) (= ($generated@@165 ($generated@@79 $generated@@591 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@79 $generated@@591 $generated@@592))
)))
(assert  (and (forall (($generated@@595 T@U) ) (! (= (type ($generated@@593 $generated@@595)) $generated@@68)
 :pattern ( ($generated@@593 $generated@@595))
)) (forall (($generated@@596 T@U) ($generated@@597 Int) ) (! (let (($generated@@598 ($generated@@343 (type $generated@@596))))
(= (type ($generated@@594 $generated@@596 $generated@@597)) $generated@@598))
 :pattern ( ($generated@@594 $generated@@596 $generated@@597))
))))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@342 $generated@@153)) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@599 ($generated@@593 $generated@@600) $generated@@601) (forall (($generated@@602 Int) ) (!  (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@341 $generated@@599))) ($generated@@318 ($generated@@594 $generated@@599 $generated@@602) $generated@@600 $generated@@601))
 :pattern ( ($generated@@594 $generated@@599 $generated@@602))
))))
 :pattern ( ($generated@@78 $generated@@599 ($generated@@593 $generated@@600) $generated@@601))
)))
(assert (forall (($generated@@604 Int) ) (! (= ($generated@@603 ($generated@@148 $generated@@604)) $generated@@604)
 :pattern ( ($generated@@148 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@68)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@68) (= ($generated@@605 ($generated@@288 $generated@@607)) $generated@@607))
 :pattern ( ($generated@@288 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@68) (= ($generated@@76 ($generated@@288 $generated@@608)) $generated@@54))
 :pattern ( ($generated@@288 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@68)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@68) (= ($generated@@609 ($generated@@293 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@293 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@68) (= ($generated@@76 ($generated@@293 $generated@@612)) $generated@@55))
 :pattern ( ($generated@@293 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ) (! (= (type ($generated@@613 $generated@@614)) $generated@@68)
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@68) (= ($generated@@613 ($generated@@195 $generated@@615)) $generated@@615))
 :pattern ( ($generated@@195 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@68) (= ($generated@@76 ($generated@@195 $generated@@616)) $generated@@56))
 :pattern ( ($generated@@195 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ) (! (= (type ($generated@@617 $generated@@618)) $generated@@68)
 :pattern ( ($generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@68) (= ($generated@@617 ($generated@@593 $generated@@619)) $generated@@619))
 :pattern ( ($generated@@593 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@68) (= ($generated@@76 ($generated@@593 $generated@@620)) $generated@@57))
 :pattern ( ($generated@@593 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
(= ($generated@@410 $generated@@622 ($generated@@356 $generated@@621)) $generated@@621))
 :pattern ( ($generated@@356 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@623) ($generated@@369 $generated@@153 $generated@@153)) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) $generated@@68)) (= ($generated@@158 $generated@@623 ($generated@@485 $generated@@624 $generated@@625)) (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@153) ($generated@@0 ($generated@@88 ($generated@@367 $generated@@623) $generated@@626))) (and ($generated@@273 ($generated@@88 ($generated@@460 $generated@@623) $generated@@626) $generated@@625) ($generated@@273 $generated@@626 $generated@@624)))
 :pattern ( ($generated@@88 ($generated@@460 $generated@@623) $generated@@626))
 :pattern ( ($generated@@88 ($generated@@367 $generated@@623) $generated@@626))
))))
 :pattern ( ($generated@@158 $generated@@623 ($generated@@485 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@627) ($generated@@387 $generated@@153 $generated@@153)) (= (type $generated@@628) $generated@@68)) (= (type $generated@@629) $generated@@68)) (= ($generated@@158 $generated@@627 ($generated@@493 $generated@@628 $generated@@629)) (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@153) ($generated@@0 ($generated@@88 ($generated@@385 $generated@@627) $generated@@630))) (and ($generated@@273 ($generated@@88 ($generated@@468 $generated@@627) $generated@@630) $generated@@629) ($generated@@273 $generated@@630 $generated@@628)))
 :pattern ( ($generated@@88 ($generated@@468 $generated@@627) $generated@@630))
 :pattern ( ($generated@@88 ($generated@@385 $generated@@627) $generated@@630))
))))
 :pattern ( ($generated@@158 $generated@@627 ($generated@@493 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@153) (= (type $generated@@632) $generated@@153)) (and (and (and (=> ($generated@@152 $generated@@631 $generated@@632) (not (= $generated@@631 $generated@@632))) (=> (and ($generated@@403 $generated@@631) (not ($generated@@403 $generated@@632))) ($generated@@152 $generated@@631 $generated@@632))) (=> (and ($generated@@403 $generated@@631) ($generated@@403 $generated@@632)) (= ($generated@@152 $generated@@631 $generated@@632) (< ($generated@@159 $generated@@631) ($generated@@159 $generated@@632))))) (=> (and ($generated@@152 $generated@@631 $generated@@632) ($generated@@403 $generated@@632)) ($generated@@403 $generated@@631))))
 :pattern ( ($generated@@152 $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@153) (= (type $generated@@636) $generated@@153)) (< ($generated@@633 $generated@@635) ($generated@@634 ($generated@@272 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@272 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@153) (= (type $generated@@638) $generated@@153)) (< ($generated@@633 $generated@@638) ($generated@@634 ($generated@@272 $generated@@637 $generated@@638))))
 :pattern ( ($generated@@272 $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@143) (= ($generated@@260 $generated@@639) ($generated@@260 $generated@@328)))
 :pattern ( ($generated@@260 ($generated@@327 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@143) (= ($generated@@264 $generated@@640) ($generated@@264 $generated@@328)))
 :pattern ( ($generated@@264 ($generated@@327 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@153) (= (type $generated@@642) $generated@@68)) (= (type $generated@@643) $generated@@68)) ($generated@@273 $generated@@641 ($generated@@485 $generated@@642 $generated@@643))) (and (= ($generated@@356 ($generated@@410 ($generated@@369 $generated@@153 $generated@@153) $generated@@641)) $generated@@641) ($generated@@158 ($generated@@410 ($generated@@369 $generated@@153 $generated@@153) $generated@@641) ($generated@@485 $generated@@642 $generated@@643))))
 :pattern ( ($generated@@273 $generated@@641 ($generated@@485 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) $generated@@153) (= (type $generated@@645) $generated@@68)) (= (type $generated@@646) $generated@@68)) ($generated@@273 $generated@@644 ($generated@@493 $generated@@645 $generated@@646))) (and (= ($generated@@356 ($generated@@410 ($generated@@387 $generated@@153 $generated@@153) $generated@@644)) $generated@@644) ($generated@@158 ($generated@@410 ($generated@@387 $generated@@153 $generated@@153) $generated@@644) ($generated@@493 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@273 $generated@@644 ($generated@@493 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@68) (= (type $generated@@648) $generated@@68)) (= (type $generated@@649) $generated@@153)) ($generated@@273 $generated@@649 ($generated@@179 $generated@@647 $generated@@648))) (and (= ($generated@@356 ($generated@@410 $generated@@81 $generated@@649)) $generated@@649) ($generated@@158 ($generated@@410 $generated@@81 $generated@@649) ($generated@@179 $generated@@647 $generated@@648))))
 :pattern ( ($generated@@273 $generated@@649 ($generated@@179 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ) (! (let (($generated@@651 (type $generated@@650)))
 (not ($generated@@0 ($generated@@88 ($generated@@504 $generated@@651) $generated@@650))))
 :pattern ( (let (($generated@@651 (type $generated@@650)))
($generated@@88 ($generated@@504 $generated@@651) $generated@@650)))
)))
(assert (forall (($generated@@653 T@U) ) (! (= (type ($generated@@652 $generated@@653)) $generated@@73)
 :pattern ( ($generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@68) (= (type $generated@@655) $generated@@68)) (and (= ($generated@@76 ($generated@@179 $generated@@654 $generated@@655)) $generated@@62) (= ($generated@@652 ($generated@@179 $generated@@654 $generated@@655)) $generated@@66)))
 :pattern ( ($generated@@179 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@656) $generated@@81) (= (type $generated@@657) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@657) (and ($generated@@161 $generated@@656) ($generated@@78 $generated@@656 $generated@@80 $generated@@657)))) ($generated@@78 ($generated@@8 ($generated@@162 $generated@@656)) $generated@@46 $generated@@657))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@162 $generated@@656)) $generated@@46 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@81) (= ($generated@@633 ($generated@@356 $generated@@658)) ($generated@@634 $generated@@658)))
 :pattern ( ($generated@@633 ($generated@@356 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@143) (= ($generated@@260 ($generated@@142 $generated@@659)) ($generated@@260 $generated@@659)))
 :pattern ( ($generated@@260 ($generated@@142 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@143) (= ($generated@@264 ($generated@@142 $generated@@660)) ($generated@@264 $generated@@660)))
 :pattern ( ($generated@@264 ($generated@@142 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@661) $generated@@153) ($generated@@273 $generated@@661 ($generated@@148 0))) (and (= ($generated@@356 ($generated@@410 $generated@@2 $generated@@661)) $generated@@661) ($generated@@158 ($generated@@410 ($generated@@82 $generated@@153 $generated@@4) $generated@@661) ($generated@@148 0))))
 :pattern ( ($generated@@273 $generated@@661 ($generated@@148 0)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@662) $generated@@153) (= (type $generated@@663) $generated@@68)) ($generated@@273 $generated@@662 ($generated@@288 $generated@@663))) (and (= ($generated@@356 ($generated@@410 ($generated@@82 $generated@@153 $generated@@4) $generated@@662)) $generated@@662) ($generated@@158 ($generated@@410 ($generated@@82 $generated@@153 $generated@@4) $generated@@662) ($generated@@288 $generated@@663))))
 :pattern ( ($generated@@273 $generated@@662 ($generated@@288 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@664) $generated@@153) (= (type $generated@@665) $generated@@68)) ($generated@@273 $generated@@664 ($generated@@293 $generated@@665))) (and (= ($generated@@356 ($generated@@410 ($generated@@82 $generated@@153 $generated@@4) $generated@@664)) $generated@@664) ($generated@@158 ($generated@@410 ($generated@@82 $generated@@153 $generated@@4) $generated@@664) ($generated@@293 $generated@@665))))
 :pattern ( ($generated@@273 $generated@@664 ($generated@@293 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@666) $generated@@153) (= (type $generated@@667) $generated@@68)) ($generated@@273 $generated@@666 ($generated@@195 $generated@@667))) (and (= ($generated@@356 ($generated@@410 ($generated@@82 $generated@@153 $generated@@2) $generated@@666)) $generated@@666) ($generated@@158 ($generated@@410 ($generated@@82 $generated@@153 $generated@@2) $generated@@666) ($generated@@195 $generated@@667))))
 :pattern ( ($generated@@273 $generated@@666 ($generated@@195 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (= (type $generated@@668) $generated@@153) (= (type $generated@@669) $generated@@68)) ($generated@@273 $generated@@668 ($generated@@593 $generated@@669))) (and (= ($generated@@356 ($generated@@410 ($generated@@342 $generated@@153) $generated@@668)) $generated@@668) ($generated@@158 ($generated@@410 ($generated@@342 $generated@@153) $generated@@668) ($generated@@593 $generated@@669))))
 :pattern ( ($generated@@273 $generated@@668 ($generated@@593 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@153) ($generated@@403 $generated@@670)) (= $generated@@670 ($generated@@164 ($generated@@159 $generated@@670))))
 :pattern ( ($generated@@159 $generated@@670))
 :pattern ( ($generated@@403 $generated@@670))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@652 $generated@@80) $generated@@67))
(assert  (=> (<= 2 $generated@@259) (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@671) $generated@@143) (= (type $generated@@672) $generated@@153)) (= (type $generated@@673) $generated@@81)) (= (type $generated@@674) $generated@@81)) (or ($generated@@305 ($generated@@300 $generated@@672) ($generated@@300 $generated@@673) ($generated@@300 $generated@@674)) (and (not (= 2 $generated@@259)) (and ($generated@@158 $generated@@673 $generated@@80) ($generated@@158 $generated@@674 $generated@@80))))) (and (and (=> (< 0 ($generated@@159 $generated@@672)) (=> (not ($generated@@160 $generated@@673)) (let (($generated@@675 ($generated@@165 $generated@@673)))
(let (($generated@@676 ($generated@@162 $generated@@673)))
 (=> ($generated@@161 $generated@@674) (=> (<= $generated@@676 ($generated@@162 $generated@@674)) ($generated@@305 ($generated@@163 $generated@@672 ($generated@@164 1)) $generated@@675 ($generated@@165 $generated@@674)))))))) (=> (=> (< 0 ($generated@@159 $generated@@672)) (ite ($generated@@160 $generated@@673) true (let (($generated@@677 ($generated@@165 $generated@@673)))
(let (($generated@@678 ($generated@@162 $generated@@673)))
 (and (and ($generated@@161 $generated@@674) (<= $generated@@678 ($generated@@162 $generated@@674))) ($generated@@304 ($generated@@142 $generated@@671) ($generated@@163 $generated@@672 ($generated@@164 1)) $generated@@677 ($generated@@165 $generated@@674))))))) (=> (= ($generated@@298 0) ($generated@@159 $generated@@672)) (forall (($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@679) $generated@@153) ($generated@@152 $generated@@679 $generated@@672)) ($generated@@305 $generated@@679 $generated@@673 $generated@@674))
 :pattern ( ($generated@@304 ($generated@@142 $generated@@671) $generated@@679 $generated@@673 $generated@@674))
))))) (= ($generated@@304 ($generated@@142 $generated@@671) ($generated@@300 $generated@@672) ($generated@@300 $generated@@673) ($generated@@300 $generated@@674))  (and (=> (< 0 ($generated@@159 $generated@@672)) (ite ($generated@@160 $generated@@673) true (let (($generated@@680 ($generated@@165 $generated@@673)))
(let (($generated@@681 ($generated@@162 $generated@@673)))
 (and (and ($generated@@161 $generated@@674) (<= $generated@@681 ($generated@@162 $generated@@674))) ($generated@@304 ($generated@@142 $generated@@671) ($generated@@163 $generated@@672 ($generated@@164 1)) $generated@@680 ($generated@@165 $generated@@674))))))) (=> (= ($generated@@298 0) ($generated@@159 $generated@@672)) (forall (($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@153) ($generated@@152 $generated@@682 $generated@@672)) ($generated@@304 ($generated@@142 $generated@@671) $generated@@682 $generated@@673 $generated@@674))
 :pattern ( ($generated@@304 ($generated@@142 $generated@@671) $generated@@682 $generated@@673 $generated@@674))
)))))))
 :weight 3
 :pattern ( ($generated@@304 ($generated@@142 $generated@@671) ($generated@@300 $generated@@672) ($generated@@300 $generated@@673) ($generated@@300 $generated@@674)))
))))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (= (type $generated@@683) ($generated@@82 $generated@@153 $generated@@2)) (= (type $generated@@684) $generated@@68)) (= (type $generated@@685) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@683 ($generated@@195 $generated@@684) $generated@@685) (forall (($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@686) $generated@@153) (< 0 ($generated ($generated@@88 $generated@@683 $generated@@686)))) ($generated@@318 $generated@@686 $generated@@684 $generated@@685))
 :pattern ( ($generated@@88 $generated@@683 $generated@@686))
))))
 :pattern ( ($generated@@78 $generated@@683 ($generated@@195 $generated@@684) $generated@@685))
)))
(assert  (=> (<= 2 $generated@@259) (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@687) $generated@@143) (= (type $generated@@688) $generated@@81)) (= (type $generated@@689) $generated@@81)) (= (type $generated@@690) $generated@@153)) (and (and ($generated@@158 $generated@@688 $generated@@80) ($generated@@158 $generated@@689 $generated@@80)) (= $generated@@690 ($generated@@164 0)))) ($generated@@304 $generated@@687 $generated@@690 $generated@@688 $generated@@689))
 :pattern ( ($generated@@304 $generated@@687 $generated@@690 $generated@@688 $generated@@689))
))))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@691) $generated@@153) (= (type $generated@@692) $generated@@153)) (and ($generated@@403 $generated@@692) (<= ($generated@@159 $generated@@692) ($generated@@159 $generated@@691)))) (or (and (= $generated@@692 ($generated@@164 0)) (= ($generated@@163 $generated@@691 $generated@@692) $generated@@691)) (and (not (= $generated@@692 ($generated@@164 0))) ($generated@@152 ($generated@@163 $generated@@691 $generated@@692) $generated@@691))))
 :pattern ( ($generated@@163 $generated@@691 $generated@@692))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) $generated@@81) (= (type $generated@@694) $generated@@68)) (= (type $generated@@695) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@695) (and ($generated@@178 $generated@@693) (exists (($generated@@696 T@U) ) (!  (and (= (type $generated@@696) $generated@@68) ($generated@@78 $generated@@693 ($generated@@179 $generated@@694 $generated@@696) $generated@@695))
 :pattern ( ($generated@@78 $generated@@693 ($generated@@179 $generated@@694 $generated@@696) $generated@@695))
))))) ($generated@@318 ($generated@@186 $generated@@693) $generated@@694 $generated@@695))
 :pattern ( ($generated@@318 ($generated@@186 $generated@@693) $generated@@694 $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (and (and (= (type $generated@@697) $generated@@81) (= (type $generated@@698) $generated@@68)) (= (type $generated@@699) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@699) (and ($generated@@178 $generated@@697) (exists (($generated@@700 T@U) ) (!  (and (= (type $generated@@700) $generated@@68) ($generated@@78 $generated@@697 ($generated@@179 $generated@@700 $generated@@698) $generated@@699))
 :pattern ( ($generated@@78 $generated@@697 ($generated@@179 $generated@@700 $generated@@698) $generated@@699))
))))) ($generated@@318 ($generated@@187 $generated@@697) $generated@@698 $generated@@699))
 :pattern ( ($generated@@318 ($generated@@187 $generated@@697) $generated@@698 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (= (type $generated@@701) $generated@@81) (= (type $generated@@702) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@702) (and ($generated@@161 $generated@@701) ($generated@@78 $generated@@701 $generated@@80 $generated@@702)))) ($generated@@78 ($generated@@165 $generated@@701) $generated@@80 $generated@@702))
 :pattern ( ($generated@@78 ($generated@@165 $generated@@701) $generated@@80 $generated@@702))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) $generated@@153) (= (type $generated@@704) $generated@@153)) (= ($generated@@272 ($generated@@300 $generated@@703) ($generated@@300 $generated@@704)) ($generated@@300 ($generated@@272 $generated@@703 $generated@@704))))
 :pattern ( ($generated@@272 ($generated@@300 $generated@@703) ($generated@@300 $generated@@704)))
)))
(assert (forall (($generated@@705 Int) ) (! (= ($generated@@356 ($generated@@8 ($generated@@298 $generated@@705))) ($generated@@300 ($generated@@356 ($generated@@8 $generated@@705))))
 :pattern ( ($generated@@356 ($generated@@8 ($generated@@298 $generated@@705))))
)))
(assert (forall (($generated@@706 T@U) ) (! (= ($generated@@356 ($generated@@300 $generated@@706)) ($generated@@300 ($generated@@356 $generated@@706)))
 :pattern ( ($generated@@356 ($generated@@300 $generated@@706)))
)))
(assert (forall (($generated@@707 Int) ($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@81) (= ($generated@@158 ($generated@@79 $generated@@707 $generated@@708) $generated@@80)  (and ($generated@@158 ($generated@@8 $generated@@707) $generated@@46) ($generated@@158 $generated@@708 $generated@@80))))
 :pattern ( ($generated@@158 ($generated@@79 $generated@@707 $generated@@708) $generated@@80))
)))
(assert (forall (($generated@@709 T@U) ) (! (let (($generated@@710 ($generated@@343 (type $generated@@709))))
 (=> (and (= (type $generated@@709) ($generated@@342 $generated@@710)) (= ($generated@@341 $generated@@709) 0)) (= $generated@@709 ($generated@@340 $generated@@710))))
 :pattern ( ($generated@@341 $generated@@709))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ($generated@@713 T@U) ) (! (let (($generated@@714 (type $generated@@712)))
 (=> (and (and (= (type $generated@@711) ($generated@@82 $generated@@714 $generated@@2)) (= (type $generated@@713) $generated@@2)) (<= 0 ($generated $generated@@713))) (= ($generated@@361 ($generated@@89 $generated@@711 $generated@@712 $generated@@713)) (+ (- ($generated@@361 $generated@@711) ($generated ($generated@@88 $generated@@711 $generated@@712))) ($generated $generated@@713)))))
 :pattern ( ($generated@@361 ($generated@@89 $generated@@711 $generated@@712 $generated@@713)))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (= (type $generated@@715) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@716) $generated@@2)) ($generated@@78 $generated@@716 $generated@@46 $generated@@715))
 :pattern ( ($generated@@78 $generated@@716 $generated@@46 $generated@@715))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (= (type $generated@@717) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@718) $generated@@3)) ($generated@@78 $generated@@718 $generated@@47 $generated@@717))
 :pattern ( ($generated@@78 $generated@@718 $generated@@47 $generated@@717))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (= (type $generated@@719) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@720) $generated@@4)) ($generated@@78 $generated@@720 $generated@@44 $generated@@719))
 :pattern ( ($generated@@78 $generated@@720 $generated@@44 $generated@@719))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (= (type $generated@@721) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@722) $generated@@528)) ($generated@@78 $generated@@722 $generated@@45 $generated@@721))
 :pattern ( ($generated@@78 $generated@@722 $generated@@45 $generated@@721))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (= (type $generated@@723) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@724) $generated@@153)) ($generated@@78 $generated@@724 $generated@@48 $generated@@723))
 :pattern ( ($generated@@78 $generated@@724 $generated@@48 $generated@@723))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (= (type $generated@@725) ($generated@@342 $generated@@153)) (= (type $generated@@726) $generated@@68)) (= ($generated@@158 $generated@@725 ($generated@@593 $generated@@726)) (forall (($generated@@727 Int) ) (!  (=> (and (<= 0 $generated@@727) (< $generated@@727 ($generated@@341 $generated@@725))) ($generated@@273 ($generated@@594 $generated@@725 $generated@@727) $generated@@726))
 :pattern ( ($generated@@594 $generated@@725 $generated@@727))
))))
 :pattern ( ($generated@@158 $generated@@725 ($generated@@593 $generated@@726)))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 Int) ) (!  (=> (= (type $generated@@729) ($generated@@342 $generated@@153)) (=> (and (<= 0 $generated@@730) (< $generated@@730 ($generated@@341 $generated@@729))) (< ($generated@@634 ($generated@@410 $generated@@81 ($generated@@594 $generated@@729 $generated@@730))) ($generated@@728 $generated@@729))))
 :pattern ( ($generated@@634 ($generated@@410 $generated@@81 ($generated@@594 $generated@@729 $generated@@730))))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@731) $generated@@153) (= (type $generated@@732) $generated@@143)) (= (type $generated@@733) $generated@@81)) (= (type $generated@@734) $generated@@81)) (= $generated@@733 $generated@@734)) ($generated@@157 $generated@@731 ($generated@@142 $generated@@732) $generated@@733 $generated@@734))
 :pattern ( ($generated@@157 $generated@@731 ($generated@@142 $generated@@732) $generated@@733 $generated@@734))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (and (and (= (type $generated@@735) ($generated@@369 $generated@@153 $generated@@153)) (= (type $generated@@736) $generated@@68)) (= (type $generated@@737) $generated@@68)) ($generated@@158 $generated@@735 ($generated@@485 $generated@@736 $generated@@737))) (and (and ($generated@@158 ($generated@@367 $generated@@735) ($generated@@288 $generated@@736)) ($generated@@158 ($generated@@422 $generated@@735) ($generated@@288 $generated@@737))) ($generated@@158 ($generated@@459 $generated@@735) ($generated@@288 ($generated@@179 $generated@@736 $generated@@737)))))
 :pattern ( ($generated@@158 $generated@@735 ($generated@@485 $generated@@736 $generated@@737)))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ($generated@@740 T@U) ) (!  (=> (and (and (and (= (type $generated@@738) ($generated@@387 $generated@@153 $generated@@153)) (= (type $generated@@739) $generated@@68)) (= (type $generated@@740) $generated@@68)) ($generated@@158 $generated@@738 ($generated@@493 $generated@@739 $generated@@740))) (and (and ($generated@@158 ($generated@@385 $generated@@738) ($generated@@293 $generated@@739)) ($generated@@158 ($generated@@433 $generated@@738) ($generated@@293 $generated@@740))) ($generated@@158 ($generated@@467 $generated@@738) ($generated@@293 ($generated@@179 $generated@@739 $generated@@740)))))
 :pattern ( ($generated@@158 $generated@@738 ($generated@@493 $generated@@739 $generated@@740)))
)))
(assert (forall (($generated@@741 T@U) ) (!  (=> (= (type $generated@@741) $generated@@2) ($generated@@158 $generated@@741 $generated@@46))
 :pattern ( ($generated@@158 $generated@@741 $generated@@46))
)))
(assert (forall (($generated@@742 T@U) ) (!  (=> (= (type $generated@@742) $generated@@3) ($generated@@158 $generated@@742 $generated@@47))
 :pattern ( ($generated@@158 $generated@@742 $generated@@47))
)))
(assert (forall (($generated@@743 T@U) ) (!  (=> (= (type $generated@@743) $generated@@4) ($generated@@158 $generated@@743 $generated@@44))
 :pattern ( ($generated@@158 $generated@@743 $generated@@44))
)))
(assert (forall (($generated@@744 T@U) ) (!  (=> (= (type $generated@@744) $generated@@528) ($generated@@158 $generated@@744 $generated@@45))
 :pattern ( ($generated@@158 $generated@@744 $generated@@45))
)))
(assert (forall (($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@153) ($generated@@158 $generated@@745 $generated@@48))
 :pattern ( ($generated@@158 $generated@@745 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@746 () T@U)
(declare-fun $generated@@747 () T@U)
(declare-fun $generated@@748 () T@U)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 (T@U) Bool)
(declare-fun $generated@@751 () T@U)
(assert  (and (and (and (and (= (type $generated@@746) ($generated@@205 $generated@@83 $generated@@4)) (= (type $generated@@747) $generated@@83)) (= (type $generated@@748) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@749) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@751) $generated@@153)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@752  (=> (= $generated@@746 ($generated@@204 $generated@@747 $generated@@748 $generated@@60 false)) (=> (and (and ($generated@@85 $generated@@749) ($generated@@750 $generated@@749)) (and (= $generated@@748 $generated@@749) (forall (($generated@@753 T@U) ) (!  (=> (= (type $generated@@753) $generated@@153) (=> (and ($generated@@0 ($generated@@300 ($generated@@11 true))) ($generated@@152 $generated@@753 $generated@@751)) ($generated@@304 ($generated@@142 $generated@@328) $generated@@753 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328))))))
 :no-pattern (type $generated@@753)
 :no-pattern ($generated $generated@@753)
 :no-pattern ($generated@@0 $generated@@753)
)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> ($generated@@305 $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (< 0 ($generated@@159 $generated@@751)) (=> ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))))))) ($generated@@0 ($generated@@300 ($generated@@11 true)))))))) (=> (=> ($generated@@305 $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (< 0 ($generated@@159 $generated@@751)) (=> ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))))))) ($generated@@0 ($generated@@300 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@305 $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (< 0 ($generated@@159 $generated@@751)) (=> (not ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))))))) ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@161 ($generated@@300 ($generated@@264 ($generated@@142 ($generated@@142 $generated@@328))))))))))))) (=> (=> ($generated@@305 $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (< 0 ($generated@@159 $generated@@751)) (=> (not ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))))))) ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@161 ($generated@@300 ($generated@@264 ($generated@@142 ($generated@@142 $generated@@328)))))))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@305 $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (< 0 ($generated@@159 $generated@@751)) (=> (not ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))))))) (let (($generated@@754 ($generated@@298 ($generated@@162 ($generated@@300 ($generated@@260 ($generated@@142 ($generated@@142 $generated@@328))))))))
(<= $generated@@754 ($generated@@298 ($generated@@162 ($generated@@300 ($generated@@264 ($generated@@142 ($generated@@142 $generated@@328))))))))))))) (=> (=> ($generated@@305 $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (< 0 ($generated@@159 $generated@@751)) (=> (not ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))))))) (let (($generated@@755 ($generated@@298 ($generated@@162 ($generated@@300 ($generated@@260 ($generated@@142 ($generated@@142 $generated@@328))))))))
(<= $generated@@755 ($generated@@298 ($generated@@162 ($generated@@300 ($generated@@264 ($generated@@142 ($generated@@142 $generated@@328)))))))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@305 $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (< 0 ($generated@@159 $generated@@751)) (=> (not ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))))))) (let (($generated@@756 ($generated@@300 ($generated@@165 ($generated@@300 ($generated@@260 ($generated@@142 ($generated@@142 $generated@@328))))))))
($generated@@304 ($generated@@142 ($generated@@142 $generated@@328)) ($generated@@163 $generated@@751 ($generated@@164 1)) $generated@@756 ($generated@@300 ($generated@@165 ($generated@@300 ($generated@@264 ($generated@@142 ($generated@@142 $generated@@328))))))))))))) (=> (=> ($generated@@305 $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (< 0 ($generated@@159 $generated@@751)) (=> (not ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@160 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328)))))))) (let (($generated@@757 ($generated@@300 ($generated@@165 ($generated@@300 ($generated@@260 ($generated@@142 ($generated@@142 $generated@@328))))))))
($generated@@304 ($generated@@142 ($generated@@142 $generated@@328)) ($generated@@163 $generated@@751 ($generated@@164 1)) $generated@@757 ($generated@@300 ($generated@@165 ($generated@@300 ($generated@@264 ($generated@@142 ($generated@@142 $generated@@328)))))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@305 $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (or ($generated@@304 ($generated@@142 $generated@@328) $generated@@751 ($generated@@300 ($generated@@260 ($generated@@142 $generated@@328))) ($generated@@300 ($generated@@264 ($generated@@142 $generated@@328)))) (=> (= ($generated@@298 0) ($generated@@159 $generated@@751)) (forall (($generated@@758 T@U) ) (!  (=> (and (= (type $generated@@758) $generated@@153) ($generated@@152 $generated@@758 $generated@@751)) ($generated@@304 ($generated@@142 ($generated@@142 $generated@@328)) $generated@@758 ($generated@@300 ($generated@@260 ($generated@@142 ($generated@@142 $generated@@328)))) ($generated@@300 ($generated@@264 ($generated@@142 ($generated@@142 $generated@@328))))))
 :pattern ( ($generated@@304 ($generated@@142 ($generated@@142 $generated@@328)) $generated@@758 ($generated@@260 ($generated@@142 ($generated@@142 $generated@@328))) ($generated@@264 ($generated@@142 ($generated@@142 $generated@@328)))))
))))))))))))))))))
(let (($generated@@759  (=> (and (and ($generated@@85 $generated@@748) ($generated@@750 $generated@@748)) (and (= 3 $generated@@259) (= (ControlFlow 0 7) 2))) $generated@@752)))
$generated@@759)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@148 (Int) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@157 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@167 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) Int)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U) Int)
(declare-fun $generated@@173 (T@U T@U) T@U)
(declare-fun $generated@@174 (Int) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U) Bool)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@213 (T@U T@U T@U) T@U)
(declare-fun $generated@@214 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@215 (T@T T@T) T@T)
(declare-fun $generated@@216 (T@T) T@T)
(declare-fun $generated@@217 (T@T) T@T)
(declare-fun $generated@@218 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@269 () Int)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@271 () Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 () Bool)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@283 (T@U T@U) Bool)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@308 (Int) Int)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@314 (T@U T@U T@U) Bool)
(declare-fun $generated@@329 (T@T) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@350 (T@U) Int)
(declare-fun $generated@@351 (T@T) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@T) T@U)
(declare-fun $generated@@358 (T@T T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@T) T@U)
(declare-fun $generated@@376 (T@T T@T) T@T)
(declare-fun $generated@@377 (T@T) T@T)
(declare-fun $generated@@378 (T@T) T@T)
(declare-fun $generated@@392 (T@U) Bool)
(declare-fun $generated@@399 (T@T T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@473 (T@U T@U) Bool)
(declare-fun $generated@@480 (T@U T@U) T@U)
(declare-fun $generated@@488 (T@U T@U) T@U)
(declare-fun $generated@@499 (T@T) T@U)
(declare-fun $generated@@523 () T@T)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@573 (T@U Int) T@U)
(declare-fun $generated@@582 (T@U) Int)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@612 (T@U) Int)
(declare-fun $generated@@613 (T@U) Int)
(declare-fun $generated@@634 (T@U) T@U)
(declare-fun $generated@@694 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert  (and (= ($generated@@1 $generated@@143) 15) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@142 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@142 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@143) (= (type $generated@@146) $generated@@81)) (= (type $generated@@147) $generated@@81)) (= ($generated@@141 ($generated@@142 $generated@@145) $generated@@146 $generated@@147) (= $generated@@146 $generated@@147)))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@145) $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 Int) ) (! (= (type ($generated@@148 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@2) (= (type $generated@@151) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@150 ($generated@@148 0) $generated@@151))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@148 0) $generated@@151))
)))
(assert (= ($generated@@1 $generated@@153) 16))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@153) (= (type $generated@@155) $generated@@153)) (= (type $generated@@156) $generated@@153)) (and ($generated@@152 $generated@@154 $generated@@155) ($generated@@152 $generated@@155 $generated@@156))) ($generated@@152 $generated@@154 $generated@@156))
 :pattern ( ($generated@@152 $generated@@154 $generated@@155) ($generated@@152 $generated@@155 $generated@@156))
 :pattern ( ($generated@@152 $generated@@154 $generated@@155) ($generated@@152 $generated@@154 $generated@@156))
)))
(assert  (and (and (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@157 $generated@@160 $generated@@161 $generated@@162)) $generated@@81)
 :pattern ( ($generated@@157 $generated@@160 $generated@@161 $generated@@162))
)) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@158 $generated@@163)) $generated@@143)
 :pattern ( ($generated@@158 $generated@@163))
))) (= (type $generated@@159) $generated@@143)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@143) (= (type $generated@@165) $generated@@81)) (= (type $generated@@166) $generated@@81)) (= ($generated@@157 $generated@@164 $generated@@165 $generated@@166) ($generated@@157 $generated@@159 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@157 ($generated@@158 $generated@@164) $generated@@165 $generated@@166))
)))
(assert  (and (and (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@173 $generated@@176 $generated@@177)) $generated@@153)
 :pattern ( ($generated@@173 $generated@@176 $generated@@177))
)) (forall (($generated@@178 Int) ) (! (= (type ($generated@@174 $generated@@178)) $generated@@153)
 :pattern ( ($generated@@174 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@175 $generated@@179)) $generated@@81)
 :pattern ( ($generated@@175 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@180) $generated@@153) (= (type $generated@@181) $generated@@143)) (= (type $generated@@182) $generated@@81)) (= (type $generated@@183) $generated@@81)) (and ($generated@@168 $generated@@182 $generated@@80) ($generated@@168 $generated@@183 $generated@@80))) (= ($generated@@167 $generated@@180 ($generated@@142 $generated@@181) $generated@@182 $generated@@183)  (and (=> (< 0 ($generated@@169 $generated@@180)) (or (and ($generated@@170 $generated@@182) ($generated@@170 $generated@@183)) (and (and ($generated@@171 $generated@@182) ($generated@@171 $generated@@183)) (=> (and ($generated@@171 $generated@@182) ($generated@@171 $generated@@183)) (and (= ($generated@@172 $generated@@182) ($generated@@172 $generated@@183)) ($generated@@167 ($generated@@173 $generated@@180 ($generated@@174 1)) $generated@@181 ($generated@@175 $generated@@182) ($generated@@175 $generated@@183))))))) (=> (and (not (= $generated@@180 ($generated@@174 0))) (= ($generated@@169 $generated@@180) 0)) ($generated@@141 $generated@@181 $generated@@182 $generated@@183)))))
 :pattern ( ($generated@@167 $generated@@180 ($generated@@142 $generated@@181) $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@2) ($generated@@168 $generated@@184 ($generated@@148 0)))
 :pattern ( ($generated@@168 $generated@@184 ($generated@@148 0)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 Int) ($generated@@187 Int) ) (!  (=> (= (type $generated@@185) $generated@@153) (=> (and (and (<= 0 $generated@@186) (<= 0 $generated@@187)) (<= (+ $generated@@186 $generated@@187) ($generated@@169 $generated@@185))) (= ($generated@@173 ($generated@@173 $generated@@185 ($generated@@174 $generated@@186)) ($generated@@174 $generated@@187)) ($generated@@173 $generated@@185 ($generated@@174 (+ $generated@@186 $generated@@187))))))
 :pattern ( ($generated@@173 ($generated@@173 $generated@@185 ($generated@@174 $generated@@186)) ($generated@@174 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@190 $generated@@191)) $generated@@68)
 :pattern ( ($generated@@189 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (and (= (type $generated@@192) $generated@@68) (= (type $generated@@193) $generated@@68)) (= (type $generated@@194) $generated@@81)) ($generated@@168 $generated@@194 ($generated@@189 $generated@@192 $generated@@193))) ($generated@@188 $generated@@194))
 :pattern ( ($generated@@188 $generated@@194) ($generated@@168 $generated@@194 ($generated@@189 $generated@@192 $generated@@193)))
)))
(assert  (and (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@153)
 :pattern ( ($generated@@196 $generated@@198))
)) (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@153)
 :pattern ( ($generated@@197 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) $generated@@81) (= (type $generated@@201) $generated@@81)) true) (= ($generated@@195 $generated@@200 $generated@@201)  (and (= ($generated@@196 $generated@@200) ($generated@@196 $generated@@201)) (= ($generated@@197 $generated@@200) ($generated@@197 $generated@@201)))))
 :pattern ( ($generated@@195 $generated@@200 $generated@@201))
)))
(assert  (and (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@72)
 :pattern ( ($generated@@202 $generated@@204))
)) (= (type $generated@@203) $generated@@81)))
(assert (= ($generated@@202 $generated@@203) $generated@@63))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@205 $generated@@207)) $generated@@68)
 :pattern ( ($generated@@205 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (= (type $generated@@208) ($generated@@82 $generated@@153 $generated@@2)) (= (type $generated@@209) $generated@@68)) ($generated@@168 $generated@@208 ($generated@@205 $generated@@209))) ($generated@@206 $generated@@208))
 :pattern ( ($generated@@168 $generated@@208 ($generated@@205 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (and (and (= (type $generated@@210) $generated@@143) (= (type $generated@@211) $generated@@81)) (= (type $generated@@212) $generated@@81)) (and ($generated@@168 $generated@@211 $generated@@80) ($generated@@168 $generated@@212 $generated@@80))) (= ($generated@@141 ($generated@@142 $generated@@210) $generated@@211 $generated@@212)  (or (and ($generated@@170 $generated@@211) ($generated@@170 $generated@@212)) (and (and ($generated@@171 $generated@@211) ($generated@@171 $generated@@212)) (=> (and ($generated@@171 $generated@@211) ($generated@@171 $generated@@212)) (and (= ($generated@@172 $generated@@211) ($generated@@172 $generated@@212)) ($generated@@141 $generated@@210 ($generated@@175 $generated@@211) ($generated@@175 $generated@@212))))))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@210) $generated@@211 $generated@@212))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (= ($generated@@1 ($generated@@215 $generated@@219 $generated@@220)) 17)) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@216 ($generated@@215 $generated@@221 $generated@@222)) $generated@@221)
 :pattern ( ($generated@@215 $generated@@221 $generated@@222))
))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@217 ($generated@@215 $generated@@223 $generated@@224)) $generated@@224)
 :pattern ( ($generated@@215 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@217 (type $generated@@225))))
(= (type ($generated@@213 $generated@@225 $generated@@226 $generated@@227)) $generated@@228))
 :pattern ( ($generated@@213 $generated@@225 $generated@@226 $generated@@227))
))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(let (($generated@@234 (type $generated@@230)))
(= (type ($generated@@218 $generated@@229 $generated@@230 $generated@@231 $generated@@232)) ($generated@@215 $generated@@234 $generated@@233))))
 :pattern ( ($generated@@218 $generated@@229 $generated@@230 $generated@@231 $generated@@232))
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@217 (type $generated@@235))))
 (=> (= (type $generated@@238) $generated@@239) (= ($generated@@213 ($generated@@218 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@236 $generated@@237) $generated@@238)))
 :weight 0
))) (and (and (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or (= $generated@@242 $generated@@244) (= ($generated@@213 ($generated@@218 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@213 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
)) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (or (= $generated@@249 $generated@@251) (= ($generated@@213 ($generated@@218 $generated@@247 $generated@@248 $generated@@249 $generated@@246) $generated@@250 $generated@@251) ($generated@@213 $generated@@247 $generated@@250 $generated@@251)))
 :weight 0
))) (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (or true (= ($generated@@213 ($generated@@218 $generated@@253 $generated@@254 $generated@@255 $generated@@252) $generated@@256 $generated@@257) ($generated@@213 $generated@@253 $generated@@256 $generated@@257)))
 :weight 0
)))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 Bool) ) (! (= (type ($generated@@214 $generated@@258 $generated@@259 $generated@@260 $generated@@261)) ($generated@@215 $generated@@83 $generated@@4))
 :pattern ( ($generated@@214 $generated@@258 $generated@@259 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Bool) ($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@71 (type $generated@@267))))
 (=> (and (and (and (and (= (type $generated@@262) $generated@@83) (= (type $generated@@263) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@264) ($generated@@70 $generated@@4))) (= (type $generated@@266) $generated@@83)) (= (type $generated@@267) ($generated@@70 $generated@@268))) (= ($generated@@0 ($generated@@213 ($generated@@214 $generated@@262 $generated@@263 $generated@@264 $generated@@265) $generated@@266 $generated@@267))  (=> (and (not (= $generated@@266 $generated@@262)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@263 $generated@@266) $generated@@264))) $generated@@265))))
 :pattern ( ($generated@@213 ($generated@@214 $generated@@262 $generated@@263 $generated@@264 $generated@@265) $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@270 $generated@@272)) $generated@@81)
 :pattern ( ($generated@@270 $generated@@272))
)))
(assert  (=> (<= 1 $generated@@269) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@143) (or $generated@@271 (not (= 1 $generated@@269)))) ($generated@@168 ($generated@@270 $generated@@273) $generated@@80))
 :pattern ( ($generated@@270 $generated@@273))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@274 $generated@@276)) $generated@@81)
 :pattern ( ($generated@@274 $generated@@276))
)))
(assert  (=> (<= 1 $generated@@269) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@143) (or $generated@@275 (not (= 1 $generated@@269)))) ($generated@@168 ($generated@@274 $generated@@277) $generated@@80))
 :pattern ( ($generated@@274 $generated@@277))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (= (type $generated@@278) $generated@@143) (= (type $generated@@279) $generated@@81)) (= (type $generated@@280) $generated@@81)) (forall (($generated@@281 Int) ) (!  (=> (<= 0 $generated@@281) ($generated@@167 ($generated@@174 $generated@@281) ($generated@@142 $generated@@278) $generated@@279 $generated@@280))
 :pattern ( ($generated@@167 ($generated@@174 $generated@@281) ($generated@@142 $generated@@278) $generated@@279 $generated@@280))
))) ($generated@@141 ($generated@@142 $generated@@278) $generated@@279 $generated@@280))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (= (type ($generated@@282 $generated@@284 $generated@@285)) $generated@@81)
 :pattern ( ($generated@@282 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (= (type $generated@@286) $generated@@68) (= (type $generated@@287) $generated@@68)) (= (type $generated@@288) $generated@@153)) (= (type $generated@@289) $generated@@153)) (= ($generated@@168 ($generated@@282 $generated@@288 $generated@@289) ($generated@@189 $generated@@286 $generated@@287))  (and ($generated@@283 $generated@@288 $generated@@286) ($generated@@283 $generated@@289 $generated@@287))))
 :pattern ( ($generated@@168 ($generated@@282 $generated@@288 $generated@@289) ($generated@@189 $generated@@286 $generated@@287)))
)))
(assert ($generated@@168 $generated@@203 $generated@@80))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@290)) ($generated@@78 $generated@@203 $generated@@80 $generated@@290))
 :pattern ( ($generated@@78 $generated@@203 $generated@@80 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@81) (= (type $generated@@292) $generated@@81)) (= ($generated@@195 $generated@@291 $generated@@292) (= $generated@@291 $generated@@292)))
 :pattern ( ($generated@@195 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) $generated@@153) (= (type $generated@@294) $generated@@143)) (= (type $generated@@295) $generated@@81)) (= (type $generated@@296) $generated@@81)) (= (type $generated@@297) $generated@@153)) (and ($generated@@152 $generated@@293 $generated@@297) ($generated@@167 $generated@@297 ($generated@@142 $generated@@294) $generated@@295 $generated@@296))) ($generated@@167 $generated@@293 ($generated@@142 $generated@@294) $generated@@295 $generated@@296))
 :pattern ( ($generated@@167 $generated@@293 ($generated@@142 $generated@@294) $generated@@295 $generated@@296) ($generated@@167 $generated@@297 ($generated@@142 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@68)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) ($generated@@82 $generated@@153 $generated@@4)) (= (type $generated@@301) $generated@@68)) (= ($generated@@168 $generated@@300 ($generated@@298 $generated@@301)) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@153) ($generated@@0 ($generated@@88 $generated@@300 $generated@@302))) ($generated@@283 $generated@@302 $generated@@301))
 :pattern ( ($generated@@88 $generated@@300 $generated@@302))
))))
 :pattern ( ($generated@@168 $generated@@300 ($generated@@298 $generated@@301)))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@68)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) ($generated@@82 $generated@@153 $generated@@4)) (= (type $generated@@306) $generated@@68)) (= ($generated@@168 $generated@@305 ($generated@@303 $generated@@306)) (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@153) ($generated@@0 ($generated@@88 $generated@@305 $generated@@307))) ($generated@@283 $generated@@307 $generated@@306))
 :pattern ( ($generated@@88 $generated@@305 $generated@@307))
))))
 :pattern ( ($generated@@168 $generated@@305 ($generated@@303 $generated@@306)))
)))
(assert (forall (($generated@@309 Int) ) (! (= ($generated@@308 $generated@@309) $generated@@309)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 (type $generated@@311)))
(= (type ($generated@@310 $generated@@311)) $generated@@312))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (= ($generated@@310 $generated@@313) $generated@@313)
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@315) $generated@@68) (= (type $generated@@316) $generated@@68)) (= (type $generated@@317) $generated@@153)) (= (type $generated@@318) $generated@@153)) (= (type $generated@@319) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@319)) (= ($generated@@78 ($generated@@282 $generated@@317 $generated@@318) ($generated@@189 $generated@@315 $generated@@316) $generated@@319)  (and ($generated@@314 $generated@@317 $generated@@315 $generated@@319) ($generated@@314 $generated@@318 $generated@@316 $generated@@319))))
 :pattern ( ($generated@@78 ($generated@@282 $generated@@317 $generated@@318) ($generated@@189 $generated@@315 $generated@@316) $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@81) (= ($generated@@188 $generated@@320) (= ($generated@@202 $generated@@320) $generated@@61)))
 :pattern ( ($generated@@188 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@81) (= ($generated@@170 $generated@@321) (= ($generated@@202 $generated@@321) $generated@@63)))
 :pattern ( ($generated@@170 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@81) (= ($generated@@171 $generated@@322) (= ($generated@@202 $generated@@322) $generated@@65)))
 :pattern ( ($generated@@171 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@81) ($generated@@188 $generated@@323)) (exists (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (and (and (= (type $generated@@324) $generated@@153) (= (type $generated@@325) $generated@@153)) (= $generated@@323 ($generated@@282 $generated@@324 $generated@@325)))
 :no-pattern (type $generated@@324)
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
)))
 :pattern ( ($generated@@188 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@81) ($generated@@171 $generated@@326)) (exists (($generated@@327 Int) ($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@81) (= $generated@@326 ($generated@@79 $generated@@327 $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
)))
 :pattern ( ($generated@@171 $generated@@326))
)))
(assert  (and (and (forall (($generated@@333 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@333)) 18)) (forall (($generated@@334 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@331 $generated@@334))
))) (forall (($generated@@335 T@T) ) (! (= (type ($generated@@329 $generated@@335)) ($generated@@331 $generated@@335))
 :pattern ( ($generated@@329 $generated@@335))
))))
(assert (forall (($generated@@336 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@336)) 0)
 :pattern ( ($generated@@329 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@81) ($generated@@170 $generated@@337)) (= $generated@@337 $generated@@203))
 :pattern ( ($generated@@170 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@338) $generated@@153) (= (type $generated@@339) $generated@@143)) (= (type $generated@@340) $generated@@81)) (= (type $generated@@341) $generated@@81)) (not (= $generated@@338 ($generated@@174 0)))) (= ($generated@@167 $generated@@338 ($generated@@142 $generated@@339) $generated@@340 $generated@@341) ($generated@@167 $generated@@338 $generated@@339 $generated@@340 $generated@@341)))
 :pattern ( ($generated@@167 $generated@@338 ($generated@@142 $generated@@339) $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) $generated@@143) (= (type $generated@@343) $generated@@81)) (= (type $generated@@344) $generated@@81)) (= ($generated@@141 ($generated@@142 $generated@@342) $generated@@343 $generated@@344) ($generated@@141 $generated@@342 $generated@@343 $generated@@344)))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@342) $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@153)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@68) (= (type $generated@@349) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@314 ($generated@@345 $generated@@347) $generated@@348 $generated@@349) ($generated@@78 $generated@@347 $generated@@348 $generated@@349)))
 :pattern ( ($generated@@314 ($generated@@345 $generated@@347) $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@352 T@T) ) (! (= (type ($generated@@351 $generated@@352)) ($generated@@82 $generated@@352 $generated@@2))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@86 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@82 $generated@@354 $generated@@2)) (and (= (= ($generated@@350 $generated@@353) 0) (= $generated@@353 ($generated@@351 $generated@@354))) (=> (not (= ($generated@@350 $generated@@353) 0)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) (< 0 ($generated ($generated@@88 $generated@@353 $generated@@355))))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert  (and (and (and (and (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (= ($generated@@1 ($generated@@358 $generated@@361 $generated@@362)) 19)) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= ($generated@@359 ($generated@@358 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@358 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@360 ($generated@@358 $generated@@365 $generated@@366)) $generated@@366)
 :pattern ( ($generated@@358 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@359 (type $generated@@367))))
(= (type ($generated@@356 $generated@@367)) ($generated@@82 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@367))
))) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= (type ($generated@@357 $generated@@369 $generated@@370)) ($generated@@358 $generated@@369 $generated@@370))
 :pattern ( ($generated@@357 $generated@@369 $generated@@370))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@T) ) (! (let (($generated@@373 (type $generated@@371)))
 (not ($generated@@0 ($generated@@88 ($generated@@356 ($generated@@357 $generated@@373 $generated@@372)) $generated@@371))))
 :pattern ( (let (($generated@@373 (type $generated@@371)))
($generated@@88 ($generated@@356 ($generated@@357 $generated@@373 $generated@@372)) $generated@@371)))
)))
(assert  (and (and (and (and (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (= ($generated@@1 ($generated@@376 $generated@@379 $generated@@380)) 20)) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= ($generated@@377 ($generated@@376 $generated@@381 $generated@@382)) $generated@@381)
 :pattern ( ($generated@@376 $generated@@381 $generated@@382))
))) (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (! (= ($generated@@378 ($generated@@376 $generated@@383 $generated@@384)) $generated@@384)
 :pattern ( ($generated@@376 $generated@@383 $generated@@384))
))) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@377 (type $generated@@385))))
(= (type ($generated@@374 $generated@@385)) ($generated@@82 $generated@@386 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@385))
))) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= (type ($generated@@375 $generated@@387 $generated@@388)) ($generated@@376 $generated@@387 $generated@@388))
 :pattern ( ($generated@@375 $generated@@387 $generated@@388))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@T) ) (! (let (($generated@@391 (type $generated@@389)))
 (not ($generated@@0 ($generated@@88 ($generated@@374 ($generated@@375 $generated@@391 $generated@@390)) $generated@@389))))
 :pattern ( (let (($generated@@391 (type $generated@@389)))
($generated@@88 ($generated@@374 ($generated@@375 $generated@@391 $generated@@390)) $generated@@389)))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@393) $generated@@153) (= (type $generated@@394) $generated@@153)) (and ($generated@@392 $generated@@394) (<= ($generated@@169 $generated@@394) ($generated@@169 $generated@@393)))) (and (= ($generated@@392 ($generated@@173 $generated@@393 $generated@@394)) ($generated@@392 $generated@@393)) (= ($generated@@169 ($generated@@173 $generated@@393 $generated@@394)) (- ($generated@@169 $generated@@393) ($generated@@169 $generated@@394)))))
 :pattern ( ($generated@@173 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 Int) ) (!  (=> (<= 0 $generated@@395) (and ($generated@@392 ($generated@@174 $generated@@395)) (= ($generated@@169 ($generated@@174 $generated@@395)) $generated@@395)))
 :pattern ( ($generated@@174 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@86 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@82 $generated@@397 $generated@@2)) (= ($generated@@206 $generated@@396) (forall (($generated@@398 T@U) ) (!  (=> (= (type $generated@@398) $generated@@397) (and (<= 0 ($generated ($generated@@88 $generated@@396 $generated@@398))) (<= ($generated ($generated@@88 $generated@@396 $generated@@398)) ($generated@@350 $generated@@396))))
 :pattern ( ($generated@@88 $generated@@396 $generated@@398))
)))))
 :pattern ( ($generated@@206 $generated@@396))
)))
(assert (forall (($generated@@400 T@T) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@400)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@153) ($generated@@283 $generated@@402 $generated@@80)) (and (= ($generated@@345 ($generated@@399 $generated@@81 $generated@@402)) $generated@@402) ($generated@@168 ($generated@@399 $generated@@81 $generated@@402) $generated@@80)))
 :pattern ( ($generated@@283 $generated@@402 $generated@@80))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (= (type $generated@@403) $generated@@143) (= (type $generated@@404) $generated@@81)) (= (type $generated@@405) $generated@@81)) (= ($generated@@141 ($generated@@142 $generated@@403) $generated@@404 $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@153) ($generated@@167 $generated@@406 ($generated@@142 $generated@@403) $generated@@404 $generated@@405))
 :pattern ( ($generated@@167 $generated@@406 ($generated@@142 $generated@@403) $generated@@404 $generated@@405))
))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@403) $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@360 (type $generated@@407))))
(let (($generated@@409 ($generated@@359 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@358 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@357 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) ($generated@@0 ($generated@@88 ($generated@@356 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@356 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@360 (type $generated@@412))))
(= (type ($generated@@411 $generated@@412)) ($generated@@82 $generated@@413 $generated@@4)))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@360 (type $generated@@414))))
(let (($generated@@416 ($generated@@359 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@358 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@357 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@415) ($generated@@0 ($generated@@88 ($generated@@411 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@411 $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@378 (type $generated@@418))))
(let (($generated@@420 ($generated@@377 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@376 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@375 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) ($generated@@0 ($generated@@88 ($generated@@374 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@374 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@378 (type $generated@@423))))
(= (type ($generated@@422 $generated@@423)) ($generated@@82 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@378 (type $generated@@425))))
(let (($generated@@427 ($generated@@377 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@376 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@375 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@426) ($generated@@0 ($generated@@88 ($generated@@422 $generated@@425) $generated@@428)))
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@422 $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (= (type $generated@@429) $generated@@143) (= (type $generated@@430) $generated@@81)) (= (type $generated@@431) $generated@@81)) (= ($generated@@157 ($generated@@142 $generated@@429) $generated@@430 $generated@@431) ($generated@@157 $generated@@429 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@157 ($generated@@142 $generated@@429) $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@82 $generated@@153 $generated@@2)) (= (type $generated@@433) $generated@@68)) (= ($generated@@168 $generated@@432 ($generated@@205 $generated@@433)) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@153) (< 0 ($generated ($generated@@88 $generated@@432 $generated@@434)))) ($generated@@283 $generated@@434 $generated@@433))
 :pattern ( ($generated@@88 $generated@@432 $generated@@434))
))))
 :pattern ( ($generated@@168 $generated@@432 ($generated@@205 $generated@@433)))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@153) (= (type $generated@@436) $generated@@153)) (or (or ($generated@@152 $generated@@435 $generated@@436) (= $generated@@435 $generated@@436)) ($generated@@152 $generated@@436 $generated@@435)))
 :pattern ( ($generated@@152 $generated@@435 $generated@@436) ($generated@@152 $generated@@436 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (= (type $generated@@437) ($generated@@82 $generated@@153 $generated@@4)) (= (type $generated@@438) $generated@@68)) (= (type $generated@@439) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@437 ($generated@@298 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@153) ($generated@@0 ($generated@@88 $generated@@437 $generated@@440))) ($generated@@314 $generated@@440 $generated@@438 $generated@@439))
 :pattern ( ($generated@@88 $generated@@437 $generated@@440))
))))
 :pattern ( ($generated@@78 $generated@@437 ($generated@@298 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (= (type $generated@@441) ($generated@@82 $generated@@153 $generated@@4)) (= (type $generated@@442) $generated@@68)) (= (type $generated@@443) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@441 ($generated@@303 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@153) ($generated@@0 ($generated@@88 $generated@@441 $generated@@444))) ($generated@@314 $generated@@444 $generated@@442 $generated@@443))
 :pattern ( ($generated@@88 $generated@@441 $generated@@444))
))))
 :pattern ( ($generated@@78 $generated@@441 ($generated@@303 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(= ($generated ($generated@@88 ($generated@@351 $generated@@446) $generated@@445)) 0))
 :pattern ( (let (($generated@@446 (type $generated@@445)))
($generated@@88 ($generated@@351 $generated@@446) $generated@@445)))
)))
(assert  (and (forall (($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@449)) ($generated@@82 $generated@@153 $generated@@4))
 :pattern ( ($generated@@447 $generated@@449))
)) (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@360 (type $generated@@450))))
(let (($generated@@452 ($generated@@359 (type $generated@@450))))
(= (type ($generated@@448 $generated@@450)) ($generated@@82 $generated@@452 $generated@@451))))
 :pattern ( ($generated@@448 $generated@@450))
))))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) ($generated@@358 $generated@@153 $generated@@153)) (= (type $generated@@454) $generated@@153)) (= ($generated@@0 ($generated@@88 ($generated@@447 $generated@@453) $generated@@454))  (and ($generated@@0 ($generated@@88 ($generated@@356 $generated@@453) ($generated@@196 ($generated@@399 $generated@@81 $generated@@454)))) (= ($generated@@88 ($generated@@448 $generated@@453) ($generated@@196 ($generated@@399 $generated@@81 $generated@@454))) ($generated@@197 ($generated@@399 $generated@@81 $generated@@454))))))
 :pattern ( ($generated@@88 ($generated@@447 $generated@@453) $generated@@454))
)))
(assert  (and (forall (($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@457)) ($generated@@82 $generated@@153 $generated@@4))
 :pattern ( ($generated@@455 $generated@@457))
)) (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@378 (type $generated@@458))))
(let (($generated@@460 ($generated@@377 (type $generated@@458))))
(= (type ($generated@@456 $generated@@458)) ($generated@@82 $generated@@460 $generated@@459))))
 :pattern ( ($generated@@456 $generated@@458))
))))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) ($generated@@376 $generated@@153 $generated@@153)) (= (type $generated@@462) $generated@@153)) (= ($generated@@0 ($generated@@88 ($generated@@455 $generated@@461) $generated@@462))  (and ($generated@@0 ($generated@@88 ($generated@@374 $generated@@461) ($generated@@196 ($generated@@399 $generated@@81 $generated@@462)))) (= ($generated@@88 ($generated@@456 $generated@@461) ($generated@@196 ($generated@@399 $generated@@81 $generated@@462))) ($generated@@197 ($generated@@399 $generated@@81 $generated@@462))))))
 :pattern ( ($generated@@88 ($generated@@455 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 (type $generated@@464)))
(let (($generated@@466 ($generated@@359 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@358 $generated@@466 $generated@@465)) (= ($generated@@0 ($generated@@88 ($generated@@411 $generated@@463) $generated@@464)) (exists (($generated@@467 T@U) ) (!  (and (= (type $generated@@467) $generated@@466) (and ($generated@@0 ($generated@@88 ($generated@@356 $generated@@463) $generated@@467)) (= $generated@@464 ($generated@@88 ($generated@@448 $generated@@463) $generated@@467))))
 :pattern ( ($generated@@88 ($generated@@356 $generated@@463) $generated@@467))
 :pattern ( ($generated@@88 ($generated@@448 $generated@@463) $generated@@467))
))))))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 (type $generated@@469)))
(let (($generated@@471 ($generated@@377 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@376 $generated@@471 $generated@@470)) (= ($generated@@0 ($generated@@88 ($generated@@422 $generated@@468) $generated@@469)) (exists (($generated@@472 T@U) ) (!  (and (= (type $generated@@472) $generated@@471) (and ($generated@@0 ($generated@@88 ($generated@@374 $generated@@468) $generated@@472)) (= $generated@@469 ($generated@@88 ($generated@@456 $generated@@468) $generated@@472))))
 :pattern ( ($generated@@88 ($generated@@374 $generated@@468) $generated@@472))
 :pattern ( ($generated@@88 ($generated@@456 $generated@@468) $generated@@472))
))))))
 :pattern ( ($generated@@88 ($generated@@422 $generated@@468) $generated@@469))
)))
(assert  (=> (<= 1 $generated@@269) (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (and (= (type $generated@@474) $generated@@143) (= (type $generated@@475) $generated@@81)) (= (type $generated@@476) $generated@@81)) (or ($generated@@473 $generated@@475 $generated@@476) (and (not (= 1 $generated@@269)) (and ($generated@@168 $generated@@475 $generated@@80) ($generated@@168 $generated@@476 $generated@@80))))) (and (=> (not ($generated@@170 $generated@@475)) (let (($generated@@477 ($generated@@175 $generated@@475)))
($generated@@473 $generated@@477 $generated@@476))) (= ($generated@@157 ($generated@@142 $generated@@474) $generated@@475 $generated@@476) (ite ($generated@@170 $generated@@475) $generated@@476 (let (($generated@@478 ($generated@@175 $generated@@475)))
(let (($generated@@479 ($generated@@172 $generated@@475)))
($generated@@79 $generated@@479 ($generated@@157 $generated@@474 $generated@@478 $generated@@476))))))))
 :pattern ( ($generated@@157 ($generated@@142 $generated@@474) $generated@@475 $generated@@476))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (! (= (type ($generated@@480 $generated@@481 $generated@@482)) $generated@@68)
 :pattern ( ($generated@@480 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (and (= (type $generated@@483) ($generated@@358 $generated@@153 $generated@@153)) (= (type $generated@@484) $generated@@68)) (= (type $generated@@485) $generated@@68)) (= (type $generated@@486) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@483 ($generated@@480 $generated@@484 $generated@@485) $generated@@486) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@153) ($generated@@0 ($generated@@88 ($generated@@356 $generated@@483) $generated@@487))) (and ($generated@@314 ($generated@@88 ($generated@@448 $generated@@483) $generated@@487) $generated@@485 $generated@@486) ($generated@@314 $generated@@487 $generated@@484 $generated@@486)))
 :pattern ( ($generated@@88 ($generated@@448 $generated@@483) $generated@@487))
 :pattern ( ($generated@@88 ($generated@@356 $generated@@483) $generated@@487))
))))
 :pattern ( ($generated@@78 $generated@@483 ($generated@@480 $generated@@484 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (and (= (type $generated@@491) ($generated@@376 $generated@@153 $generated@@153)) (= (type $generated@@492) $generated@@68)) (= (type $generated@@493) $generated@@68)) (= (type $generated@@494) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@491 ($generated@@488 $generated@@492 $generated@@493) $generated@@494) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@153) ($generated@@0 ($generated@@88 ($generated@@374 $generated@@491) $generated@@495))) (and ($generated@@314 ($generated@@88 ($generated@@456 $generated@@491) $generated@@495) $generated@@493 $generated@@494) ($generated@@314 $generated@@495 $generated@@492 $generated@@494)))
 :pattern ( ($generated@@88 ($generated@@456 $generated@@491) $generated@@495))
 :pattern ( ($generated@@88 ($generated@@374 $generated@@491) $generated@@495))
))))
 :pattern ( ($generated@@78 $generated@@491 ($generated@@488 $generated@@492 $generated@@493) $generated@@494))
)))
(assert  (=> (<= 1 $generated@@269) (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@143) (or $generated@@271 (not (= 1 $generated@@269)))) (and $generated@@271 (= ($generated@@270 ($generated@@142 $generated@@496)) ($generated@@310 ($generated@@79 ($generated@@308 0) ($generated@@310 ($generated@@270 $generated@@496)))))))
 :pattern ( ($generated@@270 ($generated@@142 $generated@@496)))
))))
(assert  (=> (<= 1 $generated@@269) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@143) (or $generated@@275 (not (= 1 $generated@@269)))) (and $generated@@275 (= ($generated@@274 ($generated@@142 $generated@@497)) ($generated@@310 ($generated@@79 ($generated@@308 1) ($generated@@310 ($generated@@274 $generated@@497)))))))
 :pattern ( ($generated@@274 ($generated@@142 $generated@@497)))
))))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@81) ($generated@@168 $generated@@498 $generated@@80)) (or ($generated@@170 $generated@@498) ($generated@@171 $generated@@498)))
 :pattern ( ($generated@@171 $generated@@498) ($generated@@168 $generated@@498 $generated@@80))
 :pattern ( ($generated@@170 $generated@@498) ($generated@@168 $generated@@498 $generated@@80))
)))
(assert (forall (($generated@@500 T@T) ) (! (= (type ($generated@@499 $generated@@500)) ($generated@@82 $generated@@500 $generated@@4))
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@378 (type $generated@@501))))
(let (($generated@@503 ($generated@@377 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@376 $generated@@503 $generated@@502)) (= (= $generated@@501 ($generated@@375 $generated@@503 $generated@@502)) (= ($generated@@374 $generated@@501) ($generated@@499 $generated@@503))))))
 :pattern ( ($generated@@374 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@378 (type $generated@@504))))
(let (($generated@@506 ($generated@@377 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@376 $generated@@506 $generated@@505)) (= (= $generated@@504 ($generated@@375 $generated@@506 $generated@@505)) (= ($generated@@422 $generated@@504) ($generated@@499 $generated@@505))))))
 :pattern ( ($generated@@422 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@378 (type $generated@@507))))
(let (($generated@@509 ($generated@@377 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@376 $generated@@509 $generated@@508)) (= (= $generated@@507 ($generated@@375 $generated@@509 $generated@@508)) (= ($generated@@455 $generated@@507) ($generated@@499 $generated@@153))))))
 :pattern ( ($generated@@455 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@360 (type $generated@@510))))
(let (($generated@@512 ($generated@@359 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@358 $generated@@512 $generated@@511)) (or (= $generated@@510 ($generated@@357 $generated@@512 $generated@@511)) (exists (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (and (and (= (type $generated@@513) $generated@@153) (= (type $generated@@514) $generated@@153)) ($generated@@0 ($generated@@88 ($generated@@447 $generated@@510) ($generated@@345 ($generated@@282 $generated@@513 $generated@@514)))))
 :no-pattern (type $generated@@513)
 :no-pattern (type $generated@@514)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
 :no-pattern ($generated $generated@@514)
 :no-pattern ($generated@@0 $generated@@514)
))))))
 :pattern ( ($generated@@447 $generated@@510))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@378 (type $generated@@515))))
(let (($generated@@517 ($generated@@377 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@376 $generated@@517 $generated@@516)) (or (= $generated@@515 ($generated@@375 $generated@@517 $generated@@516)) (exists (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (and (and (= (type $generated@@518) $generated@@153) (= (type $generated@@519) $generated@@153)) ($generated@@0 ($generated@@88 ($generated@@455 $generated@@515) ($generated@@345 ($generated@@282 $generated@@518 $generated@@519)))))
 :no-pattern (type $generated@@518)
 :no-pattern (type $generated@@519)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
 :no-pattern ($generated $generated@@519)
 :no-pattern ($generated@@0 $generated@@519)
))))))
 :pattern ( ($generated@@455 $generated@@515))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@153) ($generated@@283 $generated@@520 $generated@@46)) (and (= ($generated@@345 ($generated@@399 $generated@@2 $generated@@520)) $generated@@520) ($generated@@168 ($generated@@399 $generated@@2 $generated@@520) $generated@@46)))
 :pattern ( ($generated@@283 $generated@@520 $generated@@46))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@153) ($generated@@283 $generated@@521 $generated@@47)) (and (= ($generated@@345 ($generated@@399 $generated@@3 $generated@@521)) $generated@@521) ($generated@@168 ($generated@@399 $generated@@3 $generated@@521) $generated@@47)))
 :pattern ( ($generated@@283 $generated@@521 $generated@@47))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@153) ($generated@@283 $generated@@522 $generated@@44)) (and (= ($generated@@345 ($generated@@399 $generated@@4 $generated@@522)) $generated@@522) ($generated@@168 ($generated@@399 $generated@@4 $generated@@522) $generated@@44)))
 :pattern ( ($generated@@283 $generated@@522 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@523) 21))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@153) ($generated@@283 $generated@@524 $generated@@45)) (and (= ($generated@@345 ($generated@@399 $generated@@523 $generated@@524)) $generated@@524) ($generated@@168 ($generated@@399 $generated@@523 $generated@@524) $generated@@45)))
 :pattern ( ($generated@@283 $generated@@524 $generated@@45))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@283 ($generated@@345 $generated@@525) $generated@@526) ($generated@@168 $generated@@525 $generated@@526)))
 :pattern ( ($generated@@283 ($generated@@345 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@153) (<= 0 ($generated@@169 $generated@@527)))
 :pattern ( ($generated@@169 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@86 (type $generated@@528))))
 (=> (= (type $generated@@528) ($generated@@82 $generated@@529 $generated@@2)) (<= 0 ($generated@@350 $generated@@528))))
 :pattern ( ($generated@@350 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@332 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@331 $generated@@531)) (<= 0 ($generated@@330 $generated@@530))))
 :pattern ( ($generated@@330 $generated@@530))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@68)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@68) (= (type $generated@@535) $generated@@68)) (= ($generated@@532 ($generated@@480 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@480 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@68)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@68) (= (type $generated@@539) $generated@@68)) (= ($generated@@536 ($generated@@480 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@480 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@68) (= (type $generated@@541) $generated@@68)) (= ($generated@@76 ($generated@@480 $generated@@540 $generated@@541)) $generated@@58))
 :pattern ( ($generated@@480 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@68) (= (type $generated@@545) $generated@@68)) (= ($generated@@542 ($generated@@488 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@488 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@68)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@68) (= (type $generated@@549) $generated@@68)) (= ($generated@@546 ($generated@@488 $generated@@548 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@488 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@68) (= (type $generated@@551) $generated@@68)) (= ($generated@@76 ($generated@@488 $generated@@550 $generated@@551)) $generated@@59))
 :pattern ( ($generated@@488 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@153) (= (type $generated@@553) $generated@@153)) (= ($generated@@202 ($generated@@282 $generated@@552 $generated@@553)) $generated@@61))
 :pattern ( ($generated@@282 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@68)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@68) (= (type $generated@@557) $generated@@68)) (= ($generated@@554 ($generated@@189 $generated@@556 $generated@@557)) $generated@@556))
 :pattern ( ($generated@@189 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@68)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@68) (= (type $generated@@561) $generated@@68)) (= ($generated@@558 ($generated@@189 $generated@@560 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@189 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@153) (= (type $generated@@563) $generated@@153)) (= ($generated@@196 ($generated@@282 $generated@@562 $generated@@563)) $generated@@562))
 :pattern ( ($generated@@282 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@153) (= (type $generated@@565) $generated@@153)) (= ($generated@@197 ($generated@@282 $generated@@564 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@282 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 Int) ($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@81) (= ($generated@@202 ($generated@@79 $generated@@566 $generated@@567)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 Int) ($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@81) (= ($generated@@172 ($generated@@79 $generated@@568 $generated@@569)) $generated@@568))
 :pattern ( ($generated@@79 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 Int) ($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@81) (= ($generated@@175 ($generated@@79 $generated@@570 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@79 $generated@@570 $generated@@571))
)))
(assert  (and (forall (($generated@@574 T@U) ) (! (= (type ($generated@@572 $generated@@574)) $generated@@68)
 :pattern ( ($generated@@572 $generated@@574))
)) (forall (($generated@@575 T@U) ($generated@@576 Int) ) (! (let (($generated@@577 ($generated@@332 (type $generated@@575))))
(= (type ($generated@@573 $generated@@575 $generated@@576)) $generated@@577))
 :pattern ( ($generated@@573 $generated@@575 $generated@@576))
))))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@331 $generated@@153)) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@578 ($generated@@572 $generated@@579) $generated@@580) (forall (($generated@@581 Int) ) (!  (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@330 $generated@@578))) ($generated@@314 ($generated@@573 $generated@@578 $generated@@581) $generated@@579 $generated@@580))
 :pattern ( ($generated@@573 $generated@@578 $generated@@581))
))))
 :pattern ( ($generated@@78 $generated@@578 ($generated@@572 $generated@@579) $generated@@580))
)))
(assert (forall (($generated@@583 Int) ) (! (= ($generated@@582 ($generated@@148 $generated@@583)) $generated@@583)
 :pattern ( ($generated@@148 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@68)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@68) (= ($generated@@584 ($generated@@298 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@298 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@68) (= ($generated@@76 ($generated@@298 $generated@@587)) $generated@@54))
 :pattern ( ($generated@@298 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@68)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@68) (= ($generated@@588 ($generated@@303 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@303 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@68) (= ($generated@@76 ($generated@@303 $generated@@591)) $generated@@55))
 :pattern ( ($generated@@303 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@68)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@68) (= ($generated@@592 ($generated@@205 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@205 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@68) (= ($generated@@76 ($generated@@205 $generated@@595)) $generated@@56))
 :pattern ( ($generated@@205 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@68)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@68) (= ($generated@@596 ($generated@@572 $generated@@598)) $generated@@598))
 :pattern ( ($generated@@572 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@68) (= ($generated@@76 ($generated@@572 $generated@@599)) $generated@@57))
 :pattern ( ($generated@@572 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@600)))
(= ($generated@@399 $generated@@601 ($generated@@345 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@345 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@358 $generated@@153 $generated@@153)) (= (type $generated@@603) $generated@@68)) (= (type $generated@@604) $generated@@68)) (= ($generated@@168 $generated@@602 ($generated@@480 $generated@@603 $generated@@604)) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@153) ($generated@@0 ($generated@@88 ($generated@@356 $generated@@602) $generated@@605))) (and ($generated@@283 ($generated@@88 ($generated@@448 $generated@@602) $generated@@605) $generated@@604) ($generated@@283 $generated@@605 $generated@@603)))
 :pattern ( ($generated@@88 ($generated@@448 $generated@@602) $generated@@605))
 :pattern ( ($generated@@88 ($generated@@356 $generated@@602) $generated@@605))
))))
 :pattern ( ($generated@@168 $generated@@602 ($generated@@480 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@606) ($generated@@376 $generated@@153 $generated@@153)) (= (type $generated@@607) $generated@@68)) (= (type $generated@@608) $generated@@68)) (= ($generated@@168 $generated@@606 ($generated@@488 $generated@@607 $generated@@608)) (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@153) ($generated@@0 ($generated@@88 ($generated@@374 $generated@@606) $generated@@609))) (and ($generated@@283 ($generated@@88 ($generated@@456 $generated@@606) $generated@@609) $generated@@608) ($generated@@283 $generated@@609 $generated@@607)))
 :pattern ( ($generated@@88 ($generated@@456 $generated@@606) $generated@@609))
 :pattern ( ($generated@@88 ($generated@@374 $generated@@606) $generated@@609))
))))
 :pattern ( ($generated@@168 $generated@@606 ($generated@@488 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@153) (= (type $generated@@611) $generated@@153)) (and (and (and (=> ($generated@@152 $generated@@610 $generated@@611) (not (= $generated@@610 $generated@@611))) (=> (and ($generated@@392 $generated@@610) (not ($generated@@392 $generated@@611))) ($generated@@152 $generated@@610 $generated@@611))) (=> (and ($generated@@392 $generated@@610) ($generated@@392 $generated@@611)) (= ($generated@@152 $generated@@610 $generated@@611) (< ($generated@@169 $generated@@610) ($generated@@169 $generated@@611))))) (=> (and ($generated@@152 $generated@@610 $generated@@611) ($generated@@392 $generated@@611)) ($generated@@392 $generated@@610))))
 :pattern ( ($generated@@152 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@153) (= (type $generated@@615) $generated@@153)) (< ($generated@@612 $generated@@614) ($generated@@613 ($generated@@282 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@282 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@153) (= (type $generated@@617) $generated@@153)) (< ($generated@@612 $generated@@617) ($generated@@613 ($generated@@282 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@282 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@143) (= ($generated@@270 $generated@@618) ($generated@@270 $generated@@159)))
 :pattern ( ($generated@@270 ($generated@@158 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@143) (= ($generated@@274 $generated@@619) ($generated@@274 $generated@@159)))
 :pattern ( ($generated@@274 ($generated@@158 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@153) (= (type $generated@@621) $generated@@68)) (= (type $generated@@622) $generated@@68)) ($generated@@283 $generated@@620 ($generated@@480 $generated@@621 $generated@@622))) (and (= ($generated@@345 ($generated@@399 ($generated@@358 $generated@@153 $generated@@153) $generated@@620)) $generated@@620) ($generated@@168 ($generated@@399 ($generated@@358 $generated@@153 $generated@@153) $generated@@620) ($generated@@480 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@283 $generated@@620 ($generated@@480 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@153) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) $generated@@68)) ($generated@@283 $generated@@623 ($generated@@488 $generated@@624 $generated@@625))) (and (= ($generated@@345 ($generated@@399 ($generated@@376 $generated@@153 $generated@@153) $generated@@623)) $generated@@623) ($generated@@168 ($generated@@399 ($generated@@376 $generated@@153 $generated@@153) $generated@@623) ($generated@@488 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@283 $generated@@623 ($generated@@488 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@68) (= (type $generated@@627) $generated@@68)) (= (type $generated@@628) $generated@@153)) ($generated@@283 $generated@@628 ($generated@@189 $generated@@626 $generated@@627))) (and (= ($generated@@345 ($generated@@399 $generated@@81 $generated@@628)) $generated@@628) ($generated@@168 ($generated@@399 $generated@@81 $generated@@628) ($generated@@189 $generated@@626 $generated@@627))))
 :pattern ( ($generated@@283 $generated@@628 ($generated@@189 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ) (! (let (($generated@@630 (type $generated@@629)))
 (not ($generated@@0 ($generated@@88 ($generated@@499 $generated@@630) $generated@@629))))
 :pattern ( (let (($generated@@630 (type $generated@@629)))
($generated@@88 ($generated@@499 $generated@@630) $generated@@629)))
)))
(assert  (=> (<= 1 $generated@@269) (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@143) (= (type $generated@@632) $generated@@81)) (= (type $generated@@633) $generated@@81)) (or ($generated@@473 $generated@@632 $generated@@633) (and (not (= 1 $generated@@269)) (and ($generated@@168 $generated@@632 $generated@@80) ($generated@@168 $generated@@633 $generated@@80))))) ($generated@@168 ($generated@@157 $generated@@631 $generated@@632 $generated@@633) $generated@@80))
 :pattern ( ($generated@@157 $generated@@631 $generated@@632 $generated@@633))
))))
(assert (forall (($generated@@635 T@U) ) (! (= (type ($generated@@634 $generated@@635)) $generated@@73)
 :pattern ( ($generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@68) (= (type $generated@@637) $generated@@68)) (and (= ($generated@@76 ($generated@@189 $generated@@636 $generated@@637)) $generated@@62) (= ($generated@@634 ($generated@@189 $generated@@636 $generated@@637)) $generated@@66)))
 :pattern ( ($generated@@189 $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@81) (= (type $generated@@639) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@639) (and ($generated@@171 $generated@@638) ($generated@@78 $generated@@638 $generated@@80 $generated@@639)))) ($generated@@78 ($generated@@8 ($generated@@172 $generated@@638)) $generated@@46 $generated@@639))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@172 $generated@@638)) $generated@@46 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@81) (= ($generated@@612 ($generated@@345 $generated@@640)) ($generated@@613 $generated@@640)))
 :pattern ( ($generated@@612 ($generated@@345 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@143) (= ($generated@@270 ($generated@@142 $generated@@641)) ($generated@@270 $generated@@641)))
 :pattern ( ($generated@@270 ($generated@@142 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@143) (= ($generated@@274 ($generated@@142 $generated@@642)) ($generated@@274 $generated@@642)))
 :pattern ( ($generated@@274 ($generated@@142 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@153) ($generated@@283 $generated@@643 ($generated@@148 0))) (and (= ($generated@@345 ($generated@@399 $generated@@2 $generated@@643)) $generated@@643) ($generated@@168 ($generated@@399 ($generated@@82 $generated@@153 $generated@@4) $generated@@643) ($generated@@148 0))))
 :pattern ( ($generated@@283 $generated@@643 ($generated@@148 0)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@644) $generated@@153) (= (type $generated@@645) $generated@@68)) ($generated@@283 $generated@@644 ($generated@@298 $generated@@645))) (and (= ($generated@@345 ($generated@@399 ($generated@@82 $generated@@153 $generated@@4) $generated@@644)) $generated@@644) ($generated@@168 ($generated@@399 ($generated@@82 $generated@@153 $generated@@4) $generated@@644) ($generated@@298 $generated@@645))))
 :pattern ( ($generated@@283 $generated@@644 ($generated@@298 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@646) $generated@@153) (= (type $generated@@647) $generated@@68)) ($generated@@283 $generated@@646 ($generated@@303 $generated@@647))) (and (= ($generated@@345 ($generated@@399 ($generated@@82 $generated@@153 $generated@@4) $generated@@646)) $generated@@646) ($generated@@168 ($generated@@399 ($generated@@82 $generated@@153 $generated@@4) $generated@@646) ($generated@@303 $generated@@647))))
 :pattern ( ($generated@@283 $generated@@646 ($generated@@303 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@648) $generated@@153) (= (type $generated@@649) $generated@@68)) ($generated@@283 $generated@@648 ($generated@@205 $generated@@649))) (and (= ($generated@@345 ($generated@@399 ($generated@@82 $generated@@153 $generated@@2) $generated@@648)) $generated@@648) ($generated@@168 ($generated@@399 ($generated@@82 $generated@@153 $generated@@2) $generated@@648) ($generated@@205 $generated@@649))))
 :pattern ( ($generated@@283 $generated@@648 ($generated@@205 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (= (type $generated@@650) $generated@@153) (= (type $generated@@651) $generated@@68)) ($generated@@283 $generated@@650 ($generated@@572 $generated@@651))) (and (= ($generated@@345 ($generated@@399 ($generated@@331 $generated@@153) $generated@@650)) $generated@@650) ($generated@@168 ($generated@@399 ($generated@@331 $generated@@153) $generated@@650) ($generated@@572 $generated@@651))))
 :pattern ( ($generated@@283 $generated@@650 ($generated@@572 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@153) ($generated@@392 $generated@@652)) (= $generated@@652 ($generated@@174 ($generated@@169 $generated@@652))))
 :pattern ( ($generated@@169 $generated@@652))
 :pattern ( ($generated@@392 $generated@@652))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@634 $generated@@80) $generated@@67))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (= (type $generated@@653) ($generated@@82 $generated@@153 $generated@@2)) (= (type $generated@@654) $generated@@68)) (= (type $generated@@655) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@653 ($generated@@205 $generated@@654) $generated@@655) (forall (($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@153) (< 0 ($generated ($generated@@88 $generated@@653 $generated@@656)))) ($generated@@314 $generated@@656 $generated@@654 $generated@@655))
 :pattern ( ($generated@@88 $generated@@653 $generated@@656))
))))
 :pattern ( ($generated@@78 $generated@@653 ($generated@@205 $generated@@654) $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (= (type $generated@@657) $generated@@153) (= (type $generated@@658) $generated@@153)) (and ($generated@@392 $generated@@658) (<= ($generated@@169 $generated@@658) ($generated@@169 $generated@@657)))) (or (and (= $generated@@658 ($generated@@174 0)) (= ($generated@@173 $generated@@657 $generated@@658) $generated@@657)) (and (not (= $generated@@658 ($generated@@174 0))) ($generated@@152 ($generated@@173 $generated@@657 $generated@@658) $generated@@657))))
 :pattern ( ($generated@@173 $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) $generated@@81) (= (type $generated@@660) $generated@@68)) (= (type $generated@@661) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@661) (and ($generated@@188 $generated@@659) (exists (($generated@@662 T@U) ) (!  (and (= (type $generated@@662) $generated@@68) ($generated@@78 $generated@@659 ($generated@@189 $generated@@660 $generated@@662) $generated@@661))
 :pattern ( ($generated@@78 $generated@@659 ($generated@@189 $generated@@660 $generated@@662) $generated@@661))
))))) ($generated@@314 ($generated@@196 $generated@@659) $generated@@660 $generated@@661))
 :pattern ( ($generated@@314 ($generated@@196 $generated@@659) $generated@@660 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) $generated@@81) (= (type $generated@@664) $generated@@68)) (= (type $generated@@665) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@665) (and ($generated@@188 $generated@@663) (exists (($generated@@666 T@U) ) (!  (and (= (type $generated@@666) $generated@@68) ($generated@@78 $generated@@663 ($generated@@189 $generated@@666 $generated@@664) $generated@@665))
 :pattern ( ($generated@@78 $generated@@663 ($generated@@189 $generated@@666 $generated@@664) $generated@@665))
))))) ($generated@@314 ($generated@@197 $generated@@663) $generated@@664 $generated@@665))
 :pattern ( ($generated@@314 ($generated@@197 $generated@@663) $generated@@664 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (= (type $generated@@667) $generated@@81) (= (type $generated@@668) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@668) (and ($generated@@171 $generated@@667) ($generated@@78 $generated@@667 $generated@@80 $generated@@668)))) ($generated@@78 ($generated@@175 $generated@@667) $generated@@80 $generated@@668))
 :pattern ( ($generated@@78 ($generated@@175 $generated@@667) $generated@@80 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@153) (= (type $generated@@670) $generated@@153)) (= ($generated@@282 ($generated@@310 $generated@@669) ($generated@@310 $generated@@670)) ($generated@@310 ($generated@@282 $generated@@669 $generated@@670))))
 :pattern ( ($generated@@282 ($generated@@310 $generated@@669) ($generated@@310 $generated@@670)))
)))
(assert (forall (($generated@@671 Int) ) (! (= ($generated@@345 ($generated@@8 ($generated@@308 $generated@@671))) ($generated@@310 ($generated@@345 ($generated@@8 $generated@@671))))
 :pattern ( ($generated@@345 ($generated@@8 ($generated@@308 $generated@@671))))
)))
(assert (forall (($generated@@672 T@U) ) (! (= ($generated@@345 ($generated@@310 $generated@@672)) ($generated@@310 ($generated@@345 $generated@@672)))
 :pattern ( ($generated@@345 ($generated@@310 $generated@@672)))
)))
(assert (forall (($generated@@673 Int) ($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@81) (= ($generated@@168 ($generated@@79 $generated@@673 $generated@@674) $generated@@80)  (and ($generated@@168 ($generated@@8 $generated@@673) $generated@@46) ($generated@@168 $generated@@674 $generated@@80))))
 :pattern ( ($generated@@168 ($generated@@79 $generated@@673 $generated@@674) $generated@@80))
)))
(assert (forall (($generated@@675 T@U) ) (! (let (($generated@@676 ($generated@@332 (type $generated@@675))))
 (=> (and (= (type $generated@@675) ($generated@@331 $generated@@676)) (= ($generated@@330 $generated@@675) 0)) (= $generated@@675 ($generated@@329 $generated@@676))))
 :pattern ( ($generated@@330 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (! (let (($generated@@680 (type $generated@@678)))
 (=> (and (and (= (type $generated@@677) ($generated@@82 $generated@@680 $generated@@2)) (= (type $generated@@679) $generated@@2)) (<= 0 ($generated $generated@@679))) (= ($generated@@350 ($generated@@89 $generated@@677 $generated@@678 $generated@@679)) (+ (- ($generated@@350 $generated@@677) ($generated ($generated@@88 $generated@@677 $generated@@678))) ($generated $generated@@679)))))
 :pattern ( ($generated@@350 ($generated@@89 $generated@@677 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@682) $generated@@2)) ($generated@@78 $generated@@682 $generated@@46 $generated@@681))
 :pattern ( ($generated@@78 $generated@@682 $generated@@46 $generated@@681))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@684) $generated@@3)) ($generated@@78 $generated@@684 $generated@@47 $generated@@683))
 :pattern ( ($generated@@78 $generated@@684 $generated@@47 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@686) $generated@@4)) ($generated@@78 $generated@@686 $generated@@44 $generated@@685))
 :pattern ( ($generated@@78 $generated@@686 $generated@@44 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@688) $generated@@523)) ($generated@@78 $generated@@688 $generated@@45 $generated@@687))
 :pattern ( ($generated@@78 $generated@@688 $generated@@45 $generated@@687))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@690) $generated@@153)) ($generated@@78 $generated@@690 $generated@@48 $generated@@689))
 :pattern ( ($generated@@78 $generated@@690 $generated@@48 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) ($generated@@331 $generated@@153)) (= (type $generated@@692) $generated@@68)) (= ($generated@@168 $generated@@691 ($generated@@572 $generated@@692)) (forall (($generated@@693 Int) ) (!  (=> (and (<= 0 $generated@@693) (< $generated@@693 ($generated@@330 $generated@@691))) ($generated@@283 ($generated@@573 $generated@@691 $generated@@693) $generated@@692))
 :pattern ( ($generated@@573 $generated@@691 $generated@@693))
))))
 :pattern ( ($generated@@168 $generated@@691 ($generated@@572 $generated@@692)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 Int) ) (!  (=> (= (type $generated@@695) ($generated@@331 $generated@@153)) (=> (and (<= 0 $generated@@696) (< $generated@@696 ($generated@@330 $generated@@695))) (< ($generated@@613 ($generated@@399 $generated@@81 ($generated@@573 $generated@@695 $generated@@696))) ($generated@@694 $generated@@695))))
 :pattern ( ($generated@@613 ($generated@@399 $generated@@81 ($generated@@573 $generated@@695 $generated@@696))))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@697) $generated@@153) (= (type $generated@@698) $generated@@143)) (= (type $generated@@699) $generated@@81)) (= (type $generated@@700) $generated@@81)) (= $generated@@699 $generated@@700)) ($generated@@167 $generated@@697 ($generated@@142 $generated@@698) $generated@@699 $generated@@700))
 :pattern ( ($generated@@167 $generated@@697 ($generated@@142 $generated@@698) $generated@@699 $generated@@700))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) ($generated@@358 $generated@@153 $generated@@153)) (= (type $generated@@702) $generated@@68)) (= (type $generated@@703) $generated@@68)) ($generated@@168 $generated@@701 ($generated@@480 $generated@@702 $generated@@703))) (and (and ($generated@@168 ($generated@@356 $generated@@701) ($generated@@298 $generated@@702)) ($generated@@168 ($generated@@411 $generated@@701) ($generated@@298 $generated@@703))) ($generated@@168 ($generated@@447 $generated@@701) ($generated@@298 ($generated@@189 $generated@@702 $generated@@703)))))
 :pattern ( ($generated@@168 $generated@@701 ($generated@@480 $generated@@702 $generated@@703)))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (and (= (type $generated@@704) ($generated@@376 $generated@@153 $generated@@153)) (= (type $generated@@705) $generated@@68)) (= (type $generated@@706) $generated@@68)) ($generated@@168 $generated@@704 ($generated@@488 $generated@@705 $generated@@706))) (and (and ($generated@@168 ($generated@@374 $generated@@704) ($generated@@303 $generated@@705)) ($generated@@168 ($generated@@422 $generated@@704) ($generated@@303 $generated@@706))) ($generated@@168 ($generated@@455 $generated@@704) ($generated@@303 ($generated@@189 $generated@@705 $generated@@706)))))
 :pattern ( ($generated@@168 $generated@@704 ($generated@@488 $generated@@705 $generated@@706)))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@2) ($generated@@168 $generated@@707 $generated@@46))
 :pattern ( ($generated@@168 $generated@@707 $generated@@46))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@3) ($generated@@168 $generated@@708 $generated@@47))
 :pattern ( ($generated@@168 $generated@@708 $generated@@47))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@4) ($generated@@168 $generated@@709 $generated@@44))
 :pattern ( ($generated@@168 $generated@@709 $generated@@44))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@523) ($generated@@168 $generated@@710 $generated@@45))
 :pattern ( ($generated@@168 $generated@@710 $generated@@45))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@153) ($generated@@168 $generated@@711 $generated@@48))
 :pattern ( ($generated@@168 $generated@@711 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 (T@U) Bool)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@712) $generated@@153) (= (type $generated@@716) $generated@@153)) (= (type $generated@@717) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@715) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@713) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@718) ($generated@@215 $generated@@83 $generated@@4))) (= (type $generated@@719) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@720  (and (=> (= (ControlFlow 0 2) (- 0 4)) (or ($generated@@167 $generated@@712 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@157 ($generated@@142 $generated@@159) ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159))) ($generated@@310 ($generated@@274 ($generated@@142 $generated@@159))))) ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159)))) (=> (< 0 ($generated@@169 $generated@@712)) (=> ($generated@@170 ($generated@@310 ($generated@@157 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))) ($generated@@310 ($generated@@274 ($generated@@142 ($generated@@142 $generated@@159))))))) ($generated@@170 ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159))))))))) (=> (or ($generated@@167 $generated@@712 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@157 ($generated@@142 $generated@@159) ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159))) ($generated@@310 ($generated@@274 ($generated@@142 $generated@@159))))) ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159)))) (=> (< 0 ($generated@@169 $generated@@712)) (=> ($generated@@170 ($generated@@310 ($generated@@157 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))) ($generated@@310 ($generated@@274 ($generated@@142 ($generated@@142 $generated@@159))))))) ($generated@@170 ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or ($generated@@167 $generated@@712 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@157 ($generated@@142 $generated@@159) ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159))) ($generated@@310 ($generated@@274 ($generated@@142 $generated@@159))))) ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159)))) (=> (< 0 ($generated@@169 $generated@@712)) (=> ($generated@@171 ($generated@@310 ($generated@@157 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))) ($generated@@310 ($generated@@274 ($generated@@142 ($generated@@142 $generated@@159))))))) (and ($generated@@171 ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159))))) (and (= ($generated@@172 ($generated@@310 ($generated@@157 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))) ($generated@@310 ($generated@@274 ($generated@@142 ($generated@@142 $generated@@159))))))) ($generated@@172 ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))))) ($generated@@167 ($generated@@173 $generated@@712 ($generated@@174 1)) ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@175 ($generated@@310 ($generated@@157 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))) ($generated@@310 ($generated@@274 ($generated@@142 ($generated@@142 $generated@@159))))))) ($generated@@175 ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))))))))))) (=> (or ($generated@@167 $generated@@712 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@157 ($generated@@142 $generated@@159) ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159))) ($generated@@310 ($generated@@274 ($generated@@142 $generated@@159))))) ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159)))) (=> (< 0 ($generated@@169 $generated@@712)) (=> ($generated@@171 ($generated@@310 ($generated@@157 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))) ($generated@@310 ($generated@@274 ($generated@@142 ($generated@@142 $generated@@159))))))) (and ($generated@@171 ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159))))) (and (= ($generated@@172 ($generated@@310 ($generated@@157 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))) ($generated@@310 ($generated@@274 ($generated@@142 ($generated@@142 $generated@@159))))))) ($generated@@172 ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))))) ($generated@@167 ($generated@@173 $generated@@712 ($generated@@174 1)) ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@175 ($generated@@310 ($generated@@157 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))) ($generated@@310 ($generated@@274 ($generated@@142 ($generated@@142 $generated@@159))))))) ($generated@@175 ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159))))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (or ($generated@@167 $generated@@712 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@157 ($generated@@142 $generated@@159) ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159))) ($generated@@310 ($generated@@274 ($generated@@142 $generated@@159))))) ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159)))) (or (=> (< 0 ($generated@@169 $generated@@712)) (and (=> ($generated@@170 ($generated@@310 ($generated@@157 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))) ($generated@@310 ($generated@@274 ($generated@@142 ($generated@@142 $generated@@159))))))) ($generated@@170 ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))))) (=> ($generated@@171 ($generated@@310 ($generated@@157 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))) ($generated@@310 ($generated@@274 ($generated@@142 ($generated@@142 $generated@@159))))))) (and ($generated@@171 ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159))))) (and (= ($generated@@172 ($generated@@310 ($generated@@157 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))) ($generated@@310 ($generated@@274 ($generated@@142 ($generated@@142 $generated@@159))))))) ($generated@@172 ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))))) ($generated@@167 ($generated@@173 $generated@@712 ($generated@@174 1)) ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@175 ($generated@@310 ($generated@@157 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159)))) ($generated@@310 ($generated@@274 ($generated@@142 ($generated@@142 $generated@@159))))))) ($generated@@175 ($generated@@310 ($generated@@270 ($generated@@142 ($generated@@142 $generated@@159))))))))))) (=> (and (not (= $generated@@712 ($generated@@174 0))) (= ($generated@@169 $generated@@712) 0)) ($generated@@141 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@157 ($generated@@142 $generated@@159) ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159))) ($generated@@310 ($generated@@274 ($generated@@142 $generated@@159))))) ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159))))))))))))))
(let (($generated@@721  (=> (<= ($generated@@169 $generated@@712) 0) (=> (and (and (and ($generated@@85 $generated@@713) ($generated@@714 $generated@@713)) (= $generated@@715 $generated@@713)) (and (forall (($generated@@722 T@U) ) (!  (=> (and (= (type $generated@@722) $generated@@153) ($generated@@152 $generated@@722 $generated@@712)) ($generated@@167 $generated@@722 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@157 ($generated@@142 $generated@@159) ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159))) ($generated@@310 ($generated@@274 ($generated@@142 $generated@@159))))) ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159)))))
 :no-pattern (type $generated@@722)
 :no-pattern ($generated $generated@@722)
 :no-pattern ($generated@@0 $generated@@722)
)) (= (ControlFlow 0 8) 2))) $generated@@720))))
(let (($generated@@723  (=> (< 0 ($generated@@169 $generated@@712)) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@392 ($generated@@310 ($generated@@174 1)))) (=> ($generated@@392 ($generated@@310 ($generated@@174 1))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (<= ($generated@@169 ($generated@@310 ($generated@@174 1))) ($generated@@169 $generated@@712))) (=> (<= ($generated@@169 ($generated@@310 ($generated@@174 1))) ($generated@@169 $generated@@712)) (=> (= $generated@@716 ($generated@@173 $generated@@712 ($generated@@174 1))) (=> (and ($generated@@85 $generated@@717) ($generated@@714 $generated@@717)) (=> (and (and (and (and (and $generated@@271 $generated@@275) ($generated@@473 ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159))) ($generated@@310 ($generated@@274 ($generated@@142 $generated@@159))))) $generated@@271) ($generated@@167 $generated@@716 ($generated@@142 ($generated@@142 $generated@@159)) ($generated@@310 ($generated@@157 ($generated@@142 $generated@@159) ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159))) ($generated@@310 ($generated@@274 ($generated@@142 $generated@@159))))) ($generated@@310 ($generated@@270 ($generated@@142 $generated@@159))))) (and (= $generated@@715 $generated@@717) (= (ControlFlow 0 5) 2))) $generated@@720))))))))))
(let (($generated@@724  (=> (= $generated@@718 ($generated@@214 $generated@@719 $generated@@715 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 5) $generated@@723) (=> (= (ControlFlow 0 9) 8) $generated@@721)))))
(let (($generated@@725  (=> (and (and ($generated@@85 $generated@@715) ($generated@@714 $generated@@715)) (and (= 3 $generated@@269) (= (ControlFlow 0 10) 9))) $generated@@724)))
$generated@@725))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int T@U) T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@147 (Int) T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 (T@U Int) T@U)
(declare-fun $generated@@160 (Int) Bool)
(declare-fun $generated@@165 (T@U T@U) T@U)
(declare-fun $generated@@166 (Int) T@U)
(declare-fun $generated@@167 (T@U) Int)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@195 (T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@197 (T@T T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (Int) Int)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@289 (T@U T@U T@U) Bool)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U T@U T@U) Bool)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@332 (T@U) Int)
(declare-fun $generated@@333 (T@T) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@T) T@U)
(declare-fun $generated@@358 (T@T T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@374 (T@U) Bool)
(declare-fun $generated@@381 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) Bool)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@418 (T@U) Int)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@464 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@U T@U) T@U)
(declare-fun $generated@@480 (T@T) T@U)
(declare-fun $generated@@504 () T@T)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@554 () T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@559 (T@U Int) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(declare-fun $generated@@599 (T@U) Int)
(declare-fun $generated@@621 (T@U) T@U)
(declare-fun $generated@@695 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@80) 11) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@91 $generated@@92)) 12))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@81 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@81 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@81 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@81 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@70 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@83) 14)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@83)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@70 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ($generated@@136 T@U) ) (! (= (type ($generated@@78 $generated@@135 $generated@@136)) $generated@@80)
 :pattern ( ($generated@@78 $generated@@135 $generated@@136))
))) (= (type $generated@@79) $generated@@67)))
(assert (forall (($generated@@137 Int) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) $generated@@80) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@84 $generated@@139)) (= ($generated@@77 ($generated@@78 $generated@@137 $generated@@138) $generated@@79 $generated@@139)  (and ($generated@@77 ($generated@@8 $generated@@137) $generated@@46 $generated@@139) ($generated@@77 $generated@@138 $generated@@79 $generated@@139))))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@137 $generated@@138) $generated@@79 $generated@@139))
)))
(assert  (and (= ($generated@@1 $generated@@142) 15) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@141 $generated@@143)) $generated@@142)
 :pattern ( ($generated@@141 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@142) (= (type $generated@@145) $generated@@80)) (= (type $generated@@146) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@144) $generated@@145 $generated@@146) (= $generated@@145 $generated@@146)))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@144) $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 Int) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@2) (= (type $generated@@150) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@77 $generated@@149 ($generated@@147 0) $generated@@150))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@147 0) $generated@@150))
)))
(assert (= ($generated@@1 $generated@@152) 16))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@152) (= (type $generated@@154) $generated@@152)) (= (type $generated@@155) $generated@@152)) (and ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@154 $generated@@155))) ($generated@@151 $generated@@153 $generated@@155))
 :pattern ( ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@154 $generated@@155))
 :pattern ( ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@153 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@147 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@147 0)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 Int) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@80)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
)))
(assert  (=> (<= 1 $generated@@158) (forall (($generated@@163 T@U) ($generated@@164 Int) ) (!  (=> (and (= (type $generated@@163) $generated@@142) (or ($generated@@160 $generated@@164) (not (= 1 $generated@@158)))) ($generated@@156 ($generated@@159 $generated@@163 $generated@@164) $generated@@79))
 :pattern ( ($generated@@159 $generated@@163 $generated@@164))
))))
(assert  (and (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@165 $generated@@168 $generated@@169)) $generated@@152)
 :pattern ( ($generated@@165 $generated@@168 $generated@@169))
)) (forall (($generated@@170 Int) ) (! (= (type ($generated@@166 $generated@@170)) $generated@@152)
 :pattern ( ($generated@@166 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 Int) ($generated@@173 Int) ) (!  (=> (= (type $generated@@171) $generated@@152) (=> (and (and (<= 0 $generated@@172) (<= 0 $generated@@173)) (<= (+ $generated@@172 $generated@@173) ($generated@@167 $generated@@171))) (= ($generated@@165 ($generated@@165 $generated@@171 ($generated@@166 $generated@@172)) ($generated@@166 $generated@@173)) ($generated@@165 $generated@@171 ($generated@@166 (+ $generated@@172 $generated@@173))))))
 :pattern ( ($generated@@165 ($generated@@165 $generated@@171 ($generated@@166 $generated@@172)) ($generated@@166 $generated@@173)))
)))
(assert  (=> (<= 1 $generated@@158) (forall (($generated@@174 T@U) ($generated@@175 Int) ) (!  (=> (and (= (type $generated@@174) $generated@@142) (or ($generated@@160 $generated@@175) (not (= 1 $generated@@158)))) (and ($generated@@160 (+ $generated@@175 1)) (= ($generated@@159 ($generated@@141 $generated@@174) $generated@@175) ($generated@@78 $generated@@175 ($generated@@159 $generated@@174 (+ $generated@@175 1))))))
 :pattern ( ($generated@@159 ($generated@@141 $generated@@174) $generated@@175))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@178 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and (= (type $generated@@180) $generated@@67) (= (type $generated@@181) $generated@@67)) (= (type $generated@@182) $generated@@80)) ($generated@@156 $generated@@182 ($generated@@177 $generated@@180 $generated@@181))) ($generated@@176 $generated@@182))
 :pattern ( ($generated@@176 $generated@@182) ($generated@@156 $generated@@182 ($generated@@177 $generated@@180 $generated@@181)))
)))
(assert  (and (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@152)
 :pattern ( ($generated@@184 $generated@@186))
)) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@152)
 :pattern ( ($generated@@185 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@80) (= (type $generated@@189) $generated@@80)) true) (= ($generated@@183 $generated@@188 $generated@@189)  (and (= ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)) (= ($generated@@185 $generated@@188) ($generated@@185 $generated@@189)))))
 :pattern ( ($generated@@183 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@67)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@194) $generated@@67)) ($generated@@156 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@156 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@201 $generated@@202)) 17)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@197 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@199 ($generated@@197 $generated@@205 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@197 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@199 (type $generated@@207))))
(= (type ($generated@@195 $generated@@207 $generated@@208 $generated@@209)) $generated@@210))
 :pattern ( ($generated@@195 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
(let (($generated@@216 (type $generated@@212)))
(= (type ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@197 $generated@@216 $generated@@215))))
 :pattern ( ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@199 (type $generated@@217))))
 (=> (= (type $generated@@220) $generated@@221) (= ($generated@@195 ($generated@@200 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@218 $generated@@219) $generated@@220)))
 :weight 0
))) (and (and (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@195 ($generated@@200 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@195 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@195 ($generated@@200 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@195 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or true (= ($generated@@195 ($generated@@200 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@195 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@197 $generated@@82 $generated@@4))
 :pattern ( ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@70 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@82) (= (type $generated@@245) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@246) ($generated@@69 $generated@@4))) (= (type $generated@@248) $generated@@82)) (= (type $generated@@249) ($generated@@69 $generated@@250))) (= ($generated@@0 ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) $generated@@142) (= (type $generated@@253) $generated@@80)) (= (type $generated@@254) $generated@@80)) (forall (($generated@@255 Int) ) (!  (=> (<= 0 $generated@@255) ($generated@@251 ($generated@@166 $generated@@255) ($generated@@141 $generated@@252) $generated@@253 $generated@@254))
 :pattern ( ($generated@@251 ($generated@@166 $generated@@255) ($generated@@141 $generated@@252) $generated@@253 $generated@@254))
))) ($generated@@140 ($generated@@141 $generated@@252) $generated@@253 $generated@@254))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@252) $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@80) ($generated@@156 $generated@@257 $generated@@79)) ($generated@@256 $generated@@257))
 :pattern ( ($generated@@256 $generated@@257) ($generated@@156 $generated@@257 $generated@@79))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@80)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@67) (= (type $generated@@263) $generated@@67)) (= (type $generated@@264) $generated@@152)) (= (type $generated@@265) $generated@@152)) (= ($generated@@156 ($generated@@258 $generated@@264 $generated@@265) ($generated@@177 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@156 ($generated@@258 $generated@@264 $generated@@265) ($generated@@177 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@80) (= (type $generated@@267) $generated@@80)) (= ($generated@@183 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@183 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@152) (= (type $generated@@269) $generated@@142)) (= (type $generated@@270) $generated@@80)) (= (type $generated@@271) $generated@@80)) (= (type $generated@@272) $generated@@152)) (and ($generated@@151 $generated@@268 $generated@@272) ($generated@@251 $generated@@272 ($generated@@141 $generated@@269) $generated@@270 $generated@@271))) ($generated@@251 $generated@@268 ($generated@@141 $generated@@269) $generated@@270 $generated@@271))
 :pattern ( ($generated@@251 $generated@@268 ($generated@@141 $generated@@269) $generated@@270 $generated@@271) ($generated@@251 $generated@@272 ($generated@@141 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@67)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@276) $generated@@67)) (= ($generated@@156 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@152) ($generated@@0 ($generated@@87 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@87 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@156 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@67)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@281) $generated@@67)) (= ($generated@@156 $generated@@280 ($generated@@278 $generated@@281)) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@152) ($generated@@0 ($generated@@87 $generated@@280 $generated@@282))) ($generated@@259 $generated@@282 $generated@@281))
 :pattern ( ($generated@@87 $generated@@280 $generated@@282))
))))
 :pattern ( ($generated@@156 $generated@@280 ($generated@@278 $generated@@281)))
)))
(assert (forall (($generated@@284 Int) ) (! (= ($generated@@283 $generated@@284) $generated@@284)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
(= (type ($generated@@285 $generated@@286)) $generated@@287))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= ($generated@@285 $generated@@288) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) $generated@@67)) (= (type $generated@@292) $generated@@152)) (= (type $generated@@293) $generated@@152)) (= (type $generated@@294) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@84 $generated@@294)) (= ($generated@@77 ($generated@@258 $generated@@292 $generated@@293) ($generated@@177 $generated@@290 $generated@@291) $generated@@294)  (and ($generated@@289 $generated@@292 $generated@@290 $generated@@294) ($generated@@289 $generated@@293 $generated@@291 $generated@@294))))
 :pattern ( ($generated@@77 ($generated@@258 $generated@@292 $generated@@293) ($generated@@177 $generated@@290 $generated@@291) $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@71)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@80) (= ($generated@@176 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@61)))
 :pattern ( ($generated@@176 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@80) (= ($generated@@256 $generated@@298) (= ($generated@@295 $generated@@298) $generated@@63)))
 :pattern ( ($generated@@256 $generated@@298))
)))
(assert  (=> (<= 2 $generated@@158) (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (= (type $generated@@300) $generated@@142) (= (type $generated@@301) $generated@@80)) (= (type $generated@@302) $generated@@152)) (and ($generated@@156 $generated@@301 $generated@@79) (= $generated@@302 ($generated@@166 0)))) ($generated@@299 $generated@@300 $generated@@302 $generated@@301))
 :pattern ( ($generated@@299 $generated@@300 $generated@@302 $generated@@301))
))))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@80) ($generated@@176 $generated@@303)) (exists (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (and (and (= (type $generated@@304) $generated@@152) (= (type $generated@@305) $generated@@152)) (= $generated@@303 ($generated@@258 $generated@@304 $generated@@305)))
 :no-pattern (type $generated@@304)
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
)))
 :pattern ( ($generated@@176 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@80) ($generated@@256 $generated@@306)) (exists (($generated@@307 Int) ($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@80) (= $generated@@306 ($generated@@78 $generated@@307 $generated@@308)))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
)))
 :pattern ( ($generated@@256 $generated@@306))
)))
(assert  (and (and (forall (($generated@@313 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@313)) 18)) (forall (($generated@@314 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@311 $generated@@314))
))) (forall (($generated@@315 T@T) ) (! (= (type ($generated@@309 $generated@@315)) ($generated@@311 $generated@@315))
 :pattern ( ($generated@@309 $generated@@315))
))))
(assert (forall (($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@316)) 0)
 :pattern ( ($generated@@309 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) $generated@@152) (= (type $generated@@318) $generated@@142)) (= (type $generated@@319) $generated@@80)) (= (type $generated@@320) $generated@@80)) (not (= $generated@@317 ($generated@@166 0)))) (= ($generated@@251 $generated@@317 ($generated@@141 $generated@@318) $generated@@319 $generated@@320) ($generated@@251 $generated@@317 $generated@@318 $generated@@319 $generated@@320)))
 :pattern ( ($generated@@251 $generated@@317 ($generated@@141 $generated@@318) $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) $generated@@142) (= (type $generated@@322) $generated@@80)) (= (type $generated@@323) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@321) $generated@@322 $generated@@323) ($generated@@140 $generated@@321 $generated@@322 $generated@@323)))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@321) $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@324) $generated@@142) (= (type $generated@@325) $generated@@152)) (= (type $generated@@326) $generated@@80)) (= ($generated@@299 ($generated@@141 $generated@@324) $generated@@325 $generated@@326) ($generated@@299 $generated@@324 $generated@@325 $generated@@326)))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@324) $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@152)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@67) (= (type $generated@@331) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@289 ($generated@@327 $generated@@329) $generated@@330 $generated@@331) ($generated@@77 $generated@@329 $generated@@330 $generated@@331)))
 :pattern ( ($generated@@289 ($generated@@327 $generated@@329) $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@334 T@T) ) (! (= (type ($generated@@333 $generated@@334)) ($generated@@81 $generated@@334 $generated@@2))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@85 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@81 $generated@@336 $generated@@2)) (and (= (= ($generated@@332 $generated@@335) 0) (= $generated@@335 ($generated@@333 $generated@@336))) (=> (not (= ($generated@@332 $generated@@335) 0)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) (< 0 ($generated ($generated@@87 $generated@@335 $generated@@337))))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 19)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@81 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@87 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@87 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert  (and (and (and (and (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (= ($generated@@1 ($generated@@358 $generated@@361 $generated@@362)) 20)) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= ($generated@@359 ($generated@@358 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@358 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@360 ($generated@@358 $generated@@365 $generated@@366)) $generated@@366)
 :pattern ( ($generated@@358 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@359 (type $generated@@367))))
(= (type ($generated@@356 $generated@@367)) ($generated@@81 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@367))
))) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= (type ($generated@@357 $generated@@369 $generated@@370)) ($generated@@358 $generated@@369 $generated@@370))
 :pattern ( ($generated@@357 $generated@@369 $generated@@370))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@T) ) (! (let (($generated@@373 (type $generated@@371)))
 (not ($generated@@0 ($generated@@87 ($generated@@356 ($generated@@357 $generated@@373 $generated@@372)) $generated@@371))))
 :pattern ( (let (($generated@@373 (type $generated@@371)))
($generated@@87 ($generated@@356 ($generated@@357 $generated@@373 $generated@@372)) $generated@@371)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@152) (= (type $generated@@376) $generated@@152)) (and ($generated@@374 $generated@@376) (<= ($generated@@167 $generated@@376) ($generated@@167 $generated@@375)))) (and (= ($generated@@374 ($generated@@165 $generated@@375 $generated@@376)) ($generated@@374 $generated@@375)) (= ($generated@@167 ($generated@@165 $generated@@375 $generated@@376)) (- ($generated@@167 $generated@@375) ($generated@@167 $generated@@376)))))
 :pattern ( ($generated@@165 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 Int) ) (!  (=> (<= 0 $generated@@377) (and ($generated@@374 ($generated@@166 $generated@@377)) (= ($generated@@167 ($generated@@166 $generated@@377)) $generated@@377)))
 :pattern ( ($generated@@166 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@85 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@81 $generated@@379 $generated@@2)) (= ($generated@@191 $generated@@378) (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@379) (and (<= 0 ($generated ($generated@@87 $generated@@378 $generated@@380))) (<= ($generated ($generated@@87 $generated@@378 $generated@@380)) ($generated@@332 $generated@@378))))
 :pattern ( ($generated@@87 $generated@@378 $generated@@380))
)))))
 :pattern ( ($generated@@191 $generated@@378))
)))
(assert (forall (($generated@@382 T@T) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@152) ($generated@@259 $generated@@384 $generated@@79)) (and (= ($generated@@327 ($generated@@381 $generated@@80 $generated@@384)) $generated@@384) ($generated@@156 ($generated@@381 $generated@@80 $generated@@384) $generated@@79)))
 :pattern ( ($generated@@259 $generated@@384 $generated@@79))
)))
(assert  (=> (<= 2 $generated@@158) (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) $generated@@142) (= (type $generated@@387) $generated@@152)) (= (type $generated@@388) $generated@@80)) (or ($generated@@385 $generated@@387 $generated@@388) (and (not (= 2 $generated@@158)) ($generated@@156 $generated@@388 $generated@@79)))) true)
 :pattern ( ($generated@@299 $generated@@386 $generated@@387 $generated@@388))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) $generated@@142) (= (type $generated@@390) $generated@@80)) (= (type $generated@@391) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@389) $generated@@390 $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (= (type $generated@@392) $generated@@152) ($generated@@251 $generated@@392 ($generated@@141 $generated@@389) $generated@@390 $generated@@391))
 :pattern ( ($generated@@251 $generated@@392 ($generated@@141 $generated@@389) $generated@@390 $generated@@391))
))))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@389) $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@342 (type $generated@@393))))
(let (($generated@@395 ($generated@@341 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@340 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@339 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@338 $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@342 (type $generated@@398))))
(= (type ($generated@@397 $generated@@398)) ($generated@@81 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@342 (type $generated@@400))))
(let (($generated@@402 ($generated@@341 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@340 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@339 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@401) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@397 $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@360 (type $generated@@404))))
(let (($generated@@406 ($generated@@359 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@358 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@357 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@356 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@360 (type $generated@@409))))
(= (type ($generated@@408 $generated@@409)) ($generated@@81 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@360 (type $generated@@411))))
(let (($generated@@413 ($generated@@359 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@358 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@357 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@412) ($generated@@0 ($generated@@87 ($generated@@408 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@408 $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@416) $generated@@67)) (= ($generated@@156 $generated@@415 ($generated@@190 $generated@@416)) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@152) (< 0 ($generated ($generated@@87 $generated@@415 $generated@@417)))) ($generated@@259 $generated@@417 $generated@@416))
 :pattern ( ($generated@@87 $generated@@415 $generated@@417))
))))
 :pattern ( ($generated@@156 $generated@@415 ($generated@@190 $generated@@416)))
)))
(assert (forall (($generated@@420 T@U) ) (! (= (type ($generated@@419 $generated@@420)) $generated@@80)
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert  (=> (<= 2 $generated@@158) (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) $generated@@142) (= (type $generated@@422) $generated@@152)) (= (type $generated@@423) $generated@@80)) (or ($generated@@385 $generated@@422 $generated@@423) (and (not (= 2 $generated@@158)) ($generated@@156 $generated@@423 $generated@@79)))) (and (and (=> (< 0 ($generated@@167 $generated@@422)) (and ($generated@@256 $generated@@423) (=> (> ($generated@@418 $generated@@423) 0) (and ($generated@@256 $generated@@423) ($generated@@385 ($generated@@165 $generated@@422 ($generated@@166 1)) ($generated@@419 $generated@@423)))))) (=> (=> (< 0 ($generated@@167 $generated@@422)) (and (> ($generated@@418 $generated@@423) 0) ($generated@@299 $generated@@421 ($generated@@165 $generated@@422 ($generated@@166 1)) ($generated@@419 $generated@@423)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@422)) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@152) ($generated@@151 $generated@@424 $generated@@422)) ($generated@@385 $generated@@424 $generated@@423))
 :pattern ( ($generated@@299 $generated@@421 $generated@@424 $generated@@423))
))))) (= ($generated@@299 ($generated@@141 $generated@@421) $generated@@422 $generated@@423)  (and (=> (< 0 ($generated@@167 $generated@@422)) (and (> ($generated@@418 $generated@@423) 0) ($generated@@299 $generated@@421 ($generated@@165 $generated@@422 ($generated@@166 1)) ($generated@@419 $generated@@423)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@422)) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@152) ($generated@@151 $generated@@425 $generated@@422)) ($generated@@299 $generated@@421 $generated@@425 $generated@@423))
 :pattern ( ($generated@@299 $generated@@421 $generated@@425 $generated@@423))
)))))))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@421) $generated@@422 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) (= (type $generated@@427) $generated@@152)) (or (or ($generated@@151 $generated@@426 $generated@@427) (= $generated@@426 $generated@@427)) ($generated@@151 $generated@@427 $generated@@426)))
 :pattern ( ($generated@@151 $generated@@426 $generated@@427) ($generated@@151 $generated@@427 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@428) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@429) $generated@@67)) (= (type $generated@@430) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@428 ($generated@@273 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@152) ($generated@@0 ($generated@@87 $generated@@428 $generated@@431))) ($generated@@289 $generated@@431 $generated@@429 $generated@@430))
 :pattern ( ($generated@@87 $generated@@428 $generated@@431))
))))
 :pattern ( ($generated@@77 $generated@@428 ($generated@@273 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@433) $generated@@67)) (= (type $generated@@434) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@432 ($generated@@278 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@152) ($generated@@0 ($generated@@87 $generated@@432 $generated@@435))) ($generated@@289 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@87 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@77 $generated@@432 ($generated@@278 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(= ($generated ($generated@@87 ($generated@@333 $generated@@437) $generated@@436)) 0))
 :pattern ( (let (($generated@@437 (type $generated@@436)))
($generated@@87 ($generated@@333 $generated@@437) $generated@@436)))
)))
(assert  (and (forall (($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@440)) ($generated@@81 $generated@@152 $generated@@4))
 :pattern ( ($generated@@438 $generated@@440))
)) (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@342 (type $generated@@441))))
(let (($generated@@443 ($generated@@341 (type $generated@@441))))
(= (type ($generated@@439 $generated@@441)) ($generated@@81 $generated@@443 $generated@@442))))
 :pattern ( ($generated@@439 $generated@@441))
))))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) ($generated@@340 $generated@@152 $generated@@152)) (= (type $generated@@445) $generated@@152)) (= ($generated@@0 ($generated@@87 ($generated@@438 $generated@@444) $generated@@445))  (and ($generated@@0 ($generated@@87 ($generated@@338 $generated@@444) ($generated@@184 ($generated@@381 $generated@@80 $generated@@445)))) (= ($generated@@87 ($generated@@439 $generated@@444) ($generated@@184 ($generated@@381 $generated@@80 $generated@@445))) ($generated@@185 ($generated@@381 $generated@@80 $generated@@445))))))
 :pattern ( ($generated@@87 ($generated@@438 $generated@@444) $generated@@445))
)))
(assert  (and (forall (($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@448)) ($generated@@81 $generated@@152 $generated@@4))
 :pattern ( ($generated@@446 $generated@@448))
)) (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@360 (type $generated@@449))))
(let (($generated@@451 ($generated@@359 (type $generated@@449))))
(= (type ($generated@@447 $generated@@449)) ($generated@@81 $generated@@451 $generated@@450))))
 :pattern ( ($generated@@447 $generated@@449))
))))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) ($generated@@358 $generated@@152 $generated@@152)) (= (type $generated@@453) $generated@@152)) (= ($generated@@0 ($generated@@87 ($generated@@446 $generated@@452) $generated@@453))  (and ($generated@@0 ($generated@@87 ($generated@@356 $generated@@452) ($generated@@184 ($generated@@381 $generated@@80 $generated@@453)))) (= ($generated@@87 ($generated@@447 $generated@@452) ($generated@@184 ($generated@@381 $generated@@80 $generated@@453))) ($generated@@185 ($generated@@381 $generated@@80 $generated@@453))))))
 :pattern ( ($generated@@87 ($generated@@446 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@341 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@340 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@87 ($generated@@338 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@87 ($generated@@439 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@454) $generated@@458))
 :pattern ( ($generated@@87 ($generated@@439 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (let (($generated@@461 (type $generated@@460)))
(let (($generated@@462 ($generated@@359 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@358 $generated@@462 $generated@@461)) (= ($generated@@0 ($generated@@87 ($generated@@408 $generated@@459) $generated@@460)) (exists (($generated@@463 T@U) ) (!  (and (= (type $generated@@463) $generated@@462) (and ($generated@@0 ($generated@@87 ($generated@@356 $generated@@459) $generated@@463)) (= $generated@@460 ($generated@@87 ($generated@@447 $generated@@459) $generated@@463))))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@459) $generated@@463))
 :pattern ( ($generated@@87 ($generated@@447 $generated@@459) $generated@@463))
))))))
 :pattern ( ($generated@@87 ($generated@@408 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (= (type ($generated@@464 $generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (and (= (type $generated@@467) ($generated@@340 $generated@@152 $generated@@152)) (= (type $generated@@468) $generated@@67)) (= (type $generated@@469) $generated@@67)) (= (type $generated@@470) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@467) $generated@@471))) (and ($generated@@289 ($generated@@87 ($generated@@439 $generated@@467) $generated@@471) $generated@@469 $generated@@470) ($generated@@289 $generated@@471 $generated@@468 $generated@@470)))
 :pattern ( ($generated@@87 ($generated@@439 $generated@@467) $generated@@471))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@467) $generated@@471))
))))
 :pattern ( ($generated@@77 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@472 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (and (= (type $generated@@475) ($generated@@358 $generated@@152 $generated@@152)) (= (type $generated@@476) $generated@@67)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@475) $generated@@479))) (and ($generated@@289 ($generated@@87 ($generated@@447 $generated@@475) $generated@@479) $generated@@477 $generated@@478) ($generated@@289 $generated@@479 $generated@@476 $generated@@478)))
 :pattern ( ($generated@@87 ($generated@@447 $generated@@475) $generated@@479))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@475) $generated@@479))
))))
 :pattern ( ($generated@@77 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 T@T) ) (! (= (type ($generated@@480 $generated@@481)) ($generated@@81 $generated@@481 $generated@@4))
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@360 (type $generated@@482))))
(let (($generated@@484 ($generated@@359 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@358 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@357 $generated@@484 $generated@@483)) (= ($generated@@356 $generated@@482) ($generated@@480 $generated@@484))))))
 :pattern ( ($generated@@356 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@360 (type $generated@@485))))
(let (($generated@@487 ($generated@@359 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@358 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@357 $generated@@487 $generated@@486)) (= ($generated@@408 $generated@@485) ($generated@@480 $generated@@486))))))
 :pattern ( ($generated@@408 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@360 (type $generated@@488))))
(let (($generated@@490 ($generated@@359 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@358 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@357 $generated@@490 $generated@@489)) (= ($generated@@446 $generated@@488) ($generated@@480 $generated@@152))))))
 :pattern ( ($generated@@446 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@342 (type $generated@@491))))
(let (($generated@@493 ($generated@@341 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@340 $generated@@493 $generated@@492)) (or (= $generated@@491 ($generated@@339 $generated@@493 $generated@@492)) (exists (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (and (and (= (type $generated@@494) $generated@@152) (= (type $generated@@495) $generated@@152)) ($generated@@0 ($generated@@87 ($generated@@438 $generated@@491) ($generated@@327 ($generated@@258 $generated@@494 $generated@@495)))))
 :no-pattern (type $generated@@494)
 :no-pattern (type $generated@@495)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
))))))
 :pattern ( ($generated@@438 $generated@@491))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@360 (type $generated@@496))))
(let (($generated@@498 ($generated@@359 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@358 $generated@@498 $generated@@497)) (or (= $generated@@496 ($generated@@357 $generated@@498 $generated@@497)) (exists (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (and (and (= (type $generated@@499) $generated@@152) (= (type $generated@@500) $generated@@152)) ($generated@@0 ($generated@@87 ($generated@@446 $generated@@496) ($generated@@327 ($generated@@258 $generated@@499 $generated@@500)))))
 :no-pattern (type $generated@@499)
 :no-pattern (type $generated@@500)
 :no-pattern ($generated $generated@@499)
 :no-pattern ($generated@@0 $generated@@499)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
))))))
 :pattern ( ($generated@@446 $generated@@496))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@152) ($generated@@259 $generated@@501 $generated@@46)) (and (= ($generated@@327 ($generated@@381 $generated@@2 $generated@@501)) $generated@@501) ($generated@@156 ($generated@@381 $generated@@2 $generated@@501) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@501 $generated@@46))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@152) ($generated@@259 $generated@@502 $generated@@47)) (and (= ($generated@@327 ($generated@@381 $generated@@3 $generated@@502)) $generated@@502) ($generated@@156 ($generated@@381 $generated@@3 $generated@@502) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@502 $generated@@47))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@152) ($generated@@259 $generated@@503 $generated@@44)) (and (= ($generated@@327 ($generated@@381 $generated@@4 $generated@@503)) $generated@@503) ($generated@@156 ($generated@@381 $generated@@4 $generated@@503) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@503 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@504) 21))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@152) ($generated@@259 $generated@@505 $generated@@45)) (and (= ($generated@@327 ($generated@@381 $generated@@504 $generated@@505)) $generated@@505) ($generated@@156 ($generated@@381 $generated@@504 $generated@@505) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@505 $generated@@45))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@259 ($generated@@327 $generated@@506) $generated@@507) ($generated@@156 $generated@@506 $generated@@507)))
 :pattern ( ($generated@@259 ($generated@@327 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@152) (<= 0 ($generated@@167 $generated@@508)))
 :pattern ( ($generated@@167 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@85 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@81 $generated@@510 $generated@@2)) (<= 0 ($generated@@332 $generated@@509))))
 :pattern ( ($generated@@332 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@312 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@311 $generated@@512)) (<= 0 ($generated@@310 $generated@@511))))
 :pattern ( ($generated@@310 $generated@@511))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@67)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@67) (= (type $generated@@516) $generated@@67)) (= ($generated@@513 ($generated@@464 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@464 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@67)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@67) (= (type $generated@@520) $generated@@67)) (= ($generated@@517 ($generated@@464 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@464 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@67) (= (type $generated@@522) $generated@@67)) (= ($generated@@75 ($generated@@464 $generated@@521 $generated@@522)) $generated@@58))
 :pattern ( ($generated@@464 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@67) (= (type $generated@@526) $generated@@67)) (= ($generated@@523 ($generated@@472 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@472 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@67)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@67) (= (type $generated@@530) $generated@@67)) (= ($generated@@527 ($generated@@472 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@472 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@67) (= (type $generated@@532) $generated@@67)) (= ($generated@@75 ($generated@@472 $generated@@531 $generated@@532)) $generated@@59))
 :pattern ( ($generated@@472 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@152)) (= ($generated@@295 ($generated@@258 $generated@@533 $generated@@534)) $generated@@61))
 :pattern ( ($generated@@258 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@67)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@67) (= (type $generated@@538) $generated@@67)) (= ($generated@@535 ($generated@@177 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@177 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@67)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@67) (= (type $generated@@542) $generated@@67)) (= ($generated@@539 ($generated@@177 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@177 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@152) (= (type $generated@@544) $generated@@152)) (= ($generated@@184 ($generated@@258 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@258 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@152) (= (type $generated@@546) $generated@@152)) (= ($generated@@185 ($generated@@258 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@258 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 Int) ($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@80) (= ($generated@@295 ($generated@@78 $generated@@547 $generated@@548)) $generated@@63))
 :pattern ( ($generated@@78 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 Int) ($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@80) (= ($generated@@418 ($generated@@78 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@78 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 Int) ($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@80) (= ($generated@@419 ($generated@@78 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@78 $generated@@551 $generated@@552))
)))
(assert  (and (forall (($generated@@555 T@U) ) (! (= (type ($generated@@553 $generated@@555)) $generated@@142)
 :pattern ( ($generated@@553 $generated@@555))
)) (= (type $generated@@554) $generated@@142)))
(assert (forall (($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (= (type $generated@@556) $generated@@142) (= ($generated@@159 $generated@@556 $generated@@557) ($generated@@159 $generated@@554 $generated@@557)))
 :pattern ( ($generated@@159 ($generated@@553 $generated@@556) $generated@@557))
)))
(assert  (and (forall (($generated@@560 T@U) ) (! (= (type ($generated@@558 $generated@@560)) $generated@@67)
 :pattern ( ($generated@@558 $generated@@560))
)) (forall (($generated@@561 T@U) ($generated@@562 Int) ) (! (let (($generated@@563 ($generated@@312 (type $generated@@561))))
(= (type ($generated@@559 $generated@@561 $generated@@562)) $generated@@563))
 :pattern ( ($generated@@559 $generated@@561 $generated@@562))
))))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@311 $generated@@152)) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@564 ($generated@@558 $generated@@565) $generated@@566) (forall (($generated@@567 Int) ) (!  (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@310 $generated@@564))) ($generated@@289 ($generated@@559 $generated@@564 $generated@@567) $generated@@565 $generated@@566))
 :pattern ( ($generated@@559 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@77 $generated@@564 ($generated@@558 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@568 ($generated@@147 $generated@@569)) $generated@@569)
 :pattern ( ($generated@@147 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@67)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@67) (= ($generated@@570 ($generated@@273 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@273 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@67) (= ($generated@@75 ($generated@@273 $generated@@573)) $generated@@54))
 :pattern ( ($generated@@273 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@67)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@67) (= ($generated@@574 ($generated@@278 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@278 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@67) (= ($generated@@75 ($generated@@278 $generated@@577)) $generated@@55))
 :pattern ( ($generated@@278 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@67)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@67) (= ($generated@@578 ($generated@@190 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@190 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@67) (= ($generated@@75 ($generated@@190 $generated@@581)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@67)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@67) (= ($generated@@582 ($generated@@558 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@558 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@67) (= ($generated@@75 ($generated@@558 $generated@@585)) $generated@@57))
 :pattern ( ($generated@@558 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
(= ($generated@@381 $generated@@587 ($generated@@327 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@327 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@340 $generated@@152 $generated@@152)) (= (type $generated@@589) $generated@@67)) (= (type $generated@@590) $generated@@67)) (= ($generated@@156 $generated@@588 ($generated@@464 $generated@@589 $generated@@590)) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@588) $generated@@591))) (and ($generated@@259 ($generated@@87 ($generated@@439 $generated@@588) $generated@@591) $generated@@590) ($generated@@259 $generated@@591 $generated@@589)))
 :pattern ( ($generated@@87 ($generated@@439 $generated@@588) $generated@@591))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@588) $generated@@591))
))))
 :pattern ( ($generated@@156 $generated@@588 ($generated@@464 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@358 $generated@@152 $generated@@152)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) $generated@@67)) (= ($generated@@156 $generated@@592 ($generated@@472 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@592) $generated@@595))) (and ($generated@@259 ($generated@@87 ($generated@@447 $generated@@592) $generated@@595) $generated@@594) ($generated@@259 $generated@@595 $generated@@593)))
 :pattern ( ($generated@@87 ($generated@@447 $generated@@592) $generated@@595))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@592) $generated@@595))
))))
 :pattern ( ($generated@@156 $generated@@592 ($generated@@472 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@152) (= (type $generated@@597) $generated@@152)) (and (and (and (=> ($generated@@151 $generated@@596 $generated@@597) (not (= $generated@@596 $generated@@597))) (=> (and ($generated@@374 $generated@@596) (not ($generated@@374 $generated@@597))) ($generated@@151 $generated@@596 $generated@@597))) (=> (and ($generated@@374 $generated@@596) ($generated@@374 $generated@@597)) (= ($generated@@151 $generated@@596 $generated@@597) (< ($generated@@167 $generated@@596) ($generated@@167 $generated@@597))))) (=> (and ($generated@@151 $generated@@596 $generated@@597) ($generated@@374 $generated@@597)) ($generated@@374 $generated@@596))))
 :pattern ( ($generated@@151 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@152) (= (type $generated@@601) $generated@@152)) (< ($generated@@598 $generated@@600) ($generated@@599 ($generated@@258 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@258 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@152) (= (type $generated@@603) $generated@@152)) (< ($generated@@598 $generated@@603) ($generated@@599 ($generated@@258 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@258 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@604) $generated@@152) (= (type $generated@@605) $generated@@142)) (= (type $generated@@606) $generated@@80)) (= (type $generated@@607) $generated@@80)) (and ($generated@@156 $generated@@606 $generated@@79) ($generated@@156 $generated@@607 $generated@@79))) (= ($generated@@251 $generated@@604 ($generated@@141 $generated@@605) $generated@@606 $generated@@607)  (and (=> (< 0 ($generated@@167 $generated@@604)) (and (and ($generated@@256 $generated@@606) ($generated@@256 $generated@@607)) (=> (and ($generated@@256 $generated@@606) ($generated@@256 $generated@@607)) (and (= ($generated@@418 $generated@@606) ($generated@@418 $generated@@607)) ($generated@@251 ($generated@@165 $generated@@604 ($generated@@166 1)) $generated@@605 ($generated@@419 $generated@@606) ($generated@@419 $generated@@607)))))) (=> (and (not (= $generated@@604 ($generated@@166 0))) (= ($generated@@167 $generated@@604) 0)) ($generated@@140 $generated@@605 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@251 $generated@@604 ($generated@@141 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 Int) ) (!  (=> (= (type $generated@@608) $generated@@142) (= ($generated@@159 ($generated@@141 $generated@@608) $generated@@609) ($generated@@159 $generated@@608 $generated@@609)))
 :pattern ( ($generated@@159 ($generated@@141 $generated@@608) $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@152) (= (type $generated@@611) $generated@@67)) (= (type $generated@@612) $generated@@67)) ($generated@@259 $generated@@610 ($generated@@464 $generated@@611 $generated@@612))) (and (= ($generated@@327 ($generated@@381 ($generated@@340 $generated@@152 $generated@@152) $generated@@610)) $generated@@610) ($generated@@156 ($generated@@381 ($generated@@340 $generated@@152 $generated@@152) $generated@@610) ($generated@@464 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@259 $generated@@610 ($generated@@464 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@152) (= (type $generated@@614) $generated@@67)) (= (type $generated@@615) $generated@@67)) ($generated@@259 $generated@@613 ($generated@@472 $generated@@614 $generated@@615))) (and (= ($generated@@327 ($generated@@381 ($generated@@358 $generated@@152 $generated@@152) $generated@@613)) $generated@@613) ($generated@@156 ($generated@@381 ($generated@@358 $generated@@152 $generated@@152) $generated@@613) ($generated@@472 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@259 $generated@@613 ($generated@@472 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@67) (= (type $generated@@617) $generated@@67)) (= (type $generated@@618) $generated@@152)) ($generated@@259 $generated@@618 ($generated@@177 $generated@@616 $generated@@617))) (and (= ($generated@@327 ($generated@@381 $generated@@80 $generated@@618)) $generated@@618) ($generated@@156 ($generated@@381 $generated@@80 $generated@@618) ($generated@@177 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@259 $generated@@618 ($generated@@177 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 (type $generated@@619)))
 (not ($generated@@0 ($generated@@87 ($generated@@480 $generated@@620) $generated@@619))))
 :pattern ( (let (($generated@@620 (type $generated@@619)))
($generated@@87 ($generated@@480 $generated@@620) $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ) (! (= (type ($generated@@621 $generated@@622)) $generated@@72)
 :pattern ( ($generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@67) (= (type $generated@@624) $generated@@67)) (and (= ($generated@@75 ($generated@@177 $generated@@623 $generated@@624)) $generated@@62) (= ($generated@@621 ($generated@@177 $generated@@623 $generated@@624)) $generated@@65)))
 :pattern ( ($generated@@177 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@80) (= (type $generated@@626) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@626) (and ($generated@@256 $generated@@625) ($generated@@77 $generated@@625 $generated@@79 $generated@@626)))) ($generated@@77 ($generated@@8 ($generated@@418 $generated@@625)) $generated@@46 $generated@@626))
 :pattern ( ($generated@@77 ($generated@@8 ($generated@@418 $generated@@625)) $generated@@46 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@80) (= ($generated@@598 ($generated@@327 $generated@@627)) ($generated@@599 $generated@@627)))
 :pattern ( ($generated@@598 ($generated@@327 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@152) ($generated@@259 $generated@@628 ($generated@@147 0))) (and (= ($generated@@327 ($generated@@381 $generated@@2 $generated@@628)) $generated@@628) ($generated@@156 ($generated@@381 ($generated@@81 $generated@@152 $generated@@4) $generated@@628) ($generated@@147 0))))
 :pattern ( ($generated@@259 $generated@@628 ($generated@@147 0)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@152) (= (type $generated@@630) $generated@@67)) ($generated@@259 $generated@@629 ($generated@@273 $generated@@630))) (and (= ($generated@@327 ($generated@@381 ($generated@@81 $generated@@152 $generated@@4) $generated@@629)) $generated@@629) ($generated@@156 ($generated@@381 ($generated@@81 $generated@@152 $generated@@4) $generated@@629) ($generated@@273 $generated@@630))))
 :pattern ( ($generated@@259 $generated@@629 ($generated@@273 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@152) (= (type $generated@@632) $generated@@67)) ($generated@@259 $generated@@631 ($generated@@278 $generated@@632))) (and (= ($generated@@327 ($generated@@381 ($generated@@81 $generated@@152 $generated@@4) $generated@@631)) $generated@@631) ($generated@@156 ($generated@@381 ($generated@@81 $generated@@152 $generated@@4) $generated@@631) ($generated@@278 $generated@@632))))
 :pattern ( ($generated@@259 $generated@@631 ($generated@@278 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@152) (= (type $generated@@634) $generated@@67)) ($generated@@259 $generated@@633 ($generated@@190 $generated@@634))) (and (= ($generated@@327 ($generated@@381 ($generated@@81 $generated@@152 $generated@@2) $generated@@633)) $generated@@633) ($generated@@156 ($generated@@381 ($generated@@81 $generated@@152 $generated@@2) $generated@@633) ($generated@@190 $generated@@634))))
 :pattern ( ($generated@@259 $generated@@633 ($generated@@190 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@152) (= (type $generated@@636) $generated@@67)) ($generated@@259 $generated@@635 ($generated@@558 $generated@@636))) (and (= ($generated@@327 ($generated@@381 ($generated@@311 $generated@@152) $generated@@635)) $generated@@635) ($generated@@156 ($generated@@381 ($generated@@311 $generated@@152) $generated@@635) ($generated@@558 $generated@@636))))
 :pattern ( ($generated@@259 $generated@@635 ($generated@@558 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@152) ($generated@@374 $generated@@637)) (= $generated@@637 ($generated@@166 ($generated@@167 $generated@@637))))
 :pattern ( ($generated@@167 $generated@@637))
 :pattern ( ($generated@@374 $generated@@637))
)))
(assert  (=> (<= 2 $generated@@158) (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) $generated@@142) (= (type $generated@@639) $generated@@152)) (= (type $generated@@640) $generated@@80)) (or ($generated@@385 ($generated@@285 $generated@@639) $generated@@640) (and (not (= 2 $generated@@158)) ($generated@@156 $generated@@640 $generated@@79)))) (and (and (=> (< 0 ($generated@@167 $generated@@639)) (and ($generated@@256 $generated@@640) (=> (> ($generated@@418 $generated@@640) 0) (and ($generated@@256 $generated@@640) ($generated@@385 ($generated@@165 $generated@@639 ($generated@@166 1)) ($generated@@419 $generated@@640)))))) (=> (=> (< 0 ($generated@@167 $generated@@639)) (and (> ($generated@@418 $generated@@640) 0) ($generated@@299 ($generated@@141 $generated@@638) ($generated@@165 $generated@@639 ($generated@@166 1)) ($generated@@419 $generated@@640)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@639)) (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@152) ($generated@@151 $generated@@641 $generated@@639)) ($generated@@385 $generated@@641 $generated@@640))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@638) $generated@@641 $generated@@640))
))))) (= ($generated@@299 ($generated@@141 $generated@@638) ($generated@@285 $generated@@639) $generated@@640)  (and (=> (< 0 ($generated@@167 $generated@@639)) (and (> ($generated@@418 $generated@@640) 0) ($generated@@299 ($generated@@141 $generated@@638) ($generated@@165 $generated@@639 ($generated@@166 1)) ($generated@@419 $generated@@640)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@639)) (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@152) ($generated@@151 $generated@@642 $generated@@639)) ($generated@@299 ($generated@@141 $generated@@638) $generated@@642 $generated@@640))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@638) $generated@@642 $generated@@640))
)))))))
 :weight 3
 :pattern ( ($generated@@299 ($generated@@141 $generated@@638) ($generated@@285 $generated@@639) $generated@@640))
))))
(assert (= ($generated@@75 $generated@@79) $generated@@64))
(assert (= ($generated@@621 $generated@@79) $generated@@66))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@643) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@644) $generated@@67)) (= (type $generated@@645) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@643 ($generated@@190 $generated@@644) $generated@@645) (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@152) (< 0 ($generated ($generated@@87 $generated@@643 $generated@@646)))) ($generated@@289 $generated@@646 $generated@@644 $generated@@645))
 :pattern ( ($generated@@87 $generated@@643 $generated@@646))
))))
 :pattern ( ($generated@@77 $generated@@643 ($generated@@190 $generated@@644) $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@647) $generated@@152) (= (type $generated@@648) $generated@@152)) (and ($generated@@374 $generated@@648) (<= ($generated@@167 $generated@@648) ($generated@@167 $generated@@647)))) (or (and (= $generated@@648 ($generated@@166 0)) (= ($generated@@165 $generated@@647 $generated@@648) $generated@@647)) (and (not (= $generated@@648 ($generated@@166 0))) ($generated@@151 ($generated@@165 $generated@@647 $generated@@648) $generated@@647))))
 :pattern ( ($generated@@165 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) $generated@@80) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@651) (and ($generated@@176 $generated@@649) (exists (($generated@@652 T@U) ) (!  (and (= (type $generated@@652) $generated@@67) ($generated@@77 $generated@@649 ($generated@@177 $generated@@650 $generated@@652) $generated@@651))
 :pattern ( ($generated@@77 $generated@@649 ($generated@@177 $generated@@650 $generated@@652) $generated@@651))
))))) ($generated@@289 ($generated@@184 $generated@@649) $generated@@650 $generated@@651))
 :pattern ( ($generated@@289 ($generated@@184 $generated@@649) $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) $generated@@80) (= (type $generated@@654) $generated@@67)) (= (type $generated@@655) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@655) (and ($generated@@176 $generated@@653) (exists (($generated@@656 T@U) ) (!  (and (= (type $generated@@656) $generated@@67) ($generated@@77 $generated@@653 ($generated@@177 $generated@@656 $generated@@654) $generated@@655))
 :pattern ( ($generated@@77 $generated@@653 ($generated@@177 $generated@@656 $generated@@654) $generated@@655))
))))) ($generated@@289 ($generated@@185 $generated@@653) $generated@@654 $generated@@655))
 :pattern ( ($generated@@289 ($generated@@185 $generated@@653) $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (= (type $generated@@657) $generated@@80) (= (type $generated@@658) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@658) (and ($generated@@256 $generated@@657) ($generated@@77 $generated@@657 $generated@@79 $generated@@658)))) ($generated@@77 ($generated@@419 $generated@@657) $generated@@79 $generated@@658))
 :pattern ( ($generated@@77 ($generated@@419 $generated@@657) $generated@@79 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@152) (= (type $generated@@660) $generated@@152)) (= ($generated@@258 ($generated@@285 $generated@@659) ($generated@@285 $generated@@660)) ($generated@@285 ($generated@@258 $generated@@659 $generated@@660))))
 :pattern ( ($generated@@258 ($generated@@285 $generated@@659) ($generated@@285 $generated@@660)))
)))
(assert (forall (($generated@@661 Int) ) (! (= ($generated@@327 ($generated@@8 ($generated@@283 $generated@@661))) ($generated@@285 ($generated@@327 ($generated@@8 $generated@@661))))
 :pattern ( ($generated@@327 ($generated@@8 ($generated@@283 $generated@@661))))
)))
(assert (forall (($generated@@662 T@U) ) (! (= ($generated@@327 ($generated@@285 $generated@@662)) ($generated@@285 ($generated@@327 $generated@@662)))
 :pattern ( ($generated@@327 ($generated@@285 $generated@@662)))
)))
(assert (forall (($generated@@663 Int) ($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@80) (= ($generated@@156 ($generated@@78 $generated@@663 $generated@@664) $generated@@79)  (and ($generated@@156 ($generated@@8 $generated@@663) $generated@@46) ($generated@@156 $generated@@664 $generated@@79))))
 :pattern ( ($generated@@156 ($generated@@78 $generated@@663 $generated@@664) $generated@@79))
)))
(assert (forall (($generated@@665 T@U) ) (! (let (($generated@@666 ($generated@@312 (type $generated@@665))))
 (=> (and (= (type $generated@@665) ($generated@@311 $generated@@666)) (= ($generated@@310 $generated@@665) 0)) (= $generated@@665 ($generated@@309 $generated@@666))))
 :pattern ( ($generated@@310 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (! (let (($generated@@670 (type $generated@@668)))
 (=> (and (and (= (type $generated@@667) ($generated@@81 $generated@@670 $generated@@2)) (= (type $generated@@669) $generated@@2)) (<= 0 ($generated $generated@@669))) (= ($generated@@332 ($generated@@88 $generated@@667 $generated@@668 $generated@@669)) (+ (- ($generated@@332 $generated@@667) ($generated ($generated@@87 $generated@@667 $generated@@668))) ($generated $generated@@669)))))
 :pattern ( ($generated@@332 ($generated@@88 $generated@@667 $generated@@668 $generated@@669)))
)))
(assert  (=> (<= 2 $generated@@158) (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@142) (= (type $generated@@672) $generated@@152)) (= (type $generated@@673) $generated@@80)) (or ($generated@@385 ($generated@@285 $generated@@672) ($generated@@285 $generated@@673)) (and (not (= 2 $generated@@158)) ($generated@@156 $generated@@673 $generated@@79)))) (and (and (=> (< 0 ($generated@@167 $generated@@672)) (and ($generated@@256 $generated@@673) (=> (> ($generated@@418 $generated@@673) 0) (and ($generated@@256 $generated@@673) ($generated@@385 ($generated@@165 $generated@@672 ($generated@@166 1)) ($generated@@419 $generated@@673)))))) (=> (=> (< 0 ($generated@@167 $generated@@672)) (and (> ($generated@@418 $generated@@673) 0) ($generated@@299 ($generated@@141 $generated@@671) ($generated@@165 $generated@@672 ($generated@@166 1)) ($generated@@419 $generated@@673)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@672)) (forall (($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@674) $generated@@152) ($generated@@151 $generated@@674 $generated@@672)) ($generated@@385 $generated@@674 $generated@@673))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@671) $generated@@674 $generated@@673))
))))) (= ($generated@@299 ($generated@@141 $generated@@671) ($generated@@285 $generated@@672) ($generated@@285 $generated@@673))  (and (=> (< 0 ($generated@@167 $generated@@672)) (and (> ($generated@@418 $generated@@673) 0) ($generated@@299 ($generated@@141 $generated@@671) ($generated@@165 $generated@@672 ($generated@@166 1)) ($generated@@419 $generated@@673)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@672)) (forall (($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@152) ($generated@@151 $generated@@675 $generated@@672)) ($generated@@299 ($generated@@141 $generated@@671) $generated@@675 $generated@@673))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@671) $generated@@675 $generated@@673))
)))))))
 :weight 3
 :pattern ( ($generated@@299 ($generated@@141 $generated@@671) ($generated@@285 $generated@@672) ($generated@@285 $generated@@673)))
))))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@677) $generated@@2)) ($generated@@77 $generated@@677 $generated@@46 $generated@@676))
 :pattern ( ($generated@@77 $generated@@677 $generated@@46 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@679) $generated@@3)) ($generated@@77 $generated@@679 $generated@@47 $generated@@678))
 :pattern ( ($generated@@77 $generated@@679 $generated@@47 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@681) $generated@@4)) ($generated@@77 $generated@@681 $generated@@44 $generated@@680))
 :pattern ( ($generated@@77 $generated@@681 $generated@@44 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@683) $generated@@504)) ($generated@@77 $generated@@683 $generated@@45 $generated@@682))
 :pattern ( ($generated@@77 $generated@@683 $generated@@45 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@685) $generated@@152)) ($generated@@77 $generated@@685 $generated@@48 $generated@@684))
 :pattern ( ($generated@@77 $generated@@685 $generated@@48 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@686) ($generated@@311 $generated@@152)) (= (type $generated@@687) $generated@@67)) (= ($generated@@156 $generated@@686 ($generated@@558 $generated@@687)) (forall (($generated@@688 Int) ) (!  (=> (and (<= 0 $generated@@688) (< $generated@@688 ($generated@@310 $generated@@686))) ($generated@@259 ($generated@@559 $generated@@686 $generated@@688) $generated@@687))
 :pattern ( ($generated@@559 $generated@@686 $generated@@688))
))))
 :pattern ( ($generated@@156 $generated@@686 ($generated@@558 $generated@@687)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (= (type $generated@@689) $generated@@142) (= (type $generated@@690) $generated@@152)) (= (type $generated@@691) $generated@@80)) (= ($generated@@299 $generated@@689 $generated@@690 $generated@@691) ($generated@@299 $generated@@554 $generated@@690 $generated@@691)))
 :pattern ( ($generated@@299 ($generated@@553 $generated@@689) $generated@@690 $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) $generated@@142) (= (type $generated@@693) $generated@@80)) (= (type $generated@@694) $generated@@80)) (and ($generated@@156 $generated@@693 $generated@@79) ($generated@@156 $generated@@694 $generated@@79))) (= ($generated@@140 ($generated@@141 $generated@@692) $generated@@693 $generated@@694)  (and (and ($generated@@256 $generated@@693) ($generated@@256 $generated@@694)) (=> (and ($generated@@256 $generated@@693) ($generated@@256 $generated@@694)) (and (= ($generated@@418 $generated@@693) ($generated@@418 $generated@@694)) ($generated@@140 $generated@@692 ($generated@@419 $generated@@693) ($generated@@419 $generated@@694)))))))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@692) $generated@@693 $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 Int) ) (!  (=> (= (type $generated@@696) ($generated@@311 $generated@@152)) (=> (and (<= 0 $generated@@697) (< $generated@@697 ($generated@@310 $generated@@696))) (< ($generated@@599 ($generated@@381 $generated@@80 ($generated@@559 $generated@@696 $generated@@697))) ($generated@@695 $generated@@696))))
 :pattern ( ($generated@@599 ($generated@@381 $generated@@80 ($generated@@559 $generated@@696 $generated@@697))))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@698) $generated@@152) (= (type $generated@@699) $generated@@142)) (= (type $generated@@700) $generated@@80)) (= (type $generated@@701) $generated@@80)) (= $generated@@700 $generated@@701)) ($generated@@251 $generated@@698 ($generated@@141 $generated@@699) $generated@@700 $generated@@701))
 :pattern ( ($generated@@251 $generated@@698 ($generated@@141 $generated@@699) $generated@@700 $generated@@701))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (and (and (= (type $generated@@702) ($generated@@340 $generated@@152 $generated@@152)) (= (type $generated@@703) $generated@@67)) (= (type $generated@@704) $generated@@67)) ($generated@@156 $generated@@702 ($generated@@464 $generated@@703 $generated@@704))) (and (and ($generated@@156 ($generated@@338 $generated@@702) ($generated@@273 $generated@@703)) ($generated@@156 ($generated@@397 $generated@@702) ($generated@@273 $generated@@704))) ($generated@@156 ($generated@@438 $generated@@702) ($generated@@273 ($generated@@177 $generated@@703 $generated@@704)))))
 :pattern ( ($generated@@156 $generated@@702 ($generated@@464 $generated@@703 $generated@@704)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (and (and (= (type $generated@@705) ($generated@@358 $generated@@152 $generated@@152)) (= (type $generated@@706) $generated@@67)) (= (type $generated@@707) $generated@@67)) ($generated@@156 $generated@@705 ($generated@@472 $generated@@706 $generated@@707))) (and (and ($generated@@156 ($generated@@356 $generated@@705) ($generated@@278 $generated@@706)) ($generated@@156 ($generated@@408 $generated@@705) ($generated@@278 $generated@@707))) ($generated@@156 ($generated@@446 $generated@@705) ($generated@@278 ($generated@@177 $generated@@706 $generated@@707)))))
 :pattern ( ($generated@@156 $generated@@705 ($generated@@472 $generated@@706 $generated@@707)))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@2) ($generated@@156 $generated@@708 $generated@@46))
 :pattern ( ($generated@@156 $generated@@708 $generated@@46))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@3) ($generated@@156 $generated@@709 $generated@@47))
 :pattern ( ($generated@@156 $generated@@709 $generated@@47))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@4) ($generated@@156 $generated@@710 $generated@@44))
 :pattern ( ($generated@@156 $generated@@710 $generated@@44))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@504) ($generated@@156 $generated@@711 $generated@@45))
 :pattern ( ($generated@@156 $generated@@711 $generated@@45))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@152) ($generated@@156 $generated@@712 $generated@@48))
 :pattern ( ($generated@@156 $generated@@712 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () Int)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 (T@U) Bool)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () Int)
(declare-fun $generated@@720 () T@U)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@713) $generated@@152) (= (type $generated@@718) $generated@@152)) (= (type $generated@@720) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@717) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@715) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@721) ($generated@@197 $generated@@82 $generated@@4))) (= (type $generated@@722) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@723  (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@385 $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (or ($generated@@299 ($generated@@141 $generated@@554) $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (=> (< 0 ($generated@@167 $generated@@713)) (> ($generated@@418 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714)) 0))))) (=> (=> ($generated@@385 $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (or ($generated@@299 ($generated@@141 $generated@@554) $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (=> (< 0 ($generated@@167 $generated@@713)) (> ($generated@@418 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714)) 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@385 $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (or ($generated@@299 ($generated@@141 $generated@@554) $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (=> (< 0 ($generated@@167 $generated@@713)) ($generated@@299 ($generated@@141 ($generated@@141 $generated@@554)) ($generated@@165 $generated@@713 ($generated@@166 1)) ($generated@@419 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714))))))) (=> (=> ($generated@@385 $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (or ($generated@@299 ($generated@@141 $generated@@554) $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (=> (< 0 ($generated@@167 $generated@@713)) ($generated@@299 ($generated@@141 ($generated@@141 $generated@@554)) ($generated@@165 $generated@@713 ($generated@@166 1)) ($generated@@419 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@385 $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (or ($generated@@299 ($generated@@141 $generated@@554) $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (=> (= ($generated@@283 0) ($generated@@167 $generated@@713)) (forall (($generated@@724 T@U) ) (!  (=> (and (= (type $generated@@724) $generated@@152) ($generated@@151 $generated@@724 $generated@@713)) ($generated@@299 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@724 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714)))
 :pattern ( ($generated@@299 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@724 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714)))
))))))))))))
(let (($generated@@725  (=> (<= ($generated@@167 $generated@@713) 0) (=> (and (and (and ($generated@@84 $generated@@715) ($generated@@716 $generated@@715)) (= $generated@@717 $generated@@715)) (and (forall (($generated@@726 T@U) ($generated@@727 Int) ) (!  (=> (= (type $generated@@726) $generated@@152) (=> (and ($generated@@151 $generated@@726 $generated@@713) (<= ($generated@@283 1) $generated@@727)) ($generated@@299 ($generated@@141 $generated@@554) $generated@@726 ($generated@@159 ($generated@@141 $generated@@554) $generated@@727))))
 :no-pattern (type $generated@@726)
 :no-pattern ($generated $generated@@726)
 :no-pattern ($generated@@0 $generated@@726)
)) (= (ControlFlow 0 9) 2))) $generated@@723))))
(let (($generated@@728  (=> (< 0 ($generated@@167 $generated@@713)) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@374 ($generated@@285 ($generated@@166 1)))) (=> ($generated@@374 ($generated@@285 ($generated@@166 1))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (<= ($generated@@167 ($generated@@285 ($generated@@166 1))) ($generated@@167 $generated@@713))) (=> (<= ($generated@@167 ($generated@@285 ($generated@@166 1))) ($generated@@167 $generated@@713)) (=> (and (= $generated@@718 ($generated@@165 $generated@@713 ($generated@@166 1))) (= $generated@@719 (+ $generated@@714 1))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (<= ($generated@@283 1) $generated@@719)) (=> (<= ($generated@@283 1) $generated@@719) (=> (and (and (and ($generated@@84 $generated@@720) ($generated@@716 $generated@@720)) (and ($generated@@160 $generated@@719) ($generated@@385 $generated@@718 ($generated@@159 ($generated@@141 $generated@@554) $generated@@719)))) (and (and ($generated@@385 $generated@@718 ($generated@@159 ($generated@@141 $generated@@554) $generated@@719)) (and ($generated@@299 ($generated@@141 $generated@@554) $generated@@718 ($generated@@159 ($generated@@141 $generated@@554) $generated@@719)) (and (=> (< 0 ($generated@@167 $generated@@718)) (and (> ($generated@@418 ($generated@@159 ($generated@@141 $generated@@554) $generated@@719)) 0) ($generated@@299 ($generated@@141 $generated@@554) ($generated@@165 $generated@@718 ($generated@@166 1)) ($generated@@419 ($generated@@159 ($generated@@141 $generated@@554) $generated@@719))))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@718)) (forall (($generated@@729 T@U) ) (!  (=> (and (= (type $generated@@729) $generated@@152) ($generated@@151 $generated@@729 $generated@@718)) ($generated@@299 ($generated@@141 $generated@@554) $generated@@729 ($generated@@159 ($generated@@141 $generated@@554) $generated@@719)))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@554) $generated@@729 ($generated@@159 ($generated@@141 $generated@@554) $generated@@719)))
)))))) (and (= $generated@@717 $generated@@720) (= (ControlFlow 0 5) 2)))) $generated@@723)))))))))))
(let (($generated@@730  (=> (= $generated@@721 ($generated@@196 $generated@@722 $generated@@717 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 5) $generated@@728) (=> (= (ControlFlow 0 10) 9) $generated@@725)))))
(let (($generated@@731  (=> (and (and (and ($generated@@84 $generated@@717) ($generated@@716 $generated@@717)) (= 3 $generated@@158)) (and (<= ($generated@@283 1) $generated@@714) (= (ControlFlow 0 11) 10))) $generated@@730)))
$generated@@731))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int T@U) T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@147 (Int) T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 (T@U Int) T@U)
(declare-fun $generated@@160 (Int) Bool)
(declare-fun $generated@@165 (T@U T@U) T@U)
(declare-fun $generated@@166 (Int) T@U)
(declare-fun $generated@@167 (T@U) Int)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@195 (T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@197 (T@T T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (Int) Int)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@289 (T@U T@U T@U) Bool)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U T@U T@U) Bool)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@332 (T@U) Int)
(declare-fun $generated@@333 (T@T) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@T) T@U)
(declare-fun $generated@@358 (T@T T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@374 (T@U) Bool)
(declare-fun $generated@@381 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) Bool)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@418 (T@U) Int)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@464 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@U T@U) T@U)
(declare-fun $generated@@480 (T@T) T@U)
(declare-fun $generated@@504 () T@T)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@554 () T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@559 (T@U Int) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(declare-fun $generated@@599 (T@U) Int)
(declare-fun $generated@@621 (T@U) T@U)
(declare-fun $generated@@695 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@80) 11) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@91 $generated@@92)) 12))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@81 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@81 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@81 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@81 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@70 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@83) 14)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@83)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@70 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ($generated@@136 T@U) ) (! (= (type ($generated@@78 $generated@@135 $generated@@136)) $generated@@80)
 :pattern ( ($generated@@78 $generated@@135 $generated@@136))
))) (= (type $generated@@79) $generated@@67)))
(assert (forall (($generated@@137 Int) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) $generated@@80) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@84 $generated@@139)) (= ($generated@@77 ($generated@@78 $generated@@137 $generated@@138) $generated@@79 $generated@@139)  (and ($generated@@77 ($generated@@8 $generated@@137) $generated@@46 $generated@@139) ($generated@@77 $generated@@138 $generated@@79 $generated@@139))))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@137 $generated@@138) $generated@@79 $generated@@139))
)))
(assert  (and (= ($generated@@1 $generated@@142) 15) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@141 $generated@@143)) $generated@@142)
 :pattern ( ($generated@@141 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@142) (= (type $generated@@145) $generated@@80)) (= (type $generated@@146) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@144) $generated@@145 $generated@@146) (= $generated@@145 $generated@@146)))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@144) $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 Int) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@2) (= (type $generated@@150) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@77 $generated@@149 ($generated@@147 0) $generated@@150))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@147 0) $generated@@150))
)))
(assert (= ($generated@@1 $generated@@152) 16))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@152) (= (type $generated@@154) $generated@@152)) (= (type $generated@@155) $generated@@152)) (and ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@154 $generated@@155))) ($generated@@151 $generated@@153 $generated@@155))
 :pattern ( ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@154 $generated@@155))
 :pattern ( ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@153 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@147 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@147 0)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 Int) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@80)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
)))
(assert  (=> (<= 1 $generated@@158) (forall (($generated@@163 T@U) ($generated@@164 Int) ) (!  (=> (and (= (type $generated@@163) $generated@@142) (or ($generated@@160 $generated@@164) (not (= 1 $generated@@158)))) ($generated@@156 ($generated@@159 $generated@@163 $generated@@164) $generated@@79))
 :pattern ( ($generated@@159 $generated@@163 $generated@@164))
))))
(assert  (and (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@165 $generated@@168 $generated@@169)) $generated@@152)
 :pattern ( ($generated@@165 $generated@@168 $generated@@169))
)) (forall (($generated@@170 Int) ) (! (= (type ($generated@@166 $generated@@170)) $generated@@152)
 :pattern ( ($generated@@166 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 Int) ($generated@@173 Int) ) (!  (=> (= (type $generated@@171) $generated@@152) (=> (and (and (<= 0 $generated@@172) (<= 0 $generated@@173)) (<= (+ $generated@@172 $generated@@173) ($generated@@167 $generated@@171))) (= ($generated@@165 ($generated@@165 $generated@@171 ($generated@@166 $generated@@172)) ($generated@@166 $generated@@173)) ($generated@@165 $generated@@171 ($generated@@166 (+ $generated@@172 $generated@@173))))))
 :pattern ( ($generated@@165 ($generated@@165 $generated@@171 ($generated@@166 $generated@@172)) ($generated@@166 $generated@@173)))
)))
(assert  (=> (<= 1 $generated@@158) (forall (($generated@@174 T@U) ($generated@@175 Int) ) (!  (=> (and (= (type $generated@@174) $generated@@142) (or ($generated@@160 $generated@@175) (not (= 1 $generated@@158)))) (and ($generated@@160 (+ $generated@@175 1)) (= ($generated@@159 ($generated@@141 $generated@@174) $generated@@175) ($generated@@78 $generated@@175 ($generated@@159 $generated@@174 (+ $generated@@175 1))))))
 :pattern ( ($generated@@159 ($generated@@141 $generated@@174) $generated@@175))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@178 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and (= (type $generated@@180) $generated@@67) (= (type $generated@@181) $generated@@67)) (= (type $generated@@182) $generated@@80)) ($generated@@156 $generated@@182 ($generated@@177 $generated@@180 $generated@@181))) ($generated@@176 $generated@@182))
 :pattern ( ($generated@@176 $generated@@182) ($generated@@156 $generated@@182 ($generated@@177 $generated@@180 $generated@@181)))
)))
(assert  (and (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@152)
 :pattern ( ($generated@@184 $generated@@186))
)) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@152)
 :pattern ( ($generated@@185 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@80) (= (type $generated@@189) $generated@@80)) true) (= ($generated@@183 $generated@@188 $generated@@189)  (and (= ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)) (= ($generated@@185 $generated@@188) ($generated@@185 $generated@@189)))))
 :pattern ( ($generated@@183 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@67)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@194) $generated@@67)) ($generated@@156 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@156 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@201 $generated@@202)) 17)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@197 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@199 ($generated@@197 $generated@@205 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@197 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@199 (type $generated@@207))))
(= (type ($generated@@195 $generated@@207 $generated@@208 $generated@@209)) $generated@@210))
 :pattern ( ($generated@@195 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
(let (($generated@@216 (type $generated@@212)))
(= (type ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@197 $generated@@216 $generated@@215))))
 :pattern ( ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@199 (type $generated@@217))))
 (=> (= (type $generated@@220) $generated@@221) (= ($generated@@195 ($generated@@200 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@218 $generated@@219) $generated@@220)))
 :weight 0
))) (and (and (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@195 ($generated@@200 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@195 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@195 ($generated@@200 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@195 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or true (= ($generated@@195 ($generated@@200 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@195 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@197 $generated@@82 $generated@@4))
 :pattern ( ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@70 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@82) (= (type $generated@@245) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@246) ($generated@@69 $generated@@4))) (= (type $generated@@248) $generated@@82)) (= (type $generated@@249) ($generated@@69 $generated@@250))) (= ($generated@@0 ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) $generated@@142) (= (type $generated@@253) $generated@@80)) (= (type $generated@@254) $generated@@80)) (forall (($generated@@255 Int) ) (!  (=> (<= 0 $generated@@255) ($generated@@251 ($generated@@166 $generated@@255) ($generated@@141 $generated@@252) $generated@@253 $generated@@254))
 :pattern ( ($generated@@251 ($generated@@166 $generated@@255) ($generated@@141 $generated@@252) $generated@@253 $generated@@254))
))) ($generated@@140 ($generated@@141 $generated@@252) $generated@@253 $generated@@254))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@252) $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@80) ($generated@@156 $generated@@257 $generated@@79)) ($generated@@256 $generated@@257))
 :pattern ( ($generated@@256 $generated@@257) ($generated@@156 $generated@@257 $generated@@79))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@80)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@67) (= (type $generated@@263) $generated@@67)) (= (type $generated@@264) $generated@@152)) (= (type $generated@@265) $generated@@152)) (= ($generated@@156 ($generated@@258 $generated@@264 $generated@@265) ($generated@@177 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@156 ($generated@@258 $generated@@264 $generated@@265) ($generated@@177 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@80) (= (type $generated@@267) $generated@@80)) (= ($generated@@183 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@183 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@152) (= (type $generated@@269) $generated@@142)) (= (type $generated@@270) $generated@@80)) (= (type $generated@@271) $generated@@80)) (= (type $generated@@272) $generated@@152)) (and ($generated@@151 $generated@@268 $generated@@272) ($generated@@251 $generated@@272 ($generated@@141 $generated@@269) $generated@@270 $generated@@271))) ($generated@@251 $generated@@268 ($generated@@141 $generated@@269) $generated@@270 $generated@@271))
 :pattern ( ($generated@@251 $generated@@268 ($generated@@141 $generated@@269) $generated@@270 $generated@@271) ($generated@@251 $generated@@272 ($generated@@141 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@67)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@276) $generated@@67)) (= ($generated@@156 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@152) ($generated@@0 ($generated@@87 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@87 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@156 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@67)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@281) $generated@@67)) (= ($generated@@156 $generated@@280 ($generated@@278 $generated@@281)) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@152) ($generated@@0 ($generated@@87 $generated@@280 $generated@@282))) ($generated@@259 $generated@@282 $generated@@281))
 :pattern ( ($generated@@87 $generated@@280 $generated@@282))
))))
 :pattern ( ($generated@@156 $generated@@280 ($generated@@278 $generated@@281)))
)))
(assert (forall (($generated@@284 Int) ) (! (= ($generated@@283 $generated@@284) $generated@@284)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
(= (type ($generated@@285 $generated@@286)) $generated@@287))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= ($generated@@285 $generated@@288) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) $generated@@67)) (= (type $generated@@292) $generated@@152)) (= (type $generated@@293) $generated@@152)) (= (type $generated@@294) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@84 $generated@@294)) (= ($generated@@77 ($generated@@258 $generated@@292 $generated@@293) ($generated@@177 $generated@@290 $generated@@291) $generated@@294)  (and ($generated@@289 $generated@@292 $generated@@290 $generated@@294) ($generated@@289 $generated@@293 $generated@@291 $generated@@294))))
 :pattern ( ($generated@@77 ($generated@@258 $generated@@292 $generated@@293) ($generated@@177 $generated@@290 $generated@@291) $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@71)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@80) (= ($generated@@176 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@61)))
 :pattern ( ($generated@@176 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@80) (= ($generated@@256 $generated@@298) (= ($generated@@295 $generated@@298) $generated@@63)))
 :pattern ( ($generated@@256 $generated@@298))
)))
(assert  (=> (<= 2 $generated@@158) (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (= (type $generated@@300) $generated@@142) (= (type $generated@@301) $generated@@80)) (= (type $generated@@302) $generated@@152)) (and ($generated@@156 $generated@@301 $generated@@79) (= $generated@@302 ($generated@@166 0)))) ($generated@@299 $generated@@300 $generated@@302 $generated@@301))
 :pattern ( ($generated@@299 $generated@@300 $generated@@302 $generated@@301))
))))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@80) ($generated@@176 $generated@@303)) (exists (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (and (and (= (type $generated@@304) $generated@@152) (= (type $generated@@305) $generated@@152)) (= $generated@@303 ($generated@@258 $generated@@304 $generated@@305)))
 :no-pattern (type $generated@@304)
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
)))
 :pattern ( ($generated@@176 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@80) ($generated@@256 $generated@@306)) (exists (($generated@@307 Int) ($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@80) (= $generated@@306 ($generated@@78 $generated@@307 $generated@@308)))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
)))
 :pattern ( ($generated@@256 $generated@@306))
)))
(assert  (and (and (forall (($generated@@313 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@313)) 18)) (forall (($generated@@314 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@311 $generated@@314))
))) (forall (($generated@@315 T@T) ) (! (= (type ($generated@@309 $generated@@315)) ($generated@@311 $generated@@315))
 :pattern ( ($generated@@309 $generated@@315))
))))
(assert (forall (($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@316)) 0)
 :pattern ( ($generated@@309 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) $generated@@152) (= (type $generated@@318) $generated@@142)) (= (type $generated@@319) $generated@@80)) (= (type $generated@@320) $generated@@80)) (not (= $generated@@317 ($generated@@166 0)))) (= ($generated@@251 $generated@@317 ($generated@@141 $generated@@318) $generated@@319 $generated@@320) ($generated@@251 $generated@@317 $generated@@318 $generated@@319 $generated@@320)))
 :pattern ( ($generated@@251 $generated@@317 ($generated@@141 $generated@@318) $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) $generated@@142) (= (type $generated@@322) $generated@@80)) (= (type $generated@@323) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@321) $generated@@322 $generated@@323) ($generated@@140 $generated@@321 $generated@@322 $generated@@323)))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@321) $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@324) $generated@@142) (= (type $generated@@325) $generated@@152)) (= (type $generated@@326) $generated@@80)) (= ($generated@@299 ($generated@@141 $generated@@324) $generated@@325 $generated@@326) ($generated@@299 $generated@@324 $generated@@325 $generated@@326)))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@324) $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@152)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@67) (= (type $generated@@331) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@289 ($generated@@327 $generated@@329) $generated@@330 $generated@@331) ($generated@@77 $generated@@329 $generated@@330 $generated@@331)))
 :pattern ( ($generated@@289 ($generated@@327 $generated@@329) $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@334 T@T) ) (! (= (type ($generated@@333 $generated@@334)) ($generated@@81 $generated@@334 $generated@@2))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@85 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@81 $generated@@336 $generated@@2)) (and (= (= ($generated@@332 $generated@@335) 0) (= $generated@@335 ($generated@@333 $generated@@336))) (=> (not (= ($generated@@332 $generated@@335) 0)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) (< 0 ($generated ($generated@@87 $generated@@335 $generated@@337))))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 19)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@81 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@87 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@87 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert  (and (and (and (and (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (= ($generated@@1 ($generated@@358 $generated@@361 $generated@@362)) 20)) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= ($generated@@359 ($generated@@358 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@358 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@360 ($generated@@358 $generated@@365 $generated@@366)) $generated@@366)
 :pattern ( ($generated@@358 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@359 (type $generated@@367))))
(= (type ($generated@@356 $generated@@367)) ($generated@@81 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@367))
))) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= (type ($generated@@357 $generated@@369 $generated@@370)) ($generated@@358 $generated@@369 $generated@@370))
 :pattern ( ($generated@@357 $generated@@369 $generated@@370))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@T) ) (! (let (($generated@@373 (type $generated@@371)))
 (not ($generated@@0 ($generated@@87 ($generated@@356 ($generated@@357 $generated@@373 $generated@@372)) $generated@@371))))
 :pattern ( (let (($generated@@373 (type $generated@@371)))
($generated@@87 ($generated@@356 ($generated@@357 $generated@@373 $generated@@372)) $generated@@371)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@152) (= (type $generated@@376) $generated@@152)) (and ($generated@@374 $generated@@376) (<= ($generated@@167 $generated@@376) ($generated@@167 $generated@@375)))) (and (= ($generated@@374 ($generated@@165 $generated@@375 $generated@@376)) ($generated@@374 $generated@@375)) (= ($generated@@167 ($generated@@165 $generated@@375 $generated@@376)) (- ($generated@@167 $generated@@375) ($generated@@167 $generated@@376)))))
 :pattern ( ($generated@@165 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 Int) ) (!  (=> (<= 0 $generated@@377) (and ($generated@@374 ($generated@@166 $generated@@377)) (= ($generated@@167 ($generated@@166 $generated@@377)) $generated@@377)))
 :pattern ( ($generated@@166 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@85 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@81 $generated@@379 $generated@@2)) (= ($generated@@191 $generated@@378) (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@379) (and (<= 0 ($generated ($generated@@87 $generated@@378 $generated@@380))) (<= ($generated ($generated@@87 $generated@@378 $generated@@380)) ($generated@@332 $generated@@378))))
 :pattern ( ($generated@@87 $generated@@378 $generated@@380))
)))))
 :pattern ( ($generated@@191 $generated@@378))
)))
(assert (forall (($generated@@382 T@T) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@152) ($generated@@259 $generated@@384 $generated@@79)) (and (= ($generated@@327 ($generated@@381 $generated@@80 $generated@@384)) $generated@@384) ($generated@@156 ($generated@@381 $generated@@80 $generated@@384) $generated@@79)))
 :pattern ( ($generated@@259 $generated@@384 $generated@@79))
)))
(assert  (=> (<= 2 $generated@@158) (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) $generated@@142) (= (type $generated@@387) $generated@@152)) (= (type $generated@@388) $generated@@80)) (or ($generated@@385 $generated@@387 $generated@@388) (and (not (= 2 $generated@@158)) ($generated@@156 $generated@@388 $generated@@79)))) true)
 :pattern ( ($generated@@299 $generated@@386 $generated@@387 $generated@@388))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) $generated@@142) (= (type $generated@@390) $generated@@80)) (= (type $generated@@391) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@389) $generated@@390 $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (= (type $generated@@392) $generated@@152) ($generated@@251 $generated@@392 ($generated@@141 $generated@@389) $generated@@390 $generated@@391))
 :pattern ( ($generated@@251 $generated@@392 ($generated@@141 $generated@@389) $generated@@390 $generated@@391))
))))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@389) $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@342 (type $generated@@393))))
(let (($generated@@395 ($generated@@341 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@340 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@339 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@338 $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@342 (type $generated@@398))))
(= (type ($generated@@397 $generated@@398)) ($generated@@81 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@342 (type $generated@@400))))
(let (($generated@@402 ($generated@@341 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@340 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@339 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@401) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@397 $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@360 (type $generated@@404))))
(let (($generated@@406 ($generated@@359 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@358 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@357 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@356 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@360 (type $generated@@409))))
(= (type ($generated@@408 $generated@@409)) ($generated@@81 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@360 (type $generated@@411))))
(let (($generated@@413 ($generated@@359 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@358 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@357 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@412) ($generated@@0 ($generated@@87 ($generated@@408 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@408 $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@416) $generated@@67)) (= ($generated@@156 $generated@@415 ($generated@@190 $generated@@416)) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@152) (< 0 ($generated ($generated@@87 $generated@@415 $generated@@417)))) ($generated@@259 $generated@@417 $generated@@416))
 :pattern ( ($generated@@87 $generated@@415 $generated@@417))
))))
 :pattern ( ($generated@@156 $generated@@415 ($generated@@190 $generated@@416)))
)))
(assert (forall (($generated@@420 T@U) ) (! (= (type ($generated@@419 $generated@@420)) $generated@@80)
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert  (=> (<= 2 $generated@@158) (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) $generated@@142) (= (type $generated@@422) $generated@@152)) (= (type $generated@@423) $generated@@80)) (or ($generated@@385 $generated@@422 $generated@@423) (and (not (= 2 $generated@@158)) ($generated@@156 $generated@@423 $generated@@79)))) (and (and (=> (< 0 ($generated@@167 $generated@@422)) (and ($generated@@256 $generated@@423) (=> (> ($generated@@418 $generated@@423) 0) (and ($generated@@256 $generated@@423) ($generated@@385 ($generated@@165 $generated@@422 ($generated@@166 1)) ($generated@@419 $generated@@423)))))) (=> (=> (< 0 ($generated@@167 $generated@@422)) (and (> ($generated@@418 $generated@@423) 0) ($generated@@299 $generated@@421 ($generated@@165 $generated@@422 ($generated@@166 1)) ($generated@@419 $generated@@423)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@422)) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@152) ($generated@@151 $generated@@424 $generated@@422)) ($generated@@385 $generated@@424 $generated@@423))
 :pattern ( ($generated@@299 $generated@@421 $generated@@424 $generated@@423))
))))) (= ($generated@@299 ($generated@@141 $generated@@421) $generated@@422 $generated@@423)  (and (=> (< 0 ($generated@@167 $generated@@422)) (and (> ($generated@@418 $generated@@423) 0) ($generated@@299 $generated@@421 ($generated@@165 $generated@@422 ($generated@@166 1)) ($generated@@419 $generated@@423)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@422)) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@152) ($generated@@151 $generated@@425 $generated@@422)) ($generated@@299 $generated@@421 $generated@@425 $generated@@423))
 :pattern ( ($generated@@299 $generated@@421 $generated@@425 $generated@@423))
)))))))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@421) $generated@@422 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) (= (type $generated@@427) $generated@@152)) (or (or ($generated@@151 $generated@@426 $generated@@427) (= $generated@@426 $generated@@427)) ($generated@@151 $generated@@427 $generated@@426)))
 :pattern ( ($generated@@151 $generated@@426 $generated@@427) ($generated@@151 $generated@@427 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@428) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@429) $generated@@67)) (= (type $generated@@430) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@428 ($generated@@273 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@152) ($generated@@0 ($generated@@87 $generated@@428 $generated@@431))) ($generated@@289 $generated@@431 $generated@@429 $generated@@430))
 :pattern ( ($generated@@87 $generated@@428 $generated@@431))
))))
 :pattern ( ($generated@@77 $generated@@428 ($generated@@273 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@433) $generated@@67)) (= (type $generated@@434) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@432 ($generated@@278 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@152) ($generated@@0 ($generated@@87 $generated@@432 $generated@@435))) ($generated@@289 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@87 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@77 $generated@@432 ($generated@@278 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(= ($generated ($generated@@87 ($generated@@333 $generated@@437) $generated@@436)) 0))
 :pattern ( (let (($generated@@437 (type $generated@@436)))
($generated@@87 ($generated@@333 $generated@@437) $generated@@436)))
)))
(assert  (and (forall (($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@440)) ($generated@@81 $generated@@152 $generated@@4))
 :pattern ( ($generated@@438 $generated@@440))
)) (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@342 (type $generated@@441))))
(let (($generated@@443 ($generated@@341 (type $generated@@441))))
(= (type ($generated@@439 $generated@@441)) ($generated@@81 $generated@@443 $generated@@442))))
 :pattern ( ($generated@@439 $generated@@441))
))))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) ($generated@@340 $generated@@152 $generated@@152)) (= (type $generated@@445) $generated@@152)) (= ($generated@@0 ($generated@@87 ($generated@@438 $generated@@444) $generated@@445))  (and ($generated@@0 ($generated@@87 ($generated@@338 $generated@@444) ($generated@@184 ($generated@@381 $generated@@80 $generated@@445)))) (= ($generated@@87 ($generated@@439 $generated@@444) ($generated@@184 ($generated@@381 $generated@@80 $generated@@445))) ($generated@@185 ($generated@@381 $generated@@80 $generated@@445))))))
 :pattern ( ($generated@@87 ($generated@@438 $generated@@444) $generated@@445))
)))
(assert  (and (forall (($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@448)) ($generated@@81 $generated@@152 $generated@@4))
 :pattern ( ($generated@@446 $generated@@448))
)) (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@360 (type $generated@@449))))
(let (($generated@@451 ($generated@@359 (type $generated@@449))))
(= (type ($generated@@447 $generated@@449)) ($generated@@81 $generated@@451 $generated@@450))))
 :pattern ( ($generated@@447 $generated@@449))
))))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) ($generated@@358 $generated@@152 $generated@@152)) (= (type $generated@@453) $generated@@152)) (= ($generated@@0 ($generated@@87 ($generated@@446 $generated@@452) $generated@@453))  (and ($generated@@0 ($generated@@87 ($generated@@356 $generated@@452) ($generated@@184 ($generated@@381 $generated@@80 $generated@@453)))) (= ($generated@@87 ($generated@@447 $generated@@452) ($generated@@184 ($generated@@381 $generated@@80 $generated@@453))) ($generated@@185 ($generated@@381 $generated@@80 $generated@@453))))))
 :pattern ( ($generated@@87 ($generated@@446 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@341 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@340 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@87 ($generated@@338 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@87 ($generated@@439 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@454) $generated@@458))
 :pattern ( ($generated@@87 ($generated@@439 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (let (($generated@@461 (type $generated@@460)))
(let (($generated@@462 ($generated@@359 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@358 $generated@@462 $generated@@461)) (= ($generated@@0 ($generated@@87 ($generated@@408 $generated@@459) $generated@@460)) (exists (($generated@@463 T@U) ) (!  (and (= (type $generated@@463) $generated@@462) (and ($generated@@0 ($generated@@87 ($generated@@356 $generated@@459) $generated@@463)) (= $generated@@460 ($generated@@87 ($generated@@447 $generated@@459) $generated@@463))))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@459) $generated@@463))
 :pattern ( ($generated@@87 ($generated@@447 $generated@@459) $generated@@463))
))))))
 :pattern ( ($generated@@87 ($generated@@408 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (= (type ($generated@@464 $generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (and (= (type $generated@@467) ($generated@@340 $generated@@152 $generated@@152)) (= (type $generated@@468) $generated@@67)) (= (type $generated@@469) $generated@@67)) (= (type $generated@@470) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@467) $generated@@471))) (and ($generated@@289 ($generated@@87 ($generated@@439 $generated@@467) $generated@@471) $generated@@469 $generated@@470) ($generated@@289 $generated@@471 $generated@@468 $generated@@470)))
 :pattern ( ($generated@@87 ($generated@@439 $generated@@467) $generated@@471))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@467) $generated@@471))
))))
 :pattern ( ($generated@@77 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@472 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (and (= (type $generated@@475) ($generated@@358 $generated@@152 $generated@@152)) (= (type $generated@@476) $generated@@67)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@475) $generated@@479))) (and ($generated@@289 ($generated@@87 ($generated@@447 $generated@@475) $generated@@479) $generated@@477 $generated@@478) ($generated@@289 $generated@@479 $generated@@476 $generated@@478)))
 :pattern ( ($generated@@87 ($generated@@447 $generated@@475) $generated@@479))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@475) $generated@@479))
))))
 :pattern ( ($generated@@77 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 T@T) ) (! (= (type ($generated@@480 $generated@@481)) ($generated@@81 $generated@@481 $generated@@4))
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@360 (type $generated@@482))))
(let (($generated@@484 ($generated@@359 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@358 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@357 $generated@@484 $generated@@483)) (= ($generated@@356 $generated@@482) ($generated@@480 $generated@@484))))))
 :pattern ( ($generated@@356 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@360 (type $generated@@485))))
(let (($generated@@487 ($generated@@359 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@358 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@357 $generated@@487 $generated@@486)) (= ($generated@@408 $generated@@485) ($generated@@480 $generated@@486))))))
 :pattern ( ($generated@@408 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@360 (type $generated@@488))))
(let (($generated@@490 ($generated@@359 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@358 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@357 $generated@@490 $generated@@489)) (= ($generated@@446 $generated@@488) ($generated@@480 $generated@@152))))))
 :pattern ( ($generated@@446 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@342 (type $generated@@491))))
(let (($generated@@493 ($generated@@341 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@340 $generated@@493 $generated@@492)) (or (= $generated@@491 ($generated@@339 $generated@@493 $generated@@492)) (exists (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (and (and (= (type $generated@@494) $generated@@152) (= (type $generated@@495) $generated@@152)) ($generated@@0 ($generated@@87 ($generated@@438 $generated@@491) ($generated@@327 ($generated@@258 $generated@@494 $generated@@495)))))
 :no-pattern (type $generated@@494)
 :no-pattern (type $generated@@495)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
))))))
 :pattern ( ($generated@@438 $generated@@491))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@360 (type $generated@@496))))
(let (($generated@@498 ($generated@@359 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@358 $generated@@498 $generated@@497)) (or (= $generated@@496 ($generated@@357 $generated@@498 $generated@@497)) (exists (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (and (and (= (type $generated@@499) $generated@@152) (= (type $generated@@500) $generated@@152)) ($generated@@0 ($generated@@87 ($generated@@446 $generated@@496) ($generated@@327 ($generated@@258 $generated@@499 $generated@@500)))))
 :no-pattern (type $generated@@499)
 :no-pattern (type $generated@@500)
 :no-pattern ($generated $generated@@499)
 :no-pattern ($generated@@0 $generated@@499)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
))))))
 :pattern ( ($generated@@446 $generated@@496))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@152) ($generated@@259 $generated@@501 $generated@@46)) (and (= ($generated@@327 ($generated@@381 $generated@@2 $generated@@501)) $generated@@501) ($generated@@156 ($generated@@381 $generated@@2 $generated@@501) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@501 $generated@@46))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@152) ($generated@@259 $generated@@502 $generated@@47)) (and (= ($generated@@327 ($generated@@381 $generated@@3 $generated@@502)) $generated@@502) ($generated@@156 ($generated@@381 $generated@@3 $generated@@502) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@502 $generated@@47))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@152) ($generated@@259 $generated@@503 $generated@@44)) (and (= ($generated@@327 ($generated@@381 $generated@@4 $generated@@503)) $generated@@503) ($generated@@156 ($generated@@381 $generated@@4 $generated@@503) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@503 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@504) 21))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@152) ($generated@@259 $generated@@505 $generated@@45)) (and (= ($generated@@327 ($generated@@381 $generated@@504 $generated@@505)) $generated@@505) ($generated@@156 ($generated@@381 $generated@@504 $generated@@505) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@505 $generated@@45))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@259 ($generated@@327 $generated@@506) $generated@@507) ($generated@@156 $generated@@506 $generated@@507)))
 :pattern ( ($generated@@259 ($generated@@327 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@152) (<= 0 ($generated@@167 $generated@@508)))
 :pattern ( ($generated@@167 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@85 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@81 $generated@@510 $generated@@2)) (<= 0 ($generated@@332 $generated@@509))))
 :pattern ( ($generated@@332 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@312 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@311 $generated@@512)) (<= 0 ($generated@@310 $generated@@511))))
 :pattern ( ($generated@@310 $generated@@511))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@67)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@67) (= (type $generated@@516) $generated@@67)) (= ($generated@@513 ($generated@@464 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@464 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@67)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@67) (= (type $generated@@520) $generated@@67)) (= ($generated@@517 ($generated@@464 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@464 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@67) (= (type $generated@@522) $generated@@67)) (= ($generated@@75 ($generated@@464 $generated@@521 $generated@@522)) $generated@@58))
 :pattern ( ($generated@@464 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@67) (= (type $generated@@526) $generated@@67)) (= ($generated@@523 ($generated@@472 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@472 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@67)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@67) (= (type $generated@@530) $generated@@67)) (= ($generated@@527 ($generated@@472 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@472 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@67) (= (type $generated@@532) $generated@@67)) (= ($generated@@75 ($generated@@472 $generated@@531 $generated@@532)) $generated@@59))
 :pattern ( ($generated@@472 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@152)) (= ($generated@@295 ($generated@@258 $generated@@533 $generated@@534)) $generated@@61))
 :pattern ( ($generated@@258 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@67)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@67) (= (type $generated@@538) $generated@@67)) (= ($generated@@535 ($generated@@177 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@177 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@67)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@67) (= (type $generated@@542) $generated@@67)) (= ($generated@@539 ($generated@@177 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@177 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@152) (= (type $generated@@544) $generated@@152)) (= ($generated@@184 ($generated@@258 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@258 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@152) (= (type $generated@@546) $generated@@152)) (= ($generated@@185 ($generated@@258 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@258 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 Int) ($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@80) (= ($generated@@295 ($generated@@78 $generated@@547 $generated@@548)) $generated@@63))
 :pattern ( ($generated@@78 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 Int) ($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@80) (= ($generated@@418 ($generated@@78 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@78 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 Int) ($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@80) (= ($generated@@419 ($generated@@78 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@78 $generated@@551 $generated@@552))
)))
(assert  (and (forall (($generated@@555 T@U) ) (! (= (type ($generated@@553 $generated@@555)) $generated@@142)
 :pattern ( ($generated@@553 $generated@@555))
)) (= (type $generated@@554) $generated@@142)))
(assert (forall (($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (= (type $generated@@556) $generated@@142) (= ($generated@@159 $generated@@556 $generated@@557) ($generated@@159 $generated@@554 $generated@@557)))
 :pattern ( ($generated@@159 ($generated@@553 $generated@@556) $generated@@557))
)))
(assert  (and (forall (($generated@@560 T@U) ) (! (= (type ($generated@@558 $generated@@560)) $generated@@67)
 :pattern ( ($generated@@558 $generated@@560))
)) (forall (($generated@@561 T@U) ($generated@@562 Int) ) (! (let (($generated@@563 ($generated@@312 (type $generated@@561))))
(= (type ($generated@@559 $generated@@561 $generated@@562)) $generated@@563))
 :pattern ( ($generated@@559 $generated@@561 $generated@@562))
))))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@311 $generated@@152)) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@564 ($generated@@558 $generated@@565) $generated@@566) (forall (($generated@@567 Int) ) (!  (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@310 $generated@@564))) ($generated@@289 ($generated@@559 $generated@@564 $generated@@567) $generated@@565 $generated@@566))
 :pattern ( ($generated@@559 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@77 $generated@@564 ($generated@@558 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@568 ($generated@@147 $generated@@569)) $generated@@569)
 :pattern ( ($generated@@147 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@67)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@67) (= ($generated@@570 ($generated@@273 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@273 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@67) (= ($generated@@75 ($generated@@273 $generated@@573)) $generated@@54))
 :pattern ( ($generated@@273 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@67)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@67) (= ($generated@@574 ($generated@@278 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@278 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@67) (= ($generated@@75 ($generated@@278 $generated@@577)) $generated@@55))
 :pattern ( ($generated@@278 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@67)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@67) (= ($generated@@578 ($generated@@190 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@190 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@67) (= ($generated@@75 ($generated@@190 $generated@@581)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@67)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@67) (= ($generated@@582 ($generated@@558 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@558 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@67) (= ($generated@@75 ($generated@@558 $generated@@585)) $generated@@57))
 :pattern ( ($generated@@558 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
(= ($generated@@381 $generated@@587 ($generated@@327 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@327 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@340 $generated@@152 $generated@@152)) (= (type $generated@@589) $generated@@67)) (= (type $generated@@590) $generated@@67)) (= ($generated@@156 $generated@@588 ($generated@@464 $generated@@589 $generated@@590)) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@588) $generated@@591))) (and ($generated@@259 ($generated@@87 ($generated@@439 $generated@@588) $generated@@591) $generated@@590) ($generated@@259 $generated@@591 $generated@@589)))
 :pattern ( ($generated@@87 ($generated@@439 $generated@@588) $generated@@591))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@588) $generated@@591))
))))
 :pattern ( ($generated@@156 $generated@@588 ($generated@@464 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@358 $generated@@152 $generated@@152)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) $generated@@67)) (= ($generated@@156 $generated@@592 ($generated@@472 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@592) $generated@@595))) (and ($generated@@259 ($generated@@87 ($generated@@447 $generated@@592) $generated@@595) $generated@@594) ($generated@@259 $generated@@595 $generated@@593)))
 :pattern ( ($generated@@87 ($generated@@447 $generated@@592) $generated@@595))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@592) $generated@@595))
))))
 :pattern ( ($generated@@156 $generated@@592 ($generated@@472 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@152) (= (type $generated@@597) $generated@@152)) (and (and (and (=> ($generated@@151 $generated@@596 $generated@@597) (not (= $generated@@596 $generated@@597))) (=> (and ($generated@@374 $generated@@596) (not ($generated@@374 $generated@@597))) ($generated@@151 $generated@@596 $generated@@597))) (=> (and ($generated@@374 $generated@@596) ($generated@@374 $generated@@597)) (= ($generated@@151 $generated@@596 $generated@@597) (< ($generated@@167 $generated@@596) ($generated@@167 $generated@@597))))) (=> (and ($generated@@151 $generated@@596 $generated@@597) ($generated@@374 $generated@@597)) ($generated@@374 $generated@@596))))
 :pattern ( ($generated@@151 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@152) (= (type $generated@@601) $generated@@152)) (< ($generated@@598 $generated@@600) ($generated@@599 ($generated@@258 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@258 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@152) (= (type $generated@@603) $generated@@152)) (< ($generated@@598 $generated@@603) ($generated@@599 ($generated@@258 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@258 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@604) $generated@@152) (= (type $generated@@605) $generated@@142)) (= (type $generated@@606) $generated@@80)) (= (type $generated@@607) $generated@@80)) (and ($generated@@156 $generated@@606 $generated@@79) ($generated@@156 $generated@@607 $generated@@79))) (= ($generated@@251 $generated@@604 ($generated@@141 $generated@@605) $generated@@606 $generated@@607)  (and (=> (< 0 ($generated@@167 $generated@@604)) (and (and ($generated@@256 $generated@@606) ($generated@@256 $generated@@607)) (=> (and ($generated@@256 $generated@@606) ($generated@@256 $generated@@607)) (and (= ($generated@@418 $generated@@606) ($generated@@418 $generated@@607)) ($generated@@251 ($generated@@165 $generated@@604 ($generated@@166 1)) $generated@@605 ($generated@@419 $generated@@606) ($generated@@419 $generated@@607)))))) (=> (and (not (= $generated@@604 ($generated@@166 0))) (= ($generated@@167 $generated@@604) 0)) ($generated@@140 $generated@@605 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@251 $generated@@604 ($generated@@141 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 Int) ) (!  (=> (= (type $generated@@608) $generated@@142) (= ($generated@@159 ($generated@@141 $generated@@608) $generated@@609) ($generated@@159 $generated@@608 $generated@@609)))
 :pattern ( ($generated@@159 ($generated@@141 $generated@@608) $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@152) (= (type $generated@@611) $generated@@67)) (= (type $generated@@612) $generated@@67)) ($generated@@259 $generated@@610 ($generated@@464 $generated@@611 $generated@@612))) (and (= ($generated@@327 ($generated@@381 ($generated@@340 $generated@@152 $generated@@152) $generated@@610)) $generated@@610) ($generated@@156 ($generated@@381 ($generated@@340 $generated@@152 $generated@@152) $generated@@610) ($generated@@464 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@259 $generated@@610 ($generated@@464 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@152) (= (type $generated@@614) $generated@@67)) (= (type $generated@@615) $generated@@67)) ($generated@@259 $generated@@613 ($generated@@472 $generated@@614 $generated@@615))) (and (= ($generated@@327 ($generated@@381 ($generated@@358 $generated@@152 $generated@@152) $generated@@613)) $generated@@613) ($generated@@156 ($generated@@381 ($generated@@358 $generated@@152 $generated@@152) $generated@@613) ($generated@@472 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@259 $generated@@613 ($generated@@472 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@67) (= (type $generated@@617) $generated@@67)) (= (type $generated@@618) $generated@@152)) ($generated@@259 $generated@@618 ($generated@@177 $generated@@616 $generated@@617))) (and (= ($generated@@327 ($generated@@381 $generated@@80 $generated@@618)) $generated@@618) ($generated@@156 ($generated@@381 $generated@@80 $generated@@618) ($generated@@177 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@259 $generated@@618 ($generated@@177 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 (type $generated@@619)))
 (not ($generated@@0 ($generated@@87 ($generated@@480 $generated@@620) $generated@@619))))
 :pattern ( (let (($generated@@620 (type $generated@@619)))
($generated@@87 ($generated@@480 $generated@@620) $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ) (! (= (type ($generated@@621 $generated@@622)) $generated@@72)
 :pattern ( ($generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@67) (= (type $generated@@624) $generated@@67)) (and (= ($generated@@75 ($generated@@177 $generated@@623 $generated@@624)) $generated@@62) (= ($generated@@621 ($generated@@177 $generated@@623 $generated@@624)) $generated@@65)))
 :pattern ( ($generated@@177 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@80) (= (type $generated@@626) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@626) (and ($generated@@256 $generated@@625) ($generated@@77 $generated@@625 $generated@@79 $generated@@626)))) ($generated@@77 ($generated@@8 ($generated@@418 $generated@@625)) $generated@@46 $generated@@626))
 :pattern ( ($generated@@77 ($generated@@8 ($generated@@418 $generated@@625)) $generated@@46 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@80) (= ($generated@@598 ($generated@@327 $generated@@627)) ($generated@@599 $generated@@627)))
 :pattern ( ($generated@@598 ($generated@@327 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@152) ($generated@@259 $generated@@628 ($generated@@147 0))) (and (= ($generated@@327 ($generated@@381 $generated@@2 $generated@@628)) $generated@@628) ($generated@@156 ($generated@@381 ($generated@@81 $generated@@152 $generated@@4) $generated@@628) ($generated@@147 0))))
 :pattern ( ($generated@@259 $generated@@628 ($generated@@147 0)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@152) (= (type $generated@@630) $generated@@67)) ($generated@@259 $generated@@629 ($generated@@273 $generated@@630))) (and (= ($generated@@327 ($generated@@381 ($generated@@81 $generated@@152 $generated@@4) $generated@@629)) $generated@@629) ($generated@@156 ($generated@@381 ($generated@@81 $generated@@152 $generated@@4) $generated@@629) ($generated@@273 $generated@@630))))
 :pattern ( ($generated@@259 $generated@@629 ($generated@@273 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@152) (= (type $generated@@632) $generated@@67)) ($generated@@259 $generated@@631 ($generated@@278 $generated@@632))) (and (= ($generated@@327 ($generated@@381 ($generated@@81 $generated@@152 $generated@@4) $generated@@631)) $generated@@631) ($generated@@156 ($generated@@381 ($generated@@81 $generated@@152 $generated@@4) $generated@@631) ($generated@@278 $generated@@632))))
 :pattern ( ($generated@@259 $generated@@631 ($generated@@278 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@152) (= (type $generated@@634) $generated@@67)) ($generated@@259 $generated@@633 ($generated@@190 $generated@@634))) (and (= ($generated@@327 ($generated@@381 ($generated@@81 $generated@@152 $generated@@2) $generated@@633)) $generated@@633) ($generated@@156 ($generated@@381 ($generated@@81 $generated@@152 $generated@@2) $generated@@633) ($generated@@190 $generated@@634))))
 :pattern ( ($generated@@259 $generated@@633 ($generated@@190 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@152) (= (type $generated@@636) $generated@@67)) ($generated@@259 $generated@@635 ($generated@@558 $generated@@636))) (and (= ($generated@@327 ($generated@@381 ($generated@@311 $generated@@152) $generated@@635)) $generated@@635) ($generated@@156 ($generated@@381 ($generated@@311 $generated@@152) $generated@@635) ($generated@@558 $generated@@636))))
 :pattern ( ($generated@@259 $generated@@635 ($generated@@558 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@152) ($generated@@374 $generated@@637)) (= $generated@@637 ($generated@@166 ($generated@@167 $generated@@637))))
 :pattern ( ($generated@@167 $generated@@637))
 :pattern ( ($generated@@374 $generated@@637))
)))
(assert  (=> (<= 2 $generated@@158) (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) $generated@@142) (= (type $generated@@639) $generated@@152)) (= (type $generated@@640) $generated@@80)) (or ($generated@@385 ($generated@@285 $generated@@639) $generated@@640) (and (not (= 2 $generated@@158)) ($generated@@156 $generated@@640 $generated@@79)))) (and (and (=> (< 0 ($generated@@167 $generated@@639)) (and ($generated@@256 $generated@@640) (=> (> ($generated@@418 $generated@@640) 0) (and ($generated@@256 $generated@@640) ($generated@@385 ($generated@@165 $generated@@639 ($generated@@166 1)) ($generated@@419 $generated@@640)))))) (=> (=> (< 0 ($generated@@167 $generated@@639)) (and (> ($generated@@418 $generated@@640) 0) ($generated@@299 ($generated@@141 $generated@@638) ($generated@@165 $generated@@639 ($generated@@166 1)) ($generated@@419 $generated@@640)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@639)) (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@152) ($generated@@151 $generated@@641 $generated@@639)) ($generated@@385 $generated@@641 $generated@@640))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@638) $generated@@641 $generated@@640))
))))) (= ($generated@@299 ($generated@@141 $generated@@638) ($generated@@285 $generated@@639) $generated@@640)  (and (=> (< 0 ($generated@@167 $generated@@639)) (and (> ($generated@@418 $generated@@640) 0) ($generated@@299 ($generated@@141 $generated@@638) ($generated@@165 $generated@@639 ($generated@@166 1)) ($generated@@419 $generated@@640)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@639)) (forall (($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@152) ($generated@@151 $generated@@642 $generated@@639)) ($generated@@299 ($generated@@141 $generated@@638) $generated@@642 $generated@@640))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@638) $generated@@642 $generated@@640))
)))))))
 :weight 3
 :pattern ( ($generated@@299 ($generated@@141 $generated@@638) ($generated@@285 $generated@@639) $generated@@640))
))))
(assert (= ($generated@@75 $generated@@79) $generated@@64))
(assert (= ($generated@@621 $generated@@79) $generated@@66))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@643) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@644) $generated@@67)) (= (type $generated@@645) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@643 ($generated@@190 $generated@@644) $generated@@645) (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@152) (< 0 ($generated ($generated@@87 $generated@@643 $generated@@646)))) ($generated@@289 $generated@@646 $generated@@644 $generated@@645))
 :pattern ( ($generated@@87 $generated@@643 $generated@@646))
))))
 :pattern ( ($generated@@77 $generated@@643 ($generated@@190 $generated@@644) $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@647) $generated@@152) (= (type $generated@@648) $generated@@152)) (and ($generated@@374 $generated@@648) (<= ($generated@@167 $generated@@648) ($generated@@167 $generated@@647)))) (or (and (= $generated@@648 ($generated@@166 0)) (= ($generated@@165 $generated@@647 $generated@@648) $generated@@647)) (and (not (= $generated@@648 ($generated@@166 0))) ($generated@@151 ($generated@@165 $generated@@647 $generated@@648) $generated@@647))))
 :pattern ( ($generated@@165 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) $generated@@80) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@651) (and ($generated@@176 $generated@@649) (exists (($generated@@652 T@U) ) (!  (and (= (type $generated@@652) $generated@@67) ($generated@@77 $generated@@649 ($generated@@177 $generated@@650 $generated@@652) $generated@@651))
 :pattern ( ($generated@@77 $generated@@649 ($generated@@177 $generated@@650 $generated@@652) $generated@@651))
))))) ($generated@@289 ($generated@@184 $generated@@649) $generated@@650 $generated@@651))
 :pattern ( ($generated@@289 ($generated@@184 $generated@@649) $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) $generated@@80) (= (type $generated@@654) $generated@@67)) (= (type $generated@@655) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@655) (and ($generated@@176 $generated@@653) (exists (($generated@@656 T@U) ) (!  (and (= (type $generated@@656) $generated@@67) ($generated@@77 $generated@@653 ($generated@@177 $generated@@656 $generated@@654) $generated@@655))
 :pattern ( ($generated@@77 $generated@@653 ($generated@@177 $generated@@656 $generated@@654) $generated@@655))
))))) ($generated@@289 ($generated@@185 $generated@@653) $generated@@654 $generated@@655))
 :pattern ( ($generated@@289 ($generated@@185 $generated@@653) $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (= (type $generated@@657) $generated@@80) (= (type $generated@@658) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@658) (and ($generated@@256 $generated@@657) ($generated@@77 $generated@@657 $generated@@79 $generated@@658)))) ($generated@@77 ($generated@@419 $generated@@657) $generated@@79 $generated@@658))
 :pattern ( ($generated@@77 ($generated@@419 $generated@@657) $generated@@79 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@152) (= (type $generated@@660) $generated@@152)) (= ($generated@@258 ($generated@@285 $generated@@659) ($generated@@285 $generated@@660)) ($generated@@285 ($generated@@258 $generated@@659 $generated@@660))))
 :pattern ( ($generated@@258 ($generated@@285 $generated@@659) ($generated@@285 $generated@@660)))
)))
(assert (forall (($generated@@661 Int) ) (! (= ($generated@@327 ($generated@@8 ($generated@@283 $generated@@661))) ($generated@@285 ($generated@@327 ($generated@@8 $generated@@661))))
 :pattern ( ($generated@@327 ($generated@@8 ($generated@@283 $generated@@661))))
)))
(assert (forall (($generated@@662 T@U) ) (! (= ($generated@@327 ($generated@@285 $generated@@662)) ($generated@@285 ($generated@@327 $generated@@662)))
 :pattern ( ($generated@@327 ($generated@@285 $generated@@662)))
)))
(assert (forall (($generated@@663 Int) ($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@80) (= ($generated@@156 ($generated@@78 $generated@@663 $generated@@664) $generated@@79)  (and ($generated@@156 ($generated@@8 $generated@@663) $generated@@46) ($generated@@156 $generated@@664 $generated@@79))))
 :pattern ( ($generated@@156 ($generated@@78 $generated@@663 $generated@@664) $generated@@79))
)))
(assert (forall (($generated@@665 T@U) ) (! (let (($generated@@666 ($generated@@312 (type $generated@@665))))
 (=> (and (= (type $generated@@665) ($generated@@311 $generated@@666)) (= ($generated@@310 $generated@@665) 0)) (= $generated@@665 ($generated@@309 $generated@@666))))
 :pattern ( ($generated@@310 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (! (let (($generated@@670 (type $generated@@668)))
 (=> (and (and (= (type $generated@@667) ($generated@@81 $generated@@670 $generated@@2)) (= (type $generated@@669) $generated@@2)) (<= 0 ($generated $generated@@669))) (= ($generated@@332 ($generated@@88 $generated@@667 $generated@@668 $generated@@669)) (+ (- ($generated@@332 $generated@@667) ($generated ($generated@@87 $generated@@667 $generated@@668))) ($generated $generated@@669)))))
 :pattern ( ($generated@@332 ($generated@@88 $generated@@667 $generated@@668 $generated@@669)))
)))
(assert  (=> (<= 2 $generated@@158) (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@142) (= (type $generated@@672) $generated@@152)) (= (type $generated@@673) $generated@@80)) (or ($generated@@385 ($generated@@285 $generated@@672) ($generated@@285 $generated@@673)) (and (not (= 2 $generated@@158)) ($generated@@156 $generated@@673 $generated@@79)))) (and (and (=> (< 0 ($generated@@167 $generated@@672)) (and ($generated@@256 $generated@@673) (=> (> ($generated@@418 $generated@@673) 0) (and ($generated@@256 $generated@@673) ($generated@@385 ($generated@@165 $generated@@672 ($generated@@166 1)) ($generated@@419 $generated@@673)))))) (=> (=> (< 0 ($generated@@167 $generated@@672)) (and (> ($generated@@418 $generated@@673) 0) ($generated@@299 ($generated@@141 $generated@@671) ($generated@@165 $generated@@672 ($generated@@166 1)) ($generated@@419 $generated@@673)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@672)) (forall (($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@674) $generated@@152) ($generated@@151 $generated@@674 $generated@@672)) ($generated@@385 $generated@@674 $generated@@673))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@671) $generated@@674 $generated@@673))
))))) (= ($generated@@299 ($generated@@141 $generated@@671) ($generated@@285 $generated@@672) ($generated@@285 $generated@@673))  (and (=> (< 0 ($generated@@167 $generated@@672)) (and (> ($generated@@418 $generated@@673) 0) ($generated@@299 ($generated@@141 $generated@@671) ($generated@@165 $generated@@672 ($generated@@166 1)) ($generated@@419 $generated@@673)))) (=> (= ($generated@@283 0) ($generated@@167 $generated@@672)) (forall (($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@152) ($generated@@151 $generated@@675 $generated@@672)) ($generated@@299 ($generated@@141 $generated@@671) $generated@@675 $generated@@673))
 :pattern ( ($generated@@299 ($generated@@141 $generated@@671) $generated@@675 $generated@@673))
)))))))
 :weight 3
 :pattern ( ($generated@@299 ($generated@@141 $generated@@671) ($generated@@285 $generated@@672) ($generated@@285 $generated@@673)))
))))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@677) $generated@@2)) ($generated@@77 $generated@@677 $generated@@46 $generated@@676))
 :pattern ( ($generated@@77 $generated@@677 $generated@@46 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@679) $generated@@3)) ($generated@@77 $generated@@679 $generated@@47 $generated@@678))
 :pattern ( ($generated@@77 $generated@@679 $generated@@47 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@681) $generated@@4)) ($generated@@77 $generated@@681 $generated@@44 $generated@@680))
 :pattern ( ($generated@@77 $generated@@681 $generated@@44 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@683) $generated@@504)) ($generated@@77 $generated@@683 $generated@@45 $generated@@682))
 :pattern ( ($generated@@77 $generated@@683 $generated@@45 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@685) $generated@@152)) ($generated@@77 $generated@@685 $generated@@48 $generated@@684))
 :pattern ( ($generated@@77 $generated@@685 $generated@@48 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@686) ($generated@@311 $generated@@152)) (= (type $generated@@687) $generated@@67)) (= ($generated@@156 $generated@@686 ($generated@@558 $generated@@687)) (forall (($generated@@688 Int) ) (!  (=> (and (<= 0 $generated@@688) (< $generated@@688 ($generated@@310 $generated@@686))) ($generated@@259 ($generated@@559 $generated@@686 $generated@@688) $generated@@687))
 :pattern ( ($generated@@559 $generated@@686 $generated@@688))
))))
 :pattern ( ($generated@@156 $generated@@686 ($generated@@558 $generated@@687)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (= (type $generated@@689) $generated@@142) (= (type $generated@@690) $generated@@152)) (= (type $generated@@691) $generated@@80)) (= ($generated@@299 $generated@@689 $generated@@690 $generated@@691) ($generated@@299 $generated@@554 $generated@@690 $generated@@691)))
 :pattern ( ($generated@@299 ($generated@@553 $generated@@689) $generated@@690 $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) $generated@@142) (= (type $generated@@693) $generated@@80)) (= (type $generated@@694) $generated@@80)) (and ($generated@@156 $generated@@693 $generated@@79) ($generated@@156 $generated@@694 $generated@@79))) (= ($generated@@140 ($generated@@141 $generated@@692) $generated@@693 $generated@@694)  (and (and ($generated@@256 $generated@@693) ($generated@@256 $generated@@694)) (=> (and ($generated@@256 $generated@@693) ($generated@@256 $generated@@694)) (and (= ($generated@@418 $generated@@693) ($generated@@418 $generated@@694)) ($generated@@140 $generated@@692 ($generated@@419 $generated@@693) ($generated@@419 $generated@@694)))))))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@692) $generated@@693 $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 Int) ) (!  (=> (= (type $generated@@696) ($generated@@311 $generated@@152)) (=> (and (<= 0 $generated@@697) (< $generated@@697 ($generated@@310 $generated@@696))) (< ($generated@@599 ($generated@@381 $generated@@80 ($generated@@559 $generated@@696 $generated@@697))) ($generated@@695 $generated@@696))))
 :pattern ( ($generated@@599 ($generated@@381 $generated@@80 ($generated@@559 $generated@@696 $generated@@697))))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@698) $generated@@152) (= (type $generated@@699) $generated@@142)) (= (type $generated@@700) $generated@@80)) (= (type $generated@@701) $generated@@80)) (= $generated@@700 $generated@@701)) ($generated@@251 $generated@@698 ($generated@@141 $generated@@699) $generated@@700 $generated@@701))
 :pattern ( ($generated@@251 $generated@@698 ($generated@@141 $generated@@699) $generated@@700 $generated@@701))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (and (and (= (type $generated@@702) ($generated@@340 $generated@@152 $generated@@152)) (= (type $generated@@703) $generated@@67)) (= (type $generated@@704) $generated@@67)) ($generated@@156 $generated@@702 ($generated@@464 $generated@@703 $generated@@704))) (and (and ($generated@@156 ($generated@@338 $generated@@702) ($generated@@273 $generated@@703)) ($generated@@156 ($generated@@397 $generated@@702) ($generated@@273 $generated@@704))) ($generated@@156 ($generated@@438 $generated@@702) ($generated@@273 ($generated@@177 $generated@@703 $generated@@704)))))
 :pattern ( ($generated@@156 $generated@@702 ($generated@@464 $generated@@703 $generated@@704)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (and (and (= (type $generated@@705) ($generated@@358 $generated@@152 $generated@@152)) (= (type $generated@@706) $generated@@67)) (= (type $generated@@707) $generated@@67)) ($generated@@156 $generated@@705 ($generated@@472 $generated@@706 $generated@@707))) (and (and ($generated@@156 ($generated@@356 $generated@@705) ($generated@@278 $generated@@706)) ($generated@@156 ($generated@@408 $generated@@705) ($generated@@278 $generated@@707))) ($generated@@156 ($generated@@446 $generated@@705) ($generated@@278 ($generated@@177 $generated@@706 $generated@@707)))))
 :pattern ( ($generated@@156 $generated@@705 ($generated@@472 $generated@@706 $generated@@707)))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@2) ($generated@@156 $generated@@708 $generated@@46))
 :pattern ( ($generated@@156 $generated@@708 $generated@@46))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@3) ($generated@@156 $generated@@709 $generated@@47))
 :pattern ( ($generated@@156 $generated@@709 $generated@@47))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@4) ($generated@@156 $generated@@710 $generated@@44))
 :pattern ( ($generated@@156 $generated@@710 $generated@@44))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@504) ($generated@@156 $generated@@711 $generated@@45))
 :pattern ( ($generated@@156 $generated@@711 $generated@@45))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@152) ($generated@@156 $generated@@712 $generated@@48))
 :pattern ( ($generated@@156 $generated@@712 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () Int)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 (T@U) Bool)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(assert  (and (and (and (and (= (type $generated@@713) $generated@@152) (= (type $generated@@715) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@717) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@718) ($generated@@197 $generated@@82 $generated@@4))) (= (type $generated@@719) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@720  (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@385 $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (or ($generated@@299 ($generated@@141 $generated@@554) $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (=> (< 0 ($generated@@167 $generated@@713)) (> ($generated@@418 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714)) 0))))) (=> (=> ($generated@@385 $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (or ($generated@@299 ($generated@@141 $generated@@554) $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (=> (< 0 ($generated@@167 $generated@@713)) (> ($generated@@418 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714)) 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@385 $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (or ($generated@@299 ($generated@@141 $generated@@554) $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (=> (< 0 ($generated@@167 $generated@@713)) ($generated@@299 ($generated@@141 ($generated@@141 $generated@@554)) ($generated@@165 $generated@@713 ($generated@@166 1)) ($generated@@419 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714))))))) (=> (=> ($generated@@385 $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (or ($generated@@299 ($generated@@141 $generated@@554) $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (=> (< 0 ($generated@@167 $generated@@713)) ($generated@@299 ($generated@@141 ($generated@@141 $generated@@554)) ($generated@@165 $generated@@713 ($generated@@166 1)) ($generated@@419 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@385 $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (or ($generated@@299 ($generated@@141 $generated@@554) $generated@@713 ($generated@@159 ($generated@@141 $generated@@554) $generated@@714)) (=> (= ($generated@@283 0) ($generated@@167 $generated@@713)) (forall (($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@721) $generated@@152) ($generated@@151 $generated@@721 $generated@@713)) ($generated@@299 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@721 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714)))
 :pattern ( ($generated@@299 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@721 ($generated@@159 ($generated@@141 ($generated@@141 $generated@@554)) $generated@@714)))
))))))))))))
(let (($generated@@722  (=> (<= ($generated@@167 $generated@@713) 0) (=> (and (and (and ($generated@@84 $generated@@715) ($generated@@716 $generated@@715)) (= $generated@@717 $generated@@715)) (and (forall (($generated@@723 T@U) ($generated@@724 Int) ) (!  (=> (= (type $generated@@723) $generated@@152) (=> (and ($generated@@151 $generated@@723 $generated@@713) (<= ($generated@@283 1) $generated@@724)) ($generated@@299 ($generated@@141 $generated@@554) $generated@@723 ($generated@@159 ($generated@@141 $generated@@554) $generated@@724))))
 :no-pattern (type $generated@@723)
 :no-pattern ($generated $generated@@723)
 :no-pattern ($generated@@0 $generated@@723)
)) (= (ControlFlow 0 6) 2))) $generated@@720))))
(let (($generated@@725  (=> (and (< 0 ($generated@@167 $generated@@713)) (= (ControlFlow 0 5) 2)) $generated@@720)))
(let (($generated@@726  (=> (= $generated@@718 ($generated@@196 $generated@@719 $generated@@717 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 5) $generated@@725) (=> (= (ControlFlow 0 7) 6) $generated@@722)))))
(let (($generated@@727  (=> (and (and (and ($generated@@84 $generated@@717) ($generated@@716 $generated@@717)) (= 3 $generated@@158)) (and (<= ($generated@@283 1) $generated@@714) (= (ControlFlow 0 8) 7))) $generated@@726)))
$generated@@727))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@84 (T@U) Int)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@104 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (Int) T@U)
(declare-fun $generated@@106 (T@T T@T) T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U) T@U)
(declare-fun $generated@@114 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@196 (T@U T@U) T@U)
(declare-fun $generated@@202 (T@U T@U) Bool)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@222 (T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@224 (T@T T@T) T@T)
(declare-fun $generated@@225 (T@T) T@T)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@227 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@284 (T@U T@U) T@U)
(declare-fun $generated@@285 (T@U T@U) Bool)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@313 (T@U T@U) T@U)
(declare-fun $generated@@319 (T@U) Bool)
(declare-fun $generated@@320 (T@U T@U T@U) Bool)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@336 (T@T) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@354 (T@U) Int)
(declare-fun $generated@@355 (T@T) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@T) T@U)
(declare-fun $generated@@365 (T@T T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@T T@T) T@U)
(declare-fun $generated@@383 (T@T T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@385 (T@T) T@T)
(declare-fun $generated@@399 (T@U) Bool)
(declare-fun $generated@@406 () Int)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) Bool)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@451 (T@T T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@479 (T@U T@U) T@U)
(declare-fun $generated@@487 (T@U T@U) T@U)
(declare-fun $generated@@495 (T@T) T@U)
(declare-fun $generated@@519 () T@T)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@569 (T@U Int) T@U)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@611 (T@U) Int)
(declare-fun $generated@@612 (T@U) Int)
(declare-fun $generated@@652 (T@U T@U) Bool)
(declare-fun $generated@@656 (T@U T@U) Bool)
(declare-fun $generated@@727 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@79) 11) (= ($generated@@1 $generated@@80) 12)) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@78 $generated@@91)) $generated@@80)
 :pattern ( ($generated@@78 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@83 $generated@@92)) $generated@@67)
 :pattern ( ($generated@@83 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@86 $generated@@93)) $generated@@79)
 :pattern ( ($generated@@86 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= (type ($generated@@87 $generated@@94 $generated@@95)) $generated@@79)
 :pattern ( ($generated@@87 $generated@@94 $generated@@95))
))) (forall (($generated@@96 Int) ) (! (= (type ($generated@@88 $generated@@96)) $generated@@79)
 :pattern ( ($generated@@88 $generated@@96))
))) (forall (($generated@@97 T@U) ) (! (= (type ($generated@@89 $generated@@97)) $generated@@81)
 :pattern ( ($generated@@89 $generated@@97))
))))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@98) $generated@@67) (= (type $generated@@99) $generated@@67)) (= (type $generated@@100) $generated@@79)) (= (type $generated@@101) $generated@@80)) (= (type $generated@@102) $generated@@81)) (= (type $generated@@103) $generated@@81)) (and ($generated@@82 $generated@@102 ($generated@@83 $generated@@98)) ($generated@@82 $generated@@103 ($generated@@83 $generated@@99)))) (= ($generated@@77 $generated@@98 $generated@@99 $generated@@100 ($generated@@78 $generated@@101) $generated@@102 $generated@@103)  (and (=> (< 0 ($generated@@84 $generated@@100)) (and (and ($generated@@85 $generated@@102) ($generated@@85 $generated@@103)) (=> (and ($generated@@85 $generated@@102) ($generated@@85 $generated@@103)) (and (= ($generated@@86 $generated@@102) ($generated@@86 $generated@@103)) ($generated@@77 $generated@@98 $generated@@99 ($generated@@87 $generated@@100 ($generated@@88 1)) $generated@@101 ($generated@@89 $generated@@102) ($generated@@89 $generated@@103)))))) (=> (and (not (= $generated@@100 ($generated@@88 0))) (= ($generated@@84 $generated@@100) 0)) ($generated@@90 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103)))))
 :pattern ( ($generated@@77 $generated@@98 $generated@@99 $generated@@100 ($generated@@78 $generated@@101) $generated@@102 $generated@@103))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (= ($generated@@1 ($generated@@106 $generated@@115 $generated@@116)) 14)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ) (! (= ($generated@@109 ($generated@@106 $generated@@117 $generated@@118)) $generated@@117)
 :pattern ( ($generated@@106 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (! (= ($generated@@110 ($generated@@106 $generated@@119 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@106 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@110 (type $generated@@121))))
(= (type ($generated@@111 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@111 $generated@@121 $generated@@122))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 (type $generated@@126)))
(let (($generated@@128 (type $generated@@125)))
(= (type ($generated@@112 $generated@@124 $generated@@125 $generated@@126)) ($generated@@106 $generated@@128 $generated@@127))))
 :pattern ( ($generated@@112 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@129))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@111 ($generated@@112 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@111 ($generated@@112 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@111 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@111 ($generated@@112 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@111 $generated@@138 $generated@@140)))
 :weight 0
)))) (= ($generated@@1 $generated@@107) 15)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (let (($generated@@143 ($generated@@70 (type $generated@@142))))
(= (type ($generated@@113 $generated@@141 $generated@@142)) $generated@@143))
 :pattern ( ($generated@@113 $generated@@141 $generated@@142))
))) (= ($generated@@1 $generated@@108) 16)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@114 $generated@@144 $generated@@145 $generated@@146)) $generated@@108)
 :pattern ( ($generated@@114 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (let (($generated@@150 ($generated@@70 (type $generated@@148))))
 (=> (= (type $generated@@149) $generated@@150) (= ($generated@@113 ($generated@@114 $generated@@147 $generated@@148 $generated@@149) $generated@@148) $generated@@149)))
 :weight 0
))) (and (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@153 $generated@@154) (= ($generated@@113 ($generated@@114 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@113 $generated@@152 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or true (= ($generated@@113 ($generated@@114 $generated@@156 $generated@@157 $generated@@155) $generated@@158) ($generated@@113 $generated@@156 $generated@@158)))
 :weight 0
)))) (forall (($generated@@159 Int) ) (! (= (type ($generated@@105 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@105 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@160) $generated@@2) (= (type $generated@@161) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@104 $generated@@160 ($generated@@105 0) $generated@@161))
 :pattern ( ($generated@@104 $generated@@160 ($generated@@105 0) $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@162) $generated@@67) (= (type $generated@@163) $generated@@67)) (= (type $generated@@164) $generated@@79)) (= (type $generated@@165) $generated@@80)) (= (type $generated@@166) $generated@@81)) (= (type $generated@@167) $generated@@81)) (not (= $generated@@164 ($generated@@88 0)))) (= ($generated@@77 $generated@@162 $generated@@163 $generated@@164 ($generated@@78 $generated@@165) $generated@@166 $generated@@167) ($generated@@77 $generated@@162 $generated@@163 $generated@@164 $generated@@165 $generated@@166 $generated@@167)))
 :pattern ( ($generated@@77 $generated@@162 $generated@@163 $generated@@164 ($generated@@78 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@79) (= (type $generated@@170) $generated@@79)) (= (type $generated@@171) $generated@@79)) (and ($generated@@168 $generated@@169 $generated@@170) ($generated@@168 $generated@@170 $generated@@171))) ($generated@@168 $generated@@169 $generated@@171))
 :pattern ( ($generated@@168 $generated@@169 $generated@@170) ($generated@@168 $generated@@170 $generated@@171))
 :pattern ( ($generated@@168 $generated@@169 $generated@@170) ($generated@@168 $generated@@169 $generated@@171))
)))
(assert  (and (and (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176 $generated@@177)) $generated@@81)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176 $generated@@177))
)) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@173 $generated@@178)) $generated@@80)
 :pattern ( ($generated@@173 $generated@@178))
))) (= (type $generated@@174) $generated@@80)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@67) (= (type $generated@@180) $generated@@80)) (= (type $generated@@181) $generated@@79)) (= ($generated@@172 $generated@@179 $generated@@180 $generated@@181) ($generated@@172 $generated@@179 $generated@@174 $generated@@181)))
 :pattern ( ($generated@@172 $generated@@179 ($generated@@173 $generated@@180) $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@183 $generated@@184 $generated@@185)) $generated@@81)
 :pattern ( ($generated@@182 $generated@@183 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@186) $generated@@67) (= (type $generated@@187) $generated@@80)) (= (type $generated@@188) $generated@@79)) (= ($generated@@182 $generated@@186 $generated@@187 $generated@@188) ($generated@@182 $generated@@186 $generated@@174 $generated@@188)))
 :pattern ( ($generated@@182 $generated@@186 ($generated@@173 $generated@@187) $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (!  (=> (and (= (type $generated@@190) $generated@@81) ($generated@@189 $generated@@190)) ($generated@@85 $generated@@190))
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (= (type $generated@@191) $generated@@2) ($generated@@82 $generated@@191 ($generated@@105 0)))
 :pattern ( ($generated@@82 $generated@@191 ($generated@@105 0)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 Int) ($generated@@194 Int) ) (!  (=> (= (type $generated@@192) $generated@@79) (=> (and (and (<= 0 $generated@@193) (<= 0 $generated@@194)) (<= (+ $generated@@193 $generated@@194) ($generated@@84 $generated@@192))) (= ($generated@@87 ($generated@@87 $generated@@192 ($generated@@88 $generated@@193)) ($generated@@88 $generated@@194)) ($generated@@87 $generated@@192 ($generated@@88 (+ $generated@@193 $generated@@194))))))
 :pattern ( ($generated@@87 ($generated@@87 $generated@@192 ($generated@@88 $generated@@193)) ($generated@@88 $generated@@194)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@197 $generated@@198)) $generated@@67)
 :pattern ( ($generated@@196 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (and (= (type $generated@@199) $generated@@67) (= (type $generated@@200) $generated@@67)) (= (type $generated@@201) $generated@@81)) ($generated@@82 $generated@@201 ($generated@@196 $generated@@199 $generated@@200))) ($generated@@195 $generated@@201))
 :pattern ( ($generated@@195 $generated@@201) ($generated@@82 $generated@@201 ($generated@@196 $generated@@199 $generated@@200)))
)))
(assert  (and (forall (($generated@@205 T@U) ) (! (= (type ($generated@@203 $generated@@205)) $generated@@79)
 :pattern ( ($generated@@203 $generated@@205))
)) (forall (($generated@@206 T@U) ) (! (= (type ($generated@@204 $generated@@206)) $generated@@79)
 :pattern ( ($generated@@204 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and (= (type $generated@@207) $generated@@81) (= (type $generated@@208) $generated@@81)) true) (= ($generated@@202 $generated@@207 $generated@@208)  (and (= ($generated@@203 $generated@@207) ($generated@@203 $generated@@208)) (= ($generated@@204 $generated@@207) ($generated@@204 $generated@@208)))))
 :pattern ( ($generated@@202 $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (and (= (type $generated@@209) $generated@@67) (= (type $generated@@210) $generated@@80)) (= (type $generated@@211) $generated@@79)) (= ($generated@@172 $generated@@209 ($generated@@78 $generated@@210) $generated@@211) ($generated@@172 $generated@@209 $generated@@210 $generated@@211)))
 :pattern ( ($generated@@172 $generated@@209 ($generated@@78 $generated@@210) $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (and (= (type $generated@@212) $generated@@67) (= (type $generated@@213) $generated@@80)) (= (type $generated@@214) $generated@@79)) (= ($generated@@182 $generated@@212 ($generated@@78 $generated@@213) $generated@@214) ($generated@@182 $generated@@212 $generated@@213 $generated@@214)))
 :pattern ( ($generated@@182 $generated@@212 ($generated@@78 $generated@@213) $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ) (! (= (type ($generated@@215 $generated@@217)) $generated@@67)
 :pattern ( ($generated@@215 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (and (= (type $generated@@218) ($generated@@106 $generated@@79 $generated@@2)) (= (type $generated@@219) $generated@@67)) ($generated@@82 $generated@@218 ($generated@@215 $generated@@219))) ($generated@@216 $generated@@218))
 :pattern ( ($generated@@82 $generated@@218 ($generated@@215 $generated@@219)))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and (= (type $generated@@220) $generated@@67) (= (type $generated@@221) $generated@@81)) ($generated@@82 $generated@@221 ($generated@@83 $generated@@220))) ($generated@@85 $generated@@221))
 :pattern ( ($generated@@85 $generated@@221) ($generated@@82 $generated@@221 ($generated@@83 $generated@@220)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (= ($generated@@1 ($generated@@224 $generated@@228 $generated@@229)) 17)) (forall (($generated@@230 T@T) ($generated@@231 T@T) ) (! (= ($generated@@225 ($generated@@224 $generated@@230 $generated@@231)) $generated@@230)
 :pattern ( ($generated@@224 $generated@@230 $generated@@231))
))) (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (! (= ($generated@@226 ($generated@@224 $generated@@232 $generated@@233)) $generated@@233)
 :pattern ( ($generated@@224 $generated@@232 $generated@@233))
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@226 (type $generated@@234))))
(= (type ($generated@@222 $generated@@234 $generated@@235 $generated@@236)) $generated@@237))
 :pattern ( ($generated@@222 $generated@@234 $generated@@235 $generated@@236))
))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 (type $generated@@241)))
(let (($generated@@243 (type $generated@@239)))
(= (type ($generated@@227 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@224 $generated@@243 $generated@@242))))
 :pattern ( ($generated@@227 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@226 (type $generated@@244))))
 (=> (= (type $generated@@247) $generated@@248) (= ($generated@@222 ($generated@@227 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@245 $generated@@246) $generated@@247)))
 :weight 0
))) (and (and (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (or (= $generated@@251 $generated@@253) (= ($generated@@222 ($generated@@227 $generated@@250 $generated@@251 $generated@@252 $generated@@249) $generated@@253 $generated@@254) ($generated@@222 $generated@@250 $generated@@253 $generated@@254)))
 :weight 0
)) (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (or (= $generated@@258 $generated@@260) (= ($generated@@222 ($generated@@227 $generated@@256 $generated@@257 $generated@@258 $generated@@255) $generated@@259 $generated@@260) ($generated@@222 $generated@@256 $generated@@259 $generated@@260)))
 :weight 0
))) (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (or true (= ($generated@@222 ($generated@@227 $generated@@262 $generated@@263 $generated@@264 $generated@@261) $generated@@265 $generated@@266) ($generated@@222 $generated@@262 $generated@@265 $generated@@266)))
 :weight 0
)))) (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 Bool) ) (! (= (type ($generated@@223 $generated@@267 $generated@@268 $generated@@269 $generated@@270)) ($generated@@224 $generated@@107 $generated@@4))
 :pattern ( ($generated@@223 $generated@@267 $generated@@268 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 Bool) ($generated@@275 T@U) ($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@70 (type $generated@@276))))
 (=> (and (and (and (and (= (type $generated@@271) $generated@@107) (= (type $generated@@272) ($generated@@106 $generated@@107 $generated@@108))) (= (type $generated@@273) ($generated@@69 $generated@@4))) (= (type $generated@@275) $generated@@107)) (= (type $generated@@276) ($generated@@69 $generated@@277))) (= ($generated@@0 ($generated@@222 ($generated@@223 $generated@@271 $generated@@272 $generated@@273 $generated@@274) $generated@@275 $generated@@276))  (=> (and (not (= $generated@@275 $generated@@271)) ($generated@@0 ($generated@@113 ($generated@@111 $generated@@272 $generated@@275) $generated@@273))) $generated@@274))))
 :pattern ( ($generated@@222 ($generated@@223 $generated@@271 $generated@@272 $generated@@273 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@278) $generated@@67) (= (type $generated@@279) $generated@@67)) (= (type $generated@@280) $generated@@79)) (= (type $generated@@281) $generated@@80)) (= (type $generated@@282) $generated@@81)) (= (type $generated@@283) $generated@@81)) (= $generated@@282 $generated@@283)) ($generated@@77 $generated@@278 $generated@@279 $generated@@280 ($generated@@78 $generated@@281) $generated@@282 $generated@@283))
 :pattern ( ($generated@@77 $generated@@278 $generated@@279 $generated@@280 ($generated@@78 $generated@@281) $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@284 $generated@@286 $generated@@287)) $generated@@81)
 :pattern ( ($generated@@284 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (= (type $generated@@288) $generated@@67) (= (type $generated@@289) $generated@@67)) (= (type $generated@@290) $generated@@79)) (= (type $generated@@291) $generated@@79)) (= ($generated@@82 ($generated@@284 $generated@@290 $generated@@291) ($generated@@196 $generated@@288 $generated@@289))  (and ($generated@@285 $generated@@290 $generated@@288) ($generated@@285 $generated@@291 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@284 $generated@@290 $generated@@291) ($generated@@196 $generated@@288 $generated@@289)))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@292) $generated@@67) (= (type $generated@@293) $generated@@67)) (= (type $generated@@294) $generated@@80)) (= (type $generated@@295) $generated@@81)) (= (type $generated@@296) $generated@@81)) (= ($generated@@90 $generated@@292 $generated@@293 ($generated@@78 $generated@@294) $generated@@295 $generated@@296) (= $generated@@295 $generated@@296)))
 :pattern ( ($generated@@90 $generated@@292 $generated@@293 ($generated@@78 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@81) (= (type $generated@@298) $generated@@81)) (= ($generated@@202 $generated@@297 $generated@@298) (= $generated@@297 $generated@@298)))
 :pattern ( ($generated@@202 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@67)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) ($generated@@106 $generated@@79 $generated@@4)) (= (type $generated@@302) $generated@@67)) (= ($generated@@82 $generated@@301 ($generated@@299 $generated@@302)) (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@79) ($generated@@0 ($generated@@111 $generated@@301 $generated@@303))) ($generated@@285 $generated@@303 $generated@@302))
 :pattern ( ($generated@@111 $generated@@301 $generated@@303))
))))
 :pattern ( ($generated@@82 $generated@@301 ($generated@@299 $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@67)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) ($generated@@106 $generated@@79 $generated@@4)) (= (type $generated@@307) $generated@@67)) (= ($generated@@82 $generated@@306 ($generated@@304 $generated@@307)) (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@79) ($generated@@0 ($generated@@111 $generated@@306 $generated@@308))) ($generated@@285 $generated@@308 $generated@@307))
 :pattern ( ($generated@@111 $generated@@306 $generated@@308))
))))
 :pattern ( ($generated@@82 $generated@@306 ($generated@@304 $generated@@307)))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 (type $generated@@310)))
(= (type ($generated@@309 $generated@@310)) $generated@@311))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (= ($generated@@309 $generated@@312) $generated@@312)
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (! (= (type ($generated@@313 $generated@@314 $generated@@315)) $generated@@81)
 :pattern ( ($generated@@313 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (= (type $generated@@316) $generated@@67) (= (type $generated@@317) $generated@@79)) (= (type $generated@@318) $generated@@81)) (= ($generated@@82 ($generated@@313 $generated@@317 $generated@@318) ($generated@@83 $generated@@316))  (and ($generated@@285 $generated@@317 $generated@@316) ($generated@@82 $generated@@318 ($generated@@83 $generated@@316)))))
 :pattern ( ($generated@@82 ($generated@@313 $generated@@317 $generated@@318) ($generated@@83 $generated@@316)))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@321) $generated@@67) (= (type $generated@@322) $generated@@67)) (= (type $generated@@323) $generated@@79)) (= (type $generated@@324) $generated@@79)) (= (type $generated@@325) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@319 $generated@@325)) (= ($generated@@104 ($generated@@284 $generated@@323 $generated@@324) ($generated@@196 $generated@@321 $generated@@322) $generated@@325)  (and ($generated@@320 $generated@@323 $generated@@321 $generated@@325) ($generated@@320 $generated@@324 $generated@@322 $generated@@325))))
 :pattern ( ($generated@@104 ($generated@@284 $generated@@323 $generated@@324) ($generated@@196 $generated@@321 $generated@@322) $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@71)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@81) (= ($generated@@195 $generated@@328) (= ($generated@@326 $generated@@328) $generated@@61)))
 :pattern ( ($generated@@195 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@81) (= ($generated@@85 $generated@@329) (= ($generated@@326 $generated@@329) $generated@@63)))
 :pattern ( ($generated@@85 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@81) ($generated@@195 $generated@@330)) (exists (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (and (and (= (type $generated@@331) $generated@@79) (= (type $generated@@332) $generated@@79)) (= $generated@@330 ($generated@@284 $generated@@331 $generated@@332)))
 :no-pattern (type $generated@@331)
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
)))
 :pattern ( ($generated@@195 $generated@@330))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@81) ($generated@@85 $generated@@333)) (exists (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (and (and (= (type $generated@@334) $generated@@79) (= (type $generated@@335) $generated@@81)) (= $generated@@333 ($generated@@313 $generated@@334 $generated@@335)))
 :no-pattern (type $generated@@334)
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
)))
 :pattern ( ($generated@@85 $generated@@333))
)))
(assert  (and (and (forall (($generated@@340 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@340)) 18)) (forall (($generated@@341 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@338 $generated@@341))
))) (forall (($generated@@342 T@T) ) (! (= (type ($generated@@336 $generated@@342)) ($generated@@338 $generated@@342))
 :pattern ( ($generated@@336 $generated@@342))
))))
(assert (forall (($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@343)) 0)
 :pattern ( ($generated@@336 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@344) $generated@@67) (= (type $generated@@345) $generated@@67)) (= (type $generated@@346) $generated@@80)) (= (type $generated@@347) $generated@@81)) (= (type $generated@@348) $generated@@81)) (and ($generated@@82 $generated@@347 ($generated@@83 $generated@@344)) ($generated@@82 $generated@@348 ($generated@@83 $generated@@345)))) (= ($generated@@90 $generated@@344 $generated@@345 ($generated@@78 $generated@@346) $generated@@347 $generated@@348)  (and (and ($generated@@85 $generated@@347) ($generated@@85 $generated@@348)) (=> (and ($generated@@85 $generated@@347) ($generated@@85 $generated@@348)) (and (= ($generated@@86 $generated@@347) ($generated@@86 $generated@@348)) ($generated@@90 $generated@@344 $generated@@345 $generated@@346 ($generated@@89 $generated@@347) ($generated@@89 $generated@@348)))))))
 :pattern ( ($generated@@90 $generated@@344 $generated@@345 ($generated@@78 $generated@@346) $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@79)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@67) (= (type $generated@@353) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@320 ($generated@@349 $generated@@351) $generated@@352 $generated@@353) ($generated@@104 $generated@@351 $generated@@352 $generated@@353)))
 :pattern ( ($generated@@320 ($generated@@349 $generated@@351) $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@356 T@T) ) (! (= (type ($generated@@355 $generated@@356)) ($generated@@106 $generated@@356 $generated@@2))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@109 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@106 $generated@@358 $generated@@2)) (and (= (= ($generated@@354 $generated@@357) 0) (= $generated@@357 ($generated@@355 $generated@@358))) (=> (not (= ($generated@@354 $generated@@357) 0)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) (< 0 ($generated ($generated@@111 $generated@@357 $generated@@359))))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@72)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@67) (and (= ($generated@@75 ($generated@@83 $generated@@362)) $generated@@64) (= ($generated@@360 ($generated@@83 $generated@@362)) $generated@@66)))
 :pattern ( ($generated@@83 $generated@@362))
)))
(assert  (and (and (and (and (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (= ($generated@@1 ($generated@@365 $generated@@368 $generated@@369)) 19)) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@365 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@367 ($generated@@365 $generated@@372 $generated@@373)) $generated@@373)
 :pattern ( ($generated@@365 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@366 (type $generated@@374))))
(= (type ($generated@@363 $generated@@374)) ($generated@@106 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@374))
))) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= (type ($generated@@364 $generated@@376 $generated@@377)) ($generated@@365 $generated@@376 $generated@@377))
 :pattern ( ($generated@@364 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@T) ) (! (let (($generated@@380 (type $generated@@378)))
 (not ($generated@@0 ($generated@@111 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378))))
 :pattern ( (let (($generated@@380 (type $generated@@378)))
($generated@@111 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378)))
)))
(assert  (and (and (and (and (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (= ($generated@@1 ($generated@@383 $generated@@386 $generated@@387)) 20)) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= ($generated@@384 ($generated@@383 $generated@@388 $generated@@389)) $generated@@388)
 :pattern ( ($generated@@383 $generated@@388 $generated@@389))
))) (forall (($generated@@390 T@T) ($generated@@391 T@T) ) (! (= ($generated@@385 ($generated@@383 $generated@@390 $generated@@391)) $generated@@391)
 :pattern ( ($generated@@383 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@384 (type $generated@@392))))
(= (type ($generated@@381 $generated@@392)) ($generated@@106 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@392))
))) (forall (($generated@@394 T@T) ($generated@@395 T@T) ) (! (= (type ($generated@@382 $generated@@394 $generated@@395)) ($generated@@383 $generated@@394 $generated@@395))
 :pattern ( ($generated@@382 $generated@@394 $generated@@395))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@T) ) (! (let (($generated@@398 (type $generated@@396)))
 (not ($generated@@0 ($generated@@111 ($generated@@381 ($generated@@382 $generated@@398 $generated@@397)) $generated@@396))))
 :pattern ( (let (($generated@@398 (type $generated@@396)))
($generated@@111 ($generated@@381 ($generated@@382 $generated@@398 $generated@@397)) $generated@@396)))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@400) $generated@@79) (= (type $generated@@401) $generated@@79)) (and ($generated@@399 $generated@@401) (<= ($generated@@84 $generated@@401) ($generated@@84 $generated@@400)))) (and (= ($generated@@399 ($generated@@87 $generated@@400 $generated@@401)) ($generated@@399 $generated@@400)) (= ($generated@@84 ($generated@@87 $generated@@400 $generated@@401)) (- ($generated@@84 $generated@@400) ($generated@@84 $generated@@401)))))
 :pattern ( ($generated@@87 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 Int) ) (!  (=> (<= 0 $generated@@402) (and ($generated@@399 ($generated@@88 $generated@@402)) (= ($generated@@84 ($generated@@88 $generated@@402)) $generated@@402)))
 :pattern ( ($generated@@88 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@109 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@106 $generated@@404 $generated@@2)) (= ($generated@@216 $generated@@403) (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@404) (and (<= 0 ($generated ($generated@@111 $generated@@403 $generated@@405))) (<= ($generated ($generated@@111 $generated@@403 $generated@@405)) ($generated@@354 $generated@@403))))
 :pattern ( ($generated@@111 $generated@@403 $generated@@405))
)))))
 :pattern ( ($generated@@216 $generated@@403))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@407 $generated@@409 $generated@@410)) $generated@@79)
 :pattern ( ($generated@@407 $generated@@409 $generated@@410))
)))
(assert  (=> (<= 0 $generated@@406) (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@411) $generated@@67) (= (type $generated@@412) $generated@@79)) (or ($generated@@408 $generated@@411 $generated@@412) (and (not (= 0 $generated@@406)) ($generated@@285 $generated@@412 $generated@@411)))) ($generated@@285 ($generated@@407 $generated@@411 $generated@@412) $generated@@411))
 :pattern ( ($generated@@407 $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@367 (type $generated@@413))))
(let (($generated@@415 ($generated@@366 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@365 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@364 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) ($generated@@0 ($generated@@111 ($generated@@363 $generated@@413) $generated@@416)))
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@363 $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@367 (type $generated@@418))))
(= (type ($generated@@417 $generated@@418)) ($generated@@106 $generated@@419 $generated@@4)))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@367 (type $generated@@420))))
(let (($generated@@422 ($generated@@366 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@365 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@364 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@421) ($generated@@0 ($generated@@111 ($generated@@417 $generated@@420) $generated@@423)))
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@417 $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@385 (type $generated@@424))))
(let (($generated@@426 ($generated@@384 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@383 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@382 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) ($generated@@0 ($generated@@111 ($generated@@381 $generated@@424) $generated@@427)))
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@381 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@385 (type $generated@@429))))
(= (type ($generated@@428 $generated@@429)) ($generated@@106 $generated@@430 $generated@@4)))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@385 (type $generated@@431))))
(let (($generated@@433 ($generated@@384 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@383 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@382 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@432) ($generated@@0 ($generated@@111 ($generated@@428 $generated@@431) $generated@@434)))
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@428 $generated@@431))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@106 $generated@@79 $generated@@2)) (= (type $generated@@436) $generated@@67)) (= ($generated@@82 $generated@@435 ($generated@@215 $generated@@436)) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@79) (< 0 ($generated ($generated@@111 $generated@@435 $generated@@437)))) ($generated@@285 $generated@@437 $generated@@436))
 :pattern ( ($generated@@111 $generated@@435 $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@435 ($generated@@215 $generated@@436)))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@79) (= (type $generated@@439) $generated@@79)) (or (or ($generated@@168 $generated@@438 $generated@@439) (= $generated@@438 $generated@@439)) ($generated@@168 $generated@@439 $generated@@438)))
 :pattern ( ($generated@@168 $generated@@438 $generated@@439) ($generated@@168 $generated@@439 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (= (type $generated@@440) ($generated@@106 $generated@@79 $generated@@4)) (= (type $generated@@441) $generated@@67)) (= (type $generated@@442) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@440 ($generated@@299 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@79) ($generated@@0 ($generated@@111 $generated@@440 $generated@@443))) ($generated@@320 $generated@@443 $generated@@441 $generated@@442))
 :pattern ( ($generated@@111 $generated@@440 $generated@@443))
))))
 :pattern ( ($generated@@104 $generated@@440 ($generated@@299 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (= (type $generated@@444) ($generated@@106 $generated@@79 $generated@@4)) (= (type $generated@@445) $generated@@67)) (= (type $generated@@446) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@444 ($generated@@304 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@79) ($generated@@0 ($generated@@111 $generated@@444 $generated@@447))) ($generated@@320 $generated@@447 $generated@@445 $generated@@446))
 :pattern ( ($generated@@111 $generated@@444 $generated@@447))
))))
 :pattern ( ($generated@@104 $generated@@444 ($generated@@304 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(= ($generated ($generated@@111 ($generated@@355 $generated@@449) $generated@@448)) 0))
 :pattern ( (let (($generated@@449 (type $generated@@448)))
($generated@@111 ($generated@@355 $generated@@449) $generated@@448)))
)))
(assert  (and (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@450 $generated@@453)) ($generated@@106 $generated@@79 $generated@@4))
 :pattern ( ($generated@@450 $generated@@453))
)) (forall (($generated@@454 T@T) ($generated@@455 T@U) ) (! (= (type ($generated@@451 $generated@@454 $generated@@455)) $generated@@454)
 :pattern ( ($generated@@451 $generated@@454 $generated@@455))
))) (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@367 (type $generated@@456))))
(let (($generated@@458 ($generated@@366 (type $generated@@456))))
(= (type ($generated@@452 $generated@@456)) ($generated@@106 $generated@@458 $generated@@457))))
 :pattern ( ($generated@@452 $generated@@456))
))))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@365 $generated@@79 $generated@@79)) (= (type $generated@@460) $generated@@79)) (= ($generated@@0 ($generated@@111 ($generated@@450 $generated@@459) $generated@@460))  (and ($generated@@0 ($generated@@111 ($generated@@363 $generated@@459) ($generated@@203 ($generated@@451 $generated@@81 $generated@@460)))) (= ($generated@@111 ($generated@@452 $generated@@459) ($generated@@203 ($generated@@451 $generated@@81 $generated@@460))) ($generated@@204 ($generated@@451 $generated@@81 $generated@@460))))))
 :pattern ( ($generated@@111 ($generated@@450 $generated@@459) $generated@@460))
)))
(assert  (and (forall (($generated@@463 T@U) ) (! (= (type ($generated@@461 $generated@@463)) ($generated@@106 $generated@@79 $generated@@4))
 :pattern ( ($generated@@461 $generated@@463))
)) (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@385 (type $generated@@464))))
(let (($generated@@466 ($generated@@384 (type $generated@@464))))
(= (type ($generated@@462 $generated@@464)) ($generated@@106 $generated@@466 $generated@@465))))
 :pattern ( ($generated@@462 $generated@@464))
))))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) ($generated@@383 $generated@@79 $generated@@79)) (= (type $generated@@468) $generated@@79)) (= ($generated@@0 ($generated@@111 ($generated@@461 $generated@@467) $generated@@468))  (and ($generated@@0 ($generated@@111 ($generated@@381 $generated@@467) ($generated@@203 ($generated@@451 $generated@@81 $generated@@468)))) (= ($generated@@111 ($generated@@462 $generated@@467) ($generated@@203 ($generated@@451 $generated@@81 $generated@@468))) ($generated@@204 ($generated@@451 $generated@@81 $generated@@468))))))
 :pattern ( ($generated@@111 ($generated@@461 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (! (let (($generated@@471 (type $generated@@470)))
(let (($generated@@472 ($generated@@366 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@365 $generated@@472 $generated@@471)) (= ($generated@@0 ($generated@@111 ($generated@@417 $generated@@469) $generated@@470)) (exists (($generated@@473 T@U) ) (!  (and (= (type $generated@@473) $generated@@472) (and ($generated@@0 ($generated@@111 ($generated@@363 $generated@@469) $generated@@473)) (= $generated@@470 ($generated@@111 ($generated@@452 $generated@@469) $generated@@473))))
 :pattern ( ($generated@@111 ($generated@@363 $generated@@469) $generated@@473))
 :pattern ( ($generated@@111 ($generated@@452 $generated@@469) $generated@@473))
))))))
 :pattern ( ($generated@@111 ($generated@@417 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (! (let (($generated@@476 (type $generated@@475)))
(let (($generated@@477 ($generated@@384 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@383 $generated@@477 $generated@@476)) (= ($generated@@0 ($generated@@111 ($generated@@428 $generated@@474) $generated@@475)) (exists (($generated@@478 T@U) ) (!  (and (= (type $generated@@478) $generated@@477) (and ($generated@@0 ($generated@@111 ($generated@@381 $generated@@474) $generated@@478)) (= $generated@@475 ($generated@@111 ($generated@@462 $generated@@474) $generated@@478))))
 :pattern ( ($generated@@111 ($generated@@381 $generated@@474) $generated@@478))
 :pattern ( ($generated@@111 ($generated@@462 $generated@@474) $generated@@478))
))))))
 :pattern ( ($generated@@111 ($generated@@428 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (= (type $generated@@482) ($generated@@365 $generated@@79 $generated@@79)) (= (type $generated@@483) $generated@@67)) (= (type $generated@@484) $generated@@67)) (= (type $generated@@485) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@79) ($generated@@0 ($generated@@111 ($generated@@363 $generated@@482) $generated@@486))) (and ($generated@@320 ($generated@@111 ($generated@@452 $generated@@482) $generated@@486) $generated@@484 $generated@@485) ($generated@@320 $generated@@486 $generated@@483 $generated@@485)))
 :pattern ( ($generated@@111 ($generated@@452 $generated@@482) $generated@@486))
 :pattern ( ($generated@@111 ($generated@@363 $generated@@482) $generated@@486))
))))
 :pattern ( ($generated@@104 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (! (= (type ($generated@@487 $generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (and (= (type $generated@@490) ($generated@@383 $generated@@79 $generated@@79)) (= (type $generated@@491) $generated@@67)) (= (type $generated@@492) $generated@@67)) (= (type $generated@@493) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@490 ($generated@@487 $generated@@491 $generated@@492) $generated@@493) (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@79) ($generated@@0 ($generated@@111 ($generated@@381 $generated@@490) $generated@@494))) (and ($generated@@320 ($generated@@111 ($generated@@462 $generated@@490) $generated@@494) $generated@@492 $generated@@493) ($generated@@320 $generated@@494 $generated@@491 $generated@@493)))
 :pattern ( ($generated@@111 ($generated@@462 $generated@@490) $generated@@494))
 :pattern ( ($generated@@111 ($generated@@381 $generated@@490) $generated@@494))
))))
 :pattern ( ($generated@@104 $generated@@490 ($generated@@487 $generated@@491 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 T@T) ) (! (= (type ($generated@@495 $generated@@496)) ($generated@@106 $generated@@496 $generated@@4))
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@385 (type $generated@@497))))
(let (($generated@@499 ($generated@@384 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@383 $generated@@499 $generated@@498)) (= (= $generated@@497 ($generated@@382 $generated@@499 $generated@@498)) (= ($generated@@381 $generated@@497) ($generated@@495 $generated@@499))))))
 :pattern ( ($generated@@381 $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@385 (type $generated@@500))))
(let (($generated@@502 ($generated@@384 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@383 $generated@@502 $generated@@501)) (= (= $generated@@500 ($generated@@382 $generated@@502 $generated@@501)) (= ($generated@@428 $generated@@500) ($generated@@495 $generated@@501))))))
 :pattern ( ($generated@@428 $generated@@500))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@385 (type $generated@@503))))
(let (($generated@@505 ($generated@@384 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@383 $generated@@505 $generated@@504)) (= (= $generated@@503 ($generated@@382 $generated@@505 $generated@@504)) (= ($generated@@461 $generated@@503) ($generated@@495 $generated@@79))))))
 :pattern ( ($generated@@461 $generated@@503))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@367 (type $generated@@506))))
(let (($generated@@508 ($generated@@366 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@365 $generated@@508 $generated@@507)) (or (= $generated@@506 ($generated@@364 $generated@@508 $generated@@507)) (exists (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (and (and (= (type $generated@@509) $generated@@79) (= (type $generated@@510) $generated@@79)) ($generated@@0 ($generated@@111 ($generated@@450 $generated@@506) ($generated@@349 ($generated@@284 $generated@@509 $generated@@510)))))
 :no-pattern (type $generated@@509)
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@450 $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@385 (type $generated@@511))))
(let (($generated@@513 ($generated@@384 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@383 $generated@@513 $generated@@512)) (or (= $generated@@511 ($generated@@382 $generated@@513 $generated@@512)) (exists (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (and (and (= (type $generated@@514) $generated@@79) (= (type $generated@@515) $generated@@79)) ($generated@@0 ($generated@@111 ($generated@@461 $generated@@511) ($generated@@349 ($generated@@284 $generated@@514 $generated@@515)))))
 :no-pattern (type $generated@@514)
 :no-pattern (type $generated@@515)
 :no-pattern ($generated $generated@@514)
 :no-pattern ($generated@@0 $generated@@514)
 :no-pattern ($generated $generated@@515)
 :no-pattern ($generated@@0 $generated@@515)
))))))
 :pattern ( ($generated@@461 $generated@@511))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@79) ($generated@@285 $generated@@516 $generated@@46)) (and (= ($generated@@349 ($generated@@451 $generated@@2 $generated@@516)) $generated@@516) ($generated@@82 ($generated@@451 $generated@@2 $generated@@516) $generated@@46)))
 :pattern ( ($generated@@285 $generated@@516 $generated@@46))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@79) ($generated@@285 $generated@@517 $generated@@47)) (and (= ($generated@@349 ($generated@@451 $generated@@3 $generated@@517)) $generated@@517) ($generated@@82 ($generated@@451 $generated@@3 $generated@@517) $generated@@47)))
 :pattern ( ($generated@@285 $generated@@517 $generated@@47))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@79) ($generated@@285 $generated@@518 $generated@@44)) (and (= ($generated@@349 ($generated@@451 $generated@@4 $generated@@518)) $generated@@518) ($generated@@82 ($generated@@451 $generated@@4 $generated@@518) $generated@@44)))
 :pattern ( ($generated@@285 $generated@@518 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@519) 21))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@79) ($generated@@285 $generated@@520 $generated@@45)) (and (= ($generated@@349 ($generated@@451 $generated@@519 $generated@@520)) $generated@@520) ($generated@@82 ($generated@@451 $generated@@519 $generated@@520) $generated@@45)))
 :pattern ( ($generated@@285 $generated@@520 $generated@@45))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@285 ($generated@@349 $generated@@521) $generated@@522) ($generated@@82 $generated@@521 $generated@@522)))
 :pattern ( ($generated@@285 ($generated@@349 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@79) (<= 0 ($generated@@84 $generated@@523)))
 :pattern ( ($generated@@84 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 ($generated@@109 (type $generated@@524))))
 (=> (= (type $generated@@524) ($generated@@106 $generated@@525 $generated@@2)) (<= 0 ($generated@@354 $generated@@524))))
 :pattern ( ($generated@@354 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 ($generated@@339 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@338 $generated@@527)) (<= 0 ($generated@@337 $generated@@526))))
 :pattern ( ($generated@@337 $generated@@526))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@67) (= (type $generated@@531) $generated@@67)) (= ($generated@@528 ($generated@@479 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@479 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@67) (= (type $generated@@535) $generated@@67)) (= ($generated@@532 ($generated@@479 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@479 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@67) (= (type $generated@@537) $generated@@67)) (= ($generated@@75 ($generated@@479 $generated@@536 $generated@@537)) $generated@@58))
 :pattern ( ($generated@@479 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@67) (= (type $generated@@541) $generated@@67)) (= ($generated@@538 ($generated@@487 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@487 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@67)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@67) (= (type $generated@@545) $generated@@67)) (= ($generated@@542 ($generated@@487 $generated@@544 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@487 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@67) (= (type $generated@@547) $generated@@67)) (= ($generated@@75 ($generated@@487 $generated@@546 $generated@@547)) $generated@@59))
 :pattern ( ($generated@@487 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@79) (= (type $generated@@549) $generated@@79)) (= ($generated@@326 ($generated@@284 $generated@@548 $generated@@549)) $generated@@61))
 :pattern ( ($generated@@284 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@67)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@67) (= (type $generated@@553) $generated@@67)) (= ($generated@@550 ($generated@@196 $generated@@552 $generated@@553)) $generated@@552))
 :pattern ( ($generated@@196 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@67)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@67)) (= ($generated@@554 ($generated@@196 $generated@@556 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@196 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@79) (= (type $generated@@559) $generated@@79)) (= ($generated@@203 ($generated@@284 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@284 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@79) (= (type $generated@@561) $generated@@79)) (= ($generated@@204 ($generated@@284 $generated@@560 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@284 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@79) (= (type $generated@@563) $generated@@81)) (= ($generated@@326 ($generated@@313 $generated@@562 $generated@@563)) $generated@@63))
 :pattern ( ($generated@@313 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@79) (= (type $generated@@565) $generated@@81)) (= ($generated@@86 ($generated@@313 $generated@@564 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@313 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@79) (= (type $generated@@567) $generated@@81)) (= ($generated@@89 ($generated@@313 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@313 $generated@@566 $generated@@567))
)))
(assert  (and (forall (($generated@@570 T@U) ) (! (= (type ($generated@@568 $generated@@570)) $generated@@67)
 :pattern ( ($generated@@568 $generated@@570))
)) (forall (($generated@@571 T@U) ($generated@@572 Int) ) (! (let (($generated@@573 ($generated@@339 (type $generated@@571))))
(= (type ($generated@@569 $generated@@571 $generated@@572)) $generated@@573))
 :pattern ( ($generated@@569 $generated@@571 $generated@@572))
))))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@338 $generated@@79)) (= (type $generated@@575) $generated@@67)) (= (type $generated@@576) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@574 ($generated@@568 $generated@@575) $generated@@576) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@337 $generated@@574))) ($generated@@320 ($generated@@569 $generated@@574 $generated@@577) $generated@@575 $generated@@576))
 :pattern ( ($generated@@569 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@104 $generated@@574 ($generated@@568 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@578 ($generated@@105 $generated@@579)) $generated@@579)
 :pattern ( ($generated@@105 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@67)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@67) (= ($generated@@580 ($generated@@299 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@299 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@67) (= ($generated@@75 ($generated@@299 $generated@@583)) $generated@@54))
 :pattern ( ($generated@@299 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@67)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@67) (= ($generated@@584 ($generated@@304 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@304 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@67) (= ($generated@@75 ($generated@@304 $generated@@587)) $generated@@55))
 :pattern ( ($generated@@304 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@67)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@67) (= ($generated@@588 ($generated@@215 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@215 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@67) (= ($generated@@75 ($generated@@215 $generated@@591)) $generated@@56))
 :pattern ( ($generated@@215 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@67)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@67) (= ($generated@@592 ($generated@@568 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@568 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@67) (= ($generated@@75 ($generated@@568 $generated@@595)) $generated@@57))
 :pattern ( ($generated@@568 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@67)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@67) (= ($generated@@596 ($generated@@83 $generated@@598)) $generated@@598))
 :pattern ( ($generated@@83 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@599)))
(= ($generated@@451 $generated@@600 ($generated@@349 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@349 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@601) ($generated@@365 $generated@@79 $generated@@79)) (= (type $generated@@602) $generated@@67)) (= (type $generated@@603) $generated@@67)) (= ($generated@@82 $generated@@601 ($generated@@479 $generated@@602 $generated@@603)) (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@79) ($generated@@0 ($generated@@111 ($generated@@363 $generated@@601) $generated@@604))) (and ($generated@@285 ($generated@@111 ($generated@@452 $generated@@601) $generated@@604) $generated@@603) ($generated@@285 $generated@@604 $generated@@602)))
 :pattern ( ($generated@@111 ($generated@@452 $generated@@601) $generated@@604))
 :pattern ( ($generated@@111 ($generated@@363 $generated@@601) $generated@@604))
))))
 :pattern ( ($generated@@82 $generated@@601 ($generated@@479 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@605) ($generated@@383 $generated@@79 $generated@@79)) (= (type $generated@@606) $generated@@67)) (= (type $generated@@607) $generated@@67)) (= ($generated@@82 $generated@@605 ($generated@@487 $generated@@606 $generated@@607)) (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@79) ($generated@@0 ($generated@@111 ($generated@@381 $generated@@605) $generated@@608))) (and ($generated@@285 ($generated@@111 ($generated@@462 $generated@@605) $generated@@608) $generated@@607) ($generated@@285 $generated@@608 $generated@@606)))
 :pattern ( ($generated@@111 ($generated@@462 $generated@@605) $generated@@608))
 :pattern ( ($generated@@111 ($generated@@381 $generated@@605) $generated@@608))
))))
 :pattern ( ($generated@@82 $generated@@605 ($generated@@487 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@79) (= (type $generated@@610) $generated@@79)) (and (and (and (=> ($generated@@168 $generated@@609 $generated@@610) (not (= $generated@@609 $generated@@610))) (=> (and ($generated@@399 $generated@@609) (not ($generated@@399 $generated@@610))) ($generated@@168 $generated@@609 $generated@@610))) (=> (and ($generated@@399 $generated@@609) ($generated@@399 $generated@@610)) (= ($generated@@168 $generated@@609 $generated@@610) (< ($generated@@84 $generated@@609) ($generated@@84 $generated@@610))))) (=> (and ($generated@@168 $generated@@609 $generated@@610) ($generated@@399 $generated@@610)) ($generated@@399 $generated@@609))))
 :pattern ( ($generated@@168 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@79) (= (type $generated@@614) $generated@@79)) (< ($generated@@611 $generated@@613) ($generated@@612 ($generated@@284 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@284 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@79) (= (type $generated@@616) $generated@@79)) (< ($generated@@611 $generated@@616) ($generated@@612 ($generated@@284 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@284 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@79) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) $generated@@67)) ($generated@@285 $generated@@617 ($generated@@479 $generated@@618 $generated@@619))) (and (= ($generated@@349 ($generated@@451 ($generated@@365 $generated@@79 $generated@@79) $generated@@617)) $generated@@617) ($generated@@82 ($generated@@451 ($generated@@365 $generated@@79 $generated@@79) $generated@@617) ($generated@@479 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@285 $generated@@617 ($generated@@479 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@79) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) $generated@@67)) ($generated@@285 $generated@@620 ($generated@@487 $generated@@621 $generated@@622))) (and (= ($generated@@349 ($generated@@451 ($generated@@383 $generated@@79 $generated@@79) $generated@@620)) $generated@@620) ($generated@@82 ($generated@@451 ($generated@@383 $generated@@79 $generated@@79) $generated@@620) ($generated@@487 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@285 $generated@@620 ($generated@@487 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@67) (= (type $generated@@624) $generated@@67)) (= (type $generated@@625) $generated@@79)) ($generated@@285 $generated@@625 ($generated@@196 $generated@@623 $generated@@624))) (and (= ($generated@@349 ($generated@@451 $generated@@81 $generated@@625)) $generated@@625) ($generated@@82 ($generated@@451 $generated@@81 $generated@@625) ($generated@@196 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@285 $generated@@625 ($generated@@196 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@626) $generated@@67) (= (type $generated@@627) $generated@@67)) (= (type $generated@@628) $generated@@80)) (= (type $generated@@629) $generated@@81)) (= (type $generated@@630) $generated@@81)) (= ($generated@@90 $generated@@626 $generated@@627 ($generated@@78 $generated@@628) $generated@@629 $generated@@630) (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@79) ($generated@@77 $generated@@626 $generated@@627 $generated@@631 ($generated@@78 $generated@@628) $generated@@629 $generated@@630))
 :pattern ( ($generated@@77 $generated@@626 $generated@@627 $generated@@631 ($generated@@78 $generated@@628) $generated@@629 $generated@@630))
))))
 :pattern ( ($generated@@90 $generated@@626 $generated@@627 ($generated@@78 $generated@@628) $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@81) (= (type $generated@@633) $generated@@67)) (= (type $generated@@634) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@319 $generated@@634) (and ($generated@@85 $generated@@632) ($generated@@104 $generated@@632 ($generated@@83 $generated@@633) $generated@@634)))) ($generated@@320 ($generated@@86 $generated@@632) $generated@@633 $generated@@634))
 :pattern ( ($generated@@320 ($generated@@86 $generated@@632) $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (! (let (($generated@@636 (type $generated@@635)))
 (not ($generated@@0 ($generated@@111 ($generated@@495 $generated@@636) $generated@@635))))
 :pattern ( (let (($generated@@636 (type $generated@@635)))
($generated@@111 ($generated@@495 $generated@@636) $generated@@635)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@67) (= (type $generated@@638) $generated@@67)) (and (= ($generated@@75 ($generated@@196 $generated@@637 $generated@@638)) $generated@@62) (= ($generated@@360 ($generated@@196 $generated@@637 $generated@@638)) $generated@@65)))
 :pattern ( ($generated@@196 $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@81) (= ($generated@@611 ($generated@@349 $generated@@639)) ($generated@@612 $generated@@639)))
 :pattern ( ($generated@@611 ($generated@@349 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@79) ($generated@@285 $generated@@640 ($generated@@105 0))) (and (= ($generated@@349 ($generated@@451 $generated@@2 $generated@@640)) $generated@@640) ($generated@@82 ($generated@@451 ($generated@@106 $generated@@79 $generated@@4) $generated@@640) ($generated@@105 0))))
 :pattern ( ($generated@@285 $generated@@640 ($generated@@105 0)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) $generated@@79) (= (type $generated@@642) $generated@@67)) ($generated@@285 $generated@@641 ($generated@@299 $generated@@642))) (and (= ($generated@@349 ($generated@@451 ($generated@@106 $generated@@79 $generated@@4) $generated@@641)) $generated@@641) ($generated@@82 ($generated@@451 ($generated@@106 $generated@@79 $generated@@4) $generated@@641) ($generated@@299 $generated@@642))))
 :pattern ( ($generated@@285 $generated@@641 ($generated@@299 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@643) $generated@@79) (= (type $generated@@644) $generated@@67)) ($generated@@285 $generated@@643 ($generated@@304 $generated@@644))) (and (= ($generated@@349 ($generated@@451 ($generated@@106 $generated@@79 $generated@@4) $generated@@643)) $generated@@643) ($generated@@82 ($generated@@451 ($generated@@106 $generated@@79 $generated@@4) $generated@@643) ($generated@@304 $generated@@644))))
 :pattern ( ($generated@@285 $generated@@643 ($generated@@304 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@645) $generated@@79) (= (type $generated@@646) $generated@@67)) ($generated@@285 $generated@@645 ($generated@@215 $generated@@646))) (and (= ($generated@@349 ($generated@@451 ($generated@@106 $generated@@79 $generated@@2) $generated@@645)) $generated@@645) ($generated@@82 ($generated@@451 ($generated@@106 $generated@@79 $generated@@2) $generated@@645) ($generated@@215 $generated@@646))))
 :pattern ( ($generated@@285 $generated@@645 ($generated@@215 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@647) $generated@@79) (= (type $generated@@648) $generated@@67)) ($generated@@285 $generated@@647 ($generated@@568 $generated@@648))) (and (= ($generated@@349 ($generated@@451 ($generated@@338 $generated@@79) $generated@@647)) $generated@@647) ($generated@@82 ($generated@@451 ($generated@@338 $generated@@79) $generated@@647) ($generated@@568 $generated@@648))))
 :pattern ( ($generated@@285 $generated@@647 ($generated@@568 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@649) $generated@@67) (= (type $generated@@650) $generated@@79)) ($generated@@285 $generated@@650 ($generated@@83 $generated@@649))) (and (= ($generated@@349 ($generated@@451 $generated@@81 $generated@@650)) $generated@@650) ($generated@@82 ($generated@@451 $generated@@81 $generated@@650) ($generated@@83 $generated@@649))))
 :pattern ( ($generated@@285 $generated@@650 ($generated@@83 $generated@@649)))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@79) ($generated@@399 $generated@@651)) (= $generated@@651 ($generated@@88 ($generated@@84 $generated@@651))))
 :pattern ( ($generated@@84 $generated@@651))
 :pattern ( ($generated@@399 $generated@@651))
)))
(assert  (=> (<= 1 $generated@@406) (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) $generated@@67) (= (type $generated@@654) $generated@@80)) (= (type $generated@@655) $generated@@79)) (or ($generated@@652 $generated@@653 $generated@@655) (and (not (= 1 $generated@@406)) ($generated@@285 $generated@@655 $generated@@653)))) (and (and ($generated@@408 $generated@@653 $generated@@655) ($generated@@652 $generated@@653 ($generated@@407 $generated@@653 $generated@@655))) (= ($generated@@172 $generated@@653 ($generated@@78 $generated@@654) $generated@@655) ($generated@@313 $generated@@655 ($generated@@172 $generated@@653 $generated@@654 ($generated@@407 $generated@@653 $generated@@655))))))
 :pattern ( ($generated@@172 $generated@@653 ($generated@@78 $generated@@654) $generated@@655))
))))
(assert  (=> (<= 1 $generated@@406) (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) $generated@@67) (= (type $generated@@658) $generated@@80)) (= (type $generated@@659) $generated@@79)) (or ($generated@@656 $generated@@657 $generated@@659) (and (not (= 1 $generated@@406)) ($generated@@285 $generated@@659 $generated@@657)))) (and (and ($generated@@408 $generated@@657 $generated@@659) ($generated@@656 $generated@@657 ($generated@@407 $generated@@657 $generated@@659))) (= ($generated@@182 $generated@@657 ($generated@@78 $generated@@658) $generated@@659) ($generated@@313 $generated@@659 ($generated@@182 $generated@@657 $generated@@658 ($generated@@407 $generated@@657 $generated@@659))))))
 :pattern ( ($generated@@182 $generated@@657 ($generated@@78 $generated@@658) $generated@@659))
))))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) $generated@@81) (= (type $generated@@661) $generated@@67)) (= (type $generated@@662) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@319 $generated@@662) (and ($generated@@85 $generated@@660) ($generated@@104 $generated@@660 ($generated@@83 $generated@@661) $generated@@662)))) ($generated@@104 ($generated@@89 $generated@@660) ($generated@@83 $generated@@661) $generated@@662))
 :pattern ( ($generated@@104 ($generated@@89 $generated@@660) ($generated@@83 $generated@@661) $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@663) ($generated@@106 $generated@@79 $generated@@2)) (= (type $generated@@664) $generated@@67)) (= (type $generated@@665) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@663 ($generated@@215 $generated@@664) $generated@@665) (forall (($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@79) (< 0 ($generated ($generated@@111 $generated@@663 $generated@@666)))) ($generated@@320 $generated@@666 $generated@@664 $generated@@665))
 :pattern ( ($generated@@111 $generated@@663 $generated@@666))
))))
 :pattern ( ($generated@@104 $generated@@663 ($generated@@215 $generated@@664) $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (= (type $generated@@667) $generated@@79) (= (type $generated@@668) $generated@@79)) (and ($generated@@399 $generated@@668) (<= ($generated@@84 $generated@@668) ($generated@@84 $generated@@667)))) (or (and (= $generated@@668 ($generated@@88 0)) (= ($generated@@87 $generated@@667 $generated@@668) $generated@@667)) (and (not (= $generated@@668 ($generated@@88 0))) ($generated@@168 ($generated@@87 $generated@@667 $generated@@668) $generated@@667))))
 :pattern ( ($generated@@87 $generated@@667 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@669) $generated@@67) (= (type $generated@@670) $generated@@67)) (= (type $generated@@671) $generated@@79)) (= (type $generated@@672) $generated@@80)) (= (type $generated@@673) $generated@@81)) (= (type $generated@@674) $generated@@81)) (= (type $generated@@675) $generated@@79)) (and ($generated@@168 $generated@@671 $generated@@675) ($generated@@77 $generated@@669 $generated@@670 $generated@@675 ($generated@@78 $generated@@672) $generated@@673 $generated@@674))) ($generated@@77 $generated@@669 $generated@@670 $generated@@671 ($generated@@78 $generated@@672) $generated@@673 $generated@@674))
 :pattern ( ($generated@@77 $generated@@669 $generated@@670 $generated@@671 ($generated@@78 $generated@@672) $generated@@673 $generated@@674) ($generated@@77 $generated@@669 $generated@@670 $generated@@675 ($generated@@78 $generated@@672) $generated@@673 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@676) $generated@@67) (= (type $generated@@677) $generated@@67)) (= (type $generated@@678) $generated@@80)) (= (type $generated@@679) $generated@@81)) (= (type $generated@@680) $generated@@81)) (= ($generated@@90 $generated@@676 $generated@@677 ($generated@@78 $generated@@678) $generated@@679 $generated@@680) ($generated@@90 $generated@@676 $generated@@677 $generated@@678 $generated@@679 $generated@@680)))
 :pattern ( ($generated@@90 $generated@@676 $generated@@677 ($generated@@78 $generated@@678) $generated@@679 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (and (and (= (type $generated@@681) $generated@@81) (= (type $generated@@682) $generated@@67)) (= (type $generated@@683) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@319 $generated@@683) (and ($generated@@195 $generated@@681) (exists (($generated@@684 T@U) ) (!  (and (= (type $generated@@684) $generated@@67) ($generated@@104 $generated@@681 ($generated@@196 $generated@@682 $generated@@684) $generated@@683))
 :pattern ( ($generated@@104 $generated@@681 ($generated@@196 $generated@@682 $generated@@684) $generated@@683))
))))) ($generated@@320 ($generated@@203 $generated@@681) $generated@@682 $generated@@683))
 :pattern ( ($generated@@320 ($generated@@203 $generated@@681) $generated@@682 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (and (and (= (type $generated@@685) $generated@@81) (= (type $generated@@686) $generated@@67)) (= (type $generated@@687) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@319 $generated@@687) (and ($generated@@195 $generated@@685) (exists (($generated@@688 T@U) ) (!  (and (= (type $generated@@688) $generated@@67) ($generated@@104 $generated@@685 ($generated@@196 $generated@@688 $generated@@686) $generated@@687))
 :pattern ( ($generated@@104 $generated@@685 ($generated@@196 $generated@@688 $generated@@686) $generated@@687))
))))) ($generated@@320 ($generated@@204 $generated@@685) $generated@@686 $generated@@687))
 :pattern ( ($generated@@320 ($generated@@204 $generated@@685) $generated@@686 $generated@@687))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) $generated@@79) (= (type $generated@@690) $generated@@79)) (= ($generated@@284 ($generated@@309 $generated@@689) ($generated@@309 $generated@@690)) ($generated@@309 ($generated@@284 $generated@@689 $generated@@690))))
 :pattern ( ($generated@@284 ($generated@@309 $generated@@689) ($generated@@309 $generated@@690)))
)))
(assert (forall (($generated@@691 T@U) ) (! (= ($generated@@349 ($generated@@309 $generated@@691)) ($generated@@309 ($generated@@349 $generated@@691)))
 :pattern ( ($generated@@349 ($generated@@309 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ) (! (let (($generated@@693 ($generated@@339 (type $generated@@692))))
 (=> (and (= (type $generated@@692) ($generated@@338 $generated@@693)) (= ($generated@@337 $generated@@692) 0)) (= $generated@@692 ($generated@@336 $generated@@693))))
 :pattern ( ($generated@@337 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ) (! (let (($generated@@697 (type $generated@@695)))
 (=> (and (and (= (type $generated@@694) ($generated@@106 $generated@@697 $generated@@2)) (= (type $generated@@696) $generated@@2)) (<= 0 ($generated $generated@@696))) (= ($generated@@354 ($generated@@112 $generated@@694 $generated@@695 $generated@@696)) (+ (- ($generated@@354 $generated@@694) ($generated ($generated@@111 $generated@@694 $generated@@695))) ($generated $generated@@696)))))
 :pattern ( ($generated@@354 ($generated@@112 $generated@@694 $generated@@695 $generated@@696)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@698) $generated@@67) (= (type $generated@@699) $generated@@67)) (= (type $generated@@700) $generated@@80)) (= (type $generated@@701) $generated@@81)) (= (type $generated@@702) $generated@@81)) (forall (($generated@@703 Int) ) (!  (=> (<= 0 $generated@@703) ($generated@@77 $generated@@698 $generated@@699 ($generated@@88 $generated@@703) ($generated@@78 $generated@@700) $generated@@701 $generated@@702))
 :pattern ( ($generated@@77 $generated@@698 $generated@@699 ($generated@@88 $generated@@703) ($generated@@78 $generated@@700) $generated@@701 $generated@@702))
))) ($generated@@90 $generated@@698 $generated@@699 ($generated@@78 $generated@@700) $generated@@701 $generated@@702))
 :pattern ( ($generated@@90 $generated@@698 $generated@@699 ($generated@@78 $generated@@700) $generated@@701 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@704) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@705) $generated@@2)) ($generated@@104 $generated@@705 $generated@@46 $generated@@704))
 :pattern ( ($generated@@104 $generated@@705 $generated@@46 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@706) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@707) $generated@@3)) ($generated@@104 $generated@@707 $generated@@47 $generated@@706))
 :pattern ( ($generated@@104 $generated@@707 $generated@@47 $generated@@706))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@708) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@709) $generated@@4)) ($generated@@104 $generated@@709 $generated@@44 $generated@@708))
 :pattern ( ($generated@@104 $generated@@709 $generated@@44 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@710) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@711) $generated@@519)) ($generated@@104 $generated@@711 $generated@@45 $generated@@710))
 :pattern ( ($generated@@104 $generated@@711 $generated@@45 $generated@@710))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@712) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@713) $generated@@79)) ($generated@@104 $generated@@713 $generated@@48 $generated@@712))
 :pattern ( ($generated@@104 $generated@@713 $generated@@48 $generated@@712))
)))
(assert  (=> (<= 1 $generated@@406) (forall (($generated@@714 T@U) ($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (and (= (type $generated@@714) $generated@@67) (= (type $generated@@715) $generated@@80)) (= (type $generated@@716) $generated@@79)) (or ($generated@@652 $generated@@714 $generated@@716) (and (not (= 1 $generated@@406)) ($generated@@285 $generated@@716 $generated@@714)))) ($generated@@82 ($generated@@172 $generated@@714 $generated@@715 $generated@@716) ($generated@@83 $generated@@714)))
 :pattern ( ($generated@@172 $generated@@714 $generated@@715 $generated@@716))
))))
(assert  (=> (<= 1 $generated@@406) (forall (($generated@@717 T@U) ($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (and (and (= (type $generated@@717) $generated@@67) (= (type $generated@@718) $generated@@80)) (= (type $generated@@719) $generated@@79)) (or ($generated@@656 $generated@@717 $generated@@719) (and (not (= 1 $generated@@406)) ($generated@@285 $generated@@719 $generated@@717)))) ($generated@@82 ($generated@@182 $generated@@717 $generated@@718 $generated@@719) ($generated@@83 $generated@@717)))
 :pattern ( ($generated@@182 $generated@@717 $generated@@718 $generated@@719))
))))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@720) $generated@@67) (= (type $generated@@721) $generated@@79)) (= (type $generated@@722) $generated@@81)) (= (type $generated@@723) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@319 $generated@@723)) (= ($generated@@104 ($generated@@313 $generated@@721 $generated@@722) ($generated@@83 $generated@@720) $generated@@723)  (and ($generated@@320 $generated@@721 $generated@@720 $generated@@723) ($generated@@104 $generated@@722 ($generated@@83 $generated@@720) $generated@@723))))
 :pattern ( ($generated@@104 ($generated@@313 $generated@@721 $generated@@722) ($generated@@83 $generated@@720) $generated@@723))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@724) ($generated@@338 $generated@@79)) (= (type $generated@@725) $generated@@67)) (= ($generated@@82 $generated@@724 ($generated@@568 $generated@@725)) (forall (($generated@@726 Int) ) (!  (=> (and (<= 0 $generated@@726) (< $generated@@726 ($generated@@337 $generated@@724))) ($generated@@285 ($generated@@569 $generated@@724 $generated@@726) $generated@@725))
 :pattern ( ($generated@@569 $generated@@724 $generated@@726))
))))
 :pattern ( ($generated@@82 $generated@@724 ($generated@@568 $generated@@725)))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 Int) ) (!  (=> (= (type $generated@@728) ($generated@@338 $generated@@79)) (=> (and (<= 0 $generated@@729) (< $generated@@729 ($generated@@337 $generated@@728))) (< ($generated@@612 ($generated@@451 $generated@@81 ($generated@@569 $generated@@728 $generated@@729))) ($generated@@727 $generated@@728))))
 :pattern ( ($generated@@612 ($generated@@451 $generated@@81 ($generated@@569 $generated@@728 $generated@@729))))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (and (and (= (type $generated@@730) ($generated@@365 $generated@@79 $generated@@79)) (= (type $generated@@731) $generated@@67)) (= (type $generated@@732) $generated@@67)) ($generated@@82 $generated@@730 ($generated@@479 $generated@@731 $generated@@732))) (and (and ($generated@@82 ($generated@@363 $generated@@730) ($generated@@299 $generated@@731)) ($generated@@82 ($generated@@417 $generated@@730) ($generated@@299 $generated@@732))) ($generated@@82 ($generated@@450 $generated@@730) ($generated@@299 ($generated@@196 $generated@@731 $generated@@732)))))
 :pattern ( ($generated@@82 $generated@@730 ($generated@@479 $generated@@731 $generated@@732)))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (and (and (= (type $generated@@733) ($generated@@383 $generated@@79 $generated@@79)) (= (type $generated@@734) $generated@@67)) (= (type $generated@@735) $generated@@67)) ($generated@@82 $generated@@733 ($generated@@487 $generated@@734 $generated@@735))) (and (and ($generated@@82 ($generated@@381 $generated@@733) ($generated@@304 $generated@@734)) ($generated@@82 ($generated@@428 $generated@@733) ($generated@@304 $generated@@735))) ($generated@@82 ($generated@@461 $generated@@733) ($generated@@304 ($generated@@196 $generated@@734 $generated@@735)))))
 :pattern ( ($generated@@82 $generated@@733 ($generated@@487 $generated@@734 $generated@@735)))
)))
(assert (forall (($generated@@736 T@U) ) (!  (=> (= (type $generated@@736) $generated@@2) ($generated@@82 $generated@@736 $generated@@46))
 :pattern ( ($generated@@82 $generated@@736 $generated@@46))
)))
(assert (forall (($generated@@737 T@U) ) (!  (=> (= (type $generated@@737) $generated@@3) ($generated@@82 $generated@@737 $generated@@47))
 :pattern ( ($generated@@82 $generated@@737 $generated@@47))
)))
(assert (forall (($generated@@738 T@U) ) (!  (=> (= (type $generated@@738) $generated@@4) ($generated@@82 $generated@@738 $generated@@44))
 :pattern ( ($generated@@82 $generated@@738 $generated@@44))
)))
(assert (forall (($generated@@739 T@U) ) (!  (=> (= (type $generated@@739) $generated@@519) ($generated@@82 $generated@@739 $generated@@45))
 :pattern ( ($generated@@82 $generated@@739 $generated@@45))
)))
(assert (forall (($generated@@740 T@U) ) (!  (=> (= (type $generated@@740) $generated@@79) ($generated@@82 $generated@@740 $generated@@48))
 :pattern ( ($generated@@82 $generated@@740 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@741 () T@U)
(declare-fun $generated@@742 () T@U)
(declare-fun $generated@@743 () T@U)
(declare-fun $generated@@744 () T@U)
(declare-fun $generated@@745 () T@U)
(declare-fun $generated@@746 () T@U)
(declare-fun $generated@@747 () T@U)
(declare-fun $generated@@748 (T@U) Bool)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 () T@U)
(declare-fun $generated@@751 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@741) $generated@@67) (= (type $generated@@742) $generated@@79)) (= (type $generated@@743) $generated@@79)) (= (type $generated@@749) ($generated@@106 $generated@@107 $generated@@108))) (= (type $generated@@745) ($generated@@106 $generated@@107 $generated@@108))) (= (type $generated@@744) ($generated@@106 $generated@@107 $generated@@108))) (= (type $generated@@746) $generated@@79)) (= (type $generated@@747) $generated@@79)) (= (type $generated@@750) ($generated@@224 $generated@@107 $generated@@4))) (= (type $generated@@751) $generated@@107)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@752  (=> (and (and (and (and (and (not ($generated@@0 ($generated@@309 ($generated@@11 true)))) (not ($generated@@0 ($generated@@309 ($generated@@11 true))))) (not ($generated@@0 ($generated@@309 ($generated@@11 true))))) (not ($generated@@0 ($generated@@309 ($generated@@11 true))))) (not ($generated@@0 ($generated@@309 ($generated@@11 true))))) (= (ControlFlow 0 20) (- 0 19))) false)))
(let (($generated@@753  (and (=> (= (ControlFlow 0 2) (- 0 3)) (or ($generated@@77 $generated@@741 $generated@@741 $generated@@742 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743) ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) (=> (< 0 ($generated@@84 $generated@@742)) (=> ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) (and ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) (and (= ($generated@@86 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) ($generated@@86 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) ($generated@@77 $generated@@741 $generated@@741 ($generated@@87 $generated@@742 ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))))))))) (=> (or ($generated@@77 $generated@@741 $generated@@741 $generated@@742 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743) ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) (=> (< 0 ($generated@@84 $generated@@742)) (=> ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) (and ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) (and (= ($generated@@86 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) ($generated@@86 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) ($generated@@77 $generated@@741 $generated@@741 ($generated@@87 $generated@@742 ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (or ($generated@@77 $generated@@741 $generated@@741 $generated@@742 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743) ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) (or (=> (< 0 ($generated@@84 $generated@@742)) (=> ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) (and ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) (and (= ($generated@@86 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) ($generated@@86 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) ($generated@@77 $generated@@741 $generated@@741 ($generated@@87 $generated@@742 ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))))))) (=> (and (not (= $generated@@742 ($generated@@88 0))) (= ($generated@@84 $generated@@742) 0)) ($generated@@90 $generated@@741 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743) ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))))))))))
(let (($generated@@754  (=> (and ($generated@@0 ($generated@@309 ($generated@@11 true))) (= (ControlFlow 0 18) 2)) $generated@@753)))
(let (($generated@@755  (=> ($generated@@0 ($generated@@309 ($generated@@11 true))) (and (=> (= (ControlFlow 0 13) (- 0 17)) ($generated@@399 ($generated@@309 ($generated@@88 1)))) (=> ($generated@@399 ($generated@@309 ($generated@@88 1))) (and (=> (= (ControlFlow 0 13) (- 0 16)) (<= ($generated@@84 ($generated@@309 ($generated@@88 1))) ($generated@@84 $generated@@742))) (=> (<= ($generated@@84 ($generated@@309 ($generated@@88 1))) ($generated@@84 $generated@@742)) (=> (and (and ($generated@@320 $generated@@743 $generated@@741 $generated@@744) ($generated@@652 $generated@@741 $generated@@743)) (and ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)))) (=> (and (and (and ($generated@@320 $generated@@743 $generated@@741 $generated@@744) ($generated@@656 $generated@@741 $generated@@743)) (and ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)))) (and (and ($generated@@652 $generated@@741 $generated@@743) ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))) (and ($generated@@656 $generated@@741 $generated@@743) ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (or ($generated@@77 $generated@@741 $generated@@741 ($generated@@87 $generated@@742 ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))) (=> (< 0 ($generated@@84 ($generated@@87 $generated@@742 ($generated@@88 1)))) (=> ($generated@@85 ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) (and ($generated@@85 ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) (and (= ($generated@@86 ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) ($generated@@86 ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)))) ($generated@@77 $generated@@741 $generated@@741 ($generated@@87 ($generated@@87 $generated@@742 ($generated@@88 1)) ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) ($generated@@89 ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)))))))))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (or ($generated@@77 $generated@@741 $generated@@741 ($generated@@87 $generated@@742 ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))) (or (=> (< 0 ($generated@@84 ($generated@@87 $generated@@742 ($generated@@88 1)))) (=> ($generated@@85 ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) (and ($generated@@85 ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) (and (= ($generated@@86 ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) ($generated@@86 ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)))) ($generated@@77 $generated@@741 $generated@@741 ($generated@@87 ($generated@@87 $generated@@742 ($generated@@88 1)) ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) ($generated@@89 ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)))))))) (=> (and (not (= ($generated@@87 $generated@@742 ($generated@@88 1)) ($generated@@88 0))) (= ($generated@@84 ($generated@@87 $generated@@742 ($generated@@88 1))) 0)) ($generated@@90 $generated@@741 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))))))) (=> (and ($generated@@77 $generated@@741 $generated@@741 ($generated@@87 $generated@@742 ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))) (= (ControlFlow 0 13) 2)) $generated@@753))))))))))))
(let (($generated@@756  (=> ($generated@@0 ($generated@@309 ($generated@@11 true))) (=> (and (and ($generated@@320 $generated@@743 $generated@@741 $generated@@744) ($generated@@652 $generated@@741 $generated@@743)) (and ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)))) (=> (and (and (and ($generated@@320 $generated@@743 $generated@@741 $generated@@744) ($generated@@656 $generated@@741 $generated@@743)) (and ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)))) (and (and ($generated@@652 $generated@@741 $generated@@743) ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))) (and ($generated@@656 $generated@@741 $generated@@743) ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))))) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or ($generated@@77 $generated@@741 $generated@@741 $generated@@742 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))) (=> (< 0 ($generated@@84 $generated@@742)) (=> ($generated@@85 ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) (and ($generated@@85 ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) (and (= ($generated@@86 ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) ($generated@@86 ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)))) ($generated@@77 $generated@@741 $generated@@741 ($generated@@87 $generated@@742 ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) ($generated@@89 ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)))))))))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or ($generated@@77 $generated@@741 $generated@@741 $generated@@742 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))) (or (=> (< 0 ($generated@@84 $generated@@742)) (=> ($generated@@85 ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) (and ($generated@@85 ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) (and (= ($generated@@86 ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) ($generated@@86 ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)))) ($generated@@77 $generated@@741 $generated@@741 ($generated@@87 $generated@@742 ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) ($generated@@89 ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)))))))) (=> (and (not (= $generated@@742 ($generated@@88 0))) (= ($generated@@84 $generated@@742) 0)) ($generated@@90 $generated@@741 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))))))) (=> (and ($generated@@77 $generated@@741 $generated@@741 $generated@@742 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))) (= (ControlFlow 0 10) 2)) $generated@@753))))))))
(let (($generated@@757  (=> ($generated@@0 ($generated@@309 ($generated@@11 true))) (=> (and (and (and ($generated@@320 $generated@@743 $generated@@741 $generated@@744) ($generated@@652 $generated@@741 $generated@@743)) (and ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@320 $generated@@743 $generated@@741 $generated@@744))) (and (and ($generated@@656 $generated@@741 $generated@@743) ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))) (and ($generated@@652 $generated@@741 $generated@@743) ($generated@@656 $generated@@741 $generated@@743)))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (or ($generated@@77 $generated@@741 $generated@@741 $generated@@742 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743) ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) (=> (< 0 ($generated@@84 $generated@@742)) (=> ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) (and ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) (and (= ($generated@@86 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) ($generated@@86 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) ($generated@@77 $generated@@741 $generated@@741 ($generated@@87 $generated@@742 ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))))))))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or ($generated@@77 $generated@@741 $generated@@741 $generated@@742 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743) ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) (or (=> (< 0 ($generated@@84 $generated@@742)) (=> ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) (and ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) (and (= ($generated@@86 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) ($generated@@86 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))) ($generated@@77 $generated@@741 $generated@@741 ($generated@@87 $generated@@742 ($generated@@88 1)) ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743))))))) (=> (and (not (= $generated@@742 ($generated@@88 0))) (= ($generated@@84 $generated@@742) 0)) ($generated@@90 $generated@@741 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743) ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)))))) (=> (and ($generated@@77 $generated@@741 $generated@@741 $generated@@742 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743) ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) (= (ControlFlow 0 7) 2)) $generated@@753)))))))
(let (($generated@@758  (=> ($generated@@0 ($generated@@309 ($generated@@11 true))) (=> (and (and ($generated@@320 $generated@@743 $generated@@741 $generated@@744) ($generated@@652 $generated@@741 $generated@@743)) (and ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)))) (=> (and (and (and ($generated@@320 $generated@@743 $generated@@741 $generated@@744) ($generated@@656 $generated@@741 $generated@@743)) (and ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)))) (and (and ($generated@@189 ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))) ($generated@@189 ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)))) (and (and ($generated@@652 $generated@@741 $generated@@743) ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))) (and ($generated@@656 $generated@@741 $generated@@743) ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@90 $generated@@741 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)))) (=> (and ($generated@@90 $generated@@741 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@89 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@89 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))) (= (ControlFlow 0 5) 2)) $generated@@753)))))))
(let (($generated@@759  (=> (< 0 ($generated@@84 $generated@@742)) (=> (and (and ($generated@@320 $generated@@743 $generated@@741 $generated@@745) ($generated@@652 $generated@@741 $generated@@743)) (and ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)))) (=> (and (and (and ($generated@@320 $generated@@743 $generated@@741 $generated@@745) ($generated@@656 $generated@@741 $generated@@743)) (and ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)))) (and (and ($generated@@652 $generated@@741 $generated@@743) ($generated@@85 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))) (and ($generated@@656 $generated@@741 $generated@@743) ($generated@@85 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))))) (and (=> (= (ControlFlow 0 21) (- 0 24)) (= ($generated@@86 ($generated@@172 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)) ($generated@@86 ($generated@@182 $generated@@741 ($generated@@78 ($generated@@78 $generated@@174)) $generated@@743)))) (=> (= ($generated@@86 ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@743)) ($generated@@86 ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@743))) (and (=> (= (ControlFlow 0 21) (- 0 23)) ($generated@@399 ($generated@@309 ($generated@@88 1)))) (=> ($generated@@399 ($generated@@309 ($generated@@88 1))) (and (=> (= (ControlFlow 0 21) (- 0 22)) (<= ($generated@@84 ($generated@@309 ($generated@@88 1))) ($generated@@84 $generated@@742))) (=> (<= ($generated@@84 ($generated@@309 ($generated@@88 1))) ($generated@@84 $generated@@742)) (=> (= $generated@@746 ($generated@@87 $generated@@742 ($generated@@88 1))) (=> (and ($generated@@320 $generated@@743 $generated@@741 $generated@@745) ($generated@@408 $generated@@741 $generated@@743)) (=> (and (and (and ($generated@@408 $generated@@741 $generated@@743) (= $generated@@747 ($generated@@407 $generated@@741 $generated@@743))) (and ($generated@@319 $generated@@744) ($generated@@748 $generated@@744))) (and (and ($generated@@652 $generated@@741 $generated@@747) ($generated@@656 $generated@@741 $generated@@747)) (and ($generated@@77 $generated@@741 $generated@@741 $generated@@746 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@747) ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@747)) (= $generated@@745 $generated@@744)))) (and (and (and (and (and (=> (= (ControlFlow 0 21) 5) $generated@@758) (=> (= (ControlFlow 0 21) 7) $generated@@757)) (=> (= (ControlFlow 0 21) 10) $generated@@756)) (=> (= (ControlFlow 0 21) 13) $generated@@755)) (=> (= (ControlFlow 0 21) 18) $generated@@754)) (=> (= (ControlFlow 0 21) 20) $generated@@752))))))))))))))))
(let (($generated@@760  (=> (<= ($generated@@84 $generated@@742) 0) (=> (and (and (and ($generated@@319 $generated@@749) ($generated@@748 $generated@@749)) (= $generated@@745 $generated@@749)) (and (forall (($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (= (type $generated@@761) $generated@@79) (= (type $generated@@762) $generated@@79)) (and ($generated@@285 $generated@@762 $generated@@741) ($generated@@168 $generated@@761 $generated@@742))) ($generated@@77 $generated@@741 $generated@@741 $generated@@761 ($generated@@78 ($generated@@78 $generated@@174)) ($generated@@172 $generated@@741 ($generated@@78 $generated@@174) $generated@@762) ($generated@@182 $generated@@741 ($generated@@78 $generated@@174) $generated@@762)))
 :no-pattern (type $generated@@761)
 :no-pattern (type $generated@@762)
 :no-pattern ($generated $generated@@761)
 :no-pattern ($generated@@0 $generated@@761)
 :no-pattern ($generated $generated@@762)
 :no-pattern ($generated@@0 $generated@@762)
)) (= (ControlFlow 0 4) 2))) $generated@@753))))
(let (($generated@@763  (=> (= $generated@@750 ($generated@@223 $generated@@751 $generated@@745 $generated@@60 false)) (and (=> (= (ControlFlow 0 25) 21) $generated@@759) (=> (= (ControlFlow 0 25) 4) $generated@@760)))))
(let (($generated@@764  (=> (and ($generated@@319 $generated@@745) ($generated@@748 $generated@@745)) (=> (and (and ($generated@@285 $generated@@743 $generated@@741) ($generated@@320 $generated@@743 $generated@@741 $generated@@745)) (and (= 3 $generated@@406) (= (ControlFlow 0 26) 25))) $generated@@763))))
$generated@@764))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 6))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 10) (- 12))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int T@U) T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@147 (Int) T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 (Int) T@U)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@280 (T@U T@U T@U) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) Bool)
(declare-fun $generated@@365 (T@T T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@452 (T@T) T@U)
(declare-fun $generated@@476 () T@T)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@529 (T@U Int) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@649 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@80) 11) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@91 $generated@@92)) 12))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@81 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@81 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@81 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@81 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@70 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@83) 14)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@83)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@70 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ($generated@@136 T@U) ) (! (= (type ($generated@@78 $generated@@135 $generated@@136)) $generated@@80)
 :pattern ( ($generated@@78 $generated@@135 $generated@@136))
))) (= (type $generated@@79) $generated@@67)))
(assert (forall (($generated@@137 Int) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) $generated@@80) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@84 $generated@@139)) (= ($generated@@77 ($generated@@78 $generated@@137 $generated@@138) $generated@@79 $generated@@139)  (and ($generated@@77 ($generated@@8 $generated@@137) $generated@@46 $generated@@139) ($generated@@77 $generated@@138 $generated@@79 $generated@@139))))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@137 $generated@@138) $generated@@79 $generated@@139))
)))
(assert  (and (= ($generated@@1 $generated@@142) 15) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@141 $generated@@143)) $generated@@142)
 :pattern ( ($generated@@141 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@142) (= (type $generated@@145) $generated@@80)) (= (type $generated@@146) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@144) $generated@@145 $generated@@146) (= $generated@@145 $generated@@146)))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@144) $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 Int) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@2) (= (type $generated@@150) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@77 $generated@@149 ($generated@@147 0) $generated@@150))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@147 0) $generated@@150))
)))
(assert (= ($generated@@1 $generated@@152) 16))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@152) (= (type $generated@@154) $generated@@152)) (= (type $generated@@155) $generated@@152)) (and ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@154 $generated@@155))) ($generated@@151 $generated@@153 $generated@@155))
 :pattern ( ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@154 $generated@@155))
 :pattern ( ($generated@@151 $generated@@153 $generated@@154) ($generated@@151 $generated@@153 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@80) ($generated@@156 $generated@@158)) ($generated@@157 $generated@@158))
 :pattern ( ($generated@@156 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@159 $generated@@160 ($generated@@147 0)))
 :pattern ( ($generated@@159 $generated@@160 ($generated@@147 0)))
)))
(assert  (and (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@161 $generated@@164 $generated@@165)) $generated@@152)
 :pattern ( ($generated@@161 $generated@@164 $generated@@165))
)) (forall (($generated@@166 Int) ) (! (= (type ($generated@@162 $generated@@166)) $generated@@152)
 :pattern ( ($generated@@162 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 Int) ($generated@@169 Int) ) (!  (=> (= (type $generated@@167) $generated@@152) (=> (and (and (<= 0 $generated@@168) (<= 0 $generated@@169)) (<= (+ $generated@@168 $generated@@169) ($generated@@163 $generated@@167))) (= ($generated@@161 ($generated@@161 $generated@@167 ($generated@@162 $generated@@168)) ($generated@@162 $generated@@169)) ($generated@@161 $generated@@167 ($generated@@162 (+ $generated@@168 $generated@@169))))))
 :pattern ( ($generated@@161 ($generated@@161 $generated@@167 ($generated@@162 $generated@@168)) ($generated@@162 $generated@@169)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@172 $generated@@173)) $generated@@67)
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@67) (= (type $generated@@175) $generated@@67)) (= (type $generated@@176) $generated@@80)) ($generated@@159 $generated@@176 ($generated@@171 $generated@@174 $generated@@175))) ($generated@@170 $generated@@176))
 :pattern ( ($generated@@170 $generated@@176) ($generated@@159 $generated@@176 ($generated@@171 $generated@@174 $generated@@175)))
)))
(assert  (and (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@152)
 :pattern ( ($generated@@178 $generated@@180))
)) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@152)
 :pattern ( ($generated@@179 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@80) (= (type $generated@@183) $generated@@80)) true) (= ($generated@@177 $generated@@182 $generated@@183)  (and (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)) (= ($generated@@179 $generated@@182) ($generated@@179 $generated@@183)))))
 :pattern ( ($generated@@177 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@67)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@188) $generated@@67)) ($generated@@159 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@159 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 17)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@82 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@70 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@82) (= (type $generated@@239) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@240) ($generated@@69 $generated@@4))) (= (type $generated@@242) $generated@@82)) (= (type $generated@@243) ($generated@@69 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@142) (= (type $generated@@247) $generated@@80)) (= (type $generated@@248) $generated@@80)) (forall (($generated@@249 Int) ) (!  (=> (<= 0 $generated@@249) ($generated@@245 ($generated@@162 $generated@@249) ($generated@@141 $generated@@246) $generated@@247 $generated@@248))
 :pattern ( ($generated@@245 ($generated@@162 $generated@@249) ($generated@@141 $generated@@246) $generated@@247 $generated@@248))
))) ($generated@@140 ($generated@@141 $generated@@246) $generated@@247 $generated@@248))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@80) ($generated@@159 $generated@@250 $generated@@79)) ($generated@@157 $generated@@250))
 :pattern ( ($generated@@157 $generated@@250) ($generated@@159 $generated@@250 $generated@@79))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@253 $generated@@254)) $generated@@80)
 :pattern ( ($generated@@251 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@255) $generated@@67) (= (type $generated@@256) $generated@@67)) (= (type $generated@@257) $generated@@152)) (= (type $generated@@258) $generated@@152)) (= ($generated@@159 ($generated@@251 $generated@@257 $generated@@258) ($generated@@171 $generated@@255 $generated@@256))  (and ($generated@@252 $generated@@257 $generated@@255) ($generated@@252 $generated@@258 $generated@@256))))
 :pattern ( ($generated@@159 ($generated@@251 $generated@@257 $generated@@258) ($generated@@171 $generated@@255 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@80) (= (type $generated@@260) $generated@@80)) (= ($generated@@177 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@177 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@152) (= (type $generated@@262) $generated@@142)) (= (type $generated@@263) $generated@@80)) (= (type $generated@@264) $generated@@80)) (= (type $generated@@265) $generated@@152)) (and ($generated@@151 $generated@@261 $generated@@265) ($generated@@245 $generated@@265 ($generated@@141 $generated@@262) $generated@@263 $generated@@264))) ($generated@@245 $generated@@261 ($generated@@141 $generated@@262) $generated@@263 $generated@@264))
 :pattern ( ($generated@@245 $generated@@261 ($generated@@141 $generated@@262) $generated@@263 $generated@@264) ($generated@@245 $generated@@265 ($generated@@141 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@67)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@269) $generated@@67)) (= ($generated@@159 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@152) ($generated@@0 ($generated@@87 $generated@@268 $generated@@270))) ($generated@@252 $generated@@270 $generated@@269))
 :pattern ( ($generated@@87 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@159 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@67)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@274) $generated@@67)) (= ($generated@@159 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@152) ($generated@@0 ($generated@@87 $generated@@273 $generated@@275))) ($generated@@252 $generated@@275 $generated@@274))
 :pattern ( ($generated@@87 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@159 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(= (type ($generated@@276 $generated@@277)) $generated@@278))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= ($generated@@276 $generated@@279) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) $generated@@67) (= (type $generated@@282) $generated@@67)) (= (type $generated@@283) $generated@@152)) (= (type $generated@@284) $generated@@152)) (= (type $generated@@285) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@84 $generated@@285)) (= ($generated@@77 ($generated@@251 $generated@@283 $generated@@284) ($generated@@171 $generated@@281 $generated@@282) $generated@@285)  (and ($generated@@280 $generated@@283 $generated@@281 $generated@@285) ($generated@@280 $generated@@284 $generated@@282 $generated@@285))))
 :pattern ( ($generated@@77 ($generated@@251 $generated@@283 $generated@@284) ($generated@@171 $generated@@281 $generated@@282) $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@71)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@80) (= ($generated@@170 $generated@@288) (= ($generated@@286 $generated@@288) $generated@@61)))
 :pattern ( ($generated@@170 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@80) (= ($generated@@157 $generated@@289) (= ($generated@@286 $generated@@289) $generated@@63)))
 :pattern ( ($generated@@157 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@80) ($generated@@170 $generated@@290)) (exists (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (and (and (= (type $generated@@291) $generated@@152) (= (type $generated@@292) $generated@@152)) (= $generated@@290 ($generated@@251 $generated@@291 $generated@@292)))
 :no-pattern (type $generated@@291)
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
)))
 :pattern ( ($generated@@170 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@80) ($generated@@157 $generated@@293)) (exists (($generated@@294 Int) ($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@80) (= $generated@@293 ($generated@@78 $generated@@294 $generated@@295)))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
)))
 :pattern ( ($generated@@157 $generated@@293))
)))
(assert  (and (and (forall (($generated@@300 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@300)) 18)) (forall (($generated@@301 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@298 $generated@@301))
))) (forall (($generated@@302 T@T) ) (! (= (type ($generated@@296 $generated@@302)) ($generated@@298 $generated@@302))
 :pattern ( ($generated@@296 $generated@@302))
))))
(assert (forall (($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@303)) 0)
 :pattern ( ($generated@@296 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@304) $generated@@152) (= (type $generated@@305) $generated@@142)) (= (type $generated@@306) $generated@@80)) (= (type $generated@@307) $generated@@80)) (not (= $generated@@304 ($generated@@162 0)))) (= ($generated@@245 $generated@@304 ($generated@@141 $generated@@305) $generated@@306 $generated@@307) ($generated@@245 $generated@@304 $generated@@305 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@245 $generated@@304 ($generated@@141 $generated@@305) $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (= (type $generated@@308) $generated@@142) (= (type $generated@@309) $generated@@80)) (= (type $generated@@310) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@308) $generated@@309 $generated@@310) ($generated@@140 $generated@@308 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@308) $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@152)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@67) (= (type $generated@@315) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@280 ($generated@@311 $generated@@313) $generated@@314 $generated@@315) ($generated@@77 $generated@@313 $generated@@314 $generated@@315)))
 :pattern ( ($generated@@280 ($generated@@311 $generated@@313) $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@81 $generated@@318 $generated@@2))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@85 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@81 $generated@@320 $generated@@2)) (and (= (= ($generated@@316 $generated@@319) 0) (= $generated@@319 ($generated@@317 $generated@@320))) (=> (not (= ($generated@@316 $generated@@319) 0)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) (< 0 ($generated ($generated@@87 $generated@@319 $generated@@321))))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 19)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@81 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@87 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@87 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 20)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@81 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@87 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@87 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@359) $generated@@152) (= (type $generated@@360) $generated@@152)) (and ($generated@@358 $generated@@360) (<= ($generated@@163 $generated@@360) ($generated@@163 $generated@@359)))) (and (= ($generated@@358 ($generated@@161 $generated@@359 $generated@@360)) ($generated@@358 $generated@@359)) (= ($generated@@163 ($generated@@161 $generated@@359 $generated@@360)) (- ($generated@@163 $generated@@359) ($generated@@163 $generated@@360)))))
 :pattern ( ($generated@@161 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 Int) ) (!  (=> (<= 0 $generated@@361) (and ($generated@@358 ($generated@@162 $generated@@361)) (= ($generated@@163 ($generated@@162 $generated@@361)) $generated@@361)))
 :pattern ( ($generated@@162 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@85 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@81 $generated@@363 $generated@@2)) (= ($generated@@185 $generated@@362) (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@363) (and (<= 0 ($generated ($generated@@87 $generated@@362 $generated@@364))) (<= ($generated ($generated@@87 $generated@@362 $generated@@364)) ($generated@@316 $generated@@362))))
 :pattern ( ($generated@@87 $generated@@362 $generated@@364))
)))))
 :pattern ( ($generated@@185 $generated@@362))
)))
(assert (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@365 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@152) ($generated@@252 $generated@@368 $generated@@79)) (and (= ($generated@@311 ($generated@@365 $generated@@80 $generated@@368)) $generated@@368) ($generated@@159 ($generated@@365 $generated@@80 $generated@@368) $generated@@79)))
 :pattern ( ($generated@@252 $generated@@368 $generated@@79))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) $generated@@142) (= (type $generated@@370) $generated@@80)) (= (type $generated@@371) $generated@@80)) (= ($generated@@140 ($generated@@141 $generated@@369) $generated@@370 $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@152) ($generated@@245 $generated@@372 ($generated@@141 $generated@@369) $generated@@370 $generated@@371))
 :pattern ( ($generated@@245 $generated@@372 ($generated@@141 $generated@@369) $generated@@370 $generated@@371))
))))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@369) $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@326 (type $generated@@373))))
(let (($generated@@375 ($generated@@325 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@324 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@323 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@87 ($generated@@322 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@322 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@326 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@81 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@326 (type $generated@@380))))
(let (($generated@@382 ($generated@@325 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@324 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@323 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@87 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@344 (type $generated@@384))))
(let (($generated@@386 ($generated@@343 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@342 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@341 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) ($generated@@0 ($generated@@87 ($generated@@340 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@340 $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@344 (type $generated@@389))))
(= (type ($generated@@388 $generated@@389)) ($generated@@81 $generated@@390 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@344 (type $generated@@391))))
(let (($generated@@393 ($generated@@343 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@342 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@341 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@392) ($generated@@0 ($generated@@87 ($generated@@388 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@388 $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@396) $generated@@67)) (= ($generated@@159 $generated@@395 ($generated@@184 $generated@@396)) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@152) (< 0 ($generated ($generated@@87 $generated@@395 $generated@@397)))) ($generated@@252 $generated@@397 $generated@@396))
 :pattern ( ($generated@@87 $generated@@395 $generated@@397))
))))
 :pattern ( ($generated@@159 $generated@@395 ($generated@@184 $generated@@396)))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@152) (= (type $generated@@399) $generated@@152)) (or (or ($generated@@151 $generated@@398 $generated@@399) (= $generated@@398 $generated@@399)) ($generated@@151 $generated@@399 $generated@@398)))
 :pattern ( ($generated@@151 $generated@@398 $generated@@399) ($generated@@151 $generated@@399 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@400 ($generated@@266 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@152) ($generated@@0 ($generated@@87 $generated@@400 $generated@@403))) ($generated@@280 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@87 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@77 $generated@@400 ($generated@@266 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@404) ($generated@@81 $generated@@152 $generated@@4)) (= (type $generated@@405) $generated@@67)) (= (type $generated@@406) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@404 ($generated@@271 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@152) ($generated@@0 ($generated@@87 $generated@@404 $generated@@407))) ($generated@@280 $generated@@407 $generated@@405 $generated@@406))
 :pattern ( ($generated@@87 $generated@@404 $generated@@407))
))))
 :pattern ( ($generated@@77 $generated@@404 ($generated@@271 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(= ($generated ($generated@@87 ($generated@@317 $generated@@409) $generated@@408)) 0))
 :pattern ( (let (($generated@@409 (type $generated@@408)))
($generated@@87 ($generated@@317 $generated@@409) $generated@@408)))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@81 $generated@@152 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@326 (type $generated@@413))))
(let (($generated@@415 ($generated@@325 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@81 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@324 $generated@@152 $generated@@152)) (= (type $generated@@417) $generated@@152)) (= ($generated@@0 ($generated@@87 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@87 ($generated@@322 $generated@@416) ($generated@@178 ($generated@@365 $generated@@80 $generated@@417)))) (= ($generated@@87 ($generated@@411 $generated@@416) ($generated@@178 ($generated@@365 $generated@@80 $generated@@417))) ($generated@@179 ($generated@@365 $generated@@80 $generated@@417))))))
 :pattern ( ($generated@@87 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert  (and (forall (($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@420)) ($generated@@81 $generated@@152 $generated@@4))
 :pattern ( ($generated@@418 $generated@@420))
)) (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@344 (type $generated@@421))))
(let (($generated@@423 ($generated@@343 (type $generated@@421))))
(= (type ($generated@@419 $generated@@421)) ($generated@@81 $generated@@423 $generated@@422))))
 :pattern ( ($generated@@419 $generated@@421))
))))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) ($generated@@342 $generated@@152 $generated@@152)) (= (type $generated@@425) $generated@@152)) (= ($generated@@0 ($generated@@87 ($generated@@418 $generated@@424) $generated@@425))  (and ($generated@@0 ($generated@@87 ($generated@@340 $generated@@424) ($generated@@178 ($generated@@365 $generated@@80 $generated@@425)))) (= ($generated@@87 ($generated@@419 $generated@@424) ($generated@@178 ($generated@@365 $generated@@80 $generated@@425))) ($generated@@179 ($generated@@365 $generated@@80 $generated@@425))))))
 :pattern ( ($generated@@87 ($generated@@418 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(let (($generated@@429 ($generated@@325 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@324 $generated@@429 $generated@@428)) (= ($generated@@0 ($generated@@87 ($generated@@377 $generated@@426) $generated@@427)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) (and ($generated@@0 ($generated@@87 ($generated@@322 $generated@@426) $generated@@430)) (= $generated@@427 ($generated@@87 ($generated@@411 $generated@@426) $generated@@430))))
 :pattern ( ($generated@@87 ($generated@@322 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@411 $generated@@426) $generated@@430))
))))))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@343 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@342 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@87 ($generated@@340 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@87 ($generated@@419 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@87 ($generated@@340 $generated@@431) $generated@@435))
 :pattern ( ($generated@@87 ($generated@@419 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@324 $generated@@152 $generated@@152)) (= (type $generated@@440) $generated@@67)) (= (type $generated@@441) $generated@@67)) (= (type $generated@@442) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@322 $generated@@439) $generated@@443))) (and ($generated@@280 ($generated@@87 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@280 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@87 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@87 ($generated@@322 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@77 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (= (type $generated@@447) ($generated@@342 $generated@@152 $generated@@152)) (= (type $generated@@448) $generated@@67)) (= (type $generated@@449) $generated@@67)) (= (type $generated@@450) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@340 $generated@@447) $generated@@451))) (and ($generated@@280 ($generated@@87 ($generated@@419 $generated@@447) $generated@@451) $generated@@449 $generated@@450) ($generated@@280 $generated@@451 $generated@@448 $generated@@450)))
 :pattern ( ($generated@@87 ($generated@@419 $generated@@447) $generated@@451))
 :pattern ( ($generated@@87 ($generated@@340 $generated@@447) $generated@@451))
))))
 :pattern ( ($generated@@77 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 T@T) ) (! (= (type ($generated@@452 $generated@@453)) ($generated@@81 $generated@@453 $generated@@4))
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@344 (type $generated@@454))))
(let (($generated@@456 ($generated@@343 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@342 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@341 $generated@@456 $generated@@455)) (= ($generated@@340 $generated@@454) ($generated@@452 $generated@@456))))))
 :pattern ( ($generated@@340 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@344 (type $generated@@457))))
(let (($generated@@459 ($generated@@343 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@342 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@341 $generated@@459 $generated@@458)) (= ($generated@@388 $generated@@457) ($generated@@452 $generated@@458))))))
 :pattern ( ($generated@@388 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@344 (type $generated@@460))))
(let (($generated@@462 ($generated@@343 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@342 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@341 $generated@@462 $generated@@461)) (= ($generated@@418 $generated@@460) ($generated@@452 $generated@@152))))))
 :pattern ( ($generated@@418 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@326 (type $generated@@463))))
(let (($generated@@465 ($generated@@325 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@324 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@323 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@152) (= (type $generated@@467) $generated@@152)) ($generated@@0 ($generated@@87 ($generated@@410 $generated@@463) ($generated@@311 ($generated@@251 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@410 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@344 (type $generated@@468))))
(let (($generated@@470 ($generated@@343 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@342 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@341 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@152) (= (type $generated@@472) $generated@@152)) ($generated@@0 ($generated@@87 ($generated@@418 $generated@@468) ($generated@@311 ($generated@@251 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@418 $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@152) ($generated@@252 $generated@@473 $generated@@46)) (and (= ($generated@@311 ($generated@@365 $generated@@2 $generated@@473)) $generated@@473) ($generated@@159 ($generated@@365 $generated@@2 $generated@@473) $generated@@46)))
 :pattern ( ($generated@@252 $generated@@473 $generated@@46))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@152) ($generated@@252 $generated@@474 $generated@@47)) (and (= ($generated@@311 ($generated@@365 $generated@@3 $generated@@474)) $generated@@474) ($generated@@159 ($generated@@365 $generated@@3 $generated@@474) $generated@@47)))
 :pattern ( ($generated@@252 $generated@@474 $generated@@47))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@152) ($generated@@252 $generated@@475 $generated@@44)) (and (= ($generated@@311 ($generated@@365 $generated@@4 $generated@@475)) $generated@@475) ($generated@@159 ($generated@@365 $generated@@4 $generated@@475) $generated@@44)))
 :pattern ( ($generated@@252 $generated@@475 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@476) 21))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@152) ($generated@@252 $generated@@477 $generated@@45)) (and (= ($generated@@311 ($generated@@365 $generated@@476 $generated@@477)) $generated@@477) ($generated@@159 ($generated@@365 $generated@@476 $generated@@477) $generated@@45)))
 :pattern ( ($generated@@252 $generated@@477 $generated@@45))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@67) (= ($generated@@252 ($generated@@311 $generated@@478) $generated@@479) ($generated@@159 $generated@@478 $generated@@479)))
 :pattern ( ($generated@@252 ($generated@@311 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@152) (<= 0 ($generated@@163 $generated@@480)))
 :pattern ( ($generated@@163 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@85 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@81 $generated@@482 $generated@@2)) (<= 0 ($generated@@316 $generated@@481))))
 :pattern ( ($generated@@316 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@299 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@298 $generated@@484)) (<= 0 ($generated@@297 $generated@@483))))
 :pattern ( ($generated@@297 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@67) (= (type $generated@@488) $generated@@67)) (= ($generated@@485 ($generated@@436 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@436 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@489 ($generated@@436 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@436 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@67) (= (type $generated@@494) $generated@@67)) (= ($generated@@75 ($generated@@436 $generated@@493 $generated@@494)) $generated@@58))
 :pattern ( ($generated@@436 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@67) (= (type $generated@@498) $generated@@67)) (= ($generated@@495 ($generated@@444 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@444 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@67) (= (type $generated@@502) $generated@@67)) (= ($generated@@499 ($generated@@444 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@444 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@67) (= (type $generated@@504) $generated@@67)) (= ($generated@@75 ($generated@@444 $generated@@503 $generated@@504)) $generated@@59))
 :pattern ( ($generated@@444 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@152) (= (type $generated@@506) $generated@@152)) (= ($generated@@286 ($generated@@251 $generated@@505 $generated@@506)) $generated@@61))
 :pattern ( ($generated@@251 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@67) (= (type $generated@@510) $generated@@67)) (= ($generated@@507 ($generated@@171 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@171 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@67)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@67) (= (type $generated@@514) $generated@@67)) (= ($generated@@511 ($generated@@171 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@171 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@152) (= (type $generated@@516) $generated@@152)) (= ($generated@@178 ($generated@@251 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@251 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@152)) (= ($generated@@179 ($generated@@251 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@251 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 Int) ($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@80) (= ($generated@@286 ($generated@@78 $generated@@519 $generated@@520)) $generated@@63))
 :pattern ( ($generated@@78 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 Int) ($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@80) (= ($generated@@521 ($generated@@78 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@78 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@80)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 Int) ($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@80) (= ($generated@@524 ($generated@@78 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@78 $generated@@526 $generated@@527))
)))
(assert  (and (forall (($generated@@530 T@U) ) (! (= (type ($generated@@528 $generated@@530)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@530))
)) (forall (($generated@@531 T@U) ($generated@@532 Int) ) (! (let (($generated@@533 ($generated@@299 (type $generated@@531))))
(= (type ($generated@@529 $generated@@531 $generated@@532)) $generated@@533))
 :pattern ( ($generated@@529 $generated@@531 $generated@@532))
))))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@298 $generated@@152)) (= (type $generated@@535) $generated@@67)) (= (type $generated@@536) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@534 ($generated@@528 $generated@@535) $generated@@536) (forall (($generated@@537 Int) ) (!  (=> (and (<= 0 $generated@@537) (< $generated@@537 ($generated@@297 $generated@@534))) ($generated@@280 ($generated@@529 $generated@@534 $generated@@537) $generated@@535 $generated@@536))
 :pattern ( ($generated@@529 $generated@@534 $generated@@537))
))))
 :pattern ( ($generated@@77 $generated@@534 ($generated@@528 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@539 Int) ) (! (= ($generated@@538 ($generated@@147 $generated@@539)) $generated@@539)
 :pattern ( ($generated@@147 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@540 ($generated@@266 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@266 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@75 ($generated@@266 $generated@@543)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@67) (= ($generated@@544 ($generated@@271 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@271 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@67) (= ($generated@@75 ($generated@@271 $generated@@547)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@67)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@67) (= ($generated@@548 ($generated@@184 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@184 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@67) (= ($generated@@75 ($generated@@184 $generated@@551)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@67)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@67) (= ($generated@@552 ($generated@@528 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@528 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@67) (= ($generated@@75 ($generated@@528 $generated@@555)) $generated@@57))
 :pattern ( ($generated@@528 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
(= ($generated@@365 $generated@@557 ($generated@@311 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@311 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@324 $generated@@152 $generated@@152)) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) $generated@@67)) (= ($generated@@159 $generated@@558 ($generated@@436 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@322 $generated@@558) $generated@@561))) (and ($generated@@252 ($generated@@87 ($generated@@411 $generated@@558) $generated@@561) $generated@@560) ($generated@@252 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@87 ($generated@@411 $generated@@558) $generated@@561))
 :pattern ( ($generated@@87 ($generated@@322 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@159 $generated@@558 ($generated@@436 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@342 $generated@@152 $generated@@152)) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) $generated@@67)) (= ($generated@@159 $generated@@562 ($generated@@444 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@152) ($generated@@0 ($generated@@87 ($generated@@340 $generated@@562) $generated@@565))) (and ($generated@@252 ($generated@@87 ($generated@@419 $generated@@562) $generated@@565) $generated@@564) ($generated@@252 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@87 ($generated@@419 $generated@@562) $generated@@565))
 :pattern ( ($generated@@87 ($generated@@340 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@159 $generated@@562 ($generated@@444 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@152) (= (type $generated@@567) $generated@@152)) (and (and (and (=> ($generated@@151 $generated@@566 $generated@@567) (not (= $generated@@566 $generated@@567))) (=> (and ($generated@@358 $generated@@566) (not ($generated@@358 $generated@@567))) ($generated@@151 $generated@@566 $generated@@567))) (=> (and ($generated@@358 $generated@@566) ($generated@@358 $generated@@567)) (= ($generated@@151 $generated@@566 $generated@@567) (< ($generated@@163 $generated@@566) ($generated@@163 $generated@@567))))) (=> (and ($generated@@151 $generated@@566 $generated@@567) ($generated@@358 $generated@@567)) ($generated@@358 $generated@@566))))
 :pattern ( ($generated@@151 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@152) (= (type $generated@@571) $generated@@152)) (< ($generated@@568 $generated@@570) ($generated@@569 ($generated@@251 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@251 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@152) (= (type $generated@@573) $generated@@152)) (< ($generated@@568 $generated@@573) ($generated@@569 ($generated@@251 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@251 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@574) $generated@@152) (= (type $generated@@575) $generated@@142)) (= (type $generated@@576) $generated@@80)) (= (type $generated@@577) $generated@@80)) (and ($generated@@159 $generated@@576 $generated@@79) ($generated@@159 $generated@@577 $generated@@79))) (= ($generated@@245 $generated@@574 ($generated@@141 $generated@@575) $generated@@576 $generated@@577)  (and (=> (< 0 ($generated@@163 $generated@@574)) (and (and ($generated@@157 $generated@@576) ($generated@@157 $generated@@577)) (=> (and ($generated@@157 $generated@@576) ($generated@@157 $generated@@577)) (and (= ($generated@@521 $generated@@576) ($generated@@521 $generated@@577)) ($generated@@245 ($generated@@161 $generated@@574 ($generated@@162 1)) $generated@@575 ($generated@@524 $generated@@576) ($generated@@524 $generated@@577)))))) (=> (and (not (= $generated@@574 ($generated@@162 0))) (= ($generated@@163 $generated@@574) 0)) ($generated@@140 $generated@@575 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@245 $generated@@574 ($generated@@141 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@152) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) $generated@@67)) ($generated@@252 $generated@@578 ($generated@@436 $generated@@579 $generated@@580))) (and (= ($generated@@311 ($generated@@365 ($generated@@324 $generated@@152 $generated@@152) $generated@@578)) $generated@@578) ($generated@@159 ($generated@@365 ($generated@@324 $generated@@152 $generated@@152) $generated@@578) ($generated@@436 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@252 $generated@@578 ($generated@@436 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@152) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) $generated@@67)) ($generated@@252 $generated@@581 ($generated@@444 $generated@@582 $generated@@583))) (and (= ($generated@@311 ($generated@@365 ($generated@@342 $generated@@152 $generated@@152) $generated@@581)) $generated@@581) ($generated@@159 ($generated@@365 ($generated@@342 $generated@@152 $generated@@152) $generated@@581) ($generated@@444 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@252 $generated@@581 ($generated@@444 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@67) (= (type $generated@@585) $generated@@67)) (= (type $generated@@586) $generated@@152)) ($generated@@252 $generated@@586 ($generated@@171 $generated@@584 $generated@@585))) (and (= ($generated@@311 ($generated@@365 $generated@@80 $generated@@586)) $generated@@586) ($generated@@159 ($generated@@365 $generated@@80 $generated@@586) ($generated@@171 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@252 $generated@@586 ($generated@@171 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@587)))
 (not ($generated@@0 ($generated@@87 ($generated@@452 $generated@@588) $generated@@587))))
 :pattern ( (let (($generated@@588 (type $generated@@587)))
($generated@@87 ($generated@@452 $generated@@588) $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@72)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@67) (= (type $generated@@592) $generated@@67)) (and (= ($generated@@75 ($generated@@171 $generated@@591 $generated@@592)) $generated@@62) (= ($generated@@589 ($generated@@171 $generated@@591 $generated@@592)) $generated@@65)))
 :pattern ( ($generated@@171 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@80) (= (type $generated@@594) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@594) (and ($generated@@157 $generated@@593) ($generated@@77 $generated@@593 $generated@@79 $generated@@594)))) ($generated@@77 ($generated@@8 ($generated@@521 $generated@@593)) $generated@@46 $generated@@594))
 :pattern ( ($generated@@77 ($generated@@8 ($generated@@521 $generated@@593)) $generated@@46 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@80) (= ($generated@@568 ($generated@@311 $generated@@595)) ($generated@@569 $generated@@595)))
 :pattern ( ($generated@@568 ($generated@@311 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@152) ($generated@@252 $generated@@596 ($generated@@147 0))) (and (= ($generated@@311 ($generated@@365 $generated@@2 $generated@@596)) $generated@@596) ($generated@@159 ($generated@@365 ($generated@@81 $generated@@152 $generated@@4) $generated@@596) ($generated@@147 0))))
 :pattern ( ($generated@@252 $generated@@596 ($generated@@147 0)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@152) (= (type $generated@@598) $generated@@67)) ($generated@@252 $generated@@597 ($generated@@266 $generated@@598))) (and (= ($generated@@311 ($generated@@365 ($generated@@81 $generated@@152 $generated@@4) $generated@@597)) $generated@@597) ($generated@@159 ($generated@@365 ($generated@@81 $generated@@152 $generated@@4) $generated@@597) ($generated@@266 $generated@@598))))
 :pattern ( ($generated@@252 $generated@@597 ($generated@@266 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@152) (= (type $generated@@600) $generated@@67)) ($generated@@252 $generated@@599 ($generated@@271 $generated@@600))) (and (= ($generated@@311 ($generated@@365 ($generated@@81 $generated@@152 $generated@@4) $generated@@599)) $generated@@599) ($generated@@159 ($generated@@365 ($generated@@81 $generated@@152 $generated@@4) $generated@@599) ($generated@@271 $generated@@600))))
 :pattern ( ($generated@@252 $generated@@599 ($generated@@271 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@152) (= (type $generated@@602) $generated@@67)) ($generated@@252 $generated@@601 ($generated@@184 $generated@@602))) (and (= ($generated@@311 ($generated@@365 ($generated@@81 $generated@@152 $generated@@2) $generated@@601)) $generated@@601) ($generated@@159 ($generated@@365 ($generated@@81 $generated@@152 $generated@@2) $generated@@601) ($generated@@184 $generated@@602))))
 :pattern ( ($generated@@252 $generated@@601 ($generated@@184 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@152) (= (type $generated@@604) $generated@@67)) ($generated@@252 $generated@@603 ($generated@@528 $generated@@604))) (and (= ($generated@@311 ($generated@@365 ($generated@@298 $generated@@152) $generated@@603)) $generated@@603) ($generated@@159 ($generated@@365 ($generated@@298 $generated@@152) $generated@@603) ($generated@@528 $generated@@604))))
 :pattern ( ($generated@@252 $generated@@603 ($generated@@528 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@152) ($generated@@358 $generated@@605)) (= $generated@@605 ($generated@@162 ($generated@@163 $generated@@605))))
 :pattern ( ($generated@@163 $generated@@605))
 :pattern ( ($generated@@358 $generated@@605))
)))
(assert (= ($generated@@75 $generated@@79) $generated@@64))
(assert (= ($generated@@589 $generated@@79) $generated@@66))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@606) ($generated@@81 $generated@@152 $generated@@2)) (= (type $generated@@607) $generated@@67)) (= (type $generated@@608) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@77 $generated@@606 ($generated@@184 $generated@@607) $generated@@608) (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@152) (< 0 ($generated ($generated@@87 $generated@@606 $generated@@609)))) ($generated@@280 $generated@@609 $generated@@607 $generated@@608))
 :pattern ( ($generated@@87 $generated@@606 $generated@@609))
))))
 :pattern ( ($generated@@77 $generated@@606 ($generated@@184 $generated@@607) $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@152) (= (type $generated@@611) $generated@@152)) (and ($generated@@358 $generated@@611) (<= ($generated@@163 $generated@@611) ($generated@@163 $generated@@610)))) (or (and (= $generated@@611 ($generated@@162 0)) (= ($generated@@161 $generated@@610 $generated@@611) $generated@@610)) (and (not (= $generated@@611 ($generated@@162 0))) ($generated@@151 ($generated@@161 $generated@@610 $generated@@611) $generated@@610))))
 :pattern ( ($generated@@161 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@80) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@614) (and ($generated@@170 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@67) ($generated@@77 $generated@@612 ($generated@@171 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@77 $generated@@612 ($generated@@171 $generated@@613 $generated@@615) $generated@@614))
))))) ($generated@@280 ($generated@@178 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@280 ($generated@@178 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@80) (= (type $generated@@617) $generated@@67)) (= (type $generated@@618) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@618) (and ($generated@@170 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@67) ($generated@@77 $generated@@616 ($generated@@171 $generated@@619 $generated@@617) $generated@@618))
 :pattern ( ($generated@@77 $generated@@616 ($generated@@171 $generated@@619 $generated@@617) $generated@@618))
))))) ($generated@@280 ($generated@@179 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@280 ($generated@@179 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@80) (= (type $generated@@621) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@84 $generated@@621) (and ($generated@@157 $generated@@620) ($generated@@77 $generated@@620 $generated@@79 $generated@@621)))) ($generated@@77 ($generated@@524 $generated@@620) $generated@@79 $generated@@621))
 :pattern ( ($generated@@77 ($generated@@524 $generated@@620) $generated@@79 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@152) (= (type $generated@@623) $generated@@152)) (= ($generated@@251 ($generated@@276 $generated@@622) ($generated@@276 $generated@@623)) ($generated@@276 ($generated@@251 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@251 ($generated@@276 $generated@@622) ($generated@@276 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (! (= ($generated@@311 ($generated@@276 $generated@@624)) ($generated@@276 ($generated@@311 $generated@@624)))
 :pattern ( ($generated@@311 ($generated@@276 $generated@@624)))
)))
(assert (forall (($generated@@625 Int) ($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@80) (= ($generated@@159 ($generated@@78 $generated@@625 $generated@@626) $generated@@79)  (and ($generated@@159 ($generated@@8 $generated@@625) $generated@@46) ($generated@@159 $generated@@626 $generated@@79))))
 :pattern ( ($generated@@159 ($generated@@78 $generated@@625 $generated@@626) $generated@@79))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@299 (type $generated@@627))))
 (=> (and (= (type $generated@@627) ($generated@@298 $generated@@628)) (= ($generated@@297 $generated@@627) 0)) (= $generated@@627 ($generated@@296 $generated@@628))))
 :pattern ( ($generated@@297 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@630)))
 (=> (and (and (= (type $generated@@629) ($generated@@81 $generated@@632 $generated@@2)) (= (type $generated@@631) $generated@@2)) (<= 0 ($generated $generated@@631))) (= ($generated@@316 ($generated@@88 $generated@@629 $generated@@630 $generated@@631)) (+ (- ($generated@@316 $generated@@629) ($generated ($generated@@87 $generated@@629 $generated@@630))) ($generated $generated@@631)))))
 :pattern ( ($generated@@316 ($generated@@88 $generated@@629 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@634) $generated@@2)) ($generated@@77 $generated@@634 $generated@@46 $generated@@633))
 :pattern ( ($generated@@77 $generated@@634 $generated@@46 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@636) $generated@@3)) ($generated@@77 $generated@@636 $generated@@47 $generated@@635))
 :pattern ( ($generated@@77 $generated@@636 $generated@@47 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@638) $generated@@4)) ($generated@@77 $generated@@638 $generated@@44 $generated@@637))
 :pattern ( ($generated@@77 $generated@@638 $generated@@44 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@640) $generated@@476)) ($generated@@77 $generated@@640 $generated@@45 $generated@@639))
 :pattern ( ($generated@@77 $generated@@640 $generated@@45 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@642) $generated@@152)) ($generated@@77 $generated@@642 $generated@@48 $generated@@641))
 :pattern ( ($generated@@77 $generated@@642 $generated@@48 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@298 $generated@@152)) (= (type $generated@@644) $generated@@67)) (= ($generated@@159 $generated@@643 ($generated@@528 $generated@@644)) (forall (($generated@@645 Int) ) (!  (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@297 $generated@@643))) ($generated@@252 ($generated@@529 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@529 $generated@@643 $generated@@645))
))))
 :pattern ( ($generated@@159 $generated@@643 ($generated@@528 $generated@@644)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) $generated@@142) (= (type $generated@@647) $generated@@80)) (= (type $generated@@648) $generated@@80)) (and ($generated@@159 $generated@@647 $generated@@79) ($generated@@159 $generated@@648 $generated@@79))) (= ($generated@@140 ($generated@@141 $generated@@646) $generated@@647 $generated@@648)  (and (and ($generated@@157 $generated@@647) ($generated@@157 $generated@@648)) (=> (and ($generated@@157 $generated@@647) ($generated@@157 $generated@@648)) (and (= ($generated@@521 $generated@@647) ($generated@@521 $generated@@648)) ($generated@@140 $generated@@646 ($generated@@524 $generated@@647) ($generated@@524 $generated@@648)))))))
 :pattern ( ($generated@@140 ($generated@@141 $generated@@646) $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 Int) ) (!  (=> (= (type $generated@@650) ($generated@@298 $generated@@152)) (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@297 $generated@@650))) (< ($generated@@569 ($generated@@365 $generated@@80 ($generated@@529 $generated@@650 $generated@@651))) ($generated@@649 $generated@@650))))
 :pattern ( ($generated@@569 ($generated@@365 $generated@@80 ($generated@@529 $generated@@650 $generated@@651))))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@652) $generated@@152) (= (type $generated@@653) $generated@@142)) (= (type $generated@@654) $generated@@80)) (= (type $generated@@655) $generated@@80)) (= $generated@@654 $generated@@655)) ($generated@@245 $generated@@652 ($generated@@141 $generated@@653) $generated@@654 $generated@@655))
 :pattern ( ($generated@@245 $generated@@652 ($generated@@141 $generated@@653) $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) ($generated@@324 $generated@@152 $generated@@152)) (= (type $generated@@657) $generated@@67)) (= (type $generated@@658) $generated@@67)) ($generated@@159 $generated@@656 ($generated@@436 $generated@@657 $generated@@658))) (and (and ($generated@@159 ($generated@@322 $generated@@656) ($generated@@266 $generated@@657)) ($generated@@159 ($generated@@377 $generated@@656) ($generated@@266 $generated@@658))) ($generated@@159 ($generated@@410 $generated@@656) ($generated@@266 ($generated@@171 $generated@@657 $generated@@658)))))
 :pattern ( ($generated@@159 $generated@@656 ($generated@@436 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) ($generated@@342 $generated@@152 $generated@@152)) (= (type $generated@@660) $generated@@67)) (= (type $generated@@661) $generated@@67)) ($generated@@159 $generated@@659 ($generated@@444 $generated@@660 $generated@@661))) (and (and ($generated@@159 ($generated@@340 $generated@@659) ($generated@@271 $generated@@660)) ($generated@@159 ($generated@@388 $generated@@659) ($generated@@271 $generated@@661))) ($generated@@159 ($generated@@418 $generated@@659) ($generated@@271 ($generated@@171 $generated@@660 $generated@@661)))))
 :pattern ( ($generated@@159 $generated@@659 ($generated@@444 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@2) ($generated@@159 $generated@@662 $generated@@46))
 :pattern ( ($generated@@159 $generated@@662 $generated@@46))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@3) ($generated@@159 $generated@@663 $generated@@47))
 :pattern ( ($generated@@159 $generated@@663 $generated@@47))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@4) ($generated@@159 $generated@@664 $generated@@44))
 :pattern ( ($generated@@159 $generated@@664 $generated@@44))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@476) ($generated@@159 $generated@@665 $generated@@45))
 :pattern ( ($generated@@159 $generated@@665 $generated@@45))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@152) ($generated@@159 $generated@@666 $generated@@48))
 :pattern ( ($generated@@159 $generated@@666 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 (T@U) Bool)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@667) $generated@@152) (= (type $generated@@671) $generated@@152)) (= (type $generated@@672) $generated@@80)) (= (type $generated@@673) $generated@@80)) (= (type $generated@@674) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@670) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@668) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@675) ($generated@@191 $generated@@82 $generated@@4))) (= (type $generated@@676) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@678  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@276 ($generated@@11 false))))))
(let (($generated@@679  (=> (<= ($generated@@163 $generated@@667) 0) (=> (and (and (and ($generated@@84 $generated@@668) ($generated@@669 $generated@@668)) (= $generated@@670 $generated@@668)) (and (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (= (type $generated@@680) $generated@@152) (= (type $generated@@681) $generated@@80)) (and ($generated@@159 $generated@@681 $generated@@79) ($generated@@151 $generated@@680 $generated@@667))) ($generated@@0 ($generated@@276 ($generated@@11 false))))
 :no-pattern (type $generated@@680)
 :no-pattern (type $generated@@681)
 :no-pattern ($generated $generated@@680)
 :no-pattern ($generated@@0 $generated@@680)
 :no-pattern ($generated $generated@@681)
 :no-pattern ($generated@@0 $generated@@681)
)) (= (ControlFlow 0 6) 2))) $generated@@678))))
(let (($generated@@682  (=> (< 0 ($generated@@163 $generated@@667)) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@358 ($generated@@276 ($generated@@162 1)))) (=> ($generated@@358 ($generated@@276 ($generated@@162 1))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= ($generated@@163 ($generated@@276 ($generated@@162 1))) ($generated@@163 $generated@@667))) (=> (<= ($generated@@163 ($generated@@276 ($generated@@162 1))) ($generated@@163 $generated@@667)) (=> (and (and (= $generated@@671 ($generated@@161 $generated@@667 ($generated@@162 1))) ($generated@@157 $generated@@672)) (and ($generated@@157 $generated@@672) (= $generated@@673 ($generated@@524 $generated@@672)))) (=> (and (and (and ($generated@@84 $generated@@674) ($generated@@669 $generated@@674)) ($generated@@0 ($generated@@276 ($generated@@11 false)))) (and (= $generated@@670 $generated@@674) (= (ControlFlow 0 3) 2))) $generated@@678)))))))))
(let (($generated@@683  (=> (= $generated@@675 ($generated@@190 $generated@@676 $generated@@670 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 3) $generated@@682) (=> (= (ControlFlow 0 7) 6) $generated@@679)))))
(let (($generated@@684  (=> (and ($generated@@84 $generated@@670) ($generated@@669 $generated@@670)) (=> (and (and (and ($generated@@159 $generated@@672 $generated@@79) ($generated@@77 $generated@@672 $generated@@79 $generated@@670)) ($generated@@156 $generated@@672)) (and (= 2 $generated@@677) (= (ControlFlow 0 8) 7))) $generated@@683))))
$generated@@684))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
