(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@T T@U T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U T@U T@U) T@U)
(declare-fun $generated@@200 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@201 (T@T T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (Int) Int)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@350 (T@U T@U) Bool)
(declare-fun $generated@@359 (T@T T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@445 (T@T) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 () T@T)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@517 (T@U Int) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@555 (T@U) Int)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@625 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert (= (type $generated@@181) $generated@@70))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@182) $generated@@88) (= (type $generated@@183) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@182 $generated@@181 $generated@@183) ($generated@@85 $generated@@182 $generated@@147 $generated@@183)))
 :pattern ( ($generated@@85 $generated@@182 $generated@@181 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@186 $generated@@187)) $generated@@161)
 :pattern ( ($generated@@184 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@70) (= (type $generated@@189) $generated@@70)) (= (type $generated@@190) $generated@@170)) (= (type $generated@@191) $generated@@170)) (= ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189))  (and ($generated@@185 $generated@@190 $generated@@188) ($generated@@185 $generated@@191 $generated@@189))))
 :pattern ( ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@72 $generated@@193))
 :pattern ( ($generated@@192 $generated@@193 $generated@@194 $generated@@195))
)))
(assert (= ($generated@@192 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@196 $generated@@151)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@161) (= (type $generated@@198) $generated@@161)) (= ($generated@@167 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@167 $generated@@197 $generated@@198))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@205 $generated@@206)) 18)) (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@207 $generated@@208)) $generated@@207)
 :pattern ( ($generated@@201 $generated@@207 $generated@@208))
))) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@203 ($generated@@201 $generated@@209 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@201 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@203 (type $generated@@211))))
(= (type ($generated@@199 $generated@@211 $generated@@212 $generated@@213)) $generated@@214))
 :pattern ( ($generated@@199 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(let (($generated@@220 (type $generated@@216)))
(= (type ($generated@@204 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@201 $generated@@220 $generated@@219))))
 :pattern ( ($generated@@204 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@203 (type $generated@@221))))
 (=> (= (type $generated@@224) $generated@@225) (= ($generated@@199 ($generated@@204 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@222 $generated@@223) $generated@@224)))
 :weight 0
))) (and (and (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@199 ($generated@@204 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@199 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@199 ($generated@@204 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@199 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or true (= ($generated@@199 ($generated@@204 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@199 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
)))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@200 $generated@@244 $generated@@245 $generated@@246 $generated@@247 $generated@@248)) ($generated@@201 $generated@@88 $generated@@4))
 :pattern ( ($generated@@200 $generated@@244 $generated@@245 $generated@@246 $generated@@247 $generated@@248))
))))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@73 (type $generated@@255))))
 (=> (and (and (and (and (and (and (= (type $generated@@249) $generated@@88) (= (type $generated@@250) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@251) ($generated@@72 $generated@@4))) (= (type $generated@@252) $generated@@88)) (= (type $generated@@253) $generated@@88)) (= (type $generated@@254) $generated@@88)) (= (type $generated@@255) ($generated@@72 $generated@@256))) (= ($generated@@0 ($generated@@199 ($generated@@200 $generated@@249 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@249)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@250 $generated@@254) $generated@@251))) (or (= $generated@@254 $generated@@252) (= $generated@@254 $generated@@253))))))
 :pattern ( ($generated@@199 ($generated@@200 $generated@@249 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@70)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@260) $generated@@70)) (= ($generated@@154 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@170) ($generated@@0 ($generated@@92 $generated@@259 $generated@@261))) ($generated@@185 $generated@@261 $generated@@260))
 :pattern ( ($generated@@92 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@154 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@70)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@265) $generated@@70)) (= ($generated@@154 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@170) ($generated@@0 ($generated@@92 $generated@@264 $generated@@266))) ($generated@@185 $generated@@266 $generated@@265))
 :pattern ( ($generated@@92 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@154 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 Int) ) (! (= ($generated@@267 $generated@@268) $generated@@268)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@70) (= (type $generated@@275) $generated@@70)) (= (type $generated@@276) $generated@@170)) (= (type $generated@@277) $generated@@170)) (= (type $generated@@278) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@278)) (= ($generated@@85 ($generated@@184 $generated@@276 $generated@@277) ($generated@@160 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@85 ($generated@@184 $generated@@276 $generated@@277) ($generated@@160 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@75)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@161) (= ($generated@@159 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@161) ($generated@@159 $generated@@282)) (exists (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (and (and (= (type $generated@@283) $generated@@170) (= (type $generated@@284) $generated@@170)) (= $generated@@282 ($generated@@184 $generated@@283 $generated@@284)))
 :no-pattern (type $generated@@283)
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
)))
 :pattern ( ($generated@@159 $generated@@282))
)))
(assert  (and (and (forall (($generated@@289 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@289)) 19)) (forall (($generated@@290 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@287 $generated@@290))
))) (forall (($generated@@291 T@T) ) (! (= (type ($generated@@285 $generated@@291)) ($generated@@287 $generated@@291))
 :pattern ( ($generated@@285 $generated@@291))
))))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@292)) 0)
 :pattern ( ($generated@@285 $generated@@292))
)))
(assert ($generated@@196 $generated@@60))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@170)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@70) (= (type $generated@@297) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@273 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@85 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@273 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@298) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@299) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@300) $generated@@170)) (= (type $generated@@301) $generated@@70)) ($generated@@143 $generated@@298 $generated@@299)) ($generated@@273 $generated@@300 $generated@@301 $generated@@298)) ($generated@@273 $generated@@300 $generated@@301 $generated@@299))
 :pattern ( ($generated@@143 $generated@@298 $generated@@299) ($generated@@273 $generated@@300 $generated@@301 $generated@@298))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@302) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@303) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@305) $generated@@70)) ($generated@@143 $generated@@302 $generated@@303)) ($generated@@85 $generated@@304 $generated@@305 $generated@@302)) ($generated@@85 $generated@@304 $generated@@305 $generated@@303))
 :pattern ( ($generated@@143 $generated@@302 $generated@@303) ($generated@@85 $generated@@304 $generated@@305 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@307) $generated@@88)) (=> (and (and ($generated@@152 $generated@@306) (and (not (= $generated@@307 $generated@@148)) (= ($generated@@153 $generated@@307) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@306 $generated@@307) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@306 $generated@@307) $generated@@151) $generated@@46 $generated@@306)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@306 $generated@@307) $generated@@151))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@87 $generated@@310 $generated@@2))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@90 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@87 $generated@@312 $generated@@2)) (and (= (= ($generated@@308 $generated@@311) 0) (= $generated@@311 ($generated@@309 $generated@@312))) (=> (not (= ($generated@@308 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@92 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 20)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@87 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@92 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@92 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 21)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@87 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@92 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@92 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@352) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@350 $generated@@351 $generated@@352)) (and ($generated@@143 $generated@@351 $generated@@352) (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@73 (type $generated@@354))))
 (=> (and (and (= (type $generated@@353) $generated@@88) (= (type $generated@@354) ($generated@@72 $generated@@355))) (not ($generated@@196 $generated@@354))) (= ($generated@@94 ($generated@@92 $generated@@351 $generated@@353) $generated@@354) ($generated@@94 ($generated@@92 $generated@@352 $generated@@353) $generated@@354))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@352 $generated@@353) $generated@@354))
))))
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@90 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@87 $generated@@357 $generated@@2)) (= ($generated@@176 $generated@@356) (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@357) (and (<= 0 ($generated ($generated@@92 $generated@@356 $generated@@358))) (<= ($generated ($generated@@92 $generated@@356 $generated@@358)) ($generated@@308 $generated@@356))))
 :pattern ( ($generated@@92 $generated@@356 $generated@@358))
)))))
 :pattern ( ($generated@@176 $generated@@356))
)))
(assert (forall (($generated@@360 T@T) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@170) ($generated@@185 $generated@@362 $generated@@147)) (and (= ($generated@@293 ($generated@@359 $generated@@88 $generated@@362)) $generated@@362) ($generated@@154 ($generated@@359 $generated@@88 $generated@@362) $generated@@147)))
 :pattern ( ($generated@@185 $generated@@362 $generated@@147))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@170) ($generated@@185 $generated@@363 $generated@@181)) (and (= ($generated@@293 ($generated@@359 $generated@@88 $generated@@363)) $generated@@363) ($generated@@154 ($generated@@359 $generated@@88 $generated@@363) $generated@@181)))
 :pattern ( ($generated@@185 $generated@@363 $generated@@181))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@88) (= ($generated@@154 $generated@@364 $generated@@181)  (and ($generated@@154 $generated@@364 $generated@@147) (not (= $generated@@364 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@364 $generated@@181))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@318 (type $generated@@365))))
(let (($generated@@367 ($generated@@317 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@316 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@315 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@92 ($generated@@314 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@314 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@318 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@87 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@318 (type $generated@@372))))
(let (($generated@@374 ($generated@@317 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@316 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@315 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@92 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@336 (type $generated@@376))))
(let (($generated@@378 ($generated@@335 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@334 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@333 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@92 ($generated@@332 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@332 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@336 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@87 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@336 (type $generated@@383))))
(let (($generated@@385 ($generated@@335 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@334 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@333 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@92 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@388) $generated@@70)) (= ($generated@@154 $generated@@387 ($generated@@175 $generated@@388)) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@387 $generated@@389)))) ($generated@@185 $generated@@389 $generated@@388))
 :pattern ( ($generated@@92 $generated@@387 $generated@@389))
))))
 :pattern ( ($generated@@154 $generated@@387 ($generated@@175 $generated@@388)))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@391) $generated@@70)) (= (type $generated@@392) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@390 ($generated@@257 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@170) ($generated@@0 ($generated@@92 $generated@@390 $generated@@393))) ($generated@@273 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@92 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@85 $generated@@390 ($generated@@257 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@395) $generated@@70)) (= (type $generated@@396) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@394 ($generated@@262 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@170) ($generated@@0 ($generated@@92 $generated@@394 $generated@@397))) ($generated@@273 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@92 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@85 $generated@@394 ($generated@@262 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(= ($generated ($generated@@92 ($generated@@309 $generated@@399) $generated@@398)) 0))
 :pattern ( (let (($generated@@399 (type $generated@@398)))
($generated@@92 ($generated@@309 $generated@@399) $generated@@398)))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@318 (type $generated@@403))))
(let (($generated@@405 ($generated@@317 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@87 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@316 $generated@@170 $generated@@170)) (= (type $generated@@407) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@92 ($generated@@314 $generated@@406) ($generated@@168 ($generated@@359 $generated@@161 $generated@@407)))) (= ($generated@@92 ($generated@@401 $generated@@406) ($generated@@168 ($generated@@359 $generated@@161 $generated@@407))) ($generated@@169 ($generated@@359 $generated@@161 $generated@@407))))))
 :pattern ( ($generated@@92 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@336 (type $generated@@411))))
(let (($generated@@413 ($generated@@335 (type $generated@@411))))
(= (type ($generated@@409 $generated@@411)) ($generated@@87 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@334 $generated@@170 $generated@@170)) (= (type $generated@@415) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@408 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@92 ($generated@@332 $generated@@414) ($generated@@168 ($generated@@359 $generated@@161 $generated@@415)))) (= ($generated@@92 ($generated@@409 $generated@@414) ($generated@@168 ($generated@@359 $generated@@161 $generated@@415))) ($generated@@169 ($generated@@359 $generated@@161 $generated@@415))))))
 :pattern ( ($generated@@92 ($generated@@408 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@317 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@316 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@92 ($generated@@369 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@92 ($generated@@314 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@92 ($generated@@401 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@92 ($generated@@314 $generated@@416) $generated@@420))
 :pattern ( ($generated@@92 ($generated@@401 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@92 ($generated@@369 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(let (($generated@@424 ($generated@@335 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@334 $generated@@424 $generated@@423)) (= ($generated@@0 ($generated@@92 ($generated@@380 $generated@@421) $generated@@422)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) (and ($generated@@0 ($generated@@92 ($generated@@332 $generated@@421) $generated@@425)) (= $generated@@422 ($generated@@92 ($generated@@409 $generated@@421) $generated@@425))))
 :pattern ( ($generated@@92 ($generated@@332 $generated@@421) $generated@@425))
 :pattern ( ($generated@@92 ($generated@@409 $generated@@421) $generated@@425))
))))))
 :pattern ( ($generated@@92 ($generated@@380 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@70)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@316 $generated@@170 $generated@@170)) (= (type $generated@@430) $generated@@70)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@314 $generated@@429) $generated@@433))) (and ($generated@@273 ($generated@@92 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@273 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@92 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@92 ($generated@@314 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@85 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@70)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@334 $generated@@170 $generated@@170)) (= (type $generated@@438) $generated@@70)) (= (type $generated@@439) $generated@@70)) (= (type $generated@@440) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@332 $generated@@437) $generated@@441))) (and ($generated@@273 ($generated@@92 ($generated@@409 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@273 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@92 ($generated@@409 $generated@@437) $generated@@441))
 :pattern ( ($generated@@92 ($generated@@332 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@85 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@442) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@443) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@444) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@442 $generated@@444))) (and ($generated@@143 $generated@@442 $generated@@443) ($generated@@143 $generated@@443 $generated@@444))) ($generated@@143 $generated@@442 $generated@@444))
 :pattern ( ($generated@@143 $generated@@442 $generated@@443) ($generated@@143 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@T) ) (! (= (type ($generated@@445 $generated@@446)) ($generated@@87 $generated@@446 $generated@@4))
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@336 (type $generated@@447))))
(let (($generated@@449 ($generated@@335 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@334 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@333 $generated@@449 $generated@@448)) (= ($generated@@332 $generated@@447) ($generated@@445 $generated@@449))))))
 :pattern ( ($generated@@332 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@336 (type $generated@@450))))
(let (($generated@@452 ($generated@@335 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@334 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@333 $generated@@452 $generated@@451)) (= ($generated@@380 $generated@@450) ($generated@@445 $generated@@451))))))
 :pattern ( ($generated@@380 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@336 (type $generated@@453))))
(let (($generated@@455 ($generated@@335 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@334 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@333 $generated@@455 $generated@@454)) (= ($generated@@408 $generated@@453) ($generated@@445 $generated@@170))))))
 :pattern ( ($generated@@408 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@318 (type $generated@@456))))
(let (($generated@@458 ($generated@@317 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@316 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@315 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@170) (= (type $generated@@460) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@400 $generated@@456) ($generated@@293 ($generated@@184 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@400 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@336 (type $generated@@461))))
(let (($generated@@463 ($generated@@335 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@334 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@333 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@170) (= (type $generated@@465) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@408 $generated@@461) ($generated@@293 ($generated@@184 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@408 $generated@@461))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@76)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@T) ) (!  (=> (and (= (type $generated@@468) $generated@@76) (= (type $generated@@469) $generated@@74)) (and (= ($generated@@466 ($generated@@192 $generated@@470 $generated@@468 $generated@@469)) $generated@@468) (= ($generated@@83 ($generated@@192 $generated@@470 $generated@@468 $generated@@469)) $generated@@469)))
 :pattern ( ($generated@@192 $generated@@470 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@170) ($generated@@185 $generated@@471 $generated@@46)) (and (= ($generated@@293 ($generated@@359 $generated@@2 $generated@@471)) $generated@@471) ($generated@@154 ($generated@@359 $generated@@2 $generated@@471) $generated@@46)))
 :pattern ( ($generated@@185 $generated@@471 $generated@@46))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@170) ($generated@@185 $generated@@472 $generated@@47)) (and (= ($generated@@293 ($generated@@359 $generated@@3 $generated@@472)) $generated@@472) ($generated@@154 ($generated@@359 $generated@@3 $generated@@472) $generated@@47)))
 :pattern ( ($generated@@185 $generated@@472 $generated@@47))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@170) ($generated@@185 $generated@@473 $generated@@44)) (and (= ($generated@@293 ($generated@@359 $generated@@4 $generated@@473)) $generated@@473) ($generated@@154 ($generated@@359 $generated@@4 $generated@@473) $generated@@44)))
 :pattern ( ($generated@@185 $generated@@473 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@474) 22))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@170) ($generated@@185 $generated@@475 $generated@@45)) (and (= ($generated@@293 ($generated@@359 $generated@@474 $generated@@475)) $generated@@475) ($generated@@154 ($generated@@359 $generated@@474 $generated@@475) $generated@@45)))
 :pattern ( ($generated@@185 $generated@@475 $generated@@45))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@70) (= ($generated@@185 ($generated@@293 $generated@@476) $generated@@477) ($generated@@154 $generated@@476 $generated@@477)))
 :pattern ( ($generated@@185 ($generated@@293 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@90 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@87 $generated@@479 $generated@@2)) (<= 0 ($generated@@308 $generated@@478))))
 :pattern ( ($generated@@308 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@288 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@287 $generated@@481)) (<= 0 ($generated@@286 $generated@@480))))
 :pattern ( ($generated@@286 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@482 ($generated@@426 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@426 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@70)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@70) (= (type $generated@@489) $generated@@70)) (= ($generated@@486 ($generated@@426 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@426 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@81 ($generated@@426 $generated@@490 $generated@@491)) $generated@@58))
 :pattern ( ($generated@@426 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@492 ($generated@@434 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@434 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@70) (= (type $generated@@499) $generated@@70)) (= ($generated@@496 ($generated@@434 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@434 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@70) (= (type $generated@@501) $generated@@70)) (= ($generated@@81 ($generated@@434 $generated@@500 $generated@@501)) $generated@@59))
 :pattern ( ($generated@@434 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@170) (= (type $generated@@503) $generated@@170)) (= ($generated@@279 ($generated@@184 $generated@@502 $generated@@503)) $generated@@62))
 :pattern ( ($generated@@184 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= ($generated@@504 ($generated@@160 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@160 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@70) (= (type $generated@@511) $generated@@70)) (= ($generated@@508 ($generated@@160 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@160 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@170) (= (type $generated@@513) $generated@@170)) (= ($generated@@168 ($generated@@184 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@184 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@170) (= (type $generated@@515) $generated@@170)) (= ($generated@@169 ($generated@@184 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@184 $generated@@514 $generated@@515))
)))
(assert  (and (forall (($generated@@518 T@U) ) (! (= (type ($generated@@516 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@516 $generated@@518))
)) (forall (($generated@@519 T@U) ($generated@@520 Int) ) (! (let (($generated@@521 ($generated@@288 (type $generated@@519))))
(= (type ($generated@@517 $generated@@519 $generated@@520)) $generated@@521))
 :pattern ( ($generated@@517 $generated@@519 $generated@@520))
))))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@287 $generated@@170)) (= (type $generated@@523) $generated@@70)) (= (type $generated@@524) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@522 ($generated@@516 $generated@@523) $generated@@524) (forall (($generated@@525 Int) ) (!  (=> (and (<= 0 $generated@@525) (< $generated@@525 ($generated@@286 $generated@@522))) ($generated@@273 ($generated@@517 $generated@@522 $generated@@525) $generated@@523 $generated@@524))
 :pattern ( ($generated@@517 $generated@@522 $generated@@525))
))))
 :pattern ( ($generated@@85 $generated@@522 ($generated@@516 $generated@@523) $generated@@524))
)))
(assert (forall (($generated@@527 Int) ) (! (= ($generated@@526 ($generated@@86 $generated@@527)) $generated@@527)
 :pattern ( ($generated@@86 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@528 ($generated@@257 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@257 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@81 ($generated@@257 $generated@@531)) $generated@@54))
 :pattern ( ($generated@@257 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@532 ($generated@@262 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@262 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@81 ($generated@@262 $generated@@535)) $generated@@55))
 :pattern ( ($generated@@262 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@536 ($generated@@175 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@175 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@539)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@70)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@70) (= ($generated@@540 ($generated@@516 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@516 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@70) (= ($generated@@81 ($generated@@516 $generated@@543)) $generated@@57))
 :pattern ( ($generated@@516 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@359 $generated@@545 ($generated@@293 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@293 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@316 $generated@@170 $generated@@170)) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) (= ($generated@@154 $generated@@546 ($generated@@426 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@314 $generated@@546) $generated@@549))) (and ($generated@@185 ($generated@@92 ($generated@@401 $generated@@546) $generated@@549) $generated@@548) ($generated@@185 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@92 ($generated@@401 $generated@@546) $generated@@549))
 :pattern ( ($generated@@92 ($generated@@314 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@154 $generated@@546 ($generated@@426 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@334 $generated@@170 $generated@@170)) (= (type $generated@@551) $generated@@70)) (= (type $generated@@552) $generated@@70)) (= ($generated@@154 $generated@@550 ($generated@@434 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@332 $generated@@550) $generated@@553))) (and ($generated@@185 ($generated@@92 ($generated@@409 $generated@@550) $generated@@553) $generated@@552) ($generated@@185 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@92 ($generated@@409 $generated@@550) $generated@@553))
 :pattern ( ($generated@@92 ($generated@@332 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@154 $generated@@550 ($generated@@434 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@170) (= (type $generated@@557) $generated@@170)) (< ($generated@@554 $generated@@556) ($generated@@555 ($generated@@184 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@184 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@170) (= (type $generated@@559) $generated@@170)) (< ($generated@@554 $generated@@559) ($generated@@555 ($generated@@184 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@184 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@170) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) $generated@@70)) ($generated@@185 $generated@@560 ($generated@@426 $generated@@561 $generated@@562))) (and (= ($generated@@293 ($generated@@359 ($generated@@316 $generated@@170 $generated@@170) $generated@@560)) $generated@@560) ($generated@@154 ($generated@@359 ($generated@@316 $generated@@170 $generated@@170) $generated@@560) ($generated@@426 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@185 $generated@@560 ($generated@@426 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@170) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) $generated@@70)) ($generated@@185 $generated@@563 ($generated@@434 $generated@@564 $generated@@565))) (and (= ($generated@@293 ($generated@@359 ($generated@@334 $generated@@170 $generated@@170) $generated@@563)) $generated@@563) ($generated@@154 ($generated@@359 ($generated@@334 $generated@@170 $generated@@170) $generated@@563) ($generated@@434 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@185 $generated@@563 ($generated@@434 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@70) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) $generated@@170)) ($generated@@185 $generated@@568 ($generated@@160 $generated@@566 $generated@@567))) (and (= ($generated@@293 ($generated@@359 $generated@@161 $generated@@568)) $generated@@568) ($generated@@154 ($generated@@359 $generated@@161 $generated@@568) ($generated@@160 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@185 $generated@@568 ($generated@@160 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@569)))
 (not ($generated@@0 ($generated@@92 ($generated@@445 $generated@@570) $generated@@569))))
 :pattern ( (let (($generated@@570 (type $generated@@569)))
($generated@@92 ($generated@@445 $generated@@570) $generated@@569)))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@77)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@70) (= (type $generated@@574) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@573 $generated@@574)) $generated@@63) (= ($generated@@571 ($generated@@160 $generated@@573 $generated@@574)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@161) (= ($generated@@554 ($generated@@293 $generated@@575)) ($generated@@555 $generated@@575)))
 :pattern ( ($generated@@554 ($generated@@293 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@170) ($generated@@185 $generated@@576 ($generated@@86 0))) (and (= ($generated@@293 ($generated@@359 $generated@@2 $generated@@576)) $generated@@576) ($generated@@154 ($generated@@359 ($generated@@87 $generated@@170 $generated@@4) $generated@@576) ($generated@@86 0))))
 :pattern ( ($generated@@185 $generated@@576 ($generated@@86 0)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@185 $generated@@577 ($generated@@257 $generated@@578))) (and (= ($generated@@293 ($generated@@359 ($generated@@87 $generated@@170 $generated@@4) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@359 ($generated@@87 $generated@@170 $generated@@4) $generated@@577) ($generated@@257 $generated@@578))))
 :pattern ( ($generated@@185 $generated@@577 ($generated@@257 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@185 $generated@@579 ($generated@@262 $generated@@580))) (and (= ($generated@@293 ($generated@@359 ($generated@@87 $generated@@170 $generated@@4) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@359 ($generated@@87 $generated@@170 $generated@@4) $generated@@579) ($generated@@262 $generated@@580))))
 :pattern ( ($generated@@185 $generated@@579 ($generated@@262 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@170) (= (type $generated@@582) $generated@@70)) ($generated@@185 $generated@@581 ($generated@@175 $generated@@582))) (and (= ($generated@@293 ($generated@@359 ($generated@@87 $generated@@170 $generated@@2) $generated@@581)) $generated@@581) ($generated@@154 ($generated@@359 ($generated@@87 $generated@@170 $generated@@2) $generated@@581) ($generated@@175 $generated@@582))))
 :pattern ( ($generated@@185 $generated@@581 ($generated@@175 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@170) (= (type $generated@@584) $generated@@70)) ($generated@@185 $generated@@583 ($generated@@516 $generated@@584))) (and (= ($generated@@293 ($generated@@359 ($generated@@287 $generated@@170) $generated@@583)) $generated@@583) ($generated@@154 ($generated@@359 ($generated@@287 $generated@@170) $generated@@583) ($generated@@516 $generated@@584))))
 :pattern ( ($generated@@185 $generated@@583 ($generated@@516 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@588)))
 (=> (and (and (and (= (type $generated@@585) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@586) $generated@@88)) (= (type $generated@@587) ($generated@@72 $generated@@589))) ($generated@@152 ($generated@@93 $generated@@585 $generated@@586 ($generated@@95 ($generated@@92 $generated@@585 $generated@@586) $generated@@587 $generated@@588)))) ($generated@@143 $generated@@585 ($generated@@93 $generated@@585 $generated@@586 ($generated@@95 ($generated@@92 $generated@@585 $generated@@586) $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@93 $generated@@585 $generated@@586 ($generated@@95 ($generated@@92 $generated@@585 $generated@@586) $generated@@587 $generated@@588)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@571 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@181) $generated@@66))
(assert (= ($generated@@571 $generated@@181) $generated@@68))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@591) $generated@@70)) (= (type $generated@@592) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@590 ($generated@@175 $generated@@591) $generated@@592) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@590 $generated@@593)))) ($generated@@273 $generated@@593 $generated@@591 $generated@@592))
 :pattern ( ($generated@@92 $generated@@590 $generated@@593))
))))
 :pattern ( ($generated@@85 $generated@@590 ($generated@@175 $generated@@591) $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@161) (= (type $generated@@595) $generated@@70)) (= (type $generated@@596) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@596) (and ($generated@@159 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@70) ($generated@@85 $generated@@594 ($generated@@160 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@85 $generated@@594 ($generated@@160 $generated@@595 $generated@@597) $generated@@596))
))))) ($generated@@273 ($generated@@168 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@273 ($generated@@168 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@161) (= (type $generated@@599) $generated@@70)) (= (type $generated@@600) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@600) (and ($generated@@159 $generated@@598) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@70) ($generated@@85 $generated@@598 ($generated@@160 $generated@@601 $generated@@599) $generated@@600))
 :pattern ( ($generated@@85 $generated@@598 ($generated@@160 $generated@@601 $generated@@599) $generated@@600))
))))) ($generated@@273 ($generated@@169 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@273 ($generated@@169 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@170) (= (type $generated@@603) $generated@@170)) (= ($generated@@184 ($generated@@269 $generated@@602) ($generated@@269 $generated@@603)) ($generated@@269 ($generated@@184 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@184 ($generated@@269 $generated@@602) ($generated@@269 $generated@@603)))
)))
(assert (forall (($generated@@604 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@267 $generated@@604))) ($generated@@269 ($generated@@293 ($generated@@8 $generated@@604))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@267 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ) (! (= ($generated@@293 ($generated@@269 $generated@@605)) ($generated@@269 ($generated@@293 $generated@@605)))
 :pattern ( ($generated@@293 ($generated@@269 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 ($generated@@288 (type $generated@@606))))
 (=> (and (= (type $generated@@606) ($generated@@287 $generated@@607)) (= ($generated@@286 $generated@@606) 0)) (= $generated@@606 ($generated@@285 $generated@@607))))
 :pattern ( ($generated@@286 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (! (let (($generated@@611 (type $generated@@609)))
 (=> (and (and (= (type $generated@@608) ($generated@@87 $generated@@611 $generated@@2)) (= (type $generated@@610) $generated@@2)) (<= 0 ($generated $generated@@610))) (= ($generated@@308 ($generated@@93 $generated@@608 $generated@@609 $generated@@610)) (+ (- ($generated@@308 $generated@@608) ($generated ($generated@@92 $generated@@608 $generated@@609))) ($generated $generated@@610)))))
 :pattern ( ($generated@@308 ($generated@@93 $generated@@608 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@613) $generated@@2)) ($generated@@85 $generated@@613 $generated@@46 $generated@@612))
 :pattern ( ($generated@@85 $generated@@613 $generated@@46 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@615) $generated@@3)) ($generated@@85 $generated@@615 $generated@@47 $generated@@614))
 :pattern ( ($generated@@85 $generated@@615 $generated@@47 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@617) $generated@@4)) ($generated@@85 $generated@@617 $generated@@44 $generated@@616))
 :pattern ( ($generated@@85 $generated@@617 $generated@@44 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@619) $generated@@474)) ($generated@@85 $generated@@619 $generated@@45 $generated@@618))
 :pattern ( ($generated@@85 $generated@@619 $generated@@45 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@621) $generated@@170)) ($generated@@85 $generated@@621 $generated@@48 $generated@@620))
 :pattern ( ($generated@@85 $generated@@621 $generated@@48 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@287 $generated@@170)) (= (type $generated@@623) $generated@@70)) (= ($generated@@154 $generated@@622 ($generated@@516 $generated@@623)) (forall (($generated@@624 Int) ) (!  (=> (and (<= 0 $generated@@624) (< $generated@@624 ($generated@@286 $generated@@622))) ($generated@@185 ($generated@@517 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@517 $generated@@622 $generated@@624))
))))
 :pattern ( ($generated@@154 $generated@@622 ($generated@@516 $generated@@623)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 Int) ) (!  (=> (= (type $generated@@626) ($generated@@287 $generated@@170)) (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@286 $generated@@626))) (< ($generated@@555 ($generated@@359 $generated@@161 ($generated@@517 $generated@@626 $generated@@627))) ($generated@@625 $generated@@626))))
 :pattern ( ($generated@@555 ($generated@@359 $generated@@161 ($generated@@517 $generated@@626 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@316 $generated@@170 $generated@@170)) (= (type $generated@@629) $generated@@70)) (= (type $generated@@630) $generated@@70)) ($generated@@154 $generated@@628 ($generated@@426 $generated@@629 $generated@@630))) (and (and ($generated@@154 ($generated@@314 $generated@@628) ($generated@@257 $generated@@629)) ($generated@@154 ($generated@@369 $generated@@628) ($generated@@257 $generated@@630))) ($generated@@154 ($generated@@400 $generated@@628) ($generated@@257 ($generated@@160 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@154 $generated@@628 ($generated@@426 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@334 $generated@@170 $generated@@170)) (= (type $generated@@632) $generated@@70)) (= (type $generated@@633) $generated@@70)) ($generated@@154 $generated@@631 ($generated@@434 $generated@@632 $generated@@633))) (and (and ($generated@@154 ($generated@@332 $generated@@631) ($generated@@262 $generated@@632)) ($generated@@154 ($generated@@380 $generated@@631) ($generated@@262 $generated@@633))) ($generated@@154 ($generated@@408 $generated@@631) ($generated@@262 ($generated@@160 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@154 $generated@@631 ($generated@@434 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@2) ($generated@@154 $generated@@634 $generated@@46))
 :pattern ( ($generated@@154 $generated@@634 $generated@@46))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@3) ($generated@@154 $generated@@635 $generated@@47))
 :pattern ( ($generated@@154 $generated@@635 $generated@@47))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@4) ($generated@@154 $generated@@636 $generated@@44))
 :pattern ( ($generated@@154 $generated@@636 $generated@@44))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@474) ($generated@@154 $generated@@637 $generated@@45))
 :pattern ( ($generated@@154 $generated@@637 $generated@@45))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@170) ($generated@@154 $generated@@638 $generated@@48))
 :pattern ( ($generated@@154 $generated@@638 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 (T@U) Bool)
(declare-fun $generated@@646 () Int)
(assert  (and (and (and (and (= (type $generated@@639) ($generated@@201 $generated@@88 $generated@@4)) (= (type $generated@@640) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@641) $generated@@88)) (= (type $generated@@642) $generated@@88)) (= (type $generated@@644) ($generated@@87 $generated@@88 $generated@@89))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@647  (=> (= $generated@@639 ($generated@@200 $generated@@148 $generated@@640 $generated@@60 $generated@@641 $generated@@642)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@642 $generated@@148))) (=> (not (= $generated@@642 $generated@@148)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@199 $generated@@639 $generated@@642 $generated@@151))) (=> ($generated@@0 ($generated@@199 $generated@@639 $generated@@642 $generated@@151)) (=> (and (and (= $generated@@643 ($generated@@267 1)) (= $generated@@644 ($generated@@93 $generated@@640 $generated@@642 ($generated@@95 ($generated@@92 $generated@@640 $generated@@642) $generated@@151 ($generated@@8 $generated@@643))))) (and ($generated@@152 $generated@@644) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@0 ($generated@@199 $generated@@639 $generated@@641 $generated@@151))))))))))
(let (($generated@@648  (=> (and (and (and ($generated@@152 $generated@@640) ($generated@@645 $generated@@640)) (and (not (= $generated@@641 $generated@@148)) (and ($generated@@154 $generated@@641 $generated@@181) ($generated@@85 $generated@@641 $generated@@181 $generated@@640)))) (and (and ($generated@@154 $generated@@642 $generated@@181) ($generated@@85 $generated@@642 $generated@@181 $generated@@640)) (and (= 1 $generated@@646) (= (ControlFlow 0 5) 2)))) $generated@@647)))
$generated@@648)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@T T@U T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@213 (T@U T@U T@U) Bool)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@225 (T@T) T@U)
(declare-fun $generated@@226 (T@U) Int)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Int)
(declare-fun $generated@@249 (T@T) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@290 (T@U T@U) Bool)
(declare-fun $generated@@299 (T@T T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@366 (T@U T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@T) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@414 () T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 (T@U Int) T@U)
(declare-fun $generated@@466 (T@U) Int)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@511 (T@U T@U T@U) T@U)
(declare-fun $generated@@512 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@513 (T@T T@T) T@T)
(declare-fun $generated@@514 (T@T) T@T)
(declare-fun $generated@@515 (T@T) T@T)
(declare-fun $generated@@516 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@620 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert (= (type $generated@@181) $generated@@70))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@182) $generated@@88) (= (type $generated@@183) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@182 $generated@@181 $generated@@183) ($generated@@85 $generated@@182 $generated@@147 $generated@@183)))
 :pattern ( ($generated@@85 $generated@@182 $generated@@181 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@186 $generated@@187)) $generated@@161)
 :pattern ( ($generated@@184 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@70) (= (type $generated@@189) $generated@@70)) (= (type $generated@@190) $generated@@170)) (= (type $generated@@191) $generated@@170)) (= ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189))  (and ($generated@@185 $generated@@190 $generated@@188) ($generated@@185 $generated@@191 $generated@@189))))
 :pattern ( ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@72 $generated@@193))
 :pattern ( ($generated@@192 $generated@@193 $generated@@194 $generated@@195))
)))
(assert (= ($generated@@192 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@196 $generated@@151)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@161) (= (type $generated@@198) $generated@@161)) (= ($generated@@167 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@167 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@70)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@202) $generated@@70)) (= ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)) (forall (($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@170) ($generated@@0 ($generated@@92 $generated@@201 $generated@@203))) ($generated@@185 $generated@@203 $generated@@202))
 :pattern ( ($generated@@92 $generated@@201 $generated@@203))
))))
 :pattern ( ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@70)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@207) $generated@@70)) (= ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@170) ($generated@@0 ($generated@@92 $generated@@206 $generated@@208))) ($generated@@185 $generated@@208 $generated@@207))
 :pattern ( ($generated@@92 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(= (type ($generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@209 $generated@@212) $generated@@212)
 :pattern ( ($generated@@209 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@214) $generated@@70) (= (type $generated@@215) $generated@@70)) (= (type $generated@@216) $generated@@170)) (= (type $generated@@217) $generated@@170)) (= (type $generated@@218) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@218)) (= ($generated@@85 ($generated@@184 $generated@@216 $generated@@217) ($generated@@160 $generated@@214 $generated@@215) $generated@@218)  (and ($generated@@213 $generated@@216 $generated@@214 $generated@@218) ($generated@@213 $generated@@217 $generated@@215 $generated@@218))))
 :pattern ( ($generated@@85 ($generated@@184 $generated@@216 $generated@@217) ($generated@@160 $generated@@214 $generated@@215) $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@219 $generated@@220)) $generated@@75)
 :pattern ( ($generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@161) (= ($generated@@159 $generated@@221) (= ($generated@@219 $generated@@221) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@161) ($generated@@159 $generated@@222)) (exists (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (and (and (= (type $generated@@223) $generated@@170) (= (type $generated@@224) $generated@@170)) (= $generated@@222 ($generated@@184 $generated@@223 $generated@@224)))
 :no-pattern (type $generated@@223)
 :no-pattern (type $generated@@224)
 :no-pattern ($generated $generated@@223)
 :no-pattern ($generated@@0 $generated@@223)
 :no-pattern ($generated $generated@@224)
 :no-pattern ($generated@@0 $generated@@224)
)))
 :pattern ( ($generated@@159 $generated@@222))
)))
(assert  (and (and (forall (($generated@@229 T@T) ) (= ($generated@@1 ($generated@@227 $generated@@229)) 18)) (forall (($generated@@230 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@227 $generated@@230))
))) (forall (($generated@@231 T@T) ) (! (= (type ($generated@@225 $generated@@231)) ($generated@@227 $generated@@231))
 :pattern ( ($generated@@225 $generated@@231))
))))
(assert (forall (($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@225 $generated@@232)) 0)
 :pattern ( ($generated@@225 $generated@@232))
)))
(assert ($generated@@196 $generated@@60))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@170)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@70) (= (type $generated@@237) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237) ($generated@@85 $generated@@235 $generated@@236 $generated@@237)))
 :pattern ( ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@238) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@240) $generated@@170)) (= (type $generated@@241) $generated@@70)) ($generated@@143 $generated@@238 $generated@@239)) ($generated@@213 $generated@@240 $generated@@241 $generated@@238)) ($generated@@213 $generated@@240 $generated@@241 $generated@@239))
 :pattern ( ($generated@@143 $generated@@238 $generated@@239) ($generated@@213 $generated@@240 $generated@@241 $generated@@238))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@242) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@243) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@245) $generated@@70)) ($generated@@143 $generated@@242 $generated@@243)) ($generated@@85 $generated@@244 $generated@@245 $generated@@242)) ($generated@@85 $generated@@244 $generated@@245 $generated@@243))
 :pattern ( ($generated@@143 $generated@@242 $generated@@243) ($generated@@85 $generated@@244 $generated@@245 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@247) $generated@@88)) (=> (and (and ($generated@@152 $generated@@246) (and (not (= $generated@@247 $generated@@148)) (= ($generated@@153 $generated@@247) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@151) $generated@@46 $generated@@246)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@151))
)))
(assert (forall (($generated@@250 T@T) ) (! (= (type ($generated@@249 $generated@@250)) ($generated@@87 $generated@@250 $generated@@2))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@90 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@87 $generated@@252 $generated@@2)) (and (= (= ($generated@@248 $generated@@251) 0) (= $generated@@251 ($generated@@249 $generated@@252))) (=> (not (= ($generated@@248 $generated@@251) 0)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) (< 0 ($generated ($generated@@92 $generated@@251 $generated@@253))))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 19)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@87 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@92 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@92 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 20)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@87 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@92 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@92 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@291) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@292) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@290 $generated@@291 $generated@@292)) (and ($generated@@143 $generated@@291 $generated@@292) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@73 (type $generated@@294))))
 (=> (and (and (= (type $generated@@293) $generated@@88) (= (type $generated@@294) ($generated@@72 $generated@@295))) (not ($generated@@196 $generated@@294))) (= ($generated@@94 ($generated@@92 $generated@@291 $generated@@293) $generated@@294) ($generated@@94 ($generated@@92 $generated@@292 $generated@@293) $generated@@294))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@292 $generated@@293) $generated@@294))
))))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@90 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@87 $generated@@297 $generated@@2)) (= ($generated@@176 $generated@@296) (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@297) (and (<= 0 ($generated ($generated@@92 $generated@@296 $generated@@298))) (<= ($generated ($generated@@92 $generated@@296 $generated@@298)) ($generated@@248 $generated@@296))))
 :pattern ( ($generated@@92 $generated@@296 $generated@@298))
)))))
 :pattern ( ($generated@@176 $generated@@296))
)))
(assert (forall (($generated@@300 T@T) ($generated@@301 T@U) ) (! (= (type ($generated@@299 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@299 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@170) ($generated@@185 $generated@@302 $generated@@147)) (and (= ($generated@@233 ($generated@@299 $generated@@88 $generated@@302)) $generated@@302) ($generated@@154 ($generated@@299 $generated@@88 $generated@@302) $generated@@147)))
 :pattern ( ($generated@@185 $generated@@302 $generated@@147))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@170) ($generated@@185 $generated@@303 $generated@@181)) (and (= ($generated@@233 ($generated@@299 $generated@@88 $generated@@303)) $generated@@303) ($generated@@154 ($generated@@299 $generated@@88 $generated@@303) $generated@@181)))
 :pattern ( ($generated@@185 $generated@@303 $generated@@181))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@88) (= ($generated@@154 $generated@@304 $generated@@181)  (and ($generated@@154 $generated@@304 $generated@@147) (not (= $generated@@304 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@304 $generated@@181))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@258 (type $generated@@305))))
(let (($generated@@307 ($generated@@257 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@256 $generated@@307 $generated@@306)) (or (= $generated@@305 ($generated@@255 $generated@@307 $generated@@306)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@305) $generated@@308)))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@254 $generated@@305))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@258 (type $generated@@310))))
(= (type ($generated@@309 $generated@@310)) ($generated@@87 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@258 (type $generated@@312))))
(let (($generated@@314 ($generated@@257 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@256 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@255 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@313) ($generated@@0 ($generated@@92 ($generated@@309 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@276 (type $generated@@316))))
(let (($generated@@318 ($generated@@275 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@274 $generated@@318 $generated@@317)) (or (= $generated@@316 ($generated@@273 $generated@@318 $generated@@317)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@316) $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@272 $generated@@316))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@276 (type $generated@@321))))
(= (type ($generated@@320 $generated@@321)) ($generated@@87 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@276 (type $generated@@323))))
(let (($generated@@325 ($generated@@275 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@274 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@273 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@324) ($generated@@0 ($generated@@92 ($generated@@320 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@328) $generated@@70)) (= ($generated@@154 $generated@@327 ($generated@@175 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@327 $generated@@329)))) ($generated@@185 $generated@@329 $generated@@328))
 :pattern ( ($generated@@92 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@154 $generated@@327 ($generated@@175 $generated@@328)))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (= (type $generated@@330) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@331) $generated@@70)) (= (type $generated@@332) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@330 ($generated@@199 $generated@@331) $generated@@332) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@170) ($generated@@0 ($generated@@92 $generated@@330 $generated@@333))) ($generated@@213 $generated@@333 $generated@@331 $generated@@332))
 :pattern ( ($generated@@92 $generated@@330 $generated@@333))
))))
 :pattern ( ($generated@@85 $generated@@330 ($generated@@199 $generated@@331) $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@335) $generated@@70)) (= (type $generated@@336) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@334 ($generated@@204 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@170) ($generated@@0 ($generated@@92 $generated@@334 $generated@@337))) ($generated@@213 $generated@@337 $generated@@335 $generated@@336))
 :pattern ( ($generated@@92 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@85 $generated@@334 ($generated@@204 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
(= ($generated ($generated@@92 ($generated@@249 $generated@@339) $generated@@338)) 0))
 :pattern ( (let (($generated@@339 (type $generated@@338)))
($generated@@92 ($generated@@249 $generated@@339) $generated@@338)))
)))
(assert  (and (forall (($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@342)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@340 $generated@@342))
)) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@258 (type $generated@@343))))
(let (($generated@@345 ($generated@@257 (type $generated@@343))))
(= (type ($generated@@341 $generated@@343)) ($generated@@87 $generated@@345 $generated@@344))))
 :pattern ( ($generated@@341 $generated@@343))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@347) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@340 $generated@@346) $generated@@347))  (and ($generated@@0 ($generated@@92 ($generated@@254 $generated@@346) ($generated@@168 ($generated@@299 $generated@@161 $generated@@347)))) (= ($generated@@92 ($generated@@341 $generated@@346) ($generated@@168 ($generated@@299 $generated@@161 $generated@@347))) ($generated@@169 ($generated@@299 $generated@@161 $generated@@347))))))
 :pattern ( ($generated@@92 ($generated@@340 $generated@@346) $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@276 (type $generated@@351))))
(let (($generated@@353 ($generated@@275 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351)) ($generated@@87 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@355) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@348 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@92 ($generated@@272 $generated@@354) ($generated@@168 ($generated@@299 $generated@@161 $generated@@355)))) (= ($generated@@92 ($generated@@349 $generated@@354) ($generated@@168 ($generated@@299 $generated@@161 $generated@@355))) ($generated@@169 ($generated@@299 $generated@@161 $generated@@355))))))
 :pattern ( ($generated@@92 ($generated@@348 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(let (($generated@@359 ($generated@@257 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@256 $generated@@359 $generated@@358)) (= ($generated@@0 ($generated@@92 ($generated@@309 $generated@@356) $generated@@357)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) (and ($generated@@0 ($generated@@92 ($generated@@254 $generated@@356) $generated@@360)) (= $generated@@357 ($generated@@92 ($generated@@341 $generated@@356) $generated@@360))))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@356) $generated@@360))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@356) $generated@@360))
))))))
 :pattern ( ($generated@@92 ($generated@@309 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(let (($generated@@364 ($generated@@275 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@274 $generated@@364 $generated@@363)) (= ($generated@@0 ($generated@@92 ($generated@@320 $generated@@361) $generated@@362)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) (and ($generated@@0 ($generated@@92 ($generated@@272 $generated@@361) $generated@@365)) (= $generated@@362 ($generated@@92 ($generated@@349 $generated@@361) $generated@@365))))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@361) $generated@@365))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@361) $generated@@365))
))))))
 :pattern ( ($generated@@92 ($generated@@320 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@367 $generated@@368)) $generated@@70)
 :pattern ( ($generated@@366 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (and (= (type $generated@@369) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@370) $generated@@70)) (= (type $generated@@371) $generated@@70)) (= (type $generated@@372) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@369) $generated@@373))) (and ($generated@@213 ($generated@@92 ($generated@@341 $generated@@369) $generated@@373) $generated@@371 $generated@@372) ($generated@@213 $generated@@373 $generated@@370 $generated@@372)))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@369) $generated@@373))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@369) $generated@@373))
))))
 :pattern ( ($generated@@85 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@70)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@377) $generated@@381))) (and ($generated@@213 ($generated@@92 ($generated@@349 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@213 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@377) $generated@@381))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@85 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@382) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@383) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@384) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@382 $generated@@384))) (and ($generated@@143 $generated@@382 $generated@@383) ($generated@@143 $generated@@383 $generated@@384))) ($generated@@143 $generated@@382 $generated@@384))
 :pattern ( ($generated@@143 $generated@@382 $generated@@383) ($generated@@143 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@T) ) (! (= (type ($generated@@385 $generated@@386)) ($generated@@87 $generated@@386 $generated@@4))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@276 (type $generated@@387))))
(let (($generated@@389 ($generated@@275 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@274 $generated@@389 $generated@@388)) (= (= $generated@@387 ($generated@@273 $generated@@389 $generated@@388)) (= ($generated@@272 $generated@@387) ($generated@@385 $generated@@389))))))
 :pattern ( ($generated@@272 $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@276 (type $generated@@390))))
(let (($generated@@392 ($generated@@275 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@274 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@273 $generated@@392 $generated@@391)) (= ($generated@@320 $generated@@390) ($generated@@385 $generated@@391))))))
 :pattern ( ($generated@@320 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@276 (type $generated@@393))))
(let (($generated@@395 ($generated@@275 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@274 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@273 $generated@@395 $generated@@394)) (= ($generated@@348 $generated@@393) ($generated@@385 $generated@@170))))))
 :pattern ( ($generated@@348 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@258 (type $generated@@396))))
(let (($generated@@398 ($generated@@257 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@256 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@255 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (and (and (= (type $generated@@399) $generated@@170) (= (type $generated@@400) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@340 $generated@@396) ($generated@@233 ($generated@@184 $generated@@399 $generated@@400)))))
 :no-pattern (type $generated@@399)
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@340 $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@276 (type $generated@@401))))
(let (($generated@@403 ($generated@@275 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@274 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@273 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@170) (= (type $generated@@405) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@348 $generated@@401) ($generated@@233 ($generated@@184 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@348 $generated@@401))
)))
(assert (forall (($generated@@407 T@U) ) (! (= (type ($generated@@406 $generated@@407)) $generated@@76)
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@T) ) (!  (=> (and (= (type $generated@@408) $generated@@76) (= (type $generated@@409) $generated@@74)) (and (= ($generated@@406 ($generated@@192 $generated@@410 $generated@@408 $generated@@409)) $generated@@408) (= ($generated@@83 ($generated@@192 $generated@@410 $generated@@408 $generated@@409)) $generated@@409)))
 :pattern ( ($generated@@192 $generated@@410 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@170) ($generated@@185 $generated@@411 $generated@@46)) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@411)) $generated@@411) ($generated@@154 ($generated@@299 $generated@@2 $generated@@411) $generated@@46)))
 :pattern ( ($generated@@185 $generated@@411 $generated@@46))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@170) ($generated@@185 $generated@@412 $generated@@47)) (and (= ($generated@@233 ($generated@@299 $generated@@3 $generated@@412)) $generated@@412) ($generated@@154 ($generated@@299 $generated@@3 $generated@@412) $generated@@47)))
 :pattern ( ($generated@@185 $generated@@412 $generated@@47))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@170) ($generated@@185 $generated@@413 $generated@@44)) (and (= ($generated@@233 ($generated@@299 $generated@@4 $generated@@413)) $generated@@413) ($generated@@154 ($generated@@299 $generated@@4 $generated@@413) $generated@@44)))
 :pattern ( ($generated@@185 $generated@@413 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@414) 21))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@170) ($generated@@185 $generated@@415 $generated@@45)) (and (= ($generated@@233 ($generated@@299 $generated@@414 $generated@@415)) $generated@@415) ($generated@@154 ($generated@@299 $generated@@414 $generated@@415) $generated@@45)))
 :pattern ( ($generated@@185 $generated@@415 $generated@@45))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@70) (= ($generated@@185 ($generated@@233 $generated@@416) $generated@@417) ($generated@@154 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@185 ($generated@@233 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@90 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@87 $generated@@419 $generated@@2)) (<= 0 ($generated@@248 $generated@@418))))
 :pattern ( ($generated@@248 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@228 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@227 $generated@@421)) (<= 0 ($generated@@226 $generated@@420))))
 :pattern ( ($generated@@226 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@70) (= (type $generated@@425) $generated@@70)) (= ($generated@@422 ($generated@@366 $generated@@424 $generated@@425)) $generated@@424))
 :pattern ( ($generated@@366 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@70)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@70) (= (type $generated@@429) $generated@@70)) (= ($generated@@426 ($generated@@366 $generated@@428 $generated@@429)) $generated@@429))
 :pattern ( ($generated@@366 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@70) (= (type $generated@@431) $generated@@70)) (= ($generated@@81 ($generated@@366 $generated@@430 $generated@@431)) $generated@@58))
 :pattern ( ($generated@@366 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@70) (= (type $generated@@435) $generated@@70)) (= ($generated@@432 ($generated@@374 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@374 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@70)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@70) (= (type $generated@@439) $generated@@70)) (= ($generated@@436 ($generated@@374 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@374 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@70) (= (type $generated@@441) $generated@@70)) (= ($generated@@81 ($generated@@374 $generated@@440 $generated@@441)) $generated@@59))
 :pattern ( ($generated@@374 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@170) (= (type $generated@@443) $generated@@170)) (= ($generated@@219 ($generated@@184 $generated@@442 $generated@@443)) $generated@@62))
 :pattern ( ($generated@@184 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@70)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@70) (= (type $generated@@447) $generated@@70)) (= ($generated@@444 ($generated@@160 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@160 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@70)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@70) (= (type $generated@@451) $generated@@70)) (= ($generated@@448 ($generated@@160 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@160 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@170) (= (type $generated@@453) $generated@@170)) (= ($generated@@168 ($generated@@184 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@184 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@170) (= (type $generated@@455) $generated@@170)) (= ($generated@@169 ($generated@@184 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@184 $generated@@454 $generated@@455))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) $generated@@70)
 :pattern ( ($generated@@456 $generated@@458))
)) (forall (($generated@@459 T@U) ($generated@@460 Int) ) (! (let (($generated@@461 ($generated@@228 (type $generated@@459))))
(= (type ($generated@@457 $generated@@459 $generated@@460)) $generated@@461))
 :pattern ( ($generated@@457 $generated@@459 $generated@@460))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@227 $generated@@170)) (= (type $generated@@463) $generated@@70)) (= (type $generated@@464) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@462 ($generated@@456 $generated@@463) $generated@@464) (forall (($generated@@465 Int) ) (!  (=> (and (<= 0 $generated@@465) (< $generated@@465 ($generated@@226 $generated@@462))) ($generated@@213 ($generated@@457 $generated@@462 $generated@@465) $generated@@463 $generated@@464))
 :pattern ( ($generated@@457 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@85 $generated@@462 ($generated@@456 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@467 Int) ) (! (= ($generated@@466 ($generated@@86 $generated@@467)) $generated@@467)
 :pattern ( ($generated@@86 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@70) (= ($generated@@468 ($generated@@199 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@199 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@70) (= ($generated@@81 ($generated@@199 $generated@@471)) $generated@@54))
 :pattern ( ($generated@@199 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@70)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@70) (= ($generated@@472 ($generated@@204 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@204 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@70) (= ($generated@@81 ($generated@@204 $generated@@475)) $generated@@55))
 :pattern ( ($generated@@204 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@70) (= ($generated@@476 ($generated@@175 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@175 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@479)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@70) (= ($generated@@480 ($generated@@456 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@456 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@70) (= ($generated@@81 ($generated@@456 $generated@@483)) $generated@@57))
 :pattern ( ($generated@@456 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated@@299 $generated@@485 ($generated@@233 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@487) $generated@@70)) (= (type $generated@@488) $generated@@70)) (= ($generated@@154 $generated@@486 ($generated@@366 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@486) $generated@@489))) (and ($generated@@185 ($generated@@92 ($generated@@341 $generated@@486) $generated@@489) $generated@@488) ($generated@@185 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@486) $generated@@489))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@154 $generated@@486 ($generated@@366 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@491) $generated@@70)) (= (type $generated@@492) $generated@@70)) (= ($generated@@154 $generated@@490 ($generated@@374 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@490) $generated@@493))) (and ($generated@@185 ($generated@@92 ($generated@@349 $generated@@490) $generated@@493) $generated@@492) ($generated@@185 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@490) $generated@@493))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@154 $generated@@490 ($generated@@374 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@170) (= (type $generated@@497) $generated@@170)) (< ($generated@@494 $generated@@496) ($generated@@495 ($generated@@184 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@184 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) (= (type $generated@@499) $generated@@170)) (< ($generated@@494 $generated@@499) ($generated@@495 ($generated@@184 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@184 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) $generated@@170) (= (type $generated@@501) $generated@@70)) (= (type $generated@@502) $generated@@70)) ($generated@@185 $generated@@500 ($generated@@366 $generated@@501 $generated@@502))) (and (= ($generated@@233 ($generated@@299 ($generated@@256 $generated@@170 $generated@@170) $generated@@500)) $generated@@500) ($generated@@154 ($generated@@299 ($generated@@256 $generated@@170 $generated@@170) $generated@@500) ($generated@@366 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@185 $generated@@500 ($generated@@366 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@170) (= (type $generated@@504) $generated@@70)) (= (type $generated@@505) $generated@@70)) ($generated@@185 $generated@@503 ($generated@@374 $generated@@504 $generated@@505))) (and (= ($generated@@233 ($generated@@299 ($generated@@274 $generated@@170 $generated@@170) $generated@@503)) $generated@@503) ($generated@@154 ($generated@@299 ($generated@@274 $generated@@170 $generated@@170) $generated@@503) ($generated@@374 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@185 $generated@@503 ($generated@@374 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= (type $generated@@508) $generated@@170)) ($generated@@185 $generated@@508 ($generated@@160 $generated@@506 $generated@@507))) (and (= ($generated@@233 ($generated@@299 $generated@@161 $generated@@508)) $generated@@508) ($generated@@154 ($generated@@299 $generated@@161 $generated@@508) ($generated@@160 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@185 $generated@@508 ($generated@@160 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
 (not ($generated@@0 ($generated@@92 ($generated@@385 $generated@@510) $generated@@509))))
 :pattern ( (let (($generated@@510 (type $generated@@509)))
($generated@@92 ($generated@@385 $generated@@510) $generated@@509)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@517 T@T) ($generated@@518 T@T) ) (= ($generated@@1 ($generated@@513 $generated@@517 $generated@@518)) 22)) (forall (($generated@@519 T@T) ($generated@@520 T@T) ) (! (= ($generated@@514 ($generated@@513 $generated@@519 $generated@@520)) $generated@@519)
 :pattern ( ($generated@@513 $generated@@519 $generated@@520))
))) (forall (($generated@@521 T@T) ($generated@@522 T@T) ) (! (= ($generated@@515 ($generated@@513 $generated@@521 $generated@@522)) $generated@@522)
 :pattern ( ($generated@@513 $generated@@521 $generated@@522))
))) (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@515 (type $generated@@523))))
(= (type ($generated@@511 $generated@@523 $generated@@524 $generated@@525)) $generated@@526))
 :pattern ( ($generated@@511 $generated@@523 $generated@@524 $generated@@525))
))) (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(let (($generated@@532 (type $generated@@528)))
(= (type ($generated@@516 $generated@@527 $generated@@528 $generated@@529 $generated@@530)) ($generated@@513 $generated@@532 $generated@@531))))
 :pattern ( ($generated@@516 $generated@@527 $generated@@528 $generated@@529 $generated@@530))
))) (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@515 (type $generated@@533))))
 (=> (= (type $generated@@536) $generated@@537) (= ($generated@@511 ($generated@@516 $generated@@533 $generated@@534 $generated@@535 $generated@@536) $generated@@534 $generated@@535) $generated@@536)))
 :weight 0
))) (and (and (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (or (= $generated@@540 $generated@@542) (= ($generated@@511 ($generated@@516 $generated@@539 $generated@@540 $generated@@541 $generated@@538) $generated@@542 $generated@@543) ($generated@@511 $generated@@539 $generated@@542 $generated@@543)))
 :weight 0
)) (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (or (= $generated@@547 $generated@@549) (= ($generated@@511 ($generated@@516 $generated@@545 $generated@@546 $generated@@547 $generated@@544) $generated@@548 $generated@@549) ($generated@@511 $generated@@545 $generated@@548 $generated@@549)))
 :weight 0
))) (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (or true (= ($generated@@511 ($generated@@516 $generated@@551 $generated@@552 $generated@@553 $generated@@550) $generated@@554 $generated@@555) ($generated@@511 $generated@@551 $generated@@554 $generated@@555)))
 :weight 0
)))) (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (= (type ($generated@@512 $generated@@556 $generated@@557 $generated@@558 $generated@@559)) ($generated@@513 $generated@@88 $generated@@4))
 :pattern ( ($generated@@512 $generated@@556 $generated@@557 $generated@@558 $generated@@559))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@73 (type $generated@@565))))
 (=> (and (and (and (and (and (= (type $generated@@560) $generated@@88) (= (type $generated@@561) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@562) ($generated@@72 $generated@@4))) (= (type $generated@@563) $generated@@88)) (= (type $generated@@564) $generated@@88)) (= (type $generated@@565) ($generated@@72 $generated@@566))) (= ($generated@@0 ($generated@@511 ($generated@@512 $generated@@560 $generated@@561 $generated@@562 $generated@@563) $generated@@564 $generated@@565))  (=> (and (not (= $generated@@564 $generated@@560)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@561 $generated@@564) $generated@@562))) (= $generated@@564 $generated@@563)))))
 :pattern ( ($generated@@511 ($generated@@512 $generated@@560 $generated@@561 $generated@@562 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@77)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@569 $generated@@570)) $generated@@63) (= ($generated@@567 ($generated@@160 $generated@@569 $generated@@570)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@161) (= ($generated@@494 ($generated@@233 $generated@@571)) ($generated@@495 $generated@@571)))
 :pattern ( ($generated@@494 ($generated@@233 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@170) ($generated@@185 $generated@@572 ($generated@@86 0))) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@572)) $generated@@572) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@572) ($generated@@86 0))))
 :pattern ( ($generated@@185 $generated@@572 ($generated@@86 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@170) (= (type $generated@@574) $generated@@70)) ($generated@@185 $generated@@573 ($generated@@199 $generated@@574))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@573)) $generated@@573) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@573) ($generated@@199 $generated@@574))))
 :pattern ( ($generated@@185 $generated@@573 ($generated@@199 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@70)) ($generated@@185 $generated@@575 ($generated@@204 $generated@@576))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@575) ($generated@@204 $generated@@576))))
 :pattern ( ($generated@@185 $generated@@575 ($generated@@204 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@185 $generated@@577 ($generated@@175 $generated@@578))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@2) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@2) $generated@@577) ($generated@@175 $generated@@578))))
 :pattern ( ($generated@@185 $generated@@577 ($generated@@175 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@185 $generated@@579 ($generated@@456 $generated@@580))) (and (= ($generated@@233 ($generated@@299 ($generated@@227 $generated@@170) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@299 ($generated@@227 $generated@@170) $generated@@579) ($generated@@456 $generated@@580))))
 :pattern ( ($generated@@185 $generated@@579 ($generated@@456 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
 (=> (and (and (and (= (type $generated@@581) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@582) $generated@@88)) (= (type $generated@@583) ($generated@@72 $generated@@585))) ($generated@@152 ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))) ($generated@@143 $generated@@581 ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@93 $generated@@581 $generated@@582 ($generated@@95 ($generated@@92 $generated@@581 $generated@@582) $generated@@583 $generated@@584)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@567 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@181) $generated@@66))
(assert (= ($generated@@567 $generated@@181) $generated@@68))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@587) $generated@@70)) (= (type $generated@@588) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@586 ($generated@@175 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@586 $generated@@589)))) ($generated@@213 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@92 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@85 $generated@@586 ($generated@@175 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@161) (= (type $generated@@591) $generated@@70)) (= (type $generated@@592) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@592) (and ($generated@@159 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@70) ($generated@@85 $generated@@590 ($generated@@160 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@85 $generated@@590 ($generated@@160 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@213 ($generated@@168 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@213 ($generated@@168 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@161) (= (type $generated@@595) $generated@@70)) (= (type $generated@@596) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@596) (and ($generated@@159 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@70) ($generated@@85 $generated@@594 ($generated@@160 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@85 $generated@@594 ($generated@@160 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@213 ($generated@@169 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@213 ($generated@@169 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@170) (= (type $generated@@599) $generated@@170)) (= ($generated@@184 ($generated@@209 $generated@@598) ($generated@@209 $generated@@599)) ($generated@@209 ($generated@@184 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@184 ($generated@@209 $generated@@598) ($generated@@209 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (= ($generated@@233 ($generated@@209 $generated@@600)) ($generated@@209 ($generated@@233 $generated@@600)))
 :pattern ( ($generated@@233 ($generated@@209 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@228 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@227 $generated@@602)) (= ($generated@@226 $generated@@601) 0)) (= $generated@@601 ($generated@@225 $generated@@602))))
 :pattern ( ($generated@@226 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@604)))
 (=> (and (and (= (type $generated@@603) ($generated@@87 $generated@@606 $generated@@2)) (= (type $generated@@605) $generated@@2)) (<= 0 ($generated $generated@@605))) (= ($generated@@248 ($generated@@93 $generated@@603 $generated@@604 $generated@@605)) (+ (- ($generated@@248 $generated@@603) ($generated ($generated@@92 $generated@@603 $generated@@604))) ($generated $generated@@605)))))
 :pattern ( ($generated@@248 ($generated@@93 $generated@@603 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@608) $generated@@2)) ($generated@@85 $generated@@608 $generated@@46 $generated@@607))
 :pattern ( ($generated@@85 $generated@@608 $generated@@46 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@610) $generated@@3)) ($generated@@85 $generated@@610 $generated@@47 $generated@@609))
 :pattern ( ($generated@@85 $generated@@610 $generated@@47 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@612) $generated@@4)) ($generated@@85 $generated@@612 $generated@@44 $generated@@611))
 :pattern ( ($generated@@85 $generated@@612 $generated@@44 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@614) $generated@@414)) ($generated@@85 $generated@@614 $generated@@45 $generated@@613))
 :pattern ( ($generated@@85 $generated@@614 $generated@@45 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@616) $generated@@170)) ($generated@@85 $generated@@616 $generated@@48 $generated@@615))
 :pattern ( ($generated@@85 $generated@@616 $generated@@48 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@227 $generated@@170)) (= (type $generated@@618) $generated@@70)) (= ($generated@@154 $generated@@617 ($generated@@456 $generated@@618)) (forall (($generated@@619 Int) ) (!  (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@226 $generated@@617))) ($generated@@185 ($generated@@457 $generated@@617 $generated@@619) $generated@@618))
 :pattern ( ($generated@@457 $generated@@617 $generated@@619))
))))
 :pattern ( ($generated@@154 $generated@@617 ($generated@@456 $generated@@618)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 Int) ) (!  (=> (= (type $generated@@621) ($generated@@227 $generated@@170)) (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@226 $generated@@621))) (< ($generated@@495 ($generated@@299 $generated@@161 ($generated@@457 $generated@@621 $generated@@622))) ($generated@@620 $generated@@621))))
 :pattern ( ($generated@@495 ($generated@@299 $generated@@161 ($generated@@457 $generated@@621 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@624) $generated@@70)) (= (type $generated@@625) $generated@@70)) ($generated@@154 $generated@@623 ($generated@@366 $generated@@624 $generated@@625))) (and (and ($generated@@154 ($generated@@254 $generated@@623) ($generated@@199 $generated@@624)) ($generated@@154 ($generated@@309 $generated@@623) ($generated@@199 $generated@@625))) ($generated@@154 ($generated@@340 $generated@@623) ($generated@@199 ($generated@@160 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@154 $generated@@623 ($generated@@366 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@627) $generated@@70)) (= (type $generated@@628) $generated@@70)) ($generated@@154 $generated@@626 ($generated@@374 $generated@@627 $generated@@628))) (and (and ($generated@@154 ($generated@@272 $generated@@626) ($generated@@204 $generated@@627)) ($generated@@154 ($generated@@320 $generated@@626) ($generated@@204 $generated@@628))) ($generated@@154 ($generated@@348 $generated@@626) ($generated@@204 ($generated@@160 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@154 $generated@@626 ($generated@@374 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@2) ($generated@@154 $generated@@629 $generated@@46))
 :pattern ( ($generated@@154 $generated@@629 $generated@@46))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@3) ($generated@@154 $generated@@630 $generated@@47))
 :pattern ( ($generated@@154 $generated@@630 $generated@@47))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@4) ($generated@@154 $generated@@631 $generated@@44))
 :pattern ( ($generated@@154 $generated@@631 $generated@@44))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@414) ($generated@@154 $generated@@632 $generated@@45))
 :pattern ( ($generated@@154 $generated@@632 $generated@@45))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@170) ($generated@@154 $generated@@633 $generated@@48))
 :pattern ( ($generated@@154 $generated@@633 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 (T@U) Bool)
(declare-fun $generated@@639 () Int)
(assert  (and (and (and (= (type $generated@@634) ($generated@@513 $generated@@88 $generated@@4)) (= (type $generated@@635) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@636) $generated@@88)) (= (type $generated@@637) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@640  (=> (= $generated@@634 ($generated@@512 $generated@@148 $generated@@635 $generated@@60 $generated@@636)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@511 $generated@@634 $generated@@636 $generated@@151))) (=> ($generated@@0 ($generated@@511 $generated@@634 $generated@@636 $generated@@151)) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@637 $generated@@148))))))))
(let (($generated@@641  (=> (and (and (and ($generated@@152 $generated@@635) ($generated@@638 $generated@@635)) (and (not (= $generated@@636 $generated@@148)) (and ($generated@@154 $generated@@636 $generated@@181) ($generated@@85 $generated@@636 $generated@@181 $generated@@635)))) (and (and ($generated@@154 $generated@@637 $generated@@181) ($generated@@85 $generated@@637 $generated@@181 $generated@@635)) (and (= 1 $generated@@639) (= (ControlFlow 0 4) 2)))) $generated@@640)))
$generated@@641)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@T T@T) T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@T T@U T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U) Bool)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@220 (T@U T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@229 (T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@232 (T@T T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@234 (T@T) T@T)
(declare-fun $generated@@235 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@338 (T@T T@T) T@U)
(declare-fun $generated@@339 (T@T T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@355 (T@U T@U) Bool)
(declare-fun $generated@@364 (T@T T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@T) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 () T@T)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 (T@U Int) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@631 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@80 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@80)) 8))) (forall (($generated@@81 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@74 $generated@@81))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@63) $generated@@77)) (= (type $generated@@64) $generated@@73)) (= ($generated@@1 $generated@@78) 11)) (= (type $generated@@65) $generated@@78)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@79) 12)) (= (type $generated@@68) $generated@@79)) (= (type $generated@@69) $generated@@79)) (= (type $generated@@70) $generated@@79)) (= (type $generated@@71) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (= ($generated@@82 $generated@@60) 0))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@73)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert (forall (($generated@@86 T@U) ) (! (= (type ($generated@@85 $generated@@86)) $generated@@76)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (= ($generated@@85 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (= ($generated@@1 ($generated@@89 $generated@@98 $generated@@99)) 13)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@92 ($generated@@89 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@89 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@93 ($generated@@89 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@89 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@93 (type $generated@@104))))
(= (type ($generated@@94 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@94 $generated@@104 $generated@@105))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 (type $generated@@109)))
(let (($generated@@111 (type $generated@@108)))
(= (type ($generated@@95 $generated@@107 $generated@@108 $generated@@109)) ($generated@@89 $generated@@111 $generated@@110))))
 :pattern ( ($generated@@95 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@93 (type $generated@@112))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@94 ($generated@@95 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@94 ($generated@@95 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@94 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@94 $generated@@121 $generated@@123)))
 :weight 0
)))) (= ($generated@@1 $generated@@90) 14)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@75 (type $generated@@125))))
(= (type ($generated@@96 $generated@@124 $generated@@125)) $generated@@126))
 :pattern ( ($generated@@96 $generated@@124 $generated@@125))
))) (= ($generated@@1 $generated@@91) 15)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= (type ($generated@@97 $generated@@127 $generated@@128 $generated@@129)) $generated@@91)
 :pattern ( ($generated@@97 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@75 (type $generated@@131))))
 (=> (= (type $generated@@132) $generated@@133) (= ($generated@@96 ($generated@@97 $generated@@130 $generated@@131 $generated@@132) $generated@@131) $generated@@132)))
 :weight 0
))) (and (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@96 ($generated@@97 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@96 $generated@@135 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@96 $generated@@139 $generated@@141)))
 :weight 0
)))) (forall (($generated@@142 Int) ) (! (= (type ($generated@@88 $generated@@142)) $generated@@72)
 :pattern ( ($generated@@88 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
 :pattern ( ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@147) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@90) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert  (and (= (type $generated@@149) $generated@@72) (= (type $generated@@150) $generated@@90)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@90) (= (type $generated@@152) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@151 $generated@@149 $generated@@152)  (or (= $generated@@151 $generated@@150) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@152 $generated@@151) $generated@@60)))))
 :pattern ( ($generated@@87 $generated@@151 $generated@@149 $generated@@152))
)))
(assert (= (type $generated@@153) $generated@@72))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@90) (= (type $generated@@155) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@154 $generated@@153 $generated@@155)  (or (= $generated@@154 $generated@@150) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@155 $generated@@154) $generated@@60)))))
 :pattern ( ($generated@@87 $generated@@154 $generated@@153 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@88 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@88 0)))
)))
(assert  (and (= ($generated@@1 $generated@@160) 16) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@72)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@72) (= (type $generated@@164) $generated@@72)) (= (type $generated@@165) $generated@@160)) ($generated@@156 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@156 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 17) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@160) (= (type $generated@@173) $generated@@160)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@72)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@89 $generated@@169 $generated@@2)) (= (type $generated@@178) $generated@@72)) ($generated@@156 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@156 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@179 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@90) (= ($generated@@156 $generated@@181 $generated@@153)  (or (= $generated@@181 $generated@@150) (= ($generated@@179 $generated@@181) $generated@@153))))
 :pattern ( ($generated@@156 $generated@@181 $generated@@153))
)))
(assert (= (type $generated@@182) $generated@@72))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (= (type $generated@@183) $generated@@90) (= (type $generated@@184) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@183 $generated@@182 $generated@@184) ($generated@@87 $generated@@183 $generated@@153 $generated@@184)))
 :pattern ( ($generated@@87 $generated@@183 $generated@@182 $generated@@184))
)))
(assert (= (type $generated@@185) ($generated@@74 ($generated@@89 $generated@@169 $generated@@4))))
(assert (= ($generated@@82 $generated@@185) 0))
(assert (forall (($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= (type ($generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@74 $generated@@187))
 :pattern ( ($generated@@186 $generated@@187 $generated@@188 $generated@@189))
)))
(assert (= ($generated@@186 ($generated@@89 $generated@@169 $generated@@4) $generated@@65 $generated@@71) $generated@@185))
(assert ($generated@@190 $generated@@185))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (= (type ($generated@@191 $generated@@193 $generated@@194)) $generated@@160)
 :pattern ( ($generated@@191 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (and (= (type $generated@@195) $generated@@72) (= (type $generated@@196) $generated@@72)) (= (type $generated@@197) $generated@@169)) (= (type $generated@@198) $generated@@169)) (= ($generated@@156 ($generated@@191 $generated@@197 $generated@@198) ($generated@@159 $generated@@195 $generated@@196))  (and ($generated@@192 $generated@@197 $generated@@195) ($generated@@192 $generated@@198 $generated@@196))))
 :pattern ( ($generated@@156 ($generated@@191 $generated@@197 $generated@@198) ($generated@@159 $generated@@195 $generated@@196)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@199) $generated@@160) (= (type $generated@@200) $generated@@160)) (= ($generated@@166 $generated@@199 $generated@@200) (= $generated@@199 $generated@@200)))
 :pattern ( ($generated@@166 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@201 $generated@@202)) $generated@@72)
 :pattern ( ($generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (= (type $generated@@203) ($generated@@89 $generated@@169 $generated@@4)) (= (type $generated@@204) $generated@@72)) (= ($generated@@156 $generated@@203 ($generated@@201 $generated@@204)) (forall (($generated@@205 T@U) ) (!  (=> (and (= (type $generated@@205) $generated@@169) ($generated@@0 ($generated@@94 $generated@@203 $generated@@205))) ($generated@@192 $generated@@205 $generated@@204))
 :pattern ( ($generated@@94 $generated@@203 $generated@@205))
))))
 :pattern ( ($generated@@156 $generated@@203 ($generated@@201 $generated@@204)))
)))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@206 $generated@@207)) $generated@@72)
 :pattern ( ($generated@@206 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@208) ($generated@@89 $generated@@169 $generated@@4)) (= (type $generated@@209) $generated@@72)) (= ($generated@@156 $generated@@208 ($generated@@206 $generated@@209)) (forall (($generated@@210 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@169) ($generated@@0 ($generated@@94 $generated@@208 $generated@@210))) ($generated@@192 $generated@@210 $generated@@209))
 :pattern ( ($generated@@94 $generated@@208 $generated@@210))
))))
 :pattern ( ($generated@@156 $generated@@208 ($generated@@206 $generated@@209)))
)))
(assert (forall (($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(= (type ($generated@@211 $generated@@212)) $generated@@213))
 :pattern ( ($generated@@211 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (! (= ($generated@@211 $generated@@214) $generated@@214)
 :pattern ( ($generated@@211 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ) (! (= (type ($generated@@215 $generated@@217)) ($generated@@89 $generated@@169 $generated@@4))
 :pattern ( ($generated@@215 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@219) $generated@@90)) (=> (and (and ($generated@@216 $generated@@218) (and (not (= $generated@@219 $generated@@150)) (= ($generated@@179 $generated@@219) $generated@@153))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@218 $generated@@219) $generated@@60))) ($generated@@87 ($generated@@215 $generated@@219) ($generated@@201 $generated@@149) $generated@@218)))
 :pattern ( ($generated@@215 $generated@@219) ($generated@@96 ($generated@@94 $generated@@218 $generated@@219) $generated@@60))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@221) $generated@@72) (= (type $generated@@222) $generated@@72)) (= (type $generated@@223) $generated@@169)) (= (type $generated@@224) $generated@@169)) (= (type $generated@@225) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@216 $generated@@225)) (= ($generated@@87 ($generated@@191 $generated@@223 $generated@@224) ($generated@@159 $generated@@221 $generated@@222) $generated@@225)  (and ($generated@@220 $generated@@223 $generated@@221 $generated@@225) ($generated@@220 $generated@@224 $generated@@222 $generated@@225))))
 :pattern ( ($generated@@87 ($generated@@191 $generated@@223 $generated@@224) ($generated@@159 $generated@@221 $generated@@222) $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@77)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@160) (= ($generated@@158 $generated@@228) (= ($generated@@226 $generated@@228) $generated@@63)))
 :pattern ( ($generated@@158 $generated@@228))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (= ($generated@@1 ($generated@@232 $generated@@236 $generated@@237)) 18)) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@232 $generated@@238 $generated@@239)) $generated@@238)
 :pattern ( ($generated@@232 $generated@@238 $generated@@239))
))) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= ($generated@@234 ($generated@@232 $generated@@240 $generated@@241)) $generated@@241)
 :pattern ( ($generated@@232 $generated@@240 $generated@@241))
))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@234 (type $generated@@242))))
(= (type ($generated@@229 $generated@@242 $generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@229 $generated@@242 $generated@@243 $generated@@244))
))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(let (($generated@@251 (type $generated@@247)))
(= (type ($generated@@235 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@232 $generated@@251 $generated@@250))))
 :pattern ( ($generated@@235 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
))) (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@234 (type $generated@@252))))
 (=> (= (type $generated@@255) $generated@@256) (= ($generated@@229 ($generated@@235 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@253 $generated@@254) $generated@@255)))
 :weight 0
))) (and (and (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (or (= $generated@@259 $generated@@261) (= ($generated@@229 ($generated@@235 $generated@@258 $generated@@259 $generated@@260 $generated@@257) $generated@@261 $generated@@262) ($generated@@229 $generated@@258 $generated@@261 $generated@@262)))
 :weight 0
)) (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (or (= $generated@@266 $generated@@268) (= ($generated@@229 ($generated@@235 $generated@@264 $generated@@265 $generated@@266 $generated@@263) $generated@@267 $generated@@268) ($generated@@229 $generated@@264 $generated@@267 $generated@@268)))
 :weight 0
))) (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (or true (= ($generated@@229 ($generated@@235 $generated@@270 $generated@@271 $generated@@272 $generated@@269) $generated@@273 $generated@@274) ($generated@@229 $generated@@270 $generated@@273 $generated@@274)))
 :weight 0
)))) (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (! (= (type ($generated@@230 $generated@@275 $generated@@276 $generated@@277 $generated@@278 $generated@@279 $generated@@280)) ($generated@@232 $generated@@90 $generated@@4))
 :pattern ( ($generated@@230 $generated@@275 $generated@@276 $generated@@277 $generated@@278 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@U) ) (! (= (type ($generated@@231 $generated@@281)) $generated@@169)
 :pattern ( ($generated@@231 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@75 (type $generated@@289))))
 (=> (and (and (and (and (and (and (and (= (type $generated@@282) $generated@@90) (= (type $generated@@283) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@284) ($generated@@74 $generated@@4))) (= (type $generated@@285) $generated@@90)) (= (type $generated@@286) ($generated@@89 $generated@@169 $generated@@4))) (= (type $generated@@287) ($generated@@89 $generated@@169 $generated@@4))) (= (type $generated@@288) $generated@@90)) (= (type $generated@@289) ($generated@@74 $generated@@290))) (= ($generated@@0 ($generated@@229 ($generated@@230 $generated@@282 $generated@@283 $generated@@284 $generated@@285 $generated@@286 $generated@@287) $generated@@288 $generated@@289))  (=> (and (not (= $generated@@288 $generated@@282)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@283 $generated@@288) $generated@@284))) (or (or (= $generated@@288 $generated@@285) ($generated@@0 ($generated@@94 $generated@@286 ($generated@@231 $generated@@288)))) ($generated@@0 ($generated@@94 $generated@@287 ($generated@@231 $generated@@288))))))))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@282 $generated@@283 $generated@@284 $generated@@285 $generated@@286 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@160) ($generated@@158 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@169) (= (type $generated@@293) $generated@@169)) (= $generated@@291 ($generated@@191 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@158 $generated@@291))
)))
(assert  (and (and (forall (($generated@@298 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@298)) 19)) (forall (($generated@@299 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@296 $generated@@299))
))) (forall (($generated@@300 T@T) ) (! (= (type ($generated@@294 $generated@@300)) ($generated@@296 $generated@@300))
 :pattern ( ($generated@@294 $generated@@300))
))))
(assert (forall (($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@301)) 0)
 :pattern ( ($generated@@294 $generated@@301))
)))
(assert ($generated@@190 $generated@@60))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@72) (= (type $generated@@304) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@220 ($generated@@231 $generated@@302) $generated@@303 $generated@@304) ($generated@@87 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@220 ($generated@@231 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@305) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@306) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@307) $generated@@169)) (= (type $generated@@308) $generated@@72)) ($generated@@145 $generated@@305 $generated@@306)) ($generated@@220 $generated@@307 $generated@@308 $generated@@305)) ($generated@@220 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@145 $generated@@305 $generated@@306) ($generated@@220 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@309) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@310) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@312) $generated@@72)) ($generated@@145 $generated@@309 $generated@@310)) ($generated@@87 $generated@@311 $generated@@312 $generated@@309)) ($generated@@87 $generated@@311 $generated@@312 $generated@@310))
 :pattern ( ($generated@@145 $generated@@309 $generated@@310) ($generated@@87 $generated@@311 $generated@@312 $generated@@309))
)))
(assert (forall (($generated@@315 T@T) ) (! (= (type ($generated@@314 $generated@@315)) ($generated@@89 $generated@@315 $generated@@2))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@92 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@89 $generated@@317 $generated@@2)) (and (= (= ($generated@@313 $generated@@316) 0) (= $generated@@316 ($generated@@314 $generated@@317))) (=> (not (= ($generated@@313 $generated@@316) 0)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@317) (< 0 ($generated ($generated@@94 $generated@@316 $generated@@318))))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@313 $generated@@316))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 20)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@89 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@94 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@94 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert  (and (and (and (and (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (= ($generated@@1 ($generated@@339 $generated@@342 $generated@@343)) 21)) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@340 ($generated@@339 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@339 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@341 ($generated@@339 $generated@@346 $generated@@347)) $generated@@347)
 :pattern ( ($generated@@339 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@340 (type $generated@@348))))
(= (type ($generated@@337 $generated@@348)) ($generated@@89 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@348))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= (type ($generated@@338 $generated@@350 $generated@@351)) ($generated@@339 $generated@@350 $generated@@351))
 :pattern ( ($generated@@338 $generated@@350 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@T) ) (! (let (($generated@@354 (type $generated@@352)))
 (not ($generated@@0 ($generated@@94 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352))))
 :pattern ( (let (($generated@@354 (type $generated@@352)))
($generated@@94 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352)))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@357) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@355 $generated@@356 $generated@@357)) (and ($generated@@145 $generated@@356 $generated@@357) (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@75 (type $generated@@359))))
 (=> (and (and (= (type $generated@@358) $generated@@90) (= (type $generated@@359) ($generated@@74 $generated@@360))) (not ($generated@@190 $generated@@359))) (= ($generated@@96 ($generated@@94 $generated@@356 $generated@@358) $generated@@359) ($generated@@96 ($generated@@94 $generated@@357 $generated@@358) $generated@@359))))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@357 $generated@@358) $generated@@359))
))))
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@92 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@89 $generated@@362 $generated@@2)) (= ($generated@@175 $generated@@361) (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@362) (and (<= 0 ($generated ($generated@@94 $generated@@361 $generated@@363))) (<= ($generated ($generated@@94 $generated@@361 $generated@@363)) ($generated@@313 $generated@@361))))
 :pattern ( ($generated@@94 $generated@@361 $generated@@363))
)))))
 :pattern ( ($generated@@175 $generated@@361))
)))
(assert (forall (($generated@@365 T@T) ($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@169) ($generated@@192 $generated@@367 $generated@@149)) (and (= ($generated@@231 ($generated@@364 $generated@@90 $generated@@367)) $generated@@367) ($generated@@156 ($generated@@364 $generated@@90 $generated@@367) $generated@@149)))
 :pattern ( ($generated@@192 $generated@@367 $generated@@149))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@169) ($generated@@192 $generated@@368 $generated@@153)) (and (= ($generated@@231 ($generated@@364 $generated@@90 $generated@@368)) $generated@@368) ($generated@@156 ($generated@@364 $generated@@90 $generated@@368) $generated@@153)))
 :pattern ( ($generated@@192 $generated@@368 $generated@@153))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@169) ($generated@@192 $generated@@369 $generated@@182)) (and (= ($generated@@231 ($generated@@364 $generated@@90 $generated@@369)) $generated@@369) ($generated@@156 ($generated@@364 $generated@@90 $generated@@369) $generated@@182)))
 :pattern ( ($generated@@192 $generated@@369 $generated@@182))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@90) (= ($generated@@156 $generated@@370 $generated@@182)  (and ($generated@@156 $generated@@370 $generated@@153) (not (= $generated@@370 $generated@@150)))))
 :pattern ( ($generated@@156 $generated@@370 $generated@@182))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@323 (type $generated@@371))))
(let (($generated@@373 ($generated@@322 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@321 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@320 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@94 ($generated@@319 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@319 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@323 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@89 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@323 (type $generated@@378))))
(let (($generated@@380 ($generated@@322 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@321 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@320 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@94 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@341 (type $generated@@382))))
(let (($generated@@384 ($generated@@340 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@339 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@338 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@94 ($generated@@337 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@337 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@341 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@89 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@341 (type $generated@@389))))
(let (($generated@@391 ($generated@@340 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@339 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@338 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@94 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@89 $generated@@169 $generated@@2)) (= (type $generated@@394) $generated@@72)) (= ($generated@@156 $generated@@393 ($generated@@174 $generated@@394)) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@169) (< 0 ($generated ($generated@@94 $generated@@393 $generated@@395)))) ($generated@@192 $generated@@395 $generated@@394))
 :pattern ( ($generated@@94 $generated@@393 $generated@@395))
))))
 :pattern ( ($generated@@156 $generated@@393 ($generated@@174 $generated@@394)))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@89 $generated@@169 $generated@@4)) (= (type $generated@@397) $generated@@72)) (= (type $generated@@398) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@396 ($generated@@201 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@169) ($generated@@0 ($generated@@94 $generated@@396 $generated@@399))) ($generated@@220 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@94 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@87 $generated@@396 ($generated@@201 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@89 $generated@@169 $generated@@4)) (= (type $generated@@401) $generated@@72)) (= (type $generated@@402) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@400 ($generated@@206 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@169) ($generated@@0 ($generated@@94 $generated@@400 $generated@@403))) ($generated@@220 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@94 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@87 $generated@@400 ($generated@@206 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(= ($generated ($generated@@94 ($generated@@314 $generated@@405) $generated@@404)) 0))
 :pattern ( (let (($generated@@405 (type $generated@@404)))
($generated@@94 ($generated@@314 $generated@@405) $generated@@404)))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@407) $generated@@90)) (=> (and (and ($generated@@216 $generated@@406) (and (not (= $generated@@407 $generated@@150)) (= ($generated@@179 $generated@@407) $generated@@153))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@406 $generated@@407) $generated@@60))) ($generated@@87 ($generated@@96 ($generated@@94 $generated@@406 $generated@@407) $generated@@185) ($generated@@201 $generated@@149) $generated@@406)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@406 $generated@@407) $generated@@185))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) ($generated@@89 $generated@@169 $generated@@4))
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@323 (type $generated@@411))))
(let (($generated@@413 ($generated@@322 (type $generated@@411))))
(= (type ($generated@@409 $generated@@411)) ($generated@@89 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@321 $generated@@169 $generated@@169)) (= (type $generated@@415) $generated@@169)) (= ($generated@@0 ($generated@@94 ($generated@@408 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@94 ($generated@@319 $generated@@414) ($generated@@167 ($generated@@364 $generated@@160 $generated@@415)))) (= ($generated@@94 ($generated@@409 $generated@@414) ($generated@@167 ($generated@@364 $generated@@160 $generated@@415))) ($generated@@168 ($generated@@364 $generated@@160 $generated@@415))))))
 :pattern ( ($generated@@94 ($generated@@408 $generated@@414) $generated@@415))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@89 $generated@@169 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@341 (type $generated@@419))))
(let (($generated@@421 ($generated@@340 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@89 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@339 $generated@@169 $generated@@169)) (= (type $generated@@423) $generated@@169)) (= ($generated@@0 ($generated@@94 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@94 ($generated@@337 $generated@@422) ($generated@@167 ($generated@@364 $generated@@160 $generated@@423)))) (= ($generated@@94 ($generated@@417 $generated@@422) ($generated@@167 ($generated@@364 $generated@@160 $generated@@423))) ($generated@@168 ($generated@@364 $generated@@160 $generated@@423))))))
 :pattern ( ($generated@@94 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@322 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@321 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@94 ($generated@@375 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@94 ($generated@@319 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@94 ($generated@@409 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@94 ($generated@@319 $generated@@424) $generated@@428))
 :pattern ( ($generated@@94 ($generated@@409 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@94 ($generated@@375 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@340 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@339 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@94 ($generated@@386 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@94 ($generated@@337 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@94 ($generated@@417 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@94 ($generated@@337 $generated@@429) $generated@@433))
 :pattern ( ($generated@@94 ($generated@@417 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@94 ($generated@@386 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@72)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@321 $generated@@169 $generated@@169)) (= (type $generated@@438) $generated@@72)) (= (type $generated@@439) $generated@@72)) (= (type $generated@@440) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@169) ($generated@@0 ($generated@@94 ($generated@@319 $generated@@437) $generated@@441))) (and ($generated@@220 ($generated@@94 ($generated@@409 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@220 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@94 ($generated@@409 $generated@@437) $generated@@441))
 :pattern ( ($generated@@94 ($generated@@319 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@87 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@72)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@339 $generated@@169 $generated@@169)) (= (type $generated@@446) $generated@@72)) (= (type $generated@@447) $generated@@72)) (= (type $generated@@448) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@169) ($generated@@0 ($generated@@94 ($generated@@337 $generated@@445) $generated@@449))) (and ($generated@@220 ($generated@@94 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@220 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@94 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@94 ($generated@@337 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@87 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@450) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@451) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@452) ($generated@@89 $generated@@90 $generated@@91))) (not (= $generated@@450 $generated@@452))) (and ($generated@@145 $generated@@450 $generated@@451) ($generated@@145 $generated@@451 $generated@@452))) ($generated@@145 $generated@@450 $generated@@452))
 :pattern ( ($generated@@145 $generated@@450 $generated@@451) ($generated@@145 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@T) ) (! (= (type ($generated@@453 $generated@@454)) ($generated@@89 $generated@@454 $generated@@4))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@341 (type $generated@@455))))
(let (($generated@@457 ($generated@@340 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@339 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@338 $generated@@457 $generated@@456)) (= ($generated@@337 $generated@@455) ($generated@@453 $generated@@457))))))
 :pattern ( ($generated@@337 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@341 (type $generated@@458))))
(let (($generated@@460 ($generated@@340 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@339 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@338 $generated@@460 $generated@@459)) (= ($generated@@386 $generated@@458) ($generated@@453 $generated@@459))))))
 :pattern ( ($generated@@386 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@341 (type $generated@@461))))
(let (($generated@@463 ($generated@@340 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@339 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@338 $generated@@463 $generated@@462)) (= ($generated@@416 $generated@@461) ($generated@@453 $generated@@169))))))
 :pattern ( ($generated@@416 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@323 (type $generated@@464))))
(let (($generated@@466 ($generated@@322 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@321 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@320 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@169) (= (type $generated@@468) $generated@@169)) ($generated@@0 ($generated@@94 ($generated@@408 $generated@@464) ($generated@@231 ($generated@@191 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@408 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@341 (type $generated@@469))))
(let (($generated@@471 ($generated@@340 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@339 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@338 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@169) (= (type $generated@@473) $generated@@169)) ($generated@@0 ($generated@@94 ($generated@@416 $generated@@469) ($generated@@231 ($generated@@191 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@416 $generated@@469))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@78)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@T) ) (!  (=> (and (= (type $generated@@476) $generated@@78) (= (type $generated@@477) $generated@@76)) (and (= ($generated@@474 ($generated@@186 $generated@@478 $generated@@476 $generated@@477)) $generated@@476) (= ($generated@@85 ($generated@@186 $generated@@478 $generated@@476 $generated@@477)) $generated@@477)))
 :pattern ( ($generated@@186 $generated@@478 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@169) ($generated@@192 $generated@@479 $generated@@46)) (and (= ($generated@@231 ($generated@@364 $generated@@2 $generated@@479)) $generated@@479) ($generated@@156 ($generated@@364 $generated@@2 $generated@@479) $generated@@46)))
 :pattern ( ($generated@@192 $generated@@479 $generated@@46))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@169) ($generated@@192 $generated@@480 $generated@@47)) (and (= ($generated@@231 ($generated@@364 $generated@@3 $generated@@480)) $generated@@480) ($generated@@156 ($generated@@364 $generated@@3 $generated@@480) $generated@@47)))
 :pattern ( ($generated@@192 $generated@@480 $generated@@47))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@169) ($generated@@192 $generated@@481 $generated@@44)) (and (= ($generated@@231 ($generated@@364 $generated@@4 $generated@@481)) $generated@@481) ($generated@@156 ($generated@@364 $generated@@4 $generated@@481) $generated@@44)))
 :pattern ( ($generated@@192 $generated@@481 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@482) 22))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@169) ($generated@@192 $generated@@483 $generated@@45)) (and (= ($generated@@231 ($generated@@364 $generated@@482 $generated@@483)) $generated@@483) ($generated@@156 ($generated@@364 $generated@@482 $generated@@483) $generated@@45)))
 :pattern ( ($generated@@192 $generated@@483 $generated@@45))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@72) (= ($generated@@192 ($generated@@231 $generated@@484) $generated@@485) ($generated@@156 $generated@@484 $generated@@485)))
 :pattern ( ($generated@@192 ($generated@@231 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@92 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@89 $generated@@487 $generated@@2)) (<= 0 ($generated@@313 $generated@@486))))
 :pattern ( ($generated@@313 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@297 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@296 $generated@@489)) (<= 0 ($generated@@295 $generated@@488))))
 :pattern ( ($generated@@295 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@72)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@72) (= (type $generated@@493) $generated@@72)) (= ($generated@@490 ($generated@@434 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@434 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@72)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@494 ($generated@@434 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@434 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@72) (= (type $generated@@499) $generated@@72)) (= ($generated@@83 ($generated@@434 $generated@@498 $generated@@499)) $generated@@58))
 :pattern ( ($generated@@434 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@442 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@442 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@442 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@442 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@72) (= (type $generated@@509) $generated@@72)) (= ($generated@@83 ($generated@@442 $generated@@508 $generated@@509)) $generated@@59))
 :pattern ( ($generated@@442 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@169) (= (type $generated@@511) $generated@@169)) (= ($generated@@226 ($generated@@191 $generated@@510 $generated@@511)) $generated@@63))
 :pattern ( ($generated@@191 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@72) (= (type $generated@@515) $generated@@72)) (= ($generated@@512 ($generated@@159 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@159 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@72)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@72) (= (type $generated@@519) $generated@@72)) (= ($generated@@516 ($generated@@159 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@159 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@169) (= (type $generated@@521) $generated@@169)) (= ($generated@@167 ($generated@@191 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@191 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@169) (= (type $generated@@523) $generated@@169)) (= ($generated@@168 ($generated@@191 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@191 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@90) ($generated@@156 $generated@@524 $generated@@149))
 :pattern ( ($generated@@156 $generated@@524 $generated@@149))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) $generated@@72)
 :pattern ( ($generated@@525 $generated@@527))
)) (forall (($generated@@528 T@U) ($generated@@529 Int) ) (! (let (($generated@@530 ($generated@@297 (type $generated@@528))))
(= (type ($generated@@526 $generated@@528 $generated@@529)) $generated@@530))
 :pattern ( ($generated@@526 $generated@@528 $generated@@529))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@296 $generated@@169)) (= (type $generated@@532) $generated@@72)) (= (type $generated@@533) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@531 ($generated@@525 $generated@@532) $generated@@533) (forall (($generated@@534 Int) ) (!  (=> (and (<= 0 $generated@@534) (< $generated@@534 ($generated@@295 $generated@@531))) ($generated@@220 ($generated@@526 $generated@@531 $generated@@534) $generated@@532 $generated@@533))
 :pattern ( ($generated@@526 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@87 $generated@@531 ($generated@@525 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@535 ($generated@@88 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@88 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@72)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@537 ($generated@@201 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@201 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@72) (= ($generated@@83 ($generated@@201 $generated@@540)) $generated@@54))
 :pattern ( ($generated@@201 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@72)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@72) (= ($generated@@541 ($generated@@206 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@206 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@72) (= ($generated@@83 ($generated@@206 $generated@@544)) $generated@@55))
 :pattern ( ($generated@@206 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@72)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@72) (= ($generated@@545 ($generated@@174 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@174 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@72) (= ($generated@@83 ($generated@@174 $generated@@548)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@72)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@72) (= ($generated@@549 ($generated@@525 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@525 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@72) (= ($generated@@83 ($generated@@525 $generated@@552)) $generated@@57))
 :pattern ( ($generated@@525 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
(= ($generated@@364 $generated@@554 ($generated@@231 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@231 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@321 $generated@@169 $generated@@169)) (= (type $generated@@556) $generated@@72)) (= (type $generated@@557) $generated@@72)) (= ($generated@@156 $generated@@555 ($generated@@434 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@169) ($generated@@0 ($generated@@94 ($generated@@319 $generated@@555) $generated@@558))) (and ($generated@@192 ($generated@@94 ($generated@@409 $generated@@555) $generated@@558) $generated@@557) ($generated@@192 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@94 ($generated@@409 $generated@@555) $generated@@558))
 :pattern ( ($generated@@94 ($generated@@319 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@156 $generated@@555 ($generated@@434 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@339 $generated@@169 $generated@@169)) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) (= ($generated@@156 $generated@@559 ($generated@@442 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@169) ($generated@@0 ($generated@@94 ($generated@@337 $generated@@559) $generated@@562))) (and ($generated@@192 ($generated@@94 ($generated@@417 $generated@@559) $generated@@562) $generated@@561) ($generated@@192 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@94 ($generated@@417 $generated@@559) $generated@@562))
 :pattern ( ($generated@@94 ($generated@@337 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@156 $generated@@559 ($generated@@442 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@169) (= (type $generated@@566) $generated@@169)) (< ($generated@@563 $generated@@565) ($generated@@564 ($generated@@191 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@191 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@169) (= (type $generated@@568) $generated@@169)) (< ($generated@@563 $generated@@568) ($generated@@564 ($generated@@191 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@191 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@169) (= (type $generated@@570) $generated@@72)) (= (type $generated@@571) $generated@@72)) ($generated@@192 $generated@@569 ($generated@@434 $generated@@570 $generated@@571))) (and (= ($generated@@231 ($generated@@364 ($generated@@321 $generated@@169 $generated@@169) $generated@@569)) $generated@@569) ($generated@@156 ($generated@@364 ($generated@@321 $generated@@169 $generated@@169) $generated@@569) ($generated@@434 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@192 $generated@@569 ($generated@@434 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@169) (= (type $generated@@573) $generated@@72)) (= (type $generated@@574) $generated@@72)) ($generated@@192 $generated@@572 ($generated@@442 $generated@@573 $generated@@574))) (and (= ($generated@@231 ($generated@@364 ($generated@@339 $generated@@169 $generated@@169) $generated@@572)) $generated@@572) ($generated@@156 ($generated@@364 ($generated@@339 $generated@@169 $generated@@169) $generated@@572) ($generated@@442 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@192 $generated@@572 ($generated@@442 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@72) (= (type $generated@@576) $generated@@72)) (= (type $generated@@577) $generated@@169)) ($generated@@192 $generated@@577 ($generated@@159 $generated@@575 $generated@@576))) (and (= ($generated@@231 ($generated@@364 $generated@@160 $generated@@577)) $generated@@577) ($generated@@156 ($generated@@364 $generated@@160 $generated@@577) ($generated@@159 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@192 $generated@@577 ($generated@@159 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@94 ($generated@@453 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@94 ($generated@@453 $generated@@579) $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@79)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@72) (= (type $generated@@583) $generated@@72)) (and (= ($generated@@83 ($generated@@159 $generated@@582 $generated@@583)) $generated@@64) (= ($generated@@580 ($generated@@159 $generated@@582 $generated@@583)) $generated@@69)))
 :pattern ( ($generated@@159 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@160) (= ($generated@@563 ($generated@@231 $generated@@584)) ($generated@@564 $generated@@584)))
 :pattern ( ($generated@@563 ($generated@@231 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@169) ($generated@@192 $generated@@585 ($generated@@88 0))) (and (= ($generated@@231 ($generated@@364 $generated@@2 $generated@@585)) $generated@@585) ($generated@@156 ($generated@@364 ($generated@@89 $generated@@169 $generated@@4) $generated@@585) ($generated@@88 0))))
 :pattern ( ($generated@@192 $generated@@585 ($generated@@88 0)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@169) (= (type $generated@@587) $generated@@72)) ($generated@@192 $generated@@586 ($generated@@201 $generated@@587))) (and (= ($generated@@231 ($generated@@364 ($generated@@89 $generated@@169 $generated@@4) $generated@@586)) $generated@@586) ($generated@@156 ($generated@@364 ($generated@@89 $generated@@169 $generated@@4) $generated@@586) ($generated@@201 $generated@@587))))
 :pattern ( ($generated@@192 $generated@@586 ($generated@@201 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@169) (= (type $generated@@589) $generated@@72)) ($generated@@192 $generated@@588 ($generated@@206 $generated@@589))) (and (= ($generated@@231 ($generated@@364 ($generated@@89 $generated@@169 $generated@@4) $generated@@588)) $generated@@588) ($generated@@156 ($generated@@364 ($generated@@89 $generated@@169 $generated@@4) $generated@@588) ($generated@@206 $generated@@589))))
 :pattern ( ($generated@@192 $generated@@588 ($generated@@206 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@169) (= (type $generated@@591) $generated@@72)) ($generated@@192 $generated@@590 ($generated@@174 $generated@@591))) (and (= ($generated@@231 ($generated@@364 ($generated@@89 $generated@@169 $generated@@2) $generated@@590)) $generated@@590) ($generated@@156 ($generated@@364 ($generated@@89 $generated@@169 $generated@@2) $generated@@590) ($generated@@174 $generated@@591))))
 :pattern ( ($generated@@192 $generated@@590 ($generated@@174 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@169) (= (type $generated@@593) $generated@@72)) ($generated@@192 $generated@@592 ($generated@@525 $generated@@593))) (and (= ($generated@@231 ($generated@@364 ($generated@@296 $generated@@169) $generated@@592)) $generated@@592) ($generated@@156 ($generated@@364 ($generated@@296 $generated@@169) $generated@@592) ($generated@@525 $generated@@593))))
 :pattern ( ($generated@@192 $generated@@592 ($generated@@525 $generated@@593)))
)))
(assert (= ($generated@@83 $generated@@149) $generated@@62))
(assert (= ($generated@@580 $generated@@149) $generated@@68))
(assert (= ($generated@@83 $generated@@153) $generated@@66))
(assert (= ($generated@@580 $generated@@153) $generated@@70))
(assert (= ($generated@@83 $generated@@182) $generated@@67))
(assert (= ($generated@@580 $generated@@182) $generated@@70))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@89 $generated@@169 $generated@@2)) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@594 ($generated@@174 $generated@@595) $generated@@596) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@169) (< 0 ($generated ($generated@@94 $generated@@594 $generated@@597)))) ($generated@@220 $generated@@597 $generated@@595 $generated@@596))
 :pattern ( ($generated@@94 $generated@@594 $generated@@597))
))))
 :pattern ( ($generated@@87 $generated@@594 ($generated@@174 $generated@@595) $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@90) (=> (and (not (= $generated@@598 $generated@@150)) (= ($generated@@179 $generated@@598) $generated@@153)) ($generated@@156 ($generated@@215 $generated@@598) ($generated@@201 $generated@@149))))
 :pattern ( ($generated@@215 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@160) (= (type $generated@@600) $generated@@72)) (= (type $generated@@601) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@216 $generated@@601) (and ($generated@@158 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@72) ($generated@@87 $generated@@599 ($generated@@159 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@87 $generated@@599 ($generated@@159 $generated@@600 $generated@@602) $generated@@601))
))))) ($generated@@220 ($generated@@167 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@220 ($generated@@167 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@160) (= (type $generated@@604) $generated@@72)) (= (type $generated@@605) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@216 $generated@@605) (and ($generated@@158 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@72) ($generated@@87 $generated@@603 ($generated@@159 $generated@@606 $generated@@604) $generated@@605))
 :pattern ( ($generated@@87 $generated@@603 ($generated@@159 $generated@@606 $generated@@604) $generated@@605))
))))) ($generated@@220 ($generated@@168 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@220 ($generated@@168 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@608) $generated@@90)) (and ($generated@@216 $generated@@607) (and (not (= $generated@@608 $generated@@150)) (= ($generated@@179 $generated@@608) $generated@@153)))) ($generated@@156 ($generated@@96 ($generated@@94 $generated@@607 $generated@@608) $generated@@185) ($generated@@201 $generated@@149)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@607 $generated@@608) $generated@@185))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@169) (= (type $generated@@610) $generated@@169)) (= ($generated@@191 ($generated@@211 $generated@@609) ($generated@@211 $generated@@610)) ($generated@@211 ($generated@@191 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@191 ($generated@@211 $generated@@609) ($generated@@211 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@231 ($generated@@211 $generated@@611)) ($generated@@211 ($generated@@231 $generated@@611)))
 :pattern ( ($generated@@231 ($generated@@211 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@297 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@296 $generated@@613)) (= ($generated@@295 $generated@@612) 0)) (= $generated@@612 ($generated@@294 $generated@@613))))
 :pattern ( ($generated@@295 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@89 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@313 ($generated@@95 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@313 $generated@@614) ($generated ($generated@@94 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@313 ($generated@@95 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@619) $generated@@2)) ($generated@@87 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@87 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@621) $generated@@3)) ($generated@@87 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@87 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@623) $generated@@4)) ($generated@@87 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@87 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@625) $generated@@482)) ($generated@@87 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@87 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@627) $generated@@169)) ($generated@@87 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@87 $generated@@627 $generated@@48 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@296 $generated@@169)) (= (type $generated@@629) $generated@@72)) (= ($generated@@156 $generated@@628 ($generated@@525 $generated@@629)) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@295 $generated@@628))) ($generated@@192 ($generated@@526 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@526 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@156 $generated@@628 ($generated@@525 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@296 $generated@@169)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@295 $generated@@632))) (< ($generated@@564 ($generated@@364 $generated@@160 ($generated@@526 $generated@@632 $generated@@633))) ($generated@@631 $generated@@632))))
 :pattern ( ($generated@@564 ($generated@@364 $generated@@160 ($generated@@526 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@321 $generated@@169 $generated@@169)) (= (type $generated@@635) $generated@@72)) (= (type $generated@@636) $generated@@72)) ($generated@@156 $generated@@634 ($generated@@434 $generated@@635 $generated@@636))) (and (and ($generated@@156 ($generated@@319 $generated@@634) ($generated@@201 $generated@@635)) ($generated@@156 ($generated@@375 $generated@@634) ($generated@@201 $generated@@636))) ($generated@@156 ($generated@@408 $generated@@634) ($generated@@201 ($generated@@159 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@156 $generated@@634 ($generated@@434 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@339 $generated@@169 $generated@@169)) (= (type $generated@@638) $generated@@72)) (= (type $generated@@639) $generated@@72)) ($generated@@156 $generated@@637 ($generated@@442 $generated@@638 $generated@@639))) (and (and ($generated@@156 ($generated@@337 $generated@@637) ($generated@@206 $generated@@638)) ($generated@@156 ($generated@@386 $generated@@637) ($generated@@206 $generated@@639))) ($generated@@156 ($generated@@416 $generated@@637) ($generated@@206 ($generated@@159 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@156 $generated@@637 ($generated@@442 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@156 $generated@@640 $generated@@46))
 :pattern ( ($generated@@156 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@156 $generated@@641 $generated@@47))
 :pattern ( ($generated@@156 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@156 $generated@@642 $generated@@44))
 :pattern ( ($generated@@156 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@482) ($generated@@156 $generated@@643 $generated@@45))
 :pattern ( ($generated@@156 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@169) ($generated@@156 $generated@@644 $generated@@48))
 :pattern ( ($generated@@156 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () Bool)
(declare-fun $generated@@649 (T@U) Bool)
(declare-fun $generated@@650 () Int)
(assert  (and (and (= (type $generated@@645) ($generated@@232 $generated@@90 $generated@@4)) (= (type $generated@@646) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@647) $generated@@90)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@651 true))
(let (($generated@@652 true))
(let (($generated@@653  (=> (and (= $generated@@645 ($generated@@230 $generated@@150 $generated@@646 $generated@@60 $generated@@647 ($generated@@215 $generated@@647) ($generated@@96 ($generated@@94 $generated@@646 $generated@@647) $generated@@185))) (= $generated@@648 ($generated@@0 ($generated@@229 $generated@@645 $generated@@647 $generated@@185)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@648) (=> $generated@@648 (and (=> (= (ControlFlow 0 3) 1) $generated@@652) (=> (= (ControlFlow 0 3) 2) $generated@@651)))))))
(let (($generated@@654  (=> (and ($generated@@216 $generated@@646) ($generated@@649 $generated@@646)) (=> (and (and (not (= $generated@@647 $generated@@150)) (and ($generated@@156 $generated@@647 $generated@@182) ($generated@@87 $generated@@647 $generated@@182 $generated@@646))) (and (= 0 $generated@@650) (= (ControlFlow 0 5) 3))) $generated@@653))))
$generated@@654)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) T@U)
(declare-fun $generated@@93 (T@T T@T) T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@201 (T@T T@U T@U) T@U)
(declare-fun $generated@@205 (T@U) Bool)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 (T@U T@U) T@U)
(declare-fun $generated@@209 (T@U T@U) Bool)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@234 (Int) Int)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@U Int) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@342 (T@U T@U) Bool)
(declare-fun $generated@@348 (T@U T@U) Bool)
(declare-fun $generated@@353 (T@U T@U) T@U)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@400 (T@U) Bool)
(declare-fun $generated@@401 (T@U T@U) Bool)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@449 (T@U T@U) T@U)
(declare-fun $generated@@457 (T@U T@U) T@U)
(declare-fun $generated@@474 (T@T) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@503 () T@T)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@579 (T@U) Int)
(declare-fun $generated@@593 (T@T) T@U)
(declare-fun $generated@@599 (T@U T@U T@U) T@U)
(declare-fun $generated@@600 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@601 (T@T T@T) T@T)
(declare-fun $generated@@602 (T@T) T@T)
(declare-fun $generated@@603 (T@T) T@T)
(declare-fun $generated@@604 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@655 (T@U) T@U)
(declare-fun $generated@@659 (T@U) T@U)
(declare-fun $generated@@660 (T@U) T@U)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 (T@U T@U) Bool)
(declare-fun $generated@@730 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 6) (= (type $generated@@44) $generated@@76)) (= (type $generated@@45) $generated@@76)) (= (type $generated@@46) $generated@@76)) (= (type $generated@@47) $generated@@76)) (= (type $generated@@48) $generated@@76)) (= ($generated@@1 $generated@@77) 7)) (= (type $generated@@49) $generated@@77)) (= (type $generated@@50) $generated@@77)) (= (type $generated@@51) $generated@@77)) (= (type $generated@@52) $generated@@77)) (= (type $generated@@53) $generated@@77)) (= (type $generated@@54) $generated@@77)) (= (type $generated@@55) $generated@@77)) (= (type $generated@@56) $generated@@77)) (= (type $generated@@57) $generated@@77)) (= (type $generated@@58) $generated@@77)) (= (type $generated@@59) $generated@@77)) (forall (($generated@@84 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@84)) 8))) (forall (($generated@@85 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@78 $generated@@85))
))) (= (type $generated@@60) ($generated@@78 $generated@@4))) (= ($generated@@1 $generated@@80) 9)) (= (type $generated@@61) $generated@@80)) (= (type $generated@@62) $generated@@77)) (= ($generated@@1 $generated@@81) 10)) (= (type $generated@@63) $generated@@81)) (= (type $generated@@64) $generated@@77)) (= ($generated@@1 $generated@@82) 11)) (= (type $generated@@65) $generated@@82)) (= (type $generated@@66) $generated@@77)) (= (type $generated@@67) $generated@@77)) (= ($generated@@1 $generated@@83) 12)) (= (type $generated@@68) $generated@@83)) (= (type $generated@@69) $generated@@83)) (= (type $generated@@70) $generated@@83)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)) (= (type $generated@@75) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75)
)
(assert (= ($generated@@86 $generated@@60) 0))
(assert (forall (($generated@@88 T@U) ) (! (= (type ($generated@@87 $generated@@88)) $generated@@77)
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (= ($generated@@87 $generated@@44) $generated@@49))
(assert (= ($generated@@87 $generated@@45) $generated@@50))
(assert (= ($generated@@87 $generated@@46) $generated@@51))
(assert (= ($generated@@87 $generated@@47) $generated@@52))
(assert (= ($generated@@87 $generated@@48) $generated@@53))
(assert (forall (($generated@@90 T@U) ) (! (= (type ($generated@@89 $generated@@90)) $generated@@80)
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (= ($generated@@89 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (= ($generated@@1 ($generated@@93 $generated@@102 $generated@@103)) 13)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@93 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@97 ($generated@@93 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@93 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@97 (type $generated@@108))))
(= (type ($generated@@98 $generated@@108 $generated@@109)) $generated@@110))
 :pattern ( ($generated@@98 $generated@@108 $generated@@109))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 (type $generated@@113)))
(let (($generated@@115 (type $generated@@112)))
(= (type ($generated@@99 $generated@@111 $generated@@112 $generated@@113)) ($generated@@93 $generated@@115 $generated@@114))))
 :pattern ( ($generated@@99 $generated@@111 $generated@@112 $generated@@113))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@97 (type $generated@@116))))
 (=> (= (type $generated@@118) $generated@@119) (= ($generated@@98 ($generated@@99 $generated@@116 $generated@@117 $generated@@118) $generated@@117) $generated@@118)))
 :weight 0
))) (and (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@98 ($generated@@99 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@98 $generated@@121 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@98 $generated@@125 $generated@@127)))
 :weight 0
)))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@79 (type $generated@@129))))
(= (type ($generated@@100 $generated@@128 $generated@@129)) $generated@@130))
 :pattern ( ($generated@@100 $generated@@128 $generated@@129))
))) (= ($generated@@1 $generated@@95) 15)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= (type ($generated@@101 $generated@@131 $generated@@132 $generated@@133)) $generated@@95)
 :pattern ( ($generated@@101 $generated@@131 $generated@@132 $generated@@133))
))) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 ($generated@@79 (type $generated@@135))))
 (=> (= (type $generated@@136) $generated@@137) (= ($generated@@100 ($generated@@101 $generated@@134 $generated@@135 $generated@@136) $generated@@135) $generated@@136)))
 :weight 0
))) (and (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@100 ($generated@@101 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@100 $generated@@139 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@100 ($generated@@101 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@100 $generated@@143 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 Int) ) (! (= (type ($generated@@92 $generated@@146)) $generated@@76)
 :pattern ( ($generated@@92 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@2) (= (type $generated@@148) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
 :pattern ( ($generated@@91 $generated@@147 ($generated@@92 0) $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@151) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@149 $generated@@150 $generated@@151)) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@94) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@150 $generated@@152) $generated@@60))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@151 $generated@@152) $generated@@60)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@151 $generated@@152) $generated@@60))
)))
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert  (and (= (type $generated@@153) $generated@@76) (= (type $generated@@154) $generated@@94)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@94) (= (type $generated@@156) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@155 $generated@@153 $generated@@156)  (or (= $generated@@155 $generated@@154) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@155 $generated@@153 $generated@@156))
)))
(assert (= (type $generated@@157) $generated@@76))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@94) (= (type $generated@@159) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@158 $generated@@157 $generated@@159)  (or (= $generated@@158 $generated@@154) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@159 $generated@@158) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@158 $generated@@157 $generated@@159))
)))
(assert  (and (= (type $generated@@160) ($generated@@78 $generated@@2)) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@76)
 :pattern ( ($generated@@162 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@166) $generated@@94)) (and ($generated@@161 $generated@@165) (and (not (= $generated@@166 $generated@@154)) (= ($generated@@162 $generated@@166) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@165 $generated@@166) $generated@@160) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@165 $generated@@166) $generated@@160))
)))
(assert (= (type $generated@@167) ($generated@@78 $generated@@2)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@169) $generated@@94)) (and ($generated@@161 $generated@@168) (and (not (= $generated@@169 $generated@@154)) (= ($generated@@162 $generated@@169) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@168 $generated@@169) $generated@@167) $generated@@46))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@168 $generated@@169) $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= (type $generated@@170) $generated@@2) ($generated@@163 $generated@@170 ($generated@@92 0)))
 :pattern ( ($generated@@163 $generated@@170 ($generated@@92 0)))
)))
(assert  (and (= ($generated@@1 $generated@@173) 16) (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@174 $generated@@175)) $generated@@76)
 :pattern ( ($generated@@172 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@76) (= (type $generated@@177) $generated@@76)) (= (type $generated@@178) $generated@@173)) ($generated@@163 $generated@@178 ($generated@@172 $generated@@176 $generated@@177))) ($generated@@171 $generated@@178))
 :pattern ( ($generated@@171 $generated@@178) ($generated@@163 $generated@@178 ($generated@@172 $generated@@176 $generated@@177)))
)))
(assert  (and (and (= ($generated@@1 $generated@@182) 17) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@180 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@180 $generated@@183))
))) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@181 $generated@@184)) $generated@@182)
 :pattern ( ($generated@@181 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) $generated@@173) (= (type $generated@@186) $generated@@173)) true) (= ($generated@@179 $generated@@185 $generated@@186)  (and (= ($generated@@180 $generated@@185) ($generated@@180 $generated@@186)) (= ($generated@@181 $generated@@185) ($generated@@181 $generated@@186)))))
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@76)
 :pattern ( ($generated@@187 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@190) ($generated@@93 $generated@@182 $generated@@2)) (= (type $generated@@191) $generated@@76)) ($generated@@163 $generated@@190 ($generated@@187 $generated@@191))) ($generated@@188 $generated@@190))
 :pattern ( ($generated@@163 $generated@@190 ($generated@@187 $generated@@191)))
)))
(assert (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@94) (= ($generated@@163 $generated@@192 $generated@@157)  (or (= $generated@@192 $generated@@154) (= ($generated@@162 $generated@@192) $generated@@157))))
 :pattern ( ($generated@@163 $generated@@192 $generated@@157))
)))
(assert (= (type $generated@@193) $generated@@76))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@94) (= (type $generated@@195) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@194 $generated@@193 $generated@@195) ($generated@@91 $generated@@194 $generated@@157 $generated@@195)))
 :pattern ( ($generated@@91 $generated@@194 $generated@@193 $generated@@195))
)))
(assert  (and (and (forall (($generated@@199 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@199)) 18)) (forall (($generated@@200 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@197 $generated@@200))
))) (= (type $generated@@196) ($generated@@78 ($generated@@197 $generated@@182)))))
(assert (= ($generated@@86 $generated@@196) 0))
(assert (forall (($generated@@202 T@T) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (= (type ($generated@@201 $generated@@202 $generated@@203 $generated@@204)) ($generated@@78 $generated@@202))
 :pattern ( ($generated@@201 $generated@@202 $generated@@203 $generated@@204))
)))
(assert (= ($generated@@201 ($generated@@197 $generated@@182) $generated@@65 $generated@@73) $generated@@196))
(assert ($generated@@205 $generated@@196))
(assert (= (type $generated@@206) ($generated@@78 ($generated@@197 $generated@@182))))
(assert (= ($generated@@86 $generated@@206) 0))
(assert (= ($generated@@201 ($generated@@197 $generated@@182) $generated@@65 $generated@@74) $generated@@206))
(assert ($generated@@205 $generated@@206))
(assert (= (type $generated@@207) ($generated@@78 ($generated@@93 $generated@@182 $generated@@4))))
(assert (= ($generated@@86 $generated@@207) 0))
(assert (= ($generated@@201 ($generated@@93 $generated@@182 $generated@@4) $generated@@65 $generated@@75) $generated@@207))
(assert ($generated@@205 $generated@@207))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (= (type ($generated@@208 $generated@@210 $generated@@211)) $generated@@173)
 :pattern ( ($generated@@208 $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (and (and (= (type $generated@@212) $generated@@76) (= (type $generated@@213) $generated@@76)) (= (type $generated@@214) $generated@@182)) (= (type $generated@@215) $generated@@182)) (= ($generated@@163 ($generated@@208 $generated@@214 $generated@@215) ($generated@@172 $generated@@212 $generated@@213))  (and ($generated@@209 $generated@@214 $generated@@212) ($generated@@209 $generated@@215 $generated@@213))))
 :pattern ( ($generated@@163 ($generated@@208 $generated@@214 $generated@@215) ($generated@@172 $generated@@212 $generated@@213)))
)))
(assert (= ($generated@@86 $generated@@160) 0))
(assert (= ($generated@@201 $generated@@2 $generated@@65 $generated@@71) $generated@@160))
(assert  (not ($generated@@205 $generated@@160)))
(assert (= ($generated@@86 $generated@@167) 0))
(assert (= ($generated@@201 $generated@@2 $generated@@65 $generated@@72) $generated@@167))
(assert  (not ($generated@@205 $generated@@167)))
(assert (forall (($generated@@217 T@U) ) (! (= (type ($generated@@216 $generated@@217)) $generated@@76)
 :pattern ( ($generated@@216 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (and (= (type $generated@@218) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@219) $generated@@94)) (and ($generated@@161 $generated@@218) (and (not (= $generated@@219 $generated@@154)) (= ($generated@@162 $generated@@219) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@218 $generated@@219) $generated@@196) ($generated@@216 $generated@@46)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@218 $generated@@219) $generated@@196))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and (= (type $generated@@220) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@221) $generated@@94)) (and ($generated@@161 $generated@@220) (and (not (= $generated@@221 $generated@@154)) (= ($generated@@162 $generated@@221) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@220 $generated@@221) $generated@@206) ($generated@@216 $generated@@46)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@220 $generated@@221) $generated@@206))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@173) (= (type $generated@@223) $generated@@173)) (= ($generated@@179 $generated@@222 $generated@@223) (= $generated@@222 $generated@@223)))
 :pattern ( ($generated@@179 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ) (! (= (type ($generated@@224 $generated@@225)) $generated@@76)
 :pattern ( ($generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) ($generated@@93 $generated@@182 $generated@@4)) (= (type $generated@@227) $generated@@76)) (= ($generated@@163 $generated@@226 ($generated@@224 $generated@@227)) (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@182) ($generated@@0 ($generated@@98 $generated@@226 $generated@@228))) ($generated@@209 $generated@@228 $generated@@227))
 :pattern ( ($generated@@98 $generated@@226 $generated@@228))
))))
 :pattern ( ($generated@@163 $generated@@226 ($generated@@224 $generated@@227)))
)))
(assert (forall (($generated@@230 T@U) ) (! (= (type ($generated@@229 $generated@@230)) $generated@@76)
 :pattern ( ($generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) ($generated@@93 $generated@@182 $generated@@4)) (= (type $generated@@232) $generated@@76)) (= ($generated@@163 $generated@@231 ($generated@@229 $generated@@232)) (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@182) ($generated@@0 ($generated@@98 $generated@@231 $generated@@233))) ($generated@@209 $generated@@233 $generated@@232))
 :pattern ( ($generated@@98 $generated@@231 $generated@@233))
))))
 :pattern ( ($generated@@163 $generated@@231 ($generated@@229 $generated@@232)))
)))
(assert (forall (($generated@@235 Int) ) (! (= ($generated@@234 $generated@@235) $generated@@235)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ) (! (let (($generated@@238 (type $generated@@237)))
(= (type ($generated@@236 $generated@@237)) $generated@@238))
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= ($generated@@236 $generated@@239) $generated@@239)
 :pattern ( ($generated@@236 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(= (type ($generated@@240 $generated@@241 $generated@@242)) ($generated@@197 $generated@@243)))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) ($generated@@197 $generated@@182)) (= (type $generated@@245) $generated@@182)) (= (type $generated@@246) $generated@@76)) (and ($generated@@163 $generated@@244 ($generated@@216 $generated@@246)) ($generated@@209 $generated@@245 $generated@@246))) ($generated@@163 ($generated@@240 $generated@@244 $generated@@245) ($generated@@216 $generated@@246)))
 :pattern ( ($generated@@163 ($generated@@240 $generated@@244 $generated@@245) ($generated@@216 $generated@@246)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) ($generated@@93 $generated@@182 $generated@@4))
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@250) $generated@@94)) (=> (and (and ($generated@@161 $generated@@249) (and (not (= $generated@@250 $generated@@154)) (= ($generated@@162 $generated@@250) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@249 $generated@@250) $generated@@60))) ($generated@@91 ($generated@@247 $generated@@250) ($generated@@224 $generated@@153) $generated@@249)))
 :pattern ( ($generated@@247 $generated@@250) ($generated@@100 ($generated@@98 $generated@@249 $generated@@250) $generated@@60))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) ($generated@@93 $generated@@182 $generated@@4))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@254) $generated@@94)) (=> (and (and ($generated@@161 $generated@@253) (and (not (= $generated@@254 $generated@@154)) (= ($generated@@162 $generated@@254) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@253 $generated@@254) $generated@@60))) ($generated@@91 ($generated@@251 $generated@@254) ($generated@@224 $generated@@153) $generated@@253)))
 :pattern ( ($generated@@251 $generated@@254) ($generated@@100 ($generated@@98 $generated@@253 $generated@@254) $generated@@60))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@76) (= (type $generated@@257) $generated@@76)) (= (type $generated@@258) $generated@@182)) (= (type $generated@@259) $generated@@182)) (= (type $generated@@260) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@161 $generated@@260)) (= ($generated@@91 ($generated@@208 $generated@@258 $generated@@259) ($generated@@172 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@91 ($generated@@208 $generated@@258 $generated@@259) ($generated@@172 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@81)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@173) (= ($generated@@171 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@63)))
 :pattern ( ($generated@@171 $generated@@263))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 Int) ) (! (let (($generated@@269 ($generated@@198 (type $generated@@267))))
(= (type ($generated@@266 $generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@266 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@198 (type $generated@@270))))
 (=> (and (= (type $generated@@270) ($generated@@197 $generated@@272)) (= (type $generated@@271) ($generated@@197 $generated@@272))) (= ($generated@@264 $generated@@270 $generated@@271)  (and (= ($generated@@265 $generated@@270) ($generated@@265 $generated@@271)) (forall (($generated@@273 Int) ) (!  (=> (and (<= 0 $generated@@273) (< $generated@@273 ($generated@@265 $generated@@270))) (= ($generated@@266 $generated@@270 $generated@@273) ($generated@@266 $generated@@271 $generated@@273)))
 :pattern ( ($generated@@266 $generated@@270 $generated@@273))
 :pattern ( ($generated@@266 $generated@@271 $generated@@273))
))))))
 :pattern ( ($generated@@264 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@173) ($generated@@171 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@182) (= (type $generated@@276) $generated@@182)) (= $generated@@274 ($generated@@208 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@171 $generated@@274))
)))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@197 $generated@@278))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@265 ($generated@@277 $generated@@279)) 0)
 :pattern ( ($generated@@277 $generated@@279))
)))
(assert ($generated@@205 $generated@@60))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (let (($generated@@282 (type $generated@@281)))
 (=> (= (type $generated@@280) ($generated@@197 $generated@@282)) (= ($generated@@265 ($generated@@240 $generated@@280 $generated@@281)) (+ 1 ($generated@@265 $generated@@280)))))
 :pattern ( ($generated@@240 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@182)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@76) (= (type $generated@@287) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@255 ($generated@@283 $generated@@285) $generated@@286 $generated@@287) ($generated@@91 $generated@@285 $generated@@286 $generated@@287)))
 :pattern ( ($generated@@255 ($generated@@283 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@288) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@289) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@290) $generated@@182)) (= (type $generated@@291) $generated@@76)) ($generated@@149 $generated@@288 $generated@@289)) ($generated@@255 $generated@@290 $generated@@291 $generated@@288)) ($generated@@255 $generated@@290 $generated@@291 $generated@@289))
 :pattern ( ($generated@@149 $generated@@288 $generated@@289) ($generated@@255 $generated@@290 $generated@@291 $generated@@288))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@292) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@293) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@295) $generated@@76)) ($generated@@149 $generated@@292 $generated@@293)) ($generated@@91 $generated@@294 $generated@@295 $generated@@292)) ($generated@@91 $generated@@294 $generated@@295 $generated@@293))
 :pattern ( ($generated@@149 $generated@@292 $generated@@293) ($generated@@91 $generated@@294 $generated@@295 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@297) $generated@@94)) (=> (and (and ($generated@@161 $generated@@296) (and (not (= $generated@@297 $generated@@154)) (= ($generated@@162 $generated@@297) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@296 $generated@@297) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@296 $generated@@297) $generated@@160) $generated@@46 $generated@@296)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@296 $generated@@297) $generated@@160))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@299) $generated@@94)) (=> (and (and ($generated@@161 $generated@@298) (and (not (= $generated@@299 $generated@@154)) (= ($generated@@162 $generated@@299) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@298 $generated@@299) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@298 $generated@@299) $generated@@167) $generated@@46 $generated@@298)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@298 $generated@@299) $generated@@167))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@93 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@96 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@93 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@98 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@93 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@98 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@98 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 20)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@93 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@98 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@98 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@343) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@344) ($generated@@93 $generated@@94 $generated@@95))) ($generated@@342 $generated@@343 $generated@@344)) (and ($generated@@149 $generated@@343 $generated@@344) (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@79 (type $generated@@346))))
 (=> (and (and (= (type $generated@@345) $generated@@94) (= (type $generated@@346) ($generated@@78 $generated@@347))) (not ($generated@@205 $generated@@346))) (= ($generated@@100 ($generated@@98 $generated@@343 $generated@@345) $generated@@346) ($generated@@100 ($generated@@98 $generated@@344 $generated@@345) $generated@@346))))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@344 $generated@@345) $generated@@346))
))))
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@96 (type $generated@@349))))
 (=> (and (= (type $generated@@349) ($generated@@93 $generated@@351 $generated@@4)) (= (type $generated@@350) ($generated@@93 $generated@@351 $generated@@4))) (= ($generated@@348 $generated@@349 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (= ($generated@@0 ($generated@@98 $generated@@349 $generated@@352)) ($generated@@0 ($generated@@98 $generated@@350 $generated@@352))))
 :pattern ( ($generated@@98 $generated@@349 $generated@@352))
 :pattern ( ($generated@@98 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@198 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354 $generated@@355)) ($generated@@197 $generated@@356)))
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@198 (type $generated@@357))))
 (=> (and (= (type $generated@@357) ($generated@@197 $generated@@359)) (= (type $generated@@358) ($generated@@197 $generated@@359))) (= ($generated@@265 ($generated@@353 $generated@@357 $generated@@358)) (+ ($generated@@265 $generated@@357) ($generated@@265 $generated@@358)))))
 :pattern ( ($generated@@265 ($generated@@353 $generated@@357 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@96 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@93 $generated@@361 $generated@@2)) (= ($generated@@188 $generated@@360) (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@361) (and (<= 0 ($generated ($generated@@98 $generated@@360 $generated@@362))) (<= ($generated ($generated@@98 $generated@@360 $generated@@362)) ($generated@@300 $generated@@360))))
 :pattern ( ($generated@@98 $generated@@360 $generated@@362))
)))))
 :pattern ( ($generated@@188 $generated@@360))
)))
(assert (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@182) ($generated@@209 $generated@@366 $generated@@153)) (and (= ($generated@@283 ($generated@@363 $generated@@94 $generated@@366)) $generated@@366) ($generated@@163 ($generated@@363 $generated@@94 $generated@@366) $generated@@153)))
 :pattern ( ($generated@@209 $generated@@366 $generated@@153))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@182) ($generated@@209 $generated@@367 $generated@@157)) (and (= ($generated@@283 ($generated@@363 $generated@@94 $generated@@367)) $generated@@367) ($generated@@163 ($generated@@363 $generated@@94 $generated@@367) $generated@@157)))
 :pattern ( ($generated@@209 $generated@@367 $generated@@157))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@182) ($generated@@209 $generated@@368 $generated@@193)) (and (= ($generated@@283 ($generated@@363 $generated@@94 $generated@@368)) $generated@@368) ($generated@@163 ($generated@@363 $generated@@94 $generated@@368) $generated@@193)))
 :pattern ( ($generated@@209 $generated@@368 $generated@@193))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (= (type $generated@@369) $generated@@94) (= ($generated@@163 $generated@@369 $generated@@193)  (and ($generated@@163 $generated@@369 $generated@@157) (not (= $generated@@369 $generated@@154)))))
 :pattern ( ($generated@@163 $generated@@369 $generated@@193))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 Int) ($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
 (=> (= (type $generated@@370) ($generated@@197 $generated@@373)) (and (=> (= $generated@@371 ($generated@@265 $generated@@370)) (= ($generated@@266 ($generated@@240 $generated@@370 $generated@@372) $generated@@371) $generated@@372)) (=> (not (= $generated@@371 ($generated@@265 $generated@@370))) (= ($generated@@266 ($generated@@240 $generated@@370 $generated@@372) $generated@@371) ($generated@@266 $generated@@370 $generated@@371))))))
 :pattern ( ($generated@@266 ($generated@@240 $generated@@370 $generated@@372) $generated@@371))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@375) $generated@@94)) (=> (and (and ($generated@@161 $generated@@374) (and (not (= $generated@@375 $generated@@154)) (= ($generated@@162 $generated@@375) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@374 $generated@@375) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@374 $generated@@375) $generated@@196) ($generated@@216 $generated@@46) $generated@@374)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@374 $generated@@375) $generated@@196))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@377) $generated@@94)) (=> (and (and ($generated@@161 $generated@@376) (and (not (= $generated@@377 $generated@@154)) (= ($generated@@162 $generated@@377) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@376 $generated@@377) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@376 $generated@@377) $generated@@206) ($generated@@216 $generated@@46) $generated@@376)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@376 $generated@@377) $generated@@206))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@310 (type $generated@@378))))
(let (($generated@@380 ($generated@@309 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@308 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@307 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@98 ($generated@@306 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@306 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@310 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@93 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@310 (type $generated@@385))))
(let (($generated@@387 ($generated@@309 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@308 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@307 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@98 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@328 (type $generated@@389))))
(let (($generated@@391 ($generated@@327 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@326 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@325 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) ($generated@@0 ($generated@@98 ($generated@@324 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@324 $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@328 (type $generated@@394))))
(= (type ($generated@@393 $generated@@394)) ($generated@@93 $generated@@395 $generated@@4)))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@328 (type $generated@@396))))
(let (($generated@@398 ($generated@@327 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@326 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@325 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@397) ($generated@@0 ($generated@@98 ($generated@@393 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@393 $generated@@396))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@403) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@404) $generated@@94)) (=> (and (and (and ($generated@@161 $generated@@402) ($generated@@161 $generated@@403)) (and (not (= $generated@@404 $generated@@154)) ($generated@@163 $generated@@404 $generated@@193))) (and ($generated@@400 $generated@@402) ($generated@@149 $generated@@402 $generated@@403))) (=> (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@79 (type $generated@@406))))
 (=> (and (and (= (type $generated@@405) $generated@@94) (= (type $generated@@406) ($generated@@78 $generated@@407))) (and (not (= $generated@@405 $generated@@154)) (or (or (= $generated@@405 $generated@@404) ($generated@@0 ($generated@@98 ($generated@@247 $generated@@404) ($generated@@283 $generated@@405)))) ($generated@@0 ($generated@@98 ($generated@@100 ($generated@@98 $generated@@402 $generated@@404) $generated@@207) ($generated@@283 $generated@@405)))))) (= ($generated@@100 ($generated@@98 $generated@@402 $generated@@405) $generated@@406) ($generated@@100 ($generated@@98 $generated@@403 $generated@@405) $generated@@406))))
 :no-pattern (type $generated@@405)
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
)) (= ($generated@@401 $generated@@402 $generated@@404) ($generated@@401 $generated@@403 $generated@@404)))))
 :pattern ( ($generated@@400 $generated@@402) ($generated@@149 $generated@@402 $generated@@403) ($generated@@401 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@93 $generated@@182 $generated@@2)) (= (type $generated@@409) $generated@@76)) (= ($generated@@163 $generated@@408 ($generated@@187 $generated@@409)) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@182) (< 0 ($generated ($generated@@98 $generated@@408 $generated@@410)))) ($generated@@209 $generated@@410 $generated@@409))
 :pattern ( ($generated@@98 $generated@@408 $generated@@410))
))))
 :pattern ( ($generated@@163 $generated@@408 ($generated@@187 $generated@@409)))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@93 $generated@@182 $generated@@4)) (= (type $generated@@412) $generated@@76)) (= (type $generated@@413) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@411 ($generated@@224 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@182) ($generated@@0 ($generated@@98 $generated@@411 $generated@@414))) ($generated@@255 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@98 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@91 $generated@@411 ($generated@@224 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (= (type $generated@@415) ($generated@@93 $generated@@182 $generated@@4)) (= (type $generated@@416) $generated@@76)) (= (type $generated@@417) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@415 ($generated@@229 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@182) ($generated@@0 ($generated@@98 $generated@@415 $generated@@418))) ($generated@@255 $generated@@418 $generated@@416 $generated@@417))
 :pattern ( ($generated@@98 $generated@@415 $generated@@418))
))))
 :pattern ( ($generated@@91 $generated@@415 ($generated@@229 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(= ($generated ($generated@@98 ($generated@@301 $generated@@420) $generated@@419)) 0))
 :pattern ( (let (($generated@@420 (type $generated@@419)))
($generated@@98 ($generated@@301 $generated@@420) $generated@@419)))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@422) $generated@@94)) (=> (and (and ($generated@@161 $generated@@421) (and (not (= $generated@@422 $generated@@154)) (= ($generated@@162 $generated@@422) $generated@@157))) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@421 $generated@@422) $generated@@60))) ($generated@@91 ($generated@@100 ($generated@@98 $generated@@421 $generated@@422) $generated@@207) ($generated@@224 $generated@@153) $generated@@421)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@421 $generated@@422) $generated@@207))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) ($generated@@93 $generated@@182 $generated@@4))
 :pattern ( ($generated@@423 $generated@@425))
)) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@310 (type $generated@@426))))
(let (($generated@@428 ($generated@@309 (type $generated@@426))))
(= (type ($generated@@424 $generated@@426)) ($generated@@93 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@424 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@308 $generated@@182 $generated@@182)) (= (type $generated@@430) $generated@@182)) (= ($generated@@0 ($generated@@98 ($generated@@423 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@98 ($generated@@306 $generated@@429) ($generated@@180 ($generated@@363 $generated@@173 $generated@@430)))) (= ($generated@@98 ($generated@@424 $generated@@429) ($generated@@180 ($generated@@363 $generated@@173 $generated@@430))) ($generated@@181 ($generated@@363 $generated@@173 $generated@@430))))))
 :pattern ( ($generated@@98 ($generated@@423 $generated@@429) $generated@@430))
)))
(assert  (and (forall (($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@433)) ($generated@@93 $generated@@182 $generated@@4))
 :pattern ( ($generated@@431 $generated@@433))
)) (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@328 (type $generated@@434))))
(let (($generated@@436 ($generated@@327 (type $generated@@434))))
(= (type ($generated@@432 $generated@@434)) ($generated@@93 $generated@@436 $generated@@435))))
 :pattern ( ($generated@@432 $generated@@434))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) ($generated@@326 $generated@@182 $generated@@182)) (= (type $generated@@438) $generated@@182)) (= ($generated@@0 ($generated@@98 ($generated@@431 $generated@@437) $generated@@438))  (and ($generated@@0 ($generated@@98 ($generated@@324 $generated@@437) ($generated@@180 ($generated@@363 $generated@@173 $generated@@438)))) (= ($generated@@98 ($generated@@432 $generated@@437) ($generated@@180 ($generated@@363 $generated@@173 $generated@@438))) ($generated@@181 ($generated@@363 $generated@@173 $generated@@438))))))
 :pattern ( ($generated@@98 ($generated@@431 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(let (($generated@@442 ($generated@@309 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@308 $generated@@442 $generated@@441)) (= ($generated@@0 ($generated@@98 ($generated@@382 $generated@@439) $generated@@440)) (exists (($generated@@443 T@U) ) (!  (and (= (type $generated@@443) $generated@@442) (and ($generated@@0 ($generated@@98 ($generated@@306 $generated@@439) $generated@@443)) (= $generated@@440 ($generated@@98 ($generated@@424 $generated@@439) $generated@@443))))
 :pattern ( ($generated@@98 ($generated@@306 $generated@@439) $generated@@443))
 :pattern ( ($generated@@98 ($generated@@424 $generated@@439) $generated@@443))
))))))
 :pattern ( ($generated@@98 ($generated@@382 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@327 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@326 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@98 ($generated@@393 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@98 ($generated@@324 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@98 ($generated@@432 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@98 ($generated@@324 $generated@@444) $generated@@448))
 :pattern ( ($generated@@98 ($generated@@432 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@98 ($generated@@393 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@450 $generated@@451)) $generated@@76)
 :pattern ( ($generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (= (type $generated@@452) ($generated@@308 $generated@@182 $generated@@182)) (= (type $generated@@453) $generated@@76)) (= (type $generated@@454) $generated@@76)) (= (type $generated@@455) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@182) ($generated@@0 ($generated@@98 ($generated@@306 $generated@@452) $generated@@456))) (and ($generated@@255 ($generated@@98 ($generated@@424 $generated@@452) $generated@@456) $generated@@454 $generated@@455) ($generated@@255 $generated@@456 $generated@@453 $generated@@455)))
 :pattern ( ($generated@@98 ($generated@@424 $generated@@452) $generated@@456))
 :pattern ( ($generated@@98 ($generated@@306 $generated@@452) $generated@@456))
))))
 :pattern ( ($generated@@91 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@458 $generated@@459)) $generated@@76)
 :pattern ( ($generated@@457 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (and (= (type $generated@@460) ($generated@@326 $generated@@182 $generated@@182)) (= (type $generated@@461) $generated@@76)) (= (type $generated@@462) $generated@@76)) (= (type $generated@@463) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@182) ($generated@@0 ($generated@@98 ($generated@@324 $generated@@460) $generated@@464))) (and ($generated@@255 ($generated@@98 ($generated@@432 $generated@@460) $generated@@464) $generated@@462 $generated@@463) ($generated@@255 $generated@@464 $generated@@461 $generated@@463)))
 :pattern ( ($generated@@98 ($generated@@432 $generated@@460) $generated@@464))
 :pattern ( ($generated@@98 ($generated@@324 $generated@@460) $generated@@464))
))))
 :pattern ( ($generated@@91 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@96 (type $generated@@465))))
 (=> (and (and (= (type $generated@@465) ($generated@@93 $generated@@467 $generated@@4)) (= (type $generated@@466) ($generated@@93 $generated@@467 $generated@@4))) ($generated@@348 $generated@@465 $generated@@466)) (= $generated@@465 $generated@@466)))
 :pattern ( ($generated@@348 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@198 (type $generated@@468))))
 (=> (and (and (= (type $generated@@468) ($generated@@197 $generated@@470)) (= (type $generated@@469) ($generated@@197 $generated@@470))) ($generated@@264 $generated@@468 $generated@@469)) (= $generated@@468 $generated@@469)))
 :pattern ( ($generated@@264 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@471) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@472) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@473) ($generated@@93 $generated@@94 $generated@@95))) (not (= $generated@@471 $generated@@473))) (and ($generated@@149 $generated@@471 $generated@@472) ($generated@@149 $generated@@472 $generated@@473))) ($generated@@149 $generated@@471 $generated@@473))
 :pattern ( ($generated@@149 $generated@@471 $generated@@472) ($generated@@149 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@T) ) (! (= (type ($generated@@474 $generated@@475)) ($generated@@93 $generated@@475 $generated@@4))
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@328 (type $generated@@476))))
(let (($generated@@478 ($generated@@327 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@326 $generated@@478 $generated@@477)) (= (= $generated@@476 ($generated@@325 $generated@@478 $generated@@477)) (= ($generated@@324 $generated@@476) ($generated@@474 $generated@@478))))))
 :pattern ( ($generated@@324 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@328 (type $generated@@479))))
(let (($generated@@481 ($generated@@327 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@326 $generated@@481 $generated@@480)) (= (= $generated@@479 ($generated@@325 $generated@@481 $generated@@480)) (= ($generated@@393 $generated@@479) ($generated@@474 $generated@@480))))))
 :pattern ( ($generated@@393 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@328 (type $generated@@482))))
(let (($generated@@484 ($generated@@327 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@326 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@325 $generated@@484 $generated@@483)) (= ($generated@@431 $generated@@482) ($generated@@474 $generated@@182))))))
 :pattern ( ($generated@@431 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@310 (type $generated@@485))))
(let (($generated@@487 ($generated@@309 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@308 $generated@@487 $generated@@486)) (or (= $generated@@485 ($generated@@307 $generated@@487 $generated@@486)) (exists (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (and (and (= (type $generated@@488) $generated@@182) (= (type $generated@@489) $generated@@182)) ($generated@@0 ($generated@@98 ($generated@@423 $generated@@485) ($generated@@283 ($generated@@208 $generated@@488 $generated@@489)))))
 :no-pattern (type $generated@@488)
 :no-pattern (type $generated@@489)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
))))))
 :pattern ( ($generated@@423 $generated@@485))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@328 (type $generated@@490))))
(let (($generated@@492 ($generated@@327 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@326 $generated@@492 $generated@@491)) (or (= $generated@@490 ($generated@@325 $generated@@492 $generated@@491)) (exists (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (and (and (= (type $generated@@493) $generated@@182) (= (type $generated@@494) $generated@@182)) ($generated@@0 ($generated@@98 ($generated@@431 $generated@@490) ($generated@@283 ($generated@@208 $generated@@493 $generated@@494)))))
 :no-pattern (type $generated@@493)
 :no-pattern (type $generated@@494)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
))))))
 :pattern ( ($generated@@431 $generated@@490))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@82)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@T) ) (!  (=> (and (= (type $generated@@497) $generated@@82) (= (type $generated@@498) $generated@@80)) (and (= ($generated@@495 ($generated@@201 $generated@@499 $generated@@497 $generated@@498)) $generated@@497) (= ($generated@@89 ($generated@@201 $generated@@499 $generated@@497 $generated@@498)) $generated@@498)))
 :pattern ( ($generated@@201 $generated@@499 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@182) ($generated@@209 $generated@@500 $generated@@46)) (and (= ($generated@@283 ($generated@@363 $generated@@2 $generated@@500)) $generated@@500) ($generated@@163 ($generated@@363 $generated@@2 $generated@@500) $generated@@46)))
 :pattern ( ($generated@@209 $generated@@500 $generated@@46))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@182) ($generated@@209 $generated@@501 $generated@@47)) (and (= ($generated@@283 ($generated@@363 $generated@@3 $generated@@501)) $generated@@501) ($generated@@163 ($generated@@363 $generated@@3 $generated@@501) $generated@@47)))
 :pattern ( ($generated@@209 $generated@@501 $generated@@47))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@182) ($generated@@209 $generated@@502 $generated@@44)) (and (= ($generated@@283 ($generated@@363 $generated@@4 $generated@@502)) $generated@@502) ($generated@@163 ($generated@@363 $generated@@4 $generated@@502) $generated@@44)))
 :pattern ( ($generated@@209 $generated@@502 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@503) 21))
(assert (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@182) ($generated@@209 $generated@@504 $generated@@45)) (and (= ($generated@@283 ($generated@@363 $generated@@503 $generated@@504)) $generated@@504) ($generated@@163 ($generated@@363 $generated@@503 $generated@@504) $generated@@45)))
 :pattern ( ($generated@@209 $generated@@504 $generated@@45))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@76) (= ($generated@@209 ($generated@@283 $generated@@505) $generated@@506) ($generated@@163 $generated@@505 $generated@@506)))
 :pattern ( ($generated@@209 ($generated@@283 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@96 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@93 $generated@@508 $generated@@2)) (<= 0 ($generated@@300 $generated@@507))))
 :pattern ( ($generated@@300 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@198 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@197 $generated@@510)) (<= 0 ($generated@@265 $generated@@509))))
 :pattern ( ($generated@@265 $generated@@509))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@76)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@76) (= (type $generated@@514) $generated@@76)) (= ($generated@@511 ($generated@@449 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@449 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@76)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@76) (= (type $generated@@518) $generated@@76)) (= ($generated@@515 ($generated@@449 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@449 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@76) (= (type $generated@@520) $generated@@76)) (= ($generated@@87 ($generated@@449 $generated@@519 $generated@@520)) $generated@@58))
 :pattern ( ($generated@@449 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@76)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@76) (= (type $generated@@524) $generated@@76)) (= ($generated@@521 ($generated@@457 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@457 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@76)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@76) (= (type $generated@@528) $generated@@76)) (= ($generated@@525 ($generated@@457 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@457 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@76) (= (type $generated@@530) $generated@@76)) (= ($generated@@87 ($generated@@457 $generated@@529 $generated@@530)) $generated@@59))
 :pattern ( ($generated@@457 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@182) (= (type $generated@@532) $generated@@182)) (= ($generated@@261 ($generated@@208 $generated@@531 $generated@@532)) $generated@@63))
 :pattern ( ($generated@@208 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@76)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@76) (= (type $generated@@536) $generated@@76)) (= ($generated@@533 ($generated@@172 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@172 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@76)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@76) (= (type $generated@@540) $generated@@76)) (= ($generated@@537 ($generated@@172 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@172 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@182) (= (type $generated@@542) $generated@@182)) (= ($generated@@180 ($generated@@208 $generated@@541 $generated@@542)) $generated@@541))
 :pattern ( ($generated@@208 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@182) (= (type $generated@@544) $generated@@182)) (= ($generated@@181 ($generated@@208 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@208 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@94) ($generated@@163 $generated@@545 $generated@@153))
 :pattern ( ($generated@@163 $generated@@545 $generated@@153))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@197 $generated@@182)) (= (type $generated@@547) $generated@@76)) (= (type $generated@@548) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@546 ($generated@@216 $generated@@547) $generated@@548) (forall (($generated@@549 Int) ) (!  (=> (and (<= 0 $generated@@549) (< $generated@@549 ($generated@@265 $generated@@546))) ($generated@@255 ($generated@@266 $generated@@546 $generated@@549) $generated@@547 $generated@@548))
 :pattern ( ($generated@@266 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@91 $generated@@546 ($generated@@216 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@551 Int) ) (! (= ($generated@@550 ($generated@@92 $generated@@551)) $generated@@551)
 :pattern ( ($generated@@92 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@76)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@76) (= ($generated@@552 ($generated@@224 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@224 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@76) (= ($generated@@87 ($generated@@224 $generated@@555)) $generated@@54))
 :pattern ( ($generated@@224 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@76)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@76) (= ($generated@@556 ($generated@@229 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@229 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@76) (= ($generated@@87 ($generated@@229 $generated@@559)) $generated@@55))
 :pattern ( ($generated@@229 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@76)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@76) (= ($generated@@560 ($generated@@187 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@187 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@76) (= ($generated@@87 ($generated@@187 $generated@@563)) $generated@@56))
 :pattern ( ($generated@@187 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@76)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@76) (= ($generated@@564 ($generated@@216 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@216 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@76) (= ($generated@@87 ($generated@@216 $generated@@567)) $generated@@57))
 :pattern ( ($generated@@216 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@568)))
(= ($generated@@363 $generated@@569 ($generated@@283 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@283 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@308 $generated@@182 $generated@@182)) (= (type $generated@@571) $generated@@76)) (= (type $generated@@572) $generated@@76)) (= ($generated@@163 $generated@@570 ($generated@@449 $generated@@571 $generated@@572)) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@182) ($generated@@0 ($generated@@98 ($generated@@306 $generated@@570) $generated@@573))) (and ($generated@@209 ($generated@@98 ($generated@@424 $generated@@570) $generated@@573) $generated@@572) ($generated@@209 $generated@@573 $generated@@571)))
 :pattern ( ($generated@@98 ($generated@@424 $generated@@570) $generated@@573))
 :pattern ( ($generated@@98 ($generated@@306 $generated@@570) $generated@@573))
))))
 :pattern ( ($generated@@163 $generated@@570 ($generated@@449 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@326 $generated@@182 $generated@@182)) (= (type $generated@@575) $generated@@76)) (= (type $generated@@576) $generated@@76)) (= ($generated@@163 $generated@@574 ($generated@@457 $generated@@575 $generated@@576)) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@182) ($generated@@0 ($generated@@98 ($generated@@324 $generated@@574) $generated@@577))) (and ($generated@@209 ($generated@@98 ($generated@@432 $generated@@574) $generated@@577) $generated@@576) ($generated@@209 $generated@@577 $generated@@575)))
 :pattern ( ($generated@@98 ($generated@@432 $generated@@574) $generated@@577))
 :pattern ( ($generated@@98 ($generated@@324 $generated@@574) $generated@@577))
))))
 :pattern ( ($generated@@163 $generated@@574 ($generated@@457 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@182) (= (type $generated@@581) $generated@@182)) (< ($generated@@578 $generated@@580) ($generated@@579 ($generated@@208 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@208 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@182) (= (type $generated@@583) $generated@@182)) (< ($generated@@578 $generated@@583) ($generated@@579 ($generated@@208 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@208 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@182) (= (type $generated@@585) $generated@@76)) (= (type $generated@@586) $generated@@76)) ($generated@@209 $generated@@584 ($generated@@449 $generated@@585 $generated@@586))) (and (= ($generated@@283 ($generated@@363 ($generated@@308 $generated@@182 $generated@@182) $generated@@584)) $generated@@584) ($generated@@163 ($generated@@363 ($generated@@308 $generated@@182 $generated@@182) $generated@@584) ($generated@@449 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@209 $generated@@584 ($generated@@449 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@182) (= (type $generated@@588) $generated@@76)) (= (type $generated@@589) $generated@@76)) ($generated@@209 $generated@@587 ($generated@@457 $generated@@588 $generated@@589))) (and (= ($generated@@283 ($generated@@363 ($generated@@326 $generated@@182 $generated@@182) $generated@@587)) $generated@@587) ($generated@@163 ($generated@@363 ($generated@@326 $generated@@182 $generated@@182) $generated@@587) ($generated@@457 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@209 $generated@@587 ($generated@@457 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@76) (= (type $generated@@591) $generated@@76)) (= (type $generated@@592) $generated@@182)) ($generated@@209 $generated@@592 ($generated@@172 $generated@@590 $generated@@591))) (and (= ($generated@@283 ($generated@@363 $generated@@173 $generated@@592)) $generated@@592) ($generated@@163 ($generated@@363 $generated@@173 $generated@@592) ($generated@@172 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@209 $generated@@592 ($generated@@172 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@594 T@T) ) (! (= (type ($generated@@593 $generated@@594)) ($generated@@93 $generated@@594 $generated@@4))
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 (type $generated@@595)))
 (not ($generated@@0 ($generated@@98 ($generated@@593 $generated@@596) $generated@@595))))
 :pattern ( (let (($generated@@596 (type $generated@@595)))
($generated@@98 ($generated@@593 $generated@@596) $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@597)))
 (not ($generated@@0 ($generated@@98 ($generated@@474 $generated@@598) $generated@@597))))
 :pattern ( (let (($generated@@598 (type $generated@@597)))
($generated@@98 ($generated@@474 $generated@@598) $generated@@597)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@605 T@T) ($generated@@606 T@T) ) (= ($generated@@1 ($generated@@601 $generated@@605 $generated@@606)) 22)) (forall (($generated@@607 T@T) ($generated@@608 T@T) ) (! (= ($generated@@602 ($generated@@601 $generated@@607 $generated@@608)) $generated@@607)
 :pattern ( ($generated@@601 $generated@@607 $generated@@608))
))) (forall (($generated@@609 T@T) ($generated@@610 T@T) ) (! (= ($generated@@603 ($generated@@601 $generated@@609 $generated@@610)) $generated@@610)
 :pattern ( ($generated@@601 $generated@@609 $generated@@610))
))) (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@603 (type $generated@@611))))
(= (type ($generated@@599 $generated@@611 $generated@@612 $generated@@613)) $generated@@614))
 :pattern ( ($generated@@599 $generated@@611 $generated@@612 $generated@@613))
))) (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (! (let (($generated@@619 (type $generated@@618)))
(let (($generated@@620 (type $generated@@616)))
(= (type ($generated@@604 $generated@@615 $generated@@616 $generated@@617 $generated@@618)) ($generated@@601 $generated@@620 $generated@@619))))
 :pattern ( ($generated@@604 $generated@@615 $generated@@616 $generated@@617 $generated@@618))
))) (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (! (let (($generated@@625 ($generated@@603 (type $generated@@621))))
 (=> (= (type $generated@@624) $generated@@625) (= ($generated@@599 ($generated@@604 $generated@@621 $generated@@622 $generated@@623 $generated@@624) $generated@@622 $generated@@623) $generated@@624)))
 :weight 0
))) (and (and (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (or (= $generated@@628 $generated@@630) (= ($generated@@599 ($generated@@604 $generated@@627 $generated@@628 $generated@@629 $generated@@626) $generated@@630 $generated@@631) ($generated@@599 $generated@@627 $generated@@630 $generated@@631)))
 :weight 0
)) (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (or (= $generated@@635 $generated@@637) (= ($generated@@599 ($generated@@604 $generated@@633 $generated@@634 $generated@@635 $generated@@632) $generated@@636 $generated@@637) ($generated@@599 $generated@@633 $generated@@636 $generated@@637)))
 :weight 0
))) (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (or true (= ($generated@@599 ($generated@@604 $generated@@639 $generated@@640 $generated@@641 $generated@@638) $generated@@642 $generated@@643) ($generated@@599 $generated@@639 $generated@@642 $generated@@643)))
 :weight 0
)))) (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (! (= (type ($generated@@600 $generated@@644 $generated@@645 $generated@@646 $generated@@647)) ($generated@@601 $generated@@94 $generated@@4))
 :pattern ( ($generated@@600 $generated@@644 $generated@@645 $generated@@646 $generated@@647))
))))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 ($generated@@79 (type $generated@@653))))
 (=> (and (and (and (and (and (= (type $generated@@648) $generated@@94) (= (type $generated@@649) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@650) ($generated@@78 $generated@@4))) (= (type $generated@@651) $generated@@94)) (= (type $generated@@652) $generated@@94)) (= (type $generated@@653) ($generated@@78 $generated@@654))) (= ($generated@@0 ($generated@@599 ($generated@@600 $generated@@648 $generated@@649 $generated@@650 $generated@@651) $generated@@652 $generated@@653))  (=> (and (not (= $generated@@652 $generated@@648)) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@649 $generated@@652) $generated@@650))) (= $generated@@652 $generated@@651)))))
 :pattern ( ($generated@@599 ($generated@@600 $generated@@648 $generated@@649 $generated@@650 $generated@@651) $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@656 T@U) ) (! (= (type ($generated@@655 $generated@@656)) $generated@@83)
 :pattern ( ($generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@76) (= (type $generated@@658) $generated@@76)) (and (= ($generated@@87 ($generated@@172 $generated@@657 $generated@@658)) $generated@@64) (= ($generated@@655 ($generated@@172 $generated@@657 $generated@@658)) $generated@@69)))
 :pattern ( ($generated@@172 $generated@@657 $generated@@658))
)))
(assert  (and (forall (($generated@@661 T@U) ) (! (let (($generated@@662 ($generated@@198 (type $generated@@661))))
(= (type ($generated@@659 $generated@@661)) ($generated@@197 $generated@@662)))
 :pattern ( ($generated@@659 $generated@@661))
)) (forall (($generated@@663 T@U) ) (! (let (($generated@@664 ($generated@@198 (type $generated@@663))))
(= (type ($generated@@660 $generated@@663)) $generated@@664))
 :pattern ( ($generated@@660 $generated@@663))
))))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (! (let (($generated@@667 (type $generated@@666)))
 (=> (= (type $generated@@665) ($generated@@197 $generated@@667)) (and (= ($generated@@659 ($generated@@240 $generated@@665 $generated@@666)) $generated@@665) (= ($generated@@660 ($generated@@240 $generated@@665 $generated@@666)) $generated@@666))))
 :pattern ( ($generated@@240 $generated@@665 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@173) (= ($generated@@578 ($generated@@283 $generated@@668)) ($generated@@579 $generated@@668)))
 :pattern ( ($generated@@578 ($generated@@283 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@182) ($generated@@209 $generated@@669 ($generated@@92 0))) (and (= ($generated@@283 ($generated@@363 $generated@@2 $generated@@669)) $generated@@669) ($generated@@163 ($generated@@363 ($generated@@93 $generated@@182 $generated@@4) $generated@@669) ($generated@@92 0))))
 :pattern ( ($generated@@209 $generated@@669 ($generated@@92 0)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (= (type $generated@@670) $generated@@182) (= (type $generated@@671) $generated@@76)) ($generated@@209 $generated@@670 ($generated@@224 $generated@@671))) (and (= ($generated@@283 ($generated@@363 ($generated@@93 $generated@@182 $generated@@4) $generated@@670)) $generated@@670) ($generated@@163 ($generated@@363 ($generated@@93 $generated@@182 $generated@@4) $generated@@670) ($generated@@224 $generated@@671))))
 :pattern ( ($generated@@209 $generated@@670 ($generated@@224 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (= (type $generated@@672) $generated@@182) (= (type $generated@@673) $generated@@76)) ($generated@@209 $generated@@672 ($generated@@229 $generated@@673))) (and (= ($generated@@283 ($generated@@363 ($generated@@93 $generated@@182 $generated@@4) $generated@@672)) $generated@@672) ($generated@@163 ($generated@@363 ($generated@@93 $generated@@182 $generated@@4) $generated@@672) ($generated@@229 $generated@@673))))
 :pattern ( ($generated@@209 $generated@@672 ($generated@@229 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (= (type $generated@@674) $generated@@182) (= (type $generated@@675) $generated@@76)) ($generated@@209 $generated@@674 ($generated@@187 $generated@@675))) (and (= ($generated@@283 ($generated@@363 ($generated@@93 $generated@@182 $generated@@2) $generated@@674)) $generated@@674) ($generated@@163 ($generated@@363 ($generated@@93 $generated@@182 $generated@@2) $generated@@674) ($generated@@187 $generated@@675))))
 :pattern ( ($generated@@209 $generated@@674 ($generated@@187 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (= (type $generated@@676) $generated@@182) (= (type $generated@@677) $generated@@76)) ($generated@@209 $generated@@676 ($generated@@216 $generated@@677))) (and (= ($generated@@283 ($generated@@363 ($generated@@197 $generated@@182) $generated@@676)) $generated@@676) ($generated@@163 ($generated@@363 ($generated@@197 $generated@@182) $generated@@676) ($generated@@216 $generated@@677))))
 :pattern ( ($generated@@209 $generated@@676 ($generated@@216 $generated@@677)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (! (let (($generated@@682 (type $generated@@681)))
 (=> (and (and (and (= (type $generated@@678) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@679) $generated@@94)) (= (type $generated@@680) ($generated@@78 $generated@@682))) ($generated@@161 ($generated@@99 $generated@@678 $generated@@679 ($generated@@101 ($generated@@98 $generated@@678 $generated@@679) $generated@@680 $generated@@681)))) ($generated@@149 $generated@@678 ($generated@@99 $generated@@678 $generated@@679 ($generated@@101 ($generated@@98 $generated@@678 $generated@@679) $generated@@680 $generated@@681)))))
 :pattern ( ($generated@@99 $generated@@678 $generated@@679 ($generated@@101 ($generated@@98 $generated@@678 $generated@@679) $generated@@680 $generated@@681)))
)))
(assert (= ($generated@@87 $generated@@153) $generated@@62))
(assert (= ($generated@@655 $generated@@153) $generated@@68))
(assert (= ($generated@@87 $generated@@157) $generated@@66))
(assert (= ($generated@@655 $generated@@157) $generated@@70))
(assert (= ($generated@@87 $generated@@193) $generated@@67))
(assert (= ($generated@@655 $generated@@193) $generated@@70))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (= (type $generated@@683) ($generated@@93 $generated@@182 $generated@@2)) (= (type $generated@@684) $generated@@76)) (= (type $generated@@685) ($generated@@93 $generated@@94 $generated@@95))) (= ($generated@@91 $generated@@683 ($generated@@187 $generated@@684) $generated@@685) (forall (($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@686) $generated@@182) (< 0 ($generated ($generated@@98 $generated@@683 $generated@@686)))) ($generated@@255 $generated@@686 $generated@@684 $generated@@685))
 :pattern ( ($generated@@98 $generated@@683 $generated@@686))
))))
 :pattern ( ($generated@@91 $generated@@683 ($generated@@187 $generated@@684) $generated@@685))
)))
(assert  (=> (<= 0 $generated@@687) (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (= (type $generated@@689) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@690) $generated@@94)) (or ($generated@@688 $generated@@689 $generated@@690) (and (not (= 0 $generated@@687)) (and ($generated@@161 $generated@@689) (and (not (= $generated@@690 $generated@@154)) (and ($generated@@163 $generated@@690 $generated@@193) ($generated@@91 $generated@@690 $generated@@193 $generated@@689))))))) true)
 :pattern ( ($generated@@401 $generated@@689 $generated@@690))
))))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@94) (=> (and (not (= $generated@@691 $generated@@154)) (= ($generated@@162 $generated@@691) $generated@@157)) ($generated@@163 ($generated@@247 $generated@@691) ($generated@@224 $generated@@153))))
 :pattern ( ($generated@@247 $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@94) (=> (and (not (= $generated@@692 $generated@@154)) (= ($generated@@162 $generated@@692) $generated@@157)) ($generated@@163 ($generated@@251 $generated@@692) ($generated@@224 $generated@@153))))
 :pattern ( ($generated@@251 $generated@@692))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) $generated@@173) (= (type $generated@@694) $generated@@76)) (= (type $generated@@695) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@161 $generated@@695) (and ($generated@@171 $generated@@693) (exists (($generated@@696 T@U) ) (!  (and (= (type $generated@@696) $generated@@76) ($generated@@91 $generated@@693 ($generated@@172 $generated@@694 $generated@@696) $generated@@695))
 :pattern ( ($generated@@91 $generated@@693 ($generated@@172 $generated@@694 $generated@@696) $generated@@695))
))))) ($generated@@255 ($generated@@180 $generated@@693) $generated@@694 $generated@@695))
 :pattern ( ($generated@@255 ($generated@@180 $generated@@693) $generated@@694 $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (and (and (= (type $generated@@697) $generated@@173) (= (type $generated@@698) $generated@@76)) (= (type $generated@@699) ($generated@@93 $generated@@94 $generated@@95))) (and ($generated@@161 $generated@@699) (and ($generated@@171 $generated@@697) (exists (($generated@@700 T@U) ) (!  (and (= (type $generated@@700) $generated@@76) ($generated@@91 $generated@@697 ($generated@@172 $generated@@700 $generated@@698) $generated@@699))
 :pattern ( ($generated@@91 $generated@@697 ($generated@@172 $generated@@700 $generated@@698) $generated@@699))
))))) ($generated@@255 ($generated@@181 $generated@@697) $generated@@698 $generated@@699))
 :pattern ( ($generated@@255 ($generated@@181 $generated@@697) $generated@@698 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (= (type $generated@@701) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@702) $generated@@94)) (and ($generated@@161 $generated@@701) (and (not (= $generated@@702 $generated@@154)) (= ($generated@@162 $generated@@702) $generated@@157)))) ($generated@@163 ($generated@@100 ($generated@@98 $generated@@701 $generated@@702) $generated@@207) ($generated@@224 $generated@@153)))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@701 $generated@@702) $generated@@207))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ($generated@@705 Int) ) (! (let (($generated@@706 ($generated@@198 (type $generated@@703))))
 (=> (and (= (type $generated@@703) ($generated@@197 $generated@@706)) (= (type $generated@@704) ($generated@@197 $generated@@706))) (and (=> (< $generated@@705 ($generated@@265 $generated@@703)) (= ($generated@@266 ($generated@@353 $generated@@703 $generated@@704) $generated@@705) ($generated@@266 $generated@@703 $generated@@705))) (=> (<= ($generated@@265 $generated@@703) $generated@@705) (= ($generated@@266 ($generated@@353 $generated@@703 $generated@@704) $generated@@705) ($generated@@266 $generated@@704 (- $generated@@705 ($generated@@265 $generated@@703))))))))
 :pattern ( ($generated@@266 ($generated@@353 $generated@@703 $generated@@704) $generated@@705))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@182) (= (type $generated@@708) $generated@@182)) (= ($generated@@208 ($generated@@236 $generated@@707) ($generated@@236 $generated@@708)) ($generated@@236 ($generated@@208 $generated@@707 $generated@@708))))
 :pattern ( ($generated@@208 ($generated@@236 $generated@@707) ($generated@@236 $generated@@708)))
)))
(assert (forall (($generated@@709 Int) ) (! (= ($generated@@283 ($generated@@8 ($generated@@234 $generated@@709))) ($generated@@236 ($generated@@283 ($generated@@8 $generated@@709))))
 :pattern ( ($generated@@283 ($generated@@8 ($generated@@234 $generated@@709))))
)))
(assert (forall (($generated@@710 T@U) ) (! (= ($generated@@283 ($generated@@236 $generated@@710)) ($generated@@236 ($generated@@283 $generated@@710)))
 :pattern ( ($generated@@283 ($generated@@236 $generated@@710)))
)))
(assert (forall (($generated@@711 T@U) ) (! (let (($generated@@712 ($generated@@198 (type $generated@@711))))
 (=> (and (= (type $generated@@711) ($generated@@197 $generated@@712)) (= ($generated@@265 $generated@@711) 0)) (= $generated@@711 ($generated@@277 $generated@@712))))
 :pattern ( ($generated@@265 $generated@@711))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ($generated@@715 T@U) ) (! (let (($generated@@716 (type $generated@@714)))
 (=> (and (and (= (type $generated@@713) ($generated@@93 $generated@@716 $generated@@2)) (= (type $generated@@715) $generated@@2)) (<= 0 ($generated $generated@@715))) (= ($generated@@300 ($generated@@99 $generated@@713 $generated@@714 $generated@@715)) (+ (- ($generated@@300 $generated@@713) ($generated ($generated@@98 $generated@@713 $generated@@714))) ($generated $generated@@715)))))
 :pattern ( ($generated@@300 ($generated@@99 $generated@@713 $generated@@714 $generated@@715)))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (= (type $generated@@717) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@718) $generated@@2)) ($generated@@91 $generated@@718 $generated@@46 $generated@@717))
 :pattern ( ($generated@@91 $generated@@718 $generated@@46 $generated@@717))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (= (type $generated@@719) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@720) $generated@@3)) ($generated@@91 $generated@@720 $generated@@47 $generated@@719))
 :pattern ( ($generated@@91 $generated@@720 $generated@@47 $generated@@719))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (= (type $generated@@721) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@722) $generated@@4)) ($generated@@91 $generated@@722 $generated@@44 $generated@@721))
 :pattern ( ($generated@@91 $generated@@722 $generated@@44 $generated@@721))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (= (type $generated@@723) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@724) $generated@@503)) ($generated@@91 $generated@@724 $generated@@45 $generated@@723))
 :pattern ( ($generated@@91 $generated@@724 $generated@@45 $generated@@723))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (= (type $generated@@725) ($generated@@93 $generated@@94 $generated@@95)) (= (type $generated@@726) $generated@@182)) ($generated@@91 $generated@@726 $generated@@48 $generated@@725))
 :pattern ( ($generated@@91 $generated@@726 $generated@@48 $generated@@725))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (= (type $generated@@727) ($generated@@197 $generated@@182)) (= (type $generated@@728) $generated@@76)) (= ($generated@@163 $generated@@727 ($generated@@216 $generated@@728)) (forall (($generated@@729 Int) ) (!  (=> (and (<= 0 $generated@@729) (< $generated@@729 ($generated@@265 $generated@@727))) ($generated@@209 ($generated@@266 $generated@@727 $generated@@729) $generated@@728))
 :pattern ( ($generated@@266 $generated@@727 $generated@@729))
))))
 :pattern ( ($generated@@163 $generated@@727 ($generated@@216 $generated@@728)))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 Int) ) (!  (=> (= (type $generated@@731) ($generated@@197 $generated@@182)) (=> (and (<= 0 $generated@@732) (< $generated@@732 ($generated@@265 $generated@@731))) (< ($generated@@579 ($generated@@363 $generated@@173 ($generated@@266 $generated@@731 $generated@@732))) ($generated@@730 $generated@@731))))
 :pattern ( ($generated@@579 ($generated@@363 $generated@@173 ($generated@@266 $generated@@731 $generated@@732))))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (and (and (= (type $generated@@733) ($generated@@308 $generated@@182 $generated@@182)) (= (type $generated@@734) $generated@@76)) (= (type $generated@@735) $generated@@76)) ($generated@@163 $generated@@733 ($generated@@449 $generated@@734 $generated@@735))) (and (and ($generated@@163 ($generated@@306 $generated@@733) ($generated@@224 $generated@@734)) ($generated@@163 ($generated@@382 $generated@@733) ($generated@@224 $generated@@735))) ($generated@@163 ($generated@@423 $generated@@733) ($generated@@224 ($generated@@172 $generated@@734 $generated@@735)))))
 :pattern ( ($generated@@163 $generated@@733 ($generated@@449 $generated@@734 $generated@@735)))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (and (and (= (type $generated@@736) ($generated@@326 $generated@@182 $generated@@182)) (= (type $generated@@737) $generated@@76)) (= (type $generated@@738) $generated@@76)) ($generated@@163 $generated@@736 ($generated@@457 $generated@@737 $generated@@738))) (and (and ($generated@@163 ($generated@@324 $generated@@736) ($generated@@229 $generated@@737)) ($generated@@163 ($generated@@393 $generated@@736) ($generated@@229 $generated@@738))) ($generated@@163 ($generated@@431 $generated@@736) ($generated@@229 ($generated@@172 $generated@@737 $generated@@738)))))
 :pattern ( ($generated@@163 $generated@@736 ($generated@@457 $generated@@737 $generated@@738)))
)))
(assert (forall (($generated@@739 T@U) ) (!  (=> (= (type $generated@@739) $generated@@2) ($generated@@163 $generated@@739 $generated@@46))
 :pattern ( ($generated@@163 $generated@@739 $generated@@46))
)))
(assert (forall (($generated@@740 T@U) ) (!  (=> (= (type $generated@@740) $generated@@3) ($generated@@163 $generated@@740 $generated@@47))
 :pattern ( ($generated@@163 $generated@@740 $generated@@47))
)))
(assert (forall (($generated@@741 T@U) ) (!  (=> (= (type $generated@@741) $generated@@4) ($generated@@163 $generated@@741 $generated@@44))
 :pattern ( ($generated@@163 $generated@@741 $generated@@44))
)))
(assert (forall (($generated@@742 T@U) ) (!  (=> (= (type $generated@@742) $generated@@503) ($generated@@163 $generated@@742 $generated@@45))
 :pattern ( ($generated@@163 $generated@@742 $generated@@45))
)))
(assert (forall (($generated@@743 T@U) ) (!  (=> (= (type $generated@@743) $generated@@182) ($generated@@163 $generated@@743 $generated@@48))
 :pattern ( ($generated@@163 $generated@@743 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@744 () Int)
(declare-fun $generated@@745 () Int)
(declare-fun $generated@@746 () T@U)
(declare-fun $generated@@747 () T@U)
(declare-fun $generated@@748 () Int)
(declare-fun $generated@@749 () Int)
(declare-fun $generated@@750 () T@U)
(declare-fun $generated@@751 () T@U)
(declare-fun $generated@@752 () T@U)
(declare-fun $generated@@753 () T@U)
(declare-fun $generated@@754 () T@U)
(declare-fun $generated@@755 () Int)
(declare-fun $generated@@756 () Int)
(declare-fun $generated@@757 () T@U)
(declare-fun $generated@@758 () T@U)
(declare-fun $generated@@759 () T@U)
(declare-fun $generated@@760 () T@U)
(declare-fun $generated@@761 () Int)
(declare-fun $generated@@762 () Int)
(declare-fun $generated@@763 () T@U)
(declare-fun $generated@@764 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@746) ($generated@@601 $generated@@94 $generated@@4)) (= (type $generated@@747) $generated@@94)) (= (type $generated@@750) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@751) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@752) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@753) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@754) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@757) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@758) ($generated@@93 $generated@@182 $generated@@4))) (= (type $generated@@759) ($generated@@93 $generated@@182 $generated@@4))) (= (type $generated@@760) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@763) ($generated@@93 $generated@@94 $generated@@95))) (= (type $generated@@764) ($generated@@93 $generated@@94 $generated@@95))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@765 true))
(let (($generated@@766  (=> ($generated@@0 ($generated@@236 ($generated@@11 true))) (=> (and (= $generated@@744 ($generated@@234 3)) (= $generated@@745 ($generated@@234 4))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@0 ($generated@@599 $generated@@746 $generated@@747 $generated@@160))) (=> ($generated@@0 ($generated@@599 $generated@@746 $generated@@747 $generated@@160)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@0 ($generated@@599 $generated@@746 $generated@@747 $generated@@167))) (=> ($generated@@0 ($generated@@599 $generated@@746 $generated@@747 $generated@@167)) (=> (= $generated@@748 ($generated@@234 1)) (=> (and (and (= $generated@@749 ($generated@@234 2)) (= $generated@@750 ($generated@@99 $generated@@751 $generated@@747 ($generated@@101 ($generated@@98 $generated@@751 $generated@@747) $generated@@160 ($generated@@8 $generated@@748))))) (and ($generated@@161 $generated@@750) (= $generated@@752 ($generated@@99 $generated@@750 $generated@@747 ($generated@@101 ($generated@@98 $generated@@750 $generated@@747) $generated@@167 ($generated@@8 $generated@@749)))))) (=> (and (and (and ($generated@@161 $generated@@752) (= $generated@@753 ($generated@@99 $generated@@752 $generated@@747 ($generated@@101 ($generated@@98 $generated@@752 $generated@@747) $generated@@196 ($generated@@353 ($generated@@100 ($generated@@98 $generated@@752 $generated@@747) $generated@@196) ($generated@@240 ($generated@@277 $generated@@182) ($generated@@283 ($generated@@100 ($generated@@98 $generated@@752 $generated@@747) $generated@@160)))))))) (and (= $generated@@754 ($generated@@99 $generated@@753 $generated@@747 ($generated@@101 ($generated@@98 $generated@@753 $generated@@747) $generated@@206 ($generated@@353 ($generated@@100 ($generated@@98 $generated@@753 $generated@@747) $generated@@206) ($generated@@240 ($generated@@277 $generated@@182) ($generated@@283 ($generated@@100 ($generated@@98 $generated@@753 $generated@@747) $generated@@167))))))) (= $generated@@755 (+ $generated@@756 1)))) (and (and (= $generated@@755 ($generated@@265 ($generated@@100 ($generated@@98 $generated@@754 $generated@@747) $generated@@196))) (= $generated@@755 ($generated@@265 ($generated@@100 ($generated@@98 $generated@@754 $generated@@747) $generated@@206)))) ($generated@@161 $generated@@754))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated ($generated@@100 ($generated@@98 $generated@@754 $generated@@747) $generated@@160)) ($generated@@234 1))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated ($generated@@100 ($generated@@98 $generated@@754 $generated@@747) $generated@@167)) ($generated@@234 2)))))))))))))))
(let (($generated@@767  (=> (and (= $generated@@746 ($generated@@600 $generated@@154 $generated@@757 $generated@@60 $generated@@747)) ($generated@@264 ($generated@@100 ($generated@@98 $generated@@757 $generated@@747) $generated@@196) ($generated@@277 $generated@@182))) (=> (and (and ($generated@@264 ($generated@@100 ($generated@@98 $generated@@757 $generated@@747) $generated@@206) ($generated@@277 $generated@@182)) ($generated@@401 $generated@@757 $generated@@747)) (and ($generated@@348 ($generated@@247 $generated@@747) ($generated@@593 $generated@@182)) ($generated@@348 ($generated@@251 $generated@@747) ($generated@@593 $generated@@182)))) (=> (and (and (and ($generated@@348 ($generated@@100 ($generated@@98 $generated@@757 $generated@@747) $generated@@207) ($generated@@593 $generated@@182)) (= $generated@@756 0)) (and (= $generated@@758 ($generated@@247 $generated@@747)) (= $generated@@759 ($generated@@100 ($generated@@98 $generated@@757 $generated@@747) $generated@@207)))) (and (and ($generated@@161 $generated@@760) ($generated@@400 $generated@@760)) (and (forall (($generated@@768 T@U) ($generated@@769 T@U) ) (! (let (($generated@@770 ($generated@@79 (type $generated@@769))))
 (=> (and (and (and (= (type $generated@@768) $generated@@94) (= (type $generated@@769) ($generated@@78 $generated@@770))) (and (not (= $generated@@768 $generated@@154)) ($generated@@0 ($generated@@100 ($generated@@98 $generated@@757 $generated@@768) $generated@@60)))) (or (or (= $generated@@768 $generated@@747) ($generated@@0 ($generated@@98 $generated@@758 ($generated@@283 $generated@@768)))) ($generated@@0 ($generated@@98 $generated@@759 ($generated@@283 $generated@@768))))) (= ($generated@@100 ($generated@@98 $generated@@760 $generated@@768) $generated@@769) ($generated@@100 ($generated@@98 $generated@@757 $generated@@768) $generated@@769))))
 :pattern ( ($generated@@100 ($generated@@98 $generated@@760 $generated@@768) $generated@@769))
)) ($generated@@149 $generated@@757 $generated@@760)))) (and (=> (= (ControlFlow 0 7) (- 0 9)) ($generated@@0 ($generated@@599 $generated@@746 $generated@@747 $generated@@160))) (=> ($generated@@0 ($generated@@599 $generated@@746 $generated@@747 $generated@@160)) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@0 ($generated@@599 $generated@@746 $generated@@747 $generated@@167))) (=> ($generated@@0 ($generated@@599 $generated@@746 $generated@@747 $generated@@167)) (=> (and (= $generated@@761 ($generated@@234 2)) (= $generated@@762 ($generated@@234 1))) (=> (and (and (= $generated@@763 ($generated@@99 $generated@@760 $generated@@747 ($generated@@101 ($generated@@98 $generated@@760 $generated@@747) $generated@@160 ($generated@@8 $generated@@761)))) ($generated@@161 $generated@@763)) (and (= $generated@@751 ($generated@@99 $generated@@763 $generated@@747 ($generated@@101 ($generated@@98 $generated@@763 $generated@@747) $generated@@167 ($generated@@8 $generated@@762)))) ($generated@@161 $generated@@751))) (and (=> (= (ControlFlow 0 7) 2) $generated@@766) (=> (= (ControlFlow 0 7) 6) $generated@@765)))))))))))))
(let (($generated@@771  (=> (and (and (and (and ($generated@@161 $generated@@757) ($generated@@400 $generated@@757)) (and (not (= $generated@@747 $generated@@154)) (and ($generated@@163 $generated@@747 $generated@@193) ($generated@@91 $generated@@747 $generated@@193 $generated@@757)))) (and (and (= $generated@@756 ($generated@@265 ($generated@@100 ($generated@@98 $generated@@757 $generated@@747) $generated@@196))) (= $generated@@756 ($generated@@265 ($generated@@100 ($generated@@98 $generated@@757 $generated@@747) $generated@@206)))) true)) (and (and (and ($generated@@161 $generated@@764) ($generated@@149 $generated@@764 $generated@@757)) true) (and (= 0 $generated@@687) (= (ControlFlow 0 10) 7)))) $generated@@767)))
$generated@@771)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@168 (T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@205 (T@T) T@U)
(declare-fun $generated@@206 (T@U) Int)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@213 (T@U) T@U)
(declare-fun $generated@@218 (T@U) Int)
(declare-fun $generated@@219 (T@T) T@U)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@225 (T@T T@T) T@U)
(declare-fun $generated@@226 (T@T T@T) T@T)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@T T@T) T@U)
(declare-fun $generated@@244 (T@T T@T) T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@263 (T@T T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@330 (T@U T@U) T@U)
(declare-fun $generated@@338 (T@U T@U) T@U)
(declare-fun $generated@@346 (T@T) T@U)
(declare-fun $generated@@370 () T@T)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U Int) T@U)
(declare-fun $generated@@422 (T@U) Int)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@450 (T@U) Int)
(declare-fun $generated@@451 (T@U) Int)
(declare-fun $generated@@467 (T@U T@U T@U) T@U)
(declare-fun $generated@@468 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@469 (T@T T@T) T@T)
(declare-fun $generated@@470 (T@T) T@T)
(declare-fun $generated@@471 (T@T) T@T)
(declare-fun $generated@@472 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@80) (= ($generated@@139 $generated@@164 $generated@@135)  (or (= $generated@@164 $generated@@136) (= ($generated@@162 $generated@@164) $generated@@135))))
 :pattern ( ($generated@@139 $generated@@164 $generated@@135))
)))
(assert (= (type $generated@@165) $generated@@67))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@80) (= (type $generated@@167) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@166 $generated@@165 $generated@@167) ($generated@@77 $generated@@166 $generated@@135 $generated@@167)))
 :pattern ( ($generated@@77 $generated@@166 $generated@@165 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@170 $generated@@171)) $generated@@143)
 :pattern ( ($generated@@168 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@172) $generated@@67) (= (type $generated@@173) $generated@@67)) (= (type $generated@@174) $generated@@152)) (= (type $generated@@175) $generated@@152)) (= ($generated@@139 ($generated@@168 $generated@@174 $generated@@175) ($generated@@142 $generated@@172 $generated@@173))  (and ($generated@@169 $generated@@174 $generated@@172) ($generated@@169 $generated@@175 $generated@@173))))
 :pattern ( ($generated@@139 ($generated@@168 $generated@@174 $generated@@175) ($generated@@142 $generated@@172 $generated@@173)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (= (type $generated@@176) $generated@@143) (= (type $generated@@177) $generated@@143)) (= ($generated@@149 $generated@@176 $generated@@177) (= $generated@@176 $generated@@177)))
 :pattern ( ($generated@@149 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (= (type $generated@@180) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@181) $generated@@67)) (= ($generated@@139 $generated@@180 ($generated@@178 $generated@@181)) (forall (($generated@@182 T@U) ) (!  (=> (and (= (type $generated@@182) $generated@@152) ($generated@@0 ($generated@@84 $generated@@180 $generated@@182))) ($generated@@169 $generated@@182 $generated@@181))
 :pattern ( ($generated@@84 $generated@@180 $generated@@182))
))))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@178 $generated@@181)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@67)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (= (type $generated@@185) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@186) $generated@@67)) (= ($generated@@139 $generated@@185 ($generated@@183 $generated@@186)) (forall (($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@187) $generated@@152) ($generated@@0 ($generated@@84 $generated@@185 $generated@@187))) ($generated@@169 $generated@@187 $generated@@186))
 :pattern ( ($generated@@84 $generated@@185 $generated@@187))
))))
 :pattern ( ($generated@@139 $generated@@185 ($generated@@183 $generated@@186)))
)))
(assert (forall (($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(= (type ($generated@@188 $generated@@189)) $generated@@190))
 :pattern ( ($generated@@188 $generated@@189))
)))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@188 $generated@@191) $generated@@191)
 :pattern ( ($generated@@188 $generated@@191))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@194) $generated@@67) (= (type $generated@@195) $generated@@67)) (= (type $generated@@196) $generated@@152)) (= (type $generated@@197) $generated@@152)) (= (type $generated@@198) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@192 $generated@@198)) (= ($generated@@77 ($generated@@168 $generated@@196 $generated@@197) ($generated@@142 $generated@@194 $generated@@195) $generated@@198)  (and ($generated@@193 $generated@@196 $generated@@194 $generated@@198) ($generated@@193 $generated@@197 $generated@@195 $generated@@198))))
 :pattern ( ($generated@@77 ($generated@@168 $generated@@196 $generated@@197) ($generated@@142 $generated@@194 $generated@@195) $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@71)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ) (!  (=> (= (type $generated@@201) $generated@@143) (= ($generated@@141 $generated@@201) (= ($generated@@199 $generated@@201) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@143) ($generated@@141 $generated@@202)) (exists (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (and (and (= (type $generated@@203) $generated@@152) (= (type $generated@@204) $generated@@152)) (= $generated@@202 ($generated@@168 $generated@@203 $generated@@204)))
 :no-pattern (type $generated@@203)
 :no-pattern (type $generated@@204)
 :no-pattern ($generated $generated@@203)
 :no-pattern ($generated@@0 $generated@@203)
 :no-pattern ($generated $generated@@204)
 :no-pattern ($generated@@0 $generated@@204)
)))
 :pattern ( ($generated@@141 $generated@@202))
)))
(assert  (and (and (forall (($generated@@209 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@209)) 16)) (forall (($generated@@210 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@207 $generated@@210))
))) (forall (($generated@@211 T@T) ) (! (= (type ($generated@@205 $generated@@211)) ($generated@@207 $generated@@211))
 :pattern ( ($generated@@205 $generated@@211))
))))
(assert (forall (($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@212)) 0)
 :pattern ( ($generated@@205 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (! (= (type ($generated@@213 $generated@@214)) $generated@@152)
 :pattern ( ($generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (= (type $generated@@216) $generated@@67) (= (type $generated@@217) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@193 ($generated@@213 $generated@@215) $generated@@216 $generated@@217) ($generated@@77 $generated@@215 $generated@@216 $generated@@217)))
 :pattern ( ($generated@@193 ($generated@@213 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@220 T@T) ) (! (= (type ($generated@@219 $generated@@220)) ($generated@@79 $generated@@220 $generated@@2))
 :pattern ( ($generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@82 (type $generated@@221))))
 (=> (= (type $generated@@221) ($generated@@79 $generated@@222 $generated@@2)) (and (= (= ($generated@@218 $generated@@221) 0) (= $generated@@221 ($generated@@219 $generated@@222))) (=> (not (= ($generated@@218 $generated@@221) 0)) (exists (($generated@@223 T@U) ) (!  (and (= (type $generated@@223) $generated@@222) (< 0 ($generated ($generated@@84 $generated@@221 $generated@@223))))
 :no-pattern (type $generated@@223)
 :no-pattern ($generated $generated@@223)
 :no-pattern ($generated@@0 $generated@@223)
))))))
 :pattern ( ($generated@@218 $generated@@221))
)))
(assert  (and (and (and (and (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (= ($generated@@1 ($generated@@226 $generated@@229 $generated@@230)) 17)) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (! (= ($generated@@227 ($generated@@226 $generated@@231 $generated@@232)) $generated@@231)
 :pattern ( ($generated@@226 $generated@@231 $generated@@232))
))) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@228 ($generated@@226 $generated@@233 $generated@@234)) $generated@@234)
 :pattern ( ($generated@@226 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@227 (type $generated@@235))))
(= (type ($generated@@224 $generated@@235)) ($generated@@79 $generated@@236 $generated@@4)))
 :pattern ( ($generated@@224 $generated@@235))
))) (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (! (= (type ($generated@@225 $generated@@237 $generated@@238)) ($generated@@226 $generated@@237 $generated@@238))
 :pattern ( ($generated@@225 $generated@@237 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@T) ) (! (let (($generated@@241 (type $generated@@239)))
 (not ($generated@@0 ($generated@@84 ($generated@@224 ($generated@@225 $generated@@241 $generated@@240)) $generated@@239))))
 :pattern ( (let (($generated@@241 (type $generated@@239)))
($generated@@84 ($generated@@224 ($generated@@225 $generated@@241 $generated@@240)) $generated@@239)))
)))
(assert  (and (and (and (and (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (= ($generated@@1 ($generated@@244 $generated@@247 $generated@@248)) 18)) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= ($generated@@245 ($generated@@244 $generated@@249 $generated@@250)) $generated@@249)
 :pattern ( ($generated@@244 $generated@@249 $generated@@250))
))) (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (! (= ($generated@@246 ($generated@@244 $generated@@251 $generated@@252)) $generated@@252)
 :pattern ( ($generated@@244 $generated@@251 $generated@@252))
))) (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@245 (type $generated@@253))))
(= (type ($generated@@242 $generated@@253)) ($generated@@79 $generated@@254 $generated@@4)))
 :pattern ( ($generated@@242 $generated@@253))
))) (forall (($generated@@255 T@T) ($generated@@256 T@T) ) (! (= (type ($generated@@243 $generated@@255 $generated@@256)) ($generated@@244 $generated@@255 $generated@@256))
 :pattern ( ($generated@@243 $generated@@255 $generated@@256))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@T) ) (! (let (($generated@@259 (type $generated@@257)))
 (not ($generated@@0 ($generated@@84 ($generated@@242 ($generated@@243 $generated@@259 $generated@@258)) $generated@@257))))
 :pattern ( (let (($generated@@259 (type $generated@@257)))
($generated@@84 ($generated@@242 ($generated@@243 $generated@@259 $generated@@258)) $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@82 (type $generated@@260))))
 (=> (= (type $generated@@260) ($generated@@79 $generated@@261 $generated@@2)) (= ($generated@@158 $generated@@260) (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@261) (and (<= 0 ($generated ($generated@@84 $generated@@260 $generated@@262))) (<= ($generated ($generated@@84 $generated@@260 $generated@@262)) ($generated@@218 $generated@@260))))
 :pattern ( ($generated@@84 $generated@@260 $generated@@262))
)))))
 :pattern ( ($generated@@158 $generated@@260))
)))
(assert (forall (($generated@@264 T@T) ($generated@@265 T@U) ) (! (= (type ($generated@@263 $generated@@264 $generated@@265)) $generated@@264)
 :pattern ( ($generated@@263 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@152) ($generated@@169 $generated@@266 $generated@@135)) (and (= ($generated@@213 ($generated@@263 $generated@@80 $generated@@266)) $generated@@266) ($generated@@139 ($generated@@263 $generated@@80 $generated@@266) $generated@@135)))
 :pattern ( ($generated@@169 $generated@@266 $generated@@135))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@152) ($generated@@169 $generated@@267 $generated@@165)) (and (= ($generated@@213 ($generated@@263 $generated@@80 $generated@@267)) $generated@@267) ($generated@@139 ($generated@@263 $generated@@80 $generated@@267) $generated@@165)))
 :pattern ( ($generated@@169 $generated@@267 $generated@@165))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@80) (= ($generated@@139 $generated@@268 $generated@@165)  (and ($generated@@139 $generated@@268 $generated@@135) (not (= $generated@@268 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@268 $generated@@165))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@228 (type $generated@@269))))
(let (($generated@@271 ($generated@@227 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@226 $generated@@271 $generated@@270)) (or (= $generated@@269 ($generated@@225 $generated@@271 $generated@@270)) (exists (($generated@@272 T@U) ) (!  (and (= (type $generated@@272) $generated@@271) ($generated@@0 ($generated@@84 ($generated@@224 $generated@@269) $generated@@272)))
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
))))))
 :pattern ( ($generated@@224 $generated@@269))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@228 (type $generated@@274))))
(= (type ($generated@@273 $generated@@274)) ($generated@@79 $generated@@275 $generated@@4)))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@228 (type $generated@@276))))
(let (($generated@@278 ($generated@@227 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@226 $generated@@278 $generated@@277)) (or (= $generated@@276 ($generated@@225 $generated@@278 $generated@@277)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@277) ($generated@@0 ($generated@@84 ($generated@@273 $generated@@276) $generated@@279)))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@246 (type $generated@@280))))
(let (($generated@@282 ($generated@@245 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@244 $generated@@282 $generated@@281)) (or (= $generated@@280 ($generated@@243 $generated@@282 $generated@@281)) (exists (($generated@@283 T@U) ) (!  (and (= (type $generated@@283) $generated@@282) ($generated@@0 ($generated@@84 ($generated@@242 $generated@@280) $generated@@283)))
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
))))))
 :pattern ( ($generated@@242 $generated@@280))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@246 (type $generated@@285))))
(= (type ($generated@@284 $generated@@285)) ($generated@@79 $generated@@286 $generated@@4)))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@246 (type $generated@@287))))
(let (($generated@@289 ($generated@@245 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@244 $generated@@289 $generated@@288)) (or (= $generated@@287 ($generated@@243 $generated@@289 $generated@@288)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@288) ($generated@@0 ($generated@@84 ($generated@@284 $generated@@287) $generated@@290)))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@292) $generated@@67)) (= ($generated@@139 $generated@@291 ($generated@@157 $generated@@292)) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@291 $generated@@293)))) ($generated@@169 $generated@@293 $generated@@292))
 :pattern ( ($generated@@84 $generated@@291 $generated@@293))
))))
 :pattern ( ($generated@@139 $generated@@291 ($generated@@157 $generated@@292)))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@294) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@295) $generated@@67)) (= (type $generated@@296) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@294 ($generated@@178 $generated@@295) $generated@@296) (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@152) ($generated@@0 ($generated@@84 $generated@@294 $generated@@297))) ($generated@@193 $generated@@297 $generated@@295 $generated@@296))
 :pattern ( ($generated@@84 $generated@@294 $generated@@297))
))))
 :pattern ( ($generated@@77 $generated@@294 ($generated@@178 $generated@@295) $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (= (type $generated@@298) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@299) $generated@@67)) (= (type $generated@@300) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@298 ($generated@@183 $generated@@299) $generated@@300) (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@152) ($generated@@0 ($generated@@84 $generated@@298 $generated@@301))) ($generated@@193 $generated@@301 $generated@@299 $generated@@300))
 :pattern ( ($generated@@84 $generated@@298 $generated@@301))
))))
 :pattern ( ($generated@@77 $generated@@298 ($generated@@183 $generated@@299) $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 (type $generated@@302)))
(= ($generated ($generated@@84 ($generated@@219 $generated@@303) $generated@@302)) 0))
 :pattern ( (let (($generated@@303 (type $generated@@302)))
($generated@@84 ($generated@@219 $generated@@303) $generated@@302)))
)))
(assert  (and (forall (($generated@@306 T@U) ) (! (= (type ($generated@@304 $generated@@306)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@304 $generated@@306))
)) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@228 (type $generated@@307))))
(let (($generated@@309 ($generated@@227 (type $generated@@307))))
(= (type ($generated@@305 $generated@@307)) ($generated@@79 $generated@@309 $generated@@308))))
 :pattern ( ($generated@@305 $generated@@307))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) ($generated@@226 $generated@@152 $generated@@152)) (= (type $generated@@311) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@304 $generated@@310) $generated@@311))  (and ($generated@@0 ($generated@@84 ($generated@@224 $generated@@310) ($generated@@150 ($generated@@263 $generated@@143 $generated@@311)))) (= ($generated@@84 ($generated@@305 $generated@@310) ($generated@@150 ($generated@@263 $generated@@143 $generated@@311))) ($generated@@151 ($generated@@263 $generated@@143 $generated@@311))))))
 :pattern ( ($generated@@84 ($generated@@304 $generated@@310) $generated@@311))
)))
(assert  (and (forall (($generated@@314 T@U) ) (! (= (type ($generated@@312 $generated@@314)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@312 $generated@@314))
)) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@246 (type $generated@@315))))
(let (($generated@@317 ($generated@@245 (type $generated@@315))))
(= (type ($generated@@313 $generated@@315)) ($generated@@79 $generated@@317 $generated@@316))))
 :pattern ( ($generated@@313 $generated@@315))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) ($generated@@244 $generated@@152 $generated@@152)) (= (type $generated@@319) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@312 $generated@@318) $generated@@319))  (and ($generated@@0 ($generated@@84 ($generated@@242 $generated@@318) ($generated@@150 ($generated@@263 $generated@@143 $generated@@319)))) (= ($generated@@84 ($generated@@313 $generated@@318) ($generated@@150 ($generated@@263 $generated@@143 $generated@@319))) ($generated@@151 ($generated@@263 $generated@@143 $generated@@319))))))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@318) $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (! (let (($generated@@322 (type $generated@@321)))
(let (($generated@@323 ($generated@@227 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@226 $generated@@323 $generated@@322)) (= ($generated@@0 ($generated@@84 ($generated@@273 $generated@@320) $generated@@321)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) (and ($generated@@0 ($generated@@84 ($generated@@224 $generated@@320) $generated@@324)) (= $generated@@321 ($generated@@84 ($generated@@305 $generated@@320) $generated@@324))))
 :pattern ( ($generated@@84 ($generated@@224 $generated@@320) $generated@@324))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@320) $generated@@324))
))))))
 :pattern ( ($generated@@84 ($generated@@273 $generated@@320) $generated@@321))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (! (let (($generated@@327 (type $generated@@326)))
(let (($generated@@328 ($generated@@245 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@244 $generated@@328 $generated@@327)) (= ($generated@@0 ($generated@@84 ($generated@@284 $generated@@325) $generated@@326)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) (and ($generated@@0 ($generated@@84 ($generated@@242 $generated@@325) $generated@@329)) (= $generated@@326 ($generated@@84 ($generated@@313 $generated@@325) $generated@@329))))
 :pattern ( ($generated@@84 ($generated@@242 $generated@@325) $generated@@329))
 :pattern ( ($generated@@84 ($generated@@313 $generated@@325) $generated@@329))
))))))
 :pattern ( ($generated@@84 ($generated@@284 $generated@@325) $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@331 $generated@@332)) $generated@@67)
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@226 $generated@@152 $generated@@152)) (= (type $generated@@334) $generated@@67)) (= (type $generated@@335) $generated@@67)) (= (type $generated@@336) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@333 ($generated@@330 $generated@@334 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@224 $generated@@333) $generated@@337))) (and ($generated@@193 ($generated@@84 ($generated@@305 $generated@@333) $generated@@337) $generated@@335 $generated@@336) ($generated@@193 $generated@@337 $generated@@334 $generated@@336)))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@333) $generated@@337))
 :pattern ( ($generated@@84 ($generated@@224 $generated@@333) $generated@@337))
))))
 :pattern ( ($generated@@77 $generated@@333 ($generated@@330 $generated@@334 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@339 $generated@@340)) $generated@@67)
 :pattern ( ($generated@@338 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (and (= (type $generated@@341) ($generated@@244 $generated@@152 $generated@@152)) (= (type $generated@@342) $generated@@67)) (= (type $generated@@343) $generated@@67)) (= (type $generated@@344) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@341 ($generated@@338 $generated@@342 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@242 $generated@@341) $generated@@345))) (and ($generated@@193 ($generated@@84 ($generated@@313 $generated@@341) $generated@@345) $generated@@343 $generated@@344) ($generated@@193 $generated@@345 $generated@@342 $generated@@344)))
 :pattern ( ($generated@@84 ($generated@@313 $generated@@341) $generated@@345))
 :pattern ( ($generated@@84 ($generated@@242 $generated@@341) $generated@@345))
))))
 :pattern ( ($generated@@77 $generated@@341 ($generated@@338 $generated@@342 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@347 T@T) ) (! (= (type ($generated@@346 $generated@@347)) ($generated@@79 $generated@@347 $generated@@4))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@246 (type $generated@@348))))
(let (($generated@@350 ($generated@@245 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@244 $generated@@350 $generated@@349)) (= (= $generated@@348 ($generated@@243 $generated@@350 $generated@@349)) (= ($generated@@242 $generated@@348) ($generated@@346 $generated@@350))))))
 :pattern ( ($generated@@242 $generated@@348))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@246 (type $generated@@351))))
(let (($generated@@353 ($generated@@245 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@244 $generated@@353 $generated@@352)) (= (= $generated@@351 ($generated@@243 $generated@@353 $generated@@352)) (= ($generated@@284 $generated@@351) ($generated@@346 $generated@@352))))))
 :pattern ( ($generated@@284 $generated@@351))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@246 (type $generated@@354))))
(let (($generated@@356 ($generated@@245 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@244 $generated@@356 $generated@@355)) (= (= $generated@@354 ($generated@@243 $generated@@356 $generated@@355)) (= ($generated@@312 $generated@@354) ($generated@@346 $generated@@152))))))
 :pattern ( ($generated@@312 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@228 (type $generated@@357))))
(let (($generated@@359 ($generated@@227 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@226 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@225 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (and (and (= (type $generated@@360) $generated@@152) (= (type $generated@@361) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@304 $generated@@357) ($generated@@213 ($generated@@168 $generated@@360 $generated@@361)))))
 :no-pattern (type $generated@@360)
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@304 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@246 (type $generated@@362))))
(let (($generated@@364 ($generated@@245 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@244 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@243 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (and (and (= (type $generated@@365) $generated@@152) (= (type $generated@@366) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@362) ($generated@@213 ($generated@@168 $generated@@365 $generated@@366)))))
 :no-pattern (type $generated@@365)
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@312 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@152) ($generated@@169 $generated@@367 $generated@@46)) (and (= ($generated@@213 ($generated@@263 $generated@@2 $generated@@367)) $generated@@367) ($generated@@139 ($generated@@263 $generated@@2 $generated@@367) $generated@@46)))
 :pattern ( ($generated@@169 $generated@@367 $generated@@46))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@152) ($generated@@169 $generated@@368 $generated@@47)) (and (= ($generated@@213 ($generated@@263 $generated@@3 $generated@@368)) $generated@@368) ($generated@@139 ($generated@@263 $generated@@3 $generated@@368) $generated@@47)))
 :pattern ( ($generated@@169 $generated@@368 $generated@@47))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@152) ($generated@@169 $generated@@369 $generated@@44)) (and (= ($generated@@213 ($generated@@263 $generated@@4 $generated@@369)) $generated@@369) ($generated@@139 ($generated@@263 $generated@@4 $generated@@369) $generated@@44)))
 :pattern ( ($generated@@169 $generated@@369 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@370) 19))
(assert (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@152) ($generated@@169 $generated@@371 $generated@@45)) (and (= ($generated@@213 ($generated@@263 $generated@@370 $generated@@371)) $generated@@371) ($generated@@139 ($generated@@263 $generated@@370 $generated@@371) $generated@@45)))
 :pattern ( ($generated@@169 $generated@@371 $generated@@45))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@67) (= ($generated@@169 ($generated@@213 $generated@@372) $generated@@373) ($generated@@139 $generated@@372 $generated@@373)))
 :pattern ( ($generated@@169 ($generated@@213 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@82 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@79 $generated@@375 $generated@@2)) (<= 0 ($generated@@218 $generated@@374))))
 :pattern ( ($generated@@218 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@208 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@207 $generated@@377)) (<= 0 ($generated@@206 $generated@@376))))
 :pattern ( ($generated@@206 $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ) (! (= (type ($generated@@378 $generated@@379)) $generated@@67)
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@67) (= (type $generated@@381) $generated@@67)) (= ($generated@@378 ($generated@@330 $generated@@380 $generated@@381)) $generated@@380))
 :pattern ( ($generated@@330 $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (= (type ($generated@@382 $generated@@383)) $generated@@67)
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@67) (= (type $generated@@385) $generated@@67)) (= ($generated@@382 ($generated@@330 $generated@@384 $generated@@385)) $generated@@385))
 :pattern ( ($generated@@330 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@67) (= (type $generated@@387) $generated@@67)) (= ($generated@@75 ($generated@@330 $generated@@386 $generated@@387)) $generated@@58))
 :pattern ( ($generated@@330 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (= (type ($generated@@388 $generated@@389)) $generated@@67)
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@67) (= (type $generated@@391) $generated@@67)) (= ($generated@@388 ($generated@@338 $generated@@390 $generated@@391)) $generated@@390))
 :pattern ( ($generated@@338 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (= (type ($generated@@392 $generated@@393)) $generated@@67)
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@67) (= (type $generated@@395) $generated@@67)) (= ($generated@@392 ($generated@@338 $generated@@394 $generated@@395)) $generated@@395))
 :pattern ( ($generated@@338 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@67) (= (type $generated@@397) $generated@@67)) (= ($generated@@75 ($generated@@338 $generated@@396 $generated@@397)) $generated@@59))
 :pattern ( ($generated@@338 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@152) (= (type $generated@@399) $generated@@152)) (= ($generated@@199 ($generated@@168 $generated@@398 $generated@@399)) $generated@@61))
 :pattern ( ($generated@@168 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (= (type ($generated@@400 $generated@@401)) $generated@@67)
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@67) (= (type $generated@@403) $generated@@67)) (= ($generated@@400 ($generated@@142 $generated@@402 $generated@@403)) $generated@@402))
 :pattern ( ($generated@@142 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (= (type ($generated@@404 $generated@@405)) $generated@@67)
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@67) (= (type $generated@@407) $generated@@67)) (= ($generated@@404 ($generated@@142 $generated@@406 $generated@@407)) $generated@@407))
 :pattern ( ($generated@@142 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@152) (= (type $generated@@409) $generated@@152)) (= ($generated@@150 ($generated@@168 $generated@@408 $generated@@409)) $generated@@408))
 :pattern ( ($generated@@168 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@152) (= (type $generated@@411) $generated@@152)) (= ($generated@@151 ($generated@@168 $generated@@410 $generated@@411)) $generated@@411))
 :pattern ( ($generated@@168 $generated@@410 $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) $generated@@67)
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ($generated@@416 Int) ) (! (let (($generated@@417 ($generated@@208 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415 $generated@@416)) $generated@@417))
 :pattern ( ($generated@@413 $generated@@415 $generated@@416))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@207 $generated@@152)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@418 ($generated@@412 $generated@@419) $generated@@420) (forall (($generated@@421 Int) ) (!  (=> (and (<= 0 $generated@@421) (< $generated@@421 ($generated@@206 $generated@@418))) ($generated@@193 ($generated@@413 $generated@@418 $generated@@421) $generated@@419 $generated@@420))
 :pattern ( ($generated@@413 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@77 $generated@@418 ($generated@@412 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 Int) ) (! (= ($generated@@422 ($generated@@78 $generated@@423)) $generated@@423)
 :pattern ( ($generated@@78 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@67)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@67) (= ($generated@@424 ($generated@@178 $generated@@426)) $generated@@426))
 :pattern ( ($generated@@178 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (= (type $generated@@427) $generated@@67) (= ($generated@@75 ($generated@@178 $generated@@427)) $generated@@54))
 :pattern ( ($generated@@178 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@67)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@67) (= ($generated@@428 ($generated@@183 $generated@@430)) $generated@@430))
 :pattern ( ($generated@@183 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@67) (= ($generated@@75 ($generated@@183 $generated@@431)) $generated@@55))
 :pattern ( ($generated@@183 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@67)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@67) (= ($generated@@432 ($generated@@157 $generated@@434)) $generated@@434))
 :pattern ( ($generated@@157 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@435)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (= (type $generated@@438) $generated@@67) (= ($generated@@436 ($generated@@412 $generated@@438)) $generated@@438))
 :pattern ( ($generated@@412 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (= (type $generated@@439) $generated@@67) (= ($generated@@75 ($generated@@412 $generated@@439)) $generated@@57))
 :pattern ( ($generated@@412 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(= ($generated@@263 $generated@@441 ($generated@@213 $generated@@440)) $generated@@440))
 :pattern ( ($generated@@213 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (= (type $generated@@442) ($generated@@226 $generated@@152 $generated@@152)) (= (type $generated@@443) $generated@@67)) (= (type $generated@@444) $generated@@67)) (= ($generated@@139 $generated@@442 ($generated@@330 $generated@@443 $generated@@444)) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@224 $generated@@442) $generated@@445))) (and ($generated@@169 ($generated@@84 ($generated@@305 $generated@@442) $generated@@445) $generated@@444) ($generated@@169 $generated@@445 $generated@@443)))
 :pattern ( ($generated@@84 ($generated@@305 $generated@@442) $generated@@445))
 :pattern ( ($generated@@84 ($generated@@224 $generated@@442) $generated@@445))
))))
 :pattern ( ($generated@@139 $generated@@442 ($generated@@330 $generated@@443 $generated@@444)))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (= (type $generated@@446) ($generated@@244 $generated@@152 $generated@@152)) (= (type $generated@@447) $generated@@67)) (= (type $generated@@448) $generated@@67)) (= ($generated@@139 $generated@@446 ($generated@@338 $generated@@447 $generated@@448)) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@242 $generated@@446) $generated@@449))) (and ($generated@@169 ($generated@@84 ($generated@@313 $generated@@446) $generated@@449) $generated@@448) ($generated@@169 $generated@@449 $generated@@447)))
 :pattern ( ($generated@@84 ($generated@@313 $generated@@446) $generated@@449))
 :pattern ( ($generated@@84 ($generated@@242 $generated@@446) $generated@@449))
))))
 :pattern ( ($generated@@139 $generated@@446 ($generated@@338 $generated@@447 $generated@@448)))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@152) (= (type $generated@@453) $generated@@152)) (< ($generated@@450 $generated@@452) ($generated@@451 ($generated@@168 $generated@@452 $generated@@453))))
 :pattern ( ($generated@@168 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@152) (= (type $generated@@455) $generated@@152)) (< ($generated@@450 $generated@@455) ($generated@@451 ($generated@@168 $generated@@454 $generated@@455))))
 :pattern ( ($generated@@168 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (= (type $generated@@456) $generated@@152) (= (type $generated@@457) $generated@@67)) (= (type $generated@@458) $generated@@67)) ($generated@@169 $generated@@456 ($generated@@330 $generated@@457 $generated@@458))) (and (= ($generated@@213 ($generated@@263 ($generated@@226 $generated@@152 $generated@@152) $generated@@456)) $generated@@456) ($generated@@139 ($generated@@263 ($generated@@226 $generated@@152 $generated@@152) $generated@@456) ($generated@@330 $generated@@457 $generated@@458))))
 :pattern ( ($generated@@169 $generated@@456 ($generated@@330 $generated@@457 $generated@@458)))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (and (= (type $generated@@459) $generated@@152) (= (type $generated@@460) $generated@@67)) (= (type $generated@@461) $generated@@67)) ($generated@@169 $generated@@459 ($generated@@338 $generated@@460 $generated@@461))) (and (= ($generated@@213 ($generated@@263 ($generated@@244 $generated@@152 $generated@@152) $generated@@459)) $generated@@459) ($generated@@139 ($generated@@263 ($generated@@244 $generated@@152 $generated@@152) $generated@@459) ($generated@@338 $generated@@460 $generated@@461))))
 :pattern ( ($generated@@169 $generated@@459 ($generated@@338 $generated@@460 $generated@@461)))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) $generated@@67) (= (type $generated@@463) $generated@@67)) (= (type $generated@@464) $generated@@152)) ($generated@@169 $generated@@464 ($generated@@142 $generated@@462 $generated@@463))) (and (= ($generated@@213 ($generated@@263 $generated@@143 $generated@@464)) $generated@@464) ($generated@@139 ($generated@@263 $generated@@143 $generated@@464) ($generated@@142 $generated@@462 $generated@@463))))
 :pattern ( ($generated@@169 $generated@@464 ($generated@@142 $generated@@462 $generated@@463)))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 (type $generated@@465)))
 (not ($generated@@0 ($generated@@84 ($generated@@346 $generated@@466) $generated@@465))))
 :pattern ( (let (($generated@@466 (type $generated@@465)))
($generated@@84 ($generated@@346 $generated@@466) $generated@@465)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@473 T@T) ($generated@@474 T@T) ) (= ($generated@@1 ($generated@@469 $generated@@473 $generated@@474)) 20)) (forall (($generated@@475 T@T) ($generated@@476 T@T) ) (! (= ($generated@@470 ($generated@@469 $generated@@475 $generated@@476)) $generated@@475)
 :pattern ( ($generated@@469 $generated@@475 $generated@@476))
))) (forall (($generated@@477 T@T) ($generated@@478 T@T) ) (! (= ($generated@@471 ($generated@@469 $generated@@477 $generated@@478)) $generated@@478)
 :pattern ( ($generated@@469 $generated@@477 $generated@@478))
))) (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@471 (type $generated@@479))))
(= (type ($generated@@467 $generated@@479 $generated@@480 $generated@@481)) $generated@@482))
 :pattern ( ($generated@@467 $generated@@479 $generated@@480 $generated@@481))
))) (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
(let (($generated@@488 (type $generated@@484)))
(= (type ($generated@@472 $generated@@483 $generated@@484 $generated@@485 $generated@@486)) ($generated@@469 $generated@@488 $generated@@487))))
 :pattern ( ($generated@@472 $generated@@483 $generated@@484 $generated@@485 $generated@@486))
))) (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@471 (type $generated@@489))))
 (=> (= (type $generated@@492) $generated@@493) (= ($generated@@467 ($generated@@472 $generated@@489 $generated@@490 $generated@@491 $generated@@492) $generated@@490 $generated@@491) $generated@@492)))
 :weight 0
))) (and (and (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (or (= $generated@@496 $generated@@498) (= ($generated@@467 ($generated@@472 $generated@@495 $generated@@496 $generated@@497 $generated@@494) $generated@@498 $generated@@499) ($generated@@467 $generated@@495 $generated@@498 $generated@@499)))
 :weight 0
)) (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (or (= $generated@@503 $generated@@505) (= ($generated@@467 ($generated@@472 $generated@@501 $generated@@502 $generated@@503 $generated@@500) $generated@@504 $generated@@505) ($generated@@467 $generated@@501 $generated@@504 $generated@@505)))
 :weight 0
))) (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (or true (= ($generated@@467 ($generated@@472 $generated@@507 $generated@@508 $generated@@509 $generated@@506) $generated@@510 $generated@@511) ($generated@@467 $generated@@507 $generated@@510 $generated@@511)))
 :weight 0
)))) (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (! (= (type ($generated@@468 $generated@@512 $generated@@513 $generated@@514 $generated@@515)) ($generated@@469 $generated@@80 $generated@@4))
 :pattern ( ($generated@@468 $generated@@512 $generated@@513 $generated@@514 $generated@@515))
))))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@70 (type $generated@@521))))
 (=> (and (and (and (and (and (= (type $generated@@516) $generated@@80) (= (type $generated@@517) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@518) ($generated@@69 $generated@@4))) (= (type $generated@@519) $generated@@80)) (= (type $generated@@520) $generated@@80)) (= (type $generated@@521) ($generated@@69 $generated@@522))) (= ($generated@@0 ($generated@@467 ($generated@@468 $generated@@516 $generated@@517 $generated@@518 $generated@@519) $generated@@520 $generated@@521))  (=> (and (not (= $generated@@520 $generated@@516)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@517 $generated@@520) $generated@@518))) (= $generated@@520 $generated@@519)))))
 :pattern ( ($generated@@467 ($generated@@468 $generated@@516 $generated@@517 $generated@@518 $generated@@519) $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@72)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@67) (= (type $generated@@526) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@525 $generated@@526)) $generated@@62) (= ($generated@@523 ($generated@@142 $generated@@525 $generated@@526)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@143) (= ($generated@@450 ($generated@@213 $generated@@527)) ($generated@@451 $generated@@527)))
 :pattern ( ($generated@@450 ($generated@@213 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@152) ($generated@@169 $generated@@528 ($generated@@78 0))) (and (= ($generated@@213 ($generated@@263 $generated@@2 $generated@@528)) $generated@@528) ($generated@@139 ($generated@@263 ($generated@@79 $generated@@152 $generated@@4) $generated@@528) ($generated@@78 0))))
 :pattern ( ($generated@@169 $generated@@528 ($generated@@78 0)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@152) (= (type $generated@@530) $generated@@67)) ($generated@@169 $generated@@529 ($generated@@178 $generated@@530))) (and (= ($generated@@213 ($generated@@263 ($generated@@79 $generated@@152 $generated@@4) $generated@@529)) $generated@@529) ($generated@@139 ($generated@@263 ($generated@@79 $generated@@152 $generated@@4) $generated@@529) ($generated@@178 $generated@@530))))
 :pattern ( ($generated@@169 $generated@@529 ($generated@@178 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@152) (= (type $generated@@532) $generated@@67)) ($generated@@169 $generated@@531 ($generated@@183 $generated@@532))) (and (= ($generated@@213 ($generated@@263 ($generated@@79 $generated@@152 $generated@@4) $generated@@531)) $generated@@531) ($generated@@139 ($generated@@263 ($generated@@79 $generated@@152 $generated@@4) $generated@@531) ($generated@@183 $generated@@532))))
 :pattern ( ($generated@@169 $generated@@531 ($generated@@183 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) ($generated@@169 $generated@@533 ($generated@@157 $generated@@534))) (and (= ($generated@@213 ($generated@@263 ($generated@@79 $generated@@152 $generated@@2) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@263 ($generated@@79 $generated@@152 $generated@@2) $generated@@533) ($generated@@157 $generated@@534))))
 :pattern ( ($generated@@169 $generated@@533 ($generated@@157 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@152) (= (type $generated@@536) $generated@@67)) ($generated@@169 $generated@@535 ($generated@@412 $generated@@536))) (and (= ($generated@@213 ($generated@@263 ($generated@@207 $generated@@152) $generated@@535)) $generated@@535) ($generated@@139 ($generated@@263 ($generated@@207 $generated@@152) $generated@@535) ($generated@@412 $generated@@536))))
 :pattern ( ($generated@@169 $generated@@535 ($generated@@412 $generated@@536)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@523 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@165) $generated@@64))
(assert (= ($generated@@523 $generated@@165) $generated@@66))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@538) $generated@@67)) (= (type $generated@@539) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@537 ($generated@@157 $generated@@538) $generated@@539) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@537 $generated@@540)))) ($generated@@193 $generated@@540 $generated@@538 $generated@@539))
 :pattern ( ($generated@@84 $generated@@537 $generated@@540))
))))
 :pattern ( ($generated@@77 $generated@@537 ($generated@@157 $generated@@538) $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@143) (= (type $generated@@542) $generated@@67)) (= (type $generated@@543) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@192 $generated@@543) (and ($generated@@141 $generated@@541) (exists (($generated@@544 T@U) ) (!  (and (= (type $generated@@544) $generated@@67) ($generated@@77 $generated@@541 ($generated@@142 $generated@@542 $generated@@544) $generated@@543))
 :pattern ( ($generated@@77 $generated@@541 ($generated@@142 $generated@@542 $generated@@544) $generated@@543))
))))) ($generated@@193 ($generated@@150 $generated@@541) $generated@@542 $generated@@543))
 :pattern ( ($generated@@193 ($generated@@150 $generated@@541) $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@143) (= (type $generated@@546) $generated@@67)) (= (type $generated@@547) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@192 $generated@@547) (and ($generated@@141 $generated@@545) (exists (($generated@@548 T@U) ) (!  (and (= (type $generated@@548) $generated@@67) ($generated@@77 $generated@@545 ($generated@@142 $generated@@548 $generated@@546) $generated@@547))
 :pattern ( ($generated@@77 $generated@@545 ($generated@@142 $generated@@548 $generated@@546) $generated@@547))
))))) ($generated@@193 ($generated@@151 $generated@@545) $generated@@546 $generated@@547))
 :pattern ( ($generated@@193 ($generated@@151 $generated@@545) $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@152) (= (type $generated@@550) $generated@@152)) (= ($generated@@168 ($generated@@188 $generated@@549) ($generated@@188 $generated@@550)) ($generated@@188 ($generated@@168 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@168 ($generated@@188 $generated@@549) ($generated@@188 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (! (= ($generated@@213 ($generated@@188 $generated@@551)) ($generated@@188 ($generated@@213 $generated@@551)))
 :pattern ( ($generated@@213 ($generated@@188 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@208 (type $generated@@552))))
 (=> (and (= (type $generated@@552) ($generated@@207 $generated@@553)) (= ($generated@@206 $generated@@552) 0)) (= $generated@@552 ($generated@@205 $generated@@553))))
 :pattern ( ($generated@@206 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@555)))
 (=> (and (and (= (type $generated@@554) ($generated@@79 $generated@@557 $generated@@2)) (= (type $generated@@556) $generated@@2)) (<= 0 ($generated $generated@@556))) (= ($generated@@218 ($generated@@85 $generated@@554 $generated@@555 $generated@@556)) (+ (- ($generated@@218 $generated@@554) ($generated ($generated@@84 $generated@@554 $generated@@555))) ($generated $generated@@556)))))
 :pattern ( ($generated@@218 ($generated@@85 $generated@@554 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@559) $generated@@2)) ($generated@@77 $generated@@559 $generated@@46 $generated@@558))
 :pattern ( ($generated@@77 $generated@@559 $generated@@46 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@561) $generated@@3)) ($generated@@77 $generated@@561 $generated@@47 $generated@@560))
 :pattern ( ($generated@@77 $generated@@561 $generated@@47 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@563) $generated@@4)) ($generated@@77 $generated@@563 $generated@@44 $generated@@562))
 :pattern ( ($generated@@77 $generated@@563 $generated@@44 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@565) $generated@@370)) ($generated@@77 $generated@@565 $generated@@45 $generated@@564))
 :pattern ( ($generated@@77 $generated@@565 $generated@@45 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@567) $generated@@152)) ($generated@@77 $generated@@567 $generated@@48 $generated@@566))
 :pattern ( ($generated@@77 $generated@@567 $generated@@48 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@207 $generated@@152)) (= (type $generated@@569) $generated@@67)) (= ($generated@@139 $generated@@568 ($generated@@412 $generated@@569)) (forall (($generated@@570 Int) ) (!  (=> (and (<= 0 $generated@@570) (< $generated@@570 ($generated@@206 $generated@@568))) ($generated@@169 ($generated@@413 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@413 $generated@@568 $generated@@570))
))))
 :pattern ( ($generated@@139 $generated@@568 ($generated@@412 $generated@@569)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 Int) ) (!  (=> (= (type $generated@@572) ($generated@@207 $generated@@152)) (=> (and (<= 0 $generated@@573) (< $generated@@573 ($generated@@206 $generated@@572))) (< ($generated@@451 ($generated@@263 $generated@@143 ($generated@@413 $generated@@572 $generated@@573))) ($generated@@571 $generated@@572))))
 :pattern ( ($generated@@451 ($generated@@263 $generated@@143 ($generated@@413 $generated@@572 $generated@@573))))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) ($generated@@226 $generated@@152 $generated@@152)) (= (type $generated@@575) $generated@@67)) (= (type $generated@@576) $generated@@67)) ($generated@@139 $generated@@574 ($generated@@330 $generated@@575 $generated@@576))) (and (and ($generated@@139 ($generated@@224 $generated@@574) ($generated@@178 $generated@@575)) ($generated@@139 ($generated@@273 $generated@@574) ($generated@@178 $generated@@576))) ($generated@@139 ($generated@@304 $generated@@574) ($generated@@178 ($generated@@142 $generated@@575 $generated@@576)))))
 :pattern ( ($generated@@139 $generated@@574 ($generated@@330 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) ($generated@@244 $generated@@152 $generated@@152)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) $generated@@67)) ($generated@@139 $generated@@577 ($generated@@338 $generated@@578 $generated@@579))) (and (and ($generated@@139 ($generated@@242 $generated@@577) ($generated@@183 $generated@@578)) ($generated@@139 ($generated@@284 $generated@@577) ($generated@@183 $generated@@579))) ($generated@@139 ($generated@@312 $generated@@577) ($generated@@183 ($generated@@142 $generated@@578 $generated@@579)))))
 :pattern ( ($generated@@139 $generated@@577 ($generated@@338 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@2) ($generated@@139 $generated@@580 $generated@@46))
 :pattern ( ($generated@@139 $generated@@580 $generated@@46))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@3) ($generated@@139 $generated@@581 $generated@@47))
 :pattern ( ($generated@@139 $generated@@581 $generated@@47))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@4) ($generated@@139 $generated@@582 $generated@@44))
 :pattern ( ($generated@@139 $generated@@582 $generated@@44))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@370) ($generated@@139 $generated@@583 $generated@@45))
 :pattern ( ($generated@@139 $generated@@583 $generated@@45))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@152) ($generated@@139 $generated@@584 $generated@@48))
 :pattern ( ($generated@@139 $generated@@584 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@585 () T@U)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () Int)
(declare-fun $generated@@589 (T@U) Bool)
(declare-fun $generated@@590 () Int)
(assert  (and (and (= (type $generated@@585) ($generated@@469 $generated@@80 $generated@@4)) (= (type $generated@@586) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@587) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@591  (=> (and (= $generated@@585 ($generated@@468 $generated@@136 $generated@@586 $generated@@60 $generated@@587)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@588 $generated@@588))))
(let (($generated@@592  (=> (and ($generated@@192 $generated@@586) ($generated@@589 $generated@@586)) (=> (and (and ($generated@@139 $generated@@587 $generated@@165) ($generated@@77 $generated@@587 $generated@@165 $generated@@586)) (and (= 1 $generated@@590) (= (ControlFlow 0 3) 2))) $generated@@591))))
$generated@@592)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@182  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (=> (and (= $generated@@177 ($generated@@157 2)) (= $generated@@178 ($generated@@157 1))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= $generated@@178 ($generated@@157 1))) (=> (= $generated@@178 ($generated@@157 1)) (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@177 ($generated@@157 2)))))))))
(let (($generated@@183  (=> (and (and ($generated@@179 $generated@@175) ($generated@@180 $generated@@175)) (and (= 0 $generated@@181) (= (ControlFlow 0 4) 2))) $generated@@182)))
$generated@@183)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () Int)
(assert  (and (and (and (= (type $generated@@181) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@182) $generated@@47)) (= (type $generated@@183) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@184) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@188  (and (=> (= (ControlFlow 0 2) (- 0 3)) (= $generated@@173 ($generated@@157 1))) (=> (= $generated@@173 ($generated@@157 1)) (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@174 ($generated@@157 2)))))))
(let (($generated@@189  (=> (and (and (not ($generated@@0 ($generated@@159 ($generated@@11 true)))) (= $generated@@173 $generated@@175)) (and (= $generated@@174 $generated@@176) (= (ControlFlow 0 5) 2))) $generated@@188)))
(let (($generated@@190  (=> (and (and (and ($generated@@0 ($generated@@159 ($generated@@11 true))) (= $generated@@177 ($generated@@157 3))) (and (= $generated@@178 ($generated@@157 4)) (= $generated@@179 ($generated@@157 1)))) (and (and (= $generated@@180 ($generated@@157 2)) (= $generated@@173 $generated@@179)) (and (= $generated@@174 $generated@@180) (= (ControlFlow 0 4) 2)))) $generated@@188)))
(let (($generated@@191  (=> (= $generated@@181 ($generated@@45 $generated@@182 $generated@@183 $generated@@184 false)) (=> (and (= $generated@@175 ($generated@@157 2)) (= $generated@@176 ($generated@@157 1))) (and (=> (= (ControlFlow 0 6) 4) $generated@@190) (=> (= (ControlFlow 0 6) 5) $generated@@189))))))
(let (($generated@@192  (=> (and (and ($generated@@185 $generated@@183) ($generated@@186 $generated@@183)) (and (= 0 $generated@@187) (= (ControlFlow 0 7) 6))) $generated@@191)))
$generated@@192))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@67) (= (type $generated@@255) $generated@@67)) (= (type $generated@@256) $generated@@156)) (= (type $generated@@257) $generated@@156)) (= (type $generated@@258) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@252 $generated@@258)) (= ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@71)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@147) (= ($generated@@145 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@147) ($generated@@145 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@156) (= (type $generated@@264) $generated@@156)) (= $generated@@262 ($generated@@228 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@145 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@156)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@67) (= (type $generated@@277) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@77 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@280) $generated@@156)) (= (type $generated@@281) $generated@@67)) ($generated@@135 $generated@@278 $generated@@279)) ($generated@@253 $generated@@280 $generated@@281 $generated@@278)) ($generated@@253 $generated@@280 $generated@@281 $generated@@279))
 :pattern ( ($generated@@135 $generated@@278 $generated@@279) ($generated@@253 $generated@@280 $generated@@281 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@282) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@283) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@285) $generated@@67)) ($generated@@135 $generated@@282 $generated@@283)) ($generated@@77 $generated@@284 $generated@@285 $generated@@282)) ($generated@@77 $generated@@284 $generated@@285 $generated@@283))
 :pattern ( ($generated@@135 $generated@@282 $generated@@283) ($generated@@77 $generated@@284 $generated@@285 $generated@@282))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@79 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@82 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@79 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@84 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 18)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@79 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@84 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@84 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@79 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@82 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@79 $generated@@329 $generated@@2)) (= ($generated@@162 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@84 $generated@@328 $generated@@330))) (<= ($generated ($generated@@84 $generated@@328 $generated@@330)) ($generated@@286 $generated@@328))))
 :pattern ( ($generated@@84 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@162 $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@331 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@156) ($generated@@229 $generated@@334 $generated@@139)) (and (= ($generated@@273 ($generated@@331 $generated@@80 $generated@@334)) $generated@@334) ($generated@@143 ($generated@@331 $generated@@80 $generated@@334) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@334 $generated@@139))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@156) ($generated@@229 $generated@@335 $generated@@225)) (and (= ($generated@@273 ($generated@@331 $generated@@80 $generated@@335)) $generated@@335) ($generated@@143 ($generated@@331 $generated@@80 $generated@@335) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@335 $generated@@225))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@80) (= ($generated@@143 $generated@@336 $generated@@225)  (and ($generated@@143 $generated@@336 $generated@@139) (not (= $generated@@336 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@336 $generated@@225))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@296 (type $generated@@337))))
(let (($generated@@339 ($generated@@295 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@294 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@293 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@292 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@296 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@79 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@296 (type $generated@@344))))
(let (($generated@@346 ($generated@@295 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@294 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@293 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@84 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@314 (type $generated@@348))))
(let (($generated@@350 ($generated@@313 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@312 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@311 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@310 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@314 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@79 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@314 (type $generated@@355))))
(let (($generated@@357 ($generated@@313 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@312 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@311 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@84 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@360) $generated@@67)) (= ($generated@@143 $generated@@359 ($generated@@161 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@359 $generated@@361)))) ($generated@@229 $generated@@361 $generated@@360))
 :pattern ( ($generated@@84 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@143 $generated@@359 ($generated@@161 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@362 ($generated@@238 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@156) ($generated@@0 ($generated@@84 $generated@@362 $generated@@365))) ($generated@@253 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@84 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@77 $generated@@362 ($generated@@238 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@367) $generated@@67)) (= (type $generated@@368) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@366 ($generated@@243 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@156) ($generated@@0 ($generated@@84 $generated@@366 $generated@@369))) ($generated@@253 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@84 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@77 $generated@@366 ($generated@@243 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@84 ($generated@@287 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@84 ($generated@@287 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@296 (type $generated@@375))))
(let (($generated@@377 ($generated@@295 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@79 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@379) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@84 ($generated@@292 $generated@@378) ($generated@@154 ($generated@@331 $generated@@147 $generated@@379)))) (= ($generated@@84 ($generated@@373 $generated@@378) ($generated@@154 ($generated@@331 $generated@@147 $generated@@379))) ($generated@@155 ($generated@@331 $generated@@147 $generated@@379))))))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@314 (type $generated@@383))))
(let (($generated@@385 ($generated@@313 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@79 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@387) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@386) ($generated@@154 ($generated@@331 $generated@@147 $generated@@387)))) (= ($generated@@84 ($generated@@381 $generated@@386) ($generated@@154 ($generated@@331 $generated@@147 $generated@@387))) ($generated@@155 ($generated@@331 $generated@@147 $generated@@387))))))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@295 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@294 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@84 ($generated@@341 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@84 ($generated@@292 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@84 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@388) $generated@@392))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@84 ($generated@@341 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@313 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@312 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@84 ($generated@@352 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@84 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@393) $generated@@397))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@84 ($generated@@352 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@67)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@402) $generated@@67)) (= (type $generated@@403) $generated@@67)) (= (type $generated@@404) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@401) $generated@@405))) (and ($generated@@253 ($generated@@84 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@253 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@67)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@410) $generated@@67)) (= (type $generated@@411) $generated@@67)) (= (type $generated@@412) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@409) $generated@@413))) (and ($generated@@253 ($generated@@84 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@253 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@77 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@415) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@416) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@414 $generated@@416))) (and ($generated@@135 $generated@@414 $generated@@415) ($generated@@135 $generated@@415 $generated@@416))) ($generated@@135 $generated@@414 $generated@@416))
 :pattern ( ($generated@@135 $generated@@414 $generated@@415) ($generated@@135 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@79 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@314 (type $generated@@419))))
(let (($generated@@421 ($generated@@313 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@312 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@311 $generated@@421 $generated@@420)) (= ($generated@@310 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@310 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@314 (type $generated@@422))))
(let (($generated@@424 ($generated@@313 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@312 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@311 $generated@@424 $generated@@423)) (= ($generated@@352 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@352 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@314 (type $generated@@425))))
(let (($generated@@427 ($generated@@313 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@312 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@311 $generated@@427 $generated@@426)) (= ($generated@@380 $generated@@425) ($generated@@417 $generated@@156))))))
 :pattern ( ($generated@@380 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@296 (type $generated@@428))))
(let (($generated@@430 ($generated@@295 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@294 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@293 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@156) (= (type $generated@@432) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@372 $generated@@428) ($generated@@273 ($generated@@228 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@372 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@314 (type $generated@@433))))
(let (($generated@@435 ($generated@@313 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@312 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@311 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@156) (= (type $generated@@437) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@380 $generated@@433) ($generated@@273 ($generated@@228 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@156) ($generated@@229 $generated@@438 $generated@@46)) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@438)) $generated@@438) ($generated@@143 ($generated@@331 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@156) ($generated@@229 $generated@@439 $generated@@47)) (and (= ($generated@@273 ($generated@@331 $generated@@3 $generated@@439)) $generated@@439) ($generated@@143 ($generated@@331 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@156) ($generated@@229 $generated@@440 $generated@@44)) (and (= ($generated@@273 ($generated@@331 $generated@@4 $generated@@440)) $generated@@440) ($generated@@143 ($generated@@331 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@156) ($generated@@229 $generated@@442 $generated@@45)) (and (= ($generated@@273 ($generated@@331 $generated@@441 $generated@@442)) $generated@@442) ($generated@@143 ($generated@@331 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@67) (= ($generated@@229 ($generated@@273 $generated@@443) $generated@@444) ($generated@@143 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@229 ($generated@@273 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@82 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@79 $generated@@446 $generated@@2)) (<= 0 ($generated@@286 $generated@@445))))
 :pattern ( ($generated@@286 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@268 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@267 $generated@@448)) (<= 0 ($generated@@266 $generated@@447))))
 :pattern ( ($generated@@266 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@398 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@398 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@398 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@398 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@75 ($generated@@398 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@406 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@463 ($generated@@406 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@75 ($generated@@406 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@156) (= (type $generated@@470) $generated@@156)) (= ($generated@@259 ($generated@@228 $generated@@469 $generated@@470)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@146 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@146 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@146 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@146 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@156) (= (type $generated@@480) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@228 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@156) (= (type $generated@@482) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@268 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@267 $generated@@156)) (= (type $generated@@490) $generated@@67)) (= (type $generated@@491) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@266 $generated@@489))) ($generated@@253 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@77 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@78 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@78 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@495 ($generated@@238 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@238 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@499 ($generated@@243 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@243 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@67)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@503 ($generated@@161 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@161 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@67) (= ($generated@@75 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@331 $generated@@512 ($generated@@273 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@273 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) $generated@@67)) (= ($generated@@143 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@513) $generated@@516))) (and ($generated@@229 ($generated@@84 ($generated@@373 $generated@@513) $generated@@516) $generated@@515) ($generated@@229 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@513) $generated@@516))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@143 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) (= ($generated@@143 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@517) $generated@@520))) (and ($generated@@229 ($generated@@84 ($generated@@381 $generated@@517) $generated@@520) $generated@@519) ($generated@@229 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@517) $generated@@520))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@143 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@156) (= (type $generated@@524) $generated@@156)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@228 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@228 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@156) (= (type $generated@@526) $generated@@156)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@228 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@228 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@156) (= (type $generated@@528) $generated@@67)) (= (type $generated@@529) $generated@@67)) ($generated@@229 $generated@@527 ($generated@@398 $generated@@528 $generated@@529))) (and (= ($generated@@273 ($generated@@331 ($generated@@294 $generated@@156 $generated@@156) $generated@@527)) $generated@@527) ($generated@@143 ($generated@@331 ($generated@@294 $generated@@156 $generated@@156) $generated@@527) ($generated@@398 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@229 $generated@@527 ($generated@@398 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@156) (= (type $generated@@531) $generated@@67)) (= (type $generated@@532) $generated@@67)) ($generated@@229 $generated@@530 ($generated@@406 $generated@@531 $generated@@532))) (and (= ($generated@@273 ($generated@@331 ($generated@@312 $generated@@156 $generated@@156) $generated@@530)) $generated@@530) ($generated@@143 ($generated@@331 ($generated@@312 $generated@@156 $generated@@156) $generated@@530) ($generated@@406 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@229 $generated@@530 ($generated@@406 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@67) (= (type $generated@@534) $generated@@67)) (= (type $generated@@535) $generated@@156)) ($generated@@229 $generated@@535 ($generated@@146 $generated@@533 $generated@@534))) (and (= ($generated@@273 ($generated@@331 $generated@@147 $generated@@535)) $generated@@535) ($generated@@143 ($generated@@331 $generated@@147 $generated@@535) ($generated@@146 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@535 ($generated@@146 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@84 ($generated@@417 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@84 ($generated@@417 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@72)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@67) (= (type $generated@@541) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@540 $generated@@541)) $generated@@62) (= ($generated@@538 ($generated@@146 $generated@@540 $generated@@541)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@147) (= ($generated@@521 ($generated@@273 $generated@@542)) ($generated@@522 $generated@@542)))
 :pattern ( ($generated@@521 ($generated@@273 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@156) ($generated@@229 $generated@@543 ($generated@@78 0))) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@543)) $generated@@543) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@543) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@543 ($generated@@78 0)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@156) (= (type $generated@@545) $generated@@67)) ($generated@@229 $generated@@544 ($generated@@238 $generated@@545))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@544)) $generated@@544) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@544) ($generated@@238 $generated@@545))))
 :pattern ( ($generated@@229 $generated@@544 ($generated@@238 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@156) (= (type $generated@@547) $generated@@67)) ($generated@@229 $generated@@546 ($generated@@243 $generated@@547))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@546)) $generated@@546) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@546) ($generated@@243 $generated@@547))))
 :pattern ( ($generated@@229 $generated@@546 ($generated@@243 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@156) (= (type $generated@@549) $generated@@67)) ($generated@@229 $generated@@548 ($generated@@161 $generated@@549))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@2) $generated@@548)) $generated@@548) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@2) $generated@@548) ($generated@@161 $generated@@549))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@161 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@156) (= (type $generated@@551) $generated@@67)) ($generated@@229 $generated@@550 ($generated@@483 $generated@@551))) (and (= ($generated@@273 ($generated@@331 ($generated@@267 $generated@@156) $generated@@550)) $generated@@550) ($generated@@143 ($generated@@331 ($generated@@267 $generated@@156) $generated@@550) ($generated@@483 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@550 ($generated@@483 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (=> (and (and (and (= (type $generated@@552) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@553) $generated@@80)) (= (type $generated@@554) ($generated@@69 $generated@@556))) ($generated@@252 ($generated@@85 $generated@@552 $generated@@553 ($generated@@87 ($generated@@84 $generated@@552 $generated@@553) $generated@@554 $generated@@555)))) ($generated@@135 $generated@@552 ($generated@@85 $generated@@552 $generated@@553 ($generated@@87 ($generated@@84 $generated@@552 $generated@@553) $generated@@554 $generated@@555)))))
 :pattern ( ($generated@@85 $generated@@552 $generated@@553 ($generated@@87 ($generated@@84 $generated@@552 $generated@@553) $generated@@554 $generated@@555)))
)))
(assert (= ($generated@@75 $generated@@139) $generated@@63))
(assert (= ($generated@@538 $generated@@139) $generated@@66))
(assert (= ($generated@@75 $generated@@225) $generated@@64))
(assert (= ($generated@@538 $generated@@225) $generated@@66))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@558) $generated@@67)) (= (type $generated@@559) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@557 ($generated@@161 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@557 $generated@@560)))) ($generated@@253 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@84 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@77 $generated@@557 ($generated@@161 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@147) (= (type $generated@@562) $generated@@67)) (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@563) (and ($generated@@145 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@67) ($generated@@77 $generated@@561 ($generated@@146 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@77 $generated@@561 ($generated@@146 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@253 ($generated@@154 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@253 ($generated@@154 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@147) (= (type $generated@@566) $generated@@67)) (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@567) (and ($generated@@145 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@67) ($generated@@77 $generated@@565 ($generated@@146 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@77 $generated@@565 ($generated@@146 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@253 ($generated@@155 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@253 ($generated@@155 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@156) (= (type $generated@@570) $generated@@156)) (= ($generated@@228 ($generated@@248 $generated@@569) ($generated@@248 $generated@@570)) ($generated@@248 ($generated@@228 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@228 ($generated@@248 $generated@@569) ($generated@@248 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (! (= ($generated@@273 ($generated@@248 $generated@@571)) ($generated@@248 ($generated@@273 $generated@@571)))
 :pattern ( ($generated@@273 ($generated@@248 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@268 (type $generated@@572))))
 (=> (and (= (type $generated@@572) ($generated@@267 $generated@@573)) (= ($generated@@266 $generated@@572) 0)) (= $generated@@572 ($generated@@265 $generated@@573))))
 :pattern ( ($generated@@266 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@575)))
 (=> (and (and (= (type $generated@@574) ($generated@@79 $generated@@577 $generated@@2)) (= (type $generated@@576) $generated@@2)) (<= 0 ($generated $generated@@576))) (= ($generated@@286 ($generated@@85 $generated@@574 $generated@@575 $generated@@576)) (+ (- ($generated@@286 $generated@@574) ($generated ($generated@@84 $generated@@574 $generated@@575))) ($generated $generated@@576)))))
 :pattern ( ($generated@@286 ($generated@@85 $generated@@574 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@579) $generated@@2)) ($generated@@77 $generated@@579 $generated@@46 $generated@@578))
 :pattern ( ($generated@@77 $generated@@579 $generated@@46 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@581) $generated@@3)) ($generated@@77 $generated@@581 $generated@@47 $generated@@580))
 :pattern ( ($generated@@77 $generated@@581 $generated@@47 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@583) $generated@@4)) ($generated@@77 $generated@@583 $generated@@44 $generated@@582))
 :pattern ( ($generated@@77 $generated@@583 $generated@@44 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@585) $generated@@441)) ($generated@@77 $generated@@585 $generated@@45 $generated@@584))
 :pattern ( ($generated@@77 $generated@@585 $generated@@45 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@587) $generated@@156)) ($generated@@77 $generated@@587 $generated@@48 $generated@@586))
 :pattern ( ($generated@@77 $generated@@587 $generated@@48 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@267 $generated@@156)) (= (type $generated@@589) $generated@@67)) (= ($generated@@143 $generated@@588 ($generated@@483 $generated@@589)) (forall (($generated@@590 Int) ) (!  (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@266 $generated@@588))) ($generated@@229 ($generated@@484 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@484 $generated@@588 $generated@@590))
))))
 :pattern ( ($generated@@143 $generated@@588 ($generated@@483 $generated@@589)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 Int) ) (!  (=> (= (type $generated@@592) ($generated@@267 $generated@@156)) (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@266 $generated@@592))) (< ($generated@@522 ($generated@@331 $generated@@147 ($generated@@484 $generated@@592 $generated@@593))) ($generated@@591 $generated@@592))))
 :pattern ( ($generated@@522 ($generated@@331 $generated@@147 ($generated@@484 $generated@@592 $generated@@593))))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@595) $generated@@67)) (= (type $generated@@596) $generated@@67)) ($generated@@143 $generated@@594 ($generated@@398 $generated@@595 $generated@@596))) (and (and ($generated@@143 ($generated@@292 $generated@@594) ($generated@@238 $generated@@595)) ($generated@@143 ($generated@@341 $generated@@594) ($generated@@238 $generated@@596))) ($generated@@143 ($generated@@372 $generated@@594) ($generated@@238 ($generated@@146 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@143 $generated@@594 ($generated@@398 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@598) $generated@@67)) (= (type $generated@@599) $generated@@67)) ($generated@@143 $generated@@597 ($generated@@406 $generated@@598 $generated@@599))) (and (and ($generated@@143 ($generated@@310 $generated@@597) ($generated@@243 $generated@@598)) ($generated@@143 ($generated@@352 $generated@@597) ($generated@@243 $generated@@599))) ($generated@@143 ($generated@@380 $generated@@597) ($generated@@243 ($generated@@146 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@143 $generated@@597 ($generated@@406 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@2) ($generated@@143 $generated@@600 $generated@@46))
 :pattern ( ($generated@@143 $generated@@600 $generated@@46))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@3) ($generated@@143 $generated@@601 $generated@@47))
 :pattern ( ($generated@@143 $generated@@601 $generated@@47))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@4) ($generated@@143 $generated@@602 $generated@@44))
 :pattern ( ($generated@@143 $generated@@602 $generated@@44))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@441) ($generated@@143 $generated@@603 $generated@@45))
 :pattern ( ($generated@@143 $generated@@603 $generated@@45))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@156) ($generated@@143 $generated@@604 $generated@@48))
 :pattern ( ($generated@@143 $generated@@604 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 (T@U) Bool)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Bool)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@605) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@606) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@607) $generated@@80)) (= (type $generated@@608) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@610) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@611) $generated@@80)) (= (type $generated@@613) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@615  (=> (= $generated@@605 ($generated@@170 $generated@@140 $generated@@606 $generated@@60 false)) (=> (and (not (= $generated@@607 $generated@@140)) (= ($generated@@166 $generated@@607) $generated@@139)) (=> (and (and (not ($generated@@0 ($generated@@86 ($generated@@84 $generated@@606 $generated@@607) $generated@@60))) (= $generated@@608 ($generated@@85 $generated@@606 $generated@@607 ($generated@@87 ($generated@@84 $generated@@606 $generated@@607) $generated@@60 ($generated@@11 true))))) (and ($generated@@252 $generated@@608) ($generated@@609 $generated@@608))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (! (let (($generated@@618 ($generated@@70 (type $generated@@617))))
 (=> (and (= (type $generated@@616) $generated@@80) (= (type $generated@@617) ($generated@@69 $generated@@618))) (=> (and (and (not (= $generated@@616 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@608 $generated@@616) $generated@@60))) (= $generated@@616 $generated@@607)) ($generated@@0 ($generated@@169 $generated@@605 $generated@@616 $generated@@617)))))
 :no-pattern (type $generated@@616)
 :no-pattern (type $generated@@617)
 :no-pattern ($generated $generated@@616)
 :no-pattern ($generated@@0 $generated@@616)
 :no-pattern ($generated $generated@@617)
 :no-pattern ($generated@@0 $generated@@617)
))) (=> (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 ($generated@@70 (type $generated@@620))))
 (=> (and (= (type $generated@@619) $generated@@80) (= (type $generated@@620) ($generated@@69 $generated@@621))) (=> (and (and (not (= $generated@@619 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@608 $generated@@619) $generated@@60))) (= $generated@@619 $generated@@607)) ($generated@@0 ($generated@@169 $generated@@605 $generated@@619 $generated@@620)))))
 :no-pattern (type $generated@@619)
 :no-pattern (type $generated@@620)
 :no-pattern ($generated $generated@@619)
 :no-pattern ($generated@@0 $generated@@619)
 :no-pattern ($generated $generated@@620)
 :no-pattern ($generated@@0 $generated@@620)
)) (=> (and (and (and ($generated@@252 $generated@@610) ($generated@@609 $generated@@610)) (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@80) (=> (and (not (= $generated@@622 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@608 $generated@@622) $generated@@60))) (or (= ($generated@@84 $generated@@610 $generated@@622) ($generated@@84 $generated@@608 $generated@@622)) (= $generated@@622 $generated@@607))))
 :pattern ( ($generated@@84 $generated@@610 $generated@@622))
))) (and ($generated@@135 $generated@@608 $generated@@610) (= (ControlFlow 0 2) (- 0 1)))) true))))))))
(let (($generated@@623  (=> (and ($generated@@252 $generated@@606) ($generated@@609 $generated@@606)) (=> (and (and (and ($generated@@143 $generated@@611 $generated@@225) ($generated@@77 $generated@@611 $generated@@225 $generated@@606)) (=> $generated@@612 (and ($generated@@143 $generated@@613 $generated@@225) ($generated@@77 $generated@@613 $generated@@225 $generated@@606)))) (and (= 2 $generated@@614) (= (ControlFlow 0 4) 2))) $generated@@615))))
$generated@@623)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@181  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (=> (and (= $generated@@177 ($generated@@157 2)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@177 ($generated@@157 2))))))
(let (($generated@@182  (=> (and (and ($generated@@178 $generated@@175) ($generated@@179 $generated@@175)) (and (= 0 $generated@@180) (= (ControlFlow 0 3) 2))) $generated@@181)))
$generated@@182)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
