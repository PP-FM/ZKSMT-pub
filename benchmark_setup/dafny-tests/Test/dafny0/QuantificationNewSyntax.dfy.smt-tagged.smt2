(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@T) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@241 () Int)
(declare-fun $generated@@242 (Int) T@U)
(declare-fun $generated@@243 (Int) Bool)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (Int T@U Int) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@297 (Int Int T@U Int) T@U)
(declare-fun $generated@@298 (Int Int) Int)
(declare-fun $generated@@317 (T@U) Int)
(declare-fun $generated@@318 (T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T T@T) T@U)
(declare-fun $generated@@343 (T@T T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@362 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U Int) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (Int T@U Int Int) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@452 (T@U T@U) T@U)
(declare-fun $generated@@460 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@T) T@U)
(declare-fun $generated@@494 () T@T)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@620 (Int T@U) T@U)
(declare-fun $generated@@651 (T@U) Int)
(declare-fun $generated@@654 (Int T@U Int Int) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert  (and (and (forall (($generated@@141 T@T) ) (= ($generated@@1 ($generated@@139 $generated@@141)) 14)) (forall (($generated@@142 T@T) ) (! (= ($generated@@140 ($generated@@139 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@139 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (let (($generated@@145 (type $generated@@144)))
(= (type ($generated@@138 $generated@@143 $generated@@144)) ($generated@@139 $generated@@145)))
 :pattern ( ($generated@@138 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 (type $generated@@147)))
 (=> (and (= (type $generated@@146) ($generated@@139 $generated@@149)) (= (type $generated@@148) $generated@@149)) (= ($generated@@137 ($generated@@138 $generated@@146 $generated@@147) $generated@@148)  (or (= $generated@@147 $generated@@148) ($generated@@137 $generated@@146 $generated@@148)))))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@146 $generated@@147) $generated@@148))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@2) ($generated@@150 $generated@@151 ($generated@@77 0)))
 :pattern ( ($generated@@150 $generated@@151 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@66)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@66) (= (type $generated@@158) $generated@@66)) (= (type $generated@@159) $generated@@154)) ($generated@@150 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@150 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 16) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@T) ) (! (= (type ($generated@@168 $generated@@169)) ($generated@@139 $generated@@169))
 :pattern ( ($generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ) (! (let (($generated@@171 (type $generated@@170)))
 (not ($generated@@137 ($generated@@168 $generated@@171) $generated@@170)))
 :pattern ( (let (($generated@@171 (type $generated@@170)))
($generated@@137 ($generated@@168 $generated@@171) $generated@@170)))
)))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@66)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@78 $generated@@163 $generated@@2)) (= (type $generated@@176) $generated@@66)) ($generated@@150 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@150 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 17)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@79 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@69 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@79) (= (type $generated@@227) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@228) ($generated@@68 $generated@@4))) (= (type $generated@@230) $generated@@79)) (= (type $generated@@231) ($generated@@68 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@154)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@66) (= (type $generated@@238) $generated@@66)) (= (type $generated@@239) $generated@@163)) (= (type $generated@@240) $generated@@163)) (= ($generated@@150 ($generated@@233 $generated@@239 $generated@@240) ($generated@@153 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@150 ($generated@@233 $generated@@239 $generated@@240) ($generated@@153 $generated@@237 $generated@@238)))
)))
(assert  (and (forall (($generated@@246 Int) ) (! (= (type ($generated@@242 $generated@@246)) ($generated@@139 $generated@@163))
 :pattern ( ($generated@@242 $generated@@246))
)) (forall (($generated@@247 T@U) ) (! (= (type ($generated@@245 $generated@@247)) $generated@@66)
 :pattern ( ($generated@@245 $generated@@247))
))))
(assert  (=> (<= 1 $generated@@241) (forall (($generated@@248 Int) ) (!  (=> (or ($generated@@243 $generated@@248) (and (not (= 1 $generated@@241)) (and (<= ($generated@@244 0) $generated@@248) (< $generated@@248 3)))) ($generated@@150 ($generated@@242 $generated@@248) ($generated@@245 $generated@@46)))
 :pattern ( ($generated@@242 $generated@@248))
))))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@154) (= (type $generated@@250) $generated@@154)) (= ($generated@@160 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@160 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@66)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@78 $generated@@163 $generated@@4)) (= (type $generated@@254) $generated@@66)) (= ($generated@@150 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@163) ($generated@@0 ($generated@@83 $generated@@253 $generated@@255))) ($generated@@234 $generated@@255 $generated@@254))
 :pattern ( ($generated@@83 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@150 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@66)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@78 $generated@@163 $generated@@4)) (= (type $generated@@259) $generated@@66)) (= ($generated@@150 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@163) ($generated@@0 ($generated@@83 $generated@@258 $generated@@260))) ($generated@@234 $generated@@260 $generated@@259))
 :pattern ( ($generated@@83 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@150 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@244 $generated@@261) $generated@@261)
 :pattern ( ($generated@@244 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (= (type $generated@@266) ($generated@@139 $generated@@163)) (= (type $generated@@267) $generated@@163)) (= (type $generated@@268) $generated@@66)) (and ($generated@@150 $generated@@266 ($generated@@245 $generated@@268)) ($generated@@234 $generated@@267 $generated@@268))) ($generated@@150 ($generated@@138 $generated@@266 $generated@@267) ($generated@@245 $generated@@268)))
 :pattern ( ($generated@@150 ($generated@@138 $generated@@266 $generated@@267) ($generated@@245 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) $generated@@66)) (= (type $generated@@273) $generated@@163)) (= (type $generated@@274) $generated@@163)) (= (type $generated@@275) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@269 $generated@@275)) (= ($generated@@76 ($generated@@233 $generated@@273 $generated@@274) ($generated@@153 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@76 ($generated@@233 $generated@@273 $generated@@274) ($generated@@153 $generated@@271 $generated@@272) $generated@@275))
)))
(assert  (and (forall (($generated@@278 Int) ($generated@@279 T@U) ($generated@@280 Int) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279 $generated@@280)) ($generated@@78 $generated@@163 $generated@@4))
 :pattern ( ($generated@@276 $generated@@278 $generated@@279 $generated@@280))
)) (forall (($generated@@281 T@U) ) (! (= (type ($generated@@277 $generated@@281)) $generated@@163)
 :pattern ( ($generated@@277 $generated@@281))
))))
(assert (forall (($generated@@282 Int) ($generated@@283 T@U) ($generated@@284 Int) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@139 $generated@@163)) (= (type $generated@@285) $generated@@163)) (= ($generated@@0 ($generated@@83 ($generated@@276 $generated@@282 $generated@@283 $generated@@284) $generated@@285)) (exists (($generated@@286 Int) ($generated@@287 Int) ) (!  (and (and (<= $generated@@282 $generated@@286) (and (and ($generated@@137 $generated@@283 ($generated@@277 ($generated@@8 $generated@@286))) (< $generated@@286 $generated@@284)) ($generated@@137 ($generated@@242 $generated@@286) ($generated@@277 ($generated@@8 $generated@@287))))) (= $generated@@285 ($generated@@277 ($generated@@8 $generated@@287))))
 :pattern ( ($generated@@137 ($generated@@242 $generated@@286) ($generated@@277 ($generated@@8 $generated@@287))))
))))
 :pattern ( ($generated@@83 ($generated@@276 $generated@@282 $generated@@283 $generated@@284) $generated@@285))
)))
(assert  (=> (<= 1 $generated@@241) (forall (($generated@@288 Int) ) (!  (=> (or ($generated@@243 $generated@@288) (and (not (= 1 $generated@@241)) (and (<= ($generated@@244 0) $generated@@288) (< $generated@@288 3)))) (= ($generated@@242 $generated@@288) ($generated@@262 ($generated@@138 ($generated@@138 ($generated@@138 ($generated@@138 ($generated@@168 $generated@@163) ($generated@@277 ($generated@@8 ($generated@@244 (- 0 5))))) ($generated@@277 ($generated@@8 ($generated@@244 4)))) ($generated@@277 ($generated@@8 ($generated@@244 0)))) ($generated@@277 ($generated@@8 ($generated@@244 (- 0 12))))))))
 :pattern ( ($generated@@242 $generated@@288))
))))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@70)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@154) (= ($generated@@152 $generated@@291) (= ($generated@@289 $generated@@291) $generated@@62)))
 :pattern ( ($generated@@152 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@154) ($generated@@152 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (and (and (= (type $generated@@293) $generated@@163) (= (type $generated@@294) $generated@@163)) (= $generated@@292 ($generated@@233 $generated@@293 $generated@@294)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@152 $generated@@292))
)))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@295 ($generated@@168 $generated@@296)) 0)
 :pattern ( ($generated@@168 $generated@@296))
)))
(assert (forall (($generated@@299 Int) ($generated@@300 Int) ($generated@@301 T@U) ($generated@@302 Int) ) (! (= (type ($generated@@297 $generated@@299 $generated@@300 $generated@@301 $generated@@302)) ($generated@@78 $generated@@163 $generated@@4))
 :pattern ( ($generated@@297 $generated@@299 $generated@@300 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 Int) ($generated@@304 Int) ($generated@@305 T@U) ($generated@@306 Int) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@305) ($generated@@139 $generated@@163)) (= (type $generated@@307) $generated@@163)) (= ($generated@@0 ($generated@@83 ($generated@@297 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307)) (exists (($generated@@308 Int) ($generated@@309 Int) )  (and (and (and (<= $generated@@303 $generated@@308) (<= $generated@@304 $generated@@309)) (and ($generated@@137 $generated@@305 ($generated@@277 ($generated@@8 $generated@@308))) (= $generated@@309 ($generated@@298 $generated@@306 $generated@@308)))) (= $generated@@307 ($generated@@277 ($generated@@8 $generated@@309)))))))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@303 $generated@@304 $generated@@305 $generated@@306) $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@2) (= ($generated@@150 $generated@@310 $generated@@134) (<= ($generated@@244 0) ($generated $generated@@310))))
 :pattern ( ($generated@@150 $generated@@310 $generated@@134))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (! (let (($generated@@313 (type $generated@@312)))
 (=> (= (type $generated@@311) ($generated@@139 $generated@@313)) (= ($generated@@295 ($generated@@138 $generated@@311 $generated@@312)) (+ 1 ($generated@@295 $generated@@311)))))
 :pattern ( ($generated@@138 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@66) (= (type $generated@@316) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@270 ($generated@@277 $generated@@314) $generated@@315 $generated@@316) ($generated@@76 $generated@@314 $generated@@315 $generated@@316)))
 :pattern ( ($generated@@270 ($generated@@277 $generated@@314) $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@319 T@T) ) (! (= (type ($generated@@318 $generated@@319)) ($generated@@78 $generated@@319 $generated@@2))
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@81 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@78 $generated@@321 $generated@@2)) (and (= (= ($generated@@317 $generated@@320) 0) (= $generated@@320 ($generated@@318 $generated@@321))) (=> (not (= ($generated@@317 $generated@@320) 0)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) (< 0 ($generated ($generated@@83 $generated@@320 $generated@@322))))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@317 $generated@@320))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 18)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@78 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@83 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@83 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert  (and (and (and (and (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (= ($generated@@1 ($generated@@343 $generated@@346 $generated@@347)) 19)) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@344 ($generated@@343 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@343 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@345 ($generated@@343 $generated@@350 $generated@@351)) $generated@@351)
 :pattern ( ($generated@@343 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@344 (type $generated@@352))))
(= (type ($generated@@341 $generated@@352)) ($generated@@78 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@352))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= (type ($generated@@342 $generated@@354 $generated@@355)) ($generated@@343 $generated@@354 $generated@@355))
 :pattern ( ($generated@@342 $generated@@354 $generated@@355))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@T) ) (! (let (($generated@@358 (type $generated@@356)))
 (not ($generated@@0 ($generated@@83 ($generated@@341 ($generated@@342 $generated@@358 $generated@@357)) $generated@@356))))
 :pattern ( (let (($generated@@358 (type $generated@@356)))
($generated@@83 ($generated@@341 ($generated@@342 $generated@@358 $generated@@357)) $generated@@356)))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@81 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@78 $generated@@360 $generated@@2)) (= ($generated@@173 $generated@@359) (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@360) (and (<= 0 ($generated ($generated@@83 $generated@@359 $generated@@361))) (<= ($generated ($generated@@83 $generated@@359 $generated@@361)) ($generated@@317 $generated@@359))))
 :pattern ( ($generated@@83 $generated@@359 $generated@@361))
)))))
 :pattern ( ($generated@@173 $generated@@359))
)))
(assert (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@163) ($generated@@234 $generated@@365 $generated@@134)) (and (= ($generated@@277 ($generated@@362 $generated@@2 $generated@@365)) $generated@@365) ($generated@@150 ($generated@@362 $generated@@2 $generated@@365) $generated@@134)))
 :pattern ( ($generated@@234 $generated@@365 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@241) (forall (($generated@@366 Int) ) (!  (=> (or ($generated@@243 ($generated@@244 $generated@@366)) (and (not (= 1 $generated@@241)) (and (<= ($generated@@244 0) $generated@@366) ($generated@@0 ($generated@@262 ($generated@@11 (< $generated@@366 3))))))) (= ($generated@@242 ($generated@@244 $generated@@366)) ($generated@@262 ($generated@@138 ($generated@@138 ($generated@@138 ($generated@@138 ($generated@@168 $generated@@163) ($generated@@277 ($generated@@8 ($generated@@244 (- 0 5))))) ($generated@@277 ($generated@@8 ($generated@@244 4)))) ($generated@@277 ($generated@@8 ($generated@@244 0)))) ($generated@@277 ($generated@@8 ($generated@@244 (- 0 12))))))))
 :weight 3
 :pattern ( ($generated@@242 ($generated@@244 $generated@@366)))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 Int) ) (! (let (($generated@@370 ($generated@@140 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@370))
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 Int) ($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
 (=> (= (type $generated@@371) ($generated@@139 $generated@@374)) (and (=> (= $generated@@372 ($generated@@295 $generated@@371)) (= ($generated@@367 ($generated@@138 $generated@@371 $generated@@373) $generated@@372) $generated@@373)) (=> (not (= $generated@@372 ($generated@@295 $generated@@371))) (= ($generated@@367 ($generated@@138 $generated@@371 $generated@@373) $generated@@372) ($generated@@367 $generated@@371 $generated@@372))))))
 :pattern ( ($generated@@367 ($generated@@138 $generated@@371 $generated@@373) $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@327 (type $generated@@375))))
(let (($generated@@377 ($generated@@326 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@325 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@324 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@83 ($generated@@323 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@323 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@327 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@78 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@327 (type $generated@@382))))
(let (($generated@@384 ($generated@@326 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@325 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@324 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@83 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@345 (type $generated@@386))))
(let (($generated@@388 ($generated@@344 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@343 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@342 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@83 ($generated@@341 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@341 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@345 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@78 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@345 (type $generated@@393))))
(let (($generated@@395 ($generated@@344 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@343 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@342 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@83 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@398 Int) ($generated@@399 T@U) ($generated@@400 Int) ($generated@@401 Int) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399 $generated@@400 $generated@@401)) ($generated@@78 $generated@@163 $generated@@4))
 :pattern ( ($generated@@397 $generated@@398 $generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 Int) ($generated@@403 T@U) ($generated@@404 Int) ($generated@@405 Int) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@139 $generated@@163)) (= (type $generated@@406) $generated@@163)) (= ($generated@@0 ($generated@@83 ($generated@@397 $generated@@402 $generated@@403 $generated@@404 $generated@@405) $generated@@406)) (exists (($generated@@407 Int) ($generated@@408 Int) ) (!  (and (and (<= $generated@@402 $generated@@407) (and (and (and ($generated@@137 $generated@@403 ($generated@@277 ($generated@@8 $generated@@407))) (< $generated@@407 $generated@@404)) ($generated@@137 ($generated@@242 $generated@@407) ($generated@@277 ($generated@@8 $generated@@408)))) (<= $generated@@405 $generated@@408))) (= $generated@@406 ($generated@@277 ($generated@@8 $generated@@408))))
 :pattern ( ($generated@@137 ($generated@@242 $generated@@407) ($generated@@277 ($generated@@8 $generated@@408))))
))))
 :pattern ( ($generated@@83 ($generated@@397 $generated@@402 $generated@@403 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@78 $generated@@163 $generated@@2)) (= (type $generated@@410) $generated@@66)) (= ($generated@@150 $generated@@409 ($generated@@172 $generated@@410)) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@163) (< 0 ($generated ($generated@@83 $generated@@409 $generated@@411)))) ($generated@@234 $generated@@411 $generated@@410))
 :pattern ( ($generated@@83 $generated@@409 $generated@@411))
))))
 :pattern ( ($generated@@150 $generated@@409 ($generated@@172 $generated@@410)))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
 (=> (= (type $generated@@412) ($generated@@139 $generated@@414)) (= ($generated@@137 $generated@@412 $generated@@413) (exists (($generated@@415 Int) ) (!  (and (and (<= 0 $generated@@415) (< $generated@@415 ($generated@@295 $generated@@412))) (= ($generated@@367 $generated@@412 $generated@@415) $generated@@413))
 :pattern ( ($generated@@367 $generated@@412 $generated@@415))
)))))
 :pattern ( ($generated@@137 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@78 $generated@@163 $generated@@4)) (= (type $generated@@417) $generated@@66)) (= (type $generated@@418) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@416 ($generated@@251 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@163) ($generated@@0 ($generated@@83 $generated@@416 $generated@@419))) ($generated@@270 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@83 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@76 $generated@@416 ($generated@@251 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (= (type $generated@@420) ($generated@@78 $generated@@163 $generated@@4)) (= (type $generated@@421) $generated@@66)) (= (type $generated@@422) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@420 ($generated@@256 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@163) ($generated@@0 ($generated@@83 $generated@@420 $generated@@423))) ($generated@@270 $generated@@423 $generated@@421 $generated@@422))
 :pattern ( ($generated@@83 $generated@@420 $generated@@423))
))))
 :pattern ( ($generated@@76 $generated@@420 ($generated@@256 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(= ($generated ($generated@@83 ($generated@@318 $generated@@425) $generated@@424)) 0))
 :pattern ( (let (($generated@@425 (type $generated@@424)))
($generated@@83 ($generated@@318 $generated@@425) $generated@@424)))
)))
(assert  (and (forall (($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@428)) ($generated@@78 $generated@@163 $generated@@4))
 :pattern ( ($generated@@426 $generated@@428))
)) (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@327 (type $generated@@429))))
(let (($generated@@431 ($generated@@326 (type $generated@@429))))
(= (type ($generated@@427 $generated@@429)) ($generated@@78 $generated@@431 $generated@@430))))
 :pattern ( ($generated@@427 $generated@@429))
))))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@433) $generated@@163)) (= ($generated@@0 ($generated@@83 ($generated@@426 $generated@@432) $generated@@433))  (and ($generated@@0 ($generated@@83 ($generated@@323 $generated@@432) ($generated@@161 ($generated@@362 $generated@@154 $generated@@433)))) (= ($generated@@83 ($generated@@427 $generated@@432) ($generated@@161 ($generated@@362 $generated@@154 $generated@@433))) ($generated@@162 ($generated@@362 $generated@@154 $generated@@433))))))
 :pattern ( ($generated@@83 ($generated@@426 $generated@@432) $generated@@433))
)))
(assert  (and (forall (($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@436)) ($generated@@78 $generated@@163 $generated@@4))
 :pattern ( ($generated@@434 $generated@@436))
)) (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@345 (type $generated@@437))))
(let (($generated@@439 ($generated@@344 (type $generated@@437))))
(= (type ($generated@@435 $generated@@437)) ($generated@@78 $generated@@439 $generated@@438))))
 :pattern ( ($generated@@435 $generated@@437))
))))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@343 $generated@@163 $generated@@163)) (= (type $generated@@441) $generated@@163)) (= ($generated@@0 ($generated@@83 ($generated@@434 $generated@@440) $generated@@441))  (and ($generated@@0 ($generated@@83 ($generated@@341 $generated@@440) ($generated@@161 ($generated@@362 $generated@@154 $generated@@441)))) (= ($generated@@83 ($generated@@435 $generated@@440) ($generated@@161 ($generated@@362 $generated@@154 $generated@@441))) ($generated@@162 ($generated@@362 $generated@@154 $generated@@441))))))
 :pattern ( ($generated@@83 ($generated@@434 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(let (($generated@@445 ($generated@@326 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@325 $generated@@445 $generated@@444)) (= ($generated@@0 ($generated@@83 ($generated@@379 $generated@@442) $generated@@443)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (and ($generated@@0 ($generated@@83 ($generated@@323 $generated@@442) $generated@@446)) (= $generated@@443 ($generated@@83 ($generated@@427 $generated@@442) $generated@@446))))
 :pattern ( ($generated@@83 ($generated@@323 $generated@@442) $generated@@446))
 :pattern ( ($generated@@83 ($generated@@427 $generated@@442) $generated@@446))
))))))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(let (($generated@@450 ($generated@@344 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@343 $generated@@450 $generated@@449)) (= ($generated@@0 ($generated@@83 ($generated@@390 $generated@@447) $generated@@448)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) (and ($generated@@0 ($generated@@83 ($generated@@341 $generated@@447) $generated@@451)) (= $generated@@448 ($generated@@83 ($generated@@435 $generated@@447) $generated@@451))))
 :pattern ( ($generated@@83 ($generated@@341 $generated@@447) $generated@@451))
 :pattern ( ($generated@@83 ($generated@@435 $generated@@447) $generated@@451))
))))))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@453 $generated@@454)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (= (type $generated@@455) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@456) $generated@@66)) (= (type $generated@@457) $generated@@66)) (= (type $generated@@458) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@163) ($generated@@0 ($generated@@83 ($generated@@323 $generated@@455) $generated@@459))) (and ($generated@@270 ($generated@@83 ($generated@@427 $generated@@455) $generated@@459) $generated@@457 $generated@@458) ($generated@@270 $generated@@459 $generated@@456 $generated@@458)))
 :pattern ( ($generated@@83 ($generated@@427 $generated@@455) $generated@@459))
 :pattern ( ($generated@@83 ($generated@@323 $generated@@455) $generated@@459))
))))
 :pattern ( ($generated@@76 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (and (= (type $generated@@463) ($generated@@343 $generated@@163 $generated@@163)) (= (type $generated@@464) $generated@@66)) (= (type $generated@@465) $generated@@66)) (= (type $generated@@466) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@163) ($generated@@0 ($generated@@83 ($generated@@341 $generated@@463) $generated@@467))) (and ($generated@@270 ($generated@@83 ($generated@@435 $generated@@463) $generated@@467) $generated@@465 $generated@@466) ($generated@@270 $generated@@467 $generated@@464 $generated@@466)))
 :pattern ( ($generated@@83 ($generated@@435 $generated@@463) $generated@@467))
 :pattern ( ($generated@@83 ($generated@@341 $generated@@463) $generated@@467))
))))
 :pattern ( ($generated@@76 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@468 Int) ($generated@@469 Int) ) (! (= ($generated@@298 $generated@@468 $generated@@469) (div $generated@@468 $generated@@469))
 :pattern ( ($generated@@298 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@T) ) (! (= (type ($generated@@470 $generated@@471)) ($generated@@78 $generated@@471 $generated@@4))
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@345 (type $generated@@472))))
(let (($generated@@474 ($generated@@344 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@343 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@342 $generated@@474 $generated@@473)) (= ($generated@@341 $generated@@472) ($generated@@470 $generated@@474))))))
 :pattern ( ($generated@@341 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@345 (type $generated@@475))))
(let (($generated@@477 ($generated@@344 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@343 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@342 $generated@@477 $generated@@476)) (= ($generated@@390 $generated@@475) ($generated@@470 $generated@@476))))))
 :pattern ( ($generated@@390 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@345 (type $generated@@478))))
(let (($generated@@480 ($generated@@344 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@343 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@342 $generated@@480 $generated@@479)) (= ($generated@@434 $generated@@478) ($generated@@470 $generated@@163))))))
 :pattern ( ($generated@@434 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@327 (type $generated@@481))))
(let (($generated@@483 ($generated@@326 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@325 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@324 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@163) (= (type $generated@@485) $generated@@163)) ($generated@@0 ($generated@@83 ($generated@@426 $generated@@481) ($generated@@277 ($generated@@233 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@426 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@345 (type $generated@@486))))
(let (($generated@@488 ($generated@@344 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@343 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@342 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@163) (= (type $generated@@490) $generated@@163)) ($generated@@0 ($generated@@83 ($generated@@434 $generated@@486) ($generated@@277 ($generated@@233 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@434 $generated@@486))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@163) ($generated@@234 $generated@@491 $generated@@46)) (and (= ($generated@@277 ($generated@@362 $generated@@2 $generated@@491)) $generated@@491) ($generated@@150 ($generated@@362 $generated@@2 $generated@@491) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@491 $generated@@46))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@163) ($generated@@234 $generated@@492 $generated@@47)) (and (= ($generated@@277 ($generated@@362 $generated@@3 $generated@@492)) $generated@@492) ($generated@@150 ($generated@@362 $generated@@3 $generated@@492) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@492 $generated@@47))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@163) ($generated@@234 $generated@@493 $generated@@44)) (and (= ($generated@@277 ($generated@@362 $generated@@4 $generated@@493)) $generated@@493) ($generated@@150 ($generated@@362 $generated@@4 $generated@@493) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@493 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@494) 20))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) ($generated@@234 $generated@@495 $generated@@45)) (and (= ($generated@@277 ($generated@@362 $generated@@494 $generated@@495)) $generated@@495) ($generated@@150 ($generated@@362 $generated@@494 $generated@@495) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@495 $generated@@45))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@234 ($generated@@277 $generated@@496) $generated@@497) ($generated@@150 $generated@@496 $generated@@497)))
 :pattern ( ($generated@@234 ($generated@@277 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@81 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@78 $generated@@499 $generated@@2)) (<= 0 ($generated@@317 $generated@@498))))
 :pattern ( ($generated@@317 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@140 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@139 $generated@@501)) (<= 0 ($generated@@295 $generated@@500))))
 :pattern ( ($generated@@295 $generated@@500))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@66) (= (type $generated@@505) $generated@@66)) (= ($generated@@502 ($generated@@452 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@452 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@66)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@66) (= (type $generated@@509) $generated@@66)) (= ($generated@@506 ($generated@@452 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@452 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@66) (= (type $generated@@511) $generated@@66)) (= ($generated@@74 ($generated@@452 $generated@@510 $generated@@511)) $generated@@58))
 :pattern ( ($generated@@452 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@66) (= (type $generated@@515) $generated@@66)) (= ($generated@@512 ($generated@@460 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@460 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@66)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@66) (= (type $generated@@519) $generated@@66)) (= ($generated@@516 ($generated@@460 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@460 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@66) (= (type $generated@@521) $generated@@66)) (= ($generated@@74 ($generated@@460 $generated@@520 $generated@@521)) $generated@@59))
 :pattern ( ($generated@@460 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@163) (= (type $generated@@523) $generated@@163)) (= ($generated@@289 ($generated@@233 $generated@@522 $generated@@523)) $generated@@62))
 :pattern ( ($generated@@233 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@66)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= ($generated@@524 ($generated@@153 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@153 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@66)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@66) (= (type $generated@@531) $generated@@66)) (= ($generated@@528 ($generated@@153 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@153 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@163) (= (type $generated@@533) $generated@@163)) (= ($generated@@161 ($generated@@233 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@233 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@163) (= (type $generated@@535) $generated@@163)) (= ($generated@@162 ($generated@@233 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@233 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@139 $generated@@163)) (= (type $generated@@537) $generated@@66)) (= (type $generated@@538) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@536 ($generated@@245 $generated@@537) $generated@@538) (forall (($generated@@539 Int) ) (!  (=> (and (<= 0 $generated@@539) (< $generated@@539 ($generated@@295 $generated@@536))) ($generated@@270 ($generated@@367 $generated@@536 $generated@@539) $generated@@537 $generated@@538))
 :pattern ( ($generated@@367 $generated@@536 $generated@@539))
))))
 :pattern ( ($generated@@76 $generated@@536 ($generated@@245 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@541 Int) ) (! (= ($generated@@540 ($generated@@77 $generated@@541)) $generated@@541)
 :pattern ( ($generated@@77 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@66)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@66) (= ($generated@@542 ($generated@@251 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@251 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@66) (= ($generated@@74 ($generated@@251 $generated@@545)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@66)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@66) (= ($generated@@546 ($generated@@256 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@256 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@66) (= ($generated@@74 ($generated@@256 $generated@@549)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@66)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@66) (= ($generated@@550 ($generated@@172 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@172 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@66) (= ($generated@@74 ($generated@@172 $generated@@553)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@66)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@66) (= ($generated@@554 ($generated@@245 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@245 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@66) (= ($generated@@74 ($generated@@245 $generated@@557)) $generated@@57))
 :pattern ( ($generated@@245 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
(= ($generated@@362 $generated@@559 ($generated@@277 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@277 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@561) $generated@@66)) (= (type $generated@@562) $generated@@66)) (= ($generated@@150 $generated@@560 ($generated@@452 $generated@@561 $generated@@562)) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@163) ($generated@@0 ($generated@@83 ($generated@@323 $generated@@560) $generated@@563))) (and ($generated@@234 ($generated@@83 ($generated@@427 $generated@@560) $generated@@563) $generated@@562) ($generated@@234 $generated@@563 $generated@@561)))
 :pattern ( ($generated@@83 ($generated@@427 $generated@@560) $generated@@563))
 :pattern ( ($generated@@83 ($generated@@323 $generated@@560) $generated@@563))
))))
 :pattern ( ($generated@@150 $generated@@560 ($generated@@452 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@343 $generated@@163 $generated@@163)) (= (type $generated@@565) $generated@@66)) (= (type $generated@@566) $generated@@66)) (= ($generated@@150 $generated@@564 ($generated@@460 $generated@@565 $generated@@566)) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@163) ($generated@@0 ($generated@@83 ($generated@@341 $generated@@564) $generated@@567))) (and ($generated@@234 ($generated@@83 ($generated@@435 $generated@@564) $generated@@567) $generated@@566) ($generated@@234 $generated@@567 $generated@@565)))
 :pattern ( ($generated@@83 ($generated@@435 $generated@@564) $generated@@567))
 :pattern ( ($generated@@83 ($generated@@341 $generated@@564) $generated@@567))
))))
 :pattern ( ($generated@@150 $generated@@564 ($generated@@460 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@163) (= (type $generated@@571) $generated@@163)) (< ($generated@@568 $generated@@570) ($generated@@569 ($generated@@233 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@233 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@163) (= (type $generated@@573) $generated@@163)) (< ($generated@@568 $generated@@573) ($generated@@569 ($generated@@233 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@233 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@163) (= (type $generated@@575) $generated@@66)) (= (type $generated@@576) $generated@@66)) ($generated@@234 $generated@@574 ($generated@@452 $generated@@575 $generated@@576))) (and (= ($generated@@277 ($generated@@362 ($generated@@325 $generated@@163 $generated@@163) $generated@@574)) $generated@@574) ($generated@@150 ($generated@@362 ($generated@@325 $generated@@163 $generated@@163) $generated@@574) ($generated@@452 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@234 $generated@@574 ($generated@@452 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@163) (= (type $generated@@578) $generated@@66)) (= (type $generated@@579) $generated@@66)) ($generated@@234 $generated@@577 ($generated@@460 $generated@@578 $generated@@579))) (and (= ($generated@@277 ($generated@@362 ($generated@@343 $generated@@163 $generated@@163) $generated@@577)) $generated@@577) ($generated@@150 ($generated@@362 ($generated@@343 $generated@@163 $generated@@163) $generated@@577) ($generated@@460 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@234 $generated@@577 ($generated@@460 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@66) (= (type $generated@@581) $generated@@66)) (= (type $generated@@582) $generated@@163)) ($generated@@234 $generated@@582 ($generated@@153 $generated@@580 $generated@@581))) (and (= ($generated@@277 ($generated@@362 $generated@@154 $generated@@582)) $generated@@582) ($generated@@150 ($generated@@362 $generated@@154 $generated@@582) ($generated@@153 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@234 $generated@@582 ($generated@@153 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@583)))
 (not ($generated@@0 ($generated@@83 ($generated@@470 $generated@@584) $generated@@583))))
 :pattern ( (let (($generated@@584 (type $generated@@583)))
($generated@@83 ($generated@@470 $generated@@584) $generated@@583)))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@71)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@66) (= (type $generated@@588) $generated@@66)) (and (= ($generated@@74 ($generated@@153 $generated@@587 $generated@@588)) $generated@@63) (= ($generated@@585 ($generated@@153 $generated@@587 $generated@@588)) $generated@@65)))
 :pattern ( ($generated@@153 $generated@@587 $generated@@588))
)))
(assert  (and (forall (($generated@@591 T@U) ) (! (let (($generated@@592 ($generated@@140 (type $generated@@591))))
(= (type ($generated@@589 $generated@@591)) ($generated@@139 $generated@@592)))
 :pattern ( ($generated@@589 $generated@@591))
)) (forall (($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@140 (type $generated@@593))))
(= (type ($generated@@590 $generated@@593)) $generated@@594))
 :pattern ( ($generated@@590 $generated@@593))
))))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
 (=> (= (type $generated@@595) ($generated@@139 $generated@@597)) (and (= ($generated@@589 ($generated@@138 $generated@@595 $generated@@596)) $generated@@595) (= ($generated@@590 ($generated@@138 $generated@@595 $generated@@596)) $generated@@596))))
 :pattern ( ($generated@@138 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@154) (= ($generated@@568 ($generated@@277 $generated@@598)) ($generated@@569 $generated@@598)))
 :pattern ( ($generated@@568 ($generated@@277 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@163) ($generated@@234 $generated@@599 ($generated@@77 0))) (and (= ($generated@@277 ($generated@@362 $generated@@2 $generated@@599)) $generated@@599) ($generated@@150 ($generated@@362 ($generated@@78 $generated@@163 $generated@@4) $generated@@599) ($generated@@77 0))))
 :pattern ( ($generated@@234 $generated@@599 ($generated@@77 0)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@163) (= (type $generated@@601) $generated@@66)) ($generated@@234 $generated@@600 ($generated@@251 $generated@@601))) (and (= ($generated@@277 ($generated@@362 ($generated@@78 $generated@@163 $generated@@4) $generated@@600)) $generated@@600) ($generated@@150 ($generated@@362 ($generated@@78 $generated@@163 $generated@@4) $generated@@600) ($generated@@251 $generated@@601))))
 :pattern ( ($generated@@234 $generated@@600 ($generated@@251 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@163) (= (type $generated@@603) $generated@@66)) ($generated@@234 $generated@@602 ($generated@@256 $generated@@603))) (and (= ($generated@@277 ($generated@@362 ($generated@@78 $generated@@163 $generated@@4) $generated@@602)) $generated@@602) ($generated@@150 ($generated@@362 ($generated@@78 $generated@@163 $generated@@4) $generated@@602) ($generated@@256 $generated@@603))))
 :pattern ( ($generated@@234 $generated@@602 ($generated@@256 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@163) (= (type $generated@@605) $generated@@66)) ($generated@@234 $generated@@604 ($generated@@172 $generated@@605))) (and (= ($generated@@277 ($generated@@362 ($generated@@78 $generated@@163 $generated@@2) $generated@@604)) $generated@@604) ($generated@@150 ($generated@@362 ($generated@@78 $generated@@163 $generated@@2) $generated@@604) ($generated@@172 $generated@@605))))
 :pattern ( ($generated@@234 $generated@@604 ($generated@@172 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@163) (= (type $generated@@607) $generated@@66)) ($generated@@234 $generated@@606 ($generated@@245 $generated@@607))) (and (= ($generated@@277 ($generated@@362 ($generated@@139 $generated@@163) $generated@@606)) $generated@@606) ($generated@@150 ($generated@@362 ($generated@@139 $generated@@163) $generated@@606) ($generated@@245 $generated@@607))))
 :pattern ( ($generated@@234 $generated@@606 ($generated@@245 $generated@@607)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@585 $generated@@134) $generated@@64))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@78 $generated@@163 $generated@@2)) (= (type $generated@@609) $generated@@66)) (= (type $generated@@610) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@608 ($generated@@172 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@163) (< 0 ($generated ($generated@@83 $generated@@608 $generated@@611)))) ($generated@@270 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@83 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@76 $generated@@608 ($generated@@172 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@154) (= (type $generated@@613) $generated@@66)) (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@269 $generated@@614) (and ($generated@@152 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@66) ($generated@@76 $generated@@612 ($generated@@153 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@76 $generated@@612 ($generated@@153 $generated@@613 $generated@@615) $generated@@614))
))))) ($generated@@270 ($generated@@161 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@270 ($generated@@161 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@154) (= (type $generated@@617) $generated@@66)) (= (type $generated@@618) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@269 $generated@@618) (and ($generated@@152 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@66) ($generated@@76 $generated@@616 ($generated@@153 $generated@@619 $generated@@617) $generated@@618))
 :pattern ( ($generated@@76 $generated@@616 ($generated@@153 $generated@@619 $generated@@617) $generated@@618))
))))) ($generated@@270 ($generated@@162 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@270 ($generated@@162 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@621 Int) ($generated@@622 T@U) ) (! (= (type ($generated@@620 $generated@@621 $generated@@622)) ($generated@@78 $generated@@163 $generated@@4))
 :pattern ( ($generated@@620 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 Int) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@139 $generated@@163)) (= (type $generated@@625) $generated@@163)) (= ($generated@@0 ($generated@@83 ($generated@@620 $generated@@623 $generated@@624) $generated@@625)) (exists (($generated@@626 Int) ($generated@@627 Int) ) (!  (and (and (<= $generated@@623 $generated@@626) (and ($generated@@137 $generated@@624 ($generated@@277 ($generated@@8 $generated@@626))) ($generated@@137 ($generated@@242 $generated@@626) ($generated@@277 ($generated@@8 $generated@@627))))) (= $generated@@625 ($generated@@277 ($generated@@8 $generated@@627))))
 :pattern ( ($generated@@137 ($generated@@242 $generated@@626) ($generated@@277 ($generated@@8 $generated@@627))))
))))
 :pattern ( ($generated@@83 ($generated@@620 $generated@@623 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@163) (= (type $generated@@629) $generated@@163)) (= ($generated@@233 ($generated@@262 $generated@@628) ($generated@@262 $generated@@629)) ($generated@@262 ($generated@@233 $generated@@628 $generated@@629))))
 :pattern ( ($generated@@233 ($generated@@262 $generated@@628) ($generated@@262 $generated@@629)))
)))
(assert (forall (($generated@@630 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@244 $generated@@630))) ($generated@@262 ($generated@@277 ($generated@@8 $generated@@630))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@244 $generated@@630))))
)))
(assert (forall (($generated@@631 T@U) ) (! (= ($generated@@277 ($generated@@262 $generated@@631)) ($generated@@262 ($generated@@277 $generated@@631)))
 :pattern ( ($generated@@277 ($generated@@262 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (! (let (($generated@@633 ($generated@@140 (type $generated@@632))))
 (=> (and (= (type $generated@@632) ($generated@@139 $generated@@633)) (= ($generated@@295 $generated@@632) 0)) (= $generated@@632 ($generated@@168 $generated@@633))))
 :pattern ( ($generated@@295 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (! (let (($generated@@637 (type $generated@@635)))
 (=> (and (and (= (type $generated@@634) ($generated@@78 $generated@@637 $generated@@2)) (= (type $generated@@636) $generated@@2)) (<= 0 ($generated $generated@@636))) (= ($generated@@317 ($generated@@84 $generated@@634 $generated@@635 $generated@@636)) (+ (- ($generated@@317 $generated@@634) ($generated ($generated@@83 $generated@@634 $generated@@635))) ($generated $generated@@636)))))
 :pattern ( ($generated@@317 ($generated@@84 $generated@@634 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@639) $generated@@2)) ($generated@@76 $generated@@639 $generated@@46 $generated@@638))
 :pattern ( ($generated@@76 $generated@@639 $generated@@46 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@641) $generated@@3)) ($generated@@76 $generated@@641 $generated@@47 $generated@@640))
 :pattern ( ($generated@@76 $generated@@641 $generated@@47 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@643) $generated@@4)) ($generated@@76 $generated@@643 $generated@@44 $generated@@642))
 :pattern ( ($generated@@76 $generated@@643 $generated@@44 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@645) $generated@@494)) ($generated@@76 $generated@@645 $generated@@45 $generated@@644))
 :pattern ( ($generated@@76 $generated@@645 $generated@@45 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@647) $generated@@163)) ($generated@@76 $generated@@647 $generated@@48 $generated@@646))
 :pattern ( ($generated@@76 $generated@@647 $generated@@48 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@139 $generated@@163)) (= (type $generated@@649) $generated@@66)) (= ($generated@@150 $generated@@648 ($generated@@245 $generated@@649)) (forall (($generated@@650 Int) ) (!  (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@295 $generated@@648))) ($generated@@234 ($generated@@367 $generated@@648 $generated@@650) $generated@@649))
 :pattern ( ($generated@@367 $generated@@648 $generated@@650))
))))
 :pattern ( ($generated@@150 $generated@@648 ($generated@@245 $generated@@649)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 Int) ) (!  (=> (= (type $generated@@652) ($generated@@139 $generated@@163)) (=> (and (<= 0 $generated@@653) (< $generated@@653 ($generated@@295 $generated@@652))) (< ($generated@@569 ($generated@@362 $generated@@154 ($generated@@367 $generated@@652 $generated@@653))) ($generated@@651 $generated@@652))))
 :pattern ( ($generated@@569 ($generated@@362 $generated@@154 ($generated@@367 $generated@@652 $generated@@653))))
)))
(assert (forall (($generated@@655 Int) ($generated@@656 T@U) ($generated@@657 Int) ($generated@@658 Int) ) (! (= (type ($generated@@654 $generated@@655 $generated@@656 $generated@@657 $generated@@658)) ($generated@@78 $generated@@163 $generated@@4))
 :pattern ( ($generated@@654 $generated@@655 $generated@@656 $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@659 Int) ($generated@@660 T@U) ($generated@@661 Int) ($generated@@662 Int) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@139 $generated@@163)) (= (type $generated@@663) $generated@@163)) (= ($generated@@0 ($generated@@83 ($generated@@654 $generated@@659 $generated@@660 $generated@@661 $generated@@662) $generated@@663)) (exists (($generated@@664 Int) ($generated@@665 Int) )  (and (and (<= $generated@@659 $generated@@664) (and (and ($generated@@137 $generated@@660 ($generated@@277 ($generated@@8 $generated@@664))) (< $generated@@661 $generated@@664)) (= $generated@@665 ($generated@@298 $generated@@662 $generated@@664)))) (= $generated@@663 ($generated@@277 ($generated@@8 $generated@@665)))))))
 :pattern ( ($generated@@83 ($generated@@654 $generated@@659 $generated@@660 $generated@@661 $generated@@662) $generated@@663))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) ($generated@@325 $generated@@163 $generated@@163)) (= (type $generated@@667) $generated@@66)) (= (type $generated@@668) $generated@@66)) ($generated@@150 $generated@@666 ($generated@@452 $generated@@667 $generated@@668))) (and (and ($generated@@150 ($generated@@323 $generated@@666) ($generated@@251 $generated@@667)) ($generated@@150 ($generated@@379 $generated@@666) ($generated@@251 $generated@@668))) ($generated@@150 ($generated@@426 $generated@@666) ($generated@@251 ($generated@@153 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@150 $generated@@666 ($generated@@452 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@343 $generated@@163 $generated@@163)) (= (type $generated@@670) $generated@@66)) (= (type $generated@@671) $generated@@66)) ($generated@@150 $generated@@669 ($generated@@460 $generated@@670 $generated@@671))) (and (and ($generated@@150 ($generated@@341 $generated@@669) ($generated@@256 $generated@@670)) ($generated@@150 ($generated@@390 $generated@@669) ($generated@@256 $generated@@671))) ($generated@@150 ($generated@@434 $generated@@669) ($generated@@256 ($generated@@153 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@150 $generated@@669 ($generated@@460 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@2) ($generated@@150 $generated@@672 $generated@@46))
 :pattern ( ($generated@@150 $generated@@672 $generated@@46))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@3) ($generated@@150 $generated@@673 $generated@@47))
 :pattern ( ($generated@@150 $generated@@673 $generated@@47))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@4) ($generated@@150 $generated@@674 $generated@@44))
 :pattern ( ($generated@@150 $generated@@674 $generated@@44))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@494) ($generated@@150 $generated@@675 $generated@@45))
 :pattern ( ($generated@@150 $generated@@675 $generated@@45))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@163) ($generated@@150 $generated@@676 $generated@@48))
 :pattern ( ($generated@@150 $generated@@676 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () Int)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () Int)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () Int)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 (T@U) Bool)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@677) ($generated@@139 $generated@@163)) (= (type $generated@@680) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@681) ($generated@@78 $generated@@163 $generated@@4))) (= (type $generated@@684) ($generated@@78 $generated@@163 $generated@@4))) (= (type $generated@@687) ($generated@@78 $generated@@163 $generated@@4))) (= (type $generated@@690) ($generated@@78 $generated@@163 $generated@@4))) (= (type $generated@@694) ($generated@@78 $generated@@163 $generated@@4))) (= (type $generated@@698) ($generated@@179 $generated@@79 $generated@@4))) (= (type $generated@@699) $generated@@79)) (= (type $generated@@701) ($generated@@139 $generated@@163))) (= (type $generated@@702) ($generated@@78 $generated@@163 $generated@@4))) (= (type $generated@@703) ($generated@@78 $generated@@163 $generated@@4))) (= (type $generated@@704) ($generated@@78 $generated@@163 $generated@@4))) (= (type $generated@@705) ($generated@@78 $generated@@163 $generated@@4))) (= (type $generated@@706) ($generated@@78 $generated@@163 $generated@@4))) (= (type $generated@@707) ($generated@@78 $generated@@163 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 68) (let (($generated@@708 true))
(let (($generated@@709  (=> (and (not (and (and (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@678))) (< $generated@@678 3)) ($generated@@137 ($generated@@242 $generated@@678) ($generated@@277 ($generated@@8 $generated@@679)))) (<= ($generated@@244 0) $generated@@679))) (= (ControlFlow 0 5) 1)) $generated@@708)))
(let (($generated@@710  (=> (and (and (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@678))) (< $generated@@678 3)) ($generated@@137 ($generated@@242 $generated@@678) ($generated@@277 ($generated@@8 $generated@@679)))) (<= ($generated@@244 0) $generated@@679)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= ($generated@@244 0) $generated@@679)) (=> (<= ($generated@@244 0) $generated@@679) (=> (= (ControlFlow 0 3) 1) $generated@@708))))))
(let (($generated@@711  (=> (not (and (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@678))) (< $generated@@678 3)) ($generated@@137 ($generated@@242 $generated@@678) ($generated@@277 ($generated@@8 $generated@@679))))) (and (=> (= (ControlFlow 0 7) 3) $generated@@710) (=> (= (ControlFlow 0 7) 5) $generated@@709)))))
(let (($generated@@712  (=> (and (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@678))) (< $generated@@678 3)) ($generated@@137 ($generated@@242 $generated@@678) ($generated@@277 ($generated@@8 $generated@@679)))) (and (=> (= (ControlFlow 0 6) 3) $generated@@710) (=> (= (ControlFlow 0 6) 5) $generated@@709)))))
(let (($generated@@713  (=> (not (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@678))) (< $generated@@678 3))) (and (=> (= (ControlFlow 0 10) 6) $generated@@712) (=> (= (ControlFlow 0 10) 7) $generated@@711)))))
(let (($generated@@714  (=> (and (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@678))) (< $generated@@678 3)) ($generated@@76 ($generated@@8 $generated@@678) $generated@@134 $generated@@680)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (< $generated@@678 3)) (=> (and (< $generated@@678 3) ($generated@@243 $generated@@678)) (and (=> (= (ControlFlow 0 8) 6) $generated@@712) (=> (= (ControlFlow 0 8) 7) $generated@@711)))))))
(let (($generated@@715  (=> (not ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@678)))) (and (=> (= (ControlFlow 0 12) 8) $generated@@714) (=> (= (ControlFlow 0 12) 10) $generated@@713)))))
(let (($generated@@716  (=> ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@678))) (and (=> (= (ControlFlow 0 11) 8) $generated@@714) (=> (= (ControlFlow 0 11) 10) $generated@@713)))))
(let (($generated@@717  (=> (<= ($generated@@244 0) $generated@@678) (and (=> (= (ControlFlow 0 13) 11) $generated@@716) (=> (= (ControlFlow 0 13) 12) $generated@@715)))))
(let (($generated@@718  (=> (and (< $generated@@678 ($generated@@244 0)) (= (ControlFlow 0 2) 1)) $generated@@708)))
(let (($generated@@719  (=> (and (forall (($generated@@720 Int) ($generated@@721 T@U) ) (!  (=> (and (and (and (= (type $generated@@721) $generated@@2) (<= ($generated@@244 0) $generated@@720)) ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@720)))) (< $generated@@720 3)) ($generated@@243 $generated@@720))
 :pattern ( ($generated@@137 ($generated@@242 $generated@@720) ($generated@@277 $generated@@721)))
)) (= $generated@@681 ($generated@@276 ($generated@@244 0) $generated@@677 3))) (and (=> (= (ControlFlow 0 14) 13) $generated@@717) (=> (= (ControlFlow 0 14) 2) $generated@@718)))))
(let (($generated@@722  (=> (and (not (and (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@682))) (< $generated@@682 3)) ($generated@@137 ($generated@@242 $generated@@682) ($generated@@277 ($generated@@8 $generated@@683))))) (= (ControlFlow 0 18) 14)) $generated@@719)))
(let (($generated@@723  (=> (and (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@682))) (< $generated@@682 3)) ($generated@@137 ($generated@@242 $generated@@682) ($generated@@277 ($generated@@8 $generated@@683)))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (<= ($generated@@244 0) $generated@@683)) (=> (<= ($generated@@244 0) $generated@@683) (=> (= (ControlFlow 0 16) 14) $generated@@719))))))
(let (($generated@@724  (=> (not (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@682))) (< $generated@@682 3))) (and (=> (= (ControlFlow 0 21) 16) $generated@@723) (=> (= (ControlFlow 0 21) 18) $generated@@722)))))
(let (($generated@@725  (=> (and (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@682))) (< $generated@@682 3)) ($generated@@76 ($generated@@8 $generated@@682) $generated@@134 $generated@@680)) (and (=> (= (ControlFlow 0 19) (- 0 20)) (< $generated@@682 3)) (=> (and (< $generated@@682 3) ($generated@@243 $generated@@682)) (and (=> (= (ControlFlow 0 19) 16) $generated@@723) (=> (= (ControlFlow 0 19) 18) $generated@@722)))))))
(let (($generated@@726  (=> (not ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@682)))) (and (=> (= (ControlFlow 0 23) 19) $generated@@725) (=> (= (ControlFlow 0 23) 21) $generated@@724)))))
(let (($generated@@727  (=> ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@682))) (and (=> (= (ControlFlow 0 22) 19) $generated@@725) (=> (= (ControlFlow 0 22) 21) $generated@@724)))))
(let (($generated@@728  (=> (<= ($generated@@244 0) $generated@@682) (and (=> (= (ControlFlow 0 24) 22) $generated@@727) (=> (= (ControlFlow 0 24) 23) $generated@@726)))))
(let (($generated@@729  (=> (and (< $generated@@682 ($generated@@244 0)) (= (ControlFlow 0 15) 14)) $generated@@719)))
(let (($generated@@730  (=> (and (forall (($generated@@731 Int) ($generated@@732 T@U) ) (!  (=> (and (and (and (= (type $generated@@732) $generated@@2) (<= ($generated@@244 0) $generated@@731)) ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@731)))) (< $generated@@731 3)) ($generated@@243 $generated@@731))
 :pattern ( ($generated@@137 ($generated@@242 $generated@@731) ($generated@@277 $generated@@732)))
)) (= $generated@@684 ($generated@@276 ($generated@@244 0) $generated@@677 3))) (and (=> (= (ControlFlow 0 25) 24) $generated@@728) (=> (= (ControlFlow 0 25) 15) $generated@@729)))))
(let (($generated@@733  (=> (and (not (and (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@685))) (< $generated@@685 3)) ($generated@@137 ($generated@@242 $generated@@685) ($generated@@277 ($generated@@8 $generated@@686))))) (= (ControlFlow 0 28) 25)) $generated@@730)))
(let (($generated@@734  (=> (and (and (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@685))) (< $generated@@685 3)) ($generated@@137 ($generated@@242 $generated@@685) ($generated@@277 ($generated@@8 $generated@@686)))) (= (ControlFlow 0 27) 25)) $generated@@730)))
(let (($generated@@735  (=> (not (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@685))) (< $generated@@685 3))) (and (=> (= (ControlFlow 0 31) 27) $generated@@734) (=> (= (ControlFlow 0 31) 28) $generated@@733)))))
(let (($generated@@736  (=> (and (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@685))) (< $generated@@685 3)) ($generated@@76 ($generated@@8 $generated@@685) $generated@@134 $generated@@680)) (and (=> (= (ControlFlow 0 29) (- 0 30)) (< $generated@@685 3)) (=> (and (< $generated@@685 3) ($generated@@243 $generated@@685)) (and (=> (= (ControlFlow 0 29) 27) $generated@@734) (=> (= (ControlFlow 0 29) 28) $generated@@733)))))))
(let (($generated@@737  (=> (not ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@685)))) (and (=> (= (ControlFlow 0 33) 29) $generated@@736) (=> (= (ControlFlow 0 33) 31) $generated@@735)))))
(let (($generated@@738  (=> ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@685))) (and (=> (= (ControlFlow 0 32) 29) $generated@@736) (=> (= (ControlFlow 0 32) 31) $generated@@735)))))
(let (($generated@@739  (=> (<= ($generated@@244 0) $generated@@685) (and (=> (= (ControlFlow 0 34) 32) $generated@@738) (=> (= (ControlFlow 0 34) 33) $generated@@737)))))
(let (($generated@@740  (=> (and (< $generated@@685 ($generated@@244 0)) (= (ControlFlow 0 26) 25)) $generated@@730)))
(let (($generated@@741  (=> (and (forall (($generated@@742 Int) ($generated@@743 T@U) ) (!  (=> (and (and (= (type $generated@@743) $generated@@2) (<= ($generated@@244 0) $generated@@742)) ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@742)))) ($generated@@243 $generated@@742))
 :pattern ( ($generated@@137 ($generated@@242 $generated@@742) ($generated@@277 $generated@@743)))
)) (= $generated@@687 ($generated@@620 ($generated@@244 0) $generated@@677))) (and (=> (= (ControlFlow 0 35) 34) $generated@@739) (=> (= (ControlFlow 0 35) 26) $generated@@740)))))
(let (($generated@@744  (=> (and (not (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@688))) ($generated@@137 ($generated@@242 $generated@@688) ($generated@@277 ($generated@@8 $generated@@689))))) (= (ControlFlow 0 38) 35)) $generated@@741)))
(let (($generated@@745  (=> (and (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@688))) ($generated@@137 ($generated@@242 $generated@@688) ($generated@@277 ($generated@@8 $generated@@689)))) (= (ControlFlow 0 37) 35)) $generated@@741)))
(let (($generated@@746  (=> (not ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@688)))) (and (=> (= (ControlFlow 0 41) 37) $generated@@745) (=> (= (ControlFlow 0 41) 38) $generated@@744)))))
(let (($generated@@747  (=> (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@688))) ($generated@@76 ($generated@@8 $generated@@688) $generated@@134 $generated@@680)) (and (=> (= (ControlFlow 0 39) (- 0 40)) (< $generated@@688 3)) (=> (and (< $generated@@688 3) ($generated@@243 $generated@@688)) (and (=> (= (ControlFlow 0 39) 37) $generated@@745) (=> (= (ControlFlow 0 39) 38) $generated@@744)))))))
(let (($generated@@748  (=> (<= ($generated@@244 0) $generated@@688) (and (=> (= (ControlFlow 0 42) 39) $generated@@747) (=> (= (ControlFlow 0 42) 41) $generated@@746)))))
(let (($generated@@749  (=> (and (< $generated@@688 ($generated@@244 0)) (= (ControlFlow 0 36) 35)) $generated@@741)))
(let (($generated@@750  (=> (= $generated@@690 ($generated@@654 ($generated@@244 0) $generated@@677 0 6)) (and (=> (= (ControlFlow 0 43) 42) $generated@@748) (=> (= (ControlFlow 0 43) 36) $generated@@749)))))
(let (($generated@@751  (=> (and (not (and (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@691))) (< 0 $generated@@691)) (= $generated@@692 ($generated@@298 6 $generated@@691)))) (= (ControlFlow 0 46) 43)) $generated@@750)))
(let (($generated@@752  (=> (and (and (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@691))) (< 0 $generated@@691)) (= $generated@@692 ($generated@@298 6 $generated@@691))) (= (ControlFlow 0 45) 43)) $generated@@750)))
(let (($generated@@753  (=> (not (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@691))) (< 0 $generated@@691))) (and (=> (= (ControlFlow 0 50) 45) $generated@@752) (=> (= (ControlFlow 0 50) 46) $generated@@751)))))
(let (($generated@@754  (=> (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@691))) (< 0 $generated@@691)) (and (=> (= (ControlFlow 0 47) (- 0 49)) (not (= $generated@@691 0))) (=> (not (= $generated@@691 0)) (=> (= $generated@@693 ($generated@@298 6 $generated@@691)) (and (=> (= (ControlFlow 0 47) (- 0 48)) (<= ($generated@@244 0) $generated@@693)) (=> (<= ($generated@@244 0) $generated@@693) (and (=> (= (ControlFlow 0 47) 45) $generated@@752) (=> (= (ControlFlow 0 47) 46) $generated@@751))))))))))
(let (($generated@@755  (=> (not ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@691)))) (and (=> (= (ControlFlow 0 52) 47) $generated@@754) (=> (= (ControlFlow 0 52) 50) $generated@@753)))))
(let (($generated@@756  (=> ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@691))) (and (=> (= (ControlFlow 0 51) 47) $generated@@754) (=> (= (ControlFlow 0 51) 50) $generated@@753)))))
(let (($generated@@757  (=> (<= ($generated@@244 0) $generated@@691) (and (=> (= (ControlFlow 0 53) 51) $generated@@756) (=> (= (ControlFlow 0 53) 52) $generated@@755)))))
(let (($generated@@758  (=> (and (< $generated@@691 ($generated@@244 0)) (= (ControlFlow 0 44) 43)) $generated@@750)))
(let (($generated@@759  (=> (= $generated@@694 ($generated@@297 ($generated@@244 0) ($generated@@244 0) $generated@@677 6)) (and (=> (= (ControlFlow 0 54) 53) $generated@@757) (=> (= (ControlFlow 0 54) 44) $generated@@758)))))
(let (($generated@@760  (=> (and (not (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@695))) (= $generated@@696 ($generated@@298 6 $generated@@695)))) (= (ControlFlow 0 57) 54)) $generated@@759)))
(let (($generated@@761  (=> (and (and ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@695))) (= $generated@@696 ($generated@@298 6 $generated@@695))) (= (ControlFlow 0 56) 54)) $generated@@759)))
(let (($generated@@762  (=> (not ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@695)))) (and (=> (= (ControlFlow 0 61) 56) $generated@@761) (=> (= (ControlFlow 0 61) 57) $generated@@760)))))
(let (($generated@@763  (=> ($generated@@137 $generated@@677 ($generated@@277 ($generated@@8 $generated@@695))) (and (=> (= (ControlFlow 0 58) (- 0 60)) (not (= $generated@@695 0))) (=> (not (= $generated@@695 0)) (=> (= $generated@@697 ($generated@@298 6 $generated@@695)) (and (=> (= (ControlFlow 0 58) (- 0 59)) (<= ($generated@@244 0) $generated@@697)) (=> (<= ($generated@@244 0) $generated@@697) (and (=> (= (ControlFlow 0 58) 56) $generated@@761) (=> (= (ControlFlow 0 58) 57) $generated@@760))))))))))
(let (($generated@@764  (=> (and (<= ($generated@@244 0) $generated@@695) (<= ($generated@@244 0) $generated@@696)) (and (=> (= (ControlFlow 0 62) 58) $generated@@763) (=> (= (ControlFlow 0 62) 61) $generated@@762)))))
(let (($generated@@765  (=> (and (not (and (<= ($generated@@244 0) $generated@@695) (<= ($generated@@244 0) $generated@@696))) (= (ControlFlow 0 55) 54)) $generated@@759)))
(let (($generated@@766  (=> (= $generated@@698 ($generated@@178 $generated@@699 $generated@@680 $generated@@60 false)) (and (=> (= (ControlFlow 0 63) (- 0 67)) ($generated@@150 ($generated@@8 ($generated@@244 0)) $generated@@134)) (=> ($generated@@150 ($generated@@8 ($generated@@244 0)) $generated@@134) (and (=> (= (ControlFlow 0 63) (- 0 66)) ($generated@@150 ($generated@@8 ($generated@@244 1)) $generated@@134)) (=> ($generated@@150 ($generated@@8 ($generated@@244 1)) $generated@@134) (and (=> (= (ControlFlow 0 63) (- 0 65)) ($generated@@150 ($generated@@8 ($generated@@244 2)) $generated@@134)) (=> ($generated@@150 ($generated@@8 ($generated@@244 2)) $generated@@134) (and (=> (= (ControlFlow 0 63) (- 0 64)) ($generated@@150 ($generated@@8 ($generated@@244 3)) $generated@@134)) (=> ($generated@@150 ($generated@@8 ($generated@@244 3)) $generated@@134) (=> (= $generated@@677 ($generated@@262 ($generated@@138 ($generated@@138 ($generated@@138 ($generated@@138 ($generated@@168 $generated@@163) ($generated@@277 ($generated@@8 ($generated@@244 0)))) ($generated@@277 ($generated@@8 ($generated@@244 1)))) ($generated@@277 ($generated@@8 ($generated@@244 2)))) ($generated@@277 ($generated@@8 ($generated@@244 3)))))) (and (=> (= (ControlFlow 0 63) 62) $generated@@764) (=> (= (ControlFlow 0 63) 55) $generated@@765))))))))))))))
(let (($generated@@767  (=> (and ($generated@@269 $generated@@680) ($generated@@700 $generated@@680)) (=> (and (and (and (and (and ($generated@@150 $generated@@701 ($generated@@245 $generated@@134)) ($generated@@76 $generated@@701 ($generated@@245 $generated@@134) $generated@@680)) true) (and (and ($generated@@150 $generated@@702 ($generated@@251 $generated@@134)) ($generated@@76 $generated@@702 ($generated@@251 $generated@@134) $generated@@680)) true)) (and (and (and ($generated@@150 $generated@@703 ($generated@@251 $generated@@46)) ($generated@@76 $generated@@703 ($generated@@251 $generated@@46) $generated@@680)) true) (and (and ($generated@@150 $generated@@704 ($generated@@251 $generated@@46)) ($generated@@76 $generated@@704 ($generated@@251 $generated@@46) $generated@@680)) true))) (and (and (and (and ($generated@@150 $generated@@705 ($generated@@251 $generated@@46)) ($generated@@76 $generated@@705 ($generated@@251 $generated@@46) $generated@@680)) true) (and (and ($generated@@150 $generated@@706 ($generated@@251 $generated@@134)) ($generated@@76 $generated@@706 ($generated@@251 $generated@@134) $generated@@680)) true)) (and (and (and ($generated@@150 $generated@@707 ($generated@@251 $generated@@134)) ($generated@@76 $generated@@707 ($generated@@251 $generated@@134) $generated@@680)) true) (and (= 2 $generated@@241) (= (ControlFlow 0 68) 63))))) $generated@@766))))
$generated@@767)))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 39) (- 40))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 16) (- 17))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 58) (- 60))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
