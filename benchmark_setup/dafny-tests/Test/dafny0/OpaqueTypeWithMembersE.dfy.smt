(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Int)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@354 (Int Int) Int)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@T) T@U)
(declare-fun $generated@@440 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (= ($generated@@1 $generated@@134) 14) (= (type $generated@@137) $generated@@64)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@134) (or ($generated@@135 $generated@@139) (and (not (= 2 $generated@@132)) (and ($generated@@136 $generated@@139 $generated@@137) ($generated@@138 $generated@@139))))) true)
 :pattern ( ($generated@@133 $generated@@139))
))))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@75 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 15) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@64)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@64) (= (type $generated@@148) $generated@@64)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (forall (($generated@@153 T@U) ) (! (= (type ($generated@@151 $generated@@153)) $generated@@134)
 :pattern ( ($generated@@151 $generated@@153))
)) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@134)
 :pattern ( ($generated@@152 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@144) (= (type $generated@@156) $generated@@144)) true) (= ($generated@@150 $generated@@155 $generated@@156)  (and (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)) (= ($generated@@152 $generated@@155) ($generated@@152 $generated@@156)))))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@64)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@161) $generated@@64)) ($generated@@140 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@140 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@77 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@67 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@77) (= (type $generated@@212) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@213) ($generated@@66 $generated@@4))) (= (type $generated@@215) $generated@@77)) (= (type $generated@@216) ($generated@@66 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@164 $generated@@77 $generated@@4))
 :pattern ( ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@67 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@77) (= (type $generated@@224) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@225) ($generated@@66 $generated@@4))) (= (type $generated@@227) $generated@@77)) (= (type $generated@@228) ($generated@@66 $generated@@229))) (= ($generated@@0 ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@230 $generated@@231 $generated@@232)) $generated@@144)
 :pattern ( ($generated@@230 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@64) (= (type $generated@@234) $generated@@64)) (= (type $generated@@235) $generated@@134)) (= (type $generated@@236) $generated@@134)) (= ($generated@@140 ($generated@@230 $generated@@235 $generated@@236) ($generated@@143 $generated@@233 $generated@@234))  (and ($generated@@136 $generated@@235 $generated@@233) ($generated@@136 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@140 ($generated@@230 $generated@@235 $generated@@236) ($generated@@143 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@144) (= (type $generated@@238) $generated@@144)) (= ($generated@@150 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@150 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@140 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@134) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@136 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@140 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@64)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@247) $generated@@64)) (= ($generated@@140 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@134) ($generated@@0 ($generated@@81 $generated@@246 $generated@@248))) ($generated@@136 $generated@@248 $generated@@247))
 :pattern ( ($generated@@81 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@140 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@64) (= (type $generated@@256) $generated@@64)) (= (type $generated@@257) $generated@@134)) (= (type $generated@@258) $generated@@134)) (= (type $generated@@259) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@253 $generated@@259)) (= ($generated@@74 ($generated@@230 $generated@@257 $generated@@258) ($generated@@143 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@74 ($generated@@230 $generated@@257 $generated@@258) ($generated@@143 $generated@@255 $generated@@256) $generated@@259))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@134) (or ($generated@@260 $generated@@262) (and (not (= 1 $generated@@132)) ($generated@@136 $generated@@262 $generated@@137)))) (= ($generated@@138 $generated@@262) (< ($generated@@261 $generated@@262) 10)))
 :pattern ( ($generated@@138 $generated@@262))
))))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@68)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@144) (= ($generated@@142 $generated@@265) (= ($generated@@263 $generated@@265) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@265))
)))
(assert  (=> (< 0 $generated@@132) (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@134) ($generated@@140 ($generated@@8 ($generated@@261 $generated@@266)) $generated@@46))
 :pattern ( ($generated@@261 $generated@@266))
))))
(assert  (=> (< 0 $generated@@132) (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@268) $generated@@134)) (and ($generated@@253 $generated@@267) ($generated@@254 $generated@@268 $generated@@137 $generated@@267))) ($generated@@74 ($generated@@8 ($generated@@261 $generated@@268)) $generated@@46 $generated@@267))
 :pattern ( ($generated@@261 $generated@@268) ($generated@@254 $generated@@268 $generated@@137 $generated@@267))
))))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@144) ($generated@@142 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@134) (= (type $generated@@271) $generated@@134)) (= $generated@@269 ($generated@@230 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@142 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 17)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert ($generated@@280 $generated@@137))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@134)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@64) (= (type $generated@@285) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@254 ($generated@@281 $generated@@283) $generated@@284 $generated@@285) ($generated@@74 $generated@@283 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@254 ($generated@@281 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@76 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@79 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@76 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@81 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 18)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@76 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@76 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@81 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@81 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@79 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@76 $generated@@329 $generated@@2)) (= ($generated@@158 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@81 $generated@@328 $generated@@330))) (<= ($generated ($generated@@81 $generated@@328 $generated@@330)) ($generated@@286 $generated@@328))))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@158 $generated@@328))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@134) (or ($generated@@260 ($generated@@249 $generated@@331)) (and (not (= 1 $generated@@132)) ($generated@@136 $generated@@331 $generated@@137)))) (= ($generated@@138 ($generated@@249 $generated@@331)) (< ($generated@@261 ($generated@@249 $generated@@331)) 10)))
 :weight 3
 :pattern ( ($generated@@138 ($generated@@249 $generated@@331)))
))))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@296 (type $generated@@332))))
(let (($generated@@334 ($generated@@295 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@294 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@293 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@292 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@296 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@76 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@296 (type $generated@@339))))
(let (($generated@@341 ($generated@@295 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@294 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@293 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@314 (type $generated@@343))))
(let (($generated@@345 ($generated@@313 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@312 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@311 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@310 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@314 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@76 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@314 (type $generated@@350))))
(let (($generated@@352 ($generated@@313 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@312 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@311 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@81 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@134) (or ($generated@@135 $generated@@355) (and (not (= 2 $generated@@132)) (and ($generated@@136 $generated@@355 $generated@@137) ($generated@@138 $generated@@355))))) (= ($generated@@133 $generated@@355) ($generated@@354 100 (- ($generated@@261 $generated@@355) 10))))
 :pattern ( ($generated@@133 $generated@@355))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@357) $generated@@64)) (= ($generated@@140 $generated@@356 ($generated@@157 $generated@@357)) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@134) (< 0 ($generated ($generated@@81 $generated@@356 $generated@@358)))) ($generated@@136 $generated@@358 $generated@@357))
 :pattern ( ($generated@@81 $generated@@356 $generated@@358))
))))
 :pattern ( ($generated@@140 $generated@@356 ($generated@@157 $generated@@357)))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@239 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@134) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@254 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@239 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@364) $generated@@64)) (= (type $generated@@365) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@363 ($generated@@244 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@134) ($generated@@0 ($generated@@81 $generated@@363 $generated@@366))) ($generated@@254 $generated@@366 $generated@@364 $generated@@365))
 :pattern ( ($generated@@81 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@74 $generated@@363 ($generated@@244 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
(= ($generated ($generated@@81 ($generated@@287 $generated@@368) $generated@@367)) 0))
 :pattern ( (let (($generated@@368 (type $generated@@367)))
($generated@@81 ($generated@@287 $generated@@368) $generated@@367)))
)))
(assert  (and (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@369 $generated@@372)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@369 $generated@@372))
)) (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@370 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@370 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@296 (type $generated@@375))))
(let (($generated@@377 ($generated@@295 (type $generated@@375))))
(= (type ($generated@@371 $generated@@375)) ($generated@@76 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@371 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@294 $generated@@134 $generated@@134)) (= (type $generated@@379) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@369 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@378) ($generated@@151 ($generated@@370 $generated@@144 $generated@@379)))) (= ($generated@@81 ($generated@@371 $generated@@378) ($generated@@151 ($generated@@370 $generated@@144 $generated@@379))) ($generated@@152 ($generated@@370 $generated@@144 $generated@@379))))))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@314 (type $generated@@383))))
(let (($generated@@385 ($generated@@313 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@76 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@312 $generated@@134 $generated@@134)) (= (type $generated@@387) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@81 ($generated@@310 $generated@@386) ($generated@@151 ($generated@@370 $generated@@144 $generated@@387)))) (= ($generated@@81 ($generated@@381 $generated@@386) ($generated@@151 ($generated@@370 $generated@@144 $generated@@387))) ($generated@@152 ($generated@@370 $generated@@144 $generated@@387))))))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@295 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@294 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@336 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@371 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@313 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@312 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@347 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@310 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@64)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@294 $generated@@134 $generated@@134)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@401) $generated@@405))) (and ($generated@@254 ($generated@@81 ($generated@@371 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@254 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@64)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@312 $generated@@134 $generated@@134)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@409) $generated@@413))) (and ($generated@@254 ($generated@@81 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@254 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@74 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 Int) ($generated@@415 Int) ) (! (= ($generated@@354 $generated@@414 $generated@@415) (div $generated@@414 $generated@@415))
 :pattern ( ($generated@@354 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@417 T@T) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@76 $generated@@417 $generated@@4))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@314 (type $generated@@418))))
(let (($generated@@420 ($generated@@313 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@312 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@311 $generated@@420 $generated@@419)) (= ($generated@@310 $generated@@418) ($generated@@416 $generated@@420))))))
 :pattern ( ($generated@@310 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@314 (type $generated@@421))))
(let (($generated@@423 ($generated@@313 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@312 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@311 $generated@@423 $generated@@422)) (= ($generated@@347 $generated@@421) ($generated@@416 $generated@@422))))))
 :pattern ( ($generated@@347 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@314 (type $generated@@424))))
(let (($generated@@426 ($generated@@313 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@312 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@311 $generated@@426 $generated@@425)) (= ($generated@@380 $generated@@424) ($generated@@416 $generated@@134))))))
 :pattern ( ($generated@@380 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@296 (type $generated@@427))))
(let (($generated@@429 ($generated@@295 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@294 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@293 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@134) (= (type $generated@@431) $generated@@134)) ($generated@@0 ($generated@@81 ($generated@@369 $generated@@427) ($generated@@281 ($generated@@230 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@369 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@314 (type $generated@@432))))
(let (($generated@@434 ($generated@@313 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@312 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@311 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@134) (= (type $generated@@436) $generated@@134)) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@432) ($generated@@281 ($generated@@230 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@380 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@134) ($generated@@136 $generated@@437 $generated@@46)) (and (= ($generated@@281 ($generated@@370 $generated@@2 $generated@@437)) $generated@@437) ($generated@@140 ($generated@@370 $generated@@2 $generated@@437) $generated@@46)))
 :pattern ( ($generated@@136 $generated@@437 $generated@@46))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@134) ($generated@@136 $generated@@438 $generated@@47)) (and (= ($generated@@281 ($generated@@370 $generated@@3 $generated@@438)) $generated@@438) ($generated@@140 ($generated@@370 $generated@@3 $generated@@438) $generated@@47)))
 :pattern ( ($generated@@136 $generated@@438 $generated@@47))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@134) ($generated@@136 $generated@@439 $generated@@44)) (and (= ($generated@@281 ($generated@@370 $generated@@4 $generated@@439)) $generated@@439) ($generated@@140 ($generated@@370 $generated@@4 $generated@@439) $generated@@44)))
 :pattern ( ($generated@@136 $generated@@439 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@440) 20))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@134) ($generated@@136 $generated@@441 $generated@@45)) (and (= ($generated@@281 ($generated@@370 $generated@@440 $generated@@441)) $generated@@441) ($generated@@140 ($generated@@370 $generated@@440 $generated@@441) $generated@@45)))
 :pattern ( ($generated@@136 $generated@@441 $generated@@45))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (= (type $generated@@443) $generated@@64) (= ($generated@@136 ($generated@@281 $generated@@442) $generated@@443) ($generated@@140 $generated@@442 $generated@@443)))
 :pattern ( ($generated@@136 ($generated@@281 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@79 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@76 $generated@@445 $generated@@2)) (<= 0 ($generated@@286 $generated@@444))))
 :pattern ( ($generated@@286 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@275 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@274 $generated@@447)) (<= 0 ($generated@@273 $generated@@446))))
 :pattern ( ($generated@@273 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) ($generated@@280 $generated@@448)) (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@449) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@450) $generated@@134)) ($generated@@136 $generated@@450 $generated@@448)) ($generated@@254 $generated@@450 $generated@@448 $generated@@449))
 :pattern ( ($generated@@254 $generated@@450 $generated@@448 $generated@@449))
)))
 :pattern ( ($generated@@280 $generated@@448))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@398 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@398 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@398 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@398 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@406 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@406 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@406 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@406 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@134) (= (type $generated@@472) $generated@@134)) (= ($generated@@263 ($generated@@230 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@230 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@143 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@143 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@143 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@143 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@134) (= (type $generated@@482) $generated@@134)) (= ($generated@@151 ($generated@@230 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@230 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@134) (= (type $generated@@484) $generated@@134)) (= ($generated@@152 ($generated@@230 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@230 $generated@@483 $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@275 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@274 $generated@@134)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@273 $generated@@491))) ($generated@@254 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@74 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@75 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@75 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@239 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@239 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@244 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@244 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@244 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@157 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@157 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@157 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@370 $generated@@514 ($generated@@281 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@281 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@294 $generated@@134 $generated@@134)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@140 $generated@@515 ($generated@@398 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@515) $generated@@518))) (and ($generated@@136 ($generated@@81 ($generated@@371 $generated@@515) $generated@@518) $generated@@517) ($generated@@136 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@140 $generated@@515 ($generated@@398 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@312 $generated@@134 $generated@@134)) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) (= ($generated@@140 $generated@@519 ($generated@@406 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@519) $generated@@522))) (and ($generated@@136 ($generated@@81 ($generated@@381 $generated@@519) $generated@@522) $generated@@521) ($generated@@136 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@519) $generated@@522))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@140 $generated@@519 ($generated@@406 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@134) (= (type $generated@@526) $generated@@134)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@230 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@230 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@134) (= (type $generated@@528) $generated@@134)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@230 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@230 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@134) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@136 $generated@@529 ($generated@@398 $generated@@530 $generated@@531))) (and (= ($generated@@281 ($generated@@370 ($generated@@294 $generated@@134 $generated@@134) $generated@@529)) $generated@@529) ($generated@@140 ($generated@@370 ($generated@@294 $generated@@134 $generated@@134) $generated@@529) ($generated@@398 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@136 $generated@@529 ($generated@@398 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@134) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@136 $generated@@532 ($generated@@406 $generated@@533 $generated@@534))) (and (= ($generated@@281 ($generated@@370 ($generated@@312 $generated@@134 $generated@@134) $generated@@532)) $generated@@532) ($generated@@140 ($generated@@370 ($generated@@312 $generated@@134 $generated@@134) $generated@@532) ($generated@@406 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@136 $generated@@532 ($generated@@406 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@134)) ($generated@@136 $generated@@537 ($generated@@143 $generated@@535 $generated@@536))) (and (= ($generated@@281 ($generated@@370 $generated@@144 $generated@@537)) $generated@@537) ($generated@@140 ($generated@@370 $generated@@144 $generated@@537) ($generated@@143 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@136 $generated@@537 ($generated@@143 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@416 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@416 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@143 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@143 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@143 $generated@@542 $generated@@543))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@134) (or ($generated@@135 ($generated@@249 $generated@@544)) (and (not (= 2 $generated@@132)) (and ($generated@@136 $generated@@544 $generated@@137) ($generated@@0 ($generated@@249 ($generated@@11 ($generated@@138 ($generated@@249 $generated@@544))))))))) (= ($generated@@133 ($generated@@249 $generated@@544)) ($generated@@354 100 (- ($generated@@261 ($generated@@249 $generated@@544)) 10))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@249 $generated@@544)))
))))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@144) (= ($generated@@523 ($generated@@281 $generated@@545)) ($generated@@524 $generated@@545)))
 :pattern ( ($generated@@523 ($generated@@281 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@134) ($generated@@136 $generated@@546 ($generated@@75 0))) (and (= ($generated@@281 ($generated@@370 $generated@@2 $generated@@546)) $generated@@546) ($generated@@140 ($generated@@370 ($generated@@76 $generated@@134 $generated@@4) $generated@@546) ($generated@@75 0))))
 :pattern ( ($generated@@136 $generated@@546 ($generated@@75 0)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@134) (= (type $generated@@548) $generated@@64)) ($generated@@136 $generated@@547 ($generated@@239 $generated@@548))) (and (= ($generated@@281 ($generated@@370 ($generated@@76 $generated@@134 $generated@@4) $generated@@547)) $generated@@547) ($generated@@140 ($generated@@370 ($generated@@76 $generated@@134 $generated@@4) $generated@@547) ($generated@@239 $generated@@548))))
 :pattern ( ($generated@@136 $generated@@547 ($generated@@239 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@134) (= (type $generated@@550) $generated@@64)) ($generated@@136 $generated@@549 ($generated@@244 $generated@@550))) (and (= ($generated@@281 ($generated@@370 ($generated@@76 $generated@@134 $generated@@4) $generated@@549)) $generated@@549) ($generated@@140 ($generated@@370 ($generated@@76 $generated@@134 $generated@@4) $generated@@549) ($generated@@244 $generated@@550))))
 :pattern ( ($generated@@136 $generated@@549 ($generated@@244 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@134) (= (type $generated@@552) $generated@@64)) ($generated@@136 $generated@@551 ($generated@@157 $generated@@552))) (and (= ($generated@@281 ($generated@@370 ($generated@@76 $generated@@134 $generated@@2) $generated@@551)) $generated@@551) ($generated@@140 ($generated@@370 ($generated@@76 $generated@@134 $generated@@2) $generated@@551) ($generated@@157 $generated@@552))))
 :pattern ( ($generated@@136 $generated@@551 ($generated@@157 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@134) (= (type $generated@@554) $generated@@64)) ($generated@@136 $generated@@553 ($generated@@485 $generated@@554))) (and (= ($generated@@281 ($generated@@370 ($generated@@274 $generated@@134) $generated@@553)) $generated@@553) ($generated@@140 ($generated@@370 ($generated@@274 $generated@@134) $generated@@553) ($generated@@485 $generated@@554))))
 :pattern ( ($generated@@136 $generated@@553 ($generated@@485 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@555 ($generated@@157 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@134) (< 0 ($generated ($generated@@81 $generated@@555 $generated@@558)))) ($generated@@254 $generated@@558 $generated@@556 $generated@@557))
 :pattern ( ($generated@@81 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@74 $generated@@555 ($generated@@157 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@144) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@561) (and ($generated@@142 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@64) ($generated@@74 $generated@@559 ($generated@@143 $generated@@560 $generated@@562) $generated@@561))
 :pattern ( ($generated@@74 $generated@@559 ($generated@@143 $generated@@560 $generated@@562) $generated@@561))
))))) ($generated@@254 ($generated@@151 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@254 ($generated@@151 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@144) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@565) (and ($generated@@142 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@74 $generated@@563 ($generated@@143 $generated@@566 $generated@@564) $generated@@565))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@143 $generated@@566 $generated@@564) $generated@@565))
))))) ($generated@@254 ($generated@@152 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@254 ($generated@@152 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@134) (= (type $generated@@568) $generated@@134)) (= ($generated@@230 ($generated@@249 $generated@@567) ($generated@@249 $generated@@568)) ($generated@@249 ($generated@@230 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@230 ($generated@@249 $generated@@567) ($generated@@249 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@281 ($generated@@249 $generated@@569)) ($generated@@249 ($generated@@281 $generated@@569)))
 :pattern ( ($generated@@281 ($generated@@249 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@275 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@274 $generated@@571)) (= ($generated@@273 $generated@@570) 0)) (= $generated@@570 ($generated@@272 $generated@@571))))
 :pattern ( ($generated@@273 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@286 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@286 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@286 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@440)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@134)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@274 $generated@@134)) (= (type $generated@@587) $generated@@64)) (= ($generated@@140 $generated@@586 ($generated@@485 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@273 $generated@@586))) ($generated@@136 ($generated@@486 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@486 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@140 $generated@@586 ($generated@@485 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@274 $generated@@134)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@273 $generated@@590))) (< ($generated@@524 ($generated@@370 $generated@@144 ($generated@@486 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@524 ($generated@@370 $generated@@144 ($generated@@486 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@294 $generated@@134 $generated@@134)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@140 $generated@@592 ($generated@@398 $generated@@593 $generated@@594))) (and (and ($generated@@140 ($generated@@292 $generated@@592) ($generated@@239 $generated@@593)) ($generated@@140 ($generated@@336 $generated@@592) ($generated@@239 $generated@@594))) ($generated@@140 ($generated@@369 $generated@@592) ($generated@@239 ($generated@@143 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@140 $generated@@592 ($generated@@398 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@312 $generated@@134 $generated@@134)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@140 $generated@@595 ($generated@@406 $generated@@596 $generated@@597))) (and (and ($generated@@140 ($generated@@310 $generated@@595) ($generated@@244 $generated@@596)) ($generated@@140 ($generated@@347 $generated@@595) ($generated@@244 $generated@@597))) ($generated@@140 ($generated@@380 $generated@@595) ($generated@@244 ($generated@@143 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@140 $generated@@595 ($generated@@406 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@140 $generated@@598 $generated@@46))
 :pattern ( ($generated@@140 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@140 $generated@@599 $generated@@47))
 :pattern ( ($generated@@140 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@140 $generated@@600 $generated@@44))
 :pattern ( ($generated@@140 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@440) ($generated@@140 $generated@@601 $generated@@45))
 :pattern ( ($generated@@140 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@134) ($generated@@140 $generated@@602 $generated@@48))
 :pattern ( ($generated@@140 $generated@@602 $generated@@48))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@134) (or ($generated@@260 $generated@@603) (and (not (= 1 $generated@@132)) ($generated@@136 $generated@@603 $generated@@137)))) true)
 :pattern ( ($generated@@138 $generated@@603))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@604) ($generated@@164 $generated@@77 $generated@@4)) (= (type $generated@@605) $generated@@77)) (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@607) $generated@@134)) (= (type $generated@@608) ($generated@@164 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@610  (=> (and (= $generated@@604 ($generated@@218 $generated@@605 $generated@@606 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) (not (= (- ($generated@@261 $generated@@607) 10) 0)))))
(let (($generated@@611 true))
(let (($generated@@612  (=> (and (and (= $generated@@608 ($generated@@163 $generated@@605 $generated@@606 $generated@@60 false)) ($generated@@254 $generated@@607 $generated@@137 $generated@@606)) (and ($generated@@260 $generated@@607) ($generated@@138 $generated@@607))) (and (=> (= (ControlFlow 0 4) 1) $generated@@611) (=> (= (ControlFlow 0 4) 3) $generated@@610)))))
(let (($generated@@613  (=> (and ($generated@@253 $generated@@606) ($generated@@609 $generated@@606)) (=> (and (and ($generated@@136 $generated@@607 $generated@@137) ($generated@@254 $generated@@607 $generated@@137 $generated@@606)) (and (= 2 $generated@@132) (= (ControlFlow 0 5) 4))) $generated@@612))))
$generated@@613)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 (T@U) Real)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 (T@U) Bool)
(declare-fun $generated@@229 (Int) Real)
(declare-fun $generated@@230 (T@U) Int)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@273 (T@T) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@T) T@U)
(declare-fun $generated@@440 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (= (type $generated@@227) $generated@@64))
(assert  (=> (<= 2 $generated@@223) (forall (($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@145) (or ($generated@@225 $generated@@231) (and (not (= 2 $generated@@223)) (and ($generated@@226 $generated@@231 $generated@@227) (not ($generated@@228 $generated@@231)))))) (= ($generated@@224 $generated@@231) (/ 100.0 ($generated@@229 ($generated@@230 $generated@@231)))))
 :pattern ( ($generated@@224 $generated@@231))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@232 $generated@@233 $generated@@234)) $generated@@136)
 :pattern ( ($generated@@232 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@235) $generated@@64) (= (type $generated@@236) $generated@@64)) (= (type $generated@@237) $generated@@145)) (= (type $generated@@238) $generated@@145)) (= ($generated@@132 ($generated@@232 $generated@@237 $generated@@238) ($generated@@135 $generated@@235 $generated@@236))  (and ($generated@@226 $generated@@237 $generated@@235) ($generated@@226 $generated@@238 $generated@@236))))
 :pattern ( ($generated@@132 ($generated@@232 $generated@@237 $generated@@238) ($generated@@135 $generated@@235 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@136) (= (type $generated@@240) $generated@@136)) (= ($generated@@142 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@142 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@64)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@244) $generated@@64)) (= ($generated@@132 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@145) ($generated@@0 ($generated@@81 $generated@@243 $generated@@245))) ($generated@@226 $generated@@245 $generated@@244))
 :pattern ( ($generated@@81 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@132 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@64)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@249) $generated@@64)) (= ($generated@@132 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@145) ($generated@@0 ($generated@@81 $generated@@248 $generated@@250))) ($generated@@226 $generated@@250 $generated@@249))
 :pattern ( ($generated@@81 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@132 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@64) (= (type $generated@@258) $generated@@64)) (= (type $generated@@259) $generated@@145)) (= (type $generated@@260) $generated@@145)) (= (type $generated@@261) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@255 $generated@@261)) (= ($generated@@74 ($generated@@232 $generated@@259 $generated@@260) ($generated@@135 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@74 ($generated@@232 $generated@@259 $generated@@260) ($generated@@135 $generated@@257 $generated@@258) $generated@@261))
)))
(assert  (=> (<= 1 $generated@@223) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@145) (or ($generated@@262 $generated@@263) (and (not (= 1 $generated@@223)) ($generated@@226 $generated@@263 $generated@@227)))) (= ($generated@@228 $generated@@263) (< ($generated@@230 $generated@@263) 10)))
 :pattern ( ($generated@@228 $generated@@263))
))))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@136) (= ($generated@@134 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@266))
)))
(assert  (=> (< 0 $generated@@223) (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@145) ($generated@@132 ($generated@@8 ($generated@@230 $generated@@267)) $generated@@46))
 :pattern ( ($generated@@230 $generated@@267))
))))
(assert  (=> (< 0 $generated@@223) (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@269) $generated@@145)) (and ($generated@@255 $generated@@268) ($generated@@256 $generated@@269 $generated@@227 $generated@@268))) ($generated@@74 ($generated@@8 ($generated@@230 $generated@@269)) $generated@@46 $generated@@268))
 :pattern ( ($generated@@230 $generated@@269) ($generated@@256 $generated@@269 $generated@@227 $generated@@268))
))))
(assert (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@136) ($generated@@134 $generated@@270)) (exists (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (and (and (= (type $generated@@271) $generated@@145) (= (type $generated@@272) $generated@@145)) (= $generated@@270 ($generated@@232 $generated@@271 $generated@@272)))
 :no-pattern (type $generated@@271)
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
)))
 :pattern ( ($generated@@134 $generated@@270))
)))
(assert  (and (and (forall (($generated@@277 T@T) ) (= ($generated@@1 ($generated@@275 $generated@@277)) 17)) (forall (($generated@@278 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@278)) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
))) (forall (($generated@@279 T@T) ) (! (= (type ($generated@@273 $generated@@279)) ($generated@@275 $generated@@279))
 :pattern ( ($generated@@273 $generated@@279))
))))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@280)) 0)
 :pattern ( ($generated@@273 $generated@@280))
)))
(assert ($generated@@281 $generated@@227))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@145)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@64) (= (type $generated@@286) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@256 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@74 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@256 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@76 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@79 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@76 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@81 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 18)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@76 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@81 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@81 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@79 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@76 $generated@@330 $generated@@2)) (= ($generated@@151 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@81 $generated@@329 $generated@@331))) (<= ($generated ($generated@@81 $generated@@329 $generated@@331)) ($generated@@287 $generated@@329))))
 :pattern ( ($generated@@81 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@151 $generated@@329))
)))
(assert  (=> (<= 1 $generated@@223) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (or ($generated@@262 ($generated@@251 $generated@@332)) (and (not (= 1 $generated@@223)) ($generated@@226 $generated@@332 $generated@@227)))) (= ($generated@@228 ($generated@@251 $generated@@332)) (< ($generated@@230 ($generated@@251 $generated@@332)) 10)))
 :weight 3
 :pattern ( ($generated@@228 ($generated@@251 $generated@@332)))
))))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@297 (type $generated@@333))))
(let (($generated@@335 ($generated@@296 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@295 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@294 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@293 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@297 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@76 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@297 (type $generated@@340))))
(let (($generated@@342 ($generated@@296 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@295 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@294 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@315 (type $generated@@344))))
(let (($generated@@346 ($generated@@314 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@313 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@312 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@311 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@315 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@76 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@315 (type $generated@@351))))
(let (($generated@@353 ($generated@@314 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@313 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@312 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert  (=> (<= 2 $generated@@223) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@145) (or ($generated@@225 ($generated@@251 $generated@@355)) (and (not (= 2 $generated@@223)) (and ($generated@@226 $generated@@355 $generated@@227) (not ($generated@@0 ($generated@@251 ($generated@@11 ($generated@@228 ($generated@@251 $generated@@355)))))))))) (= ($generated@@224 ($generated@@251 $generated@@355)) (/ 100.0 ($generated@@229 ($generated@@230 ($generated@@251 $generated@@355))))))
 :weight 3
 :pattern ( ($generated@@224 ($generated@@251 $generated@@355)))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@357) $generated@@64)) (= ($generated@@132 $generated@@356 ($generated@@150 $generated@@357)) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@356 $generated@@358)))) ($generated@@226 $generated@@358 $generated@@357))
 :pattern ( ($generated@@81 $generated@@356 $generated@@358))
))))
 :pattern ( ($generated@@132 $generated@@356 ($generated@@150 $generated@@357)))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@241 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@145) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@256 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@241 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@364) $generated@@64)) (= (type $generated@@365) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@363 ($generated@@246 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@145) ($generated@@0 ($generated@@81 $generated@@363 $generated@@366))) ($generated@@256 $generated@@366 $generated@@364 $generated@@365))
 :pattern ( ($generated@@81 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@74 $generated@@363 ($generated@@246 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
(= ($generated ($generated@@81 ($generated@@288 $generated@@368) $generated@@367)) 0))
 :pattern ( (let (($generated@@368 (type $generated@@367)))
($generated@@81 ($generated@@288 $generated@@368) $generated@@367)))
)))
(assert  (and (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@369 $generated@@372)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@369 $generated@@372))
)) (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@370 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@370 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@297 (type $generated@@375))))
(let (($generated@@377 ($generated@@296 (type $generated@@375))))
(= (type ($generated@@371 $generated@@375)) ($generated@@76 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@371 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@295 $generated@@145 $generated@@145)) (= (type $generated@@379) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@369 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@81 ($generated@@293 $generated@@378) ($generated@@143 ($generated@@370 $generated@@136 $generated@@379)))) (= ($generated@@81 ($generated@@371 $generated@@378) ($generated@@143 ($generated@@370 $generated@@136 $generated@@379))) ($generated@@144 ($generated@@370 $generated@@136 $generated@@379))))))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@315 (type $generated@@383))))
(let (($generated@@385 ($generated@@314 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@76 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@313 $generated@@145 $generated@@145)) (= (type $generated@@387) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@386) ($generated@@143 ($generated@@370 $generated@@136 $generated@@387)))) (= ($generated@@81 ($generated@@381 $generated@@386) ($generated@@143 ($generated@@370 $generated@@136 $generated@@387))) ($generated@@144 ($generated@@370 $generated@@136 $generated@@387))))))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@296 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@295 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@337 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@293 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@371 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@337 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@314 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@313 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@64)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@295 $generated@@145 $generated@@145)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@401) $generated@@405))) (and ($generated@@256 ($generated@@81 ($generated@@371 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@256 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@64)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@313 $generated@@145 $generated@@145)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@409) $generated@@413))) (and ($generated@@256 ($generated@@81 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@256 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@74 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 Int) ) (! (= ($generated@@229 $generated@@414) (to_real $generated@@414))
 :pattern ( ($generated@@229 $generated@@414))
)))
(assert  (=> (<= 2 $generated@@223) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@145) (or ($generated@@225 $generated@@415) (and (not (= 2 $generated@@223)) (and ($generated@@226 $generated@@415 $generated@@227) (not ($generated@@228 $generated@@415)))))) true)
 :pattern ( ($generated@@224 $generated@@415))
))))
(assert (forall (($generated@@417 T@T) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@76 $generated@@417 $generated@@4))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@315 (type $generated@@418))))
(let (($generated@@420 ($generated@@314 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@313 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@312 $generated@@420 $generated@@419)) (= ($generated@@311 $generated@@418) ($generated@@416 $generated@@420))))))
 :pattern ( ($generated@@311 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@315 (type $generated@@421))))
(let (($generated@@423 ($generated@@314 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@313 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@312 $generated@@423 $generated@@422)) (= ($generated@@348 $generated@@421) ($generated@@416 $generated@@422))))))
 :pattern ( ($generated@@348 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@315 (type $generated@@424))))
(let (($generated@@426 ($generated@@314 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@313 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@312 $generated@@426 $generated@@425)) (= ($generated@@380 $generated@@424) ($generated@@416 $generated@@145))))))
 :pattern ( ($generated@@380 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@297 (type $generated@@427))))
(let (($generated@@429 ($generated@@296 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@295 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@294 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@145) (= (type $generated@@431) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@369 $generated@@427) ($generated@@282 ($generated@@232 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@369 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@315 (type $generated@@432))))
(let (($generated@@434 ($generated@@314 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@313 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@312 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@145) (= (type $generated@@436) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@432) ($generated@@282 ($generated@@232 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@380 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@145) ($generated@@226 $generated@@437 $generated@@46)) (and (= ($generated@@282 ($generated@@370 $generated@@2 $generated@@437)) $generated@@437) ($generated@@132 ($generated@@370 $generated@@2 $generated@@437) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@437 $generated@@46))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) ($generated@@226 $generated@@438 $generated@@47)) (and (= ($generated@@282 ($generated@@370 $generated@@3 $generated@@438)) $generated@@438) ($generated@@132 ($generated@@370 $generated@@3 $generated@@438) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@438 $generated@@47))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@145) ($generated@@226 $generated@@439 $generated@@44)) (and (= ($generated@@282 ($generated@@370 $generated@@4 $generated@@439)) $generated@@439) ($generated@@132 ($generated@@370 $generated@@4 $generated@@439) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@439 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@440) 20))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@145) ($generated@@226 $generated@@441 $generated@@45)) (and (= ($generated@@282 ($generated@@370 $generated@@440 $generated@@441)) $generated@@441) ($generated@@132 ($generated@@370 $generated@@440 $generated@@441) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@441 $generated@@45))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (= (type $generated@@443) $generated@@64) (= ($generated@@226 ($generated@@282 $generated@@442) $generated@@443) ($generated@@132 $generated@@442 $generated@@443)))
 :pattern ( ($generated@@226 ($generated@@282 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@79 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@76 $generated@@445 $generated@@2)) (<= 0 ($generated@@287 $generated@@444))))
 :pattern ( ($generated@@287 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@276 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@275 $generated@@447)) (<= 0 ($generated@@274 $generated@@446))))
 :pattern ( ($generated@@274 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) ($generated@@281 $generated@@448)) (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@449) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@450) $generated@@145)) ($generated@@226 $generated@@450 $generated@@448)) ($generated@@256 $generated@@450 $generated@@448 $generated@@449))
 :pattern ( ($generated@@256 $generated@@450 $generated@@448 $generated@@449))
)))
 :pattern ( ($generated@@281 $generated@@448))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@398 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@398 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@398 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@398 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@406 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@406 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@406 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@406 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@145) (= (type $generated@@472) $generated@@145)) (= ($generated@@264 ($generated@@232 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@232 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@135 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@135 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@135 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@135 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@145) (= (type $generated@@482) $generated@@145)) (= ($generated@@143 ($generated@@232 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@232 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@145) (= (type $generated@@484) $generated@@145)) (= ($generated@@144 ($generated@@232 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@232 $generated@@483 $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@276 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@275 $generated@@145)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@274 $generated@@491))) ($generated@@256 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@74 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@75 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@75 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@241 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@241 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@241 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@246 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@246 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@246 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@150 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@150 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@370 $generated@@514 ($generated@@282 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@282 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@295 $generated@@145 $generated@@145)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@132 $generated@@515 ($generated@@398 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@515) $generated@@518))) (and ($generated@@226 ($generated@@81 ($generated@@371 $generated@@515) $generated@@518) $generated@@517) ($generated@@226 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@132 $generated@@515 ($generated@@398 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@313 $generated@@145 $generated@@145)) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) (= ($generated@@132 $generated@@519 ($generated@@406 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@519) $generated@@522))) (and ($generated@@226 ($generated@@81 ($generated@@381 $generated@@519) $generated@@522) $generated@@521) ($generated@@226 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@519) $generated@@522))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@132 $generated@@519 ($generated@@406 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@145)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@232 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@232 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@145)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@232 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@232 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@226 $generated@@529 ($generated@@398 $generated@@530 $generated@@531))) (and (= ($generated@@282 ($generated@@370 ($generated@@295 $generated@@145 $generated@@145) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@370 ($generated@@295 $generated@@145 $generated@@145) $generated@@529) ($generated@@398 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@226 $generated@@529 ($generated@@398 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@226 $generated@@532 ($generated@@406 $generated@@533 $generated@@534))) (and (= ($generated@@282 ($generated@@370 ($generated@@313 $generated@@145 $generated@@145) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@370 ($generated@@313 $generated@@145 $generated@@145) $generated@@532) ($generated@@406 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@226 $generated@@532 ($generated@@406 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@145)) ($generated@@226 $generated@@537 ($generated@@135 $generated@@535 $generated@@536))) (and (= ($generated@@282 ($generated@@370 $generated@@136 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@370 $generated@@136 $generated@@537) ($generated@@135 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@226 $generated@@537 ($generated@@135 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@416 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@416 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@135 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@136) (= ($generated@@523 ($generated@@282 $generated@@544)) ($generated@@524 $generated@@544)))
 :pattern ( ($generated@@523 ($generated@@282 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@145) ($generated@@226 $generated@@545 ($generated@@75 0))) (and (= ($generated@@282 ($generated@@370 $generated@@2 $generated@@545)) $generated@@545) ($generated@@132 ($generated@@370 ($generated@@76 $generated@@145 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@226 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@64)) ($generated@@226 $generated@@546 ($generated@@241 $generated@@547))) (and (= ($generated@@282 ($generated@@370 ($generated@@76 $generated@@145 $generated@@4) $generated@@546)) $generated@@546) ($generated@@132 ($generated@@370 ($generated@@76 $generated@@145 $generated@@4) $generated@@546) ($generated@@241 $generated@@547))))
 :pattern ( ($generated@@226 $generated@@546 ($generated@@241 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) ($generated@@226 $generated@@548 ($generated@@246 $generated@@549))) (and (= ($generated@@282 ($generated@@370 ($generated@@76 $generated@@145 $generated@@4) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@370 ($generated@@76 $generated@@145 $generated@@4) $generated@@548) ($generated@@246 $generated@@549))))
 :pattern ( ($generated@@226 $generated@@548 ($generated@@246 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) ($generated@@226 $generated@@550 ($generated@@150 $generated@@551))) (and (= ($generated@@282 ($generated@@370 ($generated@@76 $generated@@145 $generated@@2) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@370 ($generated@@76 $generated@@145 $generated@@2) $generated@@550) ($generated@@150 $generated@@551))))
 :pattern ( ($generated@@226 $generated@@550 ($generated@@150 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) ($generated@@226 $generated@@552 ($generated@@485 $generated@@553))) (and (= ($generated@@282 ($generated@@370 ($generated@@275 $generated@@145) $generated@@552)) $generated@@552) ($generated@@132 ($generated@@370 ($generated@@275 $generated@@145) $generated@@552) ($generated@@485 $generated@@553))))
 :pattern ( ($generated@@226 $generated@@552 ($generated@@485 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@150 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@256 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@150 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@136) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@255 $generated@@560) (and ($generated@@134 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@135 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@135 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@256 ($generated@@143 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@256 ($generated@@143 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@136) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@255 $generated@@564) (and ($generated@@134 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@135 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@135 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@256 ($generated@@144 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@256 ($generated@@144 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@145) (= (type $generated@@567) $generated@@145)) (= ($generated@@232 ($generated@@251 $generated@@566) ($generated@@251 $generated@@567)) ($generated@@251 ($generated@@232 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@232 ($generated@@251 $generated@@566) ($generated@@251 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (= ($generated@@282 ($generated@@251 $generated@@568)) ($generated@@251 ($generated@@282 $generated@@568)))
 :pattern ( ($generated@@282 ($generated@@251 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@276 (type $generated@@569))))
 (=> (and (= (type $generated@@569) ($generated@@275 $generated@@570)) (= ($generated@@274 $generated@@569) 0)) (= $generated@@569 ($generated@@273 $generated@@570))))
 :pattern ( ($generated@@274 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@572)))
 (=> (and (and (= (type $generated@@571) ($generated@@76 $generated@@574 $generated@@2)) (= (type $generated@@573) $generated@@2)) (<= 0 ($generated $generated@@573))) (= ($generated@@287 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)) (+ (- ($generated@@287 $generated@@571) ($generated ($generated@@81 $generated@@571 $generated@@572))) ($generated $generated@@573)))))
 :pattern ( ($generated@@287 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@2)) ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@3)) ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@4)) ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@440)) ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@145)) ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@275 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= ($generated@@132 $generated@@585 ($generated@@485 $generated@@586)) (forall (($generated@@587 Int) ) (!  (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@274 $generated@@585))) ($generated@@226 ($generated@@486 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@486 $generated@@585 $generated@@587))
))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@485 $generated@@586)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 Int) ) (!  (=> (= (type $generated@@589) ($generated@@275 $generated@@145)) (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@274 $generated@@589))) (< ($generated@@524 ($generated@@370 $generated@@136 ($generated@@486 $generated@@589 $generated@@590))) ($generated@@588 $generated@@589))))
 :pattern ( ($generated@@524 ($generated@@370 $generated@@136 ($generated@@486 $generated@@589 $generated@@590))))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@295 $generated@@145 $generated@@145)) (= (type $generated@@592) $generated@@64)) (= (type $generated@@593) $generated@@64)) ($generated@@132 $generated@@591 ($generated@@398 $generated@@592 $generated@@593))) (and (and ($generated@@132 ($generated@@293 $generated@@591) ($generated@@241 $generated@@592)) ($generated@@132 ($generated@@337 $generated@@591) ($generated@@241 $generated@@593))) ($generated@@132 ($generated@@369 $generated@@591) ($generated@@241 ($generated@@135 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@132 $generated@@591 ($generated@@398 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@313 $generated@@145 $generated@@145)) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) $generated@@64)) ($generated@@132 $generated@@594 ($generated@@406 $generated@@595 $generated@@596))) (and (and ($generated@@132 ($generated@@311 $generated@@594) ($generated@@246 $generated@@595)) ($generated@@132 ($generated@@348 $generated@@594) ($generated@@246 $generated@@596))) ($generated@@132 ($generated@@380 $generated@@594) ($generated@@246 ($generated@@135 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@132 $generated@@594 ($generated@@406 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@2) ($generated@@132 $generated@@597 $generated@@46))
 :pattern ( ($generated@@132 $generated@@597 $generated@@46))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@3) ($generated@@132 $generated@@598 $generated@@47))
 :pattern ( ($generated@@132 $generated@@598 $generated@@47))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@4) ($generated@@132 $generated@@599 $generated@@44))
 :pattern ( ($generated@@132 $generated@@599 $generated@@44))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@440) ($generated@@132 $generated@@600 $generated@@45))
 :pattern ( ($generated@@132 $generated@@600 $generated@@45))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@145) ($generated@@132 $generated@@601 $generated@@48))
 :pattern ( ($generated@@132 $generated@@601 $generated@@48))
)))
(assert  (=> (<= 1 $generated@@223) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@145) (or ($generated@@262 $generated@@602) (and (not (= 1 $generated@@223)) ($generated@@226 $generated@@602 $generated@@227)))) true)
 :pattern ( ($generated@@228 $generated@@602))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@603) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@604) $generated@@77)) (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@606) $generated@@145)) (= (type $generated@@607) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@609  (=> (and (= $generated@@603 ($generated@@211 $generated@@604 $generated@@605 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) (not (= ($generated@@229 ($generated@@230 $generated@@606)) 0.0)))))
(let (($generated@@610 true))
(let (($generated@@611  (=> (and (and (= $generated@@607 ($generated@@156 $generated@@604 $generated@@605 $generated@@60 false)) ($generated@@256 $generated@@606 $generated@@227 $generated@@605)) (and ($generated@@262 $generated@@606) (not ($generated@@228 $generated@@606)))) (and (=> (= (ControlFlow 0 4) 1) $generated@@610) (=> (= (ControlFlow 0 4) 3) $generated@@609)))))
(let (($generated@@612  (=> (and ($generated@@255 $generated@@605) ($generated@@608 $generated@@605)) (=> (and (and ($generated@@226 $generated@@606 $generated@@227) ($generated@@256 $generated@@606 $generated@@227 $generated@@605)) (and (= 2 $generated@@223) (= (ControlFlow 0 5) 4))) $generated@@611))))
$generated@@612)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@T) T@U)
(declare-fun $generated@@412 () T@T)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@458 (T@U Int) T@U)
(declare-fun $generated@@467 (T@U) Int)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@235 $generated@@241)) (= ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@136) (= ($generated@@134 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@136) ($generated@@134 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@145) (= (type $generated@@247) $generated@@145)) (= $generated@@245 ($generated@@211 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@134 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 17)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert (= (type $generated@@257) $generated@@64))
(assert ($generated@@256 $generated@@257))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@236 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@236 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@0 ($generated@@81 $generated@@333 $generated@@336))) ($generated@@236 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@236 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@342) $generated@@341)) 0))
 :pattern ( (let (($generated@@342 (type $generated@@341)))
($generated@@81 ($generated@@264 $generated@@342) $generated@@341)))
)))
(assert  (and (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@346)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@343 $generated@@346))
)) (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@344 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@344 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@273 (type $generated@@349))))
(let (($generated@@351 ($generated@@272 (type $generated@@349))))
(= (type ($generated@@345 $generated@@349)) ($generated@@76 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@345 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@353) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353)))) (= ($generated@@81 ($generated@@345 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@353))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@291 (type $generated@@357))))
(let (($generated@@359 ($generated@@290 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@355 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@272 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@271 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@362) $generated@@366))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@290 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@289 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@64)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))) (and ($generated@@236 ($generated@@81 ($generated@@345 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@236 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))) (and ($generated@@236 ($generated@@81 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@236 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@T) ) (! (= (type ($generated@@388 $generated@@389)) ($generated@@76 $generated@@389 $generated@@4))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@291 (type $generated@@390))))
(let (($generated@@392 ($generated@@290 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@289 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@288 $generated@@392 $generated@@391)) (= ($generated@@287 $generated@@390) ($generated@@388 $generated@@392))))))
 :pattern ( ($generated@@287 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@291 (type $generated@@393))))
(let (($generated@@395 ($generated@@290 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@289 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@288 $generated@@395 $generated@@394)) (= ($generated@@323 $generated@@393) ($generated@@388 $generated@@394))))))
 :pattern ( ($generated@@323 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@291 (type $generated@@396))))
(let (($generated@@398 ($generated@@290 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@289 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@288 $generated@@398 $generated@@397)) (= ($generated@@354 $generated@@396) ($generated@@388 $generated@@145))))))
 :pattern ( ($generated@@354 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@273 (type $generated@@399))))
(let (($generated@@401 ($generated@@272 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@271 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@270 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (and (and (= (type $generated@@402) $generated@@145) (= (type $generated@@403) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@399) ($generated@@258 ($generated@@211 $generated@@402 $generated@@403)))))
 :no-pattern (type $generated@@402)
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@343 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (and (and (= (type $generated@@407) $generated@@145) (= (type $generated@@408) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@404) ($generated@@258 ($generated@@211 $generated@@407 $generated@@408)))))
 :no-pattern (type $generated@@407)
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@354 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@46)) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@344 $generated@@2 $generated@@409) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@46))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@212 $generated@@410 $generated@@47)) (and (= ($generated@@258 ($generated@@344 $generated@@3 $generated@@410)) $generated@@410) ($generated@@132 ($generated@@344 $generated@@3 $generated@@410) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@410 $generated@@47))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@44)) (and (= ($generated@@258 ($generated@@344 $generated@@4 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@344 $generated@@4 $generated@@411) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@412) 20))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@45)) (and (= ($generated@@258 ($generated@@344 $generated@@412 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@344 $generated@@412 $generated@@413) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@45))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@414) $generated@@415) ($generated@@132 $generated@@414 $generated@@415)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (<= 0 ($generated@@263 $generated@@416))))
 :pattern ( ($generated@@263 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@251 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@250 $generated@@419)) (<= 0 ($generated@@249 $generated@@418))))
 :pattern ( ($generated@@249 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@64) ($generated@@256 $generated@@420)) (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (= (type $generated@@421) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@422) $generated@@145)) ($generated@@212 $generated@@422 $generated@@420)) ($generated@@236 $generated@@422 $generated@@420 $generated@@421))
 :pattern ( ($generated@@236 $generated@@422 $generated@@420 $generated@@421))
)))
 :pattern ( ($generated@@256 $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ) (! (= (type ($generated@@423 $generated@@424)) $generated@@64)
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@64) (= (type $generated@@426) $generated@@64)) (= ($generated@@423 ($generated@@372 $generated@@425 $generated@@426)) $generated@@425))
 :pattern ( ($generated@@372 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@64)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@64) (= (type $generated@@430) $generated@@64)) (= ($generated@@427 ($generated@@372 $generated@@429 $generated@@430)) $generated@@430))
 :pattern ( ($generated@@372 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@64) (= (type $generated@@432) $generated@@64)) (= ($generated@@72 ($generated@@372 $generated@@431 $generated@@432)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@64)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@64) (= (type $generated@@436) $generated@@64)) (= ($generated@@433 ($generated@@380 $generated@@435 $generated@@436)) $generated@@435))
 :pattern ( ($generated@@380 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@64)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@437 ($generated@@380 $generated@@439 $generated@@440)) $generated@@440))
 :pattern ( ($generated@@380 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@441 $generated@@442)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@145) (= (type $generated@@444) $generated@@145)) (= ($generated@@242 ($generated@@211 $generated@@443 $generated@@444)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@135 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@135 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@135 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@135 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@145) (= (type $generated@@454) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@211 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@145) (= (type $generated@@456) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@211 $generated@@455 $generated@@456))
)))
(assert  (and (forall (($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@459))
)) (forall (($generated@@460 T@U) ($generated@@461 Int) ) (! (let (($generated@@462 ($generated@@251 (type $generated@@460))))
(= (type ($generated@@458 $generated@@460 $generated@@461)) $generated@@462))
 :pattern ( ($generated@@458 $generated@@460 $generated@@461))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (= (type $generated@@463) ($generated@@250 $generated@@145)) (= (type $generated@@464) $generated@@64)) (= (type $generated@@465) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@463 ($generated@@457 $generated@@464) $generated@@465) (forall (($generated@@466 Int) ) (!  (=> (and (<= 0 $generated@@466) (< $generated@@466 ($generated@@249 $generated@@463))) ($generated@@236 ($generated@@458 $generated@@463 $generated@@466) $generated@@464 $generated@@465))
 :pattern ( ($generated@@458 $generated@@463 $generated@@466))
))))
 :pattern ( ($generated@@74 $generated@@463 ($generated@@457 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 Int) ) (! (= ($generated@@467 ($generated@@75 $generated@@468)) $generated@@468)
 :pattern ( ($generated@@75 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@469 ($generated@@221 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@221 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@472)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@473 ($generated@@226 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@226 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@476)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@477 ($generated@@150 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@150 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@480)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@457 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@457 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@457 $generated@@484)) $generated@@57))
 :pattern ( ($generated@@457 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@485)))
(= ($generated@@344 $generated@@486 ($generated@@258 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@258 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) $generated@@64)) (= ($generated@@132 $generated@@487 ($generated@@372 $generated@@488 $generated@@489)) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@487) $generated@@490))) (and ($generated@@212 ($generated@@81 ($generated@@345 $generated@@487) $generated@@490) $generated@@489) ($generated@@212 $generated@@490 $generated@@488)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@487) $generated@@490))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@487) $generated@@490))
))))
 :pattern ( ($generated@@132 $generated@@487 ($generated@@372 $generated@@488 $generated@@489)))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) $generated@@64)) (= ($generated@@132 $generated@@491 ($generated@@380 $generated@@492 $generated@@493)) (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@491) $generated@@494))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@491) $generated@@494) $generated@@493) ($generated@@212 $generated@@494 $generated@@492)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@491) $generated@@494))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@491) $generated@@494))
))))
 :pattern ( ($generated@@132 $generated@@491 ($generated@@380 $generated@@492 $generated@@493)))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@145) (= (type $generated@@498) $generated@@145)) (< ($generated@@495 $generated@@497) ($generated@@496 ($generated@@211 $generated@@497 $generated@@498))))
 :pattern ( ($generated@@211 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@145)) (< ($generated@@495 $generated@@500) ($generated@@496 ($generated@@211 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@211 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) ($generated@@212 $generated@@501 ($generated@@372 $generated@@502 $generated@@503))) (and (= ($generated@@258 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@501)) $generated@@501) ($generated@@132 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@501) ($generated@@372 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@501 ($generated@@372 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@145) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) ($generated@@212 $generated@@504 ($generated@@380 $generated@@505 $generated@@506))) (and (= ($generated@@258 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@504)) $generated@@504) ($generated@@132 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@504) ($generated@@380 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@212 $generated@@504 ($generated@@380 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) $generated@@64) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@145)) ($generated@@212 $generated@@509 ($generated@@135 $generated@@507 $generated@@508))) (and (= ($generated@@258 ($generated@@344 $generated@@136 $generated@@509)) $generated@@509) ($generated@@132 ($generated@@344 $generated@@136 $generated@@509) ($generated@@135 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@212 $generated@@509 ($generated@@135 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
 (not ($generated@@0 ($generated@@81 ($generated@@388 $generated@@511) $generated@@510))))
 :pattern ( (let (($generated@@511 (type $generated@@510)))
($generated@@81 ($generated@@388 $generated@@511) $generated@@510)))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@69)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@64) (= (type $generated@@515) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@514 $generated@@515)) $generated@@62) (= ($generated@@512 ($generated@@135 $generated@@514 $generated@@515)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@136) (= ($generated@@495 ($generated@@258 $generated@@516)) ($generated@@496 $generated@@516)))
 :pattern ( ($generated@@495 ($generated@@258 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) ($generated@@212 $generated@@517 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@517)) $generated@@517) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@75 0)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@64)) ($generated@@212 $generated@@518 ($generated@@221 $generated@@519))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@518)) $generated@@518) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@518) ($generated@@221 $generated@@519))))
 :pattern ( ($generated@@212 $generated@@518 ($generated@@221 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@64)) ($generated@@212 $generated@@520 ($generated@@226 $generated@@521))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@520)) $generated@@520) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@520) ($generated@@226 $generated@@521))))
 :pattern ( ($generated@@212 $generated@@520 ($generated@@226 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) ($generated@@212 $generated@@522 ($generated@@150 $generated@@523))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@522) ($generated@@150 $generated@@523))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@150 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) ($generated@@212 $generated@@524 ($generated@@457 $generated@@525))) (and (= ($generated@@258 ($generated@@344 ($generated@@250 $generated@@145) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@344 ($generated@@250 $generated@@145) $generated@@524) ($generated@@457 $generated@@525))))
 :pattern ( ($generated@@212 $generated@@524 ($generated@@457 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@526 ($generated@@150 $generated@@527) $generated@@528) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@526 $generated@@529)))) ($generated@@236 $generated@@529 $generated@@527 $generated@@528))
 :pattern ( ($generated@@81 $generated@@526 $generated@@529))
))))
 :pattern ( ($generated@@74 $generated@@526 ($generated@@150 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@136) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@532) (and ($generated@@134 $generated@@530) (exists (($generated@@533 T@U) ) (!  (and (= (type $generated@@533) $generated@@64) ($generated@@74 $generated@@530 ($generated@@135 $generated@@531 $generated@@533) $generated@@532))
 :pattern ( ($generated@@74 $generated@@530 ($generated@@135 $generated@@531 $generated@@533) $generated@@532))
))))) ($generated@@236 ($generated@@143 $generated@@530) $generated@@531 $generated@@532))
 :pattern ( ($generated@@236 ($generated@@143 $generated@@530) $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@136) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@536) (and ($generated@@134 $generated@@534) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@64) ($generated@@74 $generated@@534 ($generated@@135 $generated@@537 $generated@@535) $generated@@536))
 :pattern ( ($generated@@74 $generated@@534 ($generated@@135 $generated@@537 $generated@@535) $generated@@536))
))))) ($generated@@236 ($generated@@144 $generated@@534) $generated@@535 $generated@@536))
 :pattern ( ($generated@@236 ($generated@@144 $generated@@534) $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@538) ($generated@@231 $generated@@539)) ($generated@@231 ($generated@@211 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@538) ($generated@@231 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (! (= ($generated@@258 ($generated@@231 $generated@@540)) ($generated@@231 ($generated@@258 $generated@@540)))
 :pattern ( ($generated@@258 ($generated@@231 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@251 (type $generated@@541))))
 (=> (and (= (type $generated@@541) ($generated@@250 $generated@@542)) (= ($generated@@249 $generated@@541) 0)) (= $generated@@541 ($generated@@248 $generated@@542))))
 :pattern ( ($generated@@249 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@544)))
 (=> (and (and (= (type $generated@@543) ($generated@@76 $generated@@546 $generated@@2)) (= (type $generated@@545) $generated@@2)) (<= 0 ($generated $generated@@545))) (= ($generated@@263 ($generated@@82 $generated@@543 $generated@@544 $generated@@545)) (+ (- ($generated@@263 $generated@@543) ($generated ($generated@@81 $generated@@543 $generated@@544))) ($generated $generated@@545)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@543 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@548) $generated@@2)) ($generated@@74 $generated@@548 $generated@@46 $generated@@547))
 :pattern ( ($generated@@74 $generated@@548 $generated@@46 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@550) $generated@@3)) ($generated@@74 $generated@@550 $generated@@47 $generated@@549))
 :pattern ( ($generated@@74 $generated@@550 $generated@@47 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@552) $generated@@4)) ($generated@@74 $generated@@552 $generated@@44 $generated@@551))
 :pattern ( ($generated@@74 $generated@@552 $generated@@44 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@412)) ($generated@@74 $generated@@554 $generated@@45 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@45 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@556) $generated@@145)) ($generated@@74 $generated@@556 $generated@@48 $generated@@555))
 :pattern ( ($generated@@74 $generated@@556 $generated@@48 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@250 $generated@@145)) (= (type $generated@@558) $generated@@64)) (= ($generated@@132 $generated@@557 ($generated@@457 $generated@@558)) (forall (($generated@@559 Int) ) (!  (=> (and (<= 0 $generated@@559) (< $generated@@559 ($generated@@249 $generated@@557))) ($generated@@212 ($generated@@458 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@458 $generated@@557 $generated@@559))
))))
 :pattern ( ($generated@@132 $generated@@557 ($generated@@457 $generated@@558)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 Int) ) (!  (=> (= (type $generated@@561) ($generated@@250 $generated@@145)) (=> (and (<= 0 $generated@@562) (< $generated@@562 ($generated@@249 $generated@@561))) (< ($generated@@496 ($generated@@344 $generated@@136 ($generated@@458 $generated@@561 $generated@@562))) ($generated@@560 $generated@@561))))
 :pattern ( ($generated@@496 ($generated@@344 $generated@@136 ($generated@@458 $generated@@561 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) $generated@@64)) ($generated@@132 $generated@@563 ($generated@@372 $generated@@564 $generated@@565))) (and (and ($generated@@132 ($generated@@269 $generated@@563) ($generated@@221 $generated@@564)) ($generated@@132 ($generated@@312 $generated@@563) ($generated@@221 $generated@@565))) ($generated@@132 ($generated@@343 $generated@@563) ($generated@@221 ($generated@@135 $generated@@564 $generated@@565)))))
 :pattern ( ($generated@@132 $generated@@563 ($generated@@372 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) ($generated@@132 $generated@@566 ($generated@@380 $generated@@567 $generated@@568))) (and (and ($generated@@132 ($generated@@287 $generated@@566) ($generated@@226 $generated@@567)) ($generated@@132 ($generated@@323 $generated@@566) ($generated@@226 $generated@@568))) ($generated@@132 ($generated@@354 $generated@@566) ($generated@@226 ($generated@@135 $generated@@567 $generated@@568)))))
 :pattern ( ($generated@@132 $generated@@566 ($generated@@380 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@2) ($generated@@132 $generated@@569 $generated@@46))
 :pattern ( ($generated@@132 $generated@@569 $generated@@46))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@3) ($generated@@132 $generated@@570 $generated@@47))
 :pattern ( ($generated@@132 $generated@@570 $generated@@47))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@4) ($generated@@132 $generated@@571 $generated@@44))
 :pattern ( ($generated@@132 $generated@@571 $generated@@44))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@412) ($generated@@132 $generated@@572 $generated@@45))
 :pattern ( ($generated@@132 $generated@@572 $generated@@45))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@145) ($generated@@132 $generated@@573 $generated@@48))
 :pattern ( ($generated@@132 $generated@@573 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@577 () T@U)
(declare-fun $generated@@578 (T@U) Bool)
(declare-fun $generated@@579 () T@U)
(declare-fun $generated@@580 () Int)
(assert  (and (and (and (and (= (type $generated@@574) $generated@@145) (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@576) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@577) $generated@@77)) (= (type $generated@@579) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@581  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@231 ($generated@@11 true))))))
(let (($generated@@582  (=> (and (not (and ($generated@@212 $generated@@574 $generated@@257) ($generated@@236 $generated@@574 $generated@@257 $generated@@575))) (= (ControlFlow 0 4) 2)) $generated@@581)))
(let (($generated@@583  (=> (and (and ($generated@@212 $generated@@574 $generated@@257) ($generated@@236 $generated@@574 $generated@@257 $generated@@575)) (= (ControlFlow 0 3) 2)) $generated@@581)))
(let (($generated@@584  (=> (= $generated@@576 ($generated@@156 $generated@@577 $generated@@575 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@583) (=> (= (ControlFlow 0 5) 4) $generated@@582)))))
(let (($generated@@585  (=> (and ($generated@@235 $generated@@575) ($generated@@578 $generated@@575)) (=> (and (and ($generated@@212 $generated@@579 $generated@@257) ($generated@@236 $generated@@579 $generated@@257 $generated@@575)) (and (= 0 $generated@@580) (= (ControlFlow 0 6) 5))) $generated@@584))))
$generated@@585))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Int)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@U) Real)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@224 (Int) Real)
(declare-fun $generated@@225 (T@U) Int)
(declare-fun $generated@@227 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@359 (Int Int) Int)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@T) T@U)
(declare-fun $generated@@450 () T@T)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@496 (T@U Int) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@599 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (= ($generated@@1 $generated@@134) 14) (= (type $generated@@137) $generated@@64)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@134) (or ($generated@@135 $generated@@139) (and (not (= 2 $generated@@132)) (and ($generated@@136 $generated@@139 $generated@@137) ($generated@@138 $generated@@139))))) true)
 :pattern ( ($generated@@133 $generated@@139))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@141) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@142) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@140 $generated@@141 $generated@@142)) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@141 $generated@@143) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@142 $generated@@143) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@142 $generated@@143) $generated@@60))
)))
 :pattern ( ($generated@@140 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@75 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@134)
 :pattern ( ($generated@@155 $generated@@157))
)) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@134)
 :pattern ( ($generated@@156 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@148) (= (type $generated@@160) $generated@@148)) true) (= ($generated@@154 $generated@@159 $generated@@160)  (and (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)) (= ($generated@@156 $generated@@159) ($generated@@156 $generated@@160)))))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@64)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@165) $generated@@64)) ($generated@@144 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@144 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@77 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@67 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@77) (= (type $generated@@216) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@217) ($generated@@66 $generated@@4))) (= (type $generated@@219) $generated@@77)) (= (type $generated@@220) ($generated@@66 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@134) (or ($generated@@223 $generated@@226) (and (not (= 2 $generated@@132)) (and ($generated@@136 $generated@@226 $generated@@137) (not ($generated@@138 $generated@@226)))))) (= ($generated@@222 $generated@@226) (/ 100.0 ($generated@@224 ($generated@@225 $generated@@226)))))
 :pattern ( ($generated@@222 $generated@@226))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! (= (type ($generated@@227 $generated@@228 $generated@@229)) $generated@@148)
 :pattern ( ($generated@@227 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (and (= (type $generated@@230) $generated@@64) (= (type $generated@@231) $generated@@64)) (= (type $generated@@232) $generated@@134)) (= (type $generated@@233) $generated@@134)) (= ($generated@@144 ($generated@@227 $generated@@232 $generated@@233) ($generated@@147 $generated@@230 $generated@@231))  (and ($generated@@136 $generated@@232 $generated@@230) ($generated@@136 $generated@@233 $generated@@231))))
 :pattern ( ($generated@@144 ($generated@@227 $generated@@232 $generated@@233) ($generated@@147 $generated@@230 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@148) (= (type $generated@@235) $generated@@148)) (= ($generated@@154 $generated@@234 $generated@@235) (= $generated@@234 $generated@@235)))
 :pattern ( ($generated@@154 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@239) $generated@@64)) (= ($generated@@144 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@134) ($generated@@0 ($generated@@81 $generated@@238 $generated@@240))) ($generated@@136 $generated@@240 $generated@@239))
 :pattern ( ($generated@@81 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@144 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@64)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@244) $generated@@64)) (= ($generated@@144 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@134) ($generated@@0 ($generated@@81 $generated@@243 $generated@@245))) ($generated@@136 $generated@@245 $generated@@244))
 :pattern ( ($generated@@81 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@144 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@64) (= (type $generated@@253) $generated@@64)) (= (type $generated@@254) $generated@@134)) (= (type $generated@@255) $generated@@134)) (= (type $generated@@256) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@250 $generated@@256)) (= ($generated@@74 ($generated@@227 $generated@@254 $generated@@255) ($generated@@147 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@74 ($generated@@227 $generated@@254 $generated@@255) ($generated@@147 $generated@@252 $generated@@253) $generated@@256))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@134) (or ($generated@@257 $generated@@258) (and (not (= 1 $generated@@132)) ($generated@@136 $generated@@258 $generated@@137)))) (= ($generated@@138 $generated@@258) (< ($generated@@225 $generated@@258) 10)))
 :pattern ( ($generated@@138 $generated@@258))
))))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@68)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@148) (= ($generated@@146 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@261))
)))
(assert  (=> (< 0 $generated@@132) (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@134) ($generated@@144 ($generated@@8 ($generated@@225 $generated@@262)) $generated@@46))
 :pattern ( ($generated@@225 $generated@@262))
))))
(assert  (=> (< 0 $generated@@132) (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@264) $generated@@134)) (and ($generated@@250 $generated@@263) ($generated@@251 $generated@@264 $generated@@137 $generated@@263))) ($generated@@74 ($generated@@8 ($generated@@225 $generated@@264)) $generated@@46 $generated@@263))
 :pattern ( ($generated@@225 $generated@@264) ($generated@@251 $generated@@264 $generated@@137 $generated@@263))
))))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@148) ($generated@@146 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@134) (= (type $generated@@267) $generated@@134)) (= $generated@@265 ($generated@@227 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@146 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert ($generated@@276 $generated@@137))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@134)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@64) (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@251 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@74 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@251 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@282) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@283) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@284) $generated@@134)) (= (type $generated@@285) $generated@@64)) ($generated@@140 $generated@@282 $generated@@283)) ($generated@@251 $generated@@284 $generated@@285 $generated@@282)) ($generated@@251 $generated@@284 $generated@@285 $generated@@283))
 :pattern ( ($generated@@140 $generated@@282 $generated@@283) ($generated@@251 $generated@@284 $generated@@285 $generated@@282))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@286) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@287) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@289) $generated@@64)) ($generated@@140 $generated@@286 $generated@@287)) ($generated@@74 $generated@@288 $generated@@289 $generated@@286)) ($generated@@74 $generated@@288 $generated@@289 $generated@@287))
 :pattern ( ($generated@@140 $generated@@286 $generated@@287) ($generated@@74 $generated@@288 $generated@@289 $generated@@286))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@76 $generated@@292 $generated@@2))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@79 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@76 $generated@@294 $generated@@2)) (and (= (= ($generated@@290 $generated@@293) 0) (= $generated@@293 ($generated@@291 $generated@@294))) (=> (not (= ($generated@@290 $generated@@293) 0)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) (< 0 ($generated ($generated@@81 $generated@@293 $generated@@295))))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 18)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@76 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@81 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@81 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 19)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@81 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@81 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@79 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@76 $generated@@333 $generated@@2)) (= ($generated@@162 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (and (<= 0 ($generated ($generated@@81 $generated@@332 $generated@@334))) (<= ($generated ($generated@@81 $generated@@332 $generated@@334)) ($generated@@290 $generated@@332))))
 :pattern ( ($generated@@81 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@162 $generated@@332))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@134) (or ($generated@@257 ($generated@@246 $generated@@335)) (and (not (= 1 $generated@@132)) ($generated@@136 $generated@@335 $generated@@137)))) (= ($generated@@138 ($generated@@246 $generated@@335)) (< ($generated@@225 ($generated@@246 $generated@@335)) 10)))
 :weight 3
 :pattern ( ($generated@@138 ($generated@@246 $generated@@335)))
))))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@300 (type $generated@@336))))
(let (($generated@@338 ($generated@@299 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@298 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@297 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@296 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@300 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@300 (type $generated@@343))))
(let (($generated@@345 ($generated@@299 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@298 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@297 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@318 (type $generated@@347))))
(let (($generated@@349 ($generated@@317 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@316 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@315 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@314 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@318 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@76 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@318 (type $generated@@354))))
(let (($generated@@356 ($generated@@317 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@316 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@315 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@134) (or ($generated@@223 ($generated@@246 $generated@@358)) (and (not (= 2 $generated@@132)) (and ($generated@@136 $generated@@358 $generated@@137) (not ($generated@@0 ($generated@@246 ($generated@@11 ($generated@@138 ($generated@@246 $generated@@358)))))))))) (= ($generated@@222 ($generated@@246 $generated@@358)) (/ 100.0 ($generated@@224 ($generated@@225 ($generated@@246 $generated@@358))))))
 :weight 3
 :pattern ( ($generated@@222 ($generated@@246 $generated@@358)))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@134) (or ($generated@@135 $generated@@360) (and (not (= 2 $generated@@132)) (and ($generated@@136 $generated@@360 $generated@@137) ($generated@@138 $generated@@360))))) (= ($generated@@133 $generated@@360) ($generated@@359 100 (- ($generated@@225 $generated@@360) 10))))
 :pattern ( ($generated@@133 $generated@@360))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@362) $generated@@64)) (= ($generated@@144 $generated@@361 ($generated@@161 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@134) (< 0 ($generated ($generated@@81 $generated@@361 $generated@@363)))) ($generated@@136 $generated@@363 $generated@@362))
 :pattern ( ($generated@@81 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@144 $generated@@361 ($generated@@161 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@236 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@134) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@251 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@236 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@241 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@134) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@251 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@241 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@81 ($generated@@291 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@81 ($generated@@291 $generated@@373) $generated@@372)))
)))
(assert  (and (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@377)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@374 $generated@@377))
)) (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@375 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@300 (type $generated@@380))))
(let (($generated@@382 ($generated@@299 (type $generated@@380))))
(= (type ($generated@@376 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@376 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@298 $generated@@134 $generated@@134)) (= (type $generated@@384) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@296 $generated@@383) ($generated@@155 ($generated@@375 $generated@@148 $generated@@384)))) (= ($generated@@81 ($generated@@376 $generated@@383) ($generated@@155 ($generated@@375 $generated@@148 $generated@@384))) ($generated@@156 ($generated@@375 $generated@@148 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@318 (type $generated@@388))))
(let (($generated@@390 ($generated@@317 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@316 $generated@@134 $generated@@134)) (= (type $generated@@392) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@314 $generated@@391) ($generated@@155 ($generated@@375 $generated@@148 $generated@@392)))) (= ($generated@@81 ($generated@@386 $generated@@391) ($generated@@155 ($generated@@375 $generated@@148 $generated@@392))) ($generated@@156 ($generated@@375 $generated@@148 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@299 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@298 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@296 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@317 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@316 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@351 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@314 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@298 $generated@@134 $generated@@134)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@406) $generated@@410))) (and ($generated@@251 ($generated@@81 ($generated@@376 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@251 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@316 $generated@@134 $generated@@134)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@414) $generated@@418))) (and ($generated@@251 ($generated@@81 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@251 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 Int) ($generated@@420 Int) ) (! (= ($generated@@359 $generated@@419 $generated@@420) (div $generated@@419 $generated@@420))
 :pattern ( ($generated@@359 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 Int) ) (! (= ($generated@@224 $generated@@421) (to_real $generated@@421))
 :pattern ( ($generated@@224 $generated@@421))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@134) (or ($generated@@223 $generated@@422) (and (not (= 2 $generated@@132)) (and ($generated@@136 $generated@@422 $generated@@137) (not ($generated@@138 $generated@@422)))))) true)
 :pattern ( ($generated@@222 $generated@@422))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@423) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@424) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@425) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@423 $generated@@425))) (and ($generated@@140 $generated@@423 $generated@@424) ($generated@@140 $generated@@424 $generated@@425))) ($generated@@140 $generated@@423 $generated@@425))
 :pattern ( ($generated@@140 $generated@@423 $generated@@424) ($generated@@140 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@T) ) (! (= (type ($generated@@426 $generated@@427)) ($generated@@76 $generated@@427 $generated@@4))
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@318 (type $generated@@428))))
(let (($generated@@430 ($generated@@317 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@316 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@315 $generated@@430 $generated@@429)) (= ($generated@@314 $generated@@428) ($generated@@426 $generated@@430))))))
 :pattern ( ($generated@@314 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@318 (type $generated@@431))))
(let (($generated@@433 ($generated@@317 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@316 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@315 $generated@@433 $generated@@432)) (= ($generated@@351 $generated@@431) ($generated@@426 $generated@@432))))))
 :pattern ( ($generated@@351 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@318 (type $generated@@434))))
(let (($generated@@436 ($generated@@317 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@316 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@315 $generated@@436 $generated@@435)) (= ($generated@@385 $generated@@434) ($generated@@426 $generated@@134))))))
 :pattern ( ($generated@@385 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@300 (type $generated@@437))))
(let (($generated@@439 ($generated@@299 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@298 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@297 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@134) (= (type $generated@@441) $generated@@134)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@437) ($generated@@277 ($generated@@227 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@374 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@318 (type $generated@@442))))
(let (($generated@@444 ($generated@@317 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@316 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@315 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@134) (= (type $generated@@446) $generated@@134)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@442) ($generated@@277 ($generated@@227 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@385 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@134) ($generated@@136 $generated@@447 $generated@@46)) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@447)) $generated@@447) ($generated@@144 ($generated@@375 $generated@@2 $generated@@447) $generated@@46)))
 :pattern ( ($generated@@136 $generated@@447 $generated@@46))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@134) ($generated@@136 $generated@@448 $generated@@47)) (and (= ($generated@@277 ($generated@@375 $generated@@3 $generated@@448)) $generated@@448) ($generated@@144 ($generated@@375 $generated@@3 $generated@@448) $generated@@47)))
 :pattern ( ($generated@@136 $generated@@448 $generated@@47))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@134) ($generated@@136 $generated@@449 $generated@@44)) (and (= ($generated@@277 ($generated@@375 $generated@@4 $generated@@449)) $generated@@449) ($generated@@144 ($generated@@375 $generated@@4 $generated@@449) $generated@@44)))
 :pattern ( ($generated@@136 $generated@@449 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@450) 20))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@134) ($generated@@136 $generated@@451 $generated@@45)) (and (= ($generated@@277 ($generated@@375 $generated@@450 $generated@@451)) $generated@@451) ($generated@@144 ($generated@@375 $generated@@450 $generated@@451) $generated@@45)))
 :pattern ( ($generated@@136 $generated@@451 $generated@@45))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (= (type $generated@@453) $generated@@64) (= ($generated@@136 ($generated@@277 $generated@@452) $generated@@453) ($generated@@144 $generated@@452 $generated@@453)))
 :pattern ( ($generated@@136 ($generated@@277 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@79 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@76 $generated@@455 $generated@@2)) (<= 0 ($generated@@290 $generated@@454))))
 :pattern ( ($generated@@290 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@271 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@270 $generated@@457)) (<= 0 ($generated@@269 $generated@@456))))
 :pattern ( ($generated@@269 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) ($generated@@276 $generated@@458)) (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (= (type $generated@@459) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@460) $generated@@134)) ($generated@@136 $generated@@460 $generated@@458)) ($generated@@251 $generated@@460 $generated@@458 $generated@@459))
 :pattern ( ($generated@@251 $generated@@460 $generated@@458 $generated@@459))
)))
 :pattern ( ($generated@@276 $generated@@458))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@403 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@403 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@403 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@403 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@469 $generated@@470)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@411 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@411 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@411 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@411 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@479 $generated@@480)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@134) (= (type $generated@@482) $generated@@134)) (= ($generated@@259 ($generated@@227 $generated@@481 $generated@@482)) $generated@@61))
 :pattern ( ($generated@@227 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@483 ($generated@@147 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@147 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@487 ($generated@@147 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@147 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@134) (= (type $generated@@492) $generated@@134)) (= ($generated@@155 ($generated@@227 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@227 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@134) (= (type $generated@@494) $generated@@134)) (= ($generated@@156 ($generated@@227 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@227 $generated@@493 $generated@@494))
)))
(assert  (and (forall (($generated@@497 T@U) ) (! (= (type ($generated@@495 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@497))
)) (forall (($generated@@498 T@U) ($generated@@499 Int) ) (! (let (($generated@@500 ($generated@@271 (type $generated@@498))))
(= (type ($generated@@496 $generated@@498 $generated@@499)) $generated@@500))
 :pattern ( ($generated@@496 $generated@@498 $generated@@499))
))))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@270 $generated@@134)) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@501 ($generated@@495 $generated@@502) $generated@@503) (forall (($generated@@504 Int) ) (!  (=> (and (<= 0 $generated@@504) (< $generated@@504 ($generated@@269 $generated@@501))) ($generated@@251 ($generated@@496 $generated@@501 $generated@@504) $generated@@502 $generated@@503))
 :pattern ( ($generated@@496 $generated@@501 $generated@@504))
))))
 :pattern ( ($generated@@74 $generated@@501 ($generated@@495 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@506 Int) ) (! (= ($generated@@505 ($generated@@75 $generated@@506)) $generated@@506)
 :pattern ( ($generated@@75 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@236 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@236 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@236 $generated@@510)) $generated@@54))
 :pattern ( ($generated@@236 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@511 ($generated@@241 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@241 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@72 ($generated@@241 $generated@@514)) $generated@@55))
 :pattern ( ($generated@@241 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@161 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@161 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@72 ($generated@@161 $generated@@518)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@519 ($generated@@495 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@495 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@72 ($generated@@495 $generated@@522)) $generated@@57))
 :pattern ( ($generated@@495 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
(= ($generated@@375 $generated@@524 ($generated@@277 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@277 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@298 $generated@@134 $generated@@134)) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) (= ($generated@@144 $generated@@525 ($generated@@403 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@525) $generated@@528))) (and ($generated@@136 ($generated@@81 ($generated@@376 $generated@@525) $generated@@528) $generated@@527) ($generated@@136 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@525) $generated@@528))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@144 $generated@@525 ($generated@@403 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@316 $generated@@134 $generated@@134)) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) (= ($generated@@144 $generated@@529 ($generated@@411 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@529) $generated@@532))) (and ($generated@@136 ($generated@@81 ($generated@@386 $generated@@529) $generated@@532) $generated@@531) ($generated@@136 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@529) $generated@@532))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@144 $generated@@529 ($generated@@411 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@134) (= (type $generated@@536) $generated@@134)) (< ($generated@@533 $generated@@535) ($generated@@534 ($generated@@227 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@227 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@134) (= (type $generated@@538) $generated@@134)) (< ($generated@@533 $generated@@538) ($generated@@534 ($generated@@227 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@227 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@134) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@64)) ($generated@@136 $generated@@539 ($generated@@403 $generated@@540 $generated@@541))) (and (= ($generated@@277 ($generated@@375 ($generated@@298 $generated@@134 $generated@@134) $generated@@539)) $generated@@539) ($generated@@144 ($generated@@375 ($generated@@298 $generated@@134 $generated@@134) $generated@@539) ($generated@@403 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@136 $generated@@539 ($generated@@403 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@134) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@64)) ($generated@@136 $generated@@542 ($generated@@411 $generated@@543 $generated@@544))) (and (= ($generated@@277 ($generated@@375 ($generated@@316 $generated@@134 $generated@@134) $generated@@542)) $generated@@542) ($generated@@144 ($generated@@375 ($generated@@316 $generated@@134 $generated@@134) $generated@@542) ($generated@@411 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@136 $generated@@542 ($generated@@411 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@64) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) $generated@@134)) ($generated@@136 $generated@@547 ($generated@@147 $generated@@545 $generated@@546))) (and (= ($generated@@277 ($generated@@375 $generated@@148 $generated@@547)) $generated@@547) ($generated@@144 ($generated@@375 $generated@@148 $generated@@547) ($generated@@147 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@136 $generated@@547 ($generated@@147 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
 (not ($generated@@0 ($generated@@81 ($generated@@426 $generated@@549) $generated@@548))))
 :pattern ( (let (($generated@@549 (type $generated@@548)))
($generated@@81 ($generated@@426 $generated@@549) $generated@@548)))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@69)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@64) (= (type $generated@@553) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@552 $generated@@553)) $generated@@62) (= ($generated@@550 ($generated@@147 $generated@@552 $generated@@553)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@552 $generated@@553))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@134) (or ($generated@@135 ($generated@@246 $generated@@554)) (and (not (= 2 $generated@@132)) (and ($generated@@136 $generated@@554 $generated@@137) ($generated@@0 ($generated@@246 ($generated@@11 ($generated@@138 ($generated@@246 $generated@@554))))))))) (= ($generated@@133 ($generated@@246 $generated@@554)) ($generated@@359 100 (- ($generated@@225 ($generated@@246 $generated@@554)) 10))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@246 $generated@@554)))
))))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@148) (= ($generated@@533 ($generated@@277 $generated@@555)) ($generated@@534 $generated@@555)))
 :pattern ( ($generated@@533 ($generated@@277 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@134) ($generated@@136 $generated@@556 ($generated@@75 0))) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@556)) $generated@@556) ($generated@@144 ($generated@@375 ($generated@@76 $generated@@134 $generated@@4) $generated@@556) ($generated@@75 0))))
 :pattern ( ($generated@@136 $generated@@556 ($generated@@75 0)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@134) (= (type $generated@@558) $generated@@64)) ($generated@@136 $generated@@557 ($generated@@236 $generated@@558))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@134 $generated@@4) $generated@@557)) $generated@@557) ($generated@@144 ($generated@@375 ($generated@@76 $generated@@134 $generated@@4) $generated@@557) ($generated@@236 $generated@@558))))
 :pattern ( ($generated@@136 $generated@@557 ($generated@@236 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@134) (= (type $generated@@560) $generated@@64)) ($generated@@136 $generated@@559 ($generated@@241 $generated@@560))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@134 $generated@@4) $generated@@559)) $generated@@559) ($generated@@144 ($generated@@375 ($generated@@76 $generated@@134 $generated@@4) $generated@@559) ($generated@@241 $generated@@560))))
 :pattern ( ($generated@@136 $generated@@559 ($generated@@241 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@134) (= (type $generated@@562) $generated@@64)) ($generated@@136 $generated@@561 ($generated@@161 $generated@@562))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@134 $generated@@2) $generated@@561)) $generated@@561) ($generated@@144 ($generated@@375 ($generated@@76 $generated@@134 $generated@@2) $generated@@561) ($generated@@161 $generated@@562))))
 :pattern ( ($generated@@136 $generated@@561 ($generated@@161 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@134) (= (type $generated@@564) $generated@@64)) ($generated@@136 $generated@@563 ($generated@@495 $generated@@564))) (and (= ($generated@@277 ($generated@@375 ($generated@@270 $generated@@134) $generated@@563)) $generated@@563) ($generated@@144 ($generated@@375 ($generated@@270 $generated@@134) $generated@@563) ($generated@@495 $generated@@564))))
 :pattern ( ($generated@@136 $generated@@563 ($generated@@495 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@565 ($generated@@161 $generated@@566) $generated@@567) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@134) (< 0 ($generated ($generated@@81 $generated@@565 $generated@@568)))) ($generated@@251 $generated@@568 $generated@@566 $generated@@567))
 :pattern ( ($generated@@81 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@161 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@148) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@571) (and ($generated@@146 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@64) ($generated@@74 $generated@@569 ($generated@@147 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@74 $generated@@569 ($generated@@147 $generated@@570 $generated@@572) $generated@@571))
))))) ($generated@@251 ($generated@@155 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@251 ($generated@@155 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@148) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@575) (and ($generated@@146 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@64) ($generated@@74 $generated@@573 ($generated@@147 $generated@@576 $generated@@574) $generated@@575))
 :pattern ( ($generated@@74 $generated@@573 ($generated@@147 $generated@@576 $generated@@574) $generated@@575))
))))) ($generated@@251 ($generated@@156 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@251 ($generated@@156 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@134) (= (type $generated@@578) $generated@@134)) (= ($generated@@227 ($generated@@246 $generated@@577) ($generated@@246 $generated@@578)) ($generated@@246 ($generated@@227 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@227 ($generated@@246 $generated@@577) ($generated@@246 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (! (= ($generated@@277 ($generated@@246 $generated@@579)) ($generated@@246 ($generated@@277 $generated@@579)))
 :pattern ( ($generated@@277 ($generated@@246 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@271 (type $generated@@580))))
 (=> (and (= (type $generated@@580) ($generated@@270 $generated@@581)) (= ($generated@@269 $generated@@580) 0)) (= $generated@@580 ($generated@@268 $generated@@581))))
 :pattern ( ($generated@@269 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@583)))
 (=> (and (and (= (type $generated@@582) ($generated@@76 $generated@@585 $generated@@2)) (= (type $generated@@584) $generated@@2)) (<= 0 ($generated $generated@@584))) (= ($generated@@290 ($generated@@82 $generated@@582 $generated@@583 $generated@@584)) (+ (- ($generated@@290 $generated@@582) ($generated ($generated@@81 $generated@@582 $generated@@583))) ($generated $generated@@584)))))
 :pattern ( ($generated@@290 ($generated@@82 $generated@@582 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@587) $generated@@2)) ($generated@@74 $generated@@587 $generated@@46 $generated@@586))
 :pattern ( ($generated@@74 $generated@@587 $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@3)) ($generated@@74 $generated@@589 $generated@@47 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@47 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@4)) ($generated@@74 $generated@@591 $generated@@44 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@44 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@450)) ($generated@@74 $generated@@593 $generated@@45 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@45 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@134)) ($generated@@74 $generated@@595 $generated@@48 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@48 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@270 $generated@@134)) (= (type $generated@@597) $generated@@64)) (= ($generated@@144 $generated@@596 ($generated@@495 $generated@@597)) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@269 $generated@@596))) ($generated@@136 ($generated@@496 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@496 $generated@@596 $generated@@598))
))))
 :pattern ( ($generated@@144 $generated@@596 ($generated@@495 $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 Int) ) (!  (=> (= (type $generated@@600) ($generated@@270 $generated@@134)) (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@269 $generated@@600))) (< ($generated@@534 ($generated@@375 $generated@@148 ($generated@@496 $generated@@600 $generated@@601))) ($generated@@599 $generated@@600))))
 :pattern ( ($generated@@534 ($generated@@375 $generated@@148 ($generated@@496 $generated@@600 $generated@@601))))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@298 $generated@@134 $generated@@134)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) ($generated@@144 $generated@@602 ($generated@@403 $generated@@603 $generated@@604))) (and (and ($generated@@144 ($generated@@296 $generated@@602) ($generated@@236 $generated@@603)) ($generated@@144 ($generated@@340 $generated@@602) ($generated@@236 $generated@@604))) ($generated@@144 ($generated@@374 $generated@@602) ($generated@@236 ($generated@@147 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@144 $generated@@602 ($generated@@403 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@316 $generated@@134 $generated@@134)) (= (type $generated@@606) $generated@@64)) (= (type $generated@@607) $generated@@64)) ($generated@@144 $generated@@605 ($generated@@411 $generated@@606 $generated@@607))) (and (and ($generated@@144 ($generated@@314 $generated@@605) ($generated@@241 $generated@@606)) ($generated@@144 ($generated@@351 $generated@@605) ($generated@@241 $generated@@607))) ($generated@@144 ($generated@@385 $generated@@605) ($generated@@241 ($generated@@147 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@144 $generated@@605 ($generated@@411 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@2) ($generated@@144 $generated@@608 $generated@@46))
 :pattern ( ($generated@@144 $generated@@608 $generated@@46))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@3) ($generated@@144 $generated@@609 $generated@@47))
 :pattern ( ($generated@@144 $generated@@609 $generated@@47))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@4) ($generated@@144 $generated@@610 $generated@@44))
 :pattern ( ($generated@@144 $generated@@610 $generated@@44))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@450) ($generated@@144 $generated@@611 $generated@@45))
 :pattern ( ($generated@@144 $generated@@611 $generated@@45))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@134) ($generated@@144 $generated@@612 $generated@@48))
 :pattern ( ($generated@@144 $generated@@612 $generated@@48))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@134) (or ($generated@@257 $generated@@613) (and (not (= 1 $generated@@132)) ($generated@@136 $generated@@613 $generated@@137)))) true)
 :pattern ( ($generated@@138 $generated@@613))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 (T@U) Bool)
(declare-fun $generated@@622 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@614) $generated@@134) (= (type $generated@@615) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@616) ($generated@@168 $generated@@77 $generated@@4))) (= (type $generated@@617) $generated@@77)) (= (type $generated@@618) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@619) $generated@@134)) (= (type $generated@@620) $generated@@134)) (= (type $generated@@622) $generated@@134)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@623  (=> (not ($generated@@138 $generated@@614)) (=> (and ($generated@@251 $generated@@614 $generated@@137 $generated@@615) (= (ControlFlow 0 4) (- 0 3))) (not ($generated@@138 $generated@@614))))))
(let (($generated@@624  (=> ($generated@@138 $generated@@614) (=> (and (and ($generated@@251 $generated@@614 $generated@@137 $generated@@615) (= (ControlFlow 0 2) (- 0 1))) ($generated@@257 $generated@@614)) (or ($generated@@138 $generated@@614) (< ($generated@@225 $generated@@614) 10))))))
(let (($generated@@625  (=> (= $generated@@616 ($generated@@167 $generated@@617 $generated@@618 $generated@@60 false)) (=> (and ($generated@@136 $generated@@619 $generated@@137) ($generated@@251 $generated@@619 $generated@@137 $generated@@618)) (=> (and (and ($generated@@136 $generated@@620 $generated@@137) ($generated@@251 $generated@@620 $generated@@137 $generated@@618)) (and ($generated@@250 $generated@@615) ($generated@@621 $generated@@615))) (=> (and (and (and ($generated@@136 $generated@@614 $generated@@137) ($generated@@251 $generated@@614 $generated@@137 $generated@@615)) (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@77) (=> (and (not (= $generated@@626 $generated@@617)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@618 $generated@@626) $generated@@60))) (= ($generated@@81 $generated@@615 $generated@@626) ($generated@@81 $generated@@618 $generated@@626))))
 :pattern ( ($generated@@81 $generated@@615 $generated@@626))
))) (and (and ($generated@@140 $generated@@618 $generated@@615) ($generated@@251 $generated@@614 $generated@@137 $generated@@615)) (and ($generated@@257 $generated@@614) ($generated@@257 $generated@@614)))) (and (=> (= (ControlFlow 0 5) 2) $generated@@624) (=> (= (ControlFlow 0 5) 4) $generated@@623))))))))
(let (($generated@@627  (=> (and ($generated@@250 $generated@@618) ($generated@@621 $generated@@618)) (=> (and (and (and ($generated@@136 $generated@@622 $generated@@137) ($generated@@251 $generated@@622 $generated@@137 $generated@@618)) true) (and (= 3 $generated@@132) (= (ControlFlow 0 6) 5))) $generated@@625))))
$generated@@627)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
