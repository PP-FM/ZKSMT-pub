(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U Int) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@U) Int)
(declare-fun $generated@@141 (T@U) Int)
(declare-fun $generated@@142 (T@T T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (Int) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@289 (T@U T@U) Bool)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@390 (T@U) Bool)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@449 (T@T) T@U)
(declare-fun $generated@@473 () T@T)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@145 T@T) ) (= ($generated@@1 ($generated@@138 $generated@@145)) 14)) (forall (($generated@@146 T@T) ) (! (= ($generated@@144 ($generated@@138 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@138 $generated@@146))
))) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@147 T@U) ($generated@@148 Int) ) (! (let (($generated@@149 ($generated@@144 (type $generated@@147))))
(= (type ($generated@@136 $generated@@147 $generated@@148)) $generated@@149))
 :pattern ( ($generated@@136 $generated@@147 $generated@@148))
))) (= ($generated@@1 $generated@@143) 16)) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@137 $generated@@150)) $generated@@143)
 :pattern ( ($generated@@137 $generated@@150))
))) (forall (($generated@@151 T@T) ($generated@@152 T@U) ) (! (= (type ($generated@@142 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@142 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 Int) ) (!  (=> (= (type $generated@@153) ($generated@@138 $generated@@139)) (=> (and (<= 0 $generated@@154) (< $generated@@154 ($generated@@140 $generated@@153))) (< ($generated@@141 ($generated@@142 $generated@@143 ($generated@@136 $generated@@153 $generated@@154))) ($generated@@141 ($generated@@137 $generated@@153)))))
 :pattern ( ($generated@@136 $generated@@153 $generated@@154) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@155 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@155 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@159 $generated@@160)) $generated@@68)
 :pattern ( ($generated@@158 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@68) (= (type $generated@@162) $generated@@68)) (= (type $generated@@163) $generated@@143)) ($generated@@155 $generated@@163 ($generated@@158 $generated@@161 $generated@@162))) ($generated@@157 $generated@@163))
 :pattern ( ($generated@@157 $generated@@163) ($generated@@155 $generated@@163 ($generated@@158 $generated@@161 $generated@@162)))
)))
(assert  (and (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@139)
 :pattern ( ($generated@@165 $generated@@167))
)) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@139)
 :pattern ( ($generated@@166 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@143) (= (type $generated@@170) $generated@@143)) true) (= ($generated@@164 $generated@@169 $generated@@170)  (and (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)) (= ($generated@@166 $generated@@169) ($generated@@166 $generated@@170)))))
 :pattern ( ($generated@@164 $generated@@169 $generated@@170))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@72)
 :pattern ( ($generated@@171 $generated@@173))
)) (= (type $generated@@172) $generated@@143)))
(assert (= ($generated@@171 $generated@@172) $generated@@63))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@68)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@80 $generated@@139 $generated@@2)) (= (type $generated@@178) $generated@@68)) ($generated@@155 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@155 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (= ($generated@@1 ($generated@@181 $generated@@185 $generated@@186)) 17)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@182 ($generated@@181 $generated@@187 $generated@@188)) $generated@@187)
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@183 ($generated@@181 $generated@@189 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@181 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@183 (type $generated@@191))))
(= (type ($generated@@179 $generated@@191 $generated@@192 $generated@@193)) $generated@@194))
 :pattern ( ($generated@@179 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(let (($generated@@200 (type $generated@@196)))
(= (type ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198)) ($generated@@181 $generated@@200 $generated@@199))))
 :pattern ( ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@183 (type $generated@@201))))
 (=> (= (type $generated@@204) $generated@@205) (= ($generated@@179 ($generated@@184 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@202 $generated@@203) $generated@@204)))
 :weight 0
))) (and (and (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@179 ($generated@@184 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@179 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@179 ($generated@@184 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@179 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or true (= ($generated@@179 ($generated@@184 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@179 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@181 $generated@@81 $generated@@4))
 :pattern ( ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@71 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@81) (= (type $generated@@229) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@230) ($generated@@70 $generated@@4))) (= (type $generated@@232) $generated@@81)) (= (type $generated@@233) ($generated@@70 $generated@@234))) (= ($generated@@0 ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@143)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@68) (= (type $generated@@240) $generated@@68)) (= (type $generated@@241) $generated@@139)) (= (type $generated@@242) $generated@@139)) (= ($generated@@155 ($generated@@235 $generated@@241 $generated@@242) ($generated@@158 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@155 ($generated@@235 $generated@@241 $generated@@242) ($generated@@158 $generated@@239 $generated@@240)))
)))
(assert (= (type $generated@@243) $generated@@68))
(assert ($generated@@155 $generated@@172 $generated@@243))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@244 $generated@@245)) ($generated@@78 $generated@@172 $generated@@243 $generated@@245))
 :pattern ( ($generated@@78 $generated@@172 $generated@@243 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@143) (= (type $generated@@247) $generated@@143)) (= ($generated@@164 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@164 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@143) (= (type $generated@@250) $generated@@143)) (= ($generated@@248 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@68)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@80 $generated@@139 $generated@@4)) (= (type $generated@@254) $generated@@68)) (= ($generated@@155 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@139) ($generated@@0 ($generated@@85 $generated@@253 $generated@@255))) ($generated@@236 $generated@@255 $generated@@254))
 :pattern ( ($generated@@85 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@155 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@139 $generated@@4)) (= (type $generated@@259) $generated@@68)) (= ($generated@@155 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@139) ($generated@@0 ($generated@@85 $generated@@258 $generated@@260))) ($generated@@236 $generated@@260 $generated@@259))
 :pattern ( ($generated@@85 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@155 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@261 $generated@@262) $generated@@262)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@263 $generated@@266) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@267 $generated@@269 $generated@@270)) ($generated@@138 $generated@@271)))
 :pattern ( ($generated@@267 $generated@@269 $generated@@270))
)) (forall (($generated@@272 T@U) ) (! (= (type ($generated@@268 $generated@@272)) $generated@@68)
 :pattern ( ($generated@@268 $generated@@272))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (= (type $generated@@273) ($generated@@138 $generated@@139)) (= (type $generated@@274) $generated@@139)) (= (type $generated@@275) $generated@@68)) (and ($generated@@155 $generated@@273 ($generated@@268 $generated@@275)) ($generated@@236 $generated@@274 $generated@@275))) ($generated@@155 ($generated@@267 $generated@@273 $generated@@274) ($generated@@268 $generated@@275)))
 :pattern ( ($generated@@155 ($generated@@267 $generated@@273 $generated@@274) ($generated@@268 $generated@@275)))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@143) (= (type $generated@@278) $generated@@143)) (and ($generated@@276 $generated@@277) ($generated@@276 $generated@@278))) (= ($generated@@248 $generated@@277 $generated@@278) true))
 :pattern ( ($generated@@248 $generated@@277 $generated@@278) ($generated@@276 $generated@@277))
 :pattern ( ($generated@@248 $generated@@277 $generated@@278) ($generated@@276 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@68) (= (type $generated@@281) $generated@@68)) (= (type $generated@@282) $generated@@139)) (= (type $generated@@283) $generated@@139)) (= (type $generated@@284) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@244 $generated@@284)) (= ($generated@@78 ($generated@@235 $generated@@282 $generated@@283) ($generated@@158 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@78 ($generated@@235 $generated@@282 $generated@@283) ($generated@@158 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@143) (= ($generated@@157 $generated@@285) (= ($generated@@171 $generated@@285) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@143) (= ($generated@@276 $generated@@286) (= ($generated@@171 $generated@@286) $generated@@63)))
 :pattern ( ($generated@@276 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@143) (= ($generated@@287 $generated@@288) (= ($generated@@171 $generated@@288) $generated@@65)))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@144 (type $generated@@290))))
 (=> (and (= (type $generated@@290) ($generated@@138 $generated@@292)) (= (type $generated@@291) ($generated@@138 $generated@@292))) (= ($generated@@289 $generated@@290 $generated@@291)  (and (= ($generated@@140 $generated@@290) ($generated@@140 $generated@@291)) (forall (($generated@@293 Int) ) (!  (=> (and (<= 0 $generated@@293) (< $generated@@293 ($generated@@140 $generated@@290))) (= ($generated@@136 $generated@@290 $generated@@293) ($generated@@136 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@136 $generated@@290 $generated@@293))
 :pattern ( ($generated@@136 $generated@@291 $generated@@293))
))))))
 :pattern ( ($generated@@289 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@143) ($generated@@157 $generated@@294)) (exists (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (and (and (= (type $generated@@295) $generated@@139) (= (type $generated@@296) $generated@@139)) (= $generated@@294 ($generated@@235 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@295)
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@157 $generated@@294))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@138 $generated@@298))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@T) ) (! (= ($generated@@140 ($generated@@297 $generated@@299)) 0)
 :pattern ( ($generated@@297 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@143) ($generated@@276 $generated@@300)) (= $generated@@300 $generated@@172))
 :pattern ( ($generated@@276 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@143) ($generated@@287 $generated@@301)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) ($generated@@138 $generated@@139)) (= $generated@@301 ($generated@@137 $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@287 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (! (let (($generated@@305 (type $generated@@304)))
 (=> (= (type $generated@@303) ($generated@@138 $generated@@305)) (= ($generated@@140 ($generated@@267 $generated@@303 $generated@@304)) (+ 1 ($generated@@140 $generated@@303)))))
 :pattern ( ($generated@@267 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@139)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@68) (= (type $generated@@310) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@279 ($generated@@306 $generated@@308) $generated@@309 $generated@@310) ($generated@@78 $generated@@308 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@279 ($generated@@306 $generated@@308) $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@80 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@83 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@80 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@85 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@80 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@85 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@85 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@80 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@85 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@85 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@83 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@80 $generated@@354 $generated@@2)) (= ($generated@@175 $generated@@353) (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@354) (and (<= 0 ($generated ($generated@@85 $generated@@353 $generated@@355))) (<= ($generated ($generated@@85 $generated@@353 $generated@@355)) ($generated@@311 $generated@@353))))
 :pattern ( ($generated@@85 $generated@@353 $generated@@355))
)))))
 :pattern ( ($generated@@175 $generated@@353))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@139) ($generated@@236 $generated@@356 $generated@@243)) (and (= ($generated@@306 ($generated@@142 $generated@@143 $generated@@356)) $generated@@356) ($generated@@155 ($generated@@142 $generated@@143 $generated@@356) $generated@@243)))
 :pattern ( ($generated@@236 $generated@@356 $generated@@243))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 Int) ($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
 (=> (= (type $generated@@357) ($generated@@138 $generated@@360)) (and (=> (= $generated@@358 ($generated@@140 $generated@@357)) (= ($generated@@136 ($generated@@267 $generated@@357 $generated@@359) $generated@@358) $generated@@359)) (=> (not (= $generated@@358 ($generated@@140 $generated@@357))) (= ($generated@@136 ($generated@@267 $generated@@357 $generated@@359) $generated@@358) ($generated@@136 $generated@@357 $generated@@358))))))
 :pattern ( ($generated@@136 ($generated@@267 $generated@@357 $generated@@359) $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) ($generated@@138 $generated@@139))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@363) $generated@@143) (= (type $generated@@364) $generated@@143)) (and ($generated@@287 $generated@@363) ($generated@@287 $generated@@364))) (= ($generated@@248 $generated@@363 $generated@@364) ($generated@@289 ($generated@@361 $generated@@363) ($generated@@361 $generated@@364))))
 :pattern ( ($generated@@248 $generated@@363 $generated@@364) ($generated@@287 $generated@@363))
 :pattern ( ($generated@@248 $generated@@363 $generated@@364) ($generated@@287 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@321 (type $generated@@365))))
(let (($generated@@367 ($generated@@320 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@319 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@318 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@85 ($generated@@317 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@317 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@321 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@80 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@321 (type $generated@@372))))
(let (($generated@@374 ($generated@@320 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@319 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@318 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@85 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@339 (type $generated@@376))))
(let (($generated@@378 ($generated@@338 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@337 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@336 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@335 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@339 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@80 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@339 (type $generated@@383))))
(let (($generated@@385 ($generated@@338 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@337 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@336 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@85 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@80 $generated@@139 $generated@@2)) (= (type $generated@@388) $generated@@68)) (= ($generated@@155 $generated@@387 ($generated@@174 $generated@@388)) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@139) (< 0 ($generated ($generated@@85 $generated@@387 $generated@@389)))) ($generated@@236 $generated@@389 $generated@@388))
 :pattern ( ($generated@@85 $generated@@387 $generated@@389))
))))
 :pattern ( ($generated@@155 $generated@@387 ($generated@@174 $generated@@388)))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@143) ($generated@@390 $generated@@391)) (or ($generated@@276 $generated@@391) ($generated@@287 $generated@@391)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (!  (=> (= (type $generated@@392) ($generated@@138 $generated@@139)) (= ($generated@@155 ($generated@@137 $generated@@392) $generated@@243) ($generated@@155 $generated@@392 ($generated@@268 $generated@@243))))
 :pattern ( ($generated@@155 ($generated@@137 $generated@@392) $generated@@243))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@80 $generated@@139 $generated@@4)) (= (type $generated@@394) $generated@@68)) (= (type $generated@@395) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@393 ($generated@@251 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@139) ($generated@@0 ($generated@@85 $generated@@393 $generated@@396))) ($generated@@279 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@85 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@78 $generated@@393 ($generated@@251 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@80 $generated@@139 $generated@@4)) (= (type $generated@@398) $generated@@68)) (= (type $generated@@399) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@397 ($generated@@256 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@139) ($generated@@0 ($generated@@85 $generated@@397 $generated@@400))) ($generated@@279 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@85 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@78 $generated@@397 ($generated@@256 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@85 ($generated@@312 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@85 ($generated@@312 $generated@@402) $generated@@401)))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@80 $generated@@139 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@321 (type $generated@@406))))
(let (($generated@@408 ($generated@@320 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@80 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@319 $generated@@139 $generated@@139)) (= (type $generated@@410) $generated@@139)) (= ($generated@@0 ($generated@@85 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@85 ($generated@@317 $generated@@409) ($generated@@165 ($generated@@142 $generated@@143 $generated@@410)))) (= ($generated@@85 ($generated@@404 $generated@@409) ($generated@@165 ($generated@@142 $generated@@143 $generated@@410))) ($generated@@166 ($generated@@142 $generated@@143 $generated@@410))))))
 :pattern ( ($generated@@85 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) ($generated@@80 $generated@@139 $generated@@4))
 :pattern ( ($generated@@411 $generated@@413))
)) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@339 (type $generated@@414))))
(let (($generated@@416 ($generated@@338 (type $generated@@414))))
(= (type ($generated@@412 $generated@@414)) ($generated@@80 $generated@@416 $generated@@415))))
 :pattern ( ($generated@@412 $generated@@414))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@337 $generated@@139 $generated@@139)) (= (type $generated@@418) $generated@@139)) (= ($generated@@0 ($generated@@85 ($generated@@411 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@85 ($generated@@335 $generated@@417) ($generated@@165 ($generated@@142 $generated@@143 $generated@@418)))) (= ($generated@@85 ($generated@@412 $generated@@417) ($generated@@165 ($generated@@142 $generated@@143 $generated@@418))) ($generated@@166 ($generated@@142 $generated@@143 $generated@@418))))))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@320 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@319 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@85 ($generated@@369 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@85 ($generated@@317 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@85 ($generated@@404 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@419) $generated@@423))
 :pattern ( ($generated@@85 ($generated@@404 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@338 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@337 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@85 ($generated@@380 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@85 ($generated@@335 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@85 ($generated@@412 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@424) $generated@@428))
 :pattern ( ($generated@@85 ($generated@@412 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@85 ($generated@@380 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@68)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@319 $generated@@139 $generated@@139)) (= (type $generated@@433) $generated@@68)) (= (type $generated@@434) $generated@@68)) (= (type $generated@@435) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@139) ($generated@@0 ($generated@@85 ($generated@@317 $generated@@432) $generated@@436))) (and ($generated@@279 ($generated@@85 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@279 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@85 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@78 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@68)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@337 $generated@@139 $generated@@139)) (= (type $generated@@441) $generated@@68)) (= (type $generated@@442) $generated@@68)) (= (type $generated@@443) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@139) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@440) $generated@@444))) (and ($generated@@279 ($generated@@85 ($generated@@412 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@279 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@85 ($generated@@412 $generated@@440) $generated@@444))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@78 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@144 (type $generated@@445))))
 (=> (and (and (= (type $generated@@445) ($generated@@138 $generated@@447)) (= (type $generated@@446) ($generated@@138 $generated@@447))) ($generated@@289 $generated@@445 $generated@@446)) (= $generated@@445 $generated@@446)))
 :pattern ( ($generated@@289 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@143) ($generated@@155 $generated@@448 $generated@@243)) (or ($generated@@276 $generated@@448) ($generated@@287 $generated@@448)))
 :pattern ( ($generated@@287 $generated@@448) ($generated@@155 $generated@@448 $generated@@243))
 :pattern ( ($generated@@276 $generated@@448) ($generated@@155 $generated@@448 $generated@@243))
)))
(assert (forall (($generated@@450 T@T) ) (! (= (type ($generated@@449 $generated@@450)) ($generated@@80 $generated@@450 $generated@@4))
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@339 (type $generated@@451))))
(let (($generated@@453 ($generated@@338 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@337 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@336 $generated@@453 $generated@@452)) (= ($generated@@335 $generated@@451) ($generated@@449 $generated@@453))))))
 :pattern ( ($generated@@335 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@339 (type $generated@@454))))
(let (($generated@@456 ($generated@@338 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@337 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@336 $generated@@456 $generated@@455)) (= ($generated@@380 $generated@@454) ($generated@@449 $generated@@455))))))
 :pattern ( ($generated@@380 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@339 (type $generated@@457))))
(let (($generated@@459 ($generated@@338 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@337 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@336 $generated@@459 $generated@@458)) (= ($generated@@411 $generated@@457) ($generated@@449 $generated@@139))))))
 :pattern ( ($generated@@411 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@321 (type $generated@@460))))
(let (($generated@@462 ($generated@@320 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@319 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@318 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@139) (= (type $generated@@464) $generated@@139)) ($generated@@0 ($generated@@85 ($generated@@403 $generated@@460) ($generated@@306 ($generated@@235 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@403 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@339 (type $generated@@465))))
(let (($generated@@467 ($generated@@338 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@337 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@336 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@139) (= (type $generated@@469) $generated@@139)) ($generated@@0 ($generated@@85 ($generated@@411 $generated@@465) ($generated@@306 ($generated@@235 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@411 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@139) ($generated@@236 $generated@@470 $generated@@46)) (and (= ($generated@@306 ($generated@@142 $generated@@2 $generated@@470)) $generated@@470) ($generated@@155 ($generated@@142 $generated@@2 $generated@@470) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@470 $generated@@46))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@139) ($generated@@236 $generated@@471 $generated@@47)) (and (= ($generated@@306 ($generated@@142 $generated@@3 $generated@@471)) $generated@@471) ($generated@@155 ($generated@@142 $generated@@3 $generated@@471) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@471 $generated@@47))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@139) ($generated@@236 $generated@@472 $generated@@44)) (and (= ($generated@@306 ($generated@@142 $generated@@4 $generated@@472)) $generated@@472) ($generated@@155 ($generated@@142 $generated@@4 $generated@@472) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@472 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@473) 20))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@139) ($generated@@236 $generated@@474 $generated@@45)) (and (= ($generated@@306 ($generated@@142 $generated@@473 $generated@@474)) $generated@@474) ($generated@@155 ($generated@@142 $generated@@473 $generated@@474) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@474 $generated@@45))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@68) (= ($generated@@236 ($generated@@306 $generated@@475) $generated@@476) ($generated@@155 $generated@@475 $generated@@476)))
 :pattern ( ($generated@@236 ($generated@@306 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@83 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@80 $generated@@478 $generated@@2)) (<= 0 ($generated@@311 $generated@@477))))
 :pattern ( ($generated@@311 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@144 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@138 $generated@@480)) (<= 0 ($generated@@140 $generated@@479))))
 :pattern ( ($generated@@140 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@138 $generated@@139)) (= (type $generated@@482) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@244 $generated@@482)) (= ($generated@@78 ($generated@@137 $generated@@481) $generated@@243 $generated@@482) ($generated@@78 $generated@@481 ($generated@@268 $generated@@243) $generated@@482)))
 :pattern ( ($generated@@78 ($generated@@137 $generated@@481) $generated@@243 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@68)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@483 ($generated@@429 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@429 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@487 ($generated@@429 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@429 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@76 ($generated@@429 $generated@@491 $generated@@492)) $generated@@58))
 :pattern ( ($generated@@429 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@493 ($generated@@437 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@437 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@68)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@68) (= (type $generated@@500) $generated@@68)) (= ($generated@@497 ($generated@@437 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@437 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@76 ($generated@@437 $generated@@501 $generated@@502)) $generated@@59))
 :pattern ( ($generated@@437 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@139) (= (type $generated@@504) $generated@@139)) (= ($generated@@171 ($generated@@235 $generated@@503 $generated@@504)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@158 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@158 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@158 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@158 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@139) (= (type $generated@@514) $generated@@139)) (= ($generated@@165 ($generated@@235 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@235 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@139) (= (type $generated@@516) $generated@@139)) (= ($generated@@166 ($generated@@235 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@235 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@138 $generated@@139)) (= (type $generated@@518) $generated@@68)) (= (type $generated@@519) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@517 ($generated@@268 $generated@@518) $generated@@519) (forall (($generated@@520 Int) ) (!  (=> (and (<= 0 $generated@@520) (< $generated@@520 ($generated@@140 $generated@@517))) ($generated@@279 ($generated@@136 $generated@@517 $generated@@520) $generated@@518 $generated@@519))
 :pattern ( ($generated@@136 $generated@@517 $generated@@520))
))))
 :pattern ( ($generated@@78 $generated@@517 ($generated@@268 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@522 Int) ) (! (= ($generated@@521 ($generated@@79 $generated@@522)) $generated@@522)
 :pattern ( ($generated@@79 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@523 ($generated@@251 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@251 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@76 ($generated@@251 $generated@@526)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@527 ($generated@@256 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@256 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@76 ($generated@@256 $generated@@530)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@531 ($generated@@174 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@174 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@68) (= ($generated@@76 ($generated@@174 $generated@@534)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@535 ($generated@@268 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@268 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@68) (= ($generated@@76 ($generated@@268 $generated@@538)) $generated@@57))
 :pattern ( ($generated@@268 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) ($generated@@138 $generated@@139)) (= ($generated@@171 ($generated@@137 $generated@@539)) $generated@@65))
 :pattern ( ($generated@@137 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) ($generated@@138 $generated@@139)) (= ($generated@@361 ($generated@@137 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@137 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
(= ($generated@@142 $generated@@542 ($generated@@306 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@306 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@319 $generated@@139 $generated@@139)) (= (type $generated@@544) $generated@@68)) (= (type $generated@@545) $generated@@68)) (= ($generated@@155 $generated@@543 ($generated@@429 $generated@@544 $generated@@545)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@139) ($generated@@0 ($generated@@85 ($generated@@317 $generated@@543) $generated@@546))) (and ($generated@@236 ($generated@@85 ($generated@@404 $generated@@543) $generated@@546) $generated@@545) ($generated@@236 $generated@@546 $generated@@544)))
 :pattern ( ($generated@@85 ($generated@@404 $generated@@543) $generated@@546))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@543) $generated@@546))
))))
 :pattern ( ($generated@@155 $generated@@543 ($generated@@429 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@337 $generated@@139 $generated@@139)) (= (type $generated@@548) $generated@@68)) (= (type $generated@@549) $generated@@68)) (= ($generated@@155 $generated@@547 ($generated@@437 $generated@@548 $generated@@549)) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@139) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@547) $generated@@550))) (and ($generated@@236 ($generated@@85 ($generated@@412 $generated@@547) $generated@@550) $generated@@549) ($generated@@236 $generated@@550 $generated@@548)))
 :pattern ( ($generated@@85 ($generated@@412 $generated@@547) $generated@@550))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@547) $generated@@550))
))))
 :pattern ( ($generated@@155 $generated@@547 ($generated@@437 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@139) (= (type $generated@@553) $generated@@139)) (< ($generated@@551 $generated@@552) ($generated@@141 ($generated@@235 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@235 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@139) (= (type $generated@@555) $generated@@139)) (< ($generated@@551 $generated@@555) ($generated@@141 ($generated@@235 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@235 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@139) (= (type $generated@@557) $generated@@68)) (= (type $generated@@558) $generated@@68)) ($generated@@236 $generated@@556 ($generated@@429 $generated@@557 $generated@@558))) (and (= ($generated@@306 ($generated@@142 ($generated@@319 $generated@@139 $generated@@139) $generated@@556)) $generated@@556) ($generated@@155 ($generated@@142 ($generated@@319 $generated@@139 $generated@@139) $generated@@556) ($generated@@429 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@236 $generated@@556 ($generated@@429 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@139) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@68)) ($generated@@236 $generated@@559 ($generated@@437 $generated@@560 $generated@@561))) (and (= ($generated@@306 ($generated@@142 ($generated@@337 $generated@@139 $generated@@139) $generated@@559)) $generated@@559) ($generated@@155 ($generated@@142 ($generated@@337 $generated@@139 $generated@@139) $generated@@559) ($generated@@437 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@236 $generated@@559 ($generated@@437 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@68) (= (type $generated@@563) $generated@@68)) (= (type $generated@@564) $generated@@139)) ($generated@@236 $generated@@564 ($generated@@158 $generated@@562 $generated@@563))) (and (= ($generated@@306 ($generated@@142 $generated@@143 $generated@@564)) $generated@@564) ($generated@@155 ($generated@@142 $generated@@143 $generated@@564) ($generated@@158 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@236 $generated@@564 ($generated@@158 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) ($generated@@138 $generated@@139)) (< ($generated@@565 $generated@@566) ($generated@@141 ($generated@@137 $generated@@566))))
 :pattern ( ($generated@@137 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@85 ($generated@@449 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@85 ($generated@@449 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@73)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@68) (= (type $generated@@572) $generated@@68)) (and (= ($generated@@76 ($generated@@158 $generated@@571 $generated@@572)) $generated@@62) (= ($generated@@569 ($generated@@158 $generated@@571 $generated@@572)) $generated@@66)))
 :pattern ( ($generated@@158 $generated@@571 $generated@@572))
)))
(assert  (and (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@144 (type $generated@@575))))
(= (type ($generated@@573 $generated@@575)) ($generated@@138 $generated@@576)))
 :pattern ( ($generated@@573 $generated@@575))
)) (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@144 (type $generated@@577))))
(= (type ($generated@@574 $generated@@577)) $generated@@578))
 :pattern ( ($generated@@574 $generated@@577))
))))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
 (=> (= (type $generated@@579) ($generated@@138 $generated@@581)) (and (= ($generated@@573 ($generated@@267 $generated@@579 $generated@@580)) $generated@@579) (= ($generated@@574 ($generated@@267 $generated@@579 $generated@@580)) $generated@@580))))
 :pattern ( ($generated@@267 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@143) (= ($generated@@551 ($generated@@306 $generated@@582)) ($generated@@141 $generated@@582)))
 :pattern ( ($generated@@551 ($generated@@306 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@139) ($generated@@236 $generated@@583 ($generated@@79 0))) (and (= ($generated@@306 ($generated@@142 $generated@@2 $generated@@583)) $generated@@583) ($generated@@155 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@583) ($generated@@79 0))))
 :pattern ( ($generated@@236 $generated@@583 ($generated@@79 0)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@139) (= (type $generated@@585) $generated@@68)) ($generated@@236 $generated@@584 ($generated@@251 $generated@@585))) (and (= ($generated@@306 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@584)) $generated@@584) ($generated@@155 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@584) ($generated@@251 $generated@@585))))
 :pattern ( ($generated@@236 $generated@@584 ($generated@@251 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@139) (= (type $generated@@587) $generated@@68)) ($generated@@236 $generated@@586 ($generated@@256 $generated@@587))) (and (= ($generated@@306 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@586)) $generated@@586) ($generated@@155 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@586) ($generated@@256 $generated@@587))))
 :pattern ( ($generated@@236 $generated@@586 ($generated@@256 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@139) (= (type $generated@@589) $generated@@68)) ($generated@@236 $generated@@588 ($generated@@174 $generated@@589))) (and (= ($generated@@306 ($generated@@142 ($generated@@80 $generated@@139 $generated@@2) $generated@@588)) $generated@@588) ($generated@@155 ($generated@@142 ($generated@@80 $generated@@139 $generated@@2) $generated@@588) ($generated@@174 $generated@@589))))
 :pattern ( ($generated@@236 $generated@@588 ($generated@@174 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@139) (= (type $generated@@591) $generated@@68)) ($generated@@236 $generated@@590 ($generated@@268 $generated@@591))) (and (= ($generated@@306 ($generated@@142 ($generated@@138 $generated@@139) $generated@@590)) $generated@@590) ($generated@@155 ($generated@@142 ($generated@@138 $generated@@139) $generated@@590) ($generated@@268 $generated@@591))))
 :pattern ( ($generated@@236 $generated@@590 ($generated@@268 $generated@@591)))
)))
(assert (= ($generated@@76 $generated@@243) $generated@@64))
(assert (= ($generated@@569 $generated@@243) $generated@@67))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@80 $generated@@139 $generated@@2)) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@592 ($generated@@174 $generated@@593) $generated@@594) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@139) (< 0 ($generated ($generated@@85 $generated@@592 $generated@@595)))) ($generated@@279 $generated@@595 $generated@@593 $generated@@594))
 :pattern ( ($generated@@85 $generated@@592 $generated@@595))
))))
 :pattern ( ($generated@@78 $generated@@592 ($generated@@174 $generated@@593) $generated@@594))
)))
(assert (= $generated@@172 ($generated@@263 $generated@@172)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@143) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@598) (and ($generated@@157 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@68) ($generated@@78 $generated@@596 ($generated@@158 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@78 $generated@@596 ($generated@@158 $generated@@597 $generated@@599) $generated@@598))
))))) ($generated@@279 ($generated@@165 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@279 ($generated@@165 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@143) (= (type $generated@@601) $generated@@68)) (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@602) (and ($generated@@157 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@68) ($generated@@78 $generated@@600 ($generated@@158 $generated@@603 $generated@@601) $generated@@602))
 :pattern ( ($generated@@78 $generated@@600 ($generated@@158 $generated@@603 $generated@@601) $generated@@602))
))))) ($generated@@279 ($generated@@166 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@279 ($generated@@166 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@139) (= (type $generated@@605) $generated@@139)) (= ($generated@@235 ($generated@@263 $generated@@604) ($generated@@263 $generated@@605)) ($generated@@263 ($generated@@235 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@235 ($generated@@263 $generated@@604) ($generated@@263 $generated@@605)))
)))
(assert (forall (($generated@@606 Int) ) (! (= ($generated@@306 ($generated@@8 ($generated@@261 $generated@@606))) ($generated@@263 ($generated@@306 ($generated@@8 $generated@@606))))
 :pattern ( ($generated@@306 ($generated@@8 ($generated@@261 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) ($generated@@138 $generated@@139)) (= ($generated@@137 ($generated@@263 $generated@@607)) ($generated@@263 ($generated@@137 $generated@@607))))
 :pattern ( ($generated@@137 ($generated@@263 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (= ($generated@@306 ($generated@@263 $generated@@608)) ($generated@@263 ($generated@@306 $generated@@608)))
 :pattern ( ($generated@@306 ($generated@@263 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@144 (type $generated@@609))))
 (=> (and (= (type $generated@@609) ($generated@@138 $generated@@610)) (= ($generated@@140 $generated@@609) 0)) (= $generated@@609 ($generated@@297 $generated@@610))))
 :pattern ( ($generated@@140 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@80 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@311 ($generated@@86 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@311 $generated@@611) ($generated ($generated@@85 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@311 ($generated@@86 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@143) (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@616) (and ($generated@@287 $generated@@615) ($generated@@78 $generated@@615 $generated@@243 $generated@@616)))) ($generated@@78 ($generated@@361 $generated@@615) ($generated@@268 $generated@@243) $generated@@616))
 :pattern ( ($generated@@78 ($generated@@361 $generated@@615) ($generated@@268 $generated@@243) $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@618) $generated@@2)) ($generated@@78 $generated@@618 $generated@@46 $generated@@617))
 :pattern ( ($generated@@78 $generated@@618 $generated@@46 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@620) $generated@@3)) ($generated@@78 $generated@@620 $generated@@47 $generated@@619))
 :pattern ( ($generated@@78 $generated@@620 $generated@@47 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@622) $generated@@4)) ($generated@@78 $generated@@622 $generated@@44 $generated@@621))
 :pattern ( ($generated@@78 $generated@@622 $generated@@44 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@624) $generated@@473)) ($generated@@78 $generated@@624 $generated@@45 $generated@@623))
 :pattern ( ($generated@@78 $generated@@624 $generated@@45 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@626) $generated@@139)) ($generated@@78 $generated@@626 $generated@@48 $generated@@625))
 :pattern ( ($generated@@78 $generated@@626 $generated@@48 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@138 $generated@@139)) (= (type $generated@@628) $generated@@68)) (= ($generated@@155 $generated@@627 ($generated@@268 $generated@@628)) (forall (($generated@@629 Int) ) (!  (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@140 $generated@@627))) ($generated@@236 ($generated@@136 $generated@@627 $generated@@629) $generated@@628))
 :pattern ( ($generated@@136 $generated@@627 $generated@@629))
))))
 :pattern ( ($generated@@155 $generated@@627 ($generated@@268 $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 Int) ) (!  (=> (= (type $generated@@630) ($generated@@138 $generated@@139)) (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@140 $generated@@630))) (< ($generated@@141 ($generated@@142 $generated@@143 ($generated@@136 $generated@@630 $generated@@631))) ($generated@@565 $generated@@630))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@143 ($generated@@136 $generated@@630 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) ($generated@@319 $generated@@139 $generated@@139)) (= (type $generated@@633) $generated@@68)) (= (type $generated@@634) $generated@@68)) ($generated@@155 $generated@@632 ($generated@@429 $generated@@633 $generated@@634))) (and (and ($generated@@155 ($generated@@317 $generated@@632) ($generated@@251 $generated@@633)) ($generated@@155 ($generated@@369 $generated@@632) ($generated@@251 $generated@@634))) ($generated@@155 ($generated@@403 $generated@@632) ($generated@@251 ($generated@@158 $generated@@633 $generated@@634)))))
 :pattern ( ($generated@@155 $generated@@632 ($generated@@429 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@337 $generated@@139 $generated@@139)) (= (type $generated@@636) $generated@@68)) (= (type $generated@@637) $generated@@68)) ($generated@@155 $generated@@635 ($generated@@437 $generated@@636 $generated@@637))) (and (and ($generated@@155 ($generated@@335 $generated@@635) ($generated@@256 $generated@@636)) ($generated@@155 ($generated@@380 $generated@@635) ($generated@@256 $generated@@637))) ($generated@@155 ($generated@@411 $generated@@635) ($generated@@256 ($generated@@158 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@155 $generated@@635 ($generated@@437 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@2) ($generated@@155 $generated@@638 $generated@@46))
 :pattern ( ($generated@@155 $generated@@638 $generated@@46))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@3) ($generated@@155 $generated@@639 $generated@@47))
 :pattern ( ($generated@@155 $generated@@639 $generated@@47))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@4) ($generated@@155 $generated@@640 $generated@@44))
 :pattern ( ($generated@@155 $generated@@640 $generated@@44))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@473) ($generated@@155 $generated@@641 $generated@@45))
 :pattern ( ($generated@@155 $generated@@641 $generated@@45))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@139) ($generated@@155 $generated@@642 $generated@@48))
 :pattern ( ($generated@@155 $generated@@642 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 (T@U) Bool)
(declare-fun $generated@@648 () Int)
(assert  (and (and (and (= (type $generated@@643) ($generated@@181 $generated@@81 $generated@@4)) (= (type $generated@@644) $generated@@81)) (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@646) $generated@@143)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@649  (=> (= $generated@@643 ($generated@@180 $generated@@644 $generated@@645 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@140 ($generated@@267 ($generated@@297 $generated@@139) ($generated@@306 $generated@@646)))))) (=> (and ($generated@@390 ($generated@@142 $generated@@143 ($generated@@136 ($generated@@267 ($generated@@297 $generated@@139) ($generated@@306 $generated@@646)) ($generated@@261 0)))) ($generated@@390 $generated@@646)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@248 ($generated@@142 $generated@@143 ($generated@@136 ($generated@@267 ($generated@@297 $generated@@139) ($generated@@306 $generated@@646)) ($generated@@261 0))) $generated@@646)) (=> ($generated@@248 ($generated@@142 $generated@@143 ($generated@@136 ($generated@@267 ($generated@@297 $generated@@139) ($generated@@306 $generated@@646)) ($generated@@261 0))) $generated@@646) (=> (= (ControlFlow 0 2) (- 0 1)) (not ($generated@@248 $generated@@646 ($generated@@137 ($generated@@267 ($generated@@297 $generated@@139) ($generated@@306 $generated@@646)))))))))))))
(let (($generated@@650  (=> (and ($generated@@244 $generated@@645) ($generated@@647 $generated@@645)) (=> (and (and (and ($generated@@155 $generated@@646 $generated@@243) ($generated@@78 $generated@@646 $generated@@243 $generated@@645)) ($generated@@390 $generated@@646)) (and (= 1 $generated@@648) (= (ControlFlow 0 5) 2))) $generated@@649))))
$generated@@650)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U Int) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@U) Int)
(declare-fun $generated@@141 (T@U) Int)
(declare-fun $generated@@142 (T@T T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (Int) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@280 (T@U T@U) Bool)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@145 T@T) ) (= ($generated@@1 ($generated@@138 $generated@@145)) 14)) (forall (($generated@@146 T@T) ) (! (= ($generated@@144 ($generated@@138 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@138 $generated@@146))
))) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@147 T@U) ($generated@@148 Int) ) (! (let (($generated@@149 ($generated@@144 (type $generated@@147))))
(= (type ($generated@@136 $generated@@147 $generated@@148)) $generated@@149))
 :pattern ( ($generated@@136 $generated@@147 $generated@@148))
))) (= ($generated@@1 $generated@@143) 16)) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@137 $generated@@150)) $generated@@143)
 :pattern ( ($generated@@137 $generated@@150))
))) (forall (($generated@@151 T@T) ($generated@@152 T@U) ) (! (= (type ($generated@@142 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@142 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 Int) ) (!  (=> (= (type $generated@@153) ($generated@@138 $generated@@139)) (=> (and (<= 0 $generated@@154) (< $generated@@154 ($generated@@140 $generated@@153))) (< ($generated@@141 ($generated@@142 $generated@@143 ($generated@@136 $generated@@153 $generated@@154))) ($generated@@141 ($generated@@137 $generated@@153)))))
 :pattern ( ($generated@@136 $generated@@153 $generated@@154) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@155 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@155 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@159 $generated@@160)) $generated@@68)
 :pattern ( ($generated@@158 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@68) (= (type $generated@@162) $generated@@68)) (= (type $generated@@163) $generated@@143)) ($generated@@155 $generated@@163 ($generated@@158 $generated@@161 $generated@@162))) ($generated@@157 $generated@@163))
 :pattern ( ($generated@@157 $generated@@163) ($generated@@155 $generated@@163 ($generated@@158 $generated@@161 $generated@@162)))
)))
(assert  (and (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@139)
 :pattern ( ($generated@@165 $generated@@167))
)) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@139)
 :pattern ( ($generated@@166 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@143) (= (type $generated@@170) $generated@@143)) true) (= ($generated@@164 $generated@@169 $generated@@170)  (and (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)) (= ($generated@@166 $generated@@169) ($generated@@166 $generated@@170)))))
 :pattern ( ($generated@@164 $generated@@169 $generated@@170))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@72)
 :pattern ( ($generated@@171 $generated@@173))
)) (= (type $generated@@172) $generated@@143)))
(assert (= ($generated@@171 $generated@@172) $generated@@63))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@68)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@80 $generated@@139 $generated@@2)) (= (type $generated@@178) $generated@@68)) ($generated@@155 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@155 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (= ($generated@@1 ($generated@@181 $generated@@185 $generated@@186)) 17)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@182 ($generated@@181 $generated@@187 $generated@@188)) $generated@@187)
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@183 ($generated@@181 $generated@@189 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@181 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@183 (type $generated@@191))))
(= (type ($generated@@179 $generated@@191 $generated@@192 $generated@@193)) $generated@@194))
 :pattern ( ($generated@@179 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(let (($generated@@200 (type $generated@@196)))
(= (type ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198)) ($generated@@181 $generated@@200 $generated@@199))))
 :pattern ( ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@183 (type $generated@@201))))
 (=> (= (type $generated@@204) $generated@@205) (= ($generated@@179 ($generated@@184 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@202 $generated@@203) $generated@@204)))
 :weight 0
))) (and (and (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@179 ($generated@@184 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@179 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@179 ($generated@@184 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@179 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or true (= ($generated@@179 ($generated@@184 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@179 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@181 $generated@@81 $generated@@4))
 :pattern ( ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@71 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@81) (= (type $generated@@229) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@230) ($generated@@70 $generated@@4))) (= (type $generated@@232) $generated@@81)) (= (type $generated@@233) ($generated@@70 $generated@@234))) (= ($generated@@0 ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@143)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@68) (= (type $generated@@240) $generated@@68)) (= (type $generated@@241) $generated@@139)) (= (type $generated@@242) $generated@@139)) (= ($generated@@155 ($generated@@235 $generated@@241 $generated@@242) ($generated@@158 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@155 ($generated@@235 $generated@@241 $generated@@242) ($generated@@158 $generated@@239 $generated@@240)))
)))
(assert (= (type $generated@@243) $generated@@68))
(assert ($generated@@155 $generated@@172 $generated@@243))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@244 $generated@@245)) ($generated@@78 $generated@@172 $generated@@243 $generated@@245))
 :pattern ( ($generated@@78 $generated@@172 $generated@@243 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@143) (= (type $generated@@247) $generated@@143)) (= ($generated@@164 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@164 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@143) (= (type $generated@@250) $generated@@143)) (= ($generated@@248 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@68)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@80 $generated@@139 $generated@@4)) (= (type $generated@@254) $generated@@68)) (= ($generated@@155 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@139) ($generated@@0 ($generated@@85 $generated@@253 $generated@@255))) ($generated@@236 $generated@@255 $generated@@254))
 :pattern ( ($generated@@85 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@155 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@139 $generated@@4)) (= (type $generated@@259) $generated@@68)) (= ($generated@@155 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@139) ($generated@@0 ($generated@@85 $generated@@258 $generated@@260))) ($generated@@236 $generated@@260 $generated@@259))
 :pattern ( ($generated@@85 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@155 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@261 $generated@@262) $generated@@262)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@263 $generated@@266) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (= (type $generated@@268) $generated@@143) (= (type $generated@@269) $generated@@143)) (and ($generated@@267 $generated@@268) ($generated@@267 $generated@@269))) (= ($generated@@248 $generated@@268 $generated@@269) true))
 :pattern ( ($generated@@248 $generated@@268 $generated@@269) ($generated@@267 $generated@@268))
 :pattern ( ($generated@@248 $generated@@268 $generated@@269) ($generated@@267 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@68) (= (type $generated@@272) $generated@@68)) (= (type $generated@@273) $generated@@139)) (= (type $generated@@274) $generated@@139)) (= (type $generated@@275) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@244 $generated@@275)) (= ($generated@@78 ($generated@@235 $generated@@273 $generated@@274) ($generated@@158 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@78 ($generated@@235 $generated@@273 $generated@@274) ($generated@@158 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@143) (= ($generated@@157 $generated@@276) (= ($generated@@171 $generated@@276) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@143) (= ($generated@@267 $generated@@277) (= ($generated@@171 $generated@@277) $generated@@63)))
 :pattern ( ($generated@@267 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@143) (= ($generated@@278 $generated@@279) (= ($generated@@171 $generated@@279) $generated@@65)))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@144 (type $generated@@281))))
 (=> (and (= (type $generated@@281) ($generated@@138 $generated@@283)) (= (type $generated@@282) ($generated@@138 $generated@@283))) (= ($generated@@280 $generated@@281 $generated@@282)  (and (= ($generated@@140 $generated@@281) ($generated@@140 $generated@@282)) (forall (($generated@@284 Int) ) (!  (=> (and (<= 0 $generated@@284) (< $generated@@284 ($generated@@140 $generated@@281))) (= ($generated@@136 $generated@@281 $generated@@284) ($generated@@136 $generated@@282 $generated@@284)))
 :pattern ( ($generated@@136 $generated@@281 $generated@@284))
 :pattern ( ($generated@@136 $generated@@282 $generated@@284))
))))))
 :pattern ( ($generated@@280 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@143) ($generated@@157 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@139) (= (type $generated@@287) $generated@@139)) (= $generated@@285 ($generated@@235 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@157 $generated@@285))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@138 $generated@@289))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@T) ) (! (= ($generated@@140 ($generated@@288 $generated@@290)) 0)
 :pattern ( ($generated@@288 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@143) ($generated@@267 $generated@@291)) (= $generated@@291 $generated@@172))
 :pattern ( ($generated@@267 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@143) ($generated@@278 $generated@@292)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) ($generated@@138 $generated@@139)) (= $generated@@292 ($generated@@137 $generated@@293)))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@278 $generated@@292))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@139)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@68) (= (type $generated@@298) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@270 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@78 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@270 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@80 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@83 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@80 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@85 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@80 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@85 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@85 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@80 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@85 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@85 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@83 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@80 $generated@@342 $generated@@2)) (= ($generated@@175 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@85 $generated@@341 $generated@@343))) (<= ($generated ($generated@@85 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@85 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@175 $generated@@341))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@139) ($generated@@236 $generated@@344 $generated@@243)) (and (= ($generated@@294 ($generated@@142 $generated@@143 $generated@@344)) $generated@@344) ($generated@@155 ($generated@@142 $generated@@143 $generated@@344) $generated@@243)))
 :pattern ( ($generated@@236 $generated@@344 $generated@@243))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) ($generated@@138 $generated@@139))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@347) $generated@@143) (= (type $generated@@348) $generated@@143)) (and ($generated@@278 $generated@@347) ($generated@@278 $generated@@348))) (= ($generated@@248 $generated@@347 $generated@@348) ($generated@@280 ($generated@@345 $generated@@347) ($generated@@345 $generated@@348))))
 :pattern ( ($generated@@248 $generated@@347 $generated@@348) ($generated@@278 $generated@@347))
 :pattern ( ($generated@@248 $generated@@347 $generated@@348) ($generated@@278 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@309 (type $generated@@349))))
(let (($generated@@351 ($generated@@308 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@307 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@306 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@305 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@309 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@80 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@309 (type $generated@@356))))
(let (($generated@@358 ($generated@@308 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@307 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@306 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@85 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@327 (type $generated@@360))))
(let (($generated@@362 ($generated@@326 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@325 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@324 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@323 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@327 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@80 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@327 (type $generated@@367))))
(let (($generated@@369 ($generated@@326 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@325 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@324 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@85 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@80 $generated@@139 $generated@@2)) (= (type $generated@@372) $generated@@68)) (= ($generated@@155 $generated@@371 ($generated@@174 $generated@@372)) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@139) (< 0 ($generated ($generated@@85 $generated@@371 $generated@@373)))) ($generated@@236 $generated@@373 $generated@@372))
 :pattern ( ($generated@@85 $generated@@371 $generated@@373))
))))
 :pattern ( ($generated@@155 $generated@@371 ($generated@@174 $generated@@372)))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@68)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) ($generated@@138 $generated@@139)) (= ($generated@@155 ($generated@@137 $generated@@376) $generated@@243) ($generated@@155 $generated@@376 ($generated@@374 $generated@@243))))
 :pattern ( ($generated@@155 ($generated@@137 $generated@@376) $generated@@243))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@80 $generated@@139 $generated@@4)) (= (type $generated@@378) $generated@@68)) (= (type $generated@@379) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@377 ($generated@@251 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@139) ($generated@@0 ($generated@@85 $generated@@377 $generated@@380))) ($generated@@270 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@85 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@78 $generated@@377 ($generated@@251 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@80 $generated@@139 $generated@@4)) (= (type $generated@@382) $generated@@68)) (= (type $generated@@383) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@381 ($generated@@256 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@139) ($generated@@0 ($generated@@85 $generated@@381 $generated@@384))) ($generated@@270 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@85 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@78 $generated@@381 ($generated@@256 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(= ($generated ($generated@@85 ($generated@@300 $generated@@386) $generated@@385)) 0))
 :pattern ( (let (($generated@@386 (type $generated@@385)))
($generated@@85 ($generated@@300 $generated@@386) $generated@@385)))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@80 $generated@@139 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@309 (type $generated@@390))))
(let (($generated@@392 ($generated@@308 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@80 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@307 $generated@@139 $generated@@139)) (= (type $generated@@394) $generated@@139)) (= ($generated@@0 ($generated@@85 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@85 ($generated@@305 $generated@@393) ($generated@@165 ($generated@@142 $generated@@143 $generated@@394)))) (= ($generated@@85 ($generated@@388 $generated@@393) ($generated@@165 ($generated@@142 $generated@@143 $generated@@394))) ($generated@@166 ($generated@@142 $generated@@143 $generated@@394))))))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@80 $generated@@139 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@327 (type $generated@@398))))
(let (($generated@@400 ($generated@@326 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@80 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@325 $generated@@139 $generated@@139)) (= (type $generated@@402) $generated@@139)) (= ($generated@@0 ($generated@@85 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@85 ($generated@@323 $generated@@401) ($generated@@165 ($generated@@142 $generated@@143 $generated@@402)))) (= ($generated@@85 ($generated@@396 $generated@@401) ($generated@@165 ($generated@@142 $generated@@143 $generated@@402))) ($generated@@166 ($generated@@142 $generated@@143 $generated@@402))))))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@308 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@307 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@85 ($generated@@353 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@85 ($generated@@305 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@85 ($generated@@388 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@403) $generated@@407))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@85 ($generated@@353 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@326 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@325 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@85 ($generated@@364 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@85 ($generated@@323 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@85 ($generated@@396 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@408) $generated@@412))
 :pattern ( ($generated@@85 ($generated@@396 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@85 ($generated@@364 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@68)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@307 $generated@@139 $generated@@139)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@139) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@416) $generated@@420))) (and ($generated@@270 ($generated@@85 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@270 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@78 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@68)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@325 $generated@@139 $generated@@139)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) $generated@@68)) (= (type $generated@@427) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@139) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@424) $generated@@428))) (and ($generated@@270 ($generated@@85 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@270 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@85 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@78 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@144 (type $generated@@429))))
 (=> (and (and (= (type $generated@@429) ($generated@@138 $generated@@431)) (= (type $generated@@430) ($generated@@138 $generated@@431))) ($generated@@280 $generated@@429 $generated@@430)) (= $generated@@429 $generated@@430)))
 :pattern ( ($generated@@280 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@143) ($generated@@155 $generated@@432 $generated@@243)) (or ($generated@@267 $generated@@432) ($generated@@278 $generated@@432)))
 :pattern ( ($generated@@278 $generated@@432) ($generated@@155 $generated@@432 $generated@@243))
 :pattern ( ($generated@@267 $generated@@432) ($generated@@155 $generated@@432 $generated@@243))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@80 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@364 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@364 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@395 $generated@@441) ($generated@@433 $generated@@139))))))
 :pattern ( ($generated@@395 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@139) (= (type $generated@@448) $generated@@139)) ($generated@@0 ($generated@@85 ($generated@@387 $generated@@444) ($generated@@294 ($generated@@235 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@387 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@139) (= (type $generated@@453) $generated@@139)) ($generated@@0 ($generated@@85 ($generated@@395 $generated@@449) ($generated@@294 ($generated@@235 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@395 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@139) ($generated@@236 $generated@@454 $generated@@46)) (and (= ($generated@@294 ($generated@@142 $generated@@2 $generated@@454)) $generated@@454) ($generated@@155 ($generated@@142 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@139) ($generated@@236 $generated@@455 $generated@@47)) (and (= ($generated@@294 ($generated@@142 $generated@@3 $generated@@455)) $generated@@455) ($generated@@155 ($generated@@142 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@139) ($generated@@236 $generated@@456 $generated@@44)) (and (= ($generated@@294 ($generated@@142 $generated@@4 $generated@@456)) $generated@@456) ($generated@@155 ($generated@@142 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@139) ($generated@@236 $generated@@458 $generated@@45)) (and (= ($generated@@294 ($generated@@142 $generated@@457 $generated@@458)) $generated@@458) ($generated@@155 ($generated@@142 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@68) (= ($generated@@236 ($generated@@294 $generated@@459) $generated@@460) ($generated@@155 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@236 ($generated@@294 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@83 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@80 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@144 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@138 $generated@@464)) (<= 0 ($generated@@140 $generated@@463))))
 :pattern ( ($generated@@140 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@465) ($generated@@138 $generated@@139)) (= (type $generated@@466) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@244 $generated@@466)) (= ($generated@@78 ($generated@@137 $generated@@465) $generated@@243 $generated@@466) ($generated@@78 $generated@@465 ($generated@@374 $generated@@243) $generated@@466)))
 :pattern ( ($generated@@78 ($generated@@137 $generated@@465) $generated@@243 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@68) (= (type $generated@@470) $generated@@68)) (= ($generated@@467 ($generated@@413 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@413 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@68)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@68) (= (type $generated@@474) $generated@@68)) (= ($generated@@471 ($generated@@413 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@413 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@68)) (= ($generated@@76 ($generated@@413 $generated@@475 $generated@@476)) $generated@@58))
 :pattern ( ($generated@@413 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@68)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@68) (= (type $generated@@480) $generated@@68)) (= ($generated@@477 ($generated@@421 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@421 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@68)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@68)) (= ($generated@@481 ($generated@@421 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@421 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@76 ($generated@@421 $generated@@485 $generated@@486)) $generated@@59))
 :pattern ( ($generated@@421 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@139) (= (type $generated@@488) $generated@@139)) (= ($generated@@171 ($generated@@235 $generated@@487 $generated@@488)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@158 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@158 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@493 ($generated@@158 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@158 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@139) (= (type $generated@@498) $generated@@139)) (= ($generated@@165 ($generated@@235 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@235 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@139) (= (type $generated@@500) $generated@@139)) (= ($generated@@166 ($generated@@235 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@235 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@138 $generated@@139)) (= (type $generated@@502) $generated@@68)) (= (type $generated@@503) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@501 ($generated@@374 $generated@@502) $generated@@503) (forall (($generated@@504 Int) ) (!  (=> (and (<= 0 $generated@@504) (< $generated@@504 ($generated@@140 $generated@@501))) ($generated@@270 ($generated@@136 $generated@@501 $generated@@504) $generated@@502 $generated@@503))
 :pattern ( ($generated@@136 $generated@@501 $generated@@504))
))))
 :pattern ( ($generated@@78 $generated@@501 ($generated@@374 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@506 Int) ) (! (= ($generated@@505 ($generated@@79 $generated@@506)) $generated@@506)
 :pattern ( ($generated@@79 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@68) (= ($generated@@507 ($generated@@251 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@251 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@68) (= ($generated@@76 ($generated@@251 $generated@@510)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@511 ($generated@@256 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@256 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@76 ($generated@@256 $generated@@514)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@515 ($generated@@174 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@174 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@76 ($generated@@174 $generated@@518)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@519 ($generated@@374 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@374 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@76 ($generated@@374 $generated@@522)) $generated@@57))
 :pattern ( ($generated@@374 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) ($generated@@138 $generated@@139)) (= ($generated@@171 ($generated@@137 $generated@@523)) $generated@@65))
 :pattern ( ($generated@@137 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) ($generated@@138 $generated@@139)) (= ($generated@@345 ($generated@@137 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@137 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= ($generated@@142 $generated@@526 ($generated@@294 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@294 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@307 $generated@@139 $generated@@139)) (= (type $generated@@528) $generated@@68)) (= (type $generated@@529) $generated@@68)) (= ($generated@@155 $generated@@527 ($generated@@413 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@139) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@527) $generated@@530))) (and ($generated@@236 ($generated@@85 ($generated@@388 $generated@@527) $generated@@530) $generated@@529) ($generated@@236 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@527) $generated@@530))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@155 $generated@@527 ($generated@@413 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@325 $generated@@139 $generated@@139)) (= (type $generated@@532) $generated@@68)) (= (type $generated@@533) $generated@@68)) (= ($generated@@155 $generated@@531 ($generated@@421 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@139) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@531) $generated@@534))) (and ($generated@@236 ($generated@@85 ($generated@@396 $generated@@531) $generated@@534) $generated@@533) ($generated@@236 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@85 ($generated@@396 $generated@@531) $generated@@534))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@155 $generated@@531 ($generated@@421 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@139) (= (type $generated@@537) $generated@@139)) (< ($generated@@535 $generated@@536) ($generated@@141 ($generated@@235 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@235 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@139) (= (type $generated@@539) $generated@@139)) (< ($generated@@535 $generated@@539) ($generated@@141 ($generated@@235 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@235 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@139) (= (type $generated@@541) $generated@@68)) (= (type $generated@@542) $generated@@68)) ($generated@@236 $generated@@540 ($generated@@413 $generated@@541 $generated@@542))) (and (= ($generated@@294 ($generated@@142 ($generated@@307 $generated@@139 $generated@@139) $generated@@540)) $generated@@540) ($generated@@155 ($generated@@142 ($generated@@307 $generated@@139 $generated@@139) $generated@@540) ($generated@@413 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@236 $generated@@540 ($generated@@413 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@139) (= (type $generated@@544) $generated@@68)) (= (type $generated@@545) $generated@@68)) ($generated@@236 $generated@@543 ($generated@@421 $generated@@544 $generated@@545))) (and (= ($generated@@294 ($generated@@142 ($generated@@325 $generated@@139 $generated@@139) $generated@@543)) $generated@@543) ($generated@@155 ($generated@@142 ($generated@@325 $generated@@139 $generated@@139) $generated@@543) ($generated@@421 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@236 $generated@@543 ($generated@@421 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@68) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) $generated@@139)) ($generated@@236 $generated@@548 ($generated@@158 $generated@@546 $generated@@547))) (and (= ($generated@@294 ($generated@@142 $generated@@143 $generated@@548)) $generated@@548) ($generated@@155 ($generated@@142 $generated@@143 $generated@@548) ($generated@@158 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@236 $generated@@548 ($generated@@158 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) ($generated@@138 $generated@@139)) (< ($generated@@549 $generated@@550) ($generated@@141 ($generated@@137 $generated@@550))))
 :pattern ( ($generated@@137 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (not ($generated@@0 ($generated@@85 ($generated@@433 $generated@@552) $generated@@551))))
 :pattern ( (let (($generated@@552 (type $generated@@551)))
($generated@@85 ($generated@@433 $generated@@552) $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@73)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@68) (= (type $generated@@556) $generated@@68)) (and (= ($generated@@76 ($generated@@158 $generated@@555 $generated@@556)) $generated@@62) (= ($generated@@553 ($generated@@158 $generated@@555 $generated@@556)) $generated@@66)))
 :pattern ( ($generated@@158 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@143) (= ($generated@@535 ($generated@@294 $generated@@557)) ($generated@@141 $generated@@557)))
 :pattern ( ($generated@@535 ($generated@@294 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@139) ($generated@@236 $generated@@558 ($generated@@79 0))) (and (= ($generated@@294 ($generated@@142 $generated@@2 $generated@@558)) $generated@@558) ($generated@@155 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@558) ($generated@@79 0))))
 :pattern ( ($generated@@236 $generated@@558 ($generated@@79 0)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@139) (= (type $generated@@560) $generated@@68)) ($generated@@236 $generated@@559 ($generated@@251 $generated@@560))) (and (= ($generated@@294 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@559)) $generated@@559) ($generated@@155 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@559) ($generated@@251 $generated@@560))))
 :pattern ( ($generated@@236 $generated@@559 ($generated@@251 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@139) (= (type $generated@@562) $generated@@68)) ($generated@@236 $generated@@561 ($generated@@256 $generated@@562))) (and (= ($generated@@294 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@561)) $generated@@561) ($generated@@155 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@561) ($generated@@256 $generated@@562))))
 :pattern ( ($generated@@236 $generated@@561 ($generated@@256 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@139) (= (type $generated@@564) $generated@@68)) ($generated@@236 $generated@@563 ($generated@@174 $generated@@564))) (and (= ($generated@@294 ($generated@@142 ($generated@@80 $generated@@139 $generated@@2) $generated@@563)) $generated@@563) ($generated@@155 ($generated@@142 ($generated@@80 $generated@@139 $generated@@2) $generated@@563) ($generated@@174 $generated@@564))))
 :pattern ( ($generated@@236 $generated@@563 ($generated@@174 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@139) (= (type $generated@@566) $generated@@68)) ($generated@@236 $generated@@565 ($generated@@374 $generated@@566))) (and (= ($generated@@294 ($generated@@142 ($generated@@138 $generated@@139) $generated@@565)) $generated@@565) ($generated@@155 ($generated@@142 ($generated@@138 $generated@@139) $generated@@565) ($generated@@374 $generated@@566))))
 :pattern ( ($generated@@236 $generated@@565 ($generated@@374 $generated@@566)))
)))
(assert (= ($generated@@76 $generated@@243) $generated@@64))
(assert (= ($generated@@553 $generated@@243) $generated@@67))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@80 $generated@@139 $generated@@2)) (= (type $generated@@568) $generated@@68)) (= (type $generated@@569) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@567 ($generated@@174 $generated@@568) $generated@@569) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@139) (< 0 ($generated ($generated@@85 $generated@@567 $generated@@570)))) ($generated@@270 $generated@@570 $generated@@568 $generated@@569))
 :pattern ( ($generated@@85 $generated@@567 $generated@@570))
))))
 :pattern ( ($generated@@78 $generated@@567 ($generated@@174 $generated@@568) $generated@@569))
)))
(assert (= $generated@@172 ($generated@@263 $generated@@172)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@143) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@573) (and ($generated@@157 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@68) ($generated@@78 $generated@@571 ($generated@@158 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@78 $generated@@571 ($generated@@158 $generated@@572 $generated@@574) $generated@@573))
))))) ($generated@@270 ($generated@@165 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@270 ($generated@@165 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@143) (= (type $generated@@576) $generated@@68)) (= (type $generated@@577) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@577) (and ($generated@@157 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@68) ($generated@@78 $generated@@575 ($generated@@158 $generated@@578 $generated@@576) $generated@@577))
 :pattern ( ($generated@@78 $generated@@575 ($generated@@158 $generated@@578 $generated@@576) $generated@@577))
))))) ($generated@@270 ($generated@@166 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@270 ($generated@@166 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@139) (= (type $generated@@580) $generated@@139)) (= ($generated@@235 ($generated@@263 $generated@@579) ($generated@@263 $generated@@580)) ($generated@@263 ($generated@@235 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@235 ($generated@@263 $generated@@579) ($generated@@263 $generated@@580)))
)))
(assert (forall (($generated@@581 Int) ) (! (= ($generated@@294 ($generated@@8 ($generated@@261 $generated@@581))) ($generated@@263 ($generated@@294 ($generated@@8 $generated@@581))))
 :pattern ( ($generated@@294 ($generated@@8 ($generated@@261 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) ($generated@@138 $generated@@139)) (= ($generated@@137 ($generated@@263 $generated@@582)) ($generated@@263 ($generated@@137 $generated@@582))))
 :pattern ( ($generated@@137 ($generated@@263 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (= ($generated@@294 ($generated@@263 $generated@@583)) ($generated@@263 ($generated@@294 $generated@@583)))
 :pattern ( ($generated@@294 ($generated@@263 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@144 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@138 $generated@@585)) (= ($generated@@140 $generated@@584) 0)) (= $generated@@584 ($generated@@288 $generated@@585))))
 :pattern ( ($generated@@140 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@587)))
 (=> (and (and (= (type $generated@@586) ($generated@@80 $generated@@589 $generated@@2)) (= (type $generated@@588) $generated@@2)) (<= 0 ($generated $generated@@588))) (= ($generated@@299 ($generated@@86 $generated@@586 $generated@@587 $generated@@588)) (+ (- ($generated@@299 $generated@@586) ($generated ($generated@@85 $generated@@586 $generated@@587))) ($generated $generated@@588)))))
 :pattern ( ($generated@@299 ($generated@@86 $generated@@586 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@143) (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@591) (and ($generated@@278 $generated@@590) ($generated@@78 $generated@@590 $generated@@243 $generated@@591)))) ($generated@@78 ($generated@@345 $generated@@590) ($generated@@374 $generated@@243) $generated@@591))
 :pattern ( ($generated@@78 ($generated@@345 $generated@@590) ($generated@@374 $generated@@243) $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@593) $generated@@2)) ($generated@@78 $generated@@593 $generated@@46 $generated@@592))
 :pattern ( ($generated@@78 $generated@@593 $generated@@46 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@595) $generated@@3)) ($generated@@78 $generated@@595 $generated@@47 $generated@@594))
 :pattern ( ($generated@@78 $generated@@595 $generated@@47 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@597) $generated@@4)) ($generated@@78 $generated@@597 $generated@@44 $generated@@596))
 :pattern ( ($generated@@78 $generated@@597 $generated@@44 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@599) $generated@@457)) ($generated@@78 $generated@@599 $generated@@45 $generated@@598))
 :pattern ( ($generated@@78 $generated@@599 $generated@@45 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@601) $generated@@139)) ($generated@@78 $generated@@601 $generated@@48 $generated@@600))
 :pattern ( ($generated@@78 $generated@@601 $generated@@48 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@138 $generated@@139)) (= (type $generated@@603) $generated@@68)) (= ($generated@@155 $generated@@602 ($generated@@374 $generated@@603)) (forall (($generated@@604 Int) ) (!  (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@140 $generated@@602))) ($generated@@236 ($generated@@136 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@136 $generated@@602 $generated@@604))
))))
 :pattern ( ($generated@@155 $generated@@602 ($generated@@374 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 Int) ) (!  (=> (= (type $generated@@605) ($generated@@138 $generated@@139)) (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@140 $generated@@605))) (< ($generated@@141 ($generated@@142 $generated@@143 ($generated@@136 $generated@@605 $generated@@606))) ($generated@@549 $generated@@605))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@143 ($generated@@136 $generated@@605 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@307 $generated@@139 $generated@@139)) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) $generated@@68)) ($generated@@155 $generated@@607 ($generated@@413 $generated@@608 $generated@@609))) (and (and ($generated@@155 ($generated@@305 $generated@@607) ($generated@@251 $generated@@608)) ($generated@@155 ($generated@@353 $generated@@607) ($generated@@251 $generated@@609))) ($generated@@155 ($generated@@387 $generated@@607) ($generated@@251 ($generated@@158 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@155 $generated@@607 ($generated@@413 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@325 $generated@@139 $generated@@139)) (= (type $generated@@611) $generated@@68)) (= (type $generated@@612) $generated@@68)) ($generated@@155 $generated@@610 ($generated@@421 $generated@@611 $generated@@612))) (and (and ($generated@@155 ($generated@@323 $generated@@610) ($generated@@256 $generated@@611)) ($generated@@155 ($generated@@364 $generated@@610) ($generated@@256 $generated@@612))) ($generated@@155 ($generated@@395 $generated@@610) ($generated@@256 ($generated@@158 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@155 $generated@@610 ($generated@@421 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@2) ($generated@@155 $generated@@613 $generated@@46))
 :pattern ( ($generated@@155 $generated@@613 $generated@@46))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@3) ($generated@@155 $generated@@614 $generated@@47))
 :pattern ( ($generated@@155 $generated@@614 $generated@@47))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@4) ($generated@@155 $generated@@615 $generated@@44))
 :pattern ( ($generated@@155 $generated@@615 $generated@@44))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@457) ($generated@@155 $generated@@616 $generated@@45))
 :pattern ( ($generated@@155 $generated@@616 $generated@@45))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@139) ($generated@@155 $generated@@617 $generated@@48))
 :pattern ( ($generated@@155 $generated@@617 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () Int)
(assert  (and (and (and (and (= (type $generated@@618) ($generated@@181 $generated@@81 $generated@@4)) (= (type $generated@@619) $generated@@81)) (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@621) ($generated@@138 $generated@@139))) (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@625  (=> (and (= $generated@@618 ($generated@@180 $generated@@619 $generated@@620 $generated@@60 false)) (not ($generated@@280 $generated@@621 ($generated@@288 $generated@@139)))) (=> (and (and ($generated@@244 $generated@@622) ($generated@@623 $generated@@622)) (and (= $generated@@620 $generated@@622) (= (ControlFlow 0 2) (- 0 1)))) (and (<= 0 ($generated@@261 0)) (< ($generated@@261 0) ($generated@@140 $generated@@621)))))))
(let (($generated@@626  (=> (and ($generated@@244 $generated@@620) ($generated@@623 $generated@@620)) (=> (and (and ($generated@@155 $generated@@621 ($generated@@374 $generated@@243)) ($generated@@78 $generated@@621 ($generated@@374 $generated@@243) $generated@@620)) (and (= 1 $generated@@624) (= (ControlFlow 0 3) 2))) $generated@@625))))
$generated@@626)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U Int) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@U) Int)
(declare-fun $generated@@141 (T@U) Int)
(declare-fun $generated@@142 (T@T T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (Int) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@280 (T@U T@U) Bool)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@145 T@T) ) (= ($generated@@1 ($generated@@138 $generated@@145)) 14)) (forall (($generated@@146 T@T) ) (! (= ($generated@@144 ($generated@@138 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@138 $generated@@146))
))) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@147 T@U) ($generated@@148 Int) ) (! (let (($generated@@149 ($generated@@144 (type $generated@@147))))
(= (type ($generated@@136 $generated@@147 $generated@@148)) $generated@@149))
 :pattern ( ($generated@@136 $generated@@147 $generated@@148))
))) (= ($generated@@1 $generated@@143) 16)) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@137 $generated@@150)) $generated@@143)
 :pattern ( ($generated@@137 $generated@@150))
))) (forall (($generated@@151 T@T) ($generated@@152 T@U) ) (! (= (type ($generated@@142 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@142 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 Int) ) (!  (=> (= (type $generated@@153) ($generated@@138 $generated@@139)) (=> (and (<= 0 $generated@@154) (< $generated@@154 ($generated@@140 $generated@@153))) (< ($generated@@141 ($generated@@142 $generated@@143 ($generated@@136 $generated@@153 $generated@@154))) ($generated@@141 ($generated@@137 $generated@@153)))))
 :pattern ( ($generated@@136 $generated@@153 $generated@@154) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@155 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@155 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@159 $generated@@160)) $generated@@68)
 :pattern ( ($generated@@158 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@68) (= (type $generated@@162) $generated@@68)) (= (type $generated@@163) $generated@@143)) ($generated@@155 $generated@@163 ($generated@@158 $generated@@161 $generated@@162))) ($generated@@157 $generated@@163))
 :pattern ( ($generated@@157 $generated@@163) ($generated@@155 $generated@@163 ($generated@@158 $generated@@161 $generated@@162)))
)))
(assert  (and (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@139)
 :pattern ( ($generated@@165 $generated@@167))
)) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@139)
 :pattern ( ($generated@@166 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@143) (= (type $generated@@170) $generated@@143)) true) (= ($generated@@164 $generated@@169 $generated@@170)  (and (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)) (= ($generated@@166 $generated@@169) ($generated@@166 $generated@@170)))))
 :pattern ( ($generated@@164 $generated@@169 $generated@@170))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@72)
 :pattern ( ($generated@@171 $generated@@173))
)) (= (type $generated@@172) $generated@@143)))
(assert (= ($generated@@171 $generated@@172) $generated@@63))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@68)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@80 $generated@@139 $generated@@2)) (= (type $generated@@178) $generated@@68)) ($generated@@155 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@155 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (= ($generated@@1 ($generated@@181 $generated@@185 $generated@@186)) 17)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@182 ($generated@@181 $generated@@187 $generated@@188)) $generated@@187)
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@183 ($generated@@181 $generated@@189 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@181 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@183 (type $generated@@191))))
(= (type ($generated@@179 $generated@@191 $generated@@192 $generated@@193)) $generated@@194))
 :pattern ( ($generated@@179 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(let (($generated@@200 (type $generated@@196)))
(= (type ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198)) ($generated@@181 $generated@@200 $generated@@199))))
 :pattern ( ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@183 (type $generated@@201))))
 (=> (= (type $generated@@204) $generated@@205) (= ($generated@@179 ($generated@@184 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@202 $generated@@203) $generated@@204)))
 :weight 0
))) (and (and (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@179 ($generated@@184 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@179 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@179 ($generated@@184 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@179 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or true (= ($generated@@179 ($generated@@184 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@179 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@181 $generated@@81 $generated@@4))
 :pattern ( ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@71 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@81) (= (type $generated@@229) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@230) ($generated@@70 $generated@@4))) (= (type $generated@@232) $generated@@81)) (= (type $generated@@233) ($generated@@70 $generated@@234))) (= ($generated@@0 ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@143)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@68) (= (type $generated@@240) $generated@@68)) (= (type $generated@@241) $generated@@139)) (= (type $generated@@242) $generated@@139)) (= ($generated@@155 ($generated@@235 $generated@@241 $generated@@242) ($generated@@158 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@155 ($generated@@235 $generated@@241 $generated@@242) ($generated@@158 $generated@@239 $generated@@240)))
)))
(assert (= (type $generated@@243) $generated@@68))
(assert ($generated@@155 $generated@@172 $generated@@243))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@244 $generated@@245)) ($generated@@78 $generated@@172 $generated@@243 $generated@@245))
 :pattern ( ($generated@@78 $generated@@172 $generated@@243 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@143) (= (type $generated@@247) $generated@@143)) (= ($generated@@164 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@164 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@143) (= (type $generated@@250) $generated@@143)) (= ($generated@@248 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@68)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@80 $generated@@139 $generated@@4)) (= (type $generated@@254) $generated@@68)) (= ($generated@@155 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@139) ($generated@@0 ($generated@@85 $generated@@253 $generated@@255))) ($generated@@236 $generated@@255 $generated@@254))
 :pattern ( ($generated@@85 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@155 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@139 $generated@@4)) (= (type $generated@@259) $generated@@68)) (= ($generated@@155 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@139) ($generated@@0 ($generated@@85 $generated@@258 $generated@@260))) ($generated@@236 $generated@@260 $generated@@259))
 :pattern ( ($generated@@85 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@155 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@261 $generated@@262) $generated@@262)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@263 $generated@@266) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (= (type $generated@@268) $generated@@143) (= (type $generated@@269) $generated@@143)) (and ($generated@@267 $generated@@268) ($generated@@267 $generated@@269))) (= ($generated@@248 $generated@@268 $generated@@269) true))
 :pattern ( ($generated@@248 $generated@@268 $generated@@269) ($generated@@267 $generated@@268))
 :pattern ( ($generated@@248 $generated@@268 $generated@@269) ($generated@@267 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@68) (= (type $generated@@272) $generated@@68)) (= (type $generated@@273) $generated@@139)) (= (type $generated@@274) $generated@@139)) (= (type $generated@@275) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@244 $generated@@275)) (= ($generated@@78 ($generated@@235 $generated@@273 $generated@@274) ($generated@@158 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@78 ($generated@@235 $generated@@273 $generated@@274) ($generated@@158 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@143) (= ($generated@@157 $generated@@276) (= ($generated@@171 $generated@@276) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@143) (= ($generated@@267 $generated@@277) (= ($generated@@171 $generated@@277) $generated@@63)))
 :pattern ( ($generated@@267 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@143) (= ($generated@@278 $generated@@279) (= ($generated@@171 $generated@@279) $generated@@65)))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@144 (type $generated@@281))))
 (=> (and (= (type $generated@@281) ($generated@@138 $generated@@283)) (= (type $generated@@282) ($generated@@138 $generated@@283))) (= ($generated@@280 $generated@@281 $generated@@282)  (and (= ($generated@@140 $generated@@281) ($generated@@140 $generated@@282)) (forall (($generated@@284 Int) ) (!  (=> (and (<= 0 $generated@@284) (< $generated@@284 ($generated@@140 $generated@@281))) (= ($generated@@136 $generated@@281 $generated@@284) ($generated@@136 $generated@@282 $generated@@284)))
 :pattern ( ($generated@@136 $generated@@281 $generated@@284))
 :pattern ( ($generated@@136 $generated@@282 $generated@@284))
))))))
 :pattern ( ($generated@@280 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@143) ($generated@@157 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@139) (= (type $generated@@287) $generated@@139)) (= $generated@@285 ($generated@@235 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@157 $generated@@285))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@138 $generated@@289))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@T) ) (! (= ($generated@@140 ($generated@@288 $generated@@290)) 0)
 :pattern ( ($generated@@288 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@143) ($generated@@267 $generated@@291)) (= $generated@@291 $generated@@172))
 :pattern ( ($generated@@267 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@143) ($generated@@278 $generated@@292)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) ($generated@@138 $generated@@139)) (= $generated@@292 ($generated@@137 $generated@@293)))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@278 $generated@@292))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@139)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@68) (= (type $generated@@298) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@270 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@78 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@270 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@80 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@83 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@80 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@85 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@80 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@85 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@85 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@80 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@85 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@85 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@83 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@80 $generated@@342 $generated@@2)) (= ($generated@@175 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@85 $generated@@341 $generated@@343))) (<= ($generated ($generated@@85 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@85 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@175 $generated@@341))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@139) ($generated@@236 $generated@@344 $generated@@243)) (and (= ($generated@@294 ($generated@@142 $generated@@143 $generated@@344)) $generated@@344) ($generated@@155 ($generated@@142 $generated@@143 $generated@@344) $generated@@243)))
 :pattern ( ($generated@@236 $generated@@344 $generated@@243))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) ($generated@@138 $generated@@139))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@347) $generated@@143) (= (type $generated@@348) $generated@@143)) (and ($generated@@278 $generated@@347) ($generated@@278 $generated@@348))) (= ($generated@@248 $generated@@347 $generated@@348) ($generated@@280 ($generated@@345 $generated@@347) ($generated@@345 $generated@@348))))
 :pattern ( ($generated@@248 $generated@@347 $generated@@348) ($generated@@278 $generated@@347))
 :pattern ( ($generated@@248 $generated@@347 $generated@@348) ($generated@@278 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@309 (type $generated@@349))))
(let (($generated@@351 ($generated@@308 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@307 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@306 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@305 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@309 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@80 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@309 (type $generated@@356))))
(let (($generated@@358 ($generated@@308 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@307 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@306 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@85 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@327 (type $generated@@360))))
(let (($generated@@362 ($generated@@326 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@325 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@324 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@323 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@327 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@80 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@327 (type $generated@@367))))
(let (($generated@@369 ($generated@@326 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@325 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@324 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@85 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@80 $generated@@139 $generated@@2)) (= (type $generated@@372) $generated@@68)) (= ($generated@@155 $generated@@371 ($generated@@174 $generated@@372)) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@139) (< 0 ($generated ($generated@@85 $generated@@371 $generated@@373)))) ($generated@@236 $generated@@373 $generated@@372))
 :pattern ( ($generated@@85 $generated@@371 $generated@@373))
))))
 :pattern ( ($generated@@155 $generated@@371 ($generated@@174 $generated@@372)))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@68)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) ($generated@@138 $generated@@139)) (= ($generated@@155 ($generated@@137 $generated@@376) $generated@@243) ($generated@@155 $generated@@376 ($generated@@374 $generated@@243))))
 :pattern ( ($generated@@155 ($generated@@137 $generated@@376) $generated@@243))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@80 $generated@@139 $generated@@4)) (= (type $generated@@378) $generated@@68)) (= (type $generated@@379) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@377 ($generated@@251 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@139) ($generated@@0 ($generated@@85 $generated@@377 $generated@@380))) ($generated@@270 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@85 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@78 $generated@@377 ($generated@@251 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@80 $generated@@139 $generated@@4)) (= (type $generated@@382) $generated@@68)) (= (type $generated@@383) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@381 ($generated@@256 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@139) ($generated@@0 ($generated@@85 $generated@@381 $generated@@384))) ($generated@@270 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@85 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@78 $generated@@381 ($generated@@256 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(= ($generated ($generated@@85 ($generated@@300 $generated@@386) $generated@@385)) 0))
 :pattern ( (let (($generated@@386 (type $generated@@385)))
($generated@@85 ($generated@@300 $generated@@386) $generated@@385)))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@80 $generated@@139 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@309 (type $generated@@390))))
(let (($generated@@392 ($generated@@308 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@80 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@307 $generated@@139 $generated@@139)) (= (type $generated@@394) $generated@@139)) (= ($generated@@0 ($generated@@85 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@85 ($generated@@305 $generated@@393) ($generated@@165 ($generated@@142 $generated@@143 $generated@@394)))) (= ($generated@@85 ($generated@@388 $generated@@393) ($generated@@165 ($generated@@142 $generated@@143 $generated@@394))) ($generated@@166 ($generated@@142 $generated@@143 $generated@@394))))))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@80 $generated@@139 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@327 (type $generated@@398))))
(let (($generated@@400 ($generated@@326 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@80 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@325 $generated@@139 $generated@@139)) (= (type $generated@@402) $generated@@139)) (= ($generated@@0 ($generated@@85 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@85 ($generated@@323 $generated@@401) ($generated@@165 ($generated@@142 $generated@@143 $generated@@402)))) (= ($generated@@85 ($generated@@396 $generated@@401) ($generated@@165 ($generated@@142 $generated@@143 $generated@@402))) ($generated@@166 ($generated@@142 $generated@@143 $generated@@402))))))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@308 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@307 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@85 ($generated@@353 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@85 ($generated@@305 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@85 ($generated@@388 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@403) $generated@@407))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@85 ($generated@@353 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@326 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@325 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@85 ($generated@@364 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@85 ($generated@@323 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@85 ($generated@@396 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@408) $generated@@412))
 :pattern ( ($generated@@85 ($generated@@396 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@85 ($generated@@364 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@68)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@307 $generated@@139 $generated@@139)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@139) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@416) $generated@@420))) (and ($generated@@270 ($generated@@85 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@270 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@78 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@68)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@325 $generated@@139 $generated@@139)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) $generated@@68)) (= (type $generated@@427) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@139) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@424) $generated@@428))) (and ($generated@@270 ($generated@@85 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@270 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@85 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@78 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@144 (type $generated@@429))))
 (=> (and (and (= (type $generated@@429) ($generated@@138 $generated@@431)) (= (type $generated@@430) ($generated@@138 $generated@@431))) ($generated@@280 $generated@@429 $generated@@430)) (= $generated@@429 $generated@@430)))
 :pattern ( ($generated@@280 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@143) ($generated@@155 $generated@@432 $generated@@243)) (or ($generated@@267 $generated@@432) ($generated@@278 $generated@@432)))
 :pattern ( ($generated@@278 $generated@@432) ($generated@@155 $generated@@432 $generated@@243))
 :pattern ( ($generated@@267 $generated@@432) ($generated@@155 $generated@@432 $generated@@243))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@80 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@323 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@323 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@364 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@364 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@395 $generated@@441) ($generated@@433 $generated@@139))))))
 :pattern ( ($generated@@395 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@309 (type $generated@@444))))
(let (($generated@@446 ($generated@@308 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@307 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@306 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@139) (= (type $generated@@448) $generated@@139)) ($generated@@0 ($generated@@85 ($generated@@387 $generated@@444) ($generated@@294 ($generated@@235 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@387 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@327 (type $generated@@449))))
(let (($generated@@451 ($generated@@326 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@325 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@324 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@139) (= (type $generated@@453) $generated@@139)) ($generated@@0 ($generated@@85 ($generated@@395 $generated@@449) ($generated@@294 ($generated@@235 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@395 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@139) ($generated@@236 $generated@@454 $generated@@46)) (and (= ($generated@@294 ($generated@@142 $generated@@2 $generated@@454)) $generated@@454) ($generated@@155 ($generated@@142 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@139) ($generated@@236 $generated@@455 $generated@@47)) (and (= ($generated@@294 ($generated@@142 $generated@@3 $generated@@455)) $generated@@455) ($generated@@155 ($generated@@142 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@139) ($generated@@236 $generated@@456 $generated@@44)) (and (= ($generated@@294 ($generated@@142 $generated@@4 $generated@@456)) $generated@@456) ($generated@@155 ($generated@@142 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@139) ($generated@@236 $generated@@458 $generated@@45)) (and (= ($generated@@294 ($generated@@142 $generated@@457 $generated@@458)) $generated@@458) ($generated@@155 ($generated@@142 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@68) (= ($generated@@236 ($generated@@294 $generated@@459) $generated@@460) ($generated@@155 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@236 ($generated@@294 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@83 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@80 $generated@@462 $generated@@2)) (<= 0 ($generated@@299 $generated@@461))))
 :pattern ( ($generated@@299 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@144 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@138 $generated@@464)) (<= 0 ($generated@@140 $generated@@463))))
 :pattern ( ($generated@@140 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@465) ($generated@@138 $generated@@139)) (= (type $generated@@466) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@244 $generated@@466)) (= ($generated@@78 ($generated@@137 $generated@@465) $generated@@243 $generated@@466) ($generated@@78 $generated@@465 ($generated@@374 $generated@@243) $generated@@466)))
 :pattern ( ($generated@@78 ($generated@@137 $generated@@465) $generated@@243 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@68) (= (type $generated@@470) $generated@@68)) (= ($generated@@467 ($generated@@413 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@413 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@68)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@68) (= (type $generated@@474) $generated@@68)) (= ($generated@@471 ($generated@@413 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@413 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@68)) (= ($generated@@76 ($generated@@413 $generated@@475 $generated@@476)) $generated@@58))
 :pattern ( ($generated@@413 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@68)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@68) (= (type $generated@@480) $generated@@68)) (= ($generated@@477 ($generated@@421 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@421 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@68)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@68)) (= ($generated@@481 ($generated@@421 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@421 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@76 ($generated@@421 $generated@@485 $generated@@486)) $generated@@59))
 :pattern ( ($generated@@421 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@139) (= (type $generated@@488) $generated@@139)) (= ($generated@@171 ($generated@@235 $generated@@487 $generated@@488)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@158 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@158 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@493 ($generated@@158 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@158 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@139) (= (type $generated@@498) $generated@@139)) (= ($generated@@165 ($generated@@235 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@235 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@139) (= (type $generated@@500) $generated@@139)) (= ($generated@@166 ($generated@@235 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@235 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@138 $generated@@139)) (= (type $generated@@502) $generated@@68)) (= (type $generated@@503) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@501 ($generated@@374 $generated@@502) $generated@@503) (forall (($generated@@504 Int) ) (!  (=> (and (<= 0 $generated@@504) (< $generated@@504 ($generated@@140 $generated@@501))) ($generated@@270 ($generated@@136 $generated@@501 $generated@@504) $generated@@502 $generated@@503))
 :pattern ( ($generated@@136 $generated@@501 $generated@@504))
))))
 :pattern ( ($generated@@78 $generated@@501 ($generated@@374 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@506 Int) ) (! (= ($generated@@505 ($generated@@79 $generated@@506)) $generated@@506)
 :pattern ( ($generated@@79 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@68) (= ($generated@@507 ($generated@@251 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@251 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@68) (= ($generated@@76 ($generated@@251 $generated@@510)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@511 ($generated@@256 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@256 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@76 ($generated@@256 $generated@@514)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@515 ($generated@@174 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@174 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@76 ($generated@@174 $generated@@518)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@519 ($generated@@374 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@374 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@76 ($generated@@374 $generated@@522)) $generated@@57))
 :pattern ( ($generated@@374 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) ($generated@@138 $generated@@139)) (= ($generated@@171 ($generated@@137 $generated@@523)) $generated@@65))
 :pattern ( ($generated@@137 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) ($generated@@138 $generated@@139)) (= ($generated@@345 ($generated@@137 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@137 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= ($generated@@142 $generated@@526 ($generated@@294 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@294 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@307 $generated@@139 $generated@@139)) (= (type $generated@@528) $generated@@68)) (= (type $generated@@529) $generated@@68)) (= ($generated@@155 $generated@@527 ($generated@@413 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@139) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@527) $generated@@530))) (and ($generated@@236 ($generated@@85 ($generated@@388 $generated@@527) $generated@@530) $generated@@529) ($generated@@236 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@527) $generated@@530))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@155 $generated@@527 ($generated@@413 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@325 $generated@@139 $generated@@139)) (= (type $generated@@532) $generated@@68)) (= (type $generated@@533) $generated@@68)) (= ($generated@@155 $generated@@531 ($generated@@421 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@139) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@531) $generated@@534))) (and ($generated@@236 ($generated@@85 ($generated@@396 $generated@@531) $generated@@534) $generated@@533) ($generated@@236 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@85 ($generated@@396 $generated@@531) $generated@@534))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@155 $generated@@531 ($generated@@421 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@139) (= (type $generated@@537) $generated@@139)) (< ($generated@@535 $generated@@536) ($generated@@141 ($generated@@235 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@235 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@139) (= (type $generated@@539) $generated@@139)) (< ($generated@@535 $generated@@539) ($generated@@141 ($generated@@235 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@235 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@139) (= (type $generated@@541) $generated@@68)) (= (type $generated@@542) $generated@@68)) ($generated@@236 $generated@@540 ($generated@@413 $generated@@541 $generated@@542))) (and (= ($generated@@294 ($generated@@142 ($generated@@307 $generated@@139 $generated@@139) $generated@@540)) $generated@@540) ($generated@@155 ($generated@@142 ($generated@@307 $generated@@139 $generated@@139) $generated@@540) ($generated@@413 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@236 $generated@@540 ($generated@@413 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@139) (= (type $generated@@544) $generated@@68)) (= (type $generated@@545) $generated@@68)) ($generated@@236 $generated@@543 ($generated@@421 $generated@@544 $generated@@545))) (and (= ($generated@@294 ($generated@@142 ($generated@@325 $generated@@139 $generated@@139) $generated@@543)) $generated@@543) ($generated@@155 ($generated@@142 ($generated@@325 $generated@@139 $generated@@139) $generated@@543) ($generated@@421 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@236 $generated@@543 ($generated@@421 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@68) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) $generated@@139)) ($generated@@236 $generated@@548 ($generated@@158 $generated@@546 $generated@@547))) (and (= ($generated@@294 ($generated@@142 $generated@@143 $generated@@548)) $generated@@548) ($generated@@155 ($generated@@142 $generated@@143 $generated@@548) ($generated@@158 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@236 $generated@@548 ($generated@@158 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) ($generated@@138 $generated@@139)) (< ($generated@@549 $generated@@550) ($generated@@141 ($generated@@137 $generated@@550))))
 :pattern ( ($generated@@137 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (not ($generated@@0 ($generated@@85 ($generated@@433 $generated@@552) $generated@@551))))
 :pattern ( (let (($generated@@552 (type $generated@@551)))
($generated@@85 ($generated@@433 $generated@@552) $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@73)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@68) (= (type $generated@@556) $generated@@68)) (and (= ($generated@@76 ($generated@@158 $generated@@555 $generated@@556)) $generated@@62) (= ($generated@@553 ($generated@@158 $generated@@555 $generated@@556)) $generated@@66)))
 :pattern ( ($generated@@158 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@143) (= ($generated@@535 ($generated@@294 $generated@@557)) ($generated@@141 $generated@@557)))
 :pattern ( ($generated@@535 ($generated@@294 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@139) ($generated@@236 $generated@@558 ($generated@@79 0))) (and (= ($generated@@294 ($generated@@142 $generated@@2 $generated@@558)) $generated@@558) ($generated@@155 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@558) ($generated@@79 0))))
 :pattern ( ($generated@@236 $generated@@558 ($generated@@79 0)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@139) (= (type $generated@@560) $generated@@68)) ($generated@@236 $generated@@559 ($generated@@251 $generated@@560))) (and (= ($generated@@294 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@559)) $generated@@559) ($generated@@155 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@559) ($generated@@251 $generated@@560))))
 :pattern ( ($generated@@236 $generated@@559 ($generated@@251 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@139) (= (type $generated@@562) $generated@@68)) ($generated@@236 $generated@@561 ($generated@@256 $generated@@562))) (and (= ($generated@@294 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@561)) $generated@@561) ($generated@@155 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@561) ($generated@@256 $generated@@562))))
 :pattern ( ($generated@@236 $generated@@561 ($generated@@256 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@139) (= (type $generated@@564) $generated@@68)) ($generated@@236 $generated@@563 ($generated@@174 $generated@@564))) (and (= ($generated@@294 ($generated@@142 ($generated@@80 $generated@@139 $generated@@2) $generated@@563)) $generated@@563) ($generated@@155 ($generated@@142 ($generated@@80 $generated@@139 $generated@@2) $generated@@563) ($generated@@174 $generated@@564))))
 :pattern ( ($generated@@236 $generated@@563 ($generated@@174 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@139) (= (type $generated@@566) $generated@@68)) ($generated@@236 $generated@@565 ($generated@@374 $generated@@566))) (and (= ($generated@@294 ($generated@@142 ($generated@@138 $generated@@139) $generated@@565)) $generated@@565) ($generated@@155 ($generated@@142 ($generated@@138 $generated@@139) $generated@@565) ($generated@@374 $generated@@566))))
 :pattern ( ($generated@@236 $generated@@565 ($generated@@374 $generated@@566)))
)))
(assert (= ($generated@@76 $generated@@243) $generated@@64))
(assert (= ($generated@@553 $generated@@243) $generated@@67))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@80 $generated@@139 $generated@@2)) (= (type $generated@@568) $generated@@68)) (= (type $generated@@569) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@567 ($generated@@174 $generated@@568) $generated@@569) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@139) (< 0 ($generated ($generated@@85 $generated@@567 $generated@@570)))) ($generated@@270 $generated@@570 $generated@@568 $generated@@569))
 :pattern ( ($generated@@85 $generated@@567 $generated@@570))
))))
 :pattern ( ($generated@@78 $generated@@567 ($generated@@174 $generated@@568) $generated@@569))
)))
(assert (= $generated@@172 ($generated@@263 $generated@@172)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@143) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@573) (and ($generated@@157 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@68) ($generated@@78 $generated@@571 ($generated@@158 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@78 $generated@@571 ($generated@@158 $generated@@572 $generated@@574) $generated@@573))
))))) ($generated@@270 ($generated@@165 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@270 ($generated@@165 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@143) (= (type $generated@@576) $generated@@68)) (= (type $generated@@577) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@577) (and ($generated@@157 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@68) ($generated@@78 $generated@@575 ($generated@@158 $generated@@578 $generated@@576) $generated@@577))
 :pattern ( ($generated@@78 $generated@@575 ($generated@@158 $generated@@578 $generated@@576) $generated@@577))
))))) ($generated@@270 ($generated@@166 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@270 ($generated@@166 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@139) (= (type $generated@@580) $generated@@139)) (= ($generated@@235 ($generated@@263 $generated@@579) ($generated@@263 $generated@@580)) ($generated@@263 ($generated@@235 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@235 ($generated@@263 $generated@@579) ($generated@@263 $generated@@580)))
)))
(assert (forall (($generated@@581 Int) ) (! (= ($generated@@294 ($generated@@8 ($generated@@261 $generated@@581))) ($generated@@263 ($generated@@294 ($generated@@8 $generated@@581))))
 :pattern ( ($generated@@294 ($generated@@8 ($generated@@261 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) ($generated@@138 $generated@@139)) (= ($generated@@137 ($generated@@263 $generated@@582)) ($generated@@263 ($generated@@137 $generated@@582))))
 :pattern ( ($generated@@137 ($generated@@263 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (= ($generated@@294 ($generated@@263 $generated@@583)) ($generated@@263 ($generated@@294 $generated@@583)))
 :pattern ( ($generated@@294 ($generated@@263 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@144 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@138 $generated@@585)) (= ($generated@@140 $generated@@584) 0)) (= $generated@@584 ($generated@@288 $generated@@585))))
 :pattern ( ($generated@@140 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@587)))
 (=> (and (and (= (type $generated@@586) ($generated@@80 $generated@@589 $generated@@2)) (= (type $generated@@588) $generated@@2)) (<= 0 ($generated $generated@@588))) (= ($generated@@299 ($generated@@86 $generated@@586 $generated@@587 $generated@@588)) (+ (- ($generated@@299 $generated@@586) ($generated ($generated@@85 $generated@@586 $generated@@587))) ($generated $generated@@588)))))
 :pattern ( ($generated@@299 ($generated@@86 $generated@@586 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@143) (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@591) (and ($generated@@278 $generated@@590) ($generated@@78 $generated@@590 $generated@@243 $generated@@591)))) ($generated@@78 ($generated@@345 $generated@@590) ($generated@@374 $generated@@243) $generated@@591))
 :pattern ( ($generated@@78 ($generated@@345 $generated@@590) ($generated@@374 $generated@@243) $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@593) $generated@@2)) ($generated@@78 $generated@@593 $generated@@46 $generated@@592))
 :pattern ( ($generated@@78 $generated@@593 $generated@@46 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@595) $generated@@3)) ($generated@@78 $generated@@595 $generated@@47 $generated@@594))
 :pattern ( ($generated@@78 $generated@@595 $generated@@47 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@597) $generated@@4)) ($generated@@78 $generated@@597 $generated@@44 $generated@@596))
 :pattern ( ($generated@@78 $generated@@597 $generated@@44 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@599) $generated@@457)) ($generated@@78 $generated@@599 $generated@@45 $generated@@598))
 :pattern ( ($generated@@78 $generated@@599 $generated@@45 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@601) $generated@@139)) ($generated@@78 $generated@@601 $generated@@48 $generated@@600))
 :pattern ( ($generated@@78 $generated@@601 $generated@@48 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@138 $generated@@139)) (= (type $generated@@603) $generated@@68)) (= ($generated@@155 $generated@@602 ($generated@@374 $generated@@603)) (forall (($generated@@604 Int) ) (!  (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@140 $generated@@602))) ($generated@@236 ($generated@@136 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@136 $generated@@602 $generated@@604))
))))
 :pattern ( ($generated@@155 $generated@@602 ($generated@@374 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 Int) ) (!  (=> (= (type $generated@@605) ($generated@@138 $generated@@139)) (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@140 $generated@@605))) (< ($generated@@141 ($generated@@142 $generated@@143 ($generated@@136 $generated@@605 $generated@@606))) ($generated@@549 $generated@@605))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@143 ($generated@@136 $generated@@605 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@307 $generated@@139 $generated@@139)) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) $generated@@68)) ($generated@@155 $generated@@607 ($generated@@413 $generated@@608 $generated@@609))) (and (and ($generated@@155 ($generated@@305 $generated@@607) ($generated@@251 $generated@@608)) ($generated@@155 ($generated@@353 $generated@@607) ($generated@@251 $generated@@609))) ($generated@@155 ($generated@@387 $generated@@607) ($generated@@251 ($generated@@158 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@155 $generated@@607 ($generated@@413 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@325 $generated@@139 $generated@@139)) (= (type $generated@@611) $generated@@68)) (= (type $generated@@612) $generated@@68)) ($generated@@155 $generated@@610 ($generated@@421 $generated@@611 $generated@@612))) (and (and ($generated@@155 ($generated@@323 $generated@@610) ($generated@@256 $generated@@611)) ($generated@@155 ($generated@@364 $generated@@610) ($generated@@256 $generated@@612))) ($generated@@155 ($generated@@395 $generated@@610) ($generated@@256 ($generated@@158 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@155 $generated@@610 ($generated@@421 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@2) ($generated@@155 $generated@@613 $generated@@46))
 :pattern ( ($generated@@155 $generated@@613 $generated@@46))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@3) ($generated@@155 $generated@@614 $generated@@47))
 :pattern ( ($generated@@155 $generated@@614 $generated@@47))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@4) ($generated@@155 $generated@@615 $generated@@44))
 :pattern ( ($generated@@155 $generated@@615 $generated@@44))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@457) ($generated@@155 $generated@@616 $generated@@45))
 :pattern ( ($generated@@155 $generated@@616 $generated@@45))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@139) ($generated@@155 $generated@@617 $generated@@48))
 :pattern ( ($generated@@155 $generated@@617 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 (T@U) Bool)
(declare-fun $generated@@623 () Int)
(assert  (and (and (and (= (type $generated@@618) ($generated@@181 $generated@@81 $generated@@4)) (= (type $generated@@619) $generated@@81)) (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@621) ($generated@@138 $generated@@139))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@624  (=> (and (= $generated@@618 ($generated@@180 $generated@@619 $generated@@620 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (not ($generated@@248 ($generated@@142 $generated@@143 ($generated@@136 $generated@@621 ($generated@@261 0))) ($generated@@137 $generated@@621))))))
(let (($generated@@625  (=> (and ($generated@@244 $generated@@620) ($generated@@622 $generated@@620)) (=> (and (and (and ($generated@@155 $generated@@621 ($generated@@374 $generated@@243)) ($generated@@78 $generated@@621 ($generated@@374 $generated@@243) $generated@@620)) (= 1 $generated@@623)) (and (not ($generated@@280 $generated@@621 ($generated@@288 $generated@@139))) (= (ControlFlow 0 3) 2))) $generated@@624))))
$generated@@625)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@U) Int)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@U T@U) T@U)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@337 (T@T T@U) T@U)
(declare-fun $generated@@344 (T@U T@U) Bool)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@386 (T@U) Bool)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@445 (T@T) T@U)
(declare-fun $generated@@469 () T@T)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@514 (T@U Int) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@624 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@136 $generated@@141)) $generated@@138)
 :pattern ( ($generated@@136 $generated@@141))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@137 $generated@@142)) $generated@@139)
 :pattern ( ($generated@@137 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) ($generated@@80 $generated@@138 $generated@@2)) (= (type $generated@@144) $generated@@139)) (> ($generated ($generated@@85 $generated@@143 ($generated@@136 $generated@@144))) 0)) (< ($generated@@140 $generated@@144) ($generated@@140 ($generated@@137 $generated@@143))))
 :pattern ( ($generated@@85 $generated@@143 ($generated@@136 $generated@@144)) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@79 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@79 0)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@148 $generated@@149 $generated@@150)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@68) (= (type $generated@@152) $generated@@68)) (= (type $generated@@153) $generated@@139)) ($generated@@145 $generated@@153 ($generated@@148 $generated@@151 $generated@@152))) ($generated@@147 $generated@@153))
 :pattern ( ($generated@@147 $generated@@153) ($generated@@145 $generated@@153 ($generated@@148 $generated@@151 $generated@@152)))
)))
(assert  (and (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@138)
 :pattern ( ($generated@@155 $generated@@157))
)) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@138)
 :pattern ( ($generated@@156 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@139) (= (type $generated@@160) $generated@@139)) true) (= ($generated@@154 $generated@@159 $generated@@160)  (and (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)) (= ($generated@@156 $generated@@159) ($generated@@156 $generated@@160)))))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163))
)) (= (type $generated@@162) $generated@@139)))
(assert (= ($generated@@161 $generated@@162) $generated@@63))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@68)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@80 $generated@@138 $generated@@2)) (= (type $generated@@168) $generated@@68)) ($generated@@145 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@145 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@81 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@71 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@81) (= (type $generated@@219) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@220) ($generated@@70 $generated@@4))) (= (type $generated@@222) $generated@@81)) (= (type $generated@@223) ($generated@@70 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@139)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@68) (= (type $generated@@230) $generated@@68)) (= (type $generated@@231) $generated@@138)) (= (type $generated@@232) $generated@@138)) (= ($generated@@145 ($generated@@225 $generated@@231 $generated@@232) ($generated@@148 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@145 ($generated@@225 $generated@@231 $generated@@232) ($generated@@148 $generated@@229 $generated@@230)))
)))
(assert (= (type $generated@@233) $generated@@68))
(assert ($generated@@145 $generated@@162 $generated@@233))
(assert (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@234 $generated@@235)) ($generated@@78 $generated@@162 $generated@@233 $generated@@235))
 :pattern ( ($generated@@78 $generated@@162 $generated@@233 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@139) (= (type $generated@@237) $generated@@139)) (= ($generated@@154 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@154 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@139) (= (type $generated@@240) $generated@@139)) (= ($generated@@238 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@238 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@68)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@80 $generated@@138 $generated@@4)) (= (type $generated@@244) $generated@@68)) (= ($generated@@145 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@138) ($generated@@0 ($generated@@85 $generated@@243 $generated@@245))) ($generated@@226 $generated@@245 $generated@@244))
 :pattern ( ($generated@@85 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@145 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@68)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@80 $generated@@138 $generated@@4)) (= (type $generated@@249) $generated@@68)) (= ($generated@@145 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@138) ($generated@@0 ($generated@@85 $generated@@248 $generated@@250))) ($generated@@226 $generated@@250 $generated@@249))
 :pattern ( ($generated@@85 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@145 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) $generated@@139) (= (type $generated@@257) $generated@@139)) (and ($generated@@255 $generated@@256) ($generated@@255 $generated@@257))) (= ($generated@@238 $generated@@256 $generated@@257) true))
 :pattern ( ($generated@@238 $generated@@256 $generated@@257) ($generated@@255 $generated@@256))
 :pattern ( ($generated@@238 $generated@@256 $generated@@257) ($generated@@255 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@68) (= (type $generated@@260) $generated@@68)) (= (type $generated@@261) $generated@@138)) (= (type $generated@@262) $generated@@138)) (= (type $generated@@263) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@234 $generated@@263)) (= ($generated@@78 ($generated@@225 $generated@@261 $generated@@262) ($generated@@148 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@78 ($generated@@225 $generated@@261 $generated@@262) ($generated@@148 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@139) (= ($generated@@147 $generated@@264) (= ($generated@@161 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@139) (= ($generated@@255 $generated@@265) (= ($generated@@161 $generated@@265) $generated@@63)))
 :pattern ( ($generated@@255 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@139) (= ($generated@@266 $generated@@267) (= ($generated@@161 $generated@@267) $generated@@65)))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@139) ($generated@@147 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@138) (= (type $generated@@270) $generated@@138)) (= $generated@@268 ($generated@@225 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@147 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 17)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@139) ($generated@@255 $generated@@279)) (= $generated@@279 $generated@@162))
 :pattern ( ($generated@@255 $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 (type $generated@@283)))
(= (type ($generated@@281 $generated@@282 $generated@@283)) ($generated@@80 $generated@@284 $generated@@2)))
 :pattern ( ($generated@@281 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
 (=> (= (type $generated@@285) ($generated@@80 $generated@@287 $generated@@2)) (= ($generated@@280 ($generated@@281 $generated@@285 $generated@@286)) (+ ($generated@@280 $generated@@285) 1))))
 :pattern ( ($generated@@280 ($generated@@281 $generated@@285 $generated@@286)))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@139) ($generated@@266 $generated@@288)) (exists (($generated@@289 T@U) ) (!  (and (= (type $generated@@289) ($generated@@80 $generated@@138 $generated@@2)) (= $generated@@288 ($generated@@137 $generated@@289)))
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
)))
 :pattern ( ($generated@@266 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@68) (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@258 ($generated@@136 $generated@@290) $generated@@291 $generated@@292) ($generated@@78 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@258 ($generated@@136 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@80 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@83 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@80 $generated@@296 $generated@@2)) (and (= (= ($generated@@280 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@280 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@85 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@280 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 18)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@80 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@85 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@85 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@80 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@85 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@85 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@83 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@80 $generated@@335 $generated@@2)) (= ($generated@@165 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@85 $generated@@334 $generated@@336))) (<= ($generated ($generated@@85 $generated@@334 $generated@@336)) ($generated@@280 $generated@@334))))
 :pattern ( ($generated@@85 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@165 $generated@@334))
)))
(assert (forall (($generated@@338 T@T) ($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@138) ($generated@@226 $generated@@340 $generated@@233)) (and (= ($generated@@136 ($generated@@337 $generated@@139 $generated@@340)) $generated@@340) ($generated@@145 ($generated@@337 $generated@@139 $generated@@340) $generated@@233)))
 :pattern ( ($generated@@226 $generated@@340 $generated@@233))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (! (let (($generated@@343 (type $generated@@342)))
 (=> (= (type $generated@@341) ($generated@@80 $generated@@343 $generated@@2)) (= ($generated ($generated@@85 ($generated@@281 $generated@@341 $generated@@342) $generated@@342)) (+ ($generated ($generated@@85 $generated@@341 $generated@@342)) 1))))
 :pattern ( ($generated@@281 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) ($generated@@80 $generated@@138 $generated@@2))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@347) $generated@@139) (= (type $generated@@348) $generated@@139)) (and ($generated@@266 $generated@@347) ($generated@@266 $generated@@348))) (= ($generated@@238 $generated@@347 $generated@@348) ($generated@@344 ($generated@@345 $generated@@347) ($generated@@345 $generated@@348))))
 :pattern ( ($generated@@238 $generated@@347 $generated@@348) ($generated@@266 $generated@@347))
 :pattern ( ($generated@@238 $generated@@347 $generated@@348) ($generated@@266 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@350)))
 (=> (and (and (= (type $generated@@349) ($generated@@80 $generated@@352 $generated@@2)) (= (type $generated@@351) $generated@@352)) (< 0 ($generated ($generated@@85 $generated@@349 $generated@@351)))) (< 0 ($generated ($generated@@85 ($generated@@281 $generated@@349 $generated@@350) $generated@@351)))))
 :pattern ( ($generated@@281 $generated@@349 $generated@@350) ($generated@@85 $generated@@349 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@302 (type $generated@@353))))
(let (($generated@@355 ($generated@@301 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@300 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@299 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@85 ($generated@@298 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@298 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@302 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@80 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@302 (type $generated@@360))))
(let (($generated@@362 ($generated@@301 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@300 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@299 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@320 (type $generated@@364))))
(let (($generated@@366 ($generated@@319 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@318 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@317 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@316 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@320 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@80 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@320 (type $generated@@371))))
(let (($generated@@373 ($generated@@319 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@318 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@317 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@85 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@376)))
 (=> (and (= (type $generated@@375) ($generated@@80 $generated@@378 $generated@@2)) (= (type $generated@@377) $generated@@378)) (= (< 0 ($generated ($generated@@85 ($generated@@281 $generated@@375 $generated@@376) $generated@@377)))  (or (= $generated@@377 $generated@@376) (< 0 ($generated ($generated@@85 $generated@@375 $generated@@377)))))))
 :pattern ( ($generated@@85 ($generated@@281 $generated@@375 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@80 $generated@@138 $generated@@2)) (= (type $generated@@380) $generated@@68)) (= ($generated@@145 $generated@@379 ($generated@@164 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@138) (< 0 ($generated ($generated@@85 $generated@@379 $generated@@381)))) ($generated@@226 $generated@@381 $generated@@380))
 :pattern ( ($generated@@85 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@145 $generated@@379 ($generated@@164 $generated@@380)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@83 (type $generated@@382))))
 (=> (and (= (type $generated@@382) ($generated@@80 $generated@@384 $generated@@2)) (= (type $generated@@383) ($generated@@80 $generated@@384 $generated@@2))) (= ($generated@@344 $generated@@382 $generated@@383) (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@384) (= ($generated ($generated@@85 $generated@@382 $generated@@385)) ($generated ($generated@@85 $generated@@383 $generated@@385))))
 :pattern ( ($generated@@85 $generated@@382 $generated@@385))
 :pattern ( ($generated@@85 $generated@@383 $generated@@385))
)))))
 :pattern ( ($generated@@344 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@139) ($generated@@386 $generated@@387)) (or ($generated@@255 $generated@@387) ($generated@@266 $generated@@387)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (= (type $generated@@388) ($generated@@80 $generated@@138 $generated@@2)) (= ($generated@@145 ($generated@@137 $generated@@388) $generated@@233) ($generated@@145 $generated@@388 ($generated@@164 $generated@@233))))
 :pattern ( ($generated@@145 ($generated@@137 $generated@@388) $generated@@233))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@80 $generated@@138 $generated@@4)) (= (type $generated@@390) $generated@@68)) (= (type $generated@@391) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@389 ($generated@@241 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@138) ($generated@@0 ($generated@@85 $generated@@389 $generated@@392))) ($generated@@258 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@85 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@78 $generated@@389 ($generated@@241 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@80 $generated@@138 $generated@@4)) (= (type $generated@@394) $generated@@68)) (= (type $generated@@395) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@393 ($generated@@246 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@138) ($generated@@0 ($generated@@85 $generated@@393 $generated@@396))) ($generated@@258 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@85 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@78 $generated@@393 ($generated@@246 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(= ($generated ($generated@@85 ($generated@@293 $generated@@398) $generated@@397)) 0))
 :pattern ( (let (($generated@@398 (type $generated@@397)))
($generated@@85 ($generated@@293 $generated@@398) $generated@@397)))
)))
(assert  (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@401)) ($generated@@80 $generated@@138 $generated@@4))
 :pattern ( ($generated@@399 $generated@@401))
)) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@302 (type $generated@@402))))
(let (($generated@@404 ($generated@@301 (type $generated@@402))))
(= (type ($generated@@400 $generated@@402)) ($generated@@80 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@400 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@300 $generated@@138 $generated@@138)) (= (type $generated@@406) $generated@@138)) (= ($generated@@0 ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@85 ($generated@@298 $generated@@405) ($generated@@155 ($generated@@337 $generated@@139 $generated@@406)))) (= ($generated@@85 ($generated@@400 $generated@@405) ($generated@@155 ($generated@@337 $generated@@139 $generated@@406))) ($generated@@156 ($generated@@337 $generated@@139 $generated@@406))))))
 :pattern ( ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@80 $generated@@138 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@320 (type $generated@@410))))
(let (($generated@@412 ($generated@@319 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@80 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@318 $generated@@138 $generated@@138)) (= (type $generated@@414) $generated@@138)) (= ($generated@@0 ($generated@@85 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@85 ($generated@@316 $generated@@413) ($generated@@155 ($generated@@337 $generated@@139 $generated@@414)))) (= ($generated@@85 ($generated@@408 $generated@@413) ($generated@@155 ($generated@@337 $generated@@139 $generated@@414))) ($generated@@156 ($generated@@337 $generated@@139 $generated@@414))))))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@301 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@300 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@85 ($generated@@357 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@85 ($generated@@298 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@85 ($generated@@400 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@85 ($generated@@298 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@319 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@318 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@85 ($generated@@368 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@85 ($generated@@316 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@85 ($generated@@408 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@420) $generated@@424))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@68)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@300 $generated@@138 $generated@@138)) (= (type $generated@@429) $generated@@68)) (= (type $generated@@430) $generated@@68)) (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@138) ($generated@@0 ($generated@@85 ($generated@@298 $generated@@428) $generated@@432))) (and ($generated@@258 ($generated@@85 ($generated@@400 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@258 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@428) $generated@@432))
 :pattern ( ($generated@@85 ($generated@@298 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@68)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@318 $generated@@138 $generated@@138)) (= (type $generated@@437) $generated@@68)) (= (type $generated@@438) $generated@@68)) (= (type $generated@@439) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@138) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@436) $generated@@440))) (and ($generated@@258 ($generated@@85 ($generated@@408 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@258 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@436) $generated@@440))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@78 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@83 (type $generated@@441))))
 (=> (and (and (= (type $generated@@441) ($generated@@80 $generated@@443 $generated@@2)) (= (type $generated@@442) ($generated@@80 $generated@@443 $generated@@2))) ($generated@@344 $generated@@441 $generated@@442)) (= $generated@@441 $generated@@442)))
 :pattern ( ($generated@@344 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@139) ($generated@@145 $generated@@444 $generated@@233)) (or ($generated@@255 $generated@@444) ($generated@@266 $generated@@444)))
 :pattern ( ($generated@@266 $generated@@444) ($generated@@145 $generated@@444 $generated@@233))
 :pattern ( ($generated@@255 $generated@@444) ($generated@@145 $generated@@444 $generated@@233))
)))
(assert (forall (($generated@@446 T@T) ) (! (= (type ($generated@@445 $generated@@446)) ($generated@@80 $generated@@446 $generated@@4))
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@320 (type $generated@@447))))
(let (($generated@@449 ($generated@@319 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@318 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@317 $generated@@449 $generated@@448)) (= ($generated@@316 $generated@@447) ($generated@@445 $generated@@449))))))
 :pattern ( ($generated@@316 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@320 (type $generated@@450))))
(let (($generated@@452 ($generated@@319 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@318 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@317 $generated@@452 $generated@@451)) (= ($generated@@368 $generated@@450) ($generated@@445 $generated@@451))))))
 :pattern ( ($generated@@368 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@320 (type $generated@@453))))
(let (($generated@@455 ($generated@@319 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@318 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@317 $generated@@455 $generated@@454)) (= ($generated@@407 $generated@@453) ($generated@@445 $generated@@138))))))
 :pattern ( ($generated@@407 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@302 (type $generated@@456))))
(let (($generated@@458 ($generated@@301 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@300 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@299 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@138) (= (type $generated@@460) $generated@@138)) ($generated@@0 ($generated@@85 ($generated@@399 $generated@@456) ($generated@@136 ($generated@@225 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@399 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@320 (type $generated@@461))))
(let (($generated@@463 ($generated@@319 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@318 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@317 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@138) (= (type $generated@@465) $generated@@138)) ($generated@@0 ($generated@@85 ($generated@@407 $generated@@461) ($generated@@136 ($generated@@225 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@407 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@138) ($generated@@226 $generated@@466 $generated@@46)) (and (= ($generated@@136 ($generated@@337 $generated@@2 $generated@@466)) $generated@@466) ($generated@@145 ($generated@@337 $generated@@2 $generated@@466) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@466 $generated@@46))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@138) ($generated@@226 $generated@@467 $generated@@47)) (and (= ($generated@@136 ($generated@@337 $generated@@3 $generated@@467)) $generated@@467) ($generated@@145 ($generated@@337 $generated@@3 $generated@@467) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@467 $generated@@47))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@138) ($generated@@226 $generated@@468 $generated@@44)) (and (= ($generated@@136 ($generated@@337 $generated@@4 $generated@@468)) $generated@@468) ($generated@@145 ($generated@@337 $generated@@4 $generated@@468) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@468 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@469) 20))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@138) ($generated@@226 $generated@@470 $generated@@45)) (and (= ($generated@@136 ($generated@@337 $generated@@469 $generated@@470)) $generated@@470) ($generated@@145 ($generated@@337 $generated@@469 $generated@@470) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@470 $generated@@45))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@68) (= ($generated@@226 ($generated@@136 $generated@@471) $generated@@472) ($generated@@145 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@226 ($generated@@136 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@83 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@80 $generated@@474 $generated@@2)) (<= 0 ($generated@@280 $generated@@473))))
 :pattern ( ($generated@@280 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@274 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@273 $generated@@476)) (<= 0 ($generated@@272 $generated@@475))))
 :pattern ( ($generated@@272 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@477) ($generated@@80 $generated@@138 $generated@@2)) (= (type $generated@@478) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@234 $generated@@478)) (= ($generated@@78 ($generated@@137 $generated@@477) $generated@@233 $generated@@478) ($generated@@78 $generated@@477 ($generated@@164 $generated@@233) $generated@@478)))
 :pattern ( ($generated@@78 ($generated@@137 $generated@@477) $generated@@233 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@68)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= ($generated@@479 ($generated@@425 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@425 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@68)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@483 ($generated@@425 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@425 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@76 ($generated@@425 $generated@@487 $generated@@488)) $generated@@58))
 :pattern ( ($generated@@425 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@433 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@433 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@493 ($generated@@433 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@433 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@76 ($generated@@433 $generated@@497 $generated@@498)) $generated@@59))
 :pattern ( ($generated@@433 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@138) (= (type $generated@@500) $generated@@138)) (= ($generated@@161 ($generated@@225 $generated@@499 $generated@@500)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@68)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@501 ($generated@@148 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@148 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@148 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@148 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@138) (= (type $generated@@510) $generated@@138)) (= ($generated@@155 ($generated@@225 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@225 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@138) (= (type $generated@@512) $generated@@138)) (= ($generated@@156 ($generated@@225 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@225 $generated@@511 $generated@@512))
)))
(assert  (and (forall (($generated@@515 T@U) ) (! (= (type ($generated@@513 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@515))
)) (forall (($generated@@516 T@U) ($generated@@517 Int) ) (! (let (($generated@@518 ($generated@@274 (type $generated@@516))))
(= (type ($generated@@514 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@514 $generated@@516 $generated@@517))
))))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@273 $generated@@138)) (= (type $generated@@520) $generated@@68)) (= (type $generated@@521) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@519 ($generated@@513 $generated@@520) $generated@@521) (forall (($generated@@522 Int) ) (!  (=> (and (<= 0 $generated@@522) (< $generated@@522 ($generated@@272 $generated@@519))) ($generated@@258 ($generated@@514 $generated@@519 $generated@@522) $generated@@520 $generated@@521))
 :pattern ( ($generated@@514 $generated@@519 $generated@@522))
))))
 :pattern ( ($generated@@78 $generated@@519 ($generated@@513 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@524 Int) ) (! (= ($generated@@523 ($generated@@79 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@79 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@525 ($generated@@241 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@241 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@76 ($generated@@241 $generated@@528)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@529 ($generated@@246 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@246 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@76 ($generated@@246 $generated@@532)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@68) (= ($generated@@533 ($generated@@164 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@164 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@76 ($generated@@164 $generated@@536)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@537 ($generated@@513 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@513 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@76 ($generated@@513 $generated@@540)) $generated@@57))
 :pattern ( ($generated@@513 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) ($generated@@80 $generated@@138 $generated@@2)) (= ($generated@@161 ($generated@@137 $generated@@541)) $generated@@65))
 :pattern ( ($generated@@137 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) ($generated@@80 $generated@@138 $generated@@2)) (= ($generated@@345 ($generated@@137 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@137 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
(= ($generated@@337 $generated@@544 ($generated@@136 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@136 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@300 $generated@@138 $generated@@138)) (= (type $generated@@546) $generated@@68)) (= (type $generated@@547) $generated@@68)) (= ($generated@@145 $generated@@545 ($generated@@425 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@138) ($generated@@0 ($generated@@85 ($generated@@298 $generated@@545) $generated@@548))) (and ($generated@@226 ($generated@@85 ($generated@@400 $generated@@545) $generated@@548) $generated@@547) ($generated@@226 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@545) $generated@@548))
 :pattern ( ($generated@@85 ($generated@@298 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@145 $generated@@545 ($generated@@425 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@318 $generated@@138 $generated@@138)) (= (type $generated@@550) $generated@@68)) (= (type $generated@@551) $generated@@68)) (= ($generated@@145 $generated@@549 ($generated@@433 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@138) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@549) $generated@@552))) (and ($generated@@226 ($generated@@85 ($generated@@408 $generated@@549) $generated@@552) $generated@@551) ($generated@@226 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@549) $generated@@552))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@145 $generated@@549 ($generated@@433 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@138) (= (type $generated@@555) $generated@@138)) (< ($generated@@553 $generated@@554) ($generated@@140 ($generated@@225 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@225 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@138) (= (type $generated@@557) $generated@@138)) (< ($generated@@553 $generated@@557) ($generated@@140 ($generated@@225 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@225 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@138) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) $generated@@68)) ($generated@@226 $generated@@558 ($generated@@425 $generated@@559 $generated@@560))) (and (= ($generated@@136 ($generated@@337 ($generated@@300 $generated@@138 $generated@@138) $generated@@558)) $generated@@558) ($generated@@145 ($generated@@337 ($generated@@300 $generated@@138 $generated@@138) $generated@@558) ($generated@@425 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@226 $generated@@558 ($generated@@425 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@138) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) $generated@@68)) ($generated@@226 $generated@@561 ($generated@@433 $generated@@562 $generated@@563))) (and (= ($generated@@136 ($generated@@337 ($generated@@318 $generated@@138 $generated@@138) $generated@@561)) $generated@@561) ($generated@@145 ($generated@@337 ($generated@@318 $generated@@138 $generated@@138) $generated@@561) ($generated@@433 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@226 $generated@@561 ($generated@@433 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@68) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) $generated@@138)) ($generated@@226 $generated@@566 ($generated@@148 $generated@@564 $generated@@565))) (and (= ($generated@@136 ($generated@@337 $generated@@139 $generated@@566)) $generated@@566) ($generated@@145 ($generated@@337 $generated@@139 $generated@@566) ($generated@@148 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@226 $generated@@566 ($generated@@148 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@85 ($generated@@445 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@85 ($generated@@445 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@73)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@68) (= (type $generated@@572) $generated@@68)) (and (= ($generated@@76 ($generated@@148 $generated@@571 $generated@@572)) $generated@@62) (= ($generated@@569 ($generated@@148 $generated@@571 $generated@@572)) $generated@@66)))
 :pattern ( ($generated@@148 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@139) (= ($generated@@553 ($generated@@136 $generated@@573)) ($generated@@140 $generated@@573)))
 :pattern ( ($generated@@553 ($generated@@136 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@138) ($generated@@226 $generated@@574 ($generated@@79 0))) (and (= ($generated@@136 ($generated@@337 $generated@@2 $generated@@574)) $generated@@574) ($generated@@145 ($generated@@337 ($generated@@80 $generated@@138 $generated@@4) $generated@@574) ($generated@@79 0))))
 :pattern ( ($generated@@226 $generated@@574 ($generated@@79 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@138) (= (type $generated@@576) $generated@@68)) ($generated@@226 $generated@@575 ($generated@@241 $generated@@576))) (and (= ($generated@@136 ($generated@@337 ($generated@@80 $generated@@138 $generated@@4) $generated@@575)) $generated@@575) ($generated@@145 ($generated@@337 ($generated@@80 $generated@@138 $generated@@4) $generated@@575) ($generated@@241 $generated@@576))))
 :pattern ( ($generated@@226 $generated@@575 ($generated@@241 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@138) (= (type $generated@@578) $generated@@68)) ($generated@@226 $generated@@577 ($generated@@246 $generated@@578))) (and (= ($generated@@136 ($generated@@337 ($generated@@80 $generated@@138 $generated@@4) $generated@@577)) $generated@@577) ($generated@@145 ($generated@@337 ($generated@@80 $generated@@138 $generated@@4) $generated@@577) ($generated@@246 $generated@@578))))
 :pattern ( ($generated@@226 $generated@@577 ($generated@@246 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@138) (= (type $generated@@580) $generated@@68)) ($generated@@226 $generated@@579 ($generated@@164 $generated@@580))) (and (= ($generated@@136 ($generated@@337 ($generated@@80 $generated@@138 $generated@@2) $generated@@579)) $generated@@579) ($generated@@145 ($generated@@337 ($generated@@80 $generated@@138 $generated@@2) $generated@@579) ($generated@@164 $generated@@580))))
 :pattern ( ($generated@@226 $generated@@579 ($generated@@164 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@138) (= (type $generated@@582) $generated@@68)) ($generated@@226 $generated@@581 ($generated@@513 $generated@@582))) (and (= ($generated@@136 ($generated@@337 ($generated@@273 $generated@@138) $generated@@581)) $generated@@581) ($generated@@145 ($generated@@337 ($generated@@273 $generated@@138) $generated@@581) ($generated@@513 $generated@@582))))
 :pattern ( ($generated@@226 $generated@@581 ($generated@@513 $generated@@582)))
)))
(assert (= ($generated@@76 $generated@@233) $generated@@64))
(assert (= ($generated@@569 $generated@@233) $generated@@67))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@80 $generated@@138 $generated@@2)) (= (type $generated@@584) $generated@@68)) (= (type $generated@@585) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@583 ($generated@@164 $generated@@584) $generated@@585) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@138) (< 0 ($generated ($generated@@85 $generated@@583 $generated@@586)))) ($generated@@258 $generated@@586 $generated@@584 $generated@@585))
 :pattern ( ($generated@@85 $generated@@583 $generated@@586))
))))
 :pattern ( ($generated@@78 $generated@@583 ($generated@@164 $generated@@584) $generated@@585))
)))
(assert (= $generated@@162 ($generated@@251 $generated@@162)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@139) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@234 $generated@@589) (and ($generated@@147 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@68) ($generated@@78 $generated@@587 ($generated@@148 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@78 $generated@@587 ($generated@@148 $generated@@588 $generated@@590) $generated@@589))
))))) ($generated@@258 ($generated@@155 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@258 ($generated@@155 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@139) (= (type $generated@@592) $generated@@68)) (= (type $generated@@593) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@234 $generated@@593) (and ($generated@@147 $generated@@591) (exists (($generated@@594 T@U) ) (!  (and (= (type $generated@@594) $generated@@68) ($generated@@78 $generated@@591 ($generated@@148 $generated@@594 $generated@@592) $generated@@593))
 :pattern ( ($generated@@78 $generated@@591 ($generated@@148 $generated@@594 $generated@@592) $generated@@593))
))))) ($generated@@258 ($generated@@156 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@258 ($generated@@156 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@596)))
 (=> (and (and (= (type $generated@@595) ($generated@@80 $generated@@598 $generated@@2)) (= (type $generated@@597) $generated@@598)) (not (= $generated@@596 $generated@@597))) (= ($generated ($generated@@85 $generated@@595 $generated@@597)) ($generated ($generated@@85 ($generated@@281 $generated@@595 $generated@@596) $generated@@597)))))
 :pattern ( ($generated@@281 $generated@@595 $generated@@596) ($generated@@85 $generated@@595 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@138) (= (type $generated@@600) $generated@@138)) (= ($generated@@225 ($generated@@251 $generated@@599) ($generated@@251 $generated@@600)) ($generated@@251 ($generated@@225 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@225 ($generated@@251 $generated@@599) ($generated@@251 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) ($generated@@80 $generated@@138 $generated@@2)) (= ($generated@@137 ($generated@@251 $generated@@601)) ($generated@@251 ($generated@@137 $generated@@601))))
 :pattern ( ($generated@@137 ($generated@@251 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (= ($generated@@136 ($generated@@251 $generated@@602)) ($generated@@251 ($generated@@136 $generated@@602)))
 :pattern ( ($generated@@136 ($generated@@251 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@274 (type $generated@@603))))
 (=> (and (= (type $generated@@603) ($generated@@273 $generated@@604)) (= ($generated@@272 $generated@@603) 0)) (= $generated@@603 ($generated@@271 $generated@@604))))
 :pattern ( ($generated@@272 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@606)))
 (=> (and (and (= (type $generated@@605) ($generated@@80 $generated@@608 $generated@@2)) (= (type $generated@@607) $generated@@2)) (<= 0 ($generated $generated@@607))) (= ($generated@@280 ($generated@@86 $generated@@605 $generated@@606 $generated@@607)) (+ (- ($generated@@280 $generated@@605) ($generated ($generated@@85 $generated@@605 $generated@@606))) ($generated $generated@@607)))))
 :pattern ( ($generated@@280 ($generated@@86 $generated@@605 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@139) (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@234 $generated@@610) (and ($generated@@266 $generated@@609) ($generated@@78 $generated@@609 $generated@@233 $generated@@610)))) ($generated@@78 ($generated@@345 $generated@@609) ($generated@@164 $generated@@233) $generated@@610))
 :pattern ( ($generated@@78 ($generated@@345 $generated@@609) ($generated@@164 $generated@@233) $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@612) $generated@@2)) ($generated@@78 $generated@@612 $generated@@46 $generated@@611))
 :pattern ( ($generated@@78 $generated@@612 $generated@@46 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@614) $generated@@3)) ($generated@@78 $generated@@614 $generated@@47 $generated@@613))
 :pattern ( ($generated@@78 $generated@@614 $generated@@47 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@616) $generated@@4)) ($generated@@78 $generated@@616 $generated@@44 $generated@@615))
 :pattern ( ($generated@@78 $generated@@616 $generated@@44 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@618) $generated@@469)) ($generated@@78 $generated@@618 $generated@@45 $generated@@617))
 :pattern ( ($generated@@78 $generated@@618 $generated@@45 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@620) $generated@@138)) ($generated@@78 $generated@@620 $generated@@48 $generated@@619))
 :pattern ( ($generated@@78 $generated@@620 $generated@@48 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@273 $generated@@138)) (= (type $generated@@622) $generated@@68)) (= ($generated@@145 $generated@@621 ($generated@@513 $generated@@622)) (forall (($generated@@623 Int) ) (!  (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@272 $generated@@621))) ($generated@@226 ($generated@@514 $generated@@621 $generated@@623) $generated@@622))
 :pattern ( ($generated@@514 $generated@@621 $generated@@623))
))))
 :pattern ( ($generated@@145 $generated@@621 ($generated@@513 $generated@@622)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 Int) ) (!  (=> (= (type $generated@@625) ($generated@@273 $generated@@138)) (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@272 $generated@@625))) (< ($generated@@140 ($generated@@337 $generated@@139 ($generated@@514 $generated@@625 $generated@@626))) ($generated@@624 $generated@@625))))
 :pattern ( ($generated@@140 ($generated@@337 $generated@@139 ($generated@@514 $generated@@625 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@300 $generated@@138 $generated@@138)) (= (type $generated@@628) $generated@@68)) (= (type $generated@@629) $generated@@68)) ($generated@@145 $generated@@627 ($generated@@425 $generated@@628 $generated@@629))) (and (and ($generated@@145 ($generated@@298 $generated@@627) ($generated@@241 $generated@@628)) ($generated@@145 ($generated@@357 $generated@@627) ($generated@@241 $generated@@629))) ($generated@@145 ($generated@@399 $generated@@627) ($generated@@241 ($generated@@148 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@145 $generated@@627 ($generated@@425 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@318 $generated@@138 $generated@@138)) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) $generated@@68)) ($generated@@145 $generated@@630 ($generated@@433 $generated@@631 $generated@@632))) (and (and ($generated@@145 ($generated@@316 $generated@@630) ($generated@@246 $generated@@631)) ($generated@@145 ($generated@@368 $generated@@630) ($generated@@246 $generated@@632))) ($generated@@145 ($generated@@407 $generated@@630) ($generated@@246 ($generated@@148 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@145 $generated@@630 ($generated@@433 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@2) ($generated@@145 $generated@@633 $generated@@46))
 :pattern ( ($generated@@145 $generated@@633 $generated@@46))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@3) ($generated@@145 $generated@@634 $generated@@47))
 :pattern ( ($generated@@145 $generated@@634 $generated@@47))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@4) ($generated@@145 $generated@@635 $generated@@44))
 :pattern ( ($generated@@145 $generated@@635 $generated@@44))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@469) ($generated@@145 $generated@@636 $generated@@45))
 :pattern ( ($generated@@145 $generated@@636 $generated@@45))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@138) ($generated@@145 $generated@@637 $generated@@48))
 :pattern ( ($generated@@145 $generated@@637 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 (T@U) Bool)
(declare-fun $generated@@643 () Int)
(assert  (and (and (and (= (type $generated@@638) ($generated@@171 $generated@@81 $generated@@4)) (= (type $generated@@639) $generated@@81)) (= (type $generated@@640) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@641) $generated@@139)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@644  (=> (and (= $generated@@638 ($generated@@170 $generated@@639 $generated@@640 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (not ($generated@@238 $generated@@641 ($generated@@137 ($generated@@281 ($generated@@293 $generated@@138) ($generated@@136 $generated@@641))))))))
(let (($generated@@645  (=> (and ($generated@@234 $generated@@640) ($generated@@642 $generated@@640)) (=> (and (and (and ($generated@@145 $generated@@641 $generated@@233) ($generated@@78 $generated@@641 $generated@@233 $generated@@640)) ($generated@@386 $generated@@641)) (and (= 1 $generated@@643) (= (ControlFlow 0 3) 2))) $generated@@644))))
$generated@@645)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) Bool)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 (T@U) Bool)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U T@U) Bool)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@365 (T@U) Bool)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@T) T@U)
(declare-fun $generated@@460 () T@T)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@505 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@564 (T@T) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@68) (= (type $generated@@144) $generated@@68)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@72)
 :pattern ( ($generated@@154 $generated@@156))
)) (= (type $generated@@155) $generated@@140)))
(assert (= ($generated@@154 $generated@@155) $generated@@63))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@68)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@161) $generated@@68)) ($generated@@136 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@136 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@81 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@71 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@81) (= (type $generated@@212) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@213) ($generated@@70 $generated@@4))) (= (type $generated@@215) $generated@@81)) (= (type $generated@@216) ($generated@@70 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= (type ($generated@@218 $generated@@220 $generated@@221)) $generated@@140)
 :pattern ( ($generated@@218 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (= (type $generated@@222) $generated@@68) (= (type $generated@@223) $generated@@68)) (= (type $generated@@224) $generated@@149)) (= (type $generated@@225) $generated@@149)) (= ($generated@@136 ($generated@@218 $generated@@224 $generated@@225) ($generated@@139 $generated@@222 $generated@@223))  (and ($generated@@219 $generated@@224 $generated@@222) ($generated@@219 $generated@@225 $generated@@223))))
 :pattern ( ($generated@@136 ($generated@@218 $generated@@224 $generated@@225) ($generated@@139 $generated@@222 $generated@@223)))
)))
(assert (= (type $generated@@226) $generated@@68))
(assert ($generated@@136 $generated@@155 $generated@@226))
(assert (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@227 $generated@@228)) ($generated@@78 $generated@@155 $generated@@226 $generated@@228))
 :pattern ( ($generated@@78 $generated@@155 $generated@@226 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@140) (= (type $generated@@230) $generated@@140)) (= ($generated@@146 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@146 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@140) (= (type $generated@@233) $generated@@140)) (= ($generated@@231 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@231 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@68)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@237) $generated@@68)) (= ($generated@@136 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@149) ($generated@@0 ($generated@@85 $generated@@236 $generated@@238))) ($generated@@219 $generated@@238 $generated@@237))
 :pattern ( ($generated@@85 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@136 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@68)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@242) $generated@@68)) (= ($generated@@136 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@149) ($generated@@0 ($generated@@85 $generated@@241 $generated@@243))) ($generated@@219 $generated@@243 $generated@@242))
 :pattern ( ($generated@@85 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@136 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (= (type $generated@@249) $generated@@140) (= (type $generated@@250) $generated@@140)) (and ($generated@@248 $generated@@249) ($generated@@248 $generated@@250))) (= ($generated@@231 $generated@@249 $generated@@250) true))
 :pattern ( ($generated@@231 $generated@@249 $generated@@250) ($generated@@248 $generated@@249))
 :pattern ( ($generated@@231 $generated@@249 $generated@@250) ($generated@@248 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@68) (= (type $generated@@253) $generated@@68)) (= (type $generated@@254) $generated@@149)) (= (type $generated@@255) $generated@@149)) (= (type $generated@@256) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@227 $generated@@256)) (= ($generated@@78 ($generated@@218 $generated@@254 $generated@@255) ($generated@@139 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@78 ($generated@@218 $generated@@254 $generated@@255) ($generated@@139 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@140) (= ($generated@@138 $generated@@257) (= ($generated@@154 $generated@@257) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@140) (= ($generated@@248 $generated@@258) (= ($generated@@154 $generated@@258) $generated@@63)))
 :pattern ( ($generated@@248 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@140) (= ($generated@@259 $generated@@260) (= ($generated@@154 $generated@@260) $generated@@65)))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@140) ($generated@@138 $generated@@261)) (exists (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (and (and (= (type $generated@@262) $generated@@149) (= (type $generated@@263) $generated@@149)) (= $generated@@261 ($generated@@218 $generated@@262 $generated@@263)))
 :no-pattern (type $generated@@262)
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
)))
 :pattern ( ($generated@@138 $generated@@261))
)))
(assert  (and (and (forall (($generated@@268 T@T) ) (= ($generated@@1 ($generated@@266 $generated@@268)) 17)) (forall (($generated@@269 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
))) (forall (($generated@@270 T@T) ) (! (= (type ($generated@@264 $generated@@270)) ($generated@@266 $generated@@270))
 :pattern ( ($generated@@264 $generated@@270))
))))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@271)) 0)
 :pattern ( ($generated@@264 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@140) ($generated@@248 $generated@@272)) (= $generated@@272 $generated@@155))
 :pattern ( ($generated@@248 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@140)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@140) ($generated@@259 $generated@@275)) (exists (($generated@@276 T@U) ) (!  (and (= (type $generated@@276) ($generated@@80 $generated@@149 $generated@@4)) (= $generated@@275 ($generated@@273 $generated@@276)))
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@259 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@149)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@68) (= (type $generated@@281) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@251 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@78 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@251 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@80 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@83 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@80 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@85 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@80 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@85 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@85 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@80 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@85 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@85 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@83 (type $generated@@325))))
 (=> (and (= (type $generated@@325) ($generated@@80 $generated@@327 $generated@@4)) (= (type $generated@@326) ($generated@@80 $generated@@327 $generated@@4))) (= ($generated@@324 $generated@@325 $generated@@326) (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@327) (= ($generated@@0 ($generated@@85 $generated@@325 $generated@@328)) ($generated@@0 ($generated@@85 $generated@@326 $generated@@328))))
 :pattern ( ($generated@@85 $generated@@325 $generated@@328))
 :pattern ( ($generated@@85 $generated@@326 $generated@@328))
)))))
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@83 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@80 $generated@@330 $generated@@2)) (= ($generated@@158 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@85 $generated@@329 $generated@@331))) (<= ($generated ($generated@@85 $generated@@329 $generated@@331)) ($generated@@282 $generated@@329))))
 :pattern ( ($generated@@85 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@158 $generated@@329))
)))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@149) ($generated@@219 $generated@@335 $generated@@226)) (and (= ($generated@@277 ($generated@@332 $generated@@140 $generated@@335)) $generated@@335) ($generated@@136 ($generated@@332 $generated@@140 $generated@@335) $generated@@226)))
 :pattern ( ($generated@@219 $generated@@335 $generated@@226))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@338) $generated@@140) (= (type $generated@@339) $generated@@140)) (and ($generated@@259 $generated@@338) ($generated@@259 $generated@@339))) (= ($generated@@231 $generated@@338 $generated@@339) ($generated@@324 ($generated@@336 $generated@@338) ($generated@@336 $generated@@339))))
 :pattern ( ($generated@@231 $generated@@338 $generated@@339) ($generated@@259 $generated@@338))
 :pattern ( ($generated@@231 $generated@@338 $generated@@339) ($generated@@259 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@292 (type $generated@@340))))
(let (($generated@@342 ($generated@@291 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@290 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@289 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@85 ($generated@@288 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@288 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@292 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@80 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@292 (type $generated@@347))))
(let (($generated@@349 ($generated@@291 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@290 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@289 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@85 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@310 (type $generated@@351))))
(let (($generated@@353 ($generated@@309 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@308 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@307 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@306 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@306 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@310 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@310 (type $generated@@358))))
(let (($generated@@360 ($generated@@309 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@308 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@307 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@363) $generated@@68)) (= ($generated@@136 $generated@@362 ($generated@@157 $generated@@363)) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@362 $generated@@364)))) ($generated@@219 $generated@@364 $generated@@363))
 :pattern ( ($generated@@85 $generated@@362 $generated@@364))
))))
 :pattern ( ($generated@@136 $generated@@362 ($generated@@157 $generated@@363)))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@140) ($generated@@365 $generated@@366)) (or ($generated@@248 $generated@@366) ($generated@@259 $generated@@366)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) ($generated@@80 $generated@@149 $generated@@4)) (= ($generated@@136 ($generated@@273 $generated@@367) $generated@@226) ($generated@@136 $generated@@367 ($generated@@234 $generated@@226))))
 :pattern ( ($generated@@136 ($generated@@273 $generated@@367) $generated@@226))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@369) $generated@@68)) (= (type $generated@@370) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@368 ($generated@@234 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@149) ($generated@@0 ($generated@@85 $generated@@368 $generated@@371))) ($generated@@251 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@85 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@78 $generated@@368 ($generated@@234 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@373) $generated@@68)) (= (type $generated@@374) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@372 ($generated@@239 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@149) ($generated@@0 ($generated@@85 $generated@@372 $generated@@375))) ($generated@@251 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@85 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@78 $generated@@372 ($generated@@239 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated ($generated@@85 ($generated@@283 $generated@@377) $generated@@376)) 0))
 :pattern ( (let (($generated@@377 (type $generated@@376)))
($generated@@85 ($generated@@283 $generated@@377) $generated@@376)))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@292 (type $generated@@381))))
(let (($generated@@383 ($generated@@291 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@80 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@290 $generated@@149 $generated@@149)) (= (type $generated@@385) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@85 ($generated@@288 $generated@@384) ($generated@@147 ($generated@@332 $generated@@140 $generated@@385)))) (= ($generated@@85 ($generated@@379 $generated@@384) ($generated@@147 ($generated@@332 $generated@@140 $generated@@385))) ($generated@@148 ($generated@@332 $generated@@140 $generated@@385))))))
 :pattern ( ($generated@@85 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@310 (type $generated@@389))))
(let (($generated@@391 ($generated@@309 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@80 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@308 $generated@@149 $generated@@149)) (= (type $generated@@393) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@85 ($generated@@306 $generated@@392) ($generated@@147 ($generated@@332 $generated@@140 $generated@@393)))) (= ($generated@@85 ($generated@@387 $generated@@392) ($generated@@147 ($generated@@332 $generated@@140 $generated@@393))) ($generated@@148 ($generated@@332 $generated@@140 $generated@@393))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@291 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@290 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@85 ($generated@@344 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@85 ($generated@@288 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@85 ($generated@@379 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@85 ($generated@@288 $generated@@394) $generated@@398))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@85 ($generated@@344 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@309 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@308 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@85 ($generated@@355 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@85 ($generated@@306 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@85 ($generated@@387 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@85 ($generated@@306 $generated@@399) $generated@@403))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@85 ($generated@@355 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@68)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@290 $generated@@149 $generated@@149)) (= (type $generated@@408) $generated@@68)) (= (type $generated@@409) $generated@@68)) (= (type $generated@@410) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@288 $generated@@407) $generated@@411))) (and ($generated@@251 ($generated@@85 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@251 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@288 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@78 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@68)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@308 $generated@@149 $generated@@149)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@306 $generated@@415) $generated@@419))) (and ($generated@@251 ($generated@@85 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@251 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@306 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@83 (type $generated@@420))))
 (=> (and (and (= (type $generated@@420) ($generated@@80 $generated@@422 $generated@@4)) (= (type $generated@@421) ($generated@@80 $generated@@422 $generated@@4))) ($generated@@324 $generated@@420 $generated@@421)) (= $generated@@420 $generated@@421)))
 :pattern ( ($generated@@324 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(= (type ($generated@@423 $generated@@424 $generated@@425)) ($generated@@80 $generated@@426 $generated@@4)))
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@428)))
 (=> (and (and (= (type $generated@@427) ($generated@@80 $generated@@430 $generated@@4)) (= (type $generated@@429) $generated@@430)) ($generated@@0 ($generated@@85 $generated@@427 $generated@@429))) ($generated@@0 ($generated@@85 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))))
 :pattern ( ($generated@@423 $generated@@427 $generated@@428) ($generated@@85 $generated@@427 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (! (let (($generated@@434 (type $generated@@432)))
 (=> (and (= (type $generated@@431) ($generated@@80 $generated@@434 $generated@@4)) (= (type $generated@@433) $generated@@434)) (= ($generated@@0 ($generated@@85 ($generated@@423 $generated@@431 $generated@@432) $generated@@433))  (or (= $generated@@433 $generated@@432) ($generated@@0 ($generated@@85 $generated@@431 $generated@@433))))))
 :pattern ( ($generated@@85 ($generated@@423 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@140) ($generated@@136 $generated@@435 $generated@@226)) (or ($generated@@248 $generated@@435) ($generated@@259 $generated@@435)))
 :pattern ( ($generated@@259 $generated@@435) ($generated@@136 $generated@@435 $generated@@226))
 :pattern ( ($generated@@248 $generated@@435) ($generated@@136 $generated@@435 $generated@@226))
)))
(assert (forall (($generated@@437 T@T) ) (! (= (type ($generated@@436 $generated@@437)) ($generated@@80 $generated@@437 $generated@@4))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@310 (type $generated@@438))))
(let (($generated@@440 ($generated@@309 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@308 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@307 $generated@@440 $generated@@439)) (= ($generated@@306 $generated@@438) ($generated@@436 $generated@@440))))))
 :pattern ( ($generated@@306 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@310 (type $generated@@441))))
(let (($generated@@443 ($generated@@309 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@308 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@307 $generated@@443 $generated@@442)) (= ($generated@@355 $generated@@441) ($generated@@436 $generated@@442))))))
 :pattern ( ($generated@@355 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@310 (type $generated@@444))))
(let (($generated@@446 ($generated@@309 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@308 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@307 $generated@@446 $generated@@445)) (= ($generated@@386 $generated@@444) ($generated@@436 $generated@@149))))))
 :pattern ( ($generated@@386 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@292 (type $generated@@447))))
(let (($generated@@449 ($generated@@291 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@290 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@289 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@149) (= (type $generated@@451) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@378 $generated@@447) ($generated@@277 ($generated@@218 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@378 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@310 (type $generated@@452))))
(let (($generated@@454 ($generated@@309 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@308 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@307 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (and (and (= (type $generated@@455) $generated@@149) (= (type $generated@@456) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@452) ($generated@@277 ($generated@@218 $generated@@455 $generated@@456)))))
 :no-pattern (type $generated@@455)
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@386 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@149) ($generated@@219 $generated@@457 $generated@@46)) (and (= ($generated@@277 ($generated@@332 $generated@@2 $generated@@457)) $generated@@457) ($generated@@136 ($generated@@332 $generated@@2 $generated@@457) $generated@@46)))
 :pattern ( ($generated@@219 $generated@@457 $generated@@46))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@149) ($generated@@219 $generated@@458 $generated@@47)) (and (= ($generated@@277 ($generated@@332 $generated@@3 $generated@@458)) $generated@@458) ($generated@@136 ($generated@@332 $generated@@3 $generated@@458) $generated@@47)))
 :pattern ( ($generated@@219 $generated@@458 $generated@@47))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@149) ($generated@@219 $generated@@459 $generated@@44)) (and (= ($generated@@277 ($generated@@332 $generated@@4 $generated@@459)) $generated@@459) ($generated@@136 ($generated@@332 $generated@@4 $generated@@459) $generated@@44)))
 :pattern ( ($generated@@219 $generated@@459 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@460) 20))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@149) ($generated@@219 $generated@@461 $generated@@45)) (and (= ($generated@@277 ($generated@@332 $generated@@460 $generated@@461)) $generated@@461) ($generated@@136 ($generated@@332 $generated@@460 $generated@@461) $generated@@45)))
 :pattern ( ($generated@@219 $generated@@461 $generated@@45))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@68) (= ($generated@@219 ($generated@@277 $generated@@462) $generated@@463) ($generated@@136 $generated@@462 $generated@@463)))
 :pattern ( ($generated@@219 ($generated@@277 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@83 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@80 $generated@@465 $generated@@2)) (<= 0 ($generated@@282 $generated@@464))))
 :pattern ( ($generated@@282 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@267 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@266 $generated@@467)) (<= 0 ($generated@@265 $generated@@466))))
 :pattern ( ($generated@@265 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (= (type $generated@@468) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@469) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@227 $generated@@469)) (= ($generated@@78 ($generated@@273 $generated@@468) $generated@@226 $generated@@469) ($generated@@78 $generated@@468 ($generated@@234 $generated@@226) $generated@@469)))
 :pattern ( ($generated@@78 ($generated@@273 $generated@@468) $generated@@226 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@470 ($generated@@404 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@404 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@404 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@404 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@76 ($generated@@404 $generated@@478 $generated@@479)) $generated@@58))
 :pattern ( ($generated@@404 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@68)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@480 ($generated@@412 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@412 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@484 ($generated@@412 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@412 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@76 ($generated@@412 $generated@@488 $generated@@489)) $generated@@59))
 :pattern ( ($generated@@412 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@149) (= (type $generated@@491) $generated@@149)) (= ($generated@@154 ($generated@@218 $generated@@490 $generated@@491)) $generated@@61))
 :pattern ( ($generated@@218 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@68)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@492 ($generated@@139 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@139 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@139 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@139 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@149) (= (type $generated@@501) $generated@@149)) (= ($generated@@147 ($generated@@218 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@218 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@149) (= (type $generated@@503) $generated@@149)) (= ($generated@@148 ($generated@@218 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@218 $generated@@502 $generated@@503))
)))
(assert  (and (forall (($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@506))
)) (forall (($generated@@507 T@U) ($generated@@508 Int) ) (! (let (($generated@@509 ($generated@@267 (type $generated@@507))))
(= (type ($generated@@505 $generated@@507 $generated@@508)) $generated@@509))
 :pattern ( ($generated@@505 $generated@@507 $generated@@508))
))))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@266 $generated@@149)) (= (type $generated@@511) $generated@@68)) (= (type $generated@@512) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@510 ($generated@@504 $generated@@511) $generated@@512) (forall (($generated@@513 Int) ) (!  (=> (and (<= 0 $generated@@513) (< $generated@@513 ($generated@@265 $generated@@510))) ($generated@@251 ($generated@@505 $generated@@510 $generated@@513) $generated@@511 $generated@@512))
 :pattern ( ($generated@@505 $generated@@510 $generated@@513))
))))
 :pattern ( ($generated@@78 $generated@@510 ($generated@@504 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
 (=> (= (type $generated@@514) ($generated@@80 $generated@@516 $generated@@4)) ($generated@@0 ($generated@@85 ($generated@@423 $generated@@514 $generated@@515) $generated@@515))))
 :pattern ( ($generated@@423 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@79 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@79 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@519 ($generated@@234 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@234 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@76 ($generated@@234 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@523 ($generated@@239 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@239 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@76 ($generated@@239 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@527 ($generated@@157 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@157 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@76 ($generated@@157 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@531 ($generated@@504 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@504 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@68) (= ($generated@@76 ($generated@@504 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@504 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) ($generated@@80 $generated@@149 $generated@@4)) (= ($generated@@154 ($generated@@273 $generated@@535)) $generated@@65))
 :pattern ( ($generated@@273 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) ($generated@@80 $generated@@149 $generated@@4)) (= ($generated@@336 ($generated@@273 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@273 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
(= ($generated@@332 $generated@@538 ($generated@@277 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@277 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@290 $generated@@149 $generated@@149)) (= (type $generated@@540) $generated@@68)) (= (type $generated@@541) $generated@@68)) (= ($generated@@136 $generated@@539 ($generated@@404 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@288 $generated@@539) $generated@@542))) (and ($generated@@219 ($generated@@85 ($generated@@379 $generated@@539) $generated@@542) $generated@@541) ($generated@@219 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@539) $generated@@542))
 :pattern ( ($generated@@85 ($generated@@288 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@136 $generated@@539 ($generated@@404 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@308 $generated@@149 $generated@@149)) (= (type $generated@@544) $generated@@68)) (= (type $generated@@545) $generated@@68)) (= ($generated@@136 $generated@@543 ($generated@@412 $generated@@544 $generated@@545)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@306 $generated@@543) $generated@@546))) (and ($generated@@219 ($generated@@85 ($generated@@387 $generated@@543) $generated@@546) $generated@@545) ($generated@@219 $generated@@546 $generated@@544)))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@543) $generated@@546))
 :pattern ( ($generated@@85 ($generated@@306 $generated@@543) $generated@@546))
))))
 :pattern ( ($generated@@136 $generated@@543 ($generated@@412 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@149) (= (type $generated@@550) $generated@@149)) (< ($generated@@547 $generated@@549) ($generated@@548 ($generated@@218 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@218 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@149) (= (type $generated@@552) $generated@@149)) (< ($generated@@547 $generated@@552) ($generated@@548 ($generated@@218 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@218 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@554) $generated@@140)) ($generated@@0 ($generated@@85 $generated@@553 ($generated@@277 $generated@@554)))) (< ($generated@@548 $generated@@554) ($generated@@548 ($generated@@273 $generated@@553))))
 :pattern ( ($generated@@85 $generated@@553 ($generated@@277 $generated@@554)) ($generated@@273 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@149) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) $generated@@68)) ($generated@@219 $generated@@555 ($generated@@404 $generated@@556 $generated@@557))) (and (= ($generated@@277 ($generated@@332 ($generated@@290 $generated@@149 $generated@@149) $generated@@555)) $generated@@555) ($generated@@136 ($generated@@332 ($generated@@290 $generated@@149 $generated@@149) $generated@@555) ($generated@@404 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@219 $generated@@555 ($generated@@404 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@149) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) $generated@@68)) ($generated@@219 $generated@@558 ($generated@@412 $generated@@559 $generated@@560))) (and (= ($generated@@277 ($generated@@332 ($generated@@308 $generated@@149 $generated@@149) $generated@@558)) $generated@@558) ($generated@@136 ($generated@@332 ($generated@@308 $generated@@149 $generated@@149) $generated@@558) ($generated@@412 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@219 $generated@@558 ($generated@@412 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@68) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) $generated@@149)) ($generated@@219 $generated@@563 ($generated@@139 $generated@@561 $generated@@562))) (and (= ($generated@@277 ($generated@@332 $generated@@140 $generated@@563)) $generated@@563) ($generated@@136 ($generated@@332 $generated@@140 $generated@@563) ($generated@@139 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@219 $generated@@563 ($generated@@139 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@565 T@T) ) (! (= (type ($generated@@564 $generated@@565)) ($generated@@80 $generated@@565 $generated@@4))
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
 (not ($generated@@0 ($generated@@85 ($generated@@564 $generated@@567) $generated@@566))))
 :pattern ( (let (($generated@@567 (type $generated@@566)))
($generated@@85 ($generated@@564 $generated@@567) $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@568)))
 (not ($generated@@0 ($generated@@85 ($generated@@436 $generated@@569) $generated@@568))))
 :pattern ( (let (($generated@@569 (type $generated@@568)))
($generated@@85 ($generated@@436 $generated@@569) $generated@@568)))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@73)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@68) (= (type $generated@@573) $generated@@68)) (and (= ($generated@@76 ($generated@@139 $generated@@572 $generated@@573)) $generated@@62) (= ($generated@@570 ($generated@@139 $generated@@572 $generated@@573)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@140) (= ($generated@@547 ($generated@@277 $generated@@574)) ($generated@@548 $generated@@574)))
 :pattern ( ($generated@@547 ($generated@@277 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@149) ($generated@@219 $generated@@575 ($generated@@79 0))) (and (= ($generated@@277 ($generated@@332 $generated@@2 $generated@@575)) $generated@@575) ($generated@@136 ($generated@@332 ($generated@@80 $generated@@149 $generated@@4) $generated@@575) ($generated@@79 0))))
 :pattern ( ($generated@@219 $generated@@575 ($generated@@79 0)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@149) (= (type $generated@@577) $generated@@68)) ($generated@@219 $generated@@576 ($generated@@234 $generated@@577))) (and (= ($generated@@277 ($generated@@332 ($generated@@80 $generated@@149 $generated@@4) $generated@@576)) $generated@@576) ($generated@@136 ($generated@@332 ($generated@@80 $generated@@149 $generated@@4) $generated@@576) ($generated@@234 $generated@@577))))
 :pattern ( ($generated@@219 $generated@@576 ($generated@@234 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@149) (= (type $generated@@579) $generated@@68)) ($generated@@219 $generated@@578 ($generated@@239 $generated@@579))) (and (= ($generated@@277 ($generated@@332 ($generated@@80 $generated@@149 $generated@@4) $generated@@578)) $generated@@578) ($generated@@136 ($generated@@332 ($generated@@80 $generated@@149 $generated@@4) $generated@@578) ($generated@@239 $generated@@579))))
 :pattern ( ($generated@@219 $generated@@578 ($generated@@239 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@149) (= (type $generated@@581) $generated@@68)) ($generated@@219 $generated@@580 ($generated@@157 $generated@@581))) (and (= ($generated@@277 ($generated@@332 ($generated@@80 $generated@@149 $generated@@2) $generated@@580)) $generated@@580) ($generated@@136 ($generated@@332 ($generated@@80 $generated@@149 $generated@@2) $generated@@580) ($generated@@157 $generated@@581))))
 :pattern ( ($generated@@219 $generated@@580 ($generated@@157 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@149) (= (type $generated@@583) $generated@@68)) ($generated@@219 $generated@@582 ($generated@@504 $generated@@583))) (and (= ($generated@@277 ($generated@@332 ($generated@@266 $generated@@149) $generated@@582)) $generated@@582) ($generated@@136 ($generated@@332 ($generated@@266 $generated@@149) $generated@@582) ($generated@@504 $generated@@583))))
 :pattern ( ($generated@@219 $generated@@582 ($generated@@504 $generated@@583)))
)))
(assert (= ($generated@@76 $generated@@226) $generated@@64))
(assert (= ($generated@@570 $generated@@226) $generated@@67))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@584 ($generated@@157 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@584 $generated@@587)))) ($generated@@251 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@85 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@78 $generated@@584 ($generated@@157 $generated@@585) $generated@@586))
)))
(assert (= $generated@@155 ($generated@@244 $generated@@155)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@140) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@227 $generated@@590) (and ($generated@@138 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@68) ($generated@@78 $generated@@588 ($generated@@139 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@78 $generated@@588 ($generated@@139 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@251 ($generated@@147 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@251 ($generated@@147 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@140) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@227 $generated@@594) (and ($generated@@138 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@68) ($generated@@78 $generated@@592 ($generated@@139 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@78 $generated@@592 ($generated@@139 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@251 ($generated@@148 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@251 ($generated@@148 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@149) (= (type $generated@@597) $generated@@149)) (= ($generated@@218 ($generated@@244 $generated@@596) ($generated@@244 $generated@@597)) ($generated@@244 ($generated@@218 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@218 ($generated@@244 $generated@@596) ($generated@@244 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) ($generated@@80 $generated@@149 $generated@@4)) (= ($generated@@273 ($generated@@244 $generated@@598)) ($generated@@244 ($generated@@273 $generated@@598))))
 :pattern ( ($generated@@273 ($generated@@244 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (! (= ($generated@@277 ($generated@@244 $generated@@599)) ($generated@@244 ($generated@@277 $generated@@599)))
 :pattern ( ($generated@@277 ($generated@@244 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 ($generated@@267 (type $generated@@600))))
 (=> (and (= (type $generated@@600) ($generated@@266 $generated@@601)) (= ($generated@@265 $generated@@600) 0)) (= $generated@@600 ($generated@@264 $generated@@601))))
 :pattern ( ($generated@@265 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@603)))
 (=> (and (and (= (type $generated@@602) ($generated@@80 $generated@@605 $generated@@2)) (= (type $generated@@604) $generated@@2)) (<= 0 ($generated $generated@@604))) (= ($generated@@282 ($generated@@86 $generated@@602 $generated@@603 $generated@@604)) (+ (- ($generated@@282 $generated@@602) ($generated ($generated@@85 $generated@@602 $generated@@603))) ($generated $generated@@604)))))
 :pattern ( ($generated@@282 ($generated@@86 $generated@@602 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@140) (= (type $generated@@607) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@227 $generated@@607) (and ($generated@@259 $generated@@606) ($generated@@78 $generated@@606 $generated@@226 $generated@@607)))) ($generated@@78 ($generated@@336 $generated@@606) ($generated@@234 $generated@@226) $generated@@607))
 :pattern ( ($generated@@78 ($generated@@336 $generated@@606) ($generated@@234 $generated@@226) $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@609) $generated@@2)) ($generated@@78 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@78 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@611) $generated@@3)) ($generated@@78 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@78 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@613) $generated@@4)) ($generated@@78 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@78 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@615) $generated@@460)) ($generated@@78 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@78 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@617) $generated@@149)) ($generated@@78 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@78 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@266 $generated@@149)) (= (type $generated@@619) $generated@@68)) (= ($generated@@136 $generated@@618 ($generated@@504 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@265 $generated@@618))) ($generated@@219 ($generated@@505 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@505 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@136 $generated@@618 ($generated@@504 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@266 $generated@@149)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@265 $generated@@622))) (< ($generated@@548 ($generated@@332 $generated@@140 ($generated@@505 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@548 ($generated@@332 $generated@@140 ($generated@@505 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@290 $generated@@149 $generated@@149)) (= (type $generated@@625) $generated@@68)) (= (type $generated@@626) $generated@@68)) ($generated@@136 $generated@@624 ($generated@@404 $generated@@625 $generated@@626))) (and (and ($generated@@136 ($generated@@288 $generated@@624) ($generated@@234 $generated@@625)) ($generated@@136 ($generated@@344 $generated@@624) ($generated@@234 $generated@@626))) ($generated@@136 ($generated@@378 $generated@@624) ($generated@@234 ($generated@@139 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@136 $generated@@624 ($generated@@404 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@308 $generated@@149 $generated@@149)) (= (type $generated@@628) $generated@@68)) (= (type $generated@@629) $generated@@68)) ($generated@@136 $generated@@627 ($generated@@412 $generated@@628 $generated@@629))) (and (and ($generated@@136 ($generated@@306 $generated@@627) ($generated@@239 $generated@@628)) ($generated@@136 ($generated@@355 $generated@@627) ($generated@@239 $generated@@629))) ($generated@@136 ($generated@@386 $generated@@627) ($generated@@239 ($generated@@139 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@136 $generated@@627 ($generated@@412 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@136 $generated@@630 $generated@@46))
 :pattern ( ($generated@@136 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@136 $generated@@631 $generated@@47))
 :pattern ( ($generated@@136 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@136 $generated@@632 $generated@@44))
 :pattern ( ($generated@@136 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@460) ($generated@@136 $generated@@633 $generated@@45))
 :pattern ( ($generated@@136 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@149) ($generated@@136 $generated@@634 $generated@@48))
 :pattern ( ($generated@@136 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 (T@U) Bool)
(declare-fun $generated@@640 () Int)
(assert  (and (and (and (= (type $generated@@635) ($generated@@164 $generated@@81 $generated@@4)) (= (type $generated@@636) $generated@@81)) (= (type $generated@@637) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@638) $generated@@140)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@641  (=> (and (= $generated@@635 ($generated@@163 $generated@@636 $generated@@637 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (not ($generated@@231 $generated@@638 ($generated@@273 ($generated@@423 ($generated@@564 $generated@@149) ($generated@@277 $generated@@638))))))))
(let (($generated@@642  (=> (and ($generated@@227 $generated@@637) ($generated@@639 $generated@@637)) (=> (and (and (and ($generated@@136 $generated@@638 $generated@@226) ($generated@@78 $generated@@638 $generated@@226 $generated@@637)) ($generated@@365 $generated@@638)) (and (= 1 $generated@@640) (= (ControlFlow 0 3) 2))) $generated@@641))))
$generated@@642)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
