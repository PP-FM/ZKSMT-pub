(set-logic UFNIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 () T@U)
(declare-fun $generated@@449 (T@T) T@U)
(declare-fun $generated@@473 () T@T)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@518 (T@U Int) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@626 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (and (= ($generated@@1 $generated@@140) 14) (= ($generated@@1 $generated@@141) 15)) (= (type $generated@@143) $generated@@68)))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@140) (= (type $generated@@145) $generated@@141)) (or ($generated@@142 $generated@@145) (and (not (= 1 $generated@@138)) ($generated@@136 $generated@@145 $generated@@143)))) true)
 :pattern ( ($generated@@139 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@147 $generated@@148 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@68) (= (type $generated@@151) $generated@@68)) (= (type $generated@@152) $generated@@141)) ($generated@@136 $generated@@152 ($generated@@147 $generated@@150 $generated@@151))) ($generated@@146 $generated@@152))
 :pattern ( ($generated@@146 $generated@@152) ($generated@@136 $generated@@152 ($generated@@147 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 16) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@141) (= (type $generated@@160) $generated@@141)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163))
)) (= (type $generated@@162) $generated@@141)))
(assert (= ($generated@@161 $generated@@162) $generated@@63))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@68)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@80 $generated@@156 $generated@@2)) (= (type $generated@@168) $generated@@68)) ($generated@@136 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@136 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 17)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@81 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@71 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@81) (= (type $generated@@219) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@220) ($generated@@70 $generated@@4))) (= (type $generated@@222) $generated@@81)) (= (type $generated@@223) ($generated@@70 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@171 $generated@@81 $generated@@4))
 :pattern ( ($generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@71 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@81) (= (type $generated@@231) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@232) ($generated@@70 $generated@@4))) (= (type $generated@@234) $generated@@81)) (= (type $generated@@235) ($generated@@70 $generated@@236))) (= ($generated@@0 ($generated@@169 ($generated@@225 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@169 ($generated@@225 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@141)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@68) (= (type $generated@@242) $generated@@68)) (= (type $generated@@243) $generated@@156)) (= (type $generated@@244) $generated@@156)) (= ($generated@@136 ($generated@@237 $generated@@243 $generated@@244) ($generated@@147 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@136 ($generated@@237 $generated@@243 $generated@@244) ($generated@@147 $generated@@241 $generated@@242)))
)))
(assert ($generated@@136 $generated@@162 $generated@@143))
(assert (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@245 $generated@@246)) ($generated@@78 $generated@@162 $generated@@143 $generated@@246))
 :pattern ( ($generated@@78 $generated@@162 $generated@@143 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@141) (= (type $generated@@248) $generated@@141)) (= ($generated@@153 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@153 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@141) (= (type $generated@@251) $generated@@141)) (= ($generated@@249 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@249 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@68)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@255) $generated@@68)) (= ($generated@@136 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@156) ($generated@@0 ($generated@@85 $generated@@254 $generated@@256))) ($generated@@238 $generated@@256 $generated@@255))
 :pattern ( ($generated@@85 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@136 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@260) $generated@@68)) (= ($generated@@136 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@156) ($generated@@0 ($generated@@85 $generated@@259 $generated@@261))) ($generated@@238 $generated@@261 $generated@@260))
 :pattern ( ($generated@@85 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@136 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@267) $generated@@141) (= (type $generated@@268) $generated@@141)) (and ($generated@@266 $generated@@267) ($generated@@266 $generated@@268))) (= ($generated@@249 $generated@@267 $generated@@268) true))
 :pattern ( ($generated@@249 $generated@@267 $generated@@268) ($generated@@266 $generated@@267))
 :pattern ( ($generated@@249 $generated@@267 $generated@@268) ($generated@@266 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@68) (= (type $generated@@271) $generated@@68)) (= (type $generated@@272) $generated@@156)) (= (type $generated@@273) $generated@@156)) (= (type $generated@@274) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@245 $generated@@274)) (= ($generated@@78 ($generated@@237 $generated@@272 $generated@@273) ($generated@@147 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@78 ($generated@@237 $generated@@272 $generated@@273) ($generated@@147 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@141) (= ($generated@@146 $generated@@275) (= ($generated@@161 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@141) (= ($generated@@266 $generated@@276) (= ($generated@@161 $generated@@276) $generated@@63)))
 :pattern ( ($generated@@266 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@141) (= ($generated@@277 $generated@@278) (= ($generated@@161 $generated@@278) $generated@@65)))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@141) ($generated@@146 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@156) (= (type $generated@@281) $generated@@156)) (= $generated@@279 ($generated@@237 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@146 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 18)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@141) ($generated@@266 $generated@@290)) (= $generated@@290 $generated@@162))
 :pattern ( ($generated@@266 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@141)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@141) ($generated@@277 $generated@@293)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@141) (= $generated@@293 ($generated@@291 $generated@@294)))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@277 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@156)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@68) (= (type $generated@@299) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@269 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@78 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@269 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@80 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@83 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@80 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@85 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@80 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@85 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@85 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 20)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@80 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@85 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@85 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert  (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) $generated@@140)
 :pattern ( ($generated@@342 $generated@@344))
)) (forall (($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@345)) $generated@@141)
 :pattern ( ($generated@@343 $generated@@345))
))))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@346) $generated@@140) (= (type $generated@@347) $generated@@141)) (or ($generated@@142 $generated@@347) (and (not (= 1 $generated@@138)) ($generated@@136 $generated@@347 $generated@@143)))) (and (=> (not ($generated@@266 $generated@@347)) (=> (not ($generated@@266 ($generated@@343 $generated@@347))) (let (($generated@@348 ($generated@@343 ($generated@@343 $generated@@347))))
($generated@@142 $generated@@348)))) (= ($generated@@139 ($generated@@342 $generated@@346) $generated@@347) (ite ($generated@@266 $generated@@347) true (ite ($generated@@266 ($generated@@343 $generated@@347)) false (let (($generated@@349 ($generated@@343 ($generated@@343 $generated@@347))))
($generated@@139 $generated@@346 $generated@@349)))))))
 :pattern ( ($generated@@139 ($generated@@342 $generated@@346) $generated@@347))
))))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@83 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@80 $generated@@351 $generated@@2)) (= ($generated@@165 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (and (<= 0 ($generated ($generated@@85 $generated@@350 $generated@@352))) (<= ($generated ($generated@@85 $generated@@350 $generated@@352)) ($generated@@300 $generated@@350))))
 :pattern ( ($generated@@85 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@165 $generated@@350))
)))
(assert (forall (($generated@@354 T@T) ($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@156) ($generated@@238 $generated@@356 $generated@@143)) (and (= ($generated@@295 ($generated@@353 $generated@@141 $generated@@356)) $generated@@356) ($generated@@136 ($generated@@353 $generated@@141 $generated@@356) $generated@@143)))
 :pattern ( ($generated@@238 $generated@@356 $generated@@143))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@141) (= ($generated@@136 ($generated@@291 $generated@@357) $generated@@143) ($generated@@136 $generated@@357 $generated@@143)))
 :pattern ( ($generated@@136 ($generated@@291 $generated@@357) $generated@@143))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@358) $generated@@141) (= (type $generated@@359) $generated@@141)) (and ($generated@@277 $generated@@358) ($generated@@277 $generated@@359))) (= ($generated@@249 $generated@@358 $generated@@359) ($generated@@249 ($generated@@343 $generated@@358) ($generated@@343 $generated@@359))))
 :pattern ( ($generated@@249 $generated@@358 $generated@@359) ($generated@@277 $generated@@358))
 :pattern ( ($generated@@249 $generated@@358 $generated@@359) ($generated@@277 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@310 (type $generated@@360))))
(let (($generated@@362 ($generated@@309 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@308 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@307 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@85 ($generated@@306 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@306 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@310 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@80 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@310 (type $generated@@367))))
(let (($generated@@369 ($generated@@309 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@308 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@307 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@85 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@328 (type $generated@@371))))
(let (($generated@@373 ($generated@@327 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@326 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@325 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@85 ($generated@@324 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@324 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@328 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@80 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@328 (type $generated@@378))))
(let (($generated@@380 ($generated@@327 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@326 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@325 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@80 $generated@@156 $generated@@2)) (= (type $generated@@383) $generated@@68)) (= ($generated@@136 $generated@@382 ($generated@@164 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@156) (< 0 ($generated ($generated@@85 $generated@@382 $generated@@384)))) ($generated@@238 $generated@@384 $generated@@383))
 :pattern ( ($generated@@85 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@136 $generated@@382 ($generated@@164 $generated@@383)))
)))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@385) $generated@@140) (= (type $generated@@386) $generated@@141)) (or ($generated@@142 ($generated@@262 $generated@@386)) (and (not (= 1 $generated@@138)) ($generated@@136 $generated@@386 $generated@@143)))) (and (=> (not ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@266 ($generated@@262 $generated@@386)))))) (=> (not ($generated@@0 ($generated@@262 ($generated@@11 ($generated@@266 ($generated@@262 ($generated@@343 ($generated@@262 $generated@@386)))))))) (let (($generated@@387 ($generated@@262 ($generated@@343 ($generated@@262 ($generated@@343 ($generated@@262 $generated@@386)))))))
($generated@@142 $generated@@387)))) (= ($generated@@139 ($generated@@342 $generated@@385) ($generated@@262 $generated@@386)) (ite ($generated@@266 ($generated@@262 $generated@@386)) true (ite ($generated@@266 ($generated@@262 ($generated@@343 ($generated@@262 $generated@@386)))) false ($generated@@0 (let (($generated@@388 ($generated@@262 ($generated@@343 ($generated@@262 ($generated@@343 ($generated@@262 $generated@@386)))))))
($generated@@262 ($generated@@11 ($generated@@139 ($generated@@342 $generated@@385) $generated@@388))))))))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@342 $generated@@385) ($generated@@262 $generated@@386)))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@390) $generated@@68)) (= (type $generated@@391) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@389 ($generated@@252 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@156) ($generated@@0 ($generated@@85 $generated@@389 $generated@@392))) ($generated@@269 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@85 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@78 $generated@@389 ($generated@@252 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@394) $generated@@68)) (= (type $generated@@395) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@393 ($generated@@257 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@156) ($generated@@0 ($generated@@85 $generated@@393 $generated@@396))) ($generated@@269 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@85 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@78 $generated@@393 ($generated@@257 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(= ($generated ($generated@@85 ($generated@@301 $generated@@398) $generated@@397)) 0))
 :pattern ( (let (($generated@@398 (type $generated@@397)))
($generated@@85 ($generated@@301 $generated@@398) $generated@@397)))
)))
(assert  (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@401)) ($generated@@80 $generated@@156 $generated@@4))
 :pattern ( ($generated@@399 $generated@@401))
)) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@310 (type $generated@@402))))
(let (($generated@@404 ($generated@@309 (type $generated@@402))))
(= (type ($generated@@400 $generated@@402)) ($generated@@80 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@400 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@308 $generated@@156 $generated@@156)) (= (type $generated@@406) $generated@@156)) (= ($generated@@0 ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@85 ($generated@@306 $generated@@405) ($generated@@154 ($generated@@353 $generated@@141 $generated@@406)))) (= ($generated@@85 ($generated@@400 $generated@@405) ($generated@@154 ($generated@@353 $generated@@141 $generated@@406))) ($generated@@155 ($generated@@353 $generated@@141 $generated@@406))))))
 :pattern ( ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@80 $generated@@156 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@328 (type $generated@@410))))
(let (($generated@@412 ($generated@@327 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@80 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@326 $generated@@156 $generated@@156)) (= (type $generated@@414) $generated@@156)) (= ($generated@@0 ($generated@@85 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@85 ($generated@@324 $generated@@413) ($generated@@154 ($generated@@353 $generated@@141 $generated@@414)))) (= ($generated@@85 ($generated@@408 $generated@@413) ($generated@@154 ($generated@@353 $generated@@141 $generated@@414))) ($generated@@155 ($generated@@353 $generated@@141 $generated@@414))))))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@309 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@308 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@85 ($generated@@364 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@85 ($generated@@306 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@85 ($generated@@400 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@85 ($generated@@306 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@85 ($generated@@364 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@327 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@326 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@85 ($generated@@375 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@85 ($generated@@324 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@85 ($generated@@408 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@85 ($generated@@324 $generated@@420) $generated@@424))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@68)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@308 $generated@@156 $generated@@156)) (= (type $generated@@429) $generated@@68)) (= (type $generated@@430) $generated@@68)) (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@306 $generated@@428) $generated@@432))) (and ($generated@@269 ($generated@@85 ($generated@@400 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@269 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@428) $generated@@432))
 :pattern ( ($generated@@85 ($generated@@306 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@68)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@326 $generated@@156 $generated@@156)) (= (type $generated@@437) $generated@@68)) (= (type $generated@@438) $generated@@68)) (= (type $generated@@439) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@324 $generated@@436) $generated@@440))) (and ($generated@@269 ($generated@@85 ($generated@@408 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@269 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@436) $generated@@440))
 :pattern ( ($generated@@85 ($generated@@324 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@78 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) $generated@@140)
 :pattern ( ($generated@@441 $generated@@443))
)) (= (type $generated@@442) $generated@@140)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@140) (= (type $generated@@445) $generated@@141)) (= ($generated@@139 $generated@@444 $generated@@445) ($generated@@139 $generated@@442 $generated@@445)))
 :pattern ( ($generated@@139 ($generated@@441 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (= (type $generated@@446) $generated@@141) (= (type $generated@@447) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@245 $generated@@447)) (= ($generated@@78 ($generated@@291 $generated@@446) $generated@@143 $generated@@447) ($generated@@78 $generated@@446 $generated@@143 $generated@@447)))
 :pattern ( ($generated@@78 ($generated@@291 $generated@@446) $generated@@143 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@141) ($generated@@136 $generated@@448 $generated@@143)) (or ($generated@@266 $generated@@448) ($generated@@277 $generated@@448)))
 :pattern ( ($generated@@277 $generated@@448) ($generated@@136 $generated@@448 $generated@@143))
 :pattern ( ($generated@@266 $generated@@448) ($generated@@136 $generated@@448 $generated@@143))
)))
(assert (forall (($generated@@450 T@T) ) (! (= (type ($generated@@449 $generated@@450)) ($generated@@80 $generated@@450 $generated@@4))
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@328 (type $generated@@451))))
(let (($generated@@453 ($generated@@327 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@326 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@325 $generated@@453 $generated@@452)) (= ($generated@@324 $generated@@451) ($generated@@449 $generated@@453))))))
 :pattern ( ($generated@@324 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@328 (type $generated@@454))))
(let (($generated@@456 ($generated@@327 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@326 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@325 $generated@@456 $generated@@455)) (= ($generated@@375 $generated@@454) ($generated@@449 $generated@@455))))))
 :pattern ( ($generated@@375 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@328 (type $generated@@457))))
(let (($generated@@459 ($generated@@327 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@326 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@325 $generated@@459 $generated@@458)) (= ($generated@@407 $generated@@457) ($generated@@449 $generated@@156))))))
 :pattern ( ($generated@@407 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@310 (type $generated@@460))))
(let (($generated@@462 ($generated@@309 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@308 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@307 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@156) (= (type $generated@@464) $generated@@156)) ($generated@@0 ($generated@@85 ($generated@@399 $generated@@460) ($generated@@295 ($generated@@237 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@399 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@328 (type $generated@@465))))
(let (($generated@@467 ($generated@@327 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@326 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@325 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@156) (= (type $generated@@469) $generated@@156)) ($generated@@0 ($generated@@85 ($generated@@407 $generated@@465) ($generated@@295 ($generated@@237 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@407 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@156) ($generated@@238 $generated@@470 $generated@@46)) (and (= ($generated@@295 ($generated@@353 $generated@@2 $generated@@470)) $generated@@470) ($generated@@136 ($generated@@353 $generated@@2 $generated@@470) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@470 $generated@@46))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@156) ($generated@@238 $generated@@471 $generated@@47)) (and (= ($generated@@295 ($generated@@353 $generated@@3 $generated@@471)) $generated@@471) ($generated@@136 ($generated@@353 $generated@@3 $generated@@471) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@471 $generated@@47))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@156) ($generated@@238 $generated@@472 $generated@@44)) (and (= ($generated@@295 ($generated@@353 $generated@@4 $generated@@472)) $generated@@472) ($generated@@136 ($generated@@353 $generated@@4 $generated@@472) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@472 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@473) 21))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@156) ($generated@@238 $generated@@474 $generated@@45)) (and (= ($generated@@295 ($generated@@353 $generated@@473 $generated@@474)) $generated@@474) ($generated@@136 ($generated@@353 $generated@@473 $generated@@474) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@474 $generated@@45))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@140) (= (type $generated@@476) $generated@@141)) (= ($generated@@139 ($generated@@342 $generated@@475) $generated@@476) ($generated@@139 $generated@@475 $generated@@476)))
 :pattern ( ($generated@@139 ($generated@@342 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@68) (= ($generated@@238 ($generated@@295 $generated@@477) $generated@@478) ($generated@@136 $generated@@477 $generated@@478)))
 :pattern ( ($generated@@238 ($generated@@295 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@83 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@80 $generated@@480 $generated@@2)) (<= 0 ($generated@@300 $generated@@479))))
 :pattern ( ($generated@@300 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@285 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@284 $generated@@482)) (<= 0 ($generated@@283 $generated@@481))))
 :pattern ( ($generated@@283 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@68)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@483 ($generated@@425 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@425 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@487 ($generated@@425 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@425 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@76 ($generated@@425 $generated@@491 $generated@@492)) $generated@@58))
 :pattern ( ($generated@@425 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@493 ($generated@@433 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@433 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@68)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@68) (= (type $generated@@500) $generated@@68)) (= ($generated@@497 ($generated@@433 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@433 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@76 ($generated@@433 $generated@@501 $generated@@502)) $generated@@59))
 :pattern ( ($generated@@433 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@156) (= (type $generated@@504) $generated@@156)) (= ($generated@@161 ($generated@@237 $generated@@503 $generated@@504)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@147 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@147 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@147 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@147 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@156) (= (type $generated@@514) $generated@@156)) (= ($generated@@154 ($generated@@237 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@237 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@156) (= (type $generated@@516) $generated@@156)) (= ($generated@@155 ($generated@@237 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@237 $generated@@515 $generated@@516))
)))
(assert  (and (forall (($generated@@519 T@U) ) (! (= (type ($generated@@517 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@519))
)) (forall (($generated@@520 T@U) ($generated@@521 Int) ) (! (let (($generated@@522 ($generated@@285 (type $generated@@520))))
(= (type ($generated@@518 $generated@@520 $generated@@521)) $generated@@522))
 :pattern ( ($generated@@518 $generated@@520 $generated@@521))
))))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@284 $generated@@156)) (= (type $generated@@524) $generated@@68)) (= (type $generated@@525) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@523 ($generated@@517 $generated@@524) $generated@@525) (forall (($generated@@526 Int) ) (!  (=> (and (<= 0 $generated@@526) (< $generated@@526 ($generated@@283 $generated@@523))) ($generated@@269 ($generated@@518 $generated@@523 $generated@@526) $generated@@524 $generated@@525))
 :pattern ( ($generated@@518 $generated@@523 $generated@@526))
))))
 :pattern ( ($generated@@78 $generated@@523 ($generated@@517 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@528 Int) ) (! (= ($generated@@527 ($generated@@79 $generated@@528)) $generated@@528)
 :pattern ( ($generated@@79 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@529 ($generated@@252 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@252 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@76 ($generated@@252 $generated@@532)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@68) (= ($generated@@533 ($generated@@257 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@257 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@76 ($generated@@257 $generated@@536)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@537 ($generated@@164 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@164 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@76 ($generated@@164 $generated@@540)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@541 ($generated@@517 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@517 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@76 ($generated@@517 $generated@@544)) $generated@@57))
 :pattern ( ($generated@@517 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@141) (= ($generated@@161 ($generated@@291 $generated@@545)) $generated@@65))
 :pattern ( ($generated@@291 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@141) (= ($generated@@343 ($generated@@291 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@291 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
(= ($generated@@353 $generated@@548 ($generated@@295 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@295 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@308 $generated@@156 $generated@@156)) (= (type $generated@@550) $generated@@68)) (= (type $generated@@551) $generated@@68)) (= ($generated@@136 $generated@@549 ($generated@@425 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@306 $generated@@549) $generated@@552))) (and ($generated@@238 ($generated@@85 ($generated@@400 $generated@@549) $generated@@552) $generated@@551) ($generated@@238 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@549) $generated@@552))
 :pattern ( ($generated@@85 ($generated@@306 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@136 $generated@@549 ($generated@@425 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@326 $generated@@156 $generated@@156)) (= (type $generated@@554) $generated@@68)) (= (type $generated@@555) $generated@@68)) (= ($generated@@136 $generated@@553 ($generated@@433 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@324 $generated@@553) $generated@@556))) (and ($generated@@238 ($generated@@85 ($generated@@408 $generated@@553) $generated@@556) $generated@@555) ($generated@@238 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@553) $generated@@556))
 :pattern ( ($generated@@85 ($generated@@324 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@136 $generated@@553 ($generated@@433 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@156) (= (type $generated@@560) $generated@@156)) (< ($generated@@557 $generated@@559) ($generated@@558 ($generated@@237 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@237 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@156) (= (type $generated@@562) $generated@@156)) (< ($generated@@557 $generated@@562) ($generated@@558 ($generated@@237 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@237 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@156) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) $generated@@68)) ($generated@@238 $generated@@563 ($generated@@425 $generated@@564 $generated@@565))) (and (= ($generated@@295 ($generated@@353 ($generated@@308 $generated@@156 $generated@@156) $generated@@563)) $generated@@563) ($generated@@136 ($generated@@353 ($generated@@308 $generated@@156 $generated@@156) $generated@@563) ($generated@@425 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@238 $generated@@563 ($generated@@425 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@156) (= (type $generated@@567) $generated@@68)) (= (type $generated@@568) $generated@@68)) ($generated@@238 $generated@@566 ($generated@@433 $generated@@567 $generated@@568))) (and (= ($generated@@295 ($generated@@353 ($generated@@326 $generated@@156 $generated@@156) $generated@@566)) $generated@@566) ($generated@@136 ($generated@@353 ($generated@@326 $generated@@156 $generated@@156) $generated@@566) ($generated@@433 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@238 $generated@@566 ($generated@@433 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@68) (= (type $generated@@570) $generated@@68)) (= (type $generated@@571) $generated@@156)) ($generated@@238 $generated@@571 ($generated@@147 $generated@@569 $generated@@570))) (and (= ($generated@@295 ($generated@@353 $generated@@141 $generated@@571)) $generated@@571) ($generated@@136 ($generated@@353 $generated@@141 $generated@@571) ($generated@@147 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@238 $generated@@571 ($generated@@147 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@141) (< ($generated@@558 $generated@@572) ($generated@@558 ($generated@@291 $generated@@572))))
 :pattern ( ($generated@@291 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
 (not ($generated@@0 ($generated@@85 ($generated@@449 $generated@@574) $generated@@573))))
 :pattern ( (let (($generated@@574 (type $generated@@573)))
($generated@@85 ($generated@@449 $generated@@574) $generated@@573)))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@73)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@68) (= (type $generated@@578) $generated@@68)) (and (= ($generated@@76 ($generated@@147 $generated@@577 $generated@@578)) $generated@@62) (= ($generated@@575 ($generated@@147 $generated@@577 $generated@@578)) $generated@@66)))
 :pattern ( ($generated@@147 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@141) (= ($generated@@557 ($generated@@295 $generated@@579)) ($generated@@558 $generated@@579)))
 :pattern ( ($generated@@557 ($generated@@295 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@156) ($generated@@238 $generated@@580 ($generated@@79 0))) (and (= ($generated@@295 ($generated@@353 $generated@@2 $generated@@580)) $generated@@580) ($generated@@136 ($generated@@353 ($generated@@80 $generated@@156 $generated@@4) $generated@@580) ($generated@@79 0))))
 :pattern ( ($generated@@238 $generated@@580 ($generated@@79 0)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@156) (= (type $generated@@582) $generated@@68)) ($generated@@238 $generated@@581 ($generated@@252 $generated@@582))) (and (= ($generated@@295 ($generated@@353 ($generated@@80 $generated@@156 $generated@@4) $generated@@581)) $generated@@581) ($generated@@136 ($generated@@353 ($generated@@80 $generated@@156 $generated@@4) $generated@@581) ($generated@@252 $generated@@582))))
 :pattern ( ($generated@@238 $generated@@581 ($generated@@252 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@156) (= (type $generated@@584) $generated@@68)) ($generated@@238 $generated@@583 ($generated@@257 $generated@@584))) (and (= ($generated@@295 ($generated@@353 ($generated@@80 $generated@@156 $generated@@4) $generated@@583)) $generated@@583) ($generated@@136 ($generated@@353 ($generated@@80 $generated@@156 $generated@@4) $generated@@583) ($generated@@257 $generated@@584))))
 :pattern ( ($generated@@238 $generated@@583 ($generated@@257 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@156) (= (type $generated@@586) $generated@@68)) ($generated@@238 $generated@@585 ($generated@@164 $generated@@586))) (and (= ($generated@@295 ($generated@@353 ($generated@@80 $generated@@156 $generated@@2) $generated@@585)) $generated@@585) ($generated@@136 ($generated@@353 ($generated@@80 $generated@@156 $generated@@2) $generated@@585) ($generated@@164 $generated@@586))))
 :pattern ( ($generated@@238 $generated@@585 ($generated@@164 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@156) (= (type $generated@@588) $generated@@68)) ($generated@@238 $generated@@587 ($generated@@517 $generated@@588))) (and (= ($generated@@295 ($generated@@353 ($generated@@284 $generated@@156) $generated@@587)) $generated@@587) ($generated@@136 ($generated@@353 ($generated@@284 $generated@@156) $generated@@587) ($generated@@517 $generated@@588))))
 :pattern ( ($generated@@238 $generated@@587 ($generated@@517 $generated@@588)))
)))
(assert (= ($generated@@76 $generated@@143) $generated@@64))
(assert (= ($generated@@575 $generated@@143) $generated@@67))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@80 $generated@@156 $generated@@2)) (= (type $generated@@590) $generated@@68)) (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@589 ($generated@@164 $generated@@590) $generated@@591) (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@156) (< 0 ($generated ($generated@@85 $generated@@589 $generated@@592)))) ($generated@@269 $generated@@592 $generated@@590 $generated@@591))
 :pattern ( ($generated@@85 $generated@@589 $generated@@592))
))))
 :pattern ( ($generated@@78 $generated@@589 ($generated@@164 $generated@@590) $generated@@591))
)))
(assert (= $generated@@162 ($generated@@262 $generated@@162)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@141) (= (type $generated@@594) $generated@@68)) (= (type $generated@@595) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@245 $generated@@595) (and ($generated@@146 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@68) ($generated@@78 $generated@@593 ($generated@@147 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@78 $generated@@593 ($generated@@147 $generated@@594 $generated@@596) $generated@@595))
))))) ($generated@@269 ($generated@@154 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@269 ($generated@@154 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@141) (= (type $generated@@598) $generated@@68)) (= (type $generated@@599) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@245 $generated@@599) (and ($generated@@146 $generated@@597) (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@68) ($generated@@78 $generated@@597 ($generated@@147 $generated@@600 $generated@@598) $generated@@599))
 :pattern ( ($generated@@78 $generated@@597 ($generated@@147 $generated@@600 $generated@@598) $generated@@599))
))))) ($generated@@269 ($generated@@155 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@269 ($generated@@155 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@141) (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@245 $generated@@602) (and ($generated@@277 $generated@@601) ($generated@@78 $generated@@601 $generated@@143 $generated@@602)))) ($generated@@78 ($generated@@343 $generated@@601) $generated@@143 $generated@@602))
 :pattern ( ($generated@@78 ($generated@@343 $generated@@601) $generated@@143 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@156) (= (type $generated@@604) $generated@@156)) (= ($generated@@237 ($generated@@262 $generated@@603) ($generated@@262 $generated@@604)) ($generated@@262 ($generated@@237 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@237 ($generated@@262 $generated@@603) ($generated@@262 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@141) (= ($generated@@291 ($generated@@262 $generated@@605)) ($generated@@262 ($generated@@291 $generated@@605))))
 :pattern ( ($generated@@291 ($generated@@262 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (! (= ($generated@@295 ($generated@@262 $generated@@606)) ($generated@@262 ($generated@@295 $generated@@606)))
 :pattern ( ($generated@@295 ($generated@@262 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@285 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@284 $generated@@608)) (= ($generated@@283 $generated@@607) 0)) (= $generated@@607 ($generated@@282 $generated@@608))))
 :pattern ( ($generated@@283 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@610)))
 (=> (and (and (= (type $generated@@609) ($generated@@80 $generated@@612 $generated@@2)) (= (type $generated@@611) $generated@@2)) (<= 0 ($generated $generated@@611))) (= ($generated@@300 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)) (+ (- ($generated@@300 $generated@@609) ($generated ($generated@@85 $generated@@609 $generated@@610))) ($generated $generated@@611)))))
 :pattern ( ($generated@@300 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@614) $generated@@2)) ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
 :pattern ( ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@616) $generated@@3)) ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
 :pattern ( ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@618) $generated@@4)) ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
 :pattern ( ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@620) $generated@@473)) ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
 :pattern ( ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@622) $generated@@156)) ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
 :pattern ( ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@284 $generated@@156)) (= (type $generated@@624) $generated@@68)) (= ($generated@@136 $generated@@623 ($generated@@517 $generated@@624)) (forall (($generated@@625 Int) ) (!  (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@283 $generated@@623))) ($generated@@238 ($generated@@518 $generated@@623 $generated@@625) $generated@@624))
 :pattern ( ($generated@@518 $generated@@623 $generated@@625))
))))
 :pattern ( ($generated@@136 $generated@@623 ($generated@@517 $generated@@624)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 Int) ) (!  (=> (= (type $generated@@627) ($generated@@284 $generated@@156)) (=> (and (<= 0 $generated@@628) (< $generated@@628 ($generated@@283 $generated@@627))) (< ($generated@@558 ($generated@@353 $generated@@141 ($generated@@518 $generated@@627 $generated@@628))) ($generated@@626 $generated@@627))))
 :pattern ( ($generated@@558 ($generated@@353 $generated@@141 ($generated@@518 $generated@@627 $generated@@628))))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@308 $generated@@156 $generated@@156)) (= (type $generated@@630) $generated@@68)) (= (type $generated@@631) $generated@@68)) ($generated@@136 $generated@@629 ($generated@@425 $generated@@630 $generated@@631))) (and (and ($generated@@136 ($generated@@306 $generated@@629) ($generated@@252 $generated@@630)) ($generated@@136 ($generated@@364 $generated@@629) ($generated@@252 $generated@@631))) ($generated@@136 ($generated@@399 $generated@@629) ($generated@@252 ($generated@@147 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@136 $generated@@629 ($generated@@425 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) ($generated@@326 $generated@@156 $generated@@156)) (= (type $generated@@633) $generated@@68)) (= (type $generated@@634) $generated@@68)) ($generated@@136 $generated@@632 ($generated@@433 $generated@@633 $generated@@634))) (and (and ($generated@@136 ($generated@@324 $generated@@632) ($generated@@257 $generated@@633)) ($generated@@136 ($generated@@375 $generated@@632) ($generated@@257 $generated@@634))) ($generated@@136 ($generated@@407 $generated@@632) ($generated@@257 ($generated@@147 $generated@@633 $generated@@634)))))
 :pattern ( ($generated@@136 $generated@@632 ($generated@@433 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@2) ($generated@@136 $generated@@635 $generated@@46))
 :pattern ( ($generated@@136 $generated@@635 $generated@@46))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@3) ($generated@@136 $generated@@636 $generated@@47))
 :pattern ( ($generated@@136 $generated@@636 $generated@@47))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@4) ($generated@@136 $generated@@637 $generated@@44))
 :pattern ( ($generated@@136 $generated@@637 $generated@@44))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@473) ($generated@@136 $generated@@638 $generated@@45))
 :pattern ( ($generated@@136 $generated@@638 $generated@@45))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@156) ($generated@@136 $generated@@639 $generated@@48))
 :pattern ( ($generated@@136 $generated@@639 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@640) $generated@@141) (= (type $generated@@641) $generated@@141)) (= (type $generated@@642) $generated@@141)) (= (type $generated@@643) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@644) $generated@@141)) (= (type $generated@@645) $generated@@141)) (= (type $generated@@646) ($generated@@171 $generated@@81 $generated@@4))) (= (type $generated@@647) $generated@@81)) (= (type $generated@@648) ($generated@@171 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@650 true))
(let (($generated@@651  (=> (and (= $generated@@640 ($generated@@291 $generated@@641)) ($generated@@136 $generated@@641 $generated@@143)) (=> (and (and (and ($generated@@136 $generated@@642 $generated@@143) ($generated@@78 $generated@@642 $generated@@143 $generated@@643)) (= $generated@@644 $generated@@641)) (and (and ($generated@@136 $generated@@644 $generated@@143) (= $generated@@642 $generated@@644)) (and ($generated@@78 $generated@@642 $generated@@143 $generated@@643) (= (ControlFlow 0 6) (- 0 5))))) (< ($generated@@558 $generated@@642) ($generated@@558 $generated@@645))))))
(let (($generated@@652  (=> (not (= $generated@@640 $generated@@162)) (and (=> (= (ControlFlow 0 8) 6) $generated@@651) (=> (= (ControlFlow 0 8) 7) $generated@@650)))))
(let (($generated@@653 true))
(let (($generated@@654  (=> (and (= $generated@@645 ($generated@@291 $generated@@640)) ($generated@@136 $generated@@640 $generated@@143)) (and (=> (= (ControlFlow 0 9) 4) $generated@@653) (=> (= (ControlFlow 0 9) 8) $generated@@652)))))
(let (($generated@@655 true))
(let (($generated@@656  (=> (not (= $generated@@645 $generated@@162)) (and (=> (= (ControlFlow 0 10) 9) $generated@@654) (=> (= (ControlFlow 0 10) 3) $generated@@655)))))
(let (($generated@@657 true))
(let (($generated@@658  (=> (= $generated@@646 ($generated@@225 $generated@@647 $generated@@643 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 2) $generated@@657) (=> (= (ControlFlow 0 11) 10) $generated@@656)))))
(let (($generated@@659 true))
(let (($generated@@660  (=> (= $generated@@648 ($generated@@170 $generated@@647 $generated@@643 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 1) $generated@@659) (=> (= (ControlFlow 0 12) 11) $generated@@658)))))
(let (($generated@@661  (=> (and (and (and ($generated@@245 $generated@@643) ($generated@@649 $generated@@643)) ($generated@@136 $generated@@645 $generated@@143)) (and (= 1 $generated@@138) (= (ControlFlow 0 13) 12))) $generated@@660)))
$generated@@661)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) Int)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U) Int)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@283 (Int) T@U)
(declare-fun $generated@@287 (Int) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@341 (T@T T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@374 (T@U) Bool)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@428 (Int Int) Int)
(declare-fun $generated@@432 (T@T) T@U)
(declare-fun $generated@@456 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@499 (T@U Int) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@614 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (= ($generated@@1 $generated@@138) 14))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) $generated@@138) (= (type $generated@@141) $generated@@138)) (and ($generated@@137 $generated@@140) ($generated@@137 $generated@@141))) (= ($generated@@136 $generated@@140 $generated@@141) (= ($generated@@139 $generated@@140) ($generated@@139 $generated@@141))))
 :pattern ( ($generated@@136 $generated@@140 $generated@@141) ($generated@@137 $generated@@140))
 :pattern ( ($generated@@136 $generated@@140 $generated@@141) ($generated@@137 $generated@@141))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@138) (= (type $generated@@145) $generated@@138)) (and ($generated@@142 $generated@@144) ($generated@@142 $generated@@145))) (= ($generated@@136 $generated@@144 $generated@@145) (= ($generated@@143 $generated@@144) ($generated@@143 $generated@@145))))
 :pattern ( ($generated@@136 $generated@@144 $generated@@145) ($generated@@142 $generated@@144))
 :pattern ( ($generated@@136 $generated@@144 $generated@@145) ($generated@@142 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@79 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@79 0)))
)))
(assert (= (type $generated@@151) $generated@@68))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@138) (or ($generated@@150 $generated@@152) (and (not (= 1 $generated@@148)) ($generated@@146 $generated@@152 $generated@@151)))) true)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@138) (or ($generated@@154 $generated@@155) (and (not (= 1 $generated@@148)) ($generated@@146 $generated@@155 $generated@@151)))) true)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@158 $generated@@159)) $generated@@68)
 :pattern ( ($generated@@157 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@68) (= (type $generated@@161) $generated@@68)) (= (type $generated@@162) $generated@@138)) ($generated@@146 $generated@@162 ($generated@@157 $generated@@160 $generated@@161))) ($generated@@156 $generated@@162))
 :pattern ( ($generated@@156 $generated@@162) ($generated@@146 $generated@@162 ($generated@@157 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@138) (= (type $generated@@170) $generated@@138)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@68)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@80 $generated@@166 $generated@@2)) (= (type $generated@@175) $generated@@68)) ($generated@@146 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@146 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@81 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@71 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@81) (= (type $generated@@226) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@227) ($generated@@70 $generated@@4))) (= (type $generated@@229) $generated@@81)) (= (type $generated@@230) ($generated@@70 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@138)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@68) (= (type $generated@@237) $generated@@68)) (= (type $generated@@238) $generated@@166)) (= (type $generated@@239) $generated@@166)) (= ($generated@@146 ($generated@@232 $generated@@238 $generated@@239) ($generated@@157 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@146 ($generated@@232 $generated@@238 $generated@@239) ($generated@@157 $generated@@236 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@138) (= (type $generated@@241) $generated@@138)) (= ($generated@@163 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@163 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@138) (= (type $generated@@243) $generated@@138)) (= ($generated@@136 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@136 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@80 $generated@@166 $generated@@4)) (= (type $generated@@247) $generated@@68)) (= ($generated@@146 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@166) ($generated@@0 ($generated@@85 $generated@@246 $generated@@248))) ($generated@@233 $generated@@248 $generated@@247))
 :pattern ( ($generated@@85 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@146 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@68)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@166 $generated@@4)) (= (type $generated@@252) $generated@@68)) (= ($generated@@146 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@166) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@233 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@146 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@254 $generated@@255) $generated@@255)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@256 $generated@@259) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@262) $generated@@68) (= (type $generated@@263) $generated@@68)) (= (type $generated@@264) $generated@@166)) (= (type $generated@@265) $generated@@166)) (= (type $generated@@266) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@260 $generated@@266)) (= ($generated@@78 ($generated@@232 $generated@@264 $generated@@265) ($generated@@157 $generated@@262 $generated@@263) $generated@@266)  (and ($generated@@261 $generated@@264 $generated@@262 $generated@@266) ($generated@@261 $generated@@265 $generated@@263 $generated@@266))))
 :pattern ( ($generated@@78 ($generated@@232 $generated@@264 $generated@@265) ($generated@@157 $generated@@262 $generated@@263) $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@72)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (= (type $generated@@269) $generated@@138) (= ($generated@@156 $generated@@269) (= ($generated@@267 $generated@@269) $generated@@61)))
 :pattern ( ($generated@@156 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@138) (= ($generated@@137 $generated@@270) (= ($generated@@267 $generated@@270) $generated@@63)))
 :pattern ( ($generated@@137 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@138) (= ($generated@@142 $generated@@271) (= ($generated@@267 $generated@@271) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@138) ($generated@@156 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@166) (= (type $generated@@274) $generated@@166)) (= $generated@@272 ($generated@@232 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@156 $generated@@272))
)))
(assert  (and (and (forall (($generated@@279 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@279)) 17)) (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
))) (forall (($generated@@281 T@T) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@277 $generated@@281))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@282)) 0)
 :pattern ( ($generated@@275 $generated@@282))
)))
(assert (forall (($generated@@284 Int) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@138)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@138) ($generated@@137 $generated@@285)) (exists (($generated@@286 Int) ) (= $generated@@285 ($generated@@283 $generated@@286))))
 :pattern ( ($generated@@137 $generated@@285))
)))
(assert (forall (($generated@@288 Int) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@138)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@138) ($generated@@142 $generated@@289)) (exists (($generated@@290 Int) ) (= $generated@@289 ($generated@@287 $generated@@290))))
 :pattern ( ($generated@@142 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@166)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@68) (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@261 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@78 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@261 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@80 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@83 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@80 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@85 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 18)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@80 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@85 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@85 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 19)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@80 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@85 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@85 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@83 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@80 $generated@@339 $generated@@2)) (= ($generated@@172 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (and (<= 0 ($generated ($generated@@85 $generated@@338 $generated@@340))) (<= ($generated ($generated@@85 $generated@@338 $generated@@340)) ($generated@@296 $generated@@338))))
 :pattern ( ($generated@@85 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@172 $generated@@338))
)))
(assert (forall (($generated@@342 T@T) ($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@341 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@233 $generated@@344 $generated@@151)) (and (= ($generated@@291 ($generated@@341 $generated@@138 $generated@@344)) $generated@@344) ($generated@@146 ($generated@@341 $generated@@138 $generated@@344) $generated@@151)))
 :pattern ( ($generated@@233 $generated@@344 $generated@@151))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@306 (type $generated@@345))))
(let (($generated@@347 ($generated@@305 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@304 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@303 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@85 ($generated@@302 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@302 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@306 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@80 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@306 (type $generated@@352))))
(let (($generated@@354 ($generated@@305 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@304 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@303 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@324 (type $generated@@356))))
(let (($generated@@358 ($generated@@323 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@322 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@321 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@320 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@324 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@80 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@324 (type $generated@@363))))
(let (($generated@@365 ($generated@@323 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@322 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@321 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@80 $generated@@166 $generated@@2)) (= (type $generated@@368) $generated@@68)) (= ($generated@@146 $generated@@367 ($generated@@171 $generated@@368)) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@166) (< 0 ($generated ($generated@@85 $generated@@367 $generated@@369)))) ($generated@@233 $generated@@369 $generated@@368))
 :pattern ( ($generated@@85 $generated@@367 $generated@@369))
))))
 :pattern ( ($generated@@146 $generated@@367 ($generated@@171 $generated@@368)))
)))
(assert (forall (($generated@@370 Int) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@260 $generated@@371)) (= ($generated@@78 ($generated@@283 $generated@@370) $generated@@151 $generated@@371) ($generated@@78 ($generated@@8 $generated@@370) $generated@@46 $generated@@371)))
 :pattern ( ($generated@@78 ($generated@@283 $generated@@370) $generated@@151 $generated@@371))
)))
(assert (forall (($generated@@372 Int) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@260 $generated@@373)) (= ($generated@@78 ($generated@@287 $generated@@372) $generated@@151 $generated@@373) ($generated@@78 ($generated@@8 $generated@@372) $generated@@46 $generated@@373)))
 :pattern ( ($generated@@78 ($generated@@287 $generated@@372) $generated@@151 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@138) ($generated@@374 $generated@@375)) (or ($generated@@137 $generated@@375) ($generated@@142 $generated@@375)))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@80 $generated@@166 $generated@@4)) (= (type $generated@@377) $generated@@68)) (= (type $generated@@378) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@376 ($generated@@244 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@166) ($generated@@0 ($generated@@85 $generated@@376 $generated@@379))) ($generated@@261 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@85 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@78 $generated@@376 ($generated@@244 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@80 $generated@@166 $generated@@4)) (= (type $generated@@381) $generated@@68)) (= (type $generated@@382) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@380 ($generated@@249 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@166) ($generated@@0 ($generated@@85 $generated@@380 $generated@@383))) ($generated@@261 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@85 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@78 $generated@@380 ($generated@@249 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@85 ($generated@@297 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@85 ($generated@@297 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@80 $generated@@166 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@306 (type $generated@@389))))
(let (($generated@@391 ($generated@@305 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@80 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@304 $generated@@166 $generated@@166)) (= (type $generated@@393) $generated@@166)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@85 ($generated@@302 $generated@@392) ($generated@@164 ($generated@@341 $generated@@138 $generated@@393)))) (= ($generated@@85 ($generated@@387 $generated@@392) ($generated@@164 ($generated@@341 $generated@@138 $generated@@393))) ($generated@@165 ($generated@@341 $generated@@138 $generated@@393))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@80 $generated@@166 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@324 (type $generated@@397))))
(let (($generated@@399 ($generated@@323 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@80 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@401) $generated@@166)) (= ($generated@@0 ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@85 ($generated@@320 $generated@@400) ($generated@@164 ($generated@@341 $generated@@138 $generated@@401)))) (= ($generated@@85 ($generated@@395 $generated@@400) ($generated@@164 ($generated@@341 $generated@@138 $generated@@401))) ($generated@@165 ($generated@@341 $generated@@138 $generated@@401))))))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@305 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@304 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@85 ($generated@@349 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@85 ($generated@@302 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@85 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@85 ($generated@@302 $generated@@402) $generated@@406))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@85 ($generated@@349 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@323 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@322 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@85 ($generated@@360 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@85 ($generated@@320 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@85 ($generated@@360 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@68)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@304 $generated@@166 $generated@@166)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@166) ($generated@@0 ($generated@@85 ($generated@@302 $generated@@415) $generated@@419))) (and ($generated@@261 ($generated@@85 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@261 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@302 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@68)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@166) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@423) $generated@@427))) (and ($generated@@261 ($generated@@85 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@261 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 Int) ($generated@@430 Int) ) (! (= ($generated@@428 $generated@@429 $generated@@430) (div $generated@@429 $generated@@430))
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@138) ($generated@@146 $generated@@431 $generated@@151)) (or ($generated@@137 $generated@@431) ($generated@@142 $generated@@431)))
 :pattern ( ($generated@@142 $generated@@431) ($generated@@146 $generated@@431 $generated@@151))
 :pattern ( ($generated@@137 $generated@@431) ($generated@@146 $generated@@431 $generated@@151))
)))
(assert (forall (($generated@@433 T@T) ) (! (= (type ($generated@@432 $generated@@433)) ($generated@@80 $generated@@433 $generated@@4))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@324 (type $generated@@434))))
(let (($generated@@436 ($generated@@323 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@322 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@321 $generated@@436 $generated@@435)) (= ($generated@@320 $generated@@434) ($generated@@432 $generated@@436))))))
 :pattern ( ($generated@@320 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@324 (type $generated@@437))))
(let (($generated@@439 ($generated@@323 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@322 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@321 $generated@@439 $generated@@438)) (= ($generated@@360 $generated@@437) ($generated@@432 $generated@@438))))))
 :pattern ( ($generated@@360 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@324 (type $generated@@440))))
(let (($generated@@442 ($generated@@323 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@322 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@321 $generated@@442 $generated@@441)) (= ($generated@@394 $generated@@440) ($generated@@432 $generated@@166))))))
 :pattern ( ($generated@@394 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@306 (type $generated@@443))))
(let (($generated@@445 ($generated@@305 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@304 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@303 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@166) (= (type $generated@@447) $generated@@166)) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@443) ($generated@@291 ($generated@@232 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@386 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@324 (type $generated@@448))))
(let (($generated@@450 ($generated@@323 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@322 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@321 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@166) (= (type $generated@@452) $generated@@166)) ($generated@@0 ($generated@@85 ($generated@@394 $generated@@448) ($generated@@291 ($generated@@232 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@394 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@233 $generated@@453 $generated@@46)) (and (= ($generated@@291 ($generated@@341 $generated@@2 $generated@@453)) $generated@@453) ($generated@@146 ($generated@@341 $generated@@2 $generated@@453) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@453 $generated@@46))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@233 $generated@@454 $generated@@47)) (and (= ($generated@@291 ($generated@@341 $generated@@3 $generated@@454)) $generated@@454) ($generated@@146 ($generated@@341 $generated@@3 $generated@@454) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@454 $generated@@47))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@166) ($generated@@233 $generated@@455 $generated@@44)) (and (= ($generated@@291 ($generated@@341 $generated@@4 $generated@@455)) $generated@@455) ($generated@@146 ($generated@@341 $generated@@4 $generated@@455) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@455 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@456) 20))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@166) ($generated@@233 $generated@@457 $generated@@45)) (and (= ($generated@@291 ($generated@@341 $generated@@456 $generated@@457)) $generated@@457) ($generated@@146 ($generated@@341 $generated@@456 $generated@@457) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@457 $generated@@45))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@68) (= ($generated@@233 ($generated@@291 $generated@@458) $generated@@459) ($generated@@146 $generated@@458 $generated@@459)))
 :pattern ( ($generated@@233 ($generated@@291 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@83 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@80 $generated@@461 $generated@@2)) (<= 0 ($generated@@296 $generated@@460))))
 :pattern ( ($generated@@296 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@278 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@277 $generated@@463)) (<= 0 ($generated@@276 $generated@@462))))
 :pattern ( ($generated@@276 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@68) (= (type $generated@@467) $generated@@68)) (= ($generated@@464 ($generated@@412 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@412 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@468 ($generated@@412 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@412 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@76 ($generated@@412 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@420 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@420 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@68)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@478 ($generated@@420 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@420 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@76 ($generated@@420 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@166) (= (type $generated@@485) $generated@@166)) (= ($generated@@267 ($generated@@232 $generated@@484 $generated@@485)) $generated@@61))
 :pattern ( ($generated@@232 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@157 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@157 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@157 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@157 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@166) (= (type $generated@@495) $generated@@166)) (= ($generated@@164 ($generated@@232 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@232 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@166) (= (type $generated@@497) $generated@@166)) (= ($generated@@165 ($generated@@232 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@232 $generated@@496 $generated@@497))
)))
(assert  (and (forall (($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@498 $generated@@500))
)) (forall (($generated@@501 T@U) ($generated@@502 Int) ) (! (let (($generated@@503 ($generated@@278 (type $generated@@501))))
(= (type ($generated@@499 $generated@@501 $generated@@502)) $generated@@503))
 :pattern ( ($generated@@499 $generated@@501 $generated@@502))
))))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@277 $generated@@166)) (= (type $generated@@505) $generated@@68)) (= (type $generated@@506) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@504 ($generated@@498 $generated@@505) $generated@@506) (forall (($generated@@507 Int) ) (!  (=> (and (<= 0 $generated@@507) (< $generated@@507 ($generated@@276 $generated@@504))) ($generated@@261 ($generated@@499 $generated@@504 $generated@@507) $generated@@505 $generated@@506))
 :pattern ( ($generated@@499 $generated@@504 $generated@@507))
))))
 :pattern ( ($generated@@78 $generated@@504 ($generated@@498 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@509 Int) ) (! (= ($generated@@508 ($generated@@79 $generated@@509)) $generated@@509)
 :pattern ( ($generated@@79 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@68) (= ($generated@@510 ($generated@@244 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@244 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@76 ($generated@@244 $generated@@513)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@68) (= ($generated@@514 ($generated@@249 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@249 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@76 ($generated@@249 $generated@@517)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@68) (= ($generated@@518 ($generated@@171 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@171 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@76 ($generated@@171 $generated@@521)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@68) (= ($generated@@522 ($generated@@498 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@498 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@76 ($generated@@498 $generated@@525)) $generated@@57))
 :pattern ( ($generated@@498 $generated@@525))
)))
(assert (forall (($generated@@526 Int) ) (! (= ($generated@@267 ($generated@@283 $generated@@526)) $generated@@63)
 :pattern ( ($generated@@283 $generated@@526))
)))
(assert (forall (($generated@@527 Int) ) (! (= ($generated@@139 ($generated@@283 $generated@@527)) $generated@@527)
 :pattern ( ($generated@@283 $generated@@527))
)))
(assert (forall (($generated@@528 Int) ) (! (= ($generated@@267 ($generated@@287 $generated@@528)) $generated@@65)
 :pattern ( ($generated@@287 $generated@@528))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@143 ($generated@@287 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@287 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(= ($generated@@341 $generated@@531 ($generated@@291 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@291 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@304 $generated@@166 $generated@@166)) (= (type $generated@@533) $generated@@68)) (= (type $generated@@534) $generated@@68)) (= ($generated@@146 $generated@@532 ($generated@@412 $generated@@533 $generated@@534)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@166) ($generated@@0 ($generated@@85 ($generated@@302 $generated@@532) $generated@@535))) (and ($generated@@233 ($generated@@85 ($generated@@387 $generated@@532) $generated@@535) $generated@@534) ($generated@@233 $generated@@535 $generated@@533)))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@532) $generated@@535))
 :pattern ( ($generated@@85 ($generated@@302 $generated@@532) $generated@@535))
))))
 :pattern ( ($generated@@146 $generated@@532 ($generated@@412 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@537) $generated@@68)) (= (type $generated@@538) $generated@@68)) (= ($generated@@146 $generated@@536 ($generated@@420 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@536) $generated@@539))) (and ($generated@@233 ($generated@@85 ($generated@@395 $generated@@536) $generated@@539) $generated@@538) ($generated@@233 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@536) $generated@@539))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@146 $generated@@536 ($generated@@420 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@166) (= (type $generated@@543) $generated@@166)) (< ($generated@@540 $generated@@542) ($generated@@541 ($generated@@232 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@232 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@166) (= (type $generated@@545) $generated@@166)) (< ($generated@@540 $generated@@545) ($generated@@541 ($generated@@232 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@232 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@146 ($generated@@283 $generated@@546) $generated@@151) ($generated@@146 ($generated@@8 $generated@@546) $generated@@46))
 :pattern ( ($generated@@146 ($generated@@283 $generated@@546) $generated@@151))
)))
(assert (forall (($generated@@547 Int) ) (! (= ($generated@@146 ($generated@@287 $generated@@547) $generated@@151) ($generated@@146 ($generated@@8 $generated@@547) $generated@@46))
 :pattern ( ($generated@@146 ($generated@@287 $generated@@547) $generated@@151))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@166) (= (type $generated@@549) $generated@@68)) (= (type $generated@@550) $generated@@68)) ($generated@@233 $generated@@548 ($generated@@412 $generated@@549 $generated@@550))) (and (= ($generated@@291 ($generated@@341 ($generated@@304 $generated@@166 $generated@@166) $generated@@548)) $generated@@548) ($generated@@146 ($generated@@341 ($generated@@304 $generated@@166 $generated@@166) $generated@@548) ($generated@@412 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@233 $generated@@548 ($generated@@412 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@166) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) $generated@@68)) ($generated@@233 $generated@@551 ($generated@@420 $generated@@552 $generated@@553))) (and (= ($generated@@291 ($generated@@341 ($generated@@322 $generated@@166 $generated@@166) $generated@@551)) $generated@@551) ($generated@@146 ($generated@@341 ($generated@@322 $generated@@166 $generated@@166) $generated@@551) ($generated@@420 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@233 $generated@@551 ($generated@@420 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@68) (= (type $generated@@555) $generated@@68)) (= (type $generated@@556) $generated@@166)) ($generated@@233 $generated@@556 ($generated@@157 $generated@@554 $generated@@555))) (and (= ($generated@@291 ($generated@@341 $generated@@138 $generated@@556)) $generated@@556) ($generated@@146 ($generated@@341 $generated@@138 $generated@@556) ($generated@@157 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@233 $generated@@556 ($generated@@157 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (not ($generated@@0 ($generated@@85 ($generated@@432 $generated@@558) $generated@@557))))
 :pattern ( (let (($generated@@558 (type $generated@@557)))
($generated@@85 ($generated@@432 $generated@@558) $generated@@557)))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@73)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@68) (= (type $generated@@562) $generated@@68)) (and (= ($generated@@76 ($generated@@157 $generated@@561 $generated@@562)) $generated@@62) (= ($generated@@559 ($generated@@157 $generated@@561 $generated@@562)) $generated@@66)))
 :pattern ( ($generated@@157 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@138) (= (type $generated@@564) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@564) (and ($generated@@137 $generated@@563) ($generated@@78 $generated@@563 $generated@@151 $generated@@564)))) ($generated@@78 ($generated@@8 ($generated@@139 $generated@@563)) $generated@@46 $generated@@564))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@139 $generated@@563)) $generated@@46 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@138) (= (type $generated@@566) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@566) (and ($generated@@142 $generated@@565) ($generated@@78 $generated@@565 $generated@@151 $generated@@566)))) ($generated@@78 ($generated@@8 ($generated@@143 $generated@@565)) $generated@@46 $generated@@566))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@143 $generated@@565)) $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@138) (= ($generated@@540 ($generated@@291 $generated@@567)) ($generated@@541 $generated@@567)))
 :pattern ( ($generated@@540 ($generated@@291 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@166) ($generated@@233 $generated@@568 ($generated@@79 0))) (and (= ($generated@@291 ($generated@@341 $generated@@2 $generated@@568)) $generated@@568) ($generated@@146 ($generated@@341 ($generated@@80 $generated@@166 $generated@@4) $generated@@568) ($generated@@79 0))))
 :pattern ( ($generated@@233 $generated@@568 ($generated@@79 0)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@166) (= (type $generated@@570) $generated@@68)) ($generated@@233 $generated@@569 ($generated@@244 $generated@@570))) (and (= ($generated@@291 ($generated@@341 ($generated@@80 $generated@@166 $generated@@4) $generated@@569)) $generated@@569) ($generated@@146 ($generated@@341 ($generated@@80 $generated@@166 $generated@@4) $generated@@569) ($generated@@244 $generated@@570))))
 :pattern ( ($generated@@233 $generated@@569 ($generated@@244 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@166) (= (type $generated@@572) $generated@@68)) ($generated@@233 $generated@@571 ($generated@@249 $generated@@572))) (and (= ($generated@@291 ($generated@@341 ($generated@@80 $generated@@166 $generated@@4) $generated@@571)) $generated@@571) ($generated@@146 ($generated@@341 ($generated@@80 $generated@@166 $generated@@4) $generated@@571) ($generated@@249 $generated@@572))))
 :pattern ( ($generated@@233 $generated@@571 ($generated@@249 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@166) (= (type $generated@@574) $generated@@68)) ($generated@@233 $generated@@573 ($generated@@171 $generated@@574))) (and (= ($generated@@291 ($generated@@341 ($generated@@80 $generated@@166 $generated@@2) $generated@@573)) $generated@@573) ($generated@@146 ($generated@@341 ($generated@@80 $generated@@166 $generated@@2) $generated@@573) ($generated@@171 $generated@@574))))
 :pattern ( ($generated@@233 $generated@@573 ($generated@@171 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@166) (= (type $generated@@576) $generated@@68)) ($generated@@233 $generated@@575 ($generated@@498 $generated@@576))) (and (= ($generated@@291 ($generated@@341 ($generated@@277 $generated@@166) $generated@@575)) $generated@@575) ($generated@@146 ($generated@@341 ($generated@@277 $generated@@166) $generated@@575) ($generated@@498 $generated@@576))))
 :pattern ( ($generated@@233 $generated@@575 ($generated@@498 $generated@@576)))
)))
(assert (= ($generated@@76 $generated@@151) $generated@@64))
(assert (= ($generated@@559 $generated@@151) $generated@@67))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@80 $generated@@166 $generated@@2)) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@577 ($generated@@171 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@166) (< 0 ($generated ($generated@@85 $generated@@577 $generated@@580)))) ($generated@@261 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@85 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@78 $generated@@577 ($generated@@171 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@138) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@583) (and ($generated@@156 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@68) ($generated@@78 $generated@@581 ($generated@@157 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@78 $generated@@581 ($generated@@157 $generated@@582 $generated@@584) $generated@@583))
))))) ($generated@@261 ($generated@@164 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@261 ($generated@@164 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@138) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@587) (and ($generated@@156 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@68) ($generated@@78 $generated@@585 ($generated@@157 $generated@@588 $generated@@586) $generated@@587))
 :pattern ( ($generated@@78 $generated@@585 ($generated@@157 $generated@@588 $generated@@586) $generated@@587))
))))) ($generated@@261 ($generated@@165 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@261 ($generated@@165 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@166) (= (type $generated@@590) $generated@@166)) (= ($generated@@232 ($generated@@256 $generated@@589) ($generated@@256 $generated@@590)) ($generated@@256 ($generated@@232 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@232 ($generated@@256 $generated@@589) ($generated@@256 $generated@@590)))
)))
(assert (forall (($generated@@591 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@254 $generated@@591))) ($generated@@256 ($generated@@291 ($generated@@8 $generated@@591))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@254 $generated@@591))))
)))
(assert (forall (($generated@@592 Int) ) (! (= ($generated@@283 ($generated@@254 $generated@@592)) ($generated@@256 ($generated@@283 $generated@@592)))
 :pattern ( ($generated@@283 ($generated@@254 $generated@@592)))
)))
(assert (forall (($generated@@593 Int) ) (! (= ($generated@@287 ($generated@@254 $generated@@593)) ($generated@@256 ($generated@@287 $generated@@593)))
 :pattern ( ($generated@@287 ($generated@@254 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (! (= ($generated@@291 ($generated@@256 $generated@@594)) ($generated@@256 ($generated@@291 $generated@@594)))
 :pattern ( ($generated@@291 ($generated@@256 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@278 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@277 $generated@@596)) (= ($generated@@276 $generated@@595) 0)) (= $generated@@595 ($generated@@275 $generated@@596))))
 :pattern ( ($generated@@276 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@598)))
 (=> (and (and (= (type $generated@@597) ($generated@@80 $generated@@600 $generated@@2)) (= (type $generated@@599) $generated@@2)) (<= 0 ($generated $generated@@599))) (= ($generated@@296 ($generated@@86 $generated@@597 $generated@@598 $generated@@599)) (+ (- ($generated@@296 $generated@@597) ($generated ($generated@@85 $generated@@597 $generated@@598))) ($generated $generated@@599)))))
 :pattern ( ($generated@@296 ($generated@@86 $generated@@597 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@602) $generated@@2)) ($generated@@78 $generated@@602 $generated@@46 $generated@@601))
 :pattern ( ($generated@@78 $generated@@602 $generated@@46 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@604) $generated@@3)) ($generated@@78 $generated@@604 $generated@@47 $generated@@603))
 :pattern ( ($generated@@78 $generated@@604 $generated@@47 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@606) $generated@@4)) ($generated@@78 $generated@@606 $generated@@44 $generated@@605))
 :pattern ( ($generated@@78 $generated@@606 $generated@@44 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@608) $generated@@456)) ($generated@@78 $generated@@608 $generated@@45 $generated@@607))
 :pattern ( ($generated@@78 $generated@@608 $generated@@45 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@610) $generated@@166)) ($generated@@78 $generated@@610 $generated@@48 $generated@@609))
 :pattern ( ($generated@@78 $generated@@610 $generated@@48 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@277 $generated@@166)) (= (type $generated@@612) $generated@@68)) (= ($generated@@146 $generated@@611 ($generated@@498 $generated@@612)) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@276 $generated@@611))) ($generated@@233 ($generated@@499 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@499 $generated@@611 $generated@@613))
))))
 :pattern ( ($generated@@146 $generated@@611 ($generated@@498 $generated@@612)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 Int) ) (!  (=> (= (type $generated@@615) ($generated@@277 $generated@@166)) (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@276 $generated@@615))) (< ($generated@@541 ($generated@@341 $generated@@138 ($generated@@499 $generated@@615 $generated@@616))) ($generated@@614 $generated@@615))))
 :pattern ( ($generated@@541 ($generated@@341 $generated@@138 ($generated@@499 $generated@@615 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@304 $generated@@166 $generated@@166)) (= (type $generated@@618) $generated@@68)) (= (type $generated@@619) $generated@@68)) ($generated@@146 $generated@@617 ($generated@@412 $generated@@618 $generated@@619))) (and (and ($generated@@146 ($generated@@302 $generated@@617) ($generated@@244 $generated@@618)) ($generated@@146 ($generated@@349 $generated@@617) ($generated@@244 $generated@@619))) ($generated@@146 ($generated@@386 $generated@@617) ($generated@@244 ($generated@@157 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@146 $generated@@617 ($generated@@412 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@621) $generated@@68)) (= (type $generated@@622) $generated@@68)) ($generated@@146 $generated@@620 ($generated@@420 $generated@@621 $generated@@622))) (and (and ($generated@@146 ($generated@@320 $generated@@620) ($generated@@249 $generated@@621)) ($generated@@146 ($generated@@360 $generated@@620) ($generated@@249 $generated@@622))) ($generated@@146 ($generated@@394 $generated@@620) ($generated@@249 ($generated@@157 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@146 $generated@@620 ($generated@@420 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@2) ($generated@@146 $generated@@623 $generated@@46))
 :pattern ( ($generated@@146 $generated@@623 $generated@@46))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@3) ($generated@@146 $generated@@624 $generated@@47))
 :pattern ( ($generated@@146 $generated@@624 $generated@@47))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@4) ($generated@@146 $generated@@625 $generated@@44))
 :pattern ( ($generated@@146 $generated@@625 $generated@@44))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@456) ($generated@@146 $generated@@626 $generated@@45))
 :pattern ( ($generated@@146 $generated@@626 $generated@@45))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@166) ($generated@@146 $generated@@627 $generated@@48))
 :pattern ( ($generated@@146 $generated@@627 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () Int)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () Int)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@628) $generated@@138) (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@640) ($generated@@178 $generated@@81 $generated@@4))) (= (type $generated@@641) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@643  (=> (= (ControlFlow 0 11) (- 0 10)) (= ($generated@@149 $generated@@628) (ite ($generated@@137 $generated@@628) (let (($generated@@644 ($generated@@139 $generated@@628)))
(= ($generated@@254 2) ($generated@@428 10 $generated@@644))) ($generated@@0 ($generated@@256 ($generated@@11 false))))))))
(let (($generated@@645  (=> (= $generated@@628 ($generated@@287 $generated@@629)) (=> (and (and (= $generated@@630 $generated@@629) ($generated@@146 ($generated@@8 $generated@@630) $generated@@46)) (and (= $generated@@631 $generated@@630) (= (ControlFlow 0 14) 11))) $generated@@643))))
(let (($generated@@646  (=> (and (and (= $generated@@628 ($generated@@283 $generated@@632)) (= $generated@@633 $generated@@632)) (and ($generated@@146 ($generated@@8 $generated@@633) $generated@@46) (= $generated@@634 $generated@@633))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (not (= $generated@@634 0))) (=> (= (ControlFlow 0 12) 11) $generated@@643)))))
(let (($generated@@647 true))
(let (($generated@@648  (=> (not (= $generated@@628 ($generated@@283 $generated@@632))) (and (=> (= (ControlFlow 0 15) 14) $generated@@645) (=> (= (ControlFlow 0 15) 9) $generated@@647)))))
(let (($generated@@649  (=> ($generated@@78 $generated@@628 $generated@@151 $generated@@635) (=> (and ($generated@@150 $generated@@628) ($generated@@150 $generated@@628)) (and (=> (= (ControlFlow 0 16) 12) $generated@@646) (=> (= (ControlFlow 0 16) 15) $generated@@648))))))
(let (($generated@@650  (=> (and (and ($generated@@78 $generated@@628 $generated@@151 $generated@@635) ($generated@@154 $generated@@628)) (and ($generated@@154 $generated@@628) (= (ControlFlow 0 5) (- 0 4)))) (= (ite ($generated@@137 $generated@@628) (let (($generated@@651 ($generated@@139 $generated@@628)))
(= ($generated@@254 2) ($generated@@428 10 $generated@@651))) ($generated@@0 ($generated@@256 ($generated@@11 false))))  (not ($generated@@153 $generated@@628))))))
(let (($generated@@652  (=> (= $generated@@628 ($generated@@287 $generated@@629)) (=> (and (and (= $generated@@636 $generated@@629) ($generated@@146 ($generated@@8 $generated@@636) $generated@@46)) (and (= $generated@@637 $generated@@636) (= (ControlFlow 0 7) 5))) $generated@@650))))
(let (($generated@@653  (=> (and (= $generated@@628 ($generated@@283 $generated@@632)) (= $generated@@638 $generated@@632)) (=> (and (and ($generated@@146 ($generated@@8 $generated@@638) $generated@@46) (= $generated@@639 $generated@@638)) (and (not (= $generated@@639 0)) (= (ControlFlow 0 6) 5))) $generated@@650))))
(let (($generated@@654 true))
(let (($generated@@655  (=> (not (= $generated@@628 ($generated@@283 $generated@@632))) (and (=> (= (ControlFlow 0 8) 7) $generated@@652) (=> (= (ControlFlow 0 8) 3) $generated@@654)))))
(let (($generated@@656 true))
(let (($generated@@657 true))
(let (($generated@@658  (=> (= $generated@@640 ($generated@@177 $generated@@641 $generated@@635 $generated@@60 false)) (and (and (and (and (=> (= (ControlFlow 0 17) 1) $generated@@657) (=> (= (ControlFlow 0 17) 16) $generated@@649)) (=> (= (ControlFlow 0 17) 2) $generated@@656)) (=> (= (ControlFlow 0 17) 6) $generated@@653)) (=> (= (ControlFlow 0 17) 8) $generated@@655)))))
(let (($generated@@659  (=> (and ($generated@@260 $generated@@635) ($generated@@642 $generated@@635)) (=> (and (and (and (and ($generated@@146 $generated@@628 $generated@@151) ($generated@@78 $generated@@628 $generated@@151 $generated@@635)) ($generated@@374 $generated@@628)) (= 2 $generated@@148)) (and (and (not ($generated@@149 $generated@@628)) ($generated@@153 $generated@@628)) (and ($generated@@142 $generated@@628) (= (ControlFlow 0 18) 17)))) $generated@@658))))
$generated@@659))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@257 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@377 (T@U) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@432 () T@U)
(declare-fun $generated@@439 (T@T) T@U)
(declare-fun $generated@@463 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@616 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (and (= ($generated@@1 $generated@@140) 14) (= ($generated@@1 $generated@@141) 15)) (= (type $generated@@143) $generated@@68)))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@140) (= (type $generated@@145) $generated@@141)) (or ($generated@@142 $generated@@145) (and (not (= 1 $generated@@138)) ($generated@@136 $generated@@145 $generated@@143)))) true)
 :pattern ( ($generated@@139 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@147 $generated@@148 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@68) (= (type $generated@@151) $generated@@68)) (= (type $generated@@152) $generated@@141)) ($generated@@136 $generated@@152 ($generated@@147 $generated@@150 $generated@@151))) ($generated@@146 $generated@@152))
 :pattern ( ($generated@@146 $generated@@152) ($generated@@136 $generated@@152 ($generated@@147 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 16) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@141) (= (type $generated@@160) $generated@@141)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163))
)) (= (type $generated@@162) $generated@@141)))
(assert (= ($generated@@161 $generated@@162) $generated@@63))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@68)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@80 $generated@@156 $generated@@2)) (= (type $generated@@168) $generated@@68)) ($generated@@136 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@136 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 17)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@81 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@71 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@81) (= (type $generated@@219) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@220) ($generated@@70 $generated@@4))) (= (type $generated@@222) $generated@@81)) (= (type $generated@@223) ($generated@@70 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@141)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@68) (= (type $generated@@230) $generated@@68)) (= (type $generated@@231) $generated@@156)) (= (type $generated@@232) $generated@@156)) (= ($generated@@136 ($generated@@225 $generated@@231 $generated@@232) ($generated@@147 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@136 ($generated@@225 $generated@@231 $generated@@232) ($generated@@147 $generated@@229 $generated@@230)))
)))
(assert ($generated@@136 $generated@@162 $generated@@143))
(assert (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@233 $generated@@234)) ($generated@@78 $generated@@162 $generated@@143 $generated@@234))
 :pattern ( ($generated@@78 $generated@@162 $generated@@143 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@141) (= (type $generated@@236) $generated@@141)) (= ($generated@@153 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@153 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@141) (= (type $generated@@239) $generated@@141)) (= ($generated@@237 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@237 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@68)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@243) $generated@@68)) (= ($generated@@136 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@156) ($generated@@0 ($generated@@85 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@85 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@136 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@68)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@248) $generated@@68)) (= ($generated@@136 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@156) ($generated@@0 ($generated@@85 $generated@@247 $generated@@249))) ($generated@@226 $generated@@249 $generated@@248))
 :pattern ( ($generated@@85 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@136 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@255) $generated@@141) (= (type $generated@@256) $generated@@141)) (and ($generated@@254 $generated@@255) ($generated@@254 $generated@@256))) (= ($generated@@237 $generated@@255 $generated@@256) true))
 :pattern ( ($generated@@237 $generated@@255 $generated@@256) ($generated@@254 $generated@@255))
 :pattern ( ($generated@@237 $generated@@255 $generated@@256) ($generated@@254 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@258) $generated@@68) (= (type $generated@@259) $generated@@68)) (= (type $generated@@260) $generated@@156)) (= (type $generated@@261) $generated@@156)) (= (type $generated@@262) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@233 $generated@@262)) (= ($generated@@78 ($generated@@225 $generated@@260 $generated@@261) ($generated@@147 $generated@@258 $generated@@259) $generated@@262)  (and ($generated@@257 $generated@@260 $generated@@258 $generated@@262) ($generated@@257 $generated@@261 $generated@@259 $generated@@262))))
 :pattern ( ($generated@@78 ($generated@@225 $generated@@260 $generated@@261) ($generated@@147 $generated@@258 $generated@@259) $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@141) (= ($generated@@146 $generated@@263) (= ($generated@@161 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@141) (= ($generated@@254 $generated@@264) (= ($generated@@161 $generated@@264) $generated@@63)))
 :pattern ( ($generated@@254 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@141) (= ($generated@@265 $generated@@266) (= ($generated@@161 $generated@@266) $generated@@65)))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@141) ($generated@@146 $generated@@267)) (exists (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (and (and (= (type $generated@@268) $generated@@156) (= (type $generated@@269) $generated@@156)) (= $generated@@267 ($generated@@225 $generated@@268 $generated@@269)))
 :no-pattern (type $generated@@268)
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
)))
 :pattern ( ($generated@@146 $generated@@267))
)))
(assert  (and (and (forall (($generated@@274 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@274)) 18)) (forall (($generated@@275 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
))) (forall (($generated@@276 T@T) ) (! (= (type ($generated@@270 $generated@@276)) ($generated@@272 $generated@@276))
 :pattern ( ($generated@@270 $generated@@276))
))))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@277)) 0)
 :pattern ( ($generated@@270 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@141) ($generated@@254 $generated@@278)) (= $generated@@278 $generated@@162))
 :pattern ( ($generated@@254 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@141)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@141) ($generated@@265 $generated@@281)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@141) (= $generated@@281 ($generated@@279 $generated@@282)))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@265 $generated@@281))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@156)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@68) (= (type $generated@@287) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@257 ($generated@@283 $generated@@285) $generated@@286 $generated@@287) ($generated@@78 $generated@@285 $generated@@286 $generated@@287)))
 :pattern ( ($generated@@257 ($generated@@283 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@80 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@83 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@80 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@85 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 19)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@80 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@85 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@85 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 20)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@80 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@85 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@85 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (forall (($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@332)) $generated@@140)
 :pattern ( ($generated@@330 $generated@@332))
)) (forall (($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@333)) $generated@@141)
 :pattern ( ($generated@@331 $generated@@333))
))))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@334) $generated@@140) (= (type $generated@@335) $generated@@141)) (or ($generated@@142 $generated@@335) (and (not (= 1 $generated@@138)) ($generated@@136 $generated@@335 $generated@@143)))) (and (=> (not ($generated@@254 $generated@@335)) (=> (not ($generated@@254 ($generated@@331 $generated@@335))) (let (($generated@@336 ($generated@@331 ($generated@@331 $generated@@335))))
($generated@@142 $generated@@336)))) (= ($generated@@139 ($generated@@330 $generated@@334) $generated@@335) (ite ($generated@@254 $generated@@335) true (ite ($generated@@254 ($generated@@331 $generated@@335)) false (let (($generated@@337 ($generated@@331 ($generated@@331 $generated@@335))))
($generated@@139 $generated@@334 $generated@@337)))))))
 :pattern ( ($generated@@139 ($generated@@330 $generated@@334) $generated@@335))
))))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@83 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@80 $generated@@339 $generated@@2)) (= ($generated@@165 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (and (<= 0 ($generated ($generated@@85 $generated@@338 $generated@@340))) (<= ($generated ($generated@@85 $generated@@338 $generated@@340)) ($generated@@288 $generated@@338))))
 :pattern ( ($generated@@85 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@165 $generated@@338))
)))
(assert (forall (($generated@@342 T@T) ($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@341 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@156) ($generated@@226 $generated@@344 $generated@@143)) (and (= ($generated@@283 ($generated@@341 $generated@@141 $generated@@344)) $generated@@344) ($generated@@136 ($generated@@341 $generated@@141 $generated@@344) $generated@@143)))
 :pattern ( ($generated@@226 $generated@@344 $generated@@143))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@141) (= ($generated@@136 ($generated@@279 $generated@@345) $generated@@143) ($generated@@136 $generated@@345 $generated@@143)))
 :pattern ( ($generated@@136 ($generated@@279 $generated@@345) $generated@@143))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@346) $generated@@141) (= (type $generated@@347) $generated@@141)) (and ($generated@@265 $generated@@346) ($generated@@265 $generated@@347))) (= ($generated@@237 $generated@@346 $generated@@347) ($generated@@237 ($generated@@331 $generated@@346) ($generated@@331 $generated@@347))))
 :pattern ( ($generated@@237 $generated@@346 $generated@@347) ($generated@@265 $generated@@346))
 :pattern ( ($generated@@237 $generated@@346 $generated@@347) ($generated@@265 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@298 (type $generated@@348))))
(let (($generated@@350 ($generated@@297 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@296 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@295 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@85 ($generated@@294 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@294 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@298 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@80 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@298 (type $generated@@355))))
(let (($generated@@357 ($generated@@297 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@296 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@295 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@316 (type $generated@@359))))
(let (($generated@@361 ($generated@@315 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@314 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@313 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@312 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@316 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@80 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@316 (type $generated@@366))))
(let (($generated@@368 ($generated@@315 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@314 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@313 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@85 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@80 $generated@@156 $generated@@2)) (= (type $generated@@371) $generated@@68)) (= ($generated@@136 $generated@@370 ($generated@@164 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@156) (< 0 ($generated ($generated@@85 $generated@@370 $generated@@372)))) ($generated@@226 $generated@@372 $generated@@371))
 :pattern ( ($generated@@85 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@136 $generated@@370 ($generated@@164 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@138) (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@373) $generated@@140) (= (type $generated@@374) $generated@@141)) (or ($generated@@142 ($generated@@250 $generated@@374)) (and (not (= 1 $generated@@138)) ($generated@@136 $generated@@374 $generated@@143)))) (and (=> (not ($generated@@0 ($generated@@250 ($generated@@11 ($generated@@254 ($generated@@250 $generated@@374)))))) (=> (not ($generated@@0 ($generated@@250 ($generated@@11 ($generated@@254 ($generated@@250 ($generated@@331 ($generated@@250 $generated@@374)))))))) (let (($generated@@375 ($generated@@250 ($generated@@331 ($generated@@250 ($generated@@331 ($generated@@250 $generated@@374)))))))
($generated@@142 $generated@@375)))) (= ($generated@@139 ($generated@@330 $generated@@373) ($generated@@250 $generated@@374)) (ite ($generated@@254 ($generated@@250 $generated@@374)) true (ite ($generated@@254 ($generated@@250 ($generated@@331 ($generated@@250 $generated@@374)))) false ($generated@@0 (let (($generated@@376 ($generated@@250 ($generated@@331 ($generated@@250 ($generated@@331 ($generated@@250 $generated@@374)))))))
($generated@@250 ($generated@@11 ($generated@@139 ($generated@@330 $generated@@373) $generated@@376))))))))))
 :weight 3
 :pattern ( ($generated@@139 ($generated@@330 $generated@@373) ($generated@@250 $generated@@374)))
))))
(assert (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@141) ($generated@@377 $generated@@378)) (or ($generated@@254 $generated@@378) ($generated@@265 $generated@@378)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@380) $generated@@68)) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@379 ($generated@@240 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@156) ($generated@@0 ($generated@@85 $generated@@379 $generated@@382))) ($generated@@257 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@85 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@78 $generated@@379 ($generated@@240 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@80 $generated@@156 $generated@@4)) (= (type $generated@@384) $generated@@68)) (= (type $generated@@385) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@383 ($generated@@245 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@156) ($generated@@0 ($generated@@85 $generated@@383 $generated@@386))) ($generated@@257 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@85 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@78 $generated@@383 ($generated@@245 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@85 ($generated@@289 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@85 ($generated@@289 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@80 $generated@@156 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@298 (type $generated@@392))))
(let (($generated@@394 ($generated@@297 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@80 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@396) $generated@@156)) (= ($generated@@0 ($generated@@85 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@85 ($generated@@294 $generated@@395) ($generated@@154 ($generated@@341 $generated@@141 $generated@@396)))) (= ($generated@@85 ($generated@@390 $generated@@395) ($generated@@154 ($generated@@341 $generated@@141 $generated@@396))) ($generated@@155 ($generated@@341 $generated@@141 $generated@@396))))))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@156 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@316 (type $generated@@400))))
(let (($generated@@402 ($generated@@315 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@80 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@404) $generated@@156)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@403) ($generated@@154 ($generated@@341 $generated@@141 $generated@@404)))) (= ($generated@@85 ($generated@@398 $generated@@403) ($generated@@154 ($generated@@341 $generated@@141 $generated@@404))) ($generated@@155 ($generated@@341 $generated@@141 $generated@@404))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@297 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@296 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@85 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@85 ($generated@@294 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@85 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@85 ($generated@@294 $generated@@405) $generated@@409))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@315 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@314 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@85 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@85 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@68)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) $generated@@68)) (= (type $generated@@421) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@294 $generated@@418) $generated@@422))) (and ($generated@@257 ($generated@@85 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@257 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@85 ($generated@@294 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@68)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@427) $generated@@68)) (= (type $generated@@428) $generated@@68)) (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@426) $generated@@430))) (and ($generated@@257 ($generated@@85 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@257 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert  (and (forall (($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@433)) $generated@@140)
 :pattern ( ($generated@@431 $generated@@433))
)) (= (type $generated@@432) $generated@@140)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@140) (= (type $generated@@435) $generated@@141)) (= ($generated@@139 $generated@@434 $generated@@435) ($generated@@139 $generated@@432 $generated@@435)))
 :pattern ( ($generated@@139 ($generated@@431 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (= (type $generated@@436) $generated@@141) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@233 $generated@@437)) (= ($generated@@78 ($generated@@279 $generated@@436) $generated@@143 $generated@@437) ($generated@@78 $generated@@436 $generated@@143 $generated@@437)))
 :pattern ( ($generated@@78 ($generated@@279 $generated@@436) $generated@@143 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@141) ($generated@@136 $generated@@438 $generated@@143)) (or ($generated@@254 $generated@@438) ($generated@@265 $generated@@438)))
 :pattern ( ($generated@@265 $generated@@438) ($generated@@136 $generated@@438 $generated@@143))
 :pattern ( ($generated@@254 $generated@@438) ($generated@@136 $generated@@438 $generated@@143))
)))
(assert (forall (($generated@@440 T@T) ) (! (= (type ($generated@@439 $generated@@440)) ($generated@@80 $generated@@440 $generated@@4))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@316 (type $generated@@441))))
(let (($generated@@443 ($generated@@315 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@314 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@313 $generated@@443 $generated@@442)) (= ($generated@@312 $generated@@441) ($generated@@439 $generated@@443))))))
 :pattern ( ($generated@@312 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@316 (type $generated@@444))))
(let (($generated@@446 ($generated@@315 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@314 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@313 $generated@@446 $generated@@445)) (= ($generated@@363 $generated@@444) ($generated@@439 $generated@@445))))))
 :pattern ( ($generated@@363 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@316 (type $generated@@447))))
(let (($generated@@449 ($generated@@315 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@314 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@313 $generated@@449 $generated@@448)) (= ($generated@@397 $generated@@447) ($generated@@439 $generated@@156))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@298 (type $generated@@450))))
(let (($generated@@452 ($generated@@297 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@296 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@295 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@156) (= (type $generated@@454) $generated@@156)) ($generated@@0 ($generated@@85 ($generated@@389 $generated@@450) ($generated@@283 ($generated@@225 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@389 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@316 (type $generated@@455))))
(let (($generated@@457 ($generated@@315 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@314 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@313 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@156) (= (type $generated@@459) $generated@@156)) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@455) ($generated@@283 ($generated@@225 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@397 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@156) ($generated@@226 $generated@@460 $generated@@46)) (and (= ($generated@@283 ($generated@@341 $generated@@2 $generated@@460)) $generated@@460) ($generated@@136 ($generated@@341 $generated@@2 $generated@@460) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@460 $generated@@46))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@156) ($generated@@226 $generated@@461 $generated@@47)) (and (= ($generated@@283 ($generated@@341 $generated@@3 $generated@@461)) $generated@@461) ($generated@@136 ($generated@@341 $generated@@3 $generated@@461) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@461 $generated@@47))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@156) ($generated@@226 $generated@@462 $generated@@44)) (and (= ($generated@@283 ($generated@@341 $generated@@4 $generated@@462)) $generated@@462) ($generated@@136 ($generated@@341 $generated@@4 $generated@@462) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@462 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@463) 21))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@156) ($generated@@226 $generated@@464 $generated@@45)) (and (= ($generated@@283 ($generated@@341 $generated@@463 $generated@@464)) $generated@@464) ($generated@@136 ($generated@@341 $generated@@463 $generated@@464) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@464 $generated@@45))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@140) (= (type $generated@@466) $generated@@141)) (= ($generated@@139 ($generated@@330 $generated@@465) $generated@@466) ($generated@@139 $generated@@465 $generated@@466)))
 :pattern ( ($generated@@139 ($generated@@330 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@68) (= ($generated@@226 ($generated@@283 $generated@@467) $generated@@468) ($generated@@136 $generated@@467 $generated@@468)))
 :pattern ( ($generated@@226 ($generated@@283 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@83 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@80 $generated@@470 $generated@@2)) (<= 0 ($generated@@288 $generated@@469))))
 :pattern ( ($generated@@288 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@273 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@272 $generated@@472)) (<= 0 ($generated@@271 $generated@@471))))
 :pattern ( ($generated@@271 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@68)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@68)) (= ($generated@@473 ($generated@@415 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@415 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@68)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@68) (= (type $generated@@480) $generated@@68)) (= ($generated@@477 ($generated@@415 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@415 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= ($generated@@76 ($generated@@415 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@68)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@483 ($generated@@423 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@423 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@487 ($generated@@423 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@423 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@76 ($generated@@423 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@156) (= (type $generated@@494) $generated@@156)) (= ($generated@@161 ($generated@@225 $generated@@493 $generated@@494)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@147 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@147 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@147 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@147 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@156) (= (type $generated@@504) $generated@@156)) (= ($generated@@154 ($generated@@225 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@225 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@156) (= (type $generated@@506) $generated@@156)) (= ($generated@@155 ($generated@@225 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@225 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@273 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@272 $generated@@156)) (= (type $generated@@514) $generated@@68)) (= (type $generated@@515) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@271 $generated@@513))) ($generated@@257 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@79 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@79 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@519 ($generated@@240 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@240 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@76 ($generated@@240 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@523 ($generated@@245 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@245 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@76 ($generated@@245 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@527 ($generated@@164 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@164 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@76 ($generated@@164 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@68) (= ($generated@@76 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@141) (= ($generated@@161 ($generated@@279 $generated@@535)) $generated@@65))
 :pattern ( ($generated@@279 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@141) (= ($generated@@331 ($generated@@279 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@279 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
(= ($generated@@341 $generated@@538 ($generated@@283 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@283 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@540) $generated@@68)) (= (type $generated@@541) $generated@@68)) (= ($generated@@136 $generated@@539 ($generated@@415 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@294 $generated@@539) $generated@@542))) (and ($generated@@226 ($generated@@85 ($generated@@390 $generated@@539) $generated@@542) $generated@@541) ($generated@@226 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@539) $generated@@542))
 :pattern ( ($generated@@85 ($generated@@294 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@136 $generated@@539 ($generated@@415 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@544) $generated@@68)) (= (type $generated@@545) $generated@@68)) (= ($generated@@136 $generated@@543 ($generated@@423 $generated@@544 $generated@@545)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@156) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@543) $generated@@546))) (and ($generated@@226 ($generated@@85 ($generated@@398 $generated@@543) $generated@@546) $generated@@545) ($generated@@226 $generated@@546 $generated@@544)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@543) $generated@@546))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@543) $generated@@546))
))))
 :pattern ( ($generated@@136 $generated@@543 ($generated@@423 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@156) (= (type $generated@@550) $generated@@156)) (< ($generated@@547 $generated@@549) ($generated@@548 ($generated@@225 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@225 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@156) (= (type $generated@@552) $generated@@156)) (< ($generated@@547 $generated@@552) ($generated@@548 ($generated@@225 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@225 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@156) (= (type $generated@@554) $generated@@68)) (= (type $generated@@555) $generated@@68)) ($generated@@226 $generated@@553 ($generated@@415 $generated@@554 $generated@@555))) (and (= ($generated@@283 ($generated@@341 ($generated@@296 $generated@@156 $generated@@156) $generated@@553)) $generated@@553) ($generated@@136 ($generated@@341 ($generated@@296 $generated@@156 $generated@@156) $generated@@553) ($generated@@415 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@226 $generated@@553 ($generated@@415 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@156) (= (type $generated@@557) $generated@@68)) (= (type $generated@@558) $generated@@68)) ($generated@@226 $generated@@556 ($generated@@423 $generated@@557 $generated@@558))) (and (= ($generated@@283 ($generated@@341 ($generated@@314 $generated@@156 $generated@@156) $generated@@556)) $generated@@556) ($generated@@136 ($generated@@341 ($generated@@314 $generated@@156 $generated@@156) $generated@@556) ($generated@@423 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@226 $generated@@556 ($generated@@423 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@68) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@156)) ($generated@@226 $generated@@561 ($generated@@147 $generated@@559 $generated@@560))) (and (= ($generated@@283 ($generated@@341 $generated@@141 $generated@@561)) $generated@@561) ($generated@@136 ($generated@@341 $generated@@141 $generated@@561) ($generated@@147 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@226 $generated@@561 ($generated@@147 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@141) (< ($generated@@548 $generated@@562) ($generated@@548 ($generated@@279 $generated@@562))))
 :pattern ( ($generated@@279 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
 (not ($generated@@0 ($generated@@85 ($generated@@439 $generated@@564) $generated@@563))))
 :pattern ( (let (($generated@@564 (type $generated@@563)))
($generated@@85 ($generated@@439 $generated@@564) $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@73)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@68) (= (type $generated@@568) $generated@@68)) (and (= ($generated@@76 ($generated@@147 $generated@@567 $generated@@568)) $generated@@62) (= ($generated@@565 ($generated@@147 $generated@@567 $generated@@568)) $generated@@66)))
 :pattern ( ($generated@@147 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@141) (= ($generated@@547 ($generated@@283 $generated@@569)) ($generated@@548 $generated@@569)))
 :pattern ( ($generated@@547 ($generated@@283 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@156) ($generated@@226 $generated@@570 ($generated@@79 0))) (and (= ($generated@@283 ($generated@@341 $generated@@2 $generated@@570)) $generated@@570) ($generated@@136 ($generated@@341 ($generated@@80 $generated@@156 $generated@@4) $generated@@570) ($generated@@79 0))))
 :pattern ( ($generated@@226 $generated@@570 ($generated@@79 0)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@156) (= (type $generated@@572) $generated@@68)) ($generated@@226 $generated@@571 ($generated@@240 $generated@@572))) (and (= ($generated@@283 ($generated@@341 ($generated@@80 $generated@@156 $generated@@4) $generated@@571)) $generated@@571) ($generated@@136 ($generated@@341 ($generated@@80 $generated@@156 $generated@@4) $generated@@571) ($generated@@240 $generated@@572))))
 :pattern ( ($generated@@226 $generated@@571 ($generated@@240 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@156) (= (type $generated@@574) $generated@@68)) ($generated@@226 $generated@@573 ($generated@@245 $generated@@574))) (and (= ($generated@@283 ($generated@@341 ($generated@@80 $generated@@156 $generated@@4) $generated@@573)) $generated@@573) ($generated@@136 ($generated@@341 ($generated@@80 $generated@@156 $generated@@4) $generated@@573) ($generated@@245 $generated@@574))))
 :pattern ( ($generated@@226 $generated@@573 ($generated@@245 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@156) (= (type $generated@@576) $generated@@68)) ($generated@@226 $generated@@575 ($generated@@164 $generated@@576))) (and (= ($generated@@283 ($generated@@341 ($generated@@80 $generated@@156 $generated@@2) $generated@@575)) $generated@@575) ($generated@@136 ($generated@@341 ($generated@@80 $generated@@156 $generated@@2) $generated@@575) ($generated@@164 $generated@@576))))
 :pattern ( ($generated@@226 $generated@@575 ($generated@@164 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@156) (= (type $generated@@578) $generated@@68)) ($generated@@226 $generated@@577 ($generated@@507 $generated@@578))) (and (= ($generated@@283 ($generated@@341 ($generated@@272 $generated@@156) $generated@@577)) $generated@@577) ($generated@@136 ($generated@@341 ($generated@@272 $generated@@156) $generated@@577) ($generated@@507 $generated@@578))))
 :pattern ( ($generated@@226 $generated@@577 ($generated@@507 $generated@@578)))
)))
(assert (= ($generated@@76 $generated@@143) $generated@@64))
(assert (= ($generated@@565 $generated@@143) $generated@@67))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@80 $generated@@156 $generated@@2)) (= (type $generated@@580) $generated@@68)) (= (type $generated@@581) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@579 ($generated@@164 $generated@@580) $generated@@581) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@156) (< 0 ($generated ($generated@@85 $generated@@579 $generated@@582)))) ($generated@@257 $generated@@582 $generated@@580 $generated@@581))
 :pattern ( ($generated@@85 $generated@@579 $generated@@582))
))))
 :pattern ( ($generated@@78 $generated@@579 ($generated@@164 $generated@@580) $generated@@581))
)))
(assert (= $generated@@162 ($generated@@250 $generated@@162)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@141) (= (type $generated@@584) $generated@@68)) (= (type $generated@@585) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@233 $generated@@585) (and ($generated@@146 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@68) ($generated@@78 $generated@@583 ($generated@@147 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@78 $generated@@583 ($generated@@147 $generated@@584 $generated@@586) $generated@@585))
))))) ($generated@@257 ($generated@@154 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@257 ($generated@@154 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@141) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@233 $generated@@589) (and ($generated@@146 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@68) ($generated@@78 $generated@@587 ($generated@@147 $generated@@590 $generated@@588) $generated@@589))
 :pattern ( ($generated@@78 $generated@@587 ($generated@@147 $generated@@590 $generated@@588) $generated@@589))
))))) ($generated@@257 ($generated@@155 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@257 ($generated@@155 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@141) (= (type $generated@@592) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@233 $generated@@592) (and ($generated@@265 $generated@@591) ($generated@@78 $generated@@591 $generated@@143 $generated@@592)))) ($generated@@78 ($generated@@331 $generated@@591) $generated@@143 $generated@@592))
 :pattern ( ($generated@@78 ($generated@@331 $generated@@591) $generated@@143 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@156) (= (type $generated@@594) $generated@@156)) (= ($generated@@225 ($generated@@250 $generated@@593) ($generated@@250 $generated@@594)) ($generated@@250 ($generated@@225 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@225 ($generated@@250 $generated@@593) ($generated@@250 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@141) (= ($generated@@279 ($generated@@250 $generated@@595)) ($generated@@250 ($generated@@279 $generated@@595))))
 :pattern ( ($generated@@279 ($generated@@250 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (= ($generated@@283 ($generated@@250 $generated@@596)) ($generated@@250 ($generated@@283 $generated@@596)))
 :pattern ( ($generated@@283 ($generated@@250 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 ($generated@@273 (type $generated@@597))))
 (=> (and (= (type $generated@@597) ($generated@@272 $generated@@598)) (= ($generated@@271 $generated@@597) 0)) (= $generated@@597 ($generated@@270 $generated@@598))))
 :pattern ( ($generated@@271 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (! (let (($generated@@602 (type $generated@@600)))
 (=> (and (and (= (type $generated@@599) ($generated@@80 $generated@@602 $generated@@2)) (= (type $generated@@601) $generated@@2)) (<= 0 ($generated $generated@@601))) (= ($generated@@288 ($generated@@86 $generated@@599 $generated@@600 $generated@@601)) (+ (- ($generated@@288 $generated@@599) ($generated ($generated@@85 $generated@@599 $generated@@600))) ($generated $generated@@601)))))
 :pattern ( ($generated@@288 ($generated@@86 $generated@@599 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@604) $generated@@2)) ($generated@@78 $generated@@604 $generated@@46 $generated@@603))
 :pattern ( ($generated@@78 $generated@@604 $generated@@46 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@606) $generated@@3)) ($generated@@78 $generated@@606 $generated@@47 $generated@@605))
 :pattern ( ($generated@@78 $generated@@606 $generated@@47 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@608) $generated@@4)) ($generated@@78 $generated@@608 $generated@@44 $generated@@607))
 :pattern ( ($generated@@78 $generated@@608 $generated@@44 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@610) $generated@@463)) ($generated@@78 $generated@@610 $generated@@45 $generated@@609))
 :pattern ( ($generated@@78 $generated@@610 $generated@@45 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@612) $generated@@156)) ($generated@@78 $generated@@612 $generated@@48 $generated@@611))
 :pattern ( ($generated@@78 $generated@@612 $generated@@48 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@272 $generated@@156)) (= (type $generated@@614) $generated@@68)) (= ($generated@@136 $generated@@613 ($generated@@507 $generated@@614)) (forall (($generated@@615 Int) ) (!  (=> (and (<= 0 $generated@@615) (< $generated@@615 ($generated@@271 $generated@@613))) ($generated@@226 ($generated@@508 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@508 $generated@@613 $generated@@615))
))))
 :pattern ( ($generated@@136 $generated@@613 ($generated@@507 $generated@@614)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 Int) ) (!  (=> (= (type $generated@@617) ($generated@@272 $generated@@156)) (=> (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@271 $generated@@617))) (< ($generated@@548 ($generated@@341 $generated@@141 ($generated@@508 $generated@@617 $generated@@618))) ($generated@@616 $generated@@617))))
 :pattern ( ($generated@@548 ($generated@@341 $generated@@141 ($generated@@508 $generated@@617 $generated@@618))))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@620) $generated@@68)) (= (type $generated@@621) $generated@@68)) ($generated@@136 $generated@@619 ($generated@@415 $generated@@620 $generated@@621))) (and (and ($generated@@136 ($generated@@294 $generated@@619) ($generated@@240 $generated@@620)) ($generated@@136 ($generated@@352 $generated@@619) ($generated@@240 $generated@@621))) ($generated@@136 ($generated@@389 $generated@@619) ($generated@@240 ($generated@@147 $generated@@620 $generated@@621)))))
 :pattern ( ($generated@@136 $generated@@619 ($generated@@415 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@623) $generated@@68)) (= (type $generated@@624) $generated@@68)) ($generated@@136 $generated@@622 ($generated@@423 $generated@@623 $generated@@624))) (and (and ($generated@@136 ($generated@@312 $generated@@622) ($generated@@245 $generated@@623)) ($generated@@136 ($generated@@363 $generated@@622) ($generated@@245 $generated@@624))) ($generated@@136 ($generated@@397 $generated@@622) ($generated@@245 ($generated@@147 $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@136 $generated@@622 ($generated@@423 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@2) ($generated@@136 $generated@@625 $generated@@46))
 :pattern ( ($generated@@136 $generated@@625 $generated@@46))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@3) ($generated@@136 $generated@@626 $generated@@47))
 :pattern ( ($generated@@136 $generated@@626 $generated@@47))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@4) ($generated@@136 $generated@@627 $generated@@44))
 :pattern ( ($generated@@136 $generated@@627 $generated@@44))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@463) ($generated@@136 $generated@@628 $generated@@45))
 :pattern ( ($generated@@136 $generated@@628 $generated@@45))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@156) ($generated@@136 $generated@@629 $generated@@48))
 :pattern ( ($generated@@136 $generated@@629 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@630) ($generated@@171 $generated@@81 $generated@@4)) (= (type $generated@@631) $generated@@81)) (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@633) $generated@@141)) (= (type $generated@@634) $generated@@141)) (= (type $generated@@635) $generated@@141)) (= (type $generated@@636) $generated@@141)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@638  (=> (= $generated@@630 ($generated@@170 $generated@@631 $generated@@632 $generated@@60 false)) (=> (and (and (= $generated@@633 ($generated@@250 $generated@@162)) ($generated@@78 $generated@@633 $generated@@143 $generated@@632)) (and ($generated@@142 ($generated@@250 $generated@@162)) ($generated@@142 ($generated@@250 $generated@@162)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@0 ($generated@@250 ($generated@@11 ($generated@@139 ($generated@@330 ($generated@@330 $generated@@432)) ($generated@@250 $generated@@162))))) ($generated@@0 ($generated@@250 ($generated@@11 true))))) (=> (= ($generated@@0 ($generated@@250 ($generated@@11 ($generated@@139 ($generated@@330 $generated@@432) ($generated@@250 $generated@@162))))) ($generated@@0 ($generated@@250 ($generated@@11 true)))) (=> (and (and (= $generated@@634 ($generated@@250 ($generated@@279 ($generated@@250 $generated@@162)))) ($generated@@78 $generated@@634 $generated@@143 $generated@@632)) (and ($generated@@142 ($generated@@250 ($generated@@279 ($generated@@250 $generated@@162)))) ($generated@@142 ($generated@@250 ($generated@@279 ($generated@@250 $generated@@162)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@0 ($generated@@250 ($generated@@11 ($generated@@139 ($generated@@330 ($generated@@330 $generated@@432)) ($generated@@250 ($generated@@279 ($generated@@250 $generated@@162))))))) ($generated@@0 ($generated@@250 ($generated@@11 false))))) (=> (and (= ($generated@@0 ($generated@@250 ($generated@@11 ($generated@@139 ($generated@@330 $generated@@432) ($generated@@250 ($generated@@279 ($generated@@250 $generated@@162))))))) ($generated@@0 ($generated@@250 ($generated@@11 false)))) (= $generated@@635 ($generated@@279 ($generated@@279 $generated@@636)))) (=> (and (and (and ($generated@@78 $generated@@635 $generated@@143 $generated@@632) ($generated@@142 ($generated@@279 ($generated@@279 $generated@@636)))) (and ($generated@@78 $generated@@636 $generated@@143 $generated@@632) ($generated@@142 $generated@@636))) (and (and ($generated@@142 ($generated@@279 ($generated@@279 $generated@@636))) ($generated@@142 $generated@@636)) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@139 ($generated@@330 ($generated@@330 $generated@@432)) ($generated@@279 ($generated@@279 $generated@@636))) ($generated@@139 ($generated@@330 ($generated@@330 $generated@@432)) $generated@@636))))))))))))
(let (($generated@@639  (=> (and ($generated@@233 $generated@@632) ($generated@@637 $generated@@632)) (=> (and (and (and ($generated@@136 $generated@@636 $generated@@143) ($generated@@78 $generated@@636 $generated@@143 $generated@@632)) ($generated@@377 $generated@@636)) (and (= 2 $generated@@138) (= (ControlFlow 0 5) 2))) $generated@@638))))
$generated@@639)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@286 () Int)
(declare-fun $generated@@287 (T@U T@U) Bool)
(declare-fun $generated@@288 (T@U) Bool)
(declare-fun $generated@@289 (T@U T@U) T@U)
(declare-fun $generated@@305 (T@U T@U T@U) Bool)
(declare-fun $generated@@320 (T@T) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@334 (T@U) Int)
(declare-fun $generated@@335 (T@T) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@T) T@U)
(declare-fun $generated@@363 (T@T T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@418 (T@T T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@T) T@U)
(declare-fun $generated@@491 () T@T)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@540 (T@U Int) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(declare-fun $generated@@581 (T@U) Int)
(declare-fun $generated@@669 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@139) 15)) (= ($generated@@1 $generated@@141) 16)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@136 $generated@@142 $generated@@143 $generated@@144)) $generated@@141)
 :pattern ( ($generated@@136 $generated@@142 $generated@@143 $generated@@144))
))) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@137 $generated@@145)) $generated@@138)
 :pattern ( ($generated@@137 $generated@@145))
))) (= (type $generated@@140) $generated@@138)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@68) (= (type $generated@@147) $generated@@138)) (= (type $generated@@148) $generated@@139)) (= ($generated@@136 $generated@@146 $generated@@147 $generated@@148) ($generated@@136 $generated@@146 $generated@@140 $generated@@148)))
 :pattern ( ($generated@@136 $generated@@146 ($generated@@137 $generated@@147) $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@79 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@79 0)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@153 $generated@@154)) $generated@@68)
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@68) (= (type $generated@@156) $generated@@68)) (= (type $generated@@157) $generated@@139)) ($generated@@149 $generated@@157 ($generated@@152 $generated@@155 $generated@@156))) ($generated@@151 $generated@@157))
 :pattern ( ($generated@@151 $generated@@157) ($generated@@149 $generated@@157 ($generated@@152 $generated@@155 $generated@@156)))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@141)
 :pattern ( ($generated@@159 $generated@@161))
)) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@141)
 :pattern ( ($generated@@160 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@139) (= (type $generated@@164) $generated@@139)) true) (= ($generated@@158 $generated@@163 $generated@@164)  (and (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)) (= ($generated@@160 $generated@@163) ($generated@@160 $generated@@164)))))
 :pattern ( ($generated@@158 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@165 $generated@@166)) $generated@@138)
 :pattern ( ($generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@68) (= (type $generated@@168) $generated@@138)) (= (type $generated@@169) $generated@@139)) (= ($generated@@136 $generated@@167 ($generated@@165 $generated@@168) $generated@@169) ($generated@@136 $generated@@167 $generated@@168 $generated@@169)))
 :pattern ( ($generated@@136 $generated@@167 ($generated@@165 $generated@@168) $generated@@169))
)))
(assert  (and (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@72)
 :pattern ( ($generated@@170 $generated@@172))
)) (= (type $generated@@171) $generated@@139)))
(assert (= ($generated@@170 $generated@@171) $generated@@63))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@68)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@80 $generated@@141 $generated@@2)) (= (type $generated@@177) $generated@@68)) ($generated@@149 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@149 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 17)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@81 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@71 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@81) (= (type $generated@@228) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@229) ($generated@@70 $generated@@4))) (= (type $generated@@231) $generated@@81)) (= (type $generated@@232) ($generated@@70 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ) (! (= (type ($generated@@234 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@180 $generated@@81 $generated@@4))
 :pattern ( ($generated@@234 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@71 (type $generated@@244))))
 (=> (and (and (and (and (= (type $generated@@239) $generated@@81) (= (type $generated@@240) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@241) ($generated@@70 $generated@@4))) (= (type $generated@@243) $generated@@81)) (= (type $generated@@244) ($generated@@70 $generated@@245))) (= ($generated@@0 ($generated@@178 ($generated@@234 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))  (=> (and (not (= $generated@@243 $generated@@239)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@240 $generated@@243) $generated@@241))) $generated@@242))))
 :pattern ( ($generated@@178 ($generated@@234 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@246 $generated@@248)) $generated@@68)
 :pattern ( ($generated@@246 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (= (type $generated@@249) $generated@@68) (= (type $generated@@250) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@247 $generated@@250)) ($generated@@78 $generated@@171 ($generated@@246 $generated@@249) $generated@@250))
 :pattern ( ($generated@@78 $generated@@171 ($generated@@246 $generated@@249) $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@253 $generated@@254)) $generated@@139)
 :pattern ( ($generated@@251 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@255) $generated@@68) (= (type $generated@@256) $generated@@68)) (= (type $generated@@257) $generated@@141)) (= (type $generated@@258) $generated@@141)) (= ($generated@@149 ($generated@@251 $generated@@257 $generated@@258) ($generated@@152 $generated@@255 $generated@@256))  (and ($generated@@252 $generated@@257 $generated@@255) ($generated@@252 $generated@@258 $generated@@256))))
 :pattern ( ($generated@@149 ($generated@@251 $generated@@257 $generated@@258) ($generated@@152 $generated@@255 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@68) ($generated@@149 $generated@@171 ($generated@@246 $generated@@259)))
 :pattern ( ($generated@@149 $generated@@171 ($generated@@246 $generated@@259)))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@139) (= (type $generated@@261) $generated@@139)) (= ($generated@@158 $generated@@260 $generated@@261) (= $generated@@260 $generated@@261)))
 :pattern ( ($generated@@158 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@139) (= (type $generated@@264) $generated@@139)) (= ($generated@@262 $generated@@263 $generated@@264) (= $generated@@263 $generated@@264)))
 :pattern ( ($generated@@262 $generated@@263 $generated@@264))
)))
(assert  (and (forall (($generated@@268 T@U) ) (! (= (type ($generated@@266 $generated@@268)) $generated@@141)
 :pattern ( ($generated@@266 $generated@@268))
)) (forall (($generated@@269 T@U) ) (! (= (type ($generated@@267 $generated@@269)) $generated@@139)
 :pattern ( ($generated@@267 $generated@@269))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (= (type $generated@@270) $generated@@139) (= (type $generated@@271) $generated@@139)) (and ($generated@@265 $generated@@270) ($generated@@265 $generated@@271))) (= ($generated@@262 $generated@@270 $generated@@271)  (and (= ($generated@@266 $generated@@270) ($generated@@266 $generated@@271)) ($generated@@262 ($generated@@267 $generated@@270) ($generated@@267 $generated@@271)))))
 :pattern ( ($generated@@262 $generated@@270 $generated@@271) ($generated@@265 $generated@@270))
 :pattern ( ($generated@@262 $generated@@270 $generated@@271) ($generated@@265 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@80 $generated@@141 $generated@@4)) (= (type $generated@@275) $generated@@68)) (= ($generated@@149 $generated@@274 ($generated@@272 $generated@@275)) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@141) ($generated@@0 ($generated@@85 $generated@@274 $generated@@276))) ($generated@@252 $generated@@276 $generated@@275))
 :pattern ( ($generated@@85 $generated@@274 $generated@@276))
))))
 :pattern ( ($generated@@149 $generated@@274 ($generated@@272 $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@68)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) ($generated@@80 $generated@@141 $generated@@4)) (= (type $generated@@280) $generated@@68)) (= ($generated@@149 $generated@@279 ($generated@@277 $generated@@280)) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@141) ($generated@@0 ($generated@@85 $generated@@279 $generated@@281))) ($generated@@252 $generated@@281 $generated@@280))
 :pattern ( ($generated@@85 $generated@@279 $generated@@281))
))))
 :pattern ( ($generated@@149 $generated@@279 ($generated@@277 $generated@@280)))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 (type $generated@@283)))
(= (type ($generated@@282 $generated@@283)) $generated@@284))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= ($generated@@282 $generated@@285) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (= (type ($generated@@289 $generated@@290 $generated@@291)) $generated@@139)
 :pattern ( ($generated@@289 $generated@@290 $generated@@291))
)))
(assert  (=> (<= 1 $generated@@286) (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (= (type $generated@@292) $generated@@68) (= (type $generated@@293) $generated@@138)) (= (type $generated@@294) $generated@@139)) (or ($generated@@287 $generated@@292 $generated@@294) (and (not (= 1 $generated@@286)) (and ($generated@@149 $generated@@294 ($generated@@246 $generated@@292)) (not ($generated@@262 $generated@@294 $generated@@171)))))) (and (=> (not ($generated@@288 ($generated@@267 $generated@@294))) (let (($generated@@295 ($generated@@267 ($generated@@267 $generated@@294))))
(let (($generated@@296 ($generated@@266 ($generated@@267 $generated@@294))))
($generated@@287 $generated@@292 ($generated@@289 $generated@@296 $generated@@295))))) (= ($generated@@136 $generated@@292 ($generated@@165 $generated@@293) $generated@@294) (ite ($generated@@288 ($generated@@267 $generated@@294)) (let (($generated@@297 ($generated@@266 $generated@@294)))
$generated@@297) (let (($generated@@298 ($generated@@267 ($generated@@267 $generated@@294))))
(let (($generated@@299 ($generated@@266 ($generated@@267 $generated@@294))))
($generated@@136 $generated@@292 $generated@@293 ($generated@@289 $generated@@299 $generated@@298))))))))
 :pattern ( ($generated@@136 $generated@@292 ($generated@@165 $generated@@293) $generated@@294))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (= (type $generated@@300) $generated@@139) (= (type $generated@@301) $generated@@139)) (and ($generated@@288 $generated@@300) ($generated@@288 $generated@@301))) (= ($generated@@262 $generated@@300 $generated@@301) true))
 :pattern ( ($generated@@262 $generated@@300 $generated@@301) ($generated@@288 $generated@@300))
 :pattern ( ($generated@@262 $generated@@300 $generated@@301) ($generated@@288 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (= (type $generated@@302) $generated@@68) (= (type $generated@@303) $generated@@141)) (= (type $generated@@304) $generated@@139)) (= ($generated@@149 ($generated@@289 $generated@@303 $generated@@304) ($generated@@246 $generated@@302))  (and ($generated@@252 $generated@@303 $generated@@302) ($generated@@149 $generated@@304 ($generated@@246 $generated@@302)))))
 :pattern ( ($generated@@149 ($generated@@289 $generated@@303 $generated@@304) ($generated@@246 $generated@@302)))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@306) $generated@@68) (= (type $generated@@307) $generated@@68)) (= (type $generated@@308) $generated@@141)) (= (type $generated@@309) $generated@@141)) (= (type $generated@@310) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@247 $generated@@310)) (= ($generated@@78 ($generated@@251 $generated@@308 $generated@@309) ($generated@@152 $generated@@306 $generated@@307) $generated@@310)  (and ($generated@@305 $generated@@308 $generated@@306 $generated@@310) ($generated@@305 $generated@@309 $generated@@307 $generated@@310))))
 :pattern ( ($generated@@78 ($generated@@251 $generated@@308 $generated@@309) ($generated@@152 $generated@@306 $generated@@307) $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@139) (= ($generated@@151 $generated@@311) (= ($generated@@170 $generated@@311) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@139) (= ($generated@@288 $generated@@312) (= ($generated@@170 $generated@@312) $generated@@63)))
 :pattern ( ($generated@@288 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@139) (= ($generated@@265 $generated@@313) (= ($generated@@170 $generated@@313) $generated@@65)))
 :pattern ( ($generated@@265 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@139) ($generated@@151 $generated@@314)) (exists (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (and (and (= (type $generated@@315) $generated@@141) (= (type $generated@@316) $generated@@141)) (= $generated@@314 ($generated@@251 $generated@@315 $generated@@316)))
 :no-pattern (type $generated@@315)
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
)))
 :pattern ( ($generated@@151 $generated@@314))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@139) ($generated@@265 $generated@@317)) (exists (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (and (and (= (type $generated@@318) $generated@@141) (= (type $generated@@319) $generated@@139)) (= $generated@@317 ($generated@@289 $generated@@318 $generated@@319)))
 :no-pattern (type $generated@@318)
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
)))
 :pattern ( ($generated@@265 $generated@@317))
)))
(assert  (and (and (forall (($generated@@324 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@324)) 18)) (forall (($generated@@325 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@322 $generated@@325))
))) (forall (($generated@@326 T@T) ) (! (= (type ($generated@@320 $generated@@326)) ($generated@@322 $generated@@326))
 :pattern ( ($generated@@320 $generated@@326))
))))
(assert (forall (($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@327)) 0)
 :pattern ( ($generated@@320 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@139) ($generated@@288 $generated@@328)) (= $generated@@328 $generated@@171))
 :pattern ( ($generated@@288 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@141)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@68) (= (type $generated@@333) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@305 ($generated@@329 $generated@@331) $generated@@332 $generated@@333) ($generated@@78 $generated@@331 $generated@@332 $generated@@333)))
 :pattern ( ($generated@@305 ($generated@@329 $generated@@331) $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@336 T@T) ) (! (= (type ($generated@@335 $generated@@336)) ($generated@@80 $generated@@336 $generated@@2))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@83 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@80 $generated@@338 $generated@@2)) (and (= (= ($generated@@334 $generated@@337) 0) (= $generated@@337 ($generated@@335 $generated@@338))) (=> (not (= ($generated@@334 $generated@@337) 0)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) (< 0 ($generated ($generated@@85 $generated@@337 $generated@@339))))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@73)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@68) (and (= ($generated@@76 ($generated@@246 $generated@@342)) $generated@@64) (= ($generated@@340 ($generated@@246 $generated@@342)) $generated@@67)))
 :pattern ( ($generated@@246 $generated@@342))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 19)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@80 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@85 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@85 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert  (and (and (and (and (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (= ($generated@@1 ($generated@@363 $generated@@366 $generated@@367)) 20)) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= ($generated@@364 ($generated@@363 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@363 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@365 ($generated@@363 $generated@@370 $generated@@371)) $generated@@371)
 :pattern ( ($generated@@363 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@364 (type $generated@@372))))
(= (type ($generated@@361 $generated@@372)) ($generated@@80 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@372))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= (type ($generated@@362 $generated@@374 $generated@@375)) ($generated@@363 $generated@@374 $generated@@375))
 :pattern ( ($generated@@362 $generated@@374 $generated@@375))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@T) ) (! (let (($generated@@378 (type $generated@@376)))
 (not ($generated@@0 ($generated@@85 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376))))
 :pattern ( (let (($generated@@378 (type $generated@@376)))
($generated@@85 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376)))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@83 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@80 $generated@@380 $generated@@2)) (= ($generated@@174 $generated@@379) (forall (($generated@@381 T@U) ) (!  (=> (= (type $generated@@381) $generated@@380) (and (<= 0 ($generated ($generated@@85 $generated@@379 $generated@@381))) (<= ($generated ($generated@@85 $generated@@379 $generated@@381)) ($generated@@334 $generated@@379))))
 :pattern ( ($generated@@85 $generated@@379 $generated@@381))
)))))
 :pattern ( ($generated@@174 $generated@@379))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@347 (type $generated@@382))))
(let (($generated@@384 ($generated@@346 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@345 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@344 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@343 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@347 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@80 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@347 (type $generated@@389))))
(let (($generated@@391 ($generated@@346 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@345 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@344 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@365 (type $generated@@393))))
(let (($generated@@395 ($generated@@364 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@363 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@362 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@361 $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@365 (type $generated@@398))))
(= (type ($generated@@397 $generated@@398)) ($generated@@80 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@365 (type $generated@@400))))
(let (($generated@@402 ($generated@@364 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@363 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@362 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@401) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@397 $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@80 $generated@@141 $generated@@2)) (= (type $generated@@405) $generated@@68)) (= ($generated@@149 $generated@@404 ($generated@@173 $generated@@405)) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@141) (< 0 ($generated ($generated@@85 $generated@@404 $generated@@406)))) ($generated@@252 $generated@@406 $generated@@405))
 :pattern ( ($generated@@85 $generated@@404 $generated@@406))
))))
 :pattern ( ($generated@@149 $generated@@404 ($generated@@173 $generated@@405)))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (= (type $generated@@407) ($generated@@80 $generated@@141 $generated@@4)) (= (type $generated@@408) $generated@@68)) (= (type $generated@@409) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@407 ($generated@@272 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@141) ($generated@@0 ($generated@@85 $generated@@407 $generated@@410))) ($generated@@305 $generated@@410 $generated@@408 $generated@@409))
 :pattern ( ($generated@@85 $generated@@407 $generated@@410))
))))
 :pattern ( ($generated@@78 $generated@@407 ($generated@@272 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@80 $generated@@141 $generated@@4)) (= (type $generated@@412) $generated@@68)) (= (type $generated@@413) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@411 ($generated@@277 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@141) ($generated@@0 ($generated@@85 $generated@@411 $generated@@414))) ($generated@@305 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@85 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@78 $generated@@411 ($generated@@277 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(= ($generated ($generated@@85 ($generated@@335 $generated@@416) $generated@@415)) 0))
 :pattern ( (let (($generated@@416 (type $generated@@415)))
($generated@@85 ($generated@@335 $generated@@416) $generated@@415)))
)))
(assert  (and (and (forall (($generated@@420 T@U) ) (! (= (type ($generated@@417 $generated@@420)) ($generated@@80 $generated@@141 $generated@@4))
 :pattern ( ($generated@@417 $generated@@420))
)) (forall (($generated@@421 T@T) ($generated@@422 T@U) ) (! (= (type ($generated@@418 $generated@@421 $generated@@422)) $generated@@421)
 :pattern ( ($generated@@418 $generated@@421 $generated@@422))
))) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@347 (type $generated@@423))))
(let (($generated@@425 ($generated@@346 (type $generated@@423))))
(= (type ($generated@@419 $generated@@423)) ($generated@@80 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@419 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@345 $generated@@141 $generated@@141)) (= (type $generated@@427) $generated@@141)) (= ($generated@@0 ($generated@@85 ($generated@@417 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@85 ($generated@@343 $generated@@426) ($generated@@159 ($generated@@418 $generated@@139 $generated@@427)))) (= ($generated@@85 ($generated@@419 $generated@@426) ($generated@@159 ($generated@@418 $generated@@139 $generated@@427))) ($generated@@160 ($generated@@418 $generated@@139 $generated@@427))))))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@426) $generated@@427))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@80 $generated@@141 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@365 (type $generated@@431))))
(let (($generated@@433 ($generated@@364 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@80 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@363 $generated@@141 $generated@@141)) (= (type $generated@@435) $generated@@141)) (= ($generated@@0 ($generated@@85 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@85 ($generated@@361 $generated@@434) ($generated@@159 ($generated@@418 $generated@@139 $generated@@435)))) (= ($generated@@85 ($generated@@429 $generated@@434) ($generated@@159 ($generated@@418 $generated@@139 $generated@@435))) ($generated@@160 ($generated@@418 $generated@@139 $generated@@435))))))
 :pattern ( ($generated@@85 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(let (($generated@@439 ($generated@@346 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@345 $generated@@439 $generated@@438)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@436) $generated@@437)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) (and ($generated@@0 ($generated@@85 ($generated@@343 $generated@@436) $generated@@440)) (= $generated@@437 ($generated@@85 ($generated@@419 $generated@@436) $generated@@440))))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@436) $generated@@440))
 :pattern ( ($generated@@85 ($generated@@419 $generated@@436) $generated@@440))
))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@364 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@363 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@85 ($generated@@361 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@85 ($generated@@429 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@441) $generated@@445))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@68)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@345 $generated@@141 $generated@@141)) (= (type $generated@@450) $generated@@68)) (= (type $generated@@451) $generated@@68)) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@141) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@449) $generated@@453))) (and ($generated@@305 ($generated@@85 ($generated@@419 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@305 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@85 ($generated@@419 $generated@@449) $generated@@453))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@78 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@363 $generated@@141 $generated@@141)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@141) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@457) $generated@@461))) (and ($generated@@305 ($generated@@85 ($generated@@429 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@305 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@457) $generated@@461))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (= (type $generated@@462) $generated@@68) (= (type $generated@@463) $generated@@139)) ($generated@@149 $generated@@463 ($generated@@246 $generated@@462))) (or ($generated@@288 $generated@@463) ($generated@@265 $generated@@463)))
 :pattern ( ($generated@@265 $generated@@463) ($generated@@149 $generated@@463 ($generated@@246 $generated@@462)))
 :pattern ( ($generated@@288 $generated@@463) ($generated@@149 $generated@@463 ($generated@@246 $generated@@462)))
)))
(assert  (=> (<= 1 $generated@@286) (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@138)) (= (type $generated@@466) $generated@@139)) (or ($generated@@287 $generated@@464 $generated@@466) (and (not (= 1 $generated@@286)) (and ($generated@@149 $generated@@466 ($generated@@246 $generated@@464)) (not ($generated@@262 $generated@@466 $generated@@171)))))) ($generated@@252 ($generated@@136 $generated@@464 $generated@@465 $generated@@466) $generated@@464))
 :pattern ( ($generated@@136 $generated@@464 $generated@@465 $generated@@466))
))))
(assert (forall (($generated@@468 T@T) ) (! (= (type ($generated@@467 $generated@@468)) ($generated@@80 $generated@@468 $generated@@4))
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@365 (type $generated@@469))))
(let (($generated@@471 ($generated@@364 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@363 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@362 $generated@@471 $generated@@470)) (= ($generated@@361 $generated@@469) ($generated@@467 $generated@@471))))))
 :pattern ( ($generated@@361 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@365 (type $generated@@472))))
(let (($generated@@474 ($generated@@364 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@363 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@362 $generated@@474 $generated@@473)) (= ($generated@@397 $generated@@472) ($generated@@467 $generated@@473))))))
 :pattern ( ($generated@@397 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@365 (type $generated@@475))))
(let (($generated@@477 ($generated@@364 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@363 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@362 $generated@@477 $generated@@476)) (= ($generated@@428 $generated@@475) ($generated@@467 $generated@@141))))))
 :pattern ( ($generated@@428 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@347 (type $generated@@478))))
(let (($generated@@480 ($generated@@346 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@345 $generated@@480 $generated@@479)) (or (= $generated@@478 ($generated@@344 $generated@@480 $generated@@479)) (exists (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (and (and (= (type $generated@@481) $generated@@141) (= (type $generated@@482) $generated@@141)) ($generated@@0 ($generated@@85 ($generated@@417 $generated@@478) ($generated@@329 ($generated@@251 $generated@@481 $generated@@482)))))
 :no-pattern (type $generated@@481)
 :no-pattern (type $generated@@482)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
))))))
 :pattern ( ($generated@@417 $generated@@478))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@365 (type $generated@@483))))
(let (($generated@@485 ($generated@@364 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@363 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@362 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@141) (= (type $generated@@487) $generated@@141)) ($generated@@0 ($generated@@85 ($generated@@428 $generated@@483) ($generated@@329 ($generated@@251 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@428 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@141) ($generated@@252 $generated@@488 $generated@@46)) (and (= ($generated@@329 ($generated@@418 $generated@@2 $generated@@488)) $generated@@488) ($generated@@149 ($generated@@418 $generated@@2 $generated@@488) $generated@@46)))
 :pattern ( ($generated@@252 $generated@@488 $generated@@46))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@141) ($generated@@252 $generated@@489 $generated@@47)) (and (= ($generated@@329 ($generated@@418 $generated@@3 $generated@@489)) $generated@@489) ($generated@@149 ($generated@@418 $generated@@3 $generated@@489) $generated@@47)))
 :pattern ( ($generated@@252 $generated@@489 $generated@@47))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@141) ($generated@@252 $generated@@490 $generated@@44)) (and (= ($generated@@329 ($generated@@418 $generated@@4 $generated@@490)) $generated@@490) ($generated@@149 ($generated@@418 $generated@@4 $generated@@490) $generated@@44)))
 :pattern ( ($generated@@252 $generated@@490 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@491) 21))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@141) ($generated@@252 $generated@@492 $generated@@45)) (and (= ($generated@@329 ($generated@@418 $generated@@491 $generated@@492)) $generated@@492) ($generated@@149 ($generated@@418 $generated@@491 $generated@@492) $generated@@45)))
 :pattern ( ($generated@@252 $generated@@492 $generated@@45))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@68) (= ($generated@@252 ($generated@@329 $generated@@493) $generated@@494) ($generated@@149 $generated@@493 $generated@@494)))
 :pattern ( ($generated@@252 ($generated@@329 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@83 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@80 $generated@@496 $generated@@2)) (<= 0 ($generated@@334 $generated@@495))))
 :pattern ( ($generated@@334 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@323 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@322 $generated@@498)) (<= 0 ($generated@@321 $generated@@497))))
 :pattern ( ($generated@@321 $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@446 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@446 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@68) (= (type $generated@@506) $generated@@68)) (= ($generated@@503 ($generated@@446 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@446 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@76 ($generated@@446 $generated@@507 $generated@@508)) $generated@@58))
 :pattern ( ($generated@@446 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@454 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@454 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@68) (= (type $generated@@516) $generated@@68)) (= ($generated@@513 ($generated@@454 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@454 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@68) (= (type $generated@@518) $generated@@68)) (= ($generated@@76 ($generated@@454 $generated@@517 $generated@@518)) $generated@@59))
 :pattern ( ($generated@@454 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@141) (= (type $generated@@520) $generated@@141)) (= ($generated@@170 ($generated@@251 $generated@@519 $generated@@520)) $generated@@61))
 :pattern ( ($generated@@251 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@152 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@152 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@525 ($generated@@152 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@152 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@141) (= (type $generated@@530) $generated@@141)) (= ($generated@@159 ($generated@@251 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@251 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@141) (= (type $generated@@532) $generated@@141)) (= ($generated@@160 ($generated@@251 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@251 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@141) (= (type $generated@@534) $generated@@139)) (= ($generated@@170 ($generated@@289 $generated@@533 $generated@@534)) $generated@@65))
 :pattern ( ($generated@@289 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@141) (= (type $generated@@536) $generated@@139)) (= ($generated@@266 ($generated@@289 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@289 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@141) (= (type $generated@@538) $generated@@139)) (= ($generated@@267 ($generated@@289 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@289 $generated@@537 $generated@@538))
)))
(assert  (and (forall (($generated@@541 T@U) ) (! (= (type ($generated@@539 $generated@@541)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@541))
)) (forall (($generated@@542 T@U) ($generated@@543 Int) ) (! (let (($generated@@544 ($generated@@323 (type $generated@@542))))
(= (type ($generated@@540 $generated@@542 $generated@@543)) $generated@@544))
 :pattern ( ($generated@@540 $generated@@542 $generated@@543))
))))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@322 $generated@@141)) (= (type $generated@@546) $generated@@68)) (= (type $generated@@547) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@545 ($generated@@539 $generated@@546) $generated@@547) (forall (($generated@@548 Int) ) (!  (=> (and (<= 0 $generated@@548) (< $generated@@548 ($generated@@321 $generated@@545))) ($generated@@305 ($generated@@540 $generated@@545 $generated@@548) $generated@@546 $generated@@547))
 :pattern ( ($generated@@540 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@78 $generated@@545 ($generated@@539 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@549 ($generated@@79 $generated@@550)) $generated@@550)
 :pattern ( ($generated@@79 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@68)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@551 ($generated@@272 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@272 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@76 ($generated@@272 $generated@@554)) $generated@@54))
 :pattern ( ($generated@@272 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@68)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@555 ($generated@@277 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@277 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@76 ($generated@@277 $generated@@558)) $generated@@55))
 :pattern ( ($generated@@277 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@68)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@559 ($generated@@173 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@173 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@76 ($generated@@173 $generated@@562)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@563 ($generated@@539 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@539 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@76 ($generated@@539 $generated@@566)) $generated@@57))
 :pattern ( ($generated@@539 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@68)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@567 ($generated@@246 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@246 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
(= ($generated@@418 $generated@@571 ($generated@@329 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@329 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@345 $generated@@141 $generated@@141)) (= (type $generated@@573) $generated@@68)) (= (type $generated@@574) $generated@@68)) (= ($generated@@149 $generated@@572 ($generated@@446 $generated@@573 $generated@@574)) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@141) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@572) $generated@@575))) (and ($generated@@252 ($generated@@85 ($generated@@419 $generated@@572) $generated@@575) $generated@@574) ($generated@@252 $generated@@575 $generated@@573)))
 :pattern ( ($generated@@85 ($generated@@419 $generated@@572) $generated@@575))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@572) $generated@@575))
))))
 :pattern ( ($generated@@149 $generated@@572 ($generated@@446 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@363 $generated@@141 $generated@@141)) (= (type $generated@@577) $generated@@68)) (= (type $generated@@578) $generated@@68)) (= ($generated@@149 $generated@@576 ($generated@@454 $generated@@577 $generated@@578)) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@141) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@576) $generated@@579))) (and ($generated@@252 ($generated@@85 ($generated@@429 $generated@@576) $generated@@579) $generated@@578) ($generated@@252 $generated@@579 $generated@@577)))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@576) $generated@@579))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@576) $generated@@579))
))))
 :pattern ( ($generated@@149 $generated@@576 ($generated@@454 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@141) (= (type $generated@@583) $generated@@141)) (< ($generated@@580 $generated@@582) ($generated@@581 ($generated@@251 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@251 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@141) (= (type $generated@@585) $generated@@141)) (< ($generated@@580 $generated@@585) ($generated@@581 ($generated@@251 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@251 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@141) (= (type $generated@@587) $generated@@139)) (< ($generated@@580 $generated@@586) ($generated@@581 ($generated@@289 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@289 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@141) (= (type $generated@@589) $generated@@139)) (< ($generated@@581 $generated@@589) ($generated@@581 ($generated@@289 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@289 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@141) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) $generated@@68)) ($generated@@252 $generated@@590 ($generated@@446 $generated@@591 $generated@@592))) (and (= ($generated@@329 ($generated@@418 ($generated@@345 $generated@@141 $generated@@141) $generated@@590)) $generated@@590) ($generated@@149 ($generated@@418 ($generated@@345 $generated@@141 $generated@@141) $generated@@590) ($generated@@446 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@252 $generated@@590 ($generated@@446 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@141) (= (type $generated@@594) $generated@@68)) (= (type $generated@@595) $generated@@68)) ($generated@@252 $generated@@593 ($generated@@454 $generated@@594 $generated@@595))) (and (= ($generated@@329 ($generated@@418 ($generated@@363 $generated@@141 $generated@@141) $generated@@593)) $generated@@593) ($generated@@149 ($generated@@418 ($generated@@363 $generated@@141 $generated@@141) $generated@@593) ($generated@@454 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@252 $generated@@593 ($generated@@454 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@68) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) $generated@@141)) ($generated@@252 $generated@@598 ($generated@@152 $generated@@596 $generated@@597))) (and (= ($generated@@329 ($generated@@418 $generated@@139 $generated@@598)) $generated@@598) ($generated@@149 ($generated@@418 $generated@@139 $generated@@598) ($generated@@152 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@252 $generated@@598 ($generated@@152 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@139) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@247 $generated@@601) (and ($generated@@265 $generated@@599) ($generated@@78 $generated@@599 ($generated@@246 $generated@@600) $generated@@601)))) ($generated@@305 ($generated@@266 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@305 ($generated@@266 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@602)))
 (not ($generated@@0 ($generated@@85 ($generated@@467 $generated@@603) $generated@@602))))
 :pattern ( (let (($generated@@603 (type $generated@@602)))
($generated@@85 ($generated@@467 $generated@@603) $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@68) (= (type $generated@@605) $generated@@68)) (and (= ($generated@@76 ($generated@@152 $generated@@604 $generated@@605)) $generated@@62) (= ($generated@@340 ($generated@@152 $generated@@604 $generated@@605)) $generated@@66)))
 :pattern ( ($generated@@152 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@139) (= ($generated@@580 ($generated@@329 $generated@@606)) ($generated@@581 $generated@@606)))
 :pattern ( ($generated@@580 ($generated@@329 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@141) ($generated@@252 $generated@@607 ($generated@@79 0))) (and (= ($generated@@329 ($generated@@418 $generated@@2 $generated@@607)) $generated@@607) ($generated@@149 ($generated@@418 ($generated@@80 $generated@@141 $generated@@4) $generated@@607) ($generated@@79 0))))
 :pattern ( ($generated@@252 $generated@@607 ($generated@@79 0)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@141) (= (type $generated@@609) $generated@@68)) ($generated@@252 $generated@@608 ($generated@@272 $generated@@609))) (and (= ($generated@@329 ($generated@@418 ($generated@@80 $generated@@141 $generated@@4) $generated@@608)) $generated@@608) ($generated@@149 ($generated@@418 ($generated@@80 $generated@@141 $generated@@4) $generated@@608) ($generated@@272 $generated@@609))))
 :pattern ( ($generated@@252 $generated@@608 ($generated@@272 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@141) (= (type $generated@@611) $generated@@68)) ($generated@@252 $generated@@610 ($generated@@277 $generated@@611))) (and (= ($generated@@329 ($generated@@418 ($generated@@80 $generated@@141 $generated@@4) $generated@@610)) $generated@@610) ($generated@@149 ($generated@@418 ($generated@@80 $generated@@141 $generated@@4) $generated@@610) ($generated@@277 $generated@@611))))
 :pattern ( ($generated@@252 $generated@@610 ($generated@@277 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@141) (= (type $generated@@613) $generated@@68)) ($generated@@252 $generated@@612 ($generated@@173 $generated@@613))) (and (= ($generated@@329 ($generated@@418 ($generated@@80 $generated@@141 $generated@@2) $generated@@612)) $generated@@612) ($generated@@149 ($generated@@418 ($generated@@80 $generated@@141 $generated@@2) $generated@@612) ($generated@@173 $generated@@613))))
 :pattern ( ($generated@@252 $generated@@612 ($generated@@173 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@141) (= (type $generated@@615) $generated@@68)) ($generated@@252 $generated@@614 ($generated@@539 $generated@@615))) (and (= ($generated@@329 ($generated@@418 ($generated@@322 $generated@@141) $generated@@614)) $generated@@614) ($generated@@149 ($generated@@418 ($generated@@322 $generated@@141) $generated@@614) ($generated@@539 $generated@@615))))
 :pattern ( ($generated@@252 $generated@@614 ($generated@@539 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@68) (= (type $generated@@617) $generated@@141)) ($generated@@252 $generated@@617 ($generated@@246 $generated@@616))) (and (= ($generated@@329 ($generated@@418 $generated@@139 $generated@@617)) $generated@@617) ($generated@@149 ($generated@@418 $generated@@139 $generated@@617) ($generated@@246 $generated@@616))))
 :pattern ( ($generated@@252 $generated@@617 ($generated@@246 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@139) (= (type $generated@@619) $generated@@68)) (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@247 $generated@@620) (and ($generated@@265 $generated@@618) ($generated@@78 $generated@@618 ($generated@@246 $generated@@619) $generated@@620)))) ($generated@@78 ($generated@@267 $generated@@618) ($generated@@246 $generated@@619) $generated@@620))
 :pattern ( ($generated@@78 ($generated@@267 $generated@@618) ($generated@@246 $generated@@619) $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@621) ($generated@@80 $generated@@141 $generated@@2)) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@621 ($generated@@173 $generated@@622) $generated@@623) (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@141) (< 0 ($generated ($generated@@85 $generated@@621 $generated@@624)))) ($generated@@305 $generated@@624 $generated@@622 $generated@@623))
 :pattern ( ($generated@@85 $generated@@621 $generated@@624))
))))
 :pattern ( ($generated@@78 $generated@@621 ($generated@@173 $generated@@622) $generated@@623))
)))
(assert (= $generated@@171 ($generated@@282 $generated@@171)))
(assert  (=> (<= 1 $generated@@286) (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@68) (= (type $generated@@626) $generated@@138)) (= (type $generated@@627) $generated@@139)) (or ($generated@@287 $generated@@625 ($generated@@282 $generated@@627)) (and (not (= 1 $generated@@286)) (and ($generated@@149 $generated@@627 ($generated@@246 $generated@@625)) (not ($generated@@262 $generated@@627 $generated@@171)))))) (and (=> (not ($generated@@0 ($generated@@282 ($generated@@11 ($generated@@288 ($generated@@282 ($generated@@267 ($generated@@282 $generated@@627)))))))) (let (($generated@@628 ($generated@@282 ($generated@@267 ($generated@@282 ($generated@@267 ($generated@@282 $generated@@627)))))))
(let (($generated@@629 ($generated@@282 ($generated@@266 ($generated@@282 ($generated@@267 ($generated@@282 $generated@@627)))))))
($generated@@287 $generated@@625 ($generated@@289 $generated@@629 $generated@@628))))) (= ($generated@@136 $generated@@625 ($generated@@165 $generated@@626) ($generated@@282 $generated@@627)) (ite ($generated@@288 ($generated@@282 ($generated@@267 ($generated@@282 $generated@@627)))) (let (($generated@@630 ($generated@@282 ($generated@@266 ($generated@@282 $generated@@627)))))
$generated@@630) (let (($generated@@631 ($generated@@282 ($generated@@267 ($generated@@282 ($generated@@267 ($generated@@282 $generated@@627)))))))
(let (($generated@@632 ($generated@@282 ($generated@@266 ($generated@@282 ($generated@@267 ($generated@@282 $generated@@627)))))))
($generated@@282 ($generated@@136 $generated@@625 ($generated@@165 $generated@@626) ($generated@@282 ($generated@@289 $generated@@632 $generated@@631))))))))))
 :weight 3
 :pattern ( ($generated@@136 $generated@@625 ($generated@@165 $generated@@626) ($generated@@282 $generated@@627)))
))))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@139) (= (type $generated@@634) $generated@@68)) (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@247 $generated@@635) (and ($generated@@151 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@68) ($generated@@78 $generated@@633 ($generated@@152 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@78 $generated@@633 ($generated@@152 $generated@@634 $generated@@636) $generated@@635))
))))) ($generated@@305 ($generated@@159 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@305 ($generated@@159 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@139) (= (type $generated@@638) $generated@@68)) (= (type $generated@@639) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@247 $generated@@639) (and ($generated@@151 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@68) ($generated@@78 $generated@@637 ($generated@@152 $generated@@640 $generated@@638) $generated@@639))
 :pattern ( ($generated@@78 $generated@@637 ($generated@@152 $generated@@640 $generated@@638) $generated@@639))
))))) ($generated@@305 ($generated@@160 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@305 ($generated@@160 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@141) (= (type $generated@@642) $generated@@141)) (= ($generated@@251 ($generated@@282 $generated@@641) ($generated@@282 $generated@@642)) ($generated@@282 ($generated@@251 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@251 ($generated@@282 $generated@@641) ($generated@@282 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@141) (= (type $generated@@644) $generated@@139)) (= ($generated@@289 ($generated@@282 $generated@@643) ($generated@@282 $generated@@644)) ($generated@@282 ($generated@@289 $generated@@643 $generated@@644))))
 :pattern ( ($generated@@289 ($generated@@282 $generated@@643) ($generated@@282 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ) (! (= ($generated@@329 ($generated@@282 $generated@@645)) ($generated@@282 ($generated@@329 $generated@@645)))
 :pattern ( ($generated@@329 ($generated@@282 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ) (! (let (($generated@@647 ($generated@@323 (type $generated@@646))))
 (=> (and (= (type $generated@@646) ($generated@@322 $generated@@647)) (= ($generated@@321 $generated@@646) 0)) (= $generated@@646 ($generated@@320 $generated@@647))))
 :pattern ( ($generated@@321 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (! (let (($generated@@651 (type $generated@@649)))
 (=> (and (and (= (type $generated@@648) ($generated@@80 $generated@@651 $generated@@2)) (= (type $generated@@650) $generated@@2)) (<= 0 ($generated $generated@@650))) (= ($generated@@334 ($generated@@86 $generated@@648 $generated@@649 $generated@@650)) (+ (- ($generated@@334 $generated@@648) ($generated ($generated@@85 $generated@@648 $generated@@649))) ($generated $generated@@650)))))
 :pattern ( ($generated@@334 ($generated@@86 $generated@@648 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@653) $generated@@2)) ($generated@@78 $generated@@653 $generated@@46 $generated@@652))
 :pattern ( ($generated@@78 $generated@@653 $generated@@46 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@655) $generated@@3)) ($generated@@78 $generated@@655 $generated@@47 $generated@@654))
 :pattern ( ($generated@@78 $generated@@655 $generated@@47 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@657) $generated@@4)) ($generated@@78 $generated@@657 $generated@@44 $generated@@656))
 :pattern ( ($generated@@78 $generated@@657 $generated@@44 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@659) $generated@@491)) ($generated@@78 $generated@@659 $generated@@45 $generated@@658))
 :pattern ( ($generated@@78 $generated@@659 $generated@@45 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@661) $generated@@141)) ($generated@@78 $generated@@661 $generated@@48 $generated@@660))
 :pattern ( ($generated@@78 $generated@@661 $generated@@48 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@662) $generated@@68) (= (type $generated@@663) $generated@@141)) (= (type $generated@@664) $generated@@139)) (= (type $generated@@665) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@247 $generated@@665)) (= ($generated@@78 ($generated@@289 $generated@@663 $generated@@664) ($generated@@246 $generated@@662) $generated@@665)  (and ($generated@@305 $generated@@663 $generated@@662 $generated@@665) ($generated@@78 $generated@@664 ($generated@@246 $generated@@662) $generated@@665))))
 :pattern ( ($generated@@78 ($generated@@289 $generated@@663 $generated@@664) ($generated@@246 $generated@@662) $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@322 $generated@@141)) (= (type $generated@@667) $generated@@68)) (= ($generated@@149 $generated@@666 ($generated@@539 $generated@@667)) (forall (($generated@@668 Int) ) (!  (=> (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@321 $generated@@666))) ($generated@@252 ($generated@@540 $generated@@666 $generated@@668) $generated@@667))
 :pattern ( ($generated@@540 $generated@@666 $generated@@668))
))))
 :pattern ( ($generated@@149 $generated@@666 ($generated@@539 $generated@@667)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 Int) ) (!  (=> (= (type $generated@@670) ($generated@@322 $generated@@141)) (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@321 $generated@@670))) (< ($generated@@581 ($generated@@418 $generated@@139 ($generated@@540 $generated@@670 $generated@@671))) ($generated@@669 $generated@@670))))
 :pattern ( ($generated@@581 ($generated@@418 $generated@@139 ($generated@@540 $generated@@670 $generated@@671))))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) ($generated@@345 $generated@@141 $generated@@141)) (= (type $generated@@673) $generated@@68)) (= (type $generated@@674) $generated@@68)) ($generated@@149 $generated@@672 ($generated@@446 $generated@@673 $generated@@674))) (and (and ($generated@@149 ($generated@@343 $generated@@672) ($generated@@272 $generated@@673)) ($generated@@149 ($generated@@386 $generated@@672) ($generated@@272 $generated@@674))) ($generated@@149 ($generated@@417 $generated@@672) ($generated@@272 ($generated@@152 $generated@@673 $generated@@674)))))
 :pattern ( ($generated@@149 $generated@@672 ($generated@@446 $generated@@673 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) ($generated@@363 $generated@@141 $generated@@141)) (= (type $generated@@676) $generated@@68)) (= (type $generated@@677) $generated@@68)) ($generated@@149 $generated@@675 ($generated@@454 $generated@@676 $generated@@677))) (and (and ($generated@@149 ($generated@@361 $generated@@675) ($generated@@277 $generated@@676)) ($generated@@149 ($generated@@397 $generated@@675) ($generated@@277 $generated@@677))) ($generated@@149 ($generated@@428 $generated@@675) ($generated@@277 ($generated@@152 $generated@@676 $generated@@677)))))
 :pattern ( ($generated@@149 $generated@@675 ($generated@@454 $generated@@676 $generated@@677)))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@2) ($generated@@149 $generated@@678 $generated@@46))
 :pattern ( ($generated@@149 $generated@@678 $generated@@46))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@3) ($generated@@149 $generated@@679 $generated@@47))
 :pattern ( ($generated@@149 $generated@@679 $generated@@47))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@4) ($generated@@149 $generated@@680 $generated@@44))
 :pattern ( ($generated@@149 $generated@@680 $generated@@44))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@491) ($generated@@149 $generated@@681 $generated@@45))
 :pattern ( ($generated@@149 $generated@@681 $generated@@45))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@141) ($generated@@149 $generated@@682 $generated@@48))
 :pattern ( ($generated@@149 $generated@@682 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@696) $generated@@139) (= (type $generated@@694) $generated@@141)) (= (type $generated@@683) $generated@@139)) (= (type $generated@@684) $generated@@141)) (= (type $generated@@685) $generated@@139)) (= (type $generated@@686) $generated@@68)) (= (type $generated@@687) $generated@@139)) (= (type $generated@@688) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@689) $generated@@139)) (= (type $generated@@690) $generated@@141)) (= (type $generated@@691) $generated@@141)) (= (type $generated@@692) $generated@@141)) (= (type $generated@@693) $generated@@141)) (= (type $generated@@695) $generated@@139)) (= (type $generated@@697) ($generated@@180 $generated@@81 $generated@@4))) (= (type $generated@@698) $generated@@81)) (= (type $generated@@699) ($generated@@180 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@701 true))
(let (($generated@@702  (=> (= $generated@@683 ($generated@@289 $generated@@684 $generated@@685)) (=> (and ($generated@@252 $generated@@684 $generated@@686) ($generated@@149 $generated@@685 ($generated@@246 $generated@@686))) (=> (and (and (and ($generated@@149 $generated@@687 ($generated@@246 $generated@@686)) ($generated@@78 $generated@@687 ($generated@@246 $generated@@686) $generated@@688)) (= $generated@@689 $generated@@685)) (and ($generated@@149 $generated@@689 ($generated@@246 $generated@@686)) (= $generated@@687 $generated@@689))) (=> (and (and (and (and ($generated@@252 $generated@@690 $generated@@686) ($generated@@305 $generated@@690 $generated@@686 $generated@@688)) (= $generated@@691 $generated@@684)) (and ($generated@@252 $generated@@691 $generated@@686) (= $generated@@690 $generated@@691))) (and (and (and ($generated@@252 $generated@@692 $generated@@686) ($generated@@305 $generated@@692 $generated@@686 $generated@@688)) (= $generated@@693 $generated@@694)) (and (and ($generated@@252 $generated@@693 $generated@@686) (= $generated@@692 $generated@@693)) (and (= $generated@@695 ($generated@@289 $generated@@690 $generated@@687)) ($generated@@78 $generated@@695 ($generated@@246 $generated@@686) $generated@@688))))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (not ($generated@@262 $generated@@695 $generated@@171))) (=> (and (not ($generated@@262 $generated@@695 $generated@@171)) (= (ControlFlow 0 8) (- 0 7))) (< ($generated@@581 $generated@@695) ($generated@@581 $generated@@696))))))))))
(let (($generated@@703  (=> (not (= $generated@@683 $generated@@171)) (and (=> (= (ControlFlow 0 11) 8) $generated@@702) (=> (= (ControlFlow 0 11) 10) $generated@@701)))))
(let (($generated@@704 true))
(let (($generated@@705  (=> (= $generated@@696 ($generated@@289 $generated@@694 $generated@@683)) (=> (and ($generated@@252 $generated@@694 $generated@@686) ($generated@@149 $generated@@683 ($generated@@246 $generated@@686))) (and (=> (= (ControlFlow 0 12) 6) $generated@@704) (=> (= (ControlFlow 0 12) 11) $generated@@703))))))
(let (($generated@@706 true))
(let (($generated@@707  (=> (and (= $generated@@696 $generated@@171) (= (ControlFlow 0 3) (- 0 2))) false)))
(let (($generated@@708  (=> (not (= $generated@@696 ($generated@@289 $generated@@694 $generated@@683))) (and (=> (= (ControlFlow 0 5) 3) $generated@@707) (=> (= (ControlFlow 0 5) 4) $generated@@706)))))
(let (($generated@@709  (=> (= $generated@@697 ($generated@@234 $generated@@698 $generated@@688 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 12) $generated@@705) (=> (= (ControlFlow 0 13) 5) $generated@@708)))))
(let (($generated@@710 true))
(let (($generated@@711  (=> (and (= $generated@@699 ($generated@@179 $generated@@698 $generated@@688 $generated@@60 false)) (not ($generated@@262 $generated@@696 $generated@@171))) (and (=> (= (ControlFlow 0 14) 1) $generated@@710) (=> (= (ControlFlow 0 14) 13) $generated@@709)))))
(let (($generated@@712  (=> (and (and (and ($generated@@247 $generated@@688) ($generated@@700 $generated@@688)) ($generated@@149 $generated@@696 ($generated@@246 $generated@@686))) (and (= 1 $generated@@286) (= (ControlFlow 0 15) 14))) $generated@@711)))
$generated@@712)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 () Int)
(declare-fun $generated@@275 (T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@277 (T@U T@U) T@U)
(declare-fun $generated@@293 (T@U T@U T@U) Bool)
(declare-fun $generated@@308 (T@T) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@322 (T@U) Int)
(declare-fun $generated@@323 (T@T) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@350 (T@T T@T) T@U)
(declare-fun $generated@@351 (T@T T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@353 (T@T) T@T)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@T T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@455 (T@T) T@U)
(declare-fun $generated@@479 () T@T)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@528 (T@U Int) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@657 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@139) 15)) (= ($generated@@1 $generated@@141) 16)) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@136 $generated@@142 $generated@@143 $generated@@144)) $generated@@141)
 :pattern ( ($generated@@136 $generated@@142 $generated@@143 $generated@@144))
))) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@137 $generated@@145)) $generated@@138)
 :pattern ( ($generated@@137 $generated@@145))
))) (= (type $generated@@140) $generated@@138)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@68) (= (type $generated@@147) $generated@@138)) (= (type $generated@@148) $generated@@139)) (= ($generated@@136 $generated@@146 $generated@@147 $generated@@148) ($generated@@136 $generated@@146 $generated@@140 $generated@@148)))
 :pattern ( ($generated@@136 $generated@@146 ($generated@@137 $generated@@147) $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@79 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@79 0)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@153 $generated@@154)) $generated@@68)
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@68) (= (type $generated@@156) $generated@@68)) (= (type $generated@@157) $generated@@139)) ($generated@@149 $generated@@157 ($generated@@152 $generated@@155 $generated@@156))) ($generated@@151 $generated@@157))
 :pattern ( ($generated@@151 $generated@@157) ($generated@@149 $generated@@157 ($generated@@152 $generated@@155 $generated@@156)))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@141)
 :pattern ( ($generated@@159 $generated@@161))
)) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@141)
 :pattern ( ($generated@@160 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@139) (= (type $generated@@164) $generated@@139)) true) (= ($generated@@158 $generated@@163 $generated@@164)  (and (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)) (= ($generated@@160 $generated@@163) ($generated@@160 $generated@@164)))))
 :pattern ( ($generated@@158 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@165 $generated@@166)) $generated@@138)
 :pattern ( ($generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@68) (= (type $generated@@168) $generated@@138)) (= (type $generated@@169) $generated@@139)) (= ($generated@@136 $generated@@167 ($generated@@165 $generated@@168) $generated@@169) ($generated@@136 $generated@@167 $generated@@168 $generated@@169)))
 :pattern ( ($generated@@136 $generated@@167 ($generated@@165 $generated@@168) $generated@@169))
)))
(assert  (and (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@72)
 :pattern ( ($generated@@170 $generated@@172))
)) (= (type $generated@@171) $generated@@139)))
(assert (= ($generated@@170 $generated@@171) $generated@@63))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@68)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@80 $generated@@141 $generated@@2)) (= (type $generated@@177) $generated@@68)) ($generated@@149 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@149 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 17)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@81 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@71 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@81) (= (type $generated@@228) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@229) ($generated@@70 $generated@@4))) (= (type $generated@@231) $generated@@81)) (= (type $generated@@232) ($generated@@70 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@234 $generated@@236)) $generated@@68)
 :pattern ( ($generated@@234 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (= (type $generated@@237) $generated@@68) (= (type $generated@@238) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@235 $generated@@238)) ($generated@@78 $generated@@171 ($generated@@234 $generated@@237) $generated@@238))
 :pattern ( ($generated@@78 $generated@@171 ($generated@@234 $generated@@237) $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@139)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@68) (= (type $generated@@244) $generated@@68)) (= (type $generated@@245) $generated@@141)) (= (type $generated@@246) $generated@@141)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@152 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@152 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (= (type $generated@@247) $generated@@68) ($generated@@149 $generated@@171 ($generated@@234 $generated@@247)))
 :pattern ( ($generated@@149 $generated@@171 ($generated@@234 $generated@@247)))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@139) (= (type $generated@@249) $generated@@139)) (= ($generated@@158 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@158 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@139) (= (type $generated@@252) $generated@@139)) (= ($generated@@250 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252))
)))
(assert  (and (forall (($generated@@256 T@U) ) (! (= (type ($generated@@254 $generated@@256)) $generated@@141)
 :pattern ( ($generated@@254 $generated@@256))
)) (forall (($generated@@257 T@U) ) (! (= (type ($generated@@255 $generated@@257)) $generated@@139)
 :pattern ( ($generated@@255 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@258) $generated@@139) (= (type $generated@@259) $generated@@139)) (and ($generated@@253 $generated@@258) ($generated@@253 $generated@@259))) (= ($generated@@250 $generated@@258 $generated@@259)  (and (= ($generated@@254 $generated@@258) ($generated@@254 $generated@@259)) ($generated@@250 ($generated@@255 $generated@@258) ($generated@@255 $generated@@259)))))
 :pattern ( ($generated@@250 $generated@@258 $generated@@259) ($generated@@253 $generated@@258))
 :pattern ( ($generated@@250 $generated@@258 $generated@@259) ($generated@@253 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@80 $generated@@141 $generated@@4)) (= (type $generated@@263) $generated@@68)) (= ($generated@@149 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@141) ($generated@@0 ($generated@@85 $generated@@262 $generated@@264))) ($generated@@240 $generated@@264 $generated@@263))
 :pattern ( ($generated@@85 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@149 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@68)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@80 $generated@@141 $generated@@4)) (= (type $generated@@268) $generated@@68)) (= ($generated@@149 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@141) ($generated@@0 ($generated@@85 $generated@@267 $generated@@269))) ($generated@@240 $generated@@269 $generated@@268))
 :pattern ( ($generated@@85 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@149 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@277 $generated@@278 $generated@@279)) $generated@@139)
 :pattern ( ($generated@@277 $generated@@278 $generated@@279))
)))
(assert  (=> (<= 1 $generated@@274) (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@280) $generated@@68) (= (type $generated@@281) $generated@@138)) (= (type $generated@@282) $generated@@139)) (or ($generated@@275 $generated@@280 $generated@@282) (and (not (= 1 $generated@@274)) (and ($generated@@149 $generated@@282 ($generated@@234 $generated@@280)) (not ($generated@@250 $generated@@282 $generated@@171)))))) (and (=> (not ($generated@@276 ($generated@@255 $generated@@282))) (let (($generated@@283 ($generated@@255 ($generated@@255 $generated@@282))))
(let (($generated@@284 ($generated@@254 ($generated@@255 $generated@@282))))
($generated@@275 $generated@@280 ($generated@@277 $generated@@284 $generated@@283))))) (= ($generated@@136 $generated@@280 ($generated@@165 $generated@@281) $generated@@282) (ite ($generated@@276 ($generated@@255 $generated@@282)) (let (($generated@@285 ($generated@@254 $generated@@282)))
$generated@@285) (let (($generated@@286 ($generated@@255 ($generated@@255 $generated@@282))))
(let (($generated@@287 ($generated@@254 ($generated@@255 $generated@@282))))
($generated@@136 $generated@@280 $generated@@281 ($generated@@277 $generated@@287 $generated@@286))))))))
 :pattern ( ($generated@@136 $generated@@280 ($generated@@165 $generated@@281) $generated@@282))
))))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@288) $generated@@139) (= (type $generated@@289) $generated@@139)) (and ($generated@@276 $generated@@288) ($generated@@276 $generated@@289))) (= ($generated@@250 $generated@@288 $generated@@289) true))
 :pattern ( ($generated@@250 $generated@@288 $generated@@289) ($generated@@276 $generated@@288))
 :pattern ( ($generated@@250 $generated@@288 $generated@@289) ($generated@@276 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@68) (= (type $generated@@291) $generated@@141)) (= (type $generated@@292) $generated@@139)) (= ($generated@@149 ($generated@@277 $generated@@291 $generated@@292) ($generated@@234 $generated@@290))  (and ($generated@@240 $generated@@291 $generated@@290) ($generated@@149 $generated@@292 ($generated@@234 $generated@@290)))))
 :pattern ( ($generated@@149 ($generated@@277 $generated@@291 $generated@@292) ($generated@@234 $generated@@290)))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) $generated@@68) (= (type $generated@@295) $generated@@68)) (= (type $generated@@296) $generated@@141)) (= (type $generated@@297) $generated@@141)) (= (type $generated@@298) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@235 $generated@@298)) (= ($generated@@78 ($generated@@239 $generated@@296 $generated@@297) ($generated@@152 $generated@@294 $generated@@295) $generated@@298)  (and ($generated@@293 $generated@@296 $generated@@294 $generated@@298) ($generated@@293 $generated@@297 $generated@@295 $generated@@298))))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@296 $generated@@297) ($generated@@152 $generated@@294 $generated@@295) $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@139) (= ($generated@@151 $generated@@299) (= ($generated@@170 $generated@@299) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@139) (= ($generated@@276 $generated@@300) (= ($generated@@170 $generated@@300) $generated@@63)))
 :pattern ( ($generated@@276 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@139) (= ($generated@@253 $generated@@301) (= ($generated@@170 $generated@@301) $generated@@65)))
 :pattern ( ($generated@@253 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@139) ($generated@@151 $generated@@302)) (exists (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (and (and (= (type $generated@@303) $generated@@141) (= (type $generated@@304) $generated@@141)) (= $generated@@302 ($generated@@239 $generated@@303 $generated@@304)))
 :no-pattern (type $generated@@303)
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
)))
 :pattern ( ($generated@@151 $generated@@302))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@139) ($generated@@253 $generated@@305)) (exists (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (and (and (= (type $generated@@306) $generated@@141) (= (type $generated@@307) $generated@@139)) (= $generated@@305 ($generated@@277 $generated@@306 $generated@@307)))
 :no-pattern (type $generated@@306)
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
)))
 :pattern ( ($generated@@253 $generated@@305))
)))
(assert  (and (and (forall (($generated@@312 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@312)) 18)) (forall (($generated@@313 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@310 $generated@@313))
))) (forall (($generated@@314 T@T) ) (! (= (type ($generated@@308 $generated@@314)) ($generated@@310 $generated@@314))
 :pattern ( ($generated@@308 $generated@@314))
))))
(assert (forall (($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@315)) 0)
 :pattern ( ($generated@@308 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@139) ($generated@@276 $generated@@316)) (= $generated@@316 $generated@@171))
 :pattern ( ($generated@@276 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@141)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@68) (= (type $generated@@321) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@293 ($generated@@317 $generated@@319) $generated@@320 $generated@@321) ($generated@@78 $generated@@319 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@293 ($generated@@317 $generated@@319) $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@324 T@T) ) (! (= (type ($generated@@323 $generated@@324)) ($generated@@80 $generated@@324 $generated@@2))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@83 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@80 $generated@@326 $generated@@2)) (and (= (= ($generated@@322 $generated@@325) 0) (= $generated@@325 ($generated@@323 $generated@@326))) (=> (not (= ($generated@@322 $generated@@325) 0)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) (< 0 ($generated ($generated@@85 $generated@@325 $generated@@327))))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@73)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@68) (and (= ($generated@@76 ($generated@@234 $generated@@330)) $generated@@64) (= ($generated@@328 ($generated@@234 $generated@@330)) $generated@@67)))
 :pattern ( ($generated@@234 $generated@@330))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 19)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@80 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@85 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@85 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert  (and (and (and (and (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (= ($generated@@1 ($generated@@351 $generated@@354 $generated@@355)) 20)) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@351 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= ($generated@@353 ($generated@@351 $generated@@358 $generated@@359)) $generated@@359)
 :pattern ( ($generated@@351 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@352 (type $generated@@360))))
(= (type ($generated@@349 $generated@@360)) ($generated@@80 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@360))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= (type ($generated@@350 $generated@@362 $generated@@363)) ($generated@@351 $generated@@362 $generated@@363))
 :pattern ( ($generated@@350 $generated@@362 $generated@@363))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@T) ) (! (let (($generated@@366 (type $generated@@364)))
 (not ($generated@@0 ($generated@@85 ($generated@@349 ($generated@@350 $generated@@366 $generated@@365)) $generated@@364))))
 :pattern ( (let (($generated@@366 (type $generated@@364)))
($generated@@85 ($generated@@349 ($generated@@350 $generated@@366 $generated@@365)) $generated@@364)))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@83 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@80 $generated@@368 $generated@@2)) (= ($generated@@174 $generated@@367) (forall (($generated@@369 T@U) ) (!  (=> (= (type $generated@@369) $generated@@368) (and (<= 0 ($generated ($generated@@85 $generated@@367 $generated@@369))) (<= ($generated ($generated@@85 $generated@@367 $generated@@369)) ($generated@@322 $generated@@367))))
 :pattern ( ($generated@@85 $generated@@367 $generated@@369))
)))))
 :pattern ( ($generated@@174 $generated@@367))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@335 (type $generated@@370))))
(let (($generated@@372 ($generated@@334 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@333 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@332 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@331 $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@335 (type $generated@@375))))
(= (type ($generated@@374 $generated@@375)) ($generated@@80 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@335 (type $generated@@377))))
(let (($generated@@379 ($generated@@334 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@333 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@332 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@378) ($generated@@0 ($generated@@85 ($generated@@374 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@353 (type $generated@@381))))
(let (($generated@@383 ($generated@@352 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@351 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@350 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@85 ($generated@@349 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@349 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@353 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@80 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@353 (type $generated@@388))))
(let (($generated@@390 ($generated@@352 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@351 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@350 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@85 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@80 $generated@@141 $generated@@2)) (= (type $generated@@393) $generated@@68)) (= ($generated@@149 $generated@@392 ($generated@@173 $generated@@393)) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@141) (< 0 ($generated ($generated@@85 $generated@@392 $generated@@394)))) ($generated@@240 $generated@@394 $generated@@393))
 :pattern ( ($generated@@85 $generated@@392 $generated@@394))
))))
 :pattern ( ($generated@@149 $generated@@392 ($generated@@173 $generated@@393)))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@80 $generated@@141 $generated@@4)) (= (type $generated@@396) $generated@@68)) (= (type $generated@@397) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@395 ($generated@@260 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@141) ($generated@@0 ($generated@@85 $generated@@395 $generated@@398))) ($generated@@293 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@85 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@78 $generated@@395 ($generated@@260 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@80 $generated@@141 $generated@@4)) (= (type $generated@@400) $generated@@68)) (= (type $generated@@401) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@399 ($generated@@265 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@141) ($generated@@0 ($generated@@85 $generated@@399 $generated@@402))) ($generated@@293 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@85 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@78 $generated@@399 ($generated@@265 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(= ($generated ($generated@@85 ($generated@@323 $generated@@404) $generated@@403)) 0))
 :pattern ( (let (($generated@@404 (type $generated@@403)))
($generated@@85 ($generated@@323 $generated@@404) $generated@@403)))
)))
(assert  (and (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@405 $generated@@408)) ($generated@@80 $generated@@141 $generated@@4))
 :pattern ( ($generated@@405 $generated@@408))
)) (forall (($generated@@409 T@T) ($generated@@410 T@U) ) (! (= (type ($generated@@406 $generated@@409 $generated@@410)) $generated@@409)
 :pattern ( ($generated@@406 $generated@@409 $generated@@410))
))) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@335 (type $generated@@411))))
(let (($generated@@413 ($generated@@334 (type $generated@@411))))
(= (type ($generated@@407 $generated@@411)) ($generated@@80 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@407 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@333 $generated@@141 $generated@@141)) (= (type $generated@@415) $generated@@141)) (= ($generated@@0 ($generated@@85 ($generated@@405 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@85 ($generated@@331 $generated@@414) ($generated@@159 ($generated@@406 $generated@@139 $generated@@415)))) (= ($generated@@85 ($generated@@407 $generated@@414) ($generated@@159 ($generated@@406 $generated@@139 $generated@@415))) ($generated@@160 ($generated@@406 $generated@@139 $generated@@415))))))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@414) $generated@@415))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@80 $generated@@141 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@353 (type $generated@@419))))
(let (($generated@@421 ($generated@@352 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@80 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@351 $generated@@141 $generated@@141)) (= (type $generated@@423) $generated@@141)) (= ($generated@@0 ($generated@@85 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@85 ($generated@@349 $generated@@422) ($generated@@159 ($generated@@406 $generated@@139 $generated@@423)))) (= ($generated@@85 ($generated@@417 $generated@@422) ($generated@@159 ($generated@@406 $generated@@139 $generated@@423))) ($generated@@160 ($generated@@406 $generated@@139 $generated@@423))))))
 :pattern ( ($generated@@85 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@334 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@333 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@85 ($generated@@374 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@85 ($generated@@331 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@85 ($generated@@407 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@424) $generated@@428))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@85 ($generated@@374 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@352 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@351 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@85 ($generated@@385 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@85 ($generated@@349 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@85 ($generated@@417 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@85 ($generated@@349 $generated@@429) $generated@@433))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@68)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@333 $generated@@141 $generated@@141)) (= (type $generated@@438) $generated@@68)) (= (type $generated@@439) $generated@@68)) (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@141) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@437) $generated@@441))) (and ($generated@@293 ($generated@@85 ($generated@@407 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@293 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@437) $generated@@441))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@78 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@68)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@351 $generated@@141 $generated@@141)) (= (type $generated@@446) $generated@@68)) (= (type $generated@@447) $generated@@68)) (= (type $generated@@448) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@141) ($generated@@0 ($generated@@85 ($generated@@349 $generated@@445) $generated@@449))) (and ($generated@@293 ($generated@@85 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@293 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@85 ($generated@@349 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@78 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (= (type $generated@@450) $generated@@68) (= (type $generated@@451) $generated@@139)) ($generated@@149 $generated@@451 ($generated@@234 $generated@@450))) (or ($generated@@276 $generated@@451) ($generated@@253 $generated@@451)))
 :pattern ( ($generated@@253 $generated@@451) ($generated@@149 $generated@@451 ($generated@@234 $generated@@450)))
 :pattern ( ($generated@@276 $generated@@451) ($generated@@149 $generated@@451 ($generated@@234 $generated@@450)))
)))
(assert  (=> (<= 1 $generated@@274) (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (and (= (type $generated@@452) $generated@@68) (= (type $generated@@453) $generated@@138)) (= (type $generated@@454) $generated@@139)) (or ($generated@@275 $generated@@452 $generated@@454) (and (not (= 1 $generated@@274)) (and ($generated@@149 $generated@@454 ($generated@@234 $generated@@452)) (not ($generated@@250 $generated@@454 $generated@@171)))))) ($generated@@240 ($generated@@136 $generated@@452 $generated@@453 $generated@@454) $generated@@452))
 :pattern ( ($generated@@136 $generated@@452 $generated@@453 $generated@@454))
))))
(assert (forall (($generated@@456 T@T) ) (! (= (type ($generated@@455 $generated@@456)) ($generated@@80 $generated@@456 $generated@@4))
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@353 (type $generated@@457))))
(let (($generated@@459 ($generated@@352 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@351 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@350 $generated@@459 $generated@@458)) (= ($generated@@349 $generated@@457) ($generated@@455 $generated@@459))))))
 :pattern ( ($generated@@349 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@353 (type $generated@@460))))
(let (($generated@@462 ($generated@@352 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@351 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@350 $generated@@462 $generated@@461)) (= ($generated@@385 $generated@@460) ($generated@@455 $generated@@461))))))
 :pattern ( ($generated@@385 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@353 (type $generated@@463))))
(let (($generated@@465 ($generated@@352 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@351 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@350 $generated@@465 $generated@@464)) (= ($generated@@416 $generated@@463) ($generated@@455 $generated@@141))))))
 :pattern ( ($generated@@416 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@335 (type $generated@@466))))
(let (($generated@@468 ($generated@@334 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@333 $generated@@468 $generated@@467)) (or (= $generated@@466 ($generated@@332 $generated@@468 $generated@@467)) (exists (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (and (and (= (type $generated@@469) $generated@@141) (= (type $generated@@470) $generated@@141)) ($generated@@0 ($generated@@85 ($generated@@405 $generated@@466) ($generated@@317 ($generated@@239 $generated@@469 $generated@@470)))))
 :no-pattern (type $generated@@469)
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
))))))
 :pattern ( ($generated@@405 $generated@@466))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@353 (type $generated@@471))))
(let (($generated@@473 ($generated@@352 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@351 $generated@@473 $generated@@472)) (or (= $generated@@471 ($generated@@350 $generated@@473 $generated@@472)) (exists (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (and (and (= (type $generated@@474) $generated@@141) (= (type $generated@@475) $generated@@141)) ($generated@@0 ($generated@@85 ($generated@@416 $generated@@471) ($generated@@317 ($generated@@239 $generated@@474 $generated@@475)))))
 :no-pattern (type $generated@@474)
 :no-pattern (type $generated@@475)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
))))))
 :pattern ( ($generated@@416 $generated@@471))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@141) ($generated@@240 $generated@@476 $generated@@46)) (and (= ($generated@@317 ($generated@@406 $generated@@2 $generated@@476)) $generated@@476) ($generated@@149 ($generated@@406 $generated@@2 $generated@@476) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@476 $generated@@46))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@141) ($generated@@240 $generated@@477 $generated@@47)) (and (= ($generated@@317 ($generated@@406 $generated@@3 $generated@@477)) $generated@@477) ($generated@@149 ($generated@@406 $generated@@3 $generated@@477) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@477 $generated@@47))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@141) ($generated@@240 $generated@@478 $generated@@44)) (and (= ($generated@@317 ($generated@@406 $generated@@4 $generated@@478)) $generated@@478) ($generated@@149 ($generated@@406 $generated@@4 $generated@@478) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@478 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@479) 21))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@141) ($generated@@240 $generated@@480 $generated@@45)) (and (= ($generated@@317 ($generated@@406 $generated@@479 $generated@@480)) $generated@@480) ($generated@@149 ($generated@@406 $generated@@479 $generated@@480) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@480 $generated@@45))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@68) (= ($generated@@240 ($generated@@317 $generated@@481) $generated@@482) ($generated@@149 $generated@@481 $generated@@482)))
 :pattern ( ($generated@@240 ($generated@@317 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@83 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@80 $generated@@484 $generated@@2)) (<= 0 ($generated@@322 $generated@@483))))
 :pattern ( ($generated@@322 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@311 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@310 $generated@@486)) (<= 0 ($generated@@309 $generated@@485))))
 :pattern ( ($generated@@309 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@487 ($generated@@434 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@434 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@68)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@491 ($generated@@434 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@434 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@76 ($generated@@434 $generated@@495 $generated@@496)) $generated@@58))
 :pattern ( ($generated@@434 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@68)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@68) (= (type $generated@@500) $generated@@68)) (= ($generated@@497 ($generated@@442 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@442 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@68)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@501 ($generated@@442 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@442 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@68) (= (type $generated@@506) $generated@@68)) (= ($generated@@76 ($generated@@442 $generated@@505 $generated@@506)) $generated@@59))
 :pattern ( ($generated@@442 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@141) (= (type $generated@@508) $generated@@141)) (= ($generated@@170 ($generated@@239 $generated@@507 $generated@@508)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@152 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@152 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@68) (= (type $generated@@516) $generated@@68)) (= ($generated@@513 ($generated@@152 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@152 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@141) (= (type $generated@@518) $generated@@141)) (= ($generated@@159 ($generated@@239 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@239 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@141) (= (type $generated@@520) $generated@@141)) (= ($generated@@160 ($generated@@239 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@239 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@141) (= (type $generated@@522) $generated@@139)) (= ($generated@@170 ($generated@@277 $generated@@521 $generated@@522)) $generated@@65))
 :pattern ( ($generated@@277 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@141) (= (type $generated@@524) $generated@@139)) (= ($generated@@254 ($generated@@277 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@277 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@141) (= (type $generated@@526) $generated@@139)) (= ($generated@@255 ($generated@@277 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@277 $generated@@525 $generated@@526))
)))
(assert  (and (forall (($generated@@529 T@U) ) (! (= (type ($generated@@527 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@529))
)) (forall (($generated@@530 T@U) ($generated@@531 Int) ) (! (let (($generated@@532 ($generated@@311 (type $generated@@530))))
(= (type ($generated@@528 $generated@@530 $generated@@531)) $generated@@532))
 :pattern ( ($generated@@528 $generated@@530 $generated@@531))
))))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@310 $generated@@141)) (= (type $generated@@534) $generated@@68)) (= (type $generated@@535) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@533 ($generated@@527 $generated@@534) $generated@@535) (forall (($generated@@536 Int) ) (!  (=> (and (<= 0 $generated@@536) (< $generated@@536 ($generated@@309 $generated@@533))) ($generated@@293 ($generated@@528 $generated@@533 $generated@@536) $generated@@534 $generated@@535))
 :pattern ( ($generated@@528 $generated@@533 $generated@@536))
))))
 :pattern ( ($generated@@78 $generated@@533 ($generated@@527 $generated@@534) $generated@@535))
)))
(assert (forall (($generated@@538 Int) ) (! (= ($generated@@537 ($generated@@79 $generated@@538)) $generated@@538)
 :pattern ( ($generated@@79 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@539 ($generated@@260 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@260 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@68) (= ($generated@@76 ($generated@@260 $generated@@542)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@543 ($generated@@265 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@265 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@68) (= ($generated@@76 ($generated@@265 $generated@@546)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@547 ($generated@@173 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@173 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@76 ($generated@@173 $generated@@550)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@68)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@551 ($generated@@527 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@527 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@76 ($generated@@527 $generated@@554)) $generated@@57))
 :pattern ( ($generated@@527 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@68)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@555 ($generated@@234 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@234 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
(= ($generated@@406 $generated@@559 ($generated@@317 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@317 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@333 $generated@@141 $generated@@141)) (= (type $generated@@561) $generated@@68)) (= (type $generated@@562) $generated@@68)) (= ($generated@@149 $generated@@560 ($generated@@434 $generated@@561 $generated@@562)) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@141) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@560) $generated@@563))) (and ($generated@@240 ($generated@@85 ($generated@@407 $generated@@560) $generated@@563) $generated@@562) ($generated@@240 $generated@@563 $generated@@561)))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@560) $generated@@563))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@560) $generated@@563))
))))
 :pattern ( ($generated@@149 $generated@@560 ($generated@@434 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@351 $generated@@141 $generated@@141)) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) $generated@@68)) (= ($generated@@149 $generated@@564 ($generated@@442 $generated@@565 $generated@@566)) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@141) ($generated@@0 ($generated@@85 ($generated@@349 $generated@@564) $generated@@567))) (and ($generated@@240 ($generated@@85 ($generated@@417 $generated@@564) $generated@@567) $generated@@566) ($generated@@240 $generated@@567 $generated@@565)))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@564) $generated@@567))
 :pattern ( ($generated@@85 ($generated@@349 $generated@@564) $generated@@567))
))))
 :pattern ( ($generated@@149 $generated@@564 ($generated@@442 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@141) (= (type $generated@@571) $generated@@141)) (< ($generated@@568 $generated@@570) ($generated@@569 ($generated@@239 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@239 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@141) (= (type $generated@@573) $generated@@141)) (< ($generated@@568 $generated@@573) ($generated@@569 ($generated@@239 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@239 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@141) (= (type $generated@@575) $generated@@139)) (< ($generated@@568 $generated@@574) ($generated@@569 ($generated@@277 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@277 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@141) (= (type $generated@@577) $generated@@139)) (< ($generated@@569 $generated@@577) ($generated@@569 ($generated@@277 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@277 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@141) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) $generated@@68)) ($generated@@240 $generated@@578 ($generated@@434 $generated@@579 $generated@@580))) (and (= ($generated@@317 ($generated@@406 ($generated@@333 $generated@@141 $generated@@141) $generated@@578)) $generated@@578) ($generated@@149 ($generated@@406 ($generated@@333 $generated@@141 $generated@@141) $generated@@578) ($generated@@434 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@240 $generated@@578 ($generated@@434 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@141) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@68)) ($generated@@240 $generated@@581 ($generated@@442 $generated@@582 $generated@@583))) (and (= ($generated@@317 ($generated@@406 ($generated@@351 $generated@@141 $generated@@141) $generated@@581)) $generated@@581) ($generated@@149 ($generated@@406 ($generated@@351 $generated@@141 $generated@@141) $generated@@581) ($generated@@442 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@240 $generated@@581 ($generated@@442 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@68) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) $generated@@141)) ($generated@@240 $generated@@586 ($generated@@152 $generated@@584 $generated@@585))) (and (= ($generated@@317 ($generated@@406 $generated@@139 $generated@@586)) $generated@@586) ($generated@@149 ($generated@@406 $generated@@139 $generated@@586) ($generated@@152 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@240 $generated@@586 ($generated@@152 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@139) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@235 $generated@@589) (and ($generated@@253 $generated@@587) ($generated@@78 $generated@@587 ($generated@@234 $generated@@588) $generated@@589)))) ($generated@@293 ($generated@@254 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@293 ($generated@@254 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (not ($generated@@0 ($generated@@85 ($generated@@455 $generated@@591) $generated@@590))))
 :pattern ( (let (($generated@@591 (type $generated@@590)))
($generated@@85 ($generated@@455 $generated@@591) $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@68) (= (type $generated@@593) $generated@@68)) (and (= ($generated@@76 ($generated@@152 $generated@@592 $generated@@593)) $generated@@62) (= ($generated@@328 ($generated@@152 $generated@@592 $generated@@593)) $generated@@66)))
 :pattern ( ($generated@@152 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@139) (= ($generated@@568 ($generated@@317 $generated@@594)) ($generated@@569 $generated@@594)))
 :pattern ( ($generated@@568 ($generated@@317 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@141) ($generated@@240 $generated@@595 ($generated@@79 0))) (and (= ($generated@@317 ($generated@@406 $generated@@2 $generated@@595)) $generated@@595) ($generated@@149 ($generated@@406 ($generated@@80 $generated@@141 $generated@@4) $generated@@595) ($generated@@79 0))))
 :pattern ( ($generated@@240 $generated@@595 ($generated@@79 0)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@141) (= (type $generated@@597) $generated@@68)) ($generated@@240 $generated@@596 ($generated@@260 $generated@@597))) (and (= ($generated@@317 ($generated@@406 ($generated@@80 $generated@@141 $generated@@4) $generated@@596)) $generated@@596) ($generated@@149 ($generated@@406 ($generated@@80 $generated@@141 $generated@@4) $generated@@596) ($generated@@260 $generated@@597))))
 :pattern ( ($generated@@240 $generated@@596 ($generated@@260 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@141) (= (type $generated@@599) $generated@@68)) ($generated@@240 $generated@@598 ($generated@@265 $generated@@599))) (and (= ($generated@@317 ($generated@@406 ($generated@@80 $generated@@141 $generated@@4) $generated@@598)) $generated@@598) ($generated@@149 ($generated@@406 ($generated@@80 $generated@@141 $generated@@4) $generated@@598) ($generated@@265 $generated@@599))))
 :pattern ( ($generated@@240 $generated@@598 ($generated@@265 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@141) (= (type $generated@@601) $generated@@68)) ($generated@@240 $generated@@600 ($generated@@173 $generated@@601))) (and (= ($generated@@317 ($generated@@406 ($generated@@80 $generated@@141 $generated@@2) $generated@@600)) $generated@@600) ($generated@@149 ($generated@@406 ($generated@@80 $generated@@141 $generated@@2) $generated@@600) ($generated@@173 $generated@@601))))
 :pattern ( ($generated@@240 $generated@@600 ($generated@@173 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@141) (= (type $generated@@603) $generated@@68)) ($generated@@240 $generated@@602 ($generated@@527 $generated@@603))) (and (= ($generated@@317 ($generated@@406 ($generated@@310 $generated@@141) $generated@@602)) $generated@@602) ($generated@@149 ($generated@@406 ($generated@@310 $generated@@141) $generated@@602) ($generated@@527 $generated@@603))))
 :pattern ( ($generated@@240 $generated@@602 ($generated@@527 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@68) (= (type $generated@@605) $generated@@141)) ($generated@@240 $generated@@605 ($generated@@234 $generated@@604))) (and (= ($generated@@317 ($generated@@406 $generated@@139 $generated@@605)) $generated@@605) ($generated@@149 ($generated@@406 $generated@@139 $generated@@605) ($generated@@234 $generated@@604))))
 :pattern ( ($generated@@240 $generated@@605 ($generated@@234 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@139) (= (type $generated@@607) $generated@@68)) (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@235 $generated@@608) (and ($generated@@253 $generated@@606) ($generated@@78 $generated@@606 ($generated@@234 $generated@@607) $generated@@608)))) ($generated@@78 ($generated@@255 $generated@@606) ($generated@@234 $generated@@607) $generated@@608))
 :pattern ( ($generated@@78 ($generated@@255 $generated@@606) ($generated@@234 $generated@@607) $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@80 $generated@@141 $generated@@2)) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@609 ($generated@@173 $generated@@610) $generated@@611) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@141) (< 0 ($generated ($generated@@85 $generated@@609 $generated@@612)))) ($generated@@293 $generated@@612 $generated@@610 $generated@@611))
 :pattern ( ($generated@@85 $generated@@609 $generated@@612))
))))
 :pattern ( ($generated@@78 $generated@@609 ($generated@@173 $generated@@610) $generated@@611))
)))
(assert (= $generated@@171 ($generated@@270 $generated@@171)))
(assert  (=> (<= 1 $generated@@274) (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@68) (= (type $generated@@614) $generated@@138)) (= (type $generated@@615) $generated@@139)) (or ($generated@@275 $generated@@613 ($generated@@270 $generated@@615)) (and (not (= 1 $generated@@274)) (and ($generated@@149 $generated@@615 ($generated@@234 $generated@@613)) (not ($generated@@250 $generated@@615 $generated@@171)))))) (and (=> (not ($generated@@0 ($generated@@270 ($generated@@11 ($generated@@276 ($generated@@270 ($generated@@255 ($generated@@270 $generated@@615)))))))) (let (($generated@@616 ($generated@@270 ($generated@@255 ($generated@@270 ($generated@@255 ($generated@@270 $generated@@615)))))))
(let (($generated@@617 ($generated@@270 ($generated@@254 ($generated@@270 ($generated@@255 ($generated@@270 $generated@@615)))))))
($generated@@275 $generated@@613 ($generated@@277 $generated@@617 $generated@@616))))) (= ($generated@@136 $generated@@613 ($generated@@165 $generated@@614) ($generated@@270 $generated@@615)) (ite ($generated@@276 ($generated@@270 ($generated@@255 ($generated@@270 $generated@@615)))) (let (($generated@@618 ($generated@@270 ($generated@@254 ($generated@@270 $generated@@615)))))
$generated@@618) (let (($generated@@619 ($generated@@270 ($generated@@255 ($generated@@270 ($generated@@255 ($generated@@270 $generated@@615)))))))
(let (($generated@@620 ($generated@@270 ($generated@@254 ($generated@@270 ($generated@@255 ($generated@@270 $generated@@615)))))))
($generated@@270 ($generated@@136 $generated@@613 ($generated@@165 $generated@@614) ($generated@@270 ($generated@@277 $generated@@620 $generated@@619))))))))))
 :weight 3
 :pattern ( ($generated@@136 $generated@@613 ($generated@@165 $generated@@614) ($generated@@270 $generated@@615)))
))))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@139) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@235 $generated@@623) (and ($generated@@151 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@68) ($generated@@78 $generated@@621 ($generated@@152 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@78 $generated@@621 ($generated@@152 $generated@@622 $generated@@624) $generated@@623))
))))) ($generated@@293 ($generated@@159 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@293 ($generated@@159 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@139) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@235 $generated@@627) (and ($generated@@151 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@68) ($generated@@78 $generated@@625 ($generated@@152 $generated@@628 $generated@@626) $generated@@627))
 :pattern ( ($generated@@78 $generated@@625 ($generated@@152 $generated@@628 $generated@@626) $generated@@627))
))))) ($generated@@293 ($generated@@160 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@293 ($generated@@160 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@141) (= (type $generated@@630) $generated@@141)) (= ($generated@@239 ($generated@@270 $generated@@629) ($generated@@270 $generated@@630)) ($generated@@270 ($generated@@239 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@239 ($generated@@270 $generated@@629) ($generated@@270 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@141) (= (type $generated@@632) $generated@@139)) (= ($generated@@277 ($generated@@270 $generated@@631) ($generated@@270 $generated@@632)) ($generated@@270 ($generated@@277 $generated@@631 $generated@@632))))
 :pattern ( ($generated@@277 ($generated@@270 $generated@@631) ($generated@@270 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (! (= ($generated@@317 ($generated@@270 $generated@@633)) ($generated@@270 ($generated@@317 $generated@@633)))
 :pattern ( ($generated@@317 ($generated@@270 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (! (let (($generated@@635 ($generated@@311 (type $generated@@634))))
 (=> (and (= (type $generated@@634) ($generated@@310 $generated@@635)) (= ($generated@@309 $generated@@634) 0)) (= $generated@@634 ($generated@@308 $generated@@635))))
 :pattern ( ($generated@@309 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (! (let (($generated@@639 (type $generated@@637)))
 (=> (and (and (= (type $generated@@636) ($generated@@80 $generated@@639 $generated@@2)) (= (type $generated@@638) $generated@@2)) (<= 0 ($generated $generated@@638))) (= ($generated@@322 ($generated@@86 $generated@@636 $generated@@637 $generated@@638)) (+ (- ($generated@@322 $generated@@636) ($generated ($generated@@85 $generated@@636 $generated@@637))) ($generated $generated@@638)))))
 :pattern ( ($generated@@322 ($generated@@86 $generated@@636 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@641) $generated@@2)) ($generated@@78 $generated@@641 $generated@@46 $generated@@640))
 :pattern ( ($generated@@78 $generated@@641 $generated@@46 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@643) $generated@@3)) ($generated@@78 $generated@@643 $generated@@47 $generated@@642))
 :pattern ( ($generated@@78 $generated@@643 $generated@@47 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@645) $generated@@4)) ($generated@@78 $generated@@645 $generated@@44 $generated@@644))
 :pattern ( ($generated@@78 $generated@@645 $generated@@44 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@647) $generated@@479)) ($generated@@78 $generated@@647 $generated@@45 $generated@@646))
 :pattern ( ($generated@@78 $generated@@647 $generated@@45 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@649) $generated@@141)) ($generated@@78 $generated@@649 $generated@@48 $generated@@648))
 :pattern ( ($generated@@78 $generated@@649 $generated@@48 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@650) $generated@@68) (= (type $generated@@651) $generated@@141)) (= (type $generated@@652) $generated@@139)) (= (type $generated@@653) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@235 $generated@@653)) (= ($generated@@78 ($generated@@277 $generated@@651 $generated@@652) ($generated@@234 $generated@@650) $generated@@653)  (and ($generated@@293 $generated@@651 $generated@@650 $generated@@653) ($generated@@78 $generated@@652 ($generated@@234 $generated@@650) $generated@@653))))
 :pattern ( ($generated@@78 ($generated@@277 $generated@@651 $generated@@652) ($generated@@234 $generated@@650) $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@310 $generated@@141)) (= (type $generated@@655) $generated@@68)) (= ($generated@@149 $generated@@654 ($generated@@527 $generated@@655)) (forall (($generated@@656 Int) ) (!  (=> (and (<= 0 $generated@@656) (< $generated@@656 ($generated@@309 $generated@@654))) ($generated@@240 ($generated@@528 $generated@@654 $generated@@656) $generated@@655))
 :pattern ( ($generated@@528 $generated@@654 $generated@@656))
))))
 :pattern ( ($generated@@149 $generated@@654 ($generated@@527 $generated@@655)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 Int) ) (!  (=> (= (type $generated@@658) ($generated@@310 $generated@@141)) (=> (and (<= 0 $generated@@659) (< $generated@@659 ($generated@@309 $generated@@658))) (< ($generated@@569 ($generated@@406 $generated@@139 ($generated@@528 $generated@@658 $generated@@659))) ($generated@@657 $generated@@658))))
 :pattern ( ($generated@@569 ($generated@@406 $generated@@139 ($generated@@528 $generated@@658 $generated@@659))))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) ($generated@@333 $generated@@141 $generated@@141)) (= (type $generated@@661) $generated@@68)) (= (type $generated@@662) $generated@@68)) ($generated@@149 $generated@@660 ($generated@@434 $generated@@661 $generated@@662))) (and (and ($generated@@149 ($generated@@331 $generated@@660) ($generated@@260 $generated@@661)) ($generated@@149 ($generated@@374 $generated@@660) ($generated@@260 $generated@@662))) ($generated@@149 ($generated@@405 $generated@@660) ($generated@@260 ($generated@@152 $generated@@661 $generated@@662)))))
 :pattern ( ($generated@@149 $generated@@660 ($generated@@434 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) ($generated@@351 $generated@@141 $generated@@141)) (= (type $generated@@664) $generated@@68)) (= (type $generated@@665) $generated@@68)) ($generated@@149 $generated@@663 ($generated@@442 $generated@@664 $generated@@665))) (and (and ($generated@@149 ($generated@@349 $generated@@663) ($generated@@265 $generated@@664)) ($generated@@149 ($generated@@385 $generated@@663) ($generated@@265 $generated@@665))) ($generated@@149 ($generated@@416 $generated@@663) ($generated@@265 ($generated@@152 $generated@@664 $generated@@665)))))
 :pattern ( ($generated@@149 $generated@@663 ($generated@@442 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@2) ($generated@@149 $generated@@666 $generated@@46))
 :pattern ( ($generated@@149 $generated@@666 $generated@@46))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@3) ($generated@@149 $generated@@667 $generated@@47))
 :pattern ( ($generated@@149 $generated@@667 $generated@@47))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@4) ($generated@@149 $generated@@668 $generated@@44))
 :pattern ( ($generated@@149 $generated@@668 $generated@@44))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@479) ($generated@@149 $generated@@669 $generated@@45))
 :pattern ( ($generated@@149 $generated@@669 $generated@@45))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@141) ($generated@@149 $generated@@670 $generated@@48))
 :pattern ( ($generated@@149 $generated@@670 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@671) ($generated@@180 $generated@@81 $generated@@4)) (= (type $generated@@672) $generated@@81)) (= (type $generated@@673) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@674) $generated@@139)) (= (type $generated@@675) $generated@@141)) (= (type $generated@@676) $generated@@68)) (= (type $generated@@677) $generated@@139)) (= (type $generated@@678) $generated@@139)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@680  (=> (= $generated@@671 ($generated@@179 $generated@@672 $generated@@673 $generated@@60 false)) (=> (and (= $generated@@674 ($generated@@277 $generated@@675 ($generated@@270 $generated@@171))) ($generated@@78 $generated@@674 ($generated@@234 $generated@@676) $generated@@673)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not ($generated@@250 $generated@@674 $generated@@171))) (=> (and ($generated@@275 $generated@@676 ($generated@@277 $generated@@675 ($generated@@270 $generated@@171))) ($generated@@275 $generated@@676 ($generated@@277 $generated@@675 ($generated@@270 $generated@@171)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (= ($generated@@136 $generated@@676 ($generated@@165 ($generated@@165 $generated@@140)) ($generated@@277 $generated@@675 ($generated@@270 $generated@@171))) $generated@@675)) (=> (= ($generated@@136 $generated@@676 ($generated@@165 $generated@@140) ($generated@@277 $generated@@675 ($generated@@270 $generated@@171))) $generated@@675) (=> (and (= $generated@@677 ($generated@@277 $generated@@675 ($generated@@277 $generated@@675 ($generated@@270 $generated@@171)))) ($generated@@78 $generated@@677 ($generated@@234 $generated@@676) $generated@@673)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not ($generated@@250 $generated@@677 $generated@@171))) (=> ($generated@@275 $generated@@676 ($generated@@277 $generated@@675 ($generated@@277 $generated@@675 ($generated@@270 $generated@@171)))) (=> (and (= $generated@@678 ($generated@@277 $generated@@675 ($generated@@270 $generated@@171))) ($generated@@78 $generated@@678 ($generated@@234 $generated@@676) $generated@@673)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not ($generated@@250 $generated@@678 $generated@@171))) (=> ($generated@@275 $generated@@676 ($generated@@277 $generated@@675 ($generated@@270 $generated@@171))) (=> (and (and ($generated@@275 $generated@@676 ($generated@@277 $generated@@675 ($generated@@277 $generated@@675 ($generated@@270 $generated@@171)))) ($generated@@275 $generated@@676 ($generated@@277 $generated@@675 ($generated@@270 $generated@@171)))) (= (ControlFlow 0 2) (- 0 1))) (= ($generated@@136 $generated@@676 ($generated@@165 ($generated@@165 $generated@@140)) ($generated@@277 $generated@@675 ($generated@@277 $generated@@675 ($generated@@270 $generated@@171)))) ($generated@@136 $generated@@676 ($generated@@165 ($generated@@165 $generated@@140)) ($generated@@277 $generated@@675 ($generated@@270 $generated@@171)))))))))))))))))))
(let (($generated@@681  (=> (and ($generated@@235 $generated@@673) ($generated@@679 $generated@@673)) (=> (and (and ($generated@@240 $generated@@675 $generated@@676) ($generated@@293 $generated@@675 $generated@@676 $generated@@673)) (and (= 2 $generated@@274) (= (ControlFlow 0 7) 2))) $generated@@680))))
$generated@@681)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@T) T@U)
(declare-fun $generated@@468 () T@T)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@511 (T@U Int) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@550 () Int)
(declare-fun $generated@@551 (T@U T@U) Bool)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@638 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@136 $generated@@141 $generated@@142 $generated@@143)) $generated@@139)
 :pattern ( ($generated@@136 $generated@@141 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@137 $generated@@144)) $generated@@138)
 :pattern ( ($generated@@137 $generated@@144))
))) (= (type $generated@@140) $generated@@138)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@138) (= (type $generated@@146) $generated@@139)) (= (type $generated@@147) $generated@@139)) (= ($generated@@136 $generated@@145 $generated@@146 $generated@@147) ($generated@@136 $generated@@140 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@136 ($generated@@137 $generated@@145) $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@79 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@79 0)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@151 $generated@@152 $generated@@153)) $generated@@68)
 :pattern ( ($generated@@151 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@68) (= (type $generated@@155) $generated@@68)) (= (type $generated@@156) $generated@@139)) ($generated@@148 $generated@@156 ($generated@@151 $generated@@154 $generated@@155))) ($generated@@150 $generated@@156))
 :pattern ( ($generated@@150 $generated@@156) ($generated@@148 $generated@@156 ($generated@@151 $generated@@154 $generated@@155)))
)))
(assert  (and (and (= ($generated@@1 $generated@@160) 16) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@158 $generated@@161))
))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@160)
 :pattern ( ($generated@@159 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@139) (= (type $generated@@164) $generated@@139)) true) (= ($generated@@157 $generated@@163 $generated@@164)  (and (= ($generated@@158 $generated@@163) ($generated@@158 $generated@@164)) (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)))))
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
)))
(assert  (and (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@72)
 :pattern ( ($generated@@165 $generated@@167))
)) (= (type $generated@@166) $generated@@139)))
(assert (= ($generated@@165 $generated@@166) $generated@@63))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@68)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@80 $generated@@160 $generated@@2)) (= (type $generated@@172) $generated@@68)) ($generated@@148 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@148 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 17)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@81 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@71 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@81) (= (type $generated@@223) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@224) ($generated@@70 $generated@@4))) (= (type $generated@@226) $generated@@81)) (= (type $generated@@227) ($generated@@70 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ) (! (= (type ($generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233)) ($generated@@175 $generated@@81 $generated@@4))
 :pattern ( ($generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@71 (type $generated@@239))))
 (=> (and (and (and (and (= (type $generated@@234) $generated@@81) (= (type $generated@@235) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@236) ($generated@@70 $generated@@4))) (= (type $generated@@238) $generated@@81)) (= (type $generated@@239) ($generated@@70 $generated@@240))) (= ($generated@@0 ($generated@@173 ($generated@@229 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))  (=> (and (not (= $generated@@238 $generated@@234)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@235 $generated@@238) $generated@@236))) $generated@@237))))
 :pattern ( ($generated@@173 ($generated@@229 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@139)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@68) (= (type $generated@@246) $generated@@68)) (= (type $generated@@247) $generated@@160)) (= (type $generated@@248) $generated@@160)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@151 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@151 $generated@@245 $generated@@246)))
)))
(assert (= (type $generated@@249) $generated@@68))
(assert ($generated@@148 $generated@@166 $generated@@249))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@250 $generated@@251)) ($generated@@78 $generated@@166 $generated@@249 $generated@@251))
 :pattern ( ($generated@@78 $generated@@166 $generated@@249 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@139) (= (type $generated@@253) $generated@@139)) (= ($generated@@157 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@157 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@139) (= (type $generated@@256) $generated@@139)) (= ($generated@@254 $generated@@255 $generated@@256) (= $generated@@255 $generated@@256)))
 :pattern ( ($generated@@254 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@80 $generated@@160 $generated@@4)) (= (type $generated@@260) $generated@@68)) (= ($generated@@148 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@160) ($generated@@0 ($generated@@85 $generated@@259 $generated@@261))) ($generated@@242 $generated@@261 $generated@@260))
 :pattern ( ($generated@@85 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@148 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@80 $generated@@160 $generated@@4)) (= (type $generated@@265) $generated@@68)) (= ($generated@@148 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@160) ($generated@@0 ($generated@@85 $generated@@264 $generated@@266))) ($generated@@242 $generated@@266 $generated@@265))
 :pattern ( ($generated@@85 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@148 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ) (! (let (($generated@@269 (type $generated@@268)))
(= (type ($generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= ($generated@@267 $generated@@270) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (= (type $generated@@272) $generated@@139) (= (type $generated@@273) $generated@@139)) (and ($generated@@271 $generated@@272) ($generated@@271 $generated@@273))) (= ($generated@@254 $generated@@272 $generated@@273) true))
 :pattern ( ($generated@@254 $generated@@272 $generated@@273) ($generated@@271 $generated@@272))
 :pattern ( ($generated@@254 $generated@@272 $generated@@273) ($generated@@271 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@68) (= (type $generated@@276) $generated@@68)) (= (type $generated@@277) $generated@@160)) (= (type $generated@@278) $generated@@160)) (= (type $generated@@279) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@250 $generated@@279)) (= ($generated@@78 ($generated@@241 $generated@@277 $generated@@278) ($generated@@151 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@78 ($generated@@241 $generated@@277 $generated@@278) ($generated@@151 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@139) (= ($generated@@150 $generated@@280) (= ($generated@@165 $generated@@280) $generated@@61)))
 :pattern ( ($generated@@150 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@139) (= ($generated@@271 $generated@@281) (= ($generated@@165 $generated@@281) $generated@@63)))
 :pattern ( ($generated@@271 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@139) (= ($generated@@282 $generated@@283) (= ($generated@@165 $generated@@283) $generated@@65)))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@139) ($generated@@150 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@160) (= (type $generated@@286) $generated@@160)) (= $generated@@284 ($generated@@241 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@150 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 18)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@139) ($generated@@271 $generated@@295)) (= $generated@@295 $generated@@166))
 :pattern ( ($generated@@271 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@139)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@139) ($generated@@282 $generated@@298)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@139) (= $generated@@298 ($generated@@296 $generated@@299)))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
)))
 :pattern ( ($generated@@282 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@160)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@68) (= (type $generated@@304) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@274 ($generated@@300 $generated@@302) $generated@@303 $generated@@304) ($generated@@78 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@274 ($generated@@300 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@80 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@83 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@80 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@85 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@80 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@85 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@85 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 20)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@80 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@85 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@85 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@83 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@80 $generated@@348 $generated@@2)) (= ($generated@@169 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@85 $generated@@347 $generated@@349))) (<= ($generated ($generated@@85 $generated@@347 $generated@@349)) ($generated@@305 $generated@@347))))
 :pattern ( ($generated@@85 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@169 $generated@@347))
)))
(assert (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@160) ($generated@@242 $generated@@353 $generated@@249)) (and (= ($generated@@300 ($generated@@350 $generated@@139 $generated@@353)) $generated@@353) ($generated@@148 ($generated@@350 $generated@@139 $generated@@353) $generated@@249)))
 :pattern ( ($generated@@242 $generated@@353 $generated@@249))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@139) (= ($generated@@148 ($generated@@296 $generated@@354) $generated@@249) ($generated@@148 $generated@@354 $generated@@249)))
 :pattern ( ($generated@@148 ($generated@@296 $generated@@354) $generated@@249))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@139)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@357) $generated@@139) (= (type $generated@@358) $generated@@139)) (and ($generated@@282 $generated@@357) ($generated@@282 $generated@@358))) (= ($generated@@254 $generated@@357 $generated@@358) ($generated@@254 ($generated@@355 $generated@@357) ($generated@@355 $generated@@358))))
 :pattern ( ($generated@@254 $generated@@357 $generated@@358) ($generated@@282 $generated@@357))
 :pattern ( ($generated@@254 $generated@@357 $generated@@358) ($generated@@282 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@315 (type $generated@@359))))
(let (($generated@@361 ($generated@@314 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@313 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@312 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@85 ($generated@@311 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@311 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@315 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@80 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@315 (type $generated@@366))))
(let (($generated@@368 ($generated@@314 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@313 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@312 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@85 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@333 (type $generated@@370))))
(let (($generated@@372 ($generated@@332 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@331 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@330 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) ($generated@@0 ($generated@@85 ($generated@@329 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@329 $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@333 (type $generated@@375))))
(= (type ($generated@@374 $generated@@375)) ($generated@@80 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@333 (type $generated@@377))))
(let (($generated@@379 ($generated@@332 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@331 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@330 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@378) ($generated@@0 ($generated@@85 ($generated@@374 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (= (type ($generated@@381 $generated@@382)) $generated@@138)
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) $generated@@138) (= (type $generated@@384) $generated@@139)) (= (type $generated@@385) $generated@@139)) (= ($generated@@136 ($generated@@381 $generated@@383) $generated@@384 $generated@@385) ($generated@@136 $generated@@383 $generated@@384 $generated@@385)))
 :pattern ( ($generated@@136 ($generated@@381 $generated@@383) $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@80 $generated@@160 $generated@@2)) (= (type $generated@@387) $generated@@68)) (= ($generated@@148 $generated@@386 ($generated@@168 $generated@@387)) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@160) (< 0 ($generated ($generated@@85 $generated@@386 $generated@@388)))) ($generated@@242 $generated@@388 $generated@@387))
 :pattern ( ($generated@@85 $generated@@386 $generated@@388))
))))
 :pattern ( ($generated@@148 $generated@@386 ($generated@@168 $generated@@387)))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@80 $generated@@160 $generated@@4)) (= (type $generated@@390) $generated@@68)) (= (type $generated@@391) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@389 ($generated@@257 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@160) ($generated@@0 ($generated@@85 $generated@@389 $generated@@392))) ($generated@@274 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@85 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@78 $generated@@389 ($generated@@257 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@80 $generated@@160 $generated@@4)) (= (type $generated@@394) $generated@@68)) (= (type $generated@@395) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@393 ($generated@@262 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@160) ($generated@@0 ($generated@@85 $generated@@393 $generated@@396))) ($generated@@274 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@85 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@78 $generated@@393 ($generated@@262 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(= ($generated ($generated@@85 ($generated@@306 $generated@@398) $generated@@397)) 0))
 :pattern ( (let (($generated@@398 (type $generated@@397)))
($generated@@85 ($generated@@306 $generated@@398) $generated@@397)))
)))
(assert  (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@401)) ($generated@@80 $generated@@160 $generated@@4))
 :pattern ( ($generated@@399 $generated@@401))
)) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@315 (type $generated@@402))))
(let (($generated@@404 ($generated@@314 (type $generated@@402))))
(= (type ($generated@@400 $generated@@402)) ($generated@@80 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@400 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@313 $generated@@160 $generated@@160)) (= (type $generated@@406) $generated@@160)) (= ($generated@@0 ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@85 ($generated@@311 $generated@@405) ($generated@@158 ($generated@@350 $generated@@139 $generated@@406)))) (= ($generated@@85 ($generated@@400 $generated@@405) ($generated@@158 ($generated@@350 $generated@@139 $generated@@406))) ($generated@@159 ($generated@@350 $generated@@139 $generated@@406))))))
 :pattern ( ($generated@@85 ($generated@@399 $generated@@405) $generated@@406))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@80 $generated@@160 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@333 (type $generated@@410))))
(let (($generated@@412 ($generated@@332 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@80 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@331 $generated@@160 $generated@@160)) (= (type $generated@@414) $generated@@160)) (= ($generated@@0 ($generated@@85 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@85 ($generated@@329 $generated@@413) ($generated@@158 ($generated@@350 $generated@@139 $generated@@414)))) (= ($generated@@85 ($generated@@408 $generated@@413) ($generated@@158 ($generated@@350 $generated@@139 $generated@@414))) ($generated@@159 ($generated@@350 $generated@@139 $generated@@414))))))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@314 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@313 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@85 ($generated@@363 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@85 ($generated@@311 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@85 ($generated@@400 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@85 ($generated@@311 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@85 ($generated@@363 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@332 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@331 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@85 ($generated@@374 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@85 ($generated@@329 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@85 ($generated@@408 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@85 ($generated@@329 $generated@@420) $generated@@424))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@85 ($generated@@374 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@68)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@313 $generated@@160 $generated@@160)) (= (type $generated@@429) $generated@@68)) (= (type $generated@@430) $generated@@68)) (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@160) ($generated@@0 ($generated@@85 ($generated@@311 $generated@@428) $generated@@432))) (and ($generated@@274 ($generated@@85 ($generated@@400 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@274 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@428) $generated@@432))
 :pattern ( ($generated@@85 ($generated@@311 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@78 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@68)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@331 $generated@@160 $generated@@160)) (= (type $generated@@437) $generated@@68)) (= (type $generated@@438) $generated@@68)) (= (type $generated@@439) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@160) ($generated@@0 ($generated@@85 ($generated@@329 $generated@@436) $generated@@440))) (and ($generated@@274 ($generated@@85 ($generated@@408 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@274 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@436) $generated@@440))
 :pattern ( ($generated@@85 ($generated@@329 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@78 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (= (type $generated@@441) $generated@@139) (= (type $generated@@442) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@250 $generated@@442)) (= ($generated@@78 ($generated@@296 $generated@@441) $generated@@249 $generated@@442) ($generated@@78 $generated@@441 $generated@@249 $generated@@442)))
 :pattern ( ($generated@@78 ($generated@@296 $generated@@441) $generated@@249 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@139) ($generated@@148 $generated@@443 $generated@@249)) (or ($generated@@271 $generated@@443) ($generated@@282 $generated@@443)))
 :pattern ( ($generated@@282 $generated@@443) ($generated@@148 $generated@@443 $generated@@249))
 :pattern ( ($generated@@271 $generated@@443) ($generated@@148 $generated@@443 $generated@@249))
)))
(assert (forall (($generated@@445 T@T) ) (! (= (type ($generated@@444 $generated@@445)) ($generated@@80 $generated@@445 $generated@@4))
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@333 (type $generated@@446))))
(let (($generated@@448 ($generated@@332 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@331 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@330 $generated@@448 $generated@@447)) (= ($generated@@329 $generated@@446) ($generated@@444 $generated@@448))))))
 :pattern ( ($generated@@329 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@333 (type $generated@@449))))
(let (($generated@@451 ($generated@@332 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@331 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@330 $generated@@451 $generated@@450)) (= ($generated@@374 $generated@@449) ($generated@@444 $generated@@450))))))
 :pattern ( ($generated@@374 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@333 (type $generated@@452))))
(let (($generated@@454 ($generated@@332 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@331 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@330 $generated@@454 $generated@@453)) (= ($generated@@407 $generated@@452) ($generated@@444 $generated@@160))))))
 :pattern ( ($generated@@407 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@315 (type $generated@@455))))
(let (($generated@@457 ($generated@@314 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@313 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@312 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@160) (= (type $generated@@459) $generated@@160)) ($generated@@0 ($generated@@85 ($generated@@399 $generated@@455) ($generated@@300 ($generated@@241 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@399 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@333 (type $generated@@460))))
(let (($generated@@462 ($generated@@332 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@331 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@330 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@160) (= (type $generated@@464) $generated@@160)) ($generated@@0 ($generated@@85 ($generated@@407 $generated@@460) ($generated@@300 ($generated@@241 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@407 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@160) ($generated@@242 $generated@@465 $generated@@46)) (and (= ($generated@@300 ($generated@@350 $generated@@2 $generated@@465)) $generated@@465) ($generated@@148 ($generated@@350 $generated@@2 $generated@@465) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@465 $generated@@46))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@160) ($generated@@242 $generated@@466 $generated@@47)) (and (= ($generated@@300 ($generated@@350 $generated@@3 $generated@@466)) $generated@@466) ($generated@@148 ($generated@@350 $generated@@3 $generated@@466) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@466 $generated@@47))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@160) ($generated@@242 $generated@@467 $generated@@44)) (and (= ($generated@@300 ($generated@@350 $generated@@4 $generated@@467)) $generated@@467) ($generated@@148 ($generated@@350 $generated@@4 $generated@@467) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@467 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@468) 21))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@160) ($generated@@242 $generated@@469 $generated@@45)) (and (= ($generated@@300 ($generated@@350 $generated@@468 $generated@@469)) $generated@@469) ($generated@@148 ($generated@@350 $generated@@468 $generated@@469) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@469 $generated@@45))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@68) (= ($generated@@242 ($generated@@300 $generated@@470) $generated@@471) ($generated@@148 $generated@@470 $generated@@471)))
 :pattern ( ($generated@@242 ($generated@@300 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@83 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@80 $generated@@473 $generated@@2)) (<= 0 ($generated@@305 $generated@@472))))
 :pattern ( ($generated@@305 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@290 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@289 $generated@@475)) (<= 0 ($generated@@288 $generated@@474))))
 :pattern ( ($generated@@288 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@476 ($generated@@425 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@425 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@68)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@480 ($generated@@425 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@425 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@68) (= (type $generated@@485) $generated@@68)) (= ($generated@@76 ($generated@@425 $generated@@484 $generated@@485)) $generated@@58))
 :pattern ( ($generated@@425 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@433 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@433 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@433 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@433 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@76 ($generated@@433 $generated@@494 $generated@@495)) $generated@@59))
 :pattern ( ($generated@@433 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@160) (= (type $generated@@497) $generated@@160)) (= ($generated@@165 ($generated@@241 $generated@@496 $generated@@497)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@68)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@68) (= (type $generated@@501) $generated@@68)) (= ($generated@@498 ($generated@@151 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@151 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@502 ($generated@@151 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@151 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@160) (= (type $generated@@507) $generated@@160)) (= ($generated@@158 ($generated@@241 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@241 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@160) (= (type $generated@@509) $generated@@160)) (= ($generated@@159 ($generated@@241 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@241 $generated@@508 $generated@@509))
)))
(assert  (and (forall (($generated@@512 T@U) ) (! (= (type ($generated@@510 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@512))
)) (forall (($generated@@513 T@U) ($generated@@514 Int) ) (! (let (($generated@@515 ($generated@@290 (type $generated@@513))))
(= (type ($generated@@511 $generated@@513 $generated@@514)) $generated@@515))
 :pattern ( ($generated@@511 $generated@@513 $generated@@514))
))))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@289 $generated@@160)) (= (type $generated@@517) $generated@@68)) (= (type $generated@@518) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@516 ($generated@@510 $generated@@517) $generated@@518) (forall (($generated@@519 Int) ) (!  (=> (and (<= 0 $generated@@519) (< $generated@@519 ($generated@@288 $generated@@516))) ($generated@@274 ($generated@@511 $generated@@516 $generated@@519) $generated@@517 $generated@@518))
 :pattern ( ($generated@@511 $generated@@516 $generated@@519))
))))
 :pattern ( ($generated@@78 $generated@@516 ($generated@@510 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@521 Int) ) (! (= ($generated@@520 ($generated@@79 $generated@@521)) $generated@@521)
 :pattern ( ($generated@@79 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@68) (= ($generated@@522 ($generated@@257 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@257 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@76 ($generated@@257 $generated@@525)) $generated@@54))
 :pattern ( ($generated@@257 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@526 ($generated@@262 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@262 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@76 ($generated@@262 $generated@@529)) $generated@@55))
 :pattern ( ($generated@@262 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@530 ($generated@@168 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@168 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@76 ($generated@@168 $generated@@533)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@534 ($generated@@510 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@510 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@76 ($generated@@510 $generated@@537)) $generated@@57))
 :pattern ( ($generated@@510 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@139) (= ($generated@@165 ($generated@@296 $generated@@538)) $generated@@65))
 :pattern ( ($generated@@296 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@139) (= ($generated@@355 ($generated@@296 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@296 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@350 $generated@@541 ($generated@@300 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@300 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@313 $generated@@160 $generated@@160)) (= (type $generated@@543) $generated@@68)) (= (type $generated@@544) $generated@@68)) (= ($generated@@148 $generated@@542 ($generated@@425 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@160) ($generated@@0 ($generated@@85 ($generated@@311 $generated@@542) $generated@@545))) (and ($generated@@242 ($generated@@85 ($generated@@400 $generated@@542) $generated@@545) $generated@@544) ($generated@@242 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@542) $generated@@545))
 :pattern ( ($generated@@85 ($generated@@311 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@148 $generated@@542 ($generated@@425 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@331 $generated@@160 $generated@@160)) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) $generated@@68)) (= ($generated@@148 $generated@@546 ($generated@@433 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@160) ($generated@@0 ($generated@@85 ($generated@@329 $generated@@546) $generated@@549))) (and ($generated@@242 ($generated@@85 ($generated@@408 $generated@@546) $generated@@549) $generated@@548) ($generated@@242 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@546) $generated@@549))
 :pattern ( ($generated@@85 ($generated@@329 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@148 $generated@@546 ($generated@@433 $generated@@547 $generated@@548)))
)))
(assert  (=> (<= 1 $generated@@550) (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@138) (= (type $generated@@553) $generated@@139)) (= (type $generated@@554) $generated@@139)) (or ($generated@@551 ($generated@@267 $generated@@553) ($generated@@267 $generated@@554)) (and (not (= 1 $generated@@550)) (and ($generated@@148 $generated@@553 $generated@@249) ($generated@@148 $generated@@554 $generated@@249))))) (and (and ($generated@@150 ($generated@@267 ($generated@@241 ($generated@@300 ($generated@@267 $generated@@553)) ($generated@@300 ($generated@@267 $generated@@554))))) (=> (not ($generated@@0 ($generated@@267 ($generated@@11 ($generated@@271 ($generated@@267 ($generated@@350 $generated@@139 ($generated@@158 ($generated@@267 ($generated@@241 ($generated@@300 ($generated@@267 $generated@@553)) ($generated@@300 ($generated@@267 $generated@@554)))))))))))) (and ($generated@@150 ($generated@@267 ($generated@@241 ($generated@@300 ($generated@@267 $generated@@553)) ($generated@@300 ($generated@@267 $generated@@554))))) (=> (not ($generated@@0 ($generated@@267 ($generated@@11 ($generated@@271 ($generated@@267 ($generated@@350 $generated@@139 ($generated@@159 ($generated@@267 ($generated@@241 ($generated@@300 ($generated@@267 $generated@@553)) ($generated@@300 ($generated@@267 $generated@@554)))))))))))) (and ($generated@@150 ($generated@@267 ($generated@@241 ($generated@@300 ($generated@@267 $generated@@553)) ($generated@@300 ($generated@@267 $generated@@554))))) (let (($generated@@555 ($generated@@267 ($generated@@355 ($generated@@267 ($generated@@350 $generated@@139 ($generated@@159 ($generated@@267 ($generated@@241 ($generated@@300 ($generated@@267 $generated@@553)) ($generated@@300 ($generated@@267 $generated@@554)))))))))))
 (and ($generated@@150 ($generated@@267 ($generated@@241 ($generated@@300 ($generated@@267 $generated@@553)) ($generated@@300 ($generated@@267 $generated@@554))))) (let (($generated@@556 ($generated@@267 ($generated@@355 ($generated@@267 ($generated@@350 $generated@@139 ($generated@@158 ($generated@@267 ($generated@@241 ($generated@@300 ($generated@@267 $generated@@553)) ($generated@@300 ($generated@@267 $generated@@554)))))))))))
($generated@@551 $generated@@556 $generated@@555))))))))) (= ($generated@@136 ($generated@@381 $generated@@552) ($generated@@267 $generated@@553) ($generated@@267 $generated@@554)) (ite ($generated@@271 ($generated@@267 ($generated@@350 $generated@@139 ($generated@@158 ($generated@@267 ($generated@@241 ($generated@@300 ($generated@@267 $generated@@553)) ($generated@@300 ($generated@@267 $generated@@554)))))))) $generated@@166 (ite ($generated@@271 ($generated@@267 ($generated@@350 $generated@@139 ($generated@@159 ($generated@@267 ($generated@@241 ($generated@@300 ($generated@@267 $generated@@553)) ($generated@@300 ($generated@@267 $generated@@554)))))))) $generated@@553 (let (($generated@@557 ($generated@@267 ($generated@@355 ($generated@@267 ($generated@@350 $generated@@139 ($generated@@159 ($generated@@267 ($generated@@241 ($generated@@300 ($generated@@267 $generated@@553)) ($generated@@300 ($generated@@267 $generated@@554)))))))))))
(let (($generated@@558 ($generated@@267 ($generated@@355 ($generated@@267 ($generated@@350 $generated@@139 ($generated@@158 ($generated@@267 ($generated@@241 ($generated@@300 ($generated@@267 $generated@@553)) ($generated@@300 ($generated@@267 $generated@@554)))))))))))
($generated@@267 ($generated@@136 ($generated@@381 $generated@@552) $generated@@558 $generated@@557)))))))))
 :weight 3
 :pattern ( ($generated@@136 ($generated@@381 $generated@@552) ($generated@@267 $generated@@553) ($generated@@267 $generated@@554)))
))))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@160) (= (type $generated@@562) $generated@@160)) (< ($generated@@559 $generated@@561) ($generated@@560 ($generated@@241 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@241 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@160) (= (type $generated@@564) $generated@@160)) (< ($generated@@559 $generated@@564) ($generated@@560 ($generated@@241 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@241 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@160) (= (type $generated@@566) $generated@@68)) (= (type $generated@@567) $generated@@68)) ($generated@@242 $generated@@565 ($generated@@425 $generated@@566 $generated@@567))) (and (= ($generated@@300 ($generated@@350 ($generated@@313 $generated@@160 $generated@@160) $generated@@565)) $generated@@565) ($generated@@148 ($generated@@350 ($generated@@313 $generated@@160 $generated@@160) $generated@@565) ($generated@@425 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@565 ($generated@@425 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@160) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) $generated@@68)) ($generated@@242 $generated@@568 ($generated@@433 $generated@@569 $generated@@570))) (and (= ($generated@@300 ($generated@@350 ($generated@@331 $generated@@160 $generated@@160) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@350 ($generated@@331 $generated@@160 $generated@@160) $generated@@568) ($generated@@433 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@433 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@68) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) $generated@@160)) ($generated@@242 $generated@@573 ($generated@@151 $generated@@571 $generated@@572))) (and (= ($generated@@300 ($generated@@350 $generated@@139 $generated@@573)) $generated@@573) ($generated@@148 ($generated@@350 $generated@@139 $generated@@573) ($generated@@151 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@242 $generated@@573 ($generated@@151 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@139) (< ($generated@@560 $generated@@574) ($generated@@560 ($generated@@296 $generated@@574))))
 :pattern ( ($generated@@296 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
 (not ($generated@@0 ($generated@@85 ($generated@@444 $generated@@576) $generated@@575))))
 :pattern ( (let (($generated@@576 (type $generated@@575)))
($generated@@85 ($generated@@444 $generated@@576) $generated@@575)))
)))
(assert  (=> (<= 1 $generated@@550) (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@138) (= (type $generated@@578) $generated@@139)) (= (type $generated@@579) $generated@@139)) (or ($generated@@551 $generated@@578 $generated@@579) (and (not (= 1 $generated@@550)) (and ($generated@@148 $generated@@578 $generated@@249) ($generated@@148 $generated@@579 $generated@@249))))) ($generated@@148 ($generated@@136 $generated@@577 $generated@@578 $generated@@579) $generated@@249))
 :pattern ( ($generated@@136 $generated@@577 $generated@@578 $generated@@579))
))))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@73)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@68) (= (type $generated@@583) $generated@@68)) (and (= ($generated@@76 ($generated@@151 $generated@@582 $generated@@583)) $generated@@62) (= ($generated@@580 ($generated@@151 $generated@@582 $generated@@583)) $generated@@66)))
 :pattern ( ($generated@@151 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@139) (= ($generated@@559 ($generated@@300 $generated@@584)) ($generated@@560 $generated@@584)))
 :pattern ( ($generated@@559 ($generated@@300 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@160) ($generated@@242 $generated@@585 ($generated@@79 0))) (and (= ($generated@@300 ($generated@@350 $generated@@2 $generated@@585)) $generated@@585) ($generated@@148 ($generated@@350 ($generated@@80 $generated@@160 $generated@@4) $generated@@585) ($generated@@79 0))))
 :pattern ( ($generated@@242 $generated@@585 ($generated@@79 0)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@160) (= (type $generated@@587) $generated@@68)) ($generated@@242 $generated@@586 ($generated@@257 $generated@@587))) (and (= ($generated@@300 ($generated@@350 ($generated@@80 $generated@@160 $generated@@4) $generated@@586)) $generated@@586) ($generated@@148 ($generated@@350 ($generated@@80 $generated@@160 $generated@@4) $generated@@586) ($generated@@257 $generated@@587))))
 :pattern ( ($generated@@242 $generated@@586 ($generated@@257 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@160) (= (type $generated@@589) $generated@@68)) ($generated@@242 $generated@@588 ($generated@@262 $generated@@589))) (and (= ($generated@@300 ($generated@@350 ($generated@@80 $generated@@160 $generated@@4) $generated@@588)) $generated@@588) ($generated@@148 ($generated@@350 ($generated@@80 $generated@@160 $generated@@4) $generated@@588) ($generated@@262 $generated@@589))))
 :pattern ( ($generated@@242 $generated@@588 ($generated@@262 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@160) (= (type $generated@@591) $generated@@68)) ($generated@@242 $generated@@590 ($generated@@168 $generated@@591))) (and (= ($generated@@300 ($generated@@350 ($generated@@80 $generated@@160 $generated@@2) $generated@@590)) $generated@@590) ($generated@@148 ($generated@@350 ($generated@@80 $generated@@160 $generated@@2) $generated@@590) ($generated@@168 $generated@@591))))
 :pattern ( ($generated@@242 $generated@@590 ($generated@@168 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@160) (= (type $generated@@593) $generated@@68)) ($generated@@242 $generated@@592 ($generated@@510 $generated@@593))) (and (= ($generated@@300 ($generated@@350 ($generated@@289 $generated@@160) $generated@@592)) $generated@@592) ($generated@@148 ($generated@@350 ($generated@@289 $generated@@160) $generated@@592) ($generated@@510 $generated@@593))))
 :pattern ( ($generated@@242 $generated@@592 ($generated@@510 $generated@@593)))
)))
(assert  (=> (<= 1 $generated@@550) (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@138) (= (type $generated@@595) $generated@@139)) (= (type $generated@@596) $generated@@139)) (or ($generated@@551 $generated@@595 $generated@@596) (and (not (= 1 $generated@@550)) (and ($generated@@148 $generated@@595 $generated@@249) ($generated@@148 $generated@@596 $generated@@249))))) (and (and ($generated@@150 ($generated@@241 ($generated@@300 $generated@@595) ($generated@@300 $generated@@596))) (=> (not ($generated@@271 ($generated@@350 $generated@@139 ($generated@@158 ($generated@@241 ($generated@@300 $generated@@595) ($generated@@300 $generated@@596)))))) (and ($generated@@150 ($generated@@241 ($generated@@300 $generated@@595) ($generated@@300 $generated@@596))) (=> (not ($generated@@271 ($generated@@350 $generated@@139 ($generated@@159 ($generated@@241 ($generated@@300 $generated@@595) ($generated@@300 $generated@@596)))))) (and ($generated@@150 ($generated@@241 ($generated@@300 $generated@@595) ($generated@@300 $generated@@596))) (let (($generated@@597 ($generated@@355 ($generated@@350 $generated@@139 ($generated@@159 ($generated@@241 ($generated@@300 $generated@@595) ($generated@@300 $generated@@596)))))))
 (and ($generated@@150 ($generated@@241 ($generated@@300 $generated@@595) ($generated@@300 $generated@@596))) (let (($generated@@598 ($generated@@355 ($generated@@350 $generated@@139 ($generated@@158 ($generated@@241 ($generated@@300 $generated@@595) ($generated@@300 $generated@@596)))))))
($generated@@551 $generated@@598 $generated@@597))))))))) (= ($generated@@136 ($generated@@381 $generated@@594) $generated@@595 $generated@@596) (ite ($generated@@271 ($generated@@350 $generated@@139 ($generated@@158 ($generated@@241 ($generated@@300 $generated@@595) ($generated@@300 $generated@@596))))) $generated@@166 (ite ($generated@@271 ($generated@@350 $generated@@139 ($generated@@159 ($generated@@241 ($generated@@300 $generated@@595) ($generated@@300 $generated@@596))))) $generated@@595 (let (($generated@@599 ($generated@@355 ($generated@@350 $generated@@139 ($generated@@159 ($generated@@241 ($generated@@300 $generated@@595) ($generated@@300 $generated@@596)))))))
(let (($generated@@600 ($generated@@355 ($generated@@350 $generated@@139 ($generated@@158 ($generated@@241 ($generated@@300 $generated@@595) ($generated@@300 $generated@@596)))))))
($generated@@136 $generated@@594 $generated@@600 $generated@@599))))))))
 :pattern ( ($generated@@136 ($generated@@381 $generated@@594) $generated@@595 $generated@@596))
))))
(assert (= ($generated@@76 $generated@@249) $generated@@64))
(assert (= ($generated@@580 $generated@@249) $generated@@67))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@601) ($generated@@80 $generated@@160 $generated@@2)) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@601 ($generated@@168 $generated@@602) $generated@@603) (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@160) (< 0 ($generated ($generated@@85 $generated@@601 $generated@@604)))) ($generated@@274 $generated@@604 $generated@@602 $generated@@603))
 :pattern ( ($generated@@85 $generated@@601 $generated@@604))
))))
 :pattern ( ($generated@@78 $generated@@601 ($generated@@168 $generated@@602) $generated@@603))
)))
(assert (= $generated@@166 ($generated@@267 $generated@@166)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@139) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@250 $generated@@607) (and ($generated@@150 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@68) ($generated@@78 $generated@@605 ($generated@@151 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@78 $generated@@605 ($generated@@151 $generated@@606 $generated@@608) $generated@@607))
))))) ($generated@@274 ($generated@@158 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@274 ($generated@@158 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@139) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@250 $generated@@611) (and ($generated@@150 $generated@@609) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@68) ($generated@@78 $generated@@609 ($generated@@151 $generated@@612 $generated@@610) $generated@@611))
 :pattern ( ($generated@@78 $generated@@609 ($generated@@151 $generated@@612 $generated@@610) $generated@@611))
))))) ($generated@@274 ($generated@@159 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@274 ($generated@@159 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@139) (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@250 $generated@@614) (and ($generated@@282 $generated@@613) ($generated@@78 $generated@@613 $generated@@249 $generated@@614)))) ($generated@@78 ($generated@@355 $generated@@613) $generated@@249 $generated@@614))
 :pattern ( ($generated@@78 ($generated@@355 $generated@@613) $generated@@249 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@160) (= (type $generated@@616) $generated@@160)) (= ($generated@@241 ($generated@@267 $generated@@615) ($generated@@267 $generated@@616)) ($generated@@267 ($generated@@241 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@241 ($generated@@267 $generated@@615) ($generated@@267 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@139) (= ($generated@@296 ($generated@@267 $generated@@617)) ($generated@@267 ($generated@@296 $generated@@617))))
 :pattern ( ($generated@@296 ($generated@@267 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (! (= ($generated@@300 ($generated@@267 $generated@@618)) ($generated@@267 ($generated@@300 $generated@@618)))
 :pattern ( ($generated@@300 ($generated@@267 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@290 (type $generated@@619))))
 (=> (and (= (type $generated@@619) ($generated@@289 $generated@@620)) (= ($generated@@288 $generated@@619) 0)) (= $generated@@619 ($generated@@287 $generated@@620))))
 :pattern ( ($generated@@288 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@622)))
 (=> (and (and (= (type $generated@@621) ($generated@@80 $generated@@624 $generated@@2)) (= (type $generated@@623) $generated@@2)) (<= 0 ($generated $generated@@623))) (= ($generated@@305 ($generated@@86 $generated@@621 $generated@@622 $generated@@623)) (+ (- ($generated@@305 $generated@@621) ($generated ($generated@@85 $generated@@621 $generated@@622))) ($generated $generated@@623)))))
 :pattern ( ($generated@@305 ($generated@@86 $generated@@621 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@626) $generated@@2)) ($generated@@78 $generated@@626 $generated@@46 $generated@@625))
 :pattern ( ($generated@@78 $generated@@626 $generated@@46 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@628) $generated@@3)) ($generated@@78 $generated@@628 $generated@@47 $generated@@627))
 :pattern ( ($generated@@78 $generated@@628 $generated@@47 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@630) $generated@@4)) ($generated@@78 $generated@@630 $generated@@44 $generated@@629))
 :pattern ( ($generated@@78 $generated@@630 $generated@@44 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@632) $generated@@468)) ($generated@@78 $generated@@632 $generated@@45 $generated@@631))
 :pattern ( ($generated@@78 $generated@@632 $generated@@45 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@634) $generated@@160)) ($generated@@78 $generated@@634 $generated@@48 $generated@@633))
 :pattern ( ($generated@@78 $generated@@634 $generated@@48 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@289 $generated@@160)) (= (type $generated@@636) $generated@@68)) (= ($generated@@148 $generated@@635 ($generated@@510 $generated@@636)) (forall (($generated@@637 Int) ) (!  (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@288 $generated@@635))) ($generated@@242 ($generated@@511 $generated@@635 $generated@@637) $generated@@636))
 :pattern ( ($generated@@511 $generated@@635 $generated@@637))
))))
 :pattern ( ($generated@@148 $generated@@635 ($generated@@510 $generated@@636)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 Int) ) (!  (=> (= (type $generated@@639) ($generated@@289 $generated@@160)) (=> (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@288 $generated@@639))) (< ($generated@@560 ($generated@@350 $generated@@139 ($generated@@511 $generated@@639 $generated@@640))) ($generated@@638 $generated@@639))))
 :pattern ( ($generated@@560 ($generated@@350 $generated@@139 ($generated@@511 $generated@@639 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@313 $generated@@160 $generated@@160)) (= (type $generated@@642) $generated@@68)) (= (type $generated@@643) $generated@@68)) ($generated@@148 $generated@@641 ($generated@@425 $generated@@642 $generated@@643))) (and (and ($generated@@148 ($generated@@311 $generated@@641) ($generated@@257 $generated@@642)) ($generated@@148 ($generated@@363 $generated@@641) ($generated@@257 $generated@@643))) ($generated@@148 ($generated@@399 $generated@@641) ($generated@@257 ($generated@@151 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@148 $generated@@641 ($generated@@425 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) ($generated@@331 $generated@@160 $generated@@160)) (= (type $generated@@645) $generated@@68)) (= (type $generated@@646) $generated@@68)) ($generated@@148 $generated@@644 ($generated@@433 $generated@@645 $generated@@646))) (and (and ($generated@@148 ($generated@@329 $generated@@644) ($generated@@262 $generated@@645)) ($generated@@148 ($generated@@374 $generated@@644) ($generated@@262 $generated@@646))) ($generated@@148 ($generated@@407 $generated@@644) ($generated@@262 ($generated@@151 $generated@@645 $generated@@646)))))
 :pattern ( ($generated@@148 $generated@@644 ($generated@@433 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@2) ($generated@@148 $generated@@647 $generated@@46))
 :pattern ( ($generated@@148 $generated@@647 $generated@@46))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@3) ($generated@@148 $generated@@648 $generated@@47))
 :pattern ( ($generated@@148 $generated@@648 $generated@@47))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@4) ($generated@@148 $generated@@649 $generated@@44))
 :pattern ( ($generated@@148 $generated@@649 $generated@@44))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@468) ($generated@@148 $generated@@650 $generated@@45))
 :pattern ( ($generated@@148 $generated@@650 $generated@@45))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@160) ($generated@@148 $generated@@651 $generated@@48))
 :pattern ( ($generated@@148 $generated@@651 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@652) $generated@@139) (= (type $generated@@653) $generated@@139)) (= (type $generated@@654) $generated@@139)) (= (type $generated@@655) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@656) $generated@@139)) (= (type $generated@@657) $generated@@139)) (= (type $generated@@658) $generated@@139)) (= (type $generated@@659) $generated@@139)) (= (type $generated@@660) $generated@@139)) (= (type $generated@@661) $generated@@139)) (= (type $generated@@662) $generated@@139)) (= (type $generated@@663) ($generated@@175 $generated@@81 $generated@@4))) (= (type $generated@@664) $generated@@81)) (= (type $generated@@665) ($generated@@175 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@667 true))
(let (($generated@@668  (=> (and (= $generated@@652 ($generated@@296 $generated@@653)) ($generated@@148 $generated@@653 $generated@@249)) (=> (and (and (and (and ($generated@@148 $generated@@654 $generated@@249) ($generated@@78 $generated@@654 $generated@@249 $generated@@655)) (= $generated@@656 $generated@@653)) (and ($generated@@148 $generated@@656 $generated@@249) (= $generated@@654 $generated@@656))) (and (and (and ($generated@@148 $generated@@657 $generated@@249) ($generated@@78 $generated@@657 $generated@@249 $generated@@655)) (and (= $generated@@658 $generated@@659) ($generated@@148 $generated@@658 $generated@@249))) (and (and (= $generated@@657 $generated@@658) ($generated@@78 $generated@@657 $generated@@249 $generated@@655)) (and ($generated@@78 $generated@@654 $generated@@249 $generated@@655) (= (ControlFlow 0 7) (- 0 6)))))) (or (< ($generated@@560 $generated@@657) ($generated@@560 $generated@@660)) (and (= ($generated@@560 $generated@@657) ($generated@@560 $generated@@660)) (< ($generated@@560 $generated@@654) ($generated@@560 $generated@@661))))))))
(let (($generated@@669  (=> (not (= $generated@@652 $generated@@166)) (and (=> (= (ControlFlow 0 9) 7) $generated@@668) (=> (= (ControlFlow 0 9) 8) $generated@@667)))))
(let (($generated@@670 true))
(let (($generated@@671  (=> (and (= $generated@@662 ($generated@@296 $generated@@659)) ($generated@@148 $generated@@659 $generated@@249)) (and (=> (= (ControlFlow 0 10) 5) $generated@@670) (=> (= (ControlFlow 0 10) 9) $generated@@669)))))
(let (($generated@@672 true))
(let (($generated@@673  (=> (not (= $generated@@662 $generated@@166)) (and (=> (= (ControlFlow 0 11) 10) $generated@@671) (=> (= (ControlFlow 0 11) 4) $generated@@672)))))
(let (($generated@@674 true))
(let (($generated@@675  (=> (= ($generated@@241 ($generated@@300 $generated@@660) ($generated@@300 $generated@@661)) ($generated@@241 ($generated@@300 $generated@@662) ($generated@@300 $generated@@652))) (=> (and ($generated@@148 $generated@@662 $generated@@249) ($generated@@148 $generated@@652 $generated@@249)) (and (=> (= (ControlFlow 0 12) 3) $generated@@674) (=> (= (ControlFlow 0 12) 11) $generated@@673))))))
(let (($generated@@676 true))
(let (($generated@@677  (=> (= $generated@@663 ($generated@@229 $generated@@664 $generated@@655 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 12) $generated@@675) (=> (= (ControlFlow 0 13) 2) $generated@@676)))))
(let (($generated@@678 true))
(let (($generated@@679  (=> (= $generated@@665 ($generated@@174 $generated@@664 $generated@@655 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 1) $generated@@678) (=> (= (ControlFlow 0 14) 13) $generated@@677)))))
(let (($generated@@680  (=> (and ($generated@@250 $generated@@655) ($generated@@666 $generated@@655)) (=> (and (and ($generated@@148 $generated@@660 $generated@@249) ($generated@@148 $generated@@661 $generated@@249)) (and (= 1 $generated@@550) (= (ControlFlow 0 15) 14))) $generated@@679))))
$generated@@680)))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) Int)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U) Int)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@283 (Int) T@U)
(declare-fun $generated@@287 (Int) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@341 (T@T T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@374 (T@U) Bool)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@428 (Int Int) Int)
(declare-fun $generated@@432 (T@T) T@U)
(declare-fun $generated@@456 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@499 (T@U Int) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@614 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (= ($generated@@1 $generated@@138) 14))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) $generated@@138) (= (type $generated@@141) $generated@@138)) (and ($generated@@137 $generated@@140) ($generated@@137 $generated@@141))) (= ($generated@@136 $generated@@140 $generated@@141) (= ($generated@@139 $generated@@140) ($generated@@139 $generated@@141))))
 :pattern ( ($generated@@136 $generated@@140 $generated@@141) ($generated@@137 $generated@@140))
 :pattern ( ($generated@@136 $generated@@140 $generated@@141) ($generated@@137 $generated@@141))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@138) (= (type $generated@@145) $generated@@138)) (and ($generated@@142 $generated@@144) ($generated@@142 $generated@@145))) (= ($generated@@136 $generated@@144 $generated@@145) (= ($generated@@143 $generated@@144) ($generated@@143 $generated@@145))))
 :pattern ( ($generated@@136 $generated@@144 $generated@@145) ($generated@@142 $generated@@144))
 :pattern ( ($generated@@136 $generated@@144 $generated@@145) ($generated@@142 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@79 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@79 0)))
)))
(assert (= (type $generated@@151) $generated@@68))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@138) (or ($generated@@150 $generated@@152) (and (not (= 1 $generated@@148)) ($generated@@146 $generated@@152 $generated@@151)))) true)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@138) (or ($generated@@154 $generated@@155) (and (not (= 1 $generated@@148)) ($generated@@146 $generated@@155 $generated@@151)))) true)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@158 $generated@@159)) $generated@@68)
 :pattern ( ($generated@@157 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@68) (= (type $generated@@161) $generated@@68)) (= (type $generated@@162) $generated@@138)) ($generated@@146 $generated@@162 ($generated@@157 $generated@@160 $generated@@161))) ($generated@@156 $generated@@162))
 :pattern ( ($generated@@156 $generated@@162) ($generated@@146 $generated@@162 ($generated@@157 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@138) (= (type $generated@@170) $generated@@138)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@68)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@80 $generated@@166 $generated@@2)) (= (type $generated@@175) $generated@@68)) ($generated@@146 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@146 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@81 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@71 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@81) (= (type $generated@@226) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@227) ($generated@@70 $generated@@4))) (= (type $generated@@229) $generated@@81)) (= (type $generated@@230) ($generated@@70 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@138)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@68) (= (type $generated@@237) $generated@@68)) (= (type $generated@@238) $generated@@166)) (= (type $generated@@239) $generated@@166)) (= ($generated@@146 ($generated@@232 $generated@@238 $generated@@239) ($generated@@157 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@146 ($generated@@232 $generated@@238 $generated@@239) ($generated@@157 $generated@@236 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@138) (= (type $generated@@241) $generated@@138)) (= ($generated@@163 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@163 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@138) (= (type $generated@@243) $generated@@138)) (= ($generated@@136 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@136 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@80 $generated@@166 $generated@@4)) (= (type $generated@@247) $generated@@68)) (= ($generated@@146 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@166) ($generated@@0 ($generated@@85 $generated@@246 $generated@@248))) ($generated@@233 $generated@@248 $generated@@247))
 :pattern ( ($generated@@85 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@146 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@68)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@166 $generated@@4)) (= (type $generated@@252) $generated@@68)) (= ($generated@@146 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@166) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@233 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@146 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@254 $generated@@255) $generated@@255)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@256 $generated@@259) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@262) $generated@@68) (= (type $generated@@263) $generated@@68)) (= (type $generated@@264) $generated@@166)) (= (type $generated@@265) $generated@@166)) (= (type $generated@@266) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@260 $generated@@266)) (= ($generated@@78 ($generated@@232 $generated@@264 $generated@@265) ($generated@@157 $generated@@262 $generated@@263) $generated@@266)  (and ($generated@@261 $generated@@264 $generated@@262 $generated@@266) ($generated@@261 $generated@@265 $generated@@263 $generated@@266))))
 :pattern ( ($generated@@78 ($generated@@232 $generated@@264 $generated@@265) ($generated@@157 $generated@@262 $generated@@263) $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@72)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (= (type $generated@@269) $generated@@138) (= ($generated@@156 $generated@@269) (= ($generated@@267 $generated@@269) $generated@@61)))
 :pattern ( ($generated@@156 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@138) (= ($generated@@137 $generated@@270) (= ($generated@@267 $generated@@270) $generated@@63)))
 :pattern ( ($generated@@137 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@138) (= ($generated@@142 $generated@@271) (= ($generated@@267 $generated@@271) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@138) ($generated@@156 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@166) (= (type $generated@@274) $generated@@166)) (= $generated@@272 ($generated@@232 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@156 $generated@@272))
)))
(assert  (and (and (forall (($generated@@279 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@279)) 17)) (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
))) (forall (($generated@@281 T@T) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@277 $generated@@281))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@282)) 0)
 :pattern ( ($generated@@275 $generated@@282))
)))
(assert (forall (($generated@@284 Int) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@138)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@138) ($generated@@137 $generated@@285)) (exists (($generated@@286 Int) ) (= $generated@@285 ($generated@@283 $generated@@286))))
 :pattern ( ($generated@@137 $generated@@285))
)))
(assert (forall (($generated@@288 Int) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@138)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@138) ($generated@@142 $generated@@289)) (exists (($generated@@290 Int) ) (= $generated@@289 ($generated@@287 $generated@@290))))
 :pattern ( ($generated@@142 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@166)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@68) (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@261 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@78 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@261 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@80 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@83 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@80 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@85 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 18)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@80 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@85 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@85 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 19)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@80 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@85 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@85 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@83 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@80 $generated@@339 $generated@@2)) (= ($generated@@172 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (and (<= 0 ($generated ($generated@@85 $generated@@338 $generated@@340))) (<= ($generated ($generated@@85 $generated@@338 $generated@@340)) ($generated@@296 $generated@@338))))
 :pattern ( ($generated@@85 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@172 $generated@@338))
)))
(assert (forall (($generated@@342 T@T) ($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@341 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@233 $generated@@344 $generated@@151)) (and (= ($generated@@291 ($generated@@341 $generated@@138 $generated@@344)) $generated@@344) ($generated@@146 ($generated@@341 $generated@@138 $generated@@344) $generated@@151)))
 :pattern ( ($generated@@233 $generated@@344 $generated@@151))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@306 (type $generated@@345))))
(let (($generated@@347 ($generated@@305 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@304 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@303 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@85 ($generated@@302 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@302 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@306 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@80 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@306 (type $generated@@352))))
(let (($generated@@354 ($generated@@305 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@304 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@303 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@324 (type $generated@@356))))
(let (($generated@@358 ($generated@@323 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@322 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@321 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@320 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@324 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@80 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@324 (type $generated@@363))))
(let (($generated@@365 ($generated@@323 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@322 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@321 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@80 $generated@@166 $generated@@2)) (= (type $generated@@368) $generated@@68)) (= ($generated@@146 $generated@@367 ($generated@@171 $generated@@368)) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@166) (< 0 ($generated ($generated@@85 $generated@@367 $generated@@369)))) ($generated@@233 $generated@@369 $generated@@368))
 :pattern ( ($generated@@85 $generated@@367 $generated@@369))
))))
 :pattern ( ($generated@@146 $generated@@367 ($generated@@171 $generated@@368)))
)))
(assert (forall (($generated@@370 Int) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@260 $generated@@371)) (= ($generated@@78 ($generated@@283 $generated@@370) $generated@@151 $generated@@371) ($generated@@78 ($generated@@8 $generated@@370) $generated@@46 $generated@@371)))
 :pattern ( ($generated@@78 ($generated@@283 $generated@@370) $generated@@151 $generated@@371))
)))
(assert (forall (($generated@@372 Int) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@260 $generated@@373)) (= ($generated@@78 ($generated@@287 $generated@@372) $generated@@151 $generated@@373) ($generated@@78 ($generated@@8 $generated@@372) $generated@@46 $generated@@373)))
 :pattern ( ($generated@@78 ($generated@@287 $generated@@372) $generated@@151 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@138) ($generated@@374 $generated@@375)) (or ($generated@@137 $generated@@375) ($generated@@142 $generated@@375)))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@80 $generated@@166 $generated@@4)) (= (type $generated@@377) $generated@@68)) (= (type $generated@@378) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@376 ($generated@@244 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@166) ($generated@@0 ($generated@@85 $generated@@376 $generated@@379))) ($generated@@261 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@85 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@78 $generated@@376 ($generated@@244 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@80 $generated@@166 $generated@@4)) (= (type $generated@@381) $generated@@68)) (= (type $generated@@382) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@380 ($generated@@249 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@166) ($generated@@0 ($generated@@85 $generated@@380 $generated@@383))) ($generated@@261 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@85 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@78 $generated@@380 ($generated@@249 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@85 ($generated@@297 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@85 ($generated@@297 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@80 $generated@@166 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@306 (type $generated@@389))))
(let (($generated@@391 ($generated@@305 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@80 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@304 $generated@@166 $generated@@166)) (= (type $generated@@393) $generated@@166)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@85 ($generated@@302 $generated@@392) ($generated@@164 ($generated@@341 $generated@@138 $generated@@393)))) (= ($generated@@85 ($generated@@387 $generated@@392) ($generated@@164 ($generated@@341 $generated@@138 $generated@@393))) ($generated@@165 ($generated@@341 $generated@@138 $generated@@393))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@80 $generated@@166 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@324 (type $generated@@397))))
(let (($generated@@399 ($generated@@323 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@80 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@401) $generated@@166)) (= ($generated@@0 ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@85 ($generated@@320 $generated@@400) ($generated@@164 ($generated@@341 $generated@@138 $generated@@401)))) (= ($generated@@85 ($generated@@395 $generated@@400) ($generated@@164 ($generated@@341 $generated@@138 $generated@@401))) ($generated@@165 ($generated@@341 $generated@@138 $generated@@401))))))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@305 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@304 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@85 ($generated@@349 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@85 ($generated@@302 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@85 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@85 ($generated@@302 $generated@@402) $generated@@406))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@85 ($generated@@349 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@323 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@322 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@85 ($generated@@360 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@85 ($generated@@320 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@85 ($generated@@360 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@68)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@304 $generated@@166 $generated@@166)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@166) ($generated@@0 ($generated@@85 ($generated@@302 $generated@@415) $generated@@419))) (and ($generated@@261 ($generated@@85 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@261 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@302 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@68)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@166) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@423) $generated@@427))) (and ($generated@@261 ($generated@@85 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@261 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 Int) ($generated@@430 Int) ) (! (= ($generated@@428 $generated@@429 $generated@@430) (div $generated@@429 $generated@@430))
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@138) ($generated@@146 $generated@@431 $generated@@151)) (or ($generated@@137 $generated@@431) ($generated@@142 $generated@@431)))
 :pattern ( ($generated@@142 $generated@@431) ($generated@@146 $generated@@431 $generated@@151))
 :pattern ( ($generated@@137 $generated@@431) ($generated@@146 $generated@@431 $generated@@151))
)))
(assert (forall (($generated@@433 T@T) ) (! (= (type ($generated@@432 $generated@@433)) ($generated@@80 $generated@@433 $generated@@4))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@324 (type $generated@@434))))
(let (($generated@@436 ($generated@@323 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@322 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@321 $generated@@436 $generated@@435)) (= ($generated@@320 $generated@@434) ($generated@@432 $generated@@436))))))
 :pattern ( ($generated@@320 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@324 (type $generated@@437))))
(let (($generated@@439 ($generated@@323 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@322 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@321 $generated@@439 $generated@@438)) (= ($generated@@360 $generated@@437) ($generated@@432 $generated@@438))))))
 :pattern ( ($generated@@360 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@324 (type $generated@@440))))
(let (($generated@@442 ($generated@@323 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@322 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@321 $generated@@442 $generated@@441)) (= ($generated@@394 $generated@@440) ($generated@@432 $generated@@166))))))
 :pattern ( ($generated@@394 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@306 (type $generated@@443))))
(let (($generated@@445 ($generated@@305 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@304 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@303 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@166) (= (type $generated@@447) $generated@@166)) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@443) ($generated@@291 ($generated@@232 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@386 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@324 (type $generated@@448))))
(let (($generated@@450 ($generated@@323 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@322 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@321 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@166) (= (type $generated@@452) $generated@@166)) ($generated@@0 ($generated@@85 ($generated@@394 $generated@@448) ($generated@@291 ($generated@@232 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@394 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@233 $generated@@453 $generated@@46)) (and (= ($generated@@291 ($generated@@341 $generated@@2 $generated@@453)) $generated@@453) ($generated@@146 ($generated@@341 $generated@@2 $generated@@453) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@453 $generated@@46))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@233 $generated@@454 $generated@@47)) (and (= ($generated@@291 ($generated@@341 $generated@@3 $generated@@454)) $generated@@454) ($generated@@146 ($generated@@341 $generated@@3 $generated@@454) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@454 $generated@@47))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@166) ($generated@@233 $generated@@455 $generated@@44)) (and (= ($generated@@291 ($generated@@341 $generated@@4 $generated@@455)) $generated@@455) ($generated@@146 ($generated@@341 $generated@@4 $generated@@455) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@455 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@456) 20))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@166) ($generated@@233 $generated@@457 $generated@@45)) (and (= ($generated@@291 ($generated@@341 $generated@@456 $generated@@457)) $generated@@457) ($generated@@146 ($generated@@341 $generated@@456 $generated@@457) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@457 $generated@@45))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@68) (= ($generated@@233 ($generated@@291 $generated@@458) $generated@@459) ($generated@@146 $generated@@458 $generated@@459)))
 :pattern ( ($generated@@233 ($generated@@291 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@83 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@80 $generated@@461 $generated@@2)) (<= 0 ($generated@@296 $generated@@460))))
 :pattern ( ($generated@@296 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@278 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@277 $generated@@463)) (<= 0 ($generated@@276 $generated@@462))))
 :pattern ( ($generated@@276 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@68) (= (type $generated@@467) $generated@@68)) (= ($generated@@464 ($generated@@412 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@412 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@468 ($generated@@412 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@412 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@76 ($generated@@412 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@420 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@420 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@68)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@478 ($generated@@420 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@420 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@76 ($generated@@420 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@166) (= (type $generated@@485) $generated@@166)) (= ($generated@@267 ($generated@@232 $generated@@484 $generated@@485)) $generated@@61))
 :pattern ( ($generated@@232 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@157 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@157 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@157 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@157 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@166) (= (type $generated@@495) $generated@@166)) (= ($generated@@164 ($generated@@232 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@232 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@166) (= (type $generated@@497) $generated@@166)) (= ($generated@@165 ($generated@@232 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@232 $generated@@496 $generated@@497))
)))
(assert  (and (forall (($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@498 $generated@@500))
)) (forall (($generated@@501 T@U) ($generated@@502 Int) ) (! (let (($generated@@503 ($generated@@278 (type $generated@@501))))
(= (type ($generated@@499 $generated@@501 $generated@@502)) $generated@@503))
 :pattern ( ($generated@@499 $generated@@501 $generated@@502))
))))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@277 $generated@@166)) (= (type $generated@@505) $generated@@68)) (= (type $generated@@506) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@504 ($generated@@498 $generated@@505) $generated@@506) (forall (($generated@@507 Int) ) (!  (=> (and (<= 0 $generated@@507) (< $generated@@507 ($generated@@276 $generated@@504))) ($generated@@261 ($generated@@499 $generated@@504 $generated@@507) $generated@@505 $generated@@506))
 :pattern ( ($generated@@499 $generated@@504 $generated@@507))
))))
 :pattern ( ($generated@@78 $generated@@504 ($generated@@498 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@509 Int) ) (! (= ($generated@@508 ($generated@@79 $generated@@509)) $generated@@509)
 :pattern ( ($generated@@79 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@68) (= ($generated@@510 ($generated@@244 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@244 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@76 ($generated@@244 $generated@@513)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@68) (= ($generated@@514 ($generated@@249 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@249 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@76 ($generated@@249 $generated@@517)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@68) (= ($generated@@518 ($generated@@171 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@171 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@76 ($generated@@171 $generated@@521)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@68) (= ($generated@@522 ($generated@@498 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@498 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@76 ($generated@@498 $generated@@525)) $generated@@57))
 :pattern ( ($generated@@498 $generated@@525))
)))
(assert (forall (($generated@@526 Int) ) (! (= ($generated@@267 ($generated@@283 $generated@@526)) $generated@@63)
 :pattern ( ($generated@@283 $generated@@526))
)))
(assert (forall (($generated@@527 Int) ) (! (= ($generated@@139 ($generated@@283 $generated@@527)) $generated@@527)
 :pattern ( ($generated@@283 $generated@@527))
)))
(assert (forall (($generated@@528 Int) ) (! (= ($generated@@267 ($generated@@287 $generated@@528)) $generated@@65)
 :pattern ( ($generated@@287 $generated@@528))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@143 ($generated@@287 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@287 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(= ($generated@@341 $generated@@531 ($generated@@291 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@291 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@304 $generated@@166 $generated@@166)) (= (type $generated@@533) $generated@@68)) (= (type $generated@@534) $generated@@68)) (= ($generated@@146 $generated@@532 ($generated@@412 $generated@@533 $generated@@534)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@166) ($generated@@0 ($generated@@85 ($generated@@302 $generated@@532) $generated@@535))) (and ($generated@@233 ($generated@@85 ($generated@@387 $generated@@532) $generated@@535) $generated@@534) ($generated@@233 $generated@@535 $generated@@533)))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@532) $generated@@535))
 :pattern ( ($generated@@85 ($generated@@302 $generated@@532) $generated@@535))
))))
 :pattern ( ($generated@@146 $generated@@532 ($generated@@412 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@537) $generated@@68)) (= (type $generated@@538) $generated@@68)) (= ($generated@@146 $generated@@536 ($generated@@420 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@536) $generated@@539))) (and ($generated@@233 ($generated@@85 ($generated@@395 $generated@@536) $generated@@539) $generated@@538) ($generated@@233 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@536) $generated@@539))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@146 $generated@@536 ($generated@@420 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@166) (= (type $generated@@543) $generated@@166)) (< ($generated@@540 $generated@@542) ($generated@@541 ($generated@@232 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@232 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@166) (= (type $generated@@545) $generated@@166)) (< ($generated@@540 $generated@@545) ($generated@@541 ($generated@@232 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@232 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@146 ($generated@@283 $generated@@546) $generated@@151) ($generated@@146 ($generated@@8 $generated@@546) $generated@@46))
 :pattern ( ($generated@@146 ($generated@@283 $generated@@546) $generated@@151))
)))
(assert (forall (($generated@@547 Int) ) (! (= ($generated@@146 ($generated@@287 $generated@@547) $generated@@151) ($generated@@146 ($generated@@8 $generated@@547) $generated@@46))
 :pattern ( ($generated@@146 ($generated@@287 $generated@@547) $generated@@151))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@166) (= (type $generated@@549) $generated@@68)) (= (type $generated@@550) $generated@@68)) ($generated@@233 $generated@@548 ($generated@@412 $generated@@549 $generated@@550))) (and (= ($generated@@291 ($generated@@341 ($generated@@304 $generated@@166 $generated@@166) $generated@@548)) $generated@@548) ($generated@@146 ($generated@@341 ($generated@@304 $generated@@166 $generated@@166) $generated@@548) ($generated@@412 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@233 $generated@@548 ($generated@@412 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@166) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) $generated@@68)) ($generated@@233 $generated@@551 ($generated@@420 $generated@@552 $generated@@553))) (and (= ($generated@@291 ($generated@@341 ($generated@@322 $generated@@166 $generated@@166) $generated@@551)) $generated@@551) ($generated@@146 ($generated@@341 ($generated@@322 $generated@@166 $generated@@166) $generated@@551) ($generated@@420 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@233 $generated@@551 ($generated@@420 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@68) (= (type $generated@@555) $generated@@68)) (= (type $generated@@556) $generated@@166)) ($generated@@233 $generated@@556 ($generated@@157 $generated@@554 $generated@@555))) (and (= ($generated@@291 ($generated@@341 $generated@@138 $generated@@556)) $generated@@556) ($generated@@146 ($generated@@341 $generated@@138 $generated@@556) ($generated@@157 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@233 $generated@@556 ($generated@@157 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (not ($generated@@0 ($generated@@85 ($generated@@432 $generated@@558) $generated@@557))))
 :pattern ( (let (($generated@@558 (type $generated@@557)))
($generated@@85 ($generated@@432 $generated@@558) $generated@@557)))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@73)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@68) (= (type $generated@@562) $generated@@68)) (and (= ($generated@@76 ($generated@@157 $generated@@561 $generated@@562)) $generated@@62) (= ($generated@@559 ($generated@@157 $generated@@561 $generated@@562)) $generated@@66)))
 :pattern ( ($generated@@157 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@138) (= (type $generated@@564) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@564) (and ($generated@@137 $generated@@563) ($generated@@78 $generated@@563 $generated@@151 $generated@@564)))) ($generated@@78 ($generated@@8 ($generated@@139 $generated@@563)) $generated@@46 $generated@@564))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@139 $generated@@563)) $generated@@46 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@138) (= (type $generated@@566) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@566) (and ($generated@@142 $generated@@565) ($generated@@78 $generated@@565 $generated@@151 $generated@@566)))) ($generated@@78 ($generated@@8 ($generated@@143 $generated@@565)) $generated@@46 $generated@@566))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@143 $generated@@565)) $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@138) (= ($generated@@540 ($generated@@291 $generated@@567)) ($generated@@541 $generated@@567)))
 :pattern ( ($generated@@540 ($generated@@291 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@166) ($generated@@233 $generated@@568 ($generated@@79 0))) (and (= ($generated@@291 ($generated@@341 $generated@@2 $generated@@568)) $generated@@568) ($generated@@146 ($generated@@341 ($generated@@80 $generated@@166 $generated@@4) $generated@@568) ($generated@@79 0))))
 :pattern ( ($generated@@233 $generated@@568 ($generated@@79 0)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@166) (= (type $generated@@570) $generated@@68)) ($generated@@233 $generated@@569 ($generated@@244 $generated@@570))) (and (= ($generated@@291 ($generated@@341 ($generated@@80 $generated@@166 $generated@@4) $generated@@569)) $generated@@569) ($generated@@146 ($generated@@341 ($generated@@80 $generated@@166 $generated@@4) $generated@@569) ($generated@@244 $generated@@570))))
 :pattern ( ($generated@@233 $generated@@569 ($generated@@244 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@166) (= (type $generated@@572) $generated@@68)) ($generated@@233 $generated@@571 ($generated@@249 $generated@@572))) (and (= ($generated@@291 ($generated@@341 ($generated@@80 $generated@@166 $generated@@4) $generated@@571)) $generated@@571) ($generated@@146 ($generated@@341 ($generated@@80 $generated@@166 $generated@@4) $generated@@571) ($generated@@249 $generated@@572))))
 :pattern ( ($generated@@233 $generated@@571 ($generated@@249 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@166) (= (type $generated@@574) $generated@@68)) ($generated@@233 $generated@@573 ($generated@@171 $generated@@574))) (and (= ($generated@@291 ($generated@@341 ($generated@@80 $generated@@166 $generated@@2) $generated@@573)) $generated@@573) ($generated@@146 ($generated@@341 ($generated@@80 $generated@@166 $generated@@2) $generated@@573) ($generated@@171 $generated@@574))))
 :pattern ( ($generated@@233 $generated@@573 ($generated@@171 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@166) (= (type $generated@@576) $generated@@68)) ($generated@@233 $generated@@575 ($generated@@498 $generated@@576))) (and (= ($generated@@291 ($generated@@341 ($generated@@277 $generated@@166) $generated@@575)) $generated@@575) ($generated@@146 ($generated@@341 ($generated@@277 $generated@@166) $generated@@575) ($generated@@498 $generated@@576))))
 :pattern ( ($generated@@233 $generated@@575 ($generated@@498 $generated@@576)))
)))
(assert (= ($generated@@76 $generated@@151) $generated@@64))
(assert (= ($generated@@559 $generated@@151) $generated@@67))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@80 $generated@@166 $generated@@2)) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@577 ($generated@@171 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@166) (< 0 ($generated ($generated@@85 $generated@@577 $generated@@580)))) ($generated@@261 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@85 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@78 $generated@@577 ($generated@@171 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@138) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@583) (and ($generated@@156 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@68) ($generated@@78 $generated@@581 ($generated@@157 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@78 $generated@@581 ($generated@@157 $generated@@582 $generated@@584) $generated@@583))
))))) ($generated@@261 ($generated@@164 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@261 ($generated@@164 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@138) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@587) (and ($generated@@156 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@68) ($generated@@78 $generated@@585 ($generated@@157 $generated@@588 $generated@@586) $generated@@587))
 :pattern ( ($generated@@78 $generated@@585 ($generated@@157 $generated@@588 $generated@@586) $generated@@587))
))))) ($generated@@261 ($generated@@165 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@261 ($generated@@165 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@166) (= (type $generated@@590) $generated@@166)) (= ($generated@@232 ($generated@@256 $generated@@589) ($generated@@256 $generated@@590)) ($generated@@256 ($generated@@232 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@232 ($generated@@256 $generated@@589) ($generated@@256 $generated@@590)))
)))
(assert (forall (($generated@@591 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@254 $generated@@591))) ($generated@@256 ($generated@@291 ($generated@@8 $generated@@591))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@254 $generated@@591))))
)))
(assert (forall (($generated@@592 Int) ) (! (= ($generated@@283 ($generated@@254 $generated@@592)) ($generated@@256 ($generated@@283 $generated@@592)))
 :pattern ( ($generated@@283 ($generated@@254 $generated@@592)))
)))
(assert (forall (($generated@@593 Int) ) (! (= ($generated@@287 ($generated@@254 $generated@@593)) ($generated@@256 ($generated@@287 $generated@@593)))
 :pattern ( ($generated@@287 ($generated@@254 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (! (= ($generated@@291 ($generated@@256 $generated@@594)) ($generated@@256 ($generated@@291 $generated@@594)))
 :pattern ( ($generated@@291 ($generated@@256 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@278 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@277 $generated@@596)) (= ($generated@@276 $generated@@595) 0)) (= $generated@@595 ($generated@@275 $generated@@596))))
 :pattern ( ($generated@@276 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@598)))
 (=> (and (and (= (type $generated@@597) ($generated@@80 $generated@@600 $generated@@2)) (= (type $generated@@599) $generated@@2)) (<= 0 ($generated $generated@@599))) (= ($generated@@296 ($generated@@86 $generated@@597 $generated@@598 $generated@@599)) (+ (- ($generated@@296 $generated@@597) ($generated ($generated@@85 $generated@@597 $generated@@598))) ($generated $generated@@599)))))
 :pattern ( ($generated@@296 ($generated@@86 $generated@@597 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@602) $generated@@2)) ($generated@@78 $generated@@602 $generated@@46 $generated@@601))
 :pattern ( ($generated@@78 $generated@@602 $generated@@46 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@604) $generated@@3)) ($generated@@78 $generated@@604 $generated@@47 $generated@@603))
 :pattern ( ($generated@@78 $generated@@604 $generated@@47 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@606) $generated@@4)) ($generated@@78 $generated@@606 $generated@@44 $generated@@605))
 :pattern ( ($generated@@78 $generated@@606 $generated@@44 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@608) $generated@@456)) ($generated@@78 $generated@@608 $generated@@45 $generated@@607))
 :pattern ( ($generated@@78 $generated@@608 $generated@@45 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@610) $generated@@166)) ($generated@@78 $generated@@610 $generated@@48 $generated@@609))
 :pattern ( ($generated@@78 $generated@@610 $generated@@48 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@277 $generated@@166)) (= (type $generated@@612) $generated@@68)) (= ($generated@@146 $generated@@611 ($generated@@498 $generated@@612)) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@276 $generated@@611))) ($generated@@233 ($generated@@499 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@499 $generated@@611 $generated@@613))
))))
 :pattern ( ($generated@@146 $generated@@611 ($generated@@498 $generated@@612)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 Int) ) (!  (=> (= (type $generated@@615) ($generated@@277 $generated@@166)) (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@276 $generated@@615))) (< ($generated@@541 ($generated@@341 $generated@@138 ($generated@@499 $generated@@615 $generated@@616))) ($generated@@614 $generated@@615))))
 :pattern ( ($generated@@541 ($generated@@341 $generated@@138 ($generated@@499 $generated@@615 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@304 $generated@@166 $generated@@166)) (= (type $generated@@618) $generated@@68)) (= (type $generated@@619) $generated@@68)) ($generated@@146 $generated@@617 ($generated@@412 $generated@@618 $generated@@619))) (and (and ($generated@@146 ($generated@@302 $generated@@617) ($generated@@244 $generated@@618)) ($generated@@146 ($generated@@349 $generated@@617) ($generated@@244 $generated@@619))) ($generated@@146 ($generated@@386 $generated@@617) ($generated@@244 ($generated@@157 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@146 $generated@@617 ($generated@@412 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@621) $generated@@68)) (= (type $generated@@622) $generated@@68)) ($generated@@146 $generated@@620 ($generated@@420 $generated@@621 $generated@@622))) (and (and ($generated@@146 ($generated@@320 $generated@@620) ($generated@@249 $generated@@621)) ($generated@@146 ($generated@@360 $generated@@620) ($generated@@249 $generated@@622))) ($generated@@146 ($generated@@394 $generated@@620) ($generated@@249 ($generated@@157 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@146 $generated@@620 ($generated@@420 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@2) ($generated@@146 $generated@@623 $generated@@46))
 :pattern ( ($generated@@146 $generated@@623 $generated@@46))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@3) ($generated@@146 $generated@@624 $generated@@47))
 :pattern ( ($generated@@146 $generated@@624 $generated@@47))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@4) ($generated@@146 $generated@@625 $generated@@44))
 :pattern ( ($generated@@146 $generated@@625 $generated@@44))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@456) ($generated@@146 $generated@@626 $generated@@45))
 :pattern ( ($generated@@146 $generated@@626 $generated@@45))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@166) ($generated@@146 $generated@@627 $generated@@48))
 :pattern ( ($generated@@146 $generated@@627 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () Int)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@631) $generated@@138) (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@635) ($generated@@178 $generated@@81 $generated@@4))) (= (type $generated@@636) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@638 true))
(let (($generated@@639  (=> (and (and (and (= $generated@@628 $generated@@629) ($generated@@146 ($generated@@8 $generated@@628) $generated@@46)) (and (= $generated@@630 $generated@@628) (not (= $generated@@630 0)))) (and (and ($generated@@78 $generated@@631 $generated@@151 $generated@@632) ($generated@@154 $generated@@631)) (and ($generated@@154 $generated@@631) (= (ControlFlow 0 6) (- 0 5))))) (= (let (($generated@@640 $generated@@629))
(= ($generated@@254 2) ($generated@@428 10 $generated@@640))) ($generated@@153 $generated@@631)))))
(let (($generated@@641  (=> (and ($generated@@78 $generated@@631 $generated@@151 $generated@@632) ($generated@@150 $generated@@631)) (=> (and (and ($generated@@150 $generated@@631) (= $generated@@633 $generated@@629)) (and ($generated@@146 ($generated@@8 $generated@@633) $generated@@46) (= $generated@@634 $generated@@633))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (not (= $generated@@634 0))) (=> (= (ControlFlow 0 3) (- 0 2)) (= ($generated@@149 $generated@@631) (let (($generated@@642 $generated@@629))
(= ($generated@@254 2) ($generated@@428 10 $generated@@642))))))))))
(let (($generated@@643 true))
(let (($generated@@644  (=> (= $generated@@635 ($generated@@177 $generated@@636 $generated@@632 $generated@@60 false)) (and (and (and (=> (= (ControlFlow 0 8) 1) $generated@@643) (=> (= (ControlFlow 0 8) 3) $generated@@641)) (=> (= (ControlFlow 0 8) 6) $generated@@639)) (=> (= (ControlFlow 0 8) 7) $generated@@638)))))
(let (($generated@@645  (=> (and ($generated@@260 $generated@@632) ($generated@@637 $generated@@632)) (=> (and (and (and (and ($generated@@146 $generated@@631 $generated@@151) ($generated@@78 $generated@@631 $generated@@151 $generated@@632)) ($generated@@374 $generated@@631)) (= 2 $generated@@148)) (and (and ($generated@@149 $generated@@631) ($generated@@153 $generated@@631)) (and (= $generated@@629 ($generated@@254 5)) (= (ControlFlow 0 9) 8)))) $generated@@644))))
$generated@@645)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@338 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@377 (T@U) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@540 () Int)
(declare-fun $generated@@541 (T@U T@U) Bool)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@628 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@136 $generated@@141 $generated@@142 $generated@@143)) $generated@@139)
 :pattern ( ($generated@@136 $generated@@141 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@137 $generated@@144)) $generated@@138)
 :pattern ( ($generated@@137 $generated@@144))
))) (= (type $generated@@140) $generated@@138)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@138) (= (type $generated@@146) $generated@@139)) (= (type $generated@@147) $generated@@139)) (= ($generated@@136 $generated@@145 $generated@@146 $generated@@147) ($generated@@136 $generated@@140 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@136 ($generated@@137 $generated@@145) $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@79 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@79 0)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@151 $generated@@152 $generated@@153)) $generated@@68)
 :pattern ( ($generated@@151 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@68) (= (type $generated@@155) $generated@@68)) (= (type $generated@@156) $generated@@139)) ($generated@@148 $generated@@156 ($generated@@151 $generated@@154 $generated@@155))) ($generated@@150 $generated@@156))
 :pattern ( ($generated@@150 $generated@@156) ($generated@@148 $generated@@156 ($generated@@151 $generated@@154 $generated@@155)))
)))
(assert  (and (and (= ($generated@@1 $generated@@160) 16) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@158 $generated@@161))
))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@160)
 :pattern ( ($generated@@159 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@139) (= (type $generated@@164) $generated@@139)) true) (= ($generated@@157 $generated@@163 $generated@@164)  (and (= ($generated@@158 $generated@@163) ($generated@@158 $generated@@164)) (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)))))
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
)))
(assert  (and (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@72)
 :pattern ( ($generated@@165 $generated@@167))
)) (= (type $generated@@166) $generated@@139)))
(assert (= ($generated@@165 $generated@@166) $generated@@63))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@68)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@80 $generated@@160 $generated@@2)) (= (type $generated@@172) $generated@@68)) ($generated@@148 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@148 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 17)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@81 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@71 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@81) (= (type $generated@@223) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@224) ($generated@@70 $generated@@4))) (= (type $generated@@226) $generated@@81)) (= (type $generated@@227) ($generated@@70 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@139)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@68) (= (type $generated@@234) $generated@@68)) (= (type $generated@@235) $generated@@160)) (= (type $generated@@236) $generated@@160)) (= ($generated@@148 ($generated@@229 $generated@@235 $generated@@236) ($generated@@151 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@148 ($generated@@229 $generated@@235 $generated@@236) ($generated@@151 $generated@@233 $generated@@234)))
)))
(assert (= (type $generated@@237) $generated@@68))
(assert ($generated@@148 $generated@@166 $generated@@237))
(assert (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@238 $generated@@239)) ($generated@@78 $generated@@166 $generated@@237 $generated@@239))
 :pattern ( ($generated@@78 $generated@@166 $generated@@237 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@139) (= (type $generated@@241) $generated@@139)) (= ($generated@@157 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@157 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@139) (= (type $generated@@244) $generated@@139)) (= ($generated@@242 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@68)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@80 $generated@@160 $generated@@4)) (= (type $generated@@248) $generated@@68)) (= ($generated@@148 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@160) ($generated@@0 ($generated@@85 $generated@@247 $generated@@249))) ($generated@@230 $generated@@249 $generated@@248))
 :pattern ( ($generated@@85 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@148 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@68)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@80 $generated@@160 $generated@@4)) (= (type $generated@@253) $generated@@68)) (= ($generated@@148 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@160) ($generated@@0 ($generated@@85 $generated@@252 $generated@@254))) ($generated@@230 $generated@@254 $generated@@253))
 :pattern ( ($generated@@85 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@148 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@139) (= (type $generated@@261) $generated@@139)) (and ($generated@@259 $generated@@260) ($generated@@259 $generated@@261))) (= ($generated@@242 $generated@@260 $generated@@261) true))
 :pattern ( ($generated@@242 $generated@@260 $generated@@261) ($generated@@259 $generated@@260))
 :pattern ( ($generated@@242 $generated@@260 $generated@@261) ($generated@@259 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@68) (= (type $generated@@264) $generated@@68)) (= (type $generated@@265) $generated@@160)) (= (type $generated@@266) $generated@@160)) (= (type $generated@@267) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@238 $generated@@267)) (= ($generated@@78 ($generated@@229 $generated@@265 $generated@@266) ($generated@@151 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@78 ($generated@@229 $generated@@265 $generated@@266) ($generated@@151 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@139) (= ($generated@@150 $generated@@268) (= ($generated@@165 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@150 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (= (type $generated@@269) $generated@@139) (= ($generated@@259 $generated@@269) (= ($generated@@165 $generated@@269) $generated@@63)))
 :pattern ( ($generated@@259 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@139) (= ($generated@@270 $generated@@271) (= ($generated@@165 $generated@@271) $generated@@65)))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@139) ($generated@@150 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@160) (= (type $generated@@274) $generated@@160)) (= $generated@@272 ($generated@@229 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@150 $generated@@272))
)))
(assert  (and (and (forall (($generated@@279 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@279)) 18)) (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
))) (forall (($generated@@281 T@T) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@277 $generated@@281))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@282)) 0)
 :pattern ( ($generated@@275 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@139) ($generated@@259 $generated@@283)) (= $generated@@283 $generated@@166))
 :pattern ( ($generated@@259 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@139)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@139) ($generated@@270 $generated@@286)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@139) (= $generated@@286 ($generated@@284 $generated@@287)))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@270 $generated@@286))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@160)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@68) (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@262 ($generated@@288 $generated@@290) $generated@@291 $generated@@292) ($generated@@78 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@262 ($generated@@288 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@80 $generated@@295 $generated@@2))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@83 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@80 $generated@@297 $generated@@2)) (and (= (= ($generated@@293 $generated@@296) 0) (= $generated@@296 ($generated@@294 $generated@@297))) (=> (not (= ($generated@@293 $generated@@296) 0)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) (< 0 ($generated ($generated@@85 $generated@@296 $generated@@298))))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@293 $generated@@296))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@80 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@85 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@85 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 20)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@80 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@85 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@85 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@83 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@80 $generated@@336 $generated@@2)) (= ($generated@@169 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (and (<= 0 ($generated ($generated@@85 $generated@@335 $generated@@337))) (<= ($generated ($generated@@85 $generated@@335 $generated@@337)) ($generated@@293 $generated@@335))))
 :pattern ( ($generated@@85 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@169 $generated@@335))
)))
(assert (forall (($generated@@339 T@T) ($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@338 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@160) ($generated@@230 $generated@@341 $generated@@237)) (and (= ($generated@@288 ($generated@@338 $generated@@139 $generated@@341)) $generated@@341) ($generated@@148 ($generated@@338 $generated@@139 $generated@@341) $generated@@237)))
 :pattern ( ($generated@@230 $generated@@341 $generated@@237))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@139) (= ($generated@@148 ($generated@@284 $generated@@342) $generated@@237) ($generated@@148 $generated@@342 $generated@@237)))
 :pattern ( ($generated@@148 ($generated@@284 $generated@@342) $generated@@237))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@139)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@345) $generated@@139) (= (type $generated@@346) $generated@@139)) (and ($generated@@270 $generated@@345) ($generated@@270 $generated@@346))) (= ($generated@@242 $generated@@345 $generated@@346) ($generated@@242 ($generated@@343 $generated@@345) ($generated@@343 $generated@@346))))
 :pattern ( ($generated@@242 $generated@@345 $generated@@346) ($generated@@270 $generated@@345))
 :pattern ( ($generated@@242 $generated@@345 $generated@@346) ($generated@@270 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@303 (type $generated@@347))))
(let (($generated@@349 ($generated@@302 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@301 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@300 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@299 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@303 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@80 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@303 (type $generated@@354))))
(let (($generated@@356 ($generated@@302 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@301 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@300 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@85 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@321 (type $generated@@358))))
(let (($generated@@360 ($generated@@320 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@319 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@318 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@85 ($generated@@317 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@317 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@321 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@80 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@321 (type $generated@@365))))
(let (($generated@@367 ($generated@@320 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@319 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@318 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@85 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (= (type ($generated@@369 $generated@@370)) $generated@@138)
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) $generated@@138) (= (type $generated@@372) $generated@@139)) (= (type $generated@@373) $generated@@139)) (= ($generated@@136 ($generated@@369 $generated@@371) $generated@@372 $generated@@373) ($generated@@136 $generated@@371 $generated@@372 $generated@@373)))
 :pattern ( ($generated@@136 ($generated@@369 $generated@@371) $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@80 $generated@@160 $generated@@2)) (= (type $generated@@375) $generated@@68)) (= ($generated@@148 $generated@@374 ($generated@@168 $generated@@375)) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@160) (< 0 ($generated ($generated@@85 $generated@@374 $generated@@376)))) ($generated@@230 $generated@@376 $generated@@375))
 :pattern ( ($generated@@85 $generated@@374 $generated@@376))
))))
 :pattern ( ($generated@@148 $generated@@374 ($generated@@168 $generated@@375)))
)))
(assert (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@139) ($generated@@377 $generated@@378)) (or ($generated@@259 $generated@@378) ($generated@@270 $generated@@378)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@80 $generated@@160 $generated@@4)) (= (type $generated@@380) $generated@@68)) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@379 ($generated@@245 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@160) ($generated@@0 ($generated@@85 $generated@@379 $generated@@382))) ($generated@@262 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@85 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@78 $generated@@379 ($generated@@245 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@80 $generated@@160 $generated@@4)) (= (type $generated@@384) $generated@@68)) (= (type $generated@@385) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@383 ($generated@@250 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@160) ($generated@@0 ($generated@@85 $generated@@383 $generated@@386))) ($generated@@262 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@85 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@78 $generated@@383 ($generated@@250 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@85 ($generated@@294 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@85 ($generated@@294 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@80 $generated@@160 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@303 (type $generated@@392))))
(let (($generated@@394 ($generated@@302 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@80 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@301 $generated@@160 $generated@@160)) (= (type $generated@@396) $generated@@160)) (= ($generated@@0 ($generated@@85 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@85 ($generated@@299 $generated@@395) ($generated@@158 ($generated@@338 $generated@@139 $generated@@396)))) (= ($generated@@85 ($generated@@390 $generated@@395) ($generated@@158 ($generated@@338 $generated@@139 $generated@@396))) ($generated@@159 ($generated@@338 $generated@@139 $generated@@396))))))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@160 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@321 (type $generated@@400))))
(let (($generated@@402 ($generated@@320 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@80 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@319 $generated@@160 $generated@@160)) (= (type $generated@@404) $generated@@160)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@85 ($generated@@317 $generated@@403) ($generated@@158 ($generated@@338 $generated@@139 $generated@@404)))) (= ($generated@@85 ($generated@@398 $generated@@403) ($generated@@158 ($generated@@338 $generated@@139 $generated@@404))) ($generated@@159 ($generated@@338 $generated@@139 $generated@@404))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@302 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@301 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@85 ($generated@@351 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@85 ($generated@@299 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@85 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@405) $generated@@409))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@85 ($generated@@351 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@320 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@319 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@85 ($generated@@362 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@85 ($generated@@317 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@85 ($generated@@362 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@68)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@301 $generated@@160 $generated@@160)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) $generated@@68)) (= (type $generated@@421) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@160) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@418) $generated@@422))) (and ($generated@@262 ($generated@@85 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@262 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@68)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@319 $generated@@160 $generated@@160)) (= (type $generated@@427) $generated@@68)) (= (type $generated@@428) $generated@@68)) (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@160) ($generated@@0 ($generated@@85 ($generated@@317 $generated@@426) $generated@@430))) (and ($generated@@262 ($generated@@85 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@262 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (= (type $generated@@431) $generated@@139) (= (type $generated@@432) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@238 $generated@@432)) (= ($generated@@78 ($generated@@284 $generated@@431) $generated@@237 $generated@@432) ($generated@@78 $generated@@431 $generated@@237 $generated@@432)))
 :pattern ( ($generated@@78 ($generated@@284 $generated@@431) $generated@@237 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@139) ($generated@@148 $generated@@433 $generated@@237)) (or ($generated@@259 $generated@@433) ($generated@@270 $generated@@433)))
 :pattern ( ($generated@@270 $generated@@433) ($generated@@148 $generated@@433 $generated@@237))
 :pattern ( ($generated@@259 $generated@@433) ($generated@@148 $generated@@433 $generated@@237))
)))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@80 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@321 (type $generated@@436))))
(let (($generated@@438 ($generated@@320 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@319 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@318 $generated@@438 $generated@@437)) (= ($generated@@317 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@317 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@321 (type $generated@@439))))
(let (($generated@@441 ($generated@@320 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@319 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@318 $generated@@441 $generated@@440)) (= ($generated@@362 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@362 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@321 (type $generated@@442))))
(let (($generated@@444 ($generated@@320 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@319 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@318 $generated@@444 $generated@@443)) (= ($generated@@397 $generated@@442) ($generated@@434 $generated@@160))))))
 :pattern ( ($generated@@397 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@303 (type $generated@@445))))
(let (($generated@@447 ($generated@@302 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@301 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@300 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@160) (= (type $generated@@449) $generated@@160)) ($generated@@0 ($generated@@85 ($generated@@389 $generated@@445) ($generated@@288 ($generated@@229 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@389 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@321 (type $generated@@450))))
(let (($generated@@452 ($generated@@320 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@319 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@318 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@160) (= (type $generated@@454) $generated@@160)) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@450) ($generated@@288 ($generated@@229 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@397 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@160) ($generated@@230 $generated@@455 $generated@@46)) (and (= ($generated@@288 ($generated@@338 $generated@@2 $generated@@455)) $generated@@455) ($generated@@148 ($generated@@338 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@160) ($generated@@230 $generated@@456 $generated@@47)) (and (= ($generated@@288 ($generated@@338 $generated@@3 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@338 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@160) ($generated@@230 $generated@@457 $generated@@44)) (and (= ($generated@@288 ($generated@@338 $generated@@4 $generated@@457)) $generated@@457) ($generated@@148 ($generated@@338 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 21))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@160) ($generated@@230 $generated@@459 $generated@@45)) (and (= ($generated@@288 ($generated@@338 $generated@@458 $generated@@459)) $generated@@459) ($generated@@148 ($generated@@338 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@68) (= ($generated@@230 ($generated@@288 $generated@@460) $generated@@461) ($generated@@148 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@230 ($generated@@288 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@83 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@80 $generated@@463 $generated@@2)) (<= 0 ($generated@@293 $generated@@462))))
 :pattern ( ($generated@@293 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@278 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@277 $generated@@465)) (<= 0 ($generated@@276 $generated@@464))))
 :pattern ( ($generated@@276 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@68)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@68)) (= ($generated@@466 ($generated@@415 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@415 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@470 ($generated@@415 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@415 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@68) (= (type $generated@@475) $generated@@68)) (= ($generated@@76 ($generated@@415 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@476 ($generated@@423 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@423 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@68)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@480 ($generated@@423 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@68) (= (type $generated@@485) $generated@@68)) (= ($generated@@76 ($generated@@423 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@160) (= (type $generated@@487) $generated@@160)) (= ($generated@@165 ($generated@@229 $generated@@486 $generated@@487)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@488 ($generated@@151 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@151 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@68)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@492 ($generated@@151 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@151 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@160) (= (type $generated@@497) $generated@@160)) (= ($generated@@158 ($generated@@229 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@229 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@160) (= (type $generated@@499) $generated@@160)) (= ($generated@@159 ($generated@@229 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@229 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@278 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@277 $generated@@160)) (= (type $generated@@507) $generated@@68)) (= (type $generated@@508) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@276 $generated@@506))) ($generated@@262 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@78 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@79 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@79 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@512 ($generated@@245 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@245 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@68) (= ($generated@@76 ($generated@@245 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@516 ($generated@@250 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@250 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@68) (= ($generated@@76 ($generated@@250 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@68)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@520 ($generated@@168 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@168 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@68) (= ($generated@@76 ($generated@@168 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@68)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@76 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@139) (= ($generated@@165 ($generated@@284 $generated@@528)) $generated@@65))
 :pattern ( ($generated@@284 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@139) (= ($generated@@343 ($generated@@284 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@284 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(= ($generated@@338 $generated@@531 ($generated@@288 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@288 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@301 $generated@@160 $generated@@160)) (= (type $generated@@533) $generated@@68)) (= (type $generated@@534) $generated@@68)) (= ($generated@@148 $generated@@532 ($generated@@415 $generated@@533 $generated@@534)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@160) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@532) $generated@@535))) (and ($generated@@230 ($generated@@85 ($generated@@390 $generated@@532) $generated@@535) $generated@@534) ($generated@@230 $generated@@535 $generated@@533)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@532) $generated@@535))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@532) $generated@@535))
))))
 :pattern ( ($generated@@148 $generated@@532 ($generated@@415 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@319 $generated@@160 $generated@@160)) (= (type $generated@@537) $generated@@68)) (= (type $generated@@538) $generated@@68)) (= ($generated@@148 $generated@@536 ($generated@@423 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@160) ($generated@@0 ($generated@@85 ($generated@@317 $generated@@536) $generated@@539))) (and ($generated@@230 ($generated@@85 ($generated@@398 $generated@@536) $generated@@539) $generated@@538) ($generated@@230 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@536) $generated@@539))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@148 $generated@@536 ($generated@@423 $generated@@537 $generated@@538)))
)))
(assert  (=> (<= 1 $generated@@540) (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@138) (= (type $generated@@543) $generated@@139)) (= (type $generated@@544) $generated@@139)) (or ($generated@@541 ($generated@@255 $generated@@543) ($generated@@255 $generated@@544)) (and (not (= 1 $generated@@540)) (and ($generated@@148 $generated@@543 $generated@@237) ($generated@@148 $generated@@544 $generated@@237))))) (and (and ($generated@@150 ($generated@@255 ($generated@@229 ($generated@@288 ($generated@@255 $generated@@543)) ($generated@@288 ($generated@@255 $generated@@544))))) (=> (not ($generated@@0 ($generated@@255 ($generated@@11 ($generated@@259 ($generated@@255 ($generated@@338 $generated@@139 ($generated@@158 ($generated@@255 ($generated@@229 ($generated@@288 ($generated@@255 $generated@@543)) ($generated@@288 ($generated@@255 $generated@@544)))))))))))) (and ($generated@@150 ($generated@@255 ($generated@@229 ($generated@@288 ($generated@@255 $generated@@543)) ($generated@@288 ($generated@@255 $generated@@544))))) (=> (not ($generated@@0 ($generated@@255 ($generated@@11 ($generated@@259 ($generated@@255 ($generated@@338 $generated@@139 ($generated@@159 ($generated@@255 ($generated@@229 ($generated@@288 ($generated@@255 $generated@@543)) ($generated@@288 ($generated@@255 $generated@@544)))))))))))) (and ($generated@@150 ($generated@@255 ($generated@@229 ($generated@@288 ($generated@@255 $generated@@543)) ($generated@@288 ($generated@@255 $generated@@544))))) (let (($generated@@545 ($generated@@255 ($generated@@343 ($generated@@255 ($generated@@338 $generated@@139 ($generated@@159 ($generated@@255 ($generated@@229 ($generated@@288 ($generated@@255 $generated@@543)) ($generated@@288 ($generated@@255 $generated@@544)))))))))))
 (and ($generated@@150 ($generated@@255 ($generated@@229 ($generated@@288 ($generated@@255 $generated@@543)) ($generated@@288 ($generated@@255 $generated@@544))))) (let (($generated@@546 ($generated@@255 ($generated@@343 ($generated@@255 ($generated@@338 $generated@@139 ($generated@@158 ($generated@@255 ($generated@@229 ($generated@@288 ($generated@@255 $generated@@543)) ($generated@@288 ($generated@@255 $generated@@544)))))))))))
($generated@@541 $generated@@546 $generated@@545))))))))) (= ($generated@@136 ($generated@@369 $generated@@542) ($generated@@255 $generated@@543) ($generated@@255 $generated@@544)) (ite ($generated@@259 ($generated@@255 ($generated@@338 $generated@@139 ($generated@@158 ($generated@@255 ($generated@@229 ($generated@@288 ($generated@@255 $generated@@543)) ($generated@@288 ($generated@@255 $generated@@544)))))))) $generated@@166 (ite ($generated@@259 ($generated@@255 ($generated@@338 $generated@@139 ($generated@@159 ($generated@@255 ($generated@@229 ($generated@@288 ($generated@@255 $generated@@543)) ($generated@@288 ($generated@@255 $generated@@544)))))))) $generated@@543 (let (($generated@@547 ($generated@@255 ($generated@@343 ($generated@@255 ($generated@@338 $generated@@139 ($generated@@159 ($generated@@255 ($generated@@229 ($generated@@288 ($generated@@255 $generated@@543)) ($generated@@288 ($generated@@255 $generated@@544)))))))))))
(let (($generated@@548 ($generated@@255 ($generated@@343 ($generated@@255 ($generated@@338 $generated@@139 ($generated@@158 ($generated@@255 ($generated@@229 ($generated@@288 ($generated@@255 $generated@@543)) ($generated@@288 ($generated@@255 $generated@@544)))))))))))
($generated@@255 ($generated@@136 ($generated@@369 $generated@@542) $generated@@548 $generated@@547)))))))))
 :weight 3
 :pattern ( ($generated@@136 ($generated@@369 $generated@@542) ($generated@@255 $generated@@543) ($generated@@255 $generated@@544)))
))))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@160) (= (type $generated@@552) $generated@@160)) (< ($generated@@549 $generated@@551) ($generated@@550 ($generated@@229 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@229 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@160) (= (type $generated@@554) $generated@@160)) (< ($generated@@549 $generated@@554) ($generated@@550 ($generated@@229 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@160) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) $generated@@68)) ($generated@@230 $generated@@555 ($generated@@415 $generated@@556 $generated@@557))) (and (= ($generated@@288 ($generated@@338 ($generated@@301 $generated@@160 $generated@@160) $generated@@555)) $generated@@555) ($generated@@148 ($generated@@338 ($generated@@301 $generated@@160 $generated@@160) $generated@@555) ($generated@@415 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@230 $generated@@555 ($generated@@415 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@160) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) $generated@@68)) ($generated@@230 $generated@@558 ($generated@@423 $generated@@559 $generated@@560))) (and (= ($generated@@288 ($generated@@338 ($generated@@319 $generated@@160 $generated@@160) $generated@@558)) $generated@@558) ($generated@@148 ($generated@@338 ($generated@@319 $generated@@160 $generated@@160) $generated@@558) ($generated@@423 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@230 $generated@@558 ($generated@@423 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@68) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) $generated@@160)) ($generated@@230 $generated@@563 ($generated@@151 $generated@@561 $generated@@562))) (and (= ($generated@@288 ($generated@@338 $generated@@139 $generated@@563)) $generated@@563) ($generated@@148 ($generated@@338 $generated@@139 $generated@@563) ($generated@@151 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@230 $generated@@563 ($generated@@151 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@139) (< ($generated@@550 $generated@@564) ($generated@@550 ($generated@@284 $generated@@564))))
 :pattern ( ($generated@@284 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (not ($generated@@0 ($generated@@85 ($generated@@434 $generated@@566) $generated@@565))))
 :pattern ( (let (($generated@@566 (type $generated@@565)))
($generated@@85 ($generated@@434 $generated@@566) $generated@@565)))
)))
(assert  (=> (<= 1 $generated@@540) (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@138) (= (type $generated@@568) $generated@@139)) (= (type $generated@@569) $generated@@139)) (or ($generated@@541 $generated@@568 $generated@@569) (and (not (= 1 $generated@@540)) (and ($generated@@148 $generated@@568 $generated@@237) ($generated@@148 $generated@@569 $generated@@237))))) ($generated@@148 ($generated@@136 $generated@@567 $generated@@568 $generated@@569) $generated@@237))
 :pattern ( ($generated@@136 $generated@@567 $generated@@568 $generated@@569))
))))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@73)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@68) (= (type $generated@@573) $generated@@68)) (and (= ($generated@@76 ($generated@@151 $generated@@572 $generated@@573)) $generated@@62) (= ($generated@@570 ($generated@@151 $generated@@572 $generated@@573)) $generated@@66)))
 :pattern ( ($generated@@151 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@139) (= ($generated@@549 ($generated@@288 $generated@@574)) ($generated@@550 $generated@@574)))
 :pattern ( ($generated@@549 ($generated@@288 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@160) ($generated@@230 $generated@@575 ($generated@@79 0))) (and (= ($generated@@288 ($generated@@338 $generated@@2 $generated@@575)) $generated@@575) ($generated@@148 ($generated@@338 ($generated@@80 $generated@@160 $generated@@4) $generated@@575) ($generated@@79 0))))
 :pattern ( ($generated@@230 $generated@@575 ($generated@@79 0)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@160) (= (type $generated@@577) $generated@@68)) ($generated@@230 $generated@@576 ($generated@@245 $generated@@577))) (and (= ($generated@@288 ($generated@@338 ($generated@@80 $generated@@160 $generated@@4) $generated@@576)) $generated@@576) ($generated@@148 ($generated@@338 ($generated@@80 $generated@@160 $generated@@4) $generated@@576) ($generated@@245 $generated@@577))))
 :pattern ( ($generated@@230 $generated@@576 ($generated@@245 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@160) (= (type $generated@@579) $generated@@68)) ($generated@@230 $generated@@578 ($generated@@250 $generated@@579))) (and (= ($generated@@288 ($generated@@338 ($generated@@80 $generated@@160 $generated@@4) $generated@@578)) $generated@@578) ($generated@@148 ($generated@@338 ($generated@@80 $generated@@160 $generated@@4) $generated@@578) ($generated@@250 $generated@@579))))
 :pattern ( ($generated@@230 $generated@@578 ($generated@@250 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@160) (= (type $generated@@581) $generated@@68)) ($generated@@230 $generated@@580 ($generated@@168 $generated@@581))) (and (= ($generated@@288 ($generated@@338 ($generated@@80 $generated@@160 $generated@@2) $generated@@580)) $generated@@580) ($generated@@148 ($generated@@338 ($generated@@80 $generated@@160 $generated@@2) $generated@@580) ($generated@@168 $generated@@581))))
 :pattern ( ($generated@@230 $generated@@580 ($generated@@168 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@160) (= (type $generated@@583) $generated@@68)) ($generated@@230 $generated@@582 ($generated@@500 $generated@@583))) (and (= ($generated@@288 ($generated@@338 ($generated@@277 $generated@@160) $generated@@582)) $generated@@582) ($generated@@148 ($generated@@338 ($generated@@277 $generated@@160) $generated@@582) ($generated@@500 $generated@@583))))
 :pattern ( ($generated@@230 $generated@@582 ($generated@@500 $generated@@583)))
)))
(assert  (=> (<= 1 $generated@@540) (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@138) (= (type $generated@@585) $generated@@139)) (= (type $generated@@586) $generated@@139)) (or ($generated@@541 $generated@@585 $generated@@586) (and (not (= 1 $generated@@540)) (and ($generated@@148 $generated@@585 $generated@@237) ($generated@@148 $generated@@586 $generated@@237))))) (and (and ($generated@@150 ($generated@@229 ($generated@@288 $generated@@585) ($generated@@288 $generated@@586))) (=> (not ($generated@@259 ($generated@@338 $generated@@139 ($generated@@158 ($generated@@229 ($generated@@288 $generated@@585) ($generated@@288 $generated@@586)))))) (and ($generated@@150 ($generated@@229 ($generated@@288 $generated@@585) ($generated@@288 $generated@@586))) (=> (not ($generated@@259 ($generated@@338 $generated@@139 ($generated@@159 ($generated@@229 ($generated@@288 $generated@@585) ($generated@@288 $generated@@586)))))) (and ($generated@@150 ($generated@@229 ($generated@@288 $generated@@585) ($generated@@288 $generated@@586))) (let (($generated@@587 ($generated@@343 ($generated@@338 $generated@@139 ($generated@@159 ($generated@@229 ($generated@@288 $generated@@585) ($generated@@288 $generated@@586)))))))
 (and ($generated@@150 ($generated@@229 ($generated@@288 $generated@@585) ($generated@@288 $generated@@586))) (let (($generated@@588 ($generated@@343 ($generated@@338 $generated@@139 ($generated@@158 ($generated@@229 ($generated@@288 $generated@@585) ($generated@@288 $generated@@586)))))))
($generated@@541 $generated@@588 $generated@@587))))))))) (= ($generated@@136 ($generated@@369 $generated@@584) $generated@@585 $generated@@586) (ite ($generated@@259 ($generated@@338 $generated@@139 ($generated@@158 ($generated@@229 ($generated@@288 $generated@@585) ($generated@@288 $generated@@586))))) $generated@@166 (ite ($generated@@259 ($generated@@338 $generated@@139 ($generated@@159 ($generated@@229 ($generated@@288 $generated@@585) ($generated@@288 $generated@@586))))) $generated@@585 (let (($generated@@589 ($generated@@343 ($generated@@338 $generated@@139 ($generated@@159 ($generated@@229 ($generated@@288 $generated@@585) ($generated@@288 $generated@@586)))))))
(let (($generated@@590 ($generated@@343 ($generated@@338 $generated@@139 ($generated@@158 ($generated@@229 ($generated@@288 $generated@@585) ($generated@@288 $generated@@586)))))))
($generated@@136 $generated@@584 $generated@@590 $generated@@589))))))))
 :pattern ( ($generated@@136 ($generated@@369 $generated@@584) $generated@@585 $generated@@586))
))))
(assert (= ($generated@@76 $generated@@237) $generated@@64))
(assert (= ($generated@@570 $generated@@237) $generated@@67))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@80 $generated@@160 $generated@@2)) (= (type $generated@@592) $generated@@68)) (= (type $generated@@593) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@591 ($generated@@168 $generated@@592) $generated@@593) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@160) (< 0 ($generated ($generated@@85 $generated@@591 $generated@@594)))) ($generated@@262 $generated@@594 $generated@@592 $generated@@593))
 :pattern ( ($generated@@85 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@78 $generated@@591 ($generated@@168 $generated@@592) $generated@@593))
)))
(assert (= $generated@@166 ($generated@@255 $generated@@166)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@139) (= (type $generated@@596) $generated@@68)) (= (type $generated@@597) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@238 $generated@@597) (and ($generated@@150 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@68) ($generated@@78 $generated@@595 ($generated@@151 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@78 $generated@@595 ($generated@@151 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@262 ($generated@@158 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@262 ($generated@@158 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@139) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@238 $generated@@601) (and ($generated@@150 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@68) ($generated@@78 $generated@@599 ($generated@@151 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@78 $generated@@599 ($generated@@151 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@262 ($generated@@159 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@262 ($generated@@159 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@139) (= (type $generated@@604) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@238 $generated@@604) (and ($generated@@270 $generated@@603) ($generated@@78 $generated@@603 $generated@@237 $generated@@604)))) ($generated@@78 ($generated@@343 $generated@@603) $generated@@237 $generated@@604))
 :pattern ( ($generated@@78 ($generated@@343 $generated@@603) $generated@@237 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@160) (= (type $generated@@606) $generated@@160)) (= ($generated@@229 ($generated@@255 $generated@@605) ($generated@@255 $generated@@606)) ($generated@@255 ($generated@@229 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@229 ($generated@@255 $generated@@605) ($generated@@255 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@139) (= ($generated@@284 ($generated@@255 $generated@@607)) ($generated@@255 ($generated@@284 $generated@@607))))
 :pattern ( ($generated@@284 ($generated@@255 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (= ($generated@@288 ($generated@@255 $generated@@608)) ($generated@@255 ($generated@@288 $generated@@608)))
 :pattern ( ($generated@@288 ($generated@@255 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@278 (type $generated@@609))))
 (=> (and (= (type $generated@@609) ($generated@@277 $generated@@610)) (= ($generated@@276 $generated@@609) 0)) (= $generated@@609 ($generated@@275 $generated@@610))))
 :pattern ( ($generated@@276 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@80 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@293 ($generated@@86 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@293 $generated@@611) ($generated ($generated@@85 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@293 ($generated@@86 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@616) $generated@@2)) ($generated@@78 $generated@@616 $generated@@46 $generated@@615))
 :pattern ( ($generated@@78 $generated@@616 $generated@@46 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@618) $generated@@3)) ($generated@@78 $generated@@618 $generated@@47 $generated@@617))
 :pattern ( ($generated@@78 $generated@@618 $generated@@47 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@620) $generated@@4)) ($generated@@78 $generated@@620 $generated@@44 $generated@@619))
 :pattern ( ($generated@@78 $generated@@620 $generated@@44 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@622) $generated@@458)) ($generated@@78 $generated@@622 $generated@@45 $generated@@621))
 :pattern ( ($generated@@78 $generated@@622 $generated@@45 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@624) $generated@@160)) ($generated@@78 $generated@@624 $generated@@48 $generated@@623))
 :pattern ( ($generated@@78 $generated@@624 $generated@@48 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@277 $generated@@160)) (= (type $generated@@626) $generated@@68)) (= ($generated@@148 $generated@@625 ($generated@@500 $generated@@626)) (forall (($generated@@627 Int) ) (!  (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@276 $generated@@625))) ($generated@@230 ($generated@@501 $generated@@625 $generated@@627) $generated@@626))
 :pattern ( ($generated@@501 $generated@@625 $generated@@627))
))))
 :pattern ( ($generated@@148 $generated@@625 ($generated@@500 $generated@@626)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 Int) ) (!  (=> (= (type $generated@@629) ($generated@@277 $generated@@160)) (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@276 $generated@@629))) (< ($generated@@550 ($generated@@338 $generated@@139 ($generated@@501 $generated@@629 $generated@@630))) ($generated@@628 $generated@@629))))
 :pattern ( ($generated@@550 ($generated@@338 $generated@@139 ($generated@@501 $generated@@629 $generated@@630))))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@301 $generated@@160 $generated@@160)) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) $generated@@68)) ($generated@@148 $generated@@631 ($generated@@415 $generated@@632 $generated@@633))) (and (and ($generated@@148 ($generated@@299 $generated@@631) ($generated@@245 $generated@@632)) ($generated@@148 ($generated@@351 $generated@@631) ($generated@@245 $generated@@633))) ($generated@@148 ($generated@@389 $generated@@631) ($generated@@245 ($generated@@151 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@148 $generated@@631 ($generated@@415 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@319 $generated@@160 $generated@@160)) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) $generated@@68)) ($generated@@148 $generated@@634 ($generated@@423 $generated@@635 $generated@@636))) (and (and ($generated@@148 ($generated@@317 $generated@@634) ($generated@@250 $generated@@635)) ($generated@@148 ($generated@@362 $generated@@634) ($generated@@250 $generated@@636))) ($generated@@148 ($generated@@397 $generated@@634) ($generated@@250 ($generated@@151 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@148 $generated@@634 ($generated@@423 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@2) ($generated@@148 $generated@@637 $generated@@46))
 :pattern ( ($generated@@148 $generated@@637 $generated@@46))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@3) ($generated@@148 $generated@@638 $generated@@47))
 :pattern ( ($generated@@148 $generated@@638 $generated@@47))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@4) ($generated@@148 $generated@@639 $generated@@44))
 :pattern ( ($generated@@148 $generated@@639 $generated@@44))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@458) ($generated@@148 $generated@@640 $generated@@45))
 :pattern ( ($generated@@148 $generated@@640 $generated@@45))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@160) ($generated@@148 $generated@@641 $generated@@48))
 :pattern ( ($generated@@148 $generated@@641 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@642) ($generated@@175 $generated@@81 $generated@@4)) (= (type $generated@@643) $generated@@81)) (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@645) $generated@@139)) (= (type $generated@@646) $generated@@139)) (= (type $generated@@647) $generated@@139)) (= (type $generated@@648) $generated@@139)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@650  (=> (= $generated@@642 ($generated@@174 $generated@@643 $generated@@644 $generated@@60 false)) (=> (and (and (and (and (= $generated@@645 ($generated@@284 $generated@@646)) ($generated@@78 $generated@@645 $generated@@237 $generated@@644)) (and (= $generated@@647 ($generated@@284 $generated@@648)) ($generated@@78 $generated@@647 $generated@@237 $generated@@644))) (and (and ($generated@@541 ($generated@@284 $generated@@646) ($generated@@284 $generated@@648)) ($generated@@78 $generated@@646 $generated@@237 $generated@@644)) (and ($generated@@78 $generated@@648 $generated@@237 $generated@@644) ($generated@@541 $generated@@646 $generated@@648)))) (and (and (and ($generated@@377 ($generated@@136 ($generated@@369 $generated@@140) ($generated@@284 $generated@@646) ($generated@@284 $generated@@648))) ($generated@@377 ($generated@@136 ($generated@@369 $generated@@140) $generated@@646 $generated@@648))) (and ($generated@@541 ($generated@@284 $generated@@646) ($generated@@284 $generated@@648)) ($generated@@541 $generated@@646 $generated@@648))) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@242 ($generated@@136 ($generated@@369 ($generated@@369 $generated@@140)) ($generated@@284 $generated@@646) ($generated@@284 $generated@@648)) ($generated@@136 ($generated@@369 ($generated@@369 $generated@@140)) $generated@@646 $generated@@648))))))
(let (($generated@@651  (=> (and ($generated@@238 $generated@@644) ($generated@@649 $generated@@644)) (=> (and (and ($generated@@148 $generated@@646 $generated@@237) ($generated@@78 $generated@@646 $generated@@237 $generated@@644)) ($generated@@377 $generated@@646)) (=> (and (and (and ($generated@@148 $generated@@648 $generated@@237) ($generated@@78 $generated@@648 $generated@@237 $generated@@644)) ($generated@@377 $generated@@648)) (and (= 2 $generated@@540) (= (ControlFlow 0 3) 2))) $generated@@650)))))
$generated@@651)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@227 (T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@381 (T@U) Bool)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@T T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@T) T@U)
(declare-fun $generated@@467 () T@T)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@516 (T@U Int) T@U)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@556 (T@U) Int)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@637 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 14) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@68)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@68) (= (type $generated@@148) $generated@@68)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert  (and (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@72)
 :pattern ( ($generated@@158 $generated@@160))
)) (= (type $generated@@159) $generated@@144)))
(assert (= ($generated@@158 $generated@@159) $generated@@63))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@68)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@165) $generated@@68)) ($generated@@140 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@140 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@81 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@71 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@81) (= (type $generated@@216) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@217) ($generated@@70 $generated@@4))) (= (type $generated@@219) $generated@@81)) (= (type $generated@@220) ($generated@@70 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@224 T@U) ) (! (= (type ($generated@@222 $generated@@224)) $generated@@68)
 :pattern ( ($generated@@222 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (= (type $generated@@225) $generated@@68) (= (type $generated@@226) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@223 $generated@@226)) ($generated@@78 $generated@@159 ($generated@@222 $generated@@225) $generated@@226))
 :pattern ( ($generated@@78 $generated@@159 ($generated@@222 $generated@@225) $generated@@226))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= (type ($generated@@227 $generated@@229 $generated@@230)) $generated@@144)
 :pattern ( ($generated@@227 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (and (= (type $generated@@231) $generated@@68) (= (type $generated@@232) $generated@@68)) (= (type $generated@@233) $generated@@153)) (= (type $generated@@234) $generated@@153)) (= ($generated@@140 ($generated@@227 $generated@@233 $generated@@234) ($generated@@143 $generated@@231 $generated@@232))  (and ($generated@@228 $generated@@233 $generated@@231) ($generated@@228 $generated@@234 $generated@@232))))
 :pattern ( ($generated@@140 ($generated@@227 $generated@@233 $generated@@234) ($generated@@143 $generated@@231 $generated@@232)))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@68) ($generated@@140 $generated@@159 ($generated@@222 $generated@@235)))
 :pattern ( ($generated@@140 $generated@@159 ($generated@@222 $generated@@235)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@144) (= (type $generated@@237) $generated@@144)) (= ($generated@@150 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@150 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@144) (= (type $generated@@240) $generated@@144)) (= ($generated@@238 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@238 $generated@@239 $generated@@240))
)))
(assert  (and (forall (($generated@@244 T@U) ) (! (= (type ($generated@@242 $generated@@244)) $generated@@153)
 :pattern ( ($generated@@242 $generated@@244))
)) (forall (($generated@@245 T@U) ) (! (= (type ($generated@@243 $generated@@245)) $generated@@144)
 :pattern ( ($generated@@243 $generated@@245))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (= (type $generated@@246) $generated@@144) (= (type $generated@@247) $generated@@144)) (and ($generated@@241 $generated@@246) ($generated@@241 $generated@@247))) (= ($generated@@238 $generated@@246 $generated@@247)  (and (= ($generated@@242 $generated@@246) ($generated@@242 $generated@@247)) ($generated@@238 ($generated@@243 $generated@@246) ($generated@@243 $generated@@247)))))
 :pattern ( ($generated@@238 $generated@@246 $generated@@247) ($generated@@241 $generated@@246))
 :pattern ( ($generated@@238 $generated@@246 $generated@@247) ($generated@@241 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@251) $generated@@68)) (= ($generated@@140 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@153) ($generated@@0 ($generated@@85 $generated@@250 $generated@@252))) ($generated@@228 $generated@@252 $generated@@251))
 :pattern ( ($generated@@85 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@140 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@68)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@256) $generated@@68)) (= ($generated@@140 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@153) ($generated@@0 ($generated@@85 $generated@@255 $generated@@257))) ($generated@@228 $generated@@257 $generated@@256))
 :pattern ( ($generated@@85 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@140 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
(= (type ($generated@@258 $generated@@259)) $generated@@260))
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@258 $generated@@261) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@144) (= (type $generated@@264) $generated@@144)) (and ($generated@@262 $generated@@263) ($generated@@262 $generated@@264))) (= ($generated@@238 $generated@@263 $generated@@264) true))
 :pattern ( ($generated@@238 $generated@@263 $generated@@264) ($generated@@262 $generated@@263))
 :pattern ( ($generated@@238 $generated@@263 $generated@@264) ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@265 $generated@@266 $generated@@267)) $generated@@144)
 :pattern ( ($generated@@265 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@268) $generated@@68) (= (type $generated@@269) $generated@@153)) (= (type $generated@@270) $generated@@144)) (= ($generated@@140 ($generated@@265 $generated@@269 $generated@@270) ($generated@@222 $generated@@268))  (and ($generated@@228 $generated@@269 $generated@@268) ($generated@@140 $generated@@270 ($generated@@222 $generated@@268)))))
 :pattern ( ($generated@@140 ($generated@@265 $generated@@269 $generated@@270) ($generated@@222 $generated@@268)))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@68) (= (type $generated@@273) $generated@@68)) (= (type $generated@@274) $generated@@153)) (= (type $generated@@275) $generated@@153)) (= (type $generated@@276) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@223 $generated@@276)) (= ($generated@@78 ($generated@@227 $generated@@274 $generated@@275) ($generated@@143 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@78 ($generated@@227 $generated@@274 $generated@@275) ($generated@@143 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@144) (= ($generated@@142 $generated@@277) (= ($generated@@158 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@144) (= ($generated@@262 $generated@@278) (= ($generated@@158 $generated@@278) $generated@@63)))
 :pattern ( ($generated@@262 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@144) (= ($generated@@241 $generated@@279) (= ($generated@@158 $generated@@279) $generated@@65)))
 :pattern ( ($generated@@241 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@144) ($generated@@142 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@153) (= (type $generated@@282) $generated@@153)) (= $generated@@280 ($generated@@227 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@142 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@144) ($generated@@241 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@153) (= (type $generated@@285) $generated@@144)) (= $generated@@283 ($generated@@265 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@241 $generated@@283))
)))
(assert  (and (and (forall (($generated@@290 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@290)) 17)) (forall (($generated@@291 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
))) (forall (($generated@@292 T@T) ) (! (= (type ($generated@@286 $generated@@292)) ($generated@@288 $generated@@292))
 :pattern ( ($generated@@286 $generated@@292))
))))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@293)) 0)
 :pattern ( ($generated@@286 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@144) ($generated@@262 $generated@@294)) (= $generated@@294 $generated@@159))
 :pattern ( ($generated@@262 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@153)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@68) (= (type $generated@@299) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@271 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@78 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@271 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@301) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@302) $generated@@153)) (= (type $generated@@303) $generated@@68)) ($generated@@136 $generated@@300 $generated@@301)) ($generated@@271 $generated@@302 $generated@@303 $generated@@300)) ($generated@@271 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@136 $generated@@300 $generated@@301) ($generated@@271 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@304) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@305) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@307) $generated@@68)) ($generated@@136 $generated@@304 $generated@@305)) ($generated@@78 $generated@@306 $generated@@307 $generated@@304)) ($generated@@78 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@136 $generated@@304 $generated@@305) ($generated@@78 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@80 $generated@@310 $generated@@2))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@83 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@80 $generated@@312 $generated@@2)) (and (= (= ($generated@@308 $generated@@311) 0) (= $generated@@311 ($generated@@309 $generated@@312))) (=> (not (= ($generated@@308 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@85 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@73)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@68) (and (= ($generated@@76 ($generated@@222 $generated@@316)) $generated@@64) (= ($generated@@314 ($generated@@222 $generated@@316)) $generated@@67)))
 :pattern ( ($generated@@222 $generated@@316))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@80 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@85 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@85 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@80 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@85 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@85 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@83 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@80 $generated@@354 $generated@@2)) (= ($generated@@162 $generated@@353) (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@354) (and (<= 0 ($generated ($generated@@85 $generated@@353 $generated@@355))) (<= ($generated ($generated@@85 $generated@@353 $generated@@355)) ($generated@@308 $generated@@353))))
 :pattern ( ($generated@@85 $generated@@353 $generated@@355))
)))))
 :pattern ( ($generated@@162 $generated@@353))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@321 (type $generated@@356))))
(let (($generated@@358 ($generated@@320 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@319 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@318 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@85 ($generated@@317 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@317 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@321 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@80 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@321 (type $generated@@363))))
(let (($generated@@365 ($generated@@320 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@319 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@318 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@339 (type $generated@@367))))
(let (($generated@@369 ($generated@@338 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@337 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@336 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@335 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@339 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@80 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@339 (type $generated@@374))))
(let (($generated@@376 ($generated@@338 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@337 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@336 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@85 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@379) $generated@@68)) (= ($generated@@140 $generated@@378 ($generated@@161 $generated@@379)) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@378 $generated@@380)))) ($generated@@228 $generated@@380 $generated@@379))
 :pattern ( ($generated@@85 $generated@@378 $generated@@380))
))))
 :pattern ( ($generated@@140 $generated@@378 ($generated@@161 $generated@@379)))
)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@144) ($generated@@381 $generated@@382)) (or ($generated@@262 $generated@@382) ($generated@@241 $generated@@382)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@384) $generated@@68)) (= (type $generated@@385) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@383 ($generated@@248 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@153) ($generated@@0 ($generated@@85 $generated@@383 $generated@@386))) ($generated@@271 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@85 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@78 $generated@@383 ($generated@@248 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@388) $generated@@68)) (= (type $generated@@389) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@387 ($generated@@253 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@153) ($generated@@0 ($generated@@85 $generated@@387 $generated@@390))) ($generated@@271 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@85 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@78 $generated@@387 ($generated@@253 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(= ($generated ($generated@@85 ($generated@@309 $generated@@392) $generated@@391)) 0))
 :pattern ( (let (($generated@@392 (type $generated@@391)))
($generated@@85 ($generated@@309 $generated@@392) $generated@@391)))
)))
(assert  (and (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@393 $generated@@396)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@393 $generated@@396))
)) (forall (($generated@@397 T@T) ($generated@@398 T@U) ) (! (= (type ($generated@@394 $generated@@397 $generated@@398)) $generated@@397)
 :pattern ( ($generated@@394 $generated@@397 $generated@@398))
))) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@321 (type $generated@@399))))
(let (($generated@@401 ($generated@@320 (type $generated@@399))))
(= (type ($generated@@395 $generated@@399)) ($generated@@80 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@395 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@319 $generated@@153 $generated@@153)) (= (type $generated@@403) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@393 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@85 ($generated@@317 $generated@@402) ($generated@@151 ($generated@@394 $generated@@144 $generated@@403)))) (= ($generated@@85 ($generated@@395 $generated@@402) ($generated@@151 ($generated@@394 $generated@@144 $generated@@403))) ($generated@@152 ($generated@@394 $generated@@144 $generated@@403))))))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@402) $generated@@403))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@339 (type $generated@@407))))
(let (($generated@@409 ($generated@@338 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@80 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@337 $generated@@153 $generated@@153)) (= (type $generated@@411) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@85 ($generated@@335 $generated@@410) ($generated@@151 ($generated@@394 $generated@@144 $generated@@411)))) (= ($generated@@85 ($generated@@405 $generated@@410) ($generated@@151 ($generated@@394 $generated@@144 $generated@@411))) ($generated@@152 ($generated@@394 $generated@@144 $generated@@411))))))
 :pattern ( ($generated@@85 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@320 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@319 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@85 ($generated@@360 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@85 ($generated@@317 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@85 ($generated@@395 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@412) $generated@@416))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@85 ($generated@@360 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@338 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@337 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@85 ($generated@@371 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@85 ($generated@@335 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@85 ($generated@@405 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@417) $generated@@421))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@85 ($generated@@371 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@68)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@319 $generated@@153 $generated@@153)) (= (type $generated@@426) $generated@@68)) (= (type $generated@@427) $generated@@68)) (= (type $generated@@428) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@317 $generated@@425) $generated@@429))) (and ($generated@@271 ($generated@@85 ($generated@@395 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@271 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@425) $generated@@429))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@78 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@68)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@337 $generated@@153 $generated@@153)) (= (type $generated@@434) $generated@@68)) (= (type $generated@@435) $generated@@68)) (= (type $generated@@436) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@433) $generated@@437))) (and ($generated@@271 ($generated@@85 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@271 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@78 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (= (type $generated@@438) $generated@@68) (= (type $generated@@439) $generated@@144)) ($generated@@140 $generated@@439 ($generated@@222 $generated@@438))) (or ($generated@@262 $generated@@439) ($generated@@241 $generated@@439)))
 :pattern ( ($generated@@241 $generated@@439) ($generated@@140 $generated@@439 ($generated@@222 $generated@@438)))
 :pattern ( ($generated@@262 $generated@@439) ($generated@@140 $generated@@439 ($generated@@222 $generated@@438)))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@441) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@442) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@440 $generated@@442))) (and ($generated@@136 $generated@@440 $generated@@441) ($generated@@136 $generated@@441 $generated@@442))) ($generated@@136 $generated@@440 $generated@@442))
 :pattern ( ($generated@@136 $generated@@440 $generated@@441) ($generated@@136 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@T) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@80 $generated@@444 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@339 (type $generated@@445))))
(let (($generated@@447 ($generated@@338 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@337 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@336 $generated@@447 $generated@@446)) (= ($generated@@335 $generated@@445) ($generated@@443 $generated@@447))))))
 :pattern ( ($generated@@335 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@339 (type $generated@@448))))
(let (($generated@@450 ($generated@@338 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@337 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@336 $generated@@450 $generated@@449)) (= ($generated@@371 $generated@@448) ($generated@@443 $generated@@449))))))
 :pattern ( ($generated@@371 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@339 (type $generated@@451))))
(let (($generated@@453 ($generated@@338 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@337 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@336 $generated@@453 $generated@@452)) (= ($generated@@404 $generated@@451) ($generated@@443 $generated@@153))))))
 :pattern ( ($generated@@404 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@321 (type $generated@@454))))
(let (($generated@@456 ($generated@@320 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@319 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@318 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@153) (= (type $generated@@458) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@393 $generated@@454) ($generated@@295 ($generated@@227 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@393 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@339 (type $generated@@459))))
(let (($generated@@461 ($generated@@338 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@337 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@336 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@153) (= (type $generated@@463) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@404 $generated@@459) ($generated@@295 ($generated@@227 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@404 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@153) ($generated@@228 $generated@@464 $generated@@46)) (and (= ($generated@@295 ($generated@@394 $generated@@2 $generated@@464)) $generated@@464) ($generated@@140 ($generated@@394 $generated@@2 $generated@@464) $generated@@46)))
 :pattern ( ($generated@@228 $generated@@464 $generated@@46))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@153) ($generated@@228 $generated@@465 $generated@@47)) (and (= ($generated@@295 ($generated@@394 $generated@@3 $generated@@465)) $generated@@465) ($generated@@140 ($generated@@394 $generated@@3 $generated@@465) $generated@@47)))
 :pattern ( ($generated@@228 $generated@@465 $generated@@47))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@153) ($generated@@228 $generated@@466 $generated@@44)) (and (= ($generated@@295 ($generated@@394 $generated@@4 $generated@@466)) $generated@@466) ($generated@@140 ($generated@@394 $generated@@4 $generated@@466) $generated@@44)))
 :pattern ( ($generated@@228 $generated@@466 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@467) 20))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@153) ($generated@@228 $generated@@468 $generated@@45)) (and (= ($generated@@295 ($generated@@394 $generated@@467 $generated@@468)) $generated@@468) ($generated@@140 ($generated@@394 $generated@@467 $generated@@468) $generated@@45)))
 :pattern ( ($generated@@228 $generated@@468 $generated@@45))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@68) (= ($generated@@228 ($generated@@295 $generated@@469) $generated@@470) ($generated@@140 $generated@@469 $generated@@470)))
 :pattern ( ($generated@@228 ($generated@@295 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@83 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@80 $generated@@472 $generated@@2)) (<= 0 ($generated@@308 $generated@@471))))
 :pattern ( ($generated@@308 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@289 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@288 $generated@@474)) (<= 0 ($generated@@287 $generated@@473))))
 :pattern ( ($generated@@287 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@68)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@68) (= (type $generated@@478) $generated@@68)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@68)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@68)) (= ($generated@@76 ($generated@@422 $generated@@483 $generated@@484)) $generated@@58))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@485 ($generated@@430 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@430 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@430 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@430 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@76 ($generated@@430 $generated@@493 $generated@@494)) $generated@@59))
 :pattern ( ($generated@@430 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@153) (= (type $generated@@496) $generated@@153)) (= ($generated@@158 ($generated@@227 $generated@@495 $generated@@496)) $generated@@61))
 :pattern ( ($generated@@227 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@68)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@68) (= (type $generated@@500) $generated@@68)) (= ($generated@@497 ($generated@@143 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@143 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@68)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@501 ($generated@@143 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@143 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@153) (= (type $generated@@506) $generated@@153)) (= ($generated@@151 ($generated@@227 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@227 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@153) (= (type $generated@@508) $generated@@153)) (= ($generated@@152 ($generated@@227 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@227 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@153) (= (type $generated@@510) $generated@@144)) (= ($generated@@158 ($generated@@265 $generated@@509 $generated@@510)) $generated@@65))
 :pattern ( ($generated@@265 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@153) (= (type $generated@@512) $generated@@144)) (= ($generated@@242 ($generated@@265 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@265 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@153) (= (type $generated@@514) $generated@@144)) (= ($generated@@243 ($generated@@265 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@265 $generated@@513 $generated@@514))
)))
(assert  (and (forall (($generated@@517 T@U) ) (! (= (type ($generated@@515 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@517))
)) (forall (($generated@@518 T@U) ($generated@@519 Int) ) (! (let (($generated@@520 ($generated@@289 (type $generated@@518))))
(= (type ($generated@@516 $generated@@518 $generated@@519)) $generated@@520))
 :pattern ( ($generated@@516 $generated@@518 $generated@@519))
))))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@288 $generated@@153)) (= (type $generated@@522) $generated@@68)) (= (type $generated@@523) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@521 ($generated@@515 $generated@@522) $generated@@523) (forall (($generated@@524 Int) ) (!  (=> (and (<= 0 $generated@@524) (< $generated@@524 ($generated@@287 $generated@@521))) ($generated@@271 ($generated@@516 $generated@@521 $generated@@524) $generated@@522 $generated@@523))
 :pattern ( ($generated@@516 $generated@@521 $generated@@524))
))))
 :pattern ( ($generated@@78 $generated@@521 ($generated@@515 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@526 Int) ) (! (= ($generated@@525 ($generated@@79 $generated@@526)) $generated@@526)
 :pattern ( ($generated@@79 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@527 ($generated@@248 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@248 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@76 ($generated@@248 $generated@@530)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@531 ($generated@@253 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@253 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@68) (= ($generated@@76 ($generated@@253 $generated@@534)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@535 ($generated@@161 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@161 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@68) (= ($generated@@76 ($generated@@161 $generated@@538)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@539 ($generated@@515 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@515 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@68) (= ($generated@@76 ($generated@@515 $generated@@542)) $generated@@57))
 :pattern ( ($generated@@515 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@543 ($generated@@222 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@222 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@394 $generated@@547 ($generated@@295 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@295 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@319 $generated@@153 $generated@@153)) (= (type $generated@@549) $generated@@68)) (= (type $generated@@550) $generated@@68)) (= ($generated@@140 $generated@@548 ($generated@@422 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@317 $generated@@548) $generated@@551))) (and ($generated@@228 ($generated@@85 ($generated@@395 $generated@@548) $generated@@551) $generated@@550) ($generated@@228 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@548) $generated@@551))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@140 $generated@@548 ($generated@@422 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@337 $generated@@153 $generated@@153)) (= (type $generated@@553) $generated@@68)) (= (type $generated@@554) $generated@@68)) (= ($generated@@140 $generated@@552 ($generated@@430 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@552) $generated@@555))) (and ($generated@@228 ($generated@@85 ($generated@@405 $generated@@552) $generated@@555) $generated@@554) ($generated@@228 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@552) $generated@@555))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@140 $generated@@552 ($generated@@430 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@153) (= (type $generated@@559) $generated@@153)) (< ($generated@@556 $generated@@558) ($generated@@557 ($generated@@227 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@227 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@153) (= (type $generated@@561) $generated@@153)) (< ($generated@@556 $generated@@561) ($generated@@557 ($generated@@227 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@227 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@153) (= (type $generated@@563) $generated@@144)) (< ($generated@@556 $generated@@562) ($generated@@557 ($generated@@265 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@265 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@153) (= (type $generated@@565) $generated@@144)) (< ($generated@@557 $generated@@565) ($generated@@557 ($generated@@265 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@265 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@153) (= (type $generated@@567) $generated@@68)) (= (type $generated@@568) $generated@@68)) ($generated@@228 $generated@@566 ($generated@@422 $generated@@567 $generated@@568))) (and (= ($generated@@295 ($generated@@394 ($generated@@319 $generated@@153 $generated@@153) $generated@@566)) $generated@@566) ($generated@@140 ($generated@@394 ($generated@@319 $generated@@153 $generated@@153) $generated@@566) ($generated@@422 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@228 $generated@@566 ($generated@@422 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@153) (= (type $generated@@570) $generated@@68)) (= (type $generated@@571) $generated@@68)) ($generated@@228 $generated@@569 ($generated@@430 $generated@@570 $generated@@571))) (and (= ($generated@@295 ($generated@@394 ($generated@@337 $generated@@153 $generated@@153) $generated@@569)) $generated@@569) ($generated@@140 ($generated@@394 ($generated@@337 $generated@@153 $generated@@153) $generated@@569) ($generated@@430 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@228 $generated@@569 ($generated@@430 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@68) (= (type $generated@@573) $generated@@68)) (= (type $generated@@574) $generated@@153)) ($generated@@228 $generated@@574 ($generated@@143 $generated@@572 $generated@@573))) (and (= ($generated@@295 ($generated@@394 $generated@@144 $generated@@574)) $generated@@574) ($generated@@140 ($generated@@394 $generated@@144 $generated@@574) ($generated@@143 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@228 $generated@@574 ($generated@@143 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@144) (= (type $generated@@576) $generated@@68)) (= (type $generated@@577) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@223 $generated@@577) (and ($generated@@241 $generated@@575) ($generated@@78 $generated@@575 ($generated@@222 $generated@@576) $generated@@577)))) ($generated@@271 ($generated@@242 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@271 ($generated@@242 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@85 ($generated@@443 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@85 ($generated@@443 $generated@@579) $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@68) (= (type $generated@@581) $generated@@68)) (and (= ($generated@@76 ($generated@@143 $generated@@580 $generated@@581)) $generated@@62) (= ($generated@@314 ($generated@@143 $generated@@580 $generated@@581)) $generated@@66)))
 :pattern ( ($generated@@143 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@144) (= ($generated@@556 ($generated@@295 $generated@@582)) ($generated@@557 $generated@@582)))
 :pattern ( ($generated@@556 ($generated@@295 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@153) ($generated@@228 $generated@@583 ($generated@@79 0))) (and (= ($generated@@295 ($generated@@394 $generated@@2 $generated@@583)) $generated@@583) ($generated@@140 ($generated@@394 ($generated@@80 $generated@@153 $generated@@4) $generated@@583) ($generated@@79 0))))
 :pattern ( ($generated@@228 $generated@@583 ($generated@@79 0)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@153) (= (type $generated@@585) $generated@@68)) ($generated@@228 $generated@@584 ($generated@@248 $generated@@585))) (and (= ($generated@@295 ($generated@@394 ($generated@@80 $generated@@153 $generated@@4) $generated@@584)) $generated@@584) ($generated@@140 ($generated@@394 ($generated@@80 $generated@@153 $generated@@4) $generated@@584) ($generated@@248 $generated@@585))))
 :pattern ( ($generated@@228 $generated@@584 ($generated@@248 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@153) (= (type $generated@@587) $generated@@68)) ($generated@@228 $generated@@586 ($generated@@253 $generated@@587))) (and (= ($generated@@295 ($generated@@394 ($generated@@80 $generated@@153 $generated@@4) $generated@@586)) $generated@@586) ($generated@@140 ($generated@@394 ($generated@@80 $generated@@153 $generated@@4) $generated@@586) ($generated@@253 $generated@@587))))
 :pattern ( ($generated@@228 $generated@@586 ($generated@@253 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@153) (= (type $generated@@589) $generated@@68)) ($generated@@228 $generated@@588 ($generated@@161 $generated@@589))) (and (= ($generated@@295 ($generated@@394 ($generated@@80 $generated@@153 $generated@@2) $generated@@588)) $generated@@588) ($generated@@140 ($generated@@394 ($generated@@80 $generated@@153 $generated@@2) $generated@@588) ($generated@@161 $generated@@589))))
 :pattern ( ($generated@@228 $generated@@588 ($generated@@161 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@153) (= (type $generated@@591) $generated@@68)) ($generated@@228 $generated@@590 ($generated@@515 $generated@@591))) (and (= ($generated@@295 ($generated@@394 ($generated@@288 $generated@@153) $generated@@590)) $generated@@590) ($generated@@140 ($generated@@394 ($generated@@288 $generated@@153) $generated@@590) ($generated@@515 $generated@@591))))
 :pattern ( ($generated@@228 $generated@@590 ($generated@@515 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@68) (= (type $generated@@593) $generated@@153)) ($generated@@228 $generated@@593 ($generated@@222 $generated@@592))) (and (= ($generated@@295 ($generated@@394 $generated@@144 $generated@@593)) $generated@@593) ($generated@@140 ($generated@@394 $generated@@144 $generated@@593) ($generated@@222 $generated@@592))))
 :pattern ( ($generated@@228 $generated@@593 ($generated@@222 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@144) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@223 $generated@@596) (and ($generated@@241 $generated@@594) ($generated@@78 $generated@@594 ($generated@@222 $generated@@595) $generated@@596)))) ($generated@@78 ($generated@@243 $generated@@594) ($generated@@222 $generated@@595) $generated@@596))
 :pattern ( ($generated@@78 ($generated@@243 $generated@@594) ($generated@@222 $generated@@595) $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@598) $generated@@68)) (= (type $generated@@599) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@597 ($generated@@161 $generated@@598) $generated@@599) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@597 $generated@@600)))) ($generated@@271 $generated@@600 $generated@@598 $generated@@599))
 :pattern ( ($generated@@85 $generated@@597 $generated@@600))
))))
 :pattern ( ($generated@@78 $generated@@597 ($generated@@161 $generated@@598) $generated@@599))
)))
(assert (= $generated@@159 ($generated@@258 $generated@@159)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@144) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@223 $generated@@603) (and ($generated@@142 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@68) ($generated@@78 $generated@@601 ($generated@@143 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@78 $generated@@601 ($generated@@143 $generated@@602 $generated@@604) $generated@@603))
))))) ($generated@@271 ($generated@@151 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@271 ($generated@@151 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@144) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@223 $generated@@607) (and ($generated@@142 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@68) ($generated@@78 $generated@@605 ($generated@@143 $generated@@608 $generated@@606) $generated@@607))
 :pattern ( ($generated@@78 $generated@@605 ($generated@@143 $generated@@608 $generated@@606) $generated@@607))
))))) ($generated@@271 ($generated@@152 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@271 ($generated@@152 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@153) (= (type $generated@@610) $generated@@153)) (= ($generated@@227 ($generated@@258 $generated@@609) ($generated@@258 $generated@@610)) ($generated@@258 ($generated@@227 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@227 ($generated@@258 $generated@@609) ($generated@@258 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@153) (= (type $generated@@612) $generated@@144)) (= ($generated@@265 ($generated@@258 $generated@@611) ($generated@@258 $generated@@612)) ($generated@@258 ($generated@@265 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@265 ($generated@@258 $generated@@611) ($generated@@258 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (! (= ($generated@@295 ($generated@@258 $generated@@613)) ($generated@@258 ($generated@@295 $generated@@613)))
 :pattern ( ($generated@@295 ($generated@@258 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 ($generated@@289 (type $generated@@614))))
 (=> (and (= (type $generated@@614) ($generated@@288 $generated@@615)) (= ($generated@@287 $generated@@614) 0)) (= $generated@@614 ($generated@@286 $generated@@615))))
 :pattern ( ($generated@@287 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (! (let (($generated@@619 (type $generated@@617)))
 (=> (and (and (= (type $generated@@616) ($generated@@80 $generated@@619 $generated@@2)) (= (type $generated@@618) $generated@@2)) (<= 0 ($generated $generated@@618))) (= ($generated@@308 ($generated@@86 $generated@@616 $generated@@617 $generated@@618)) (+ (- ($generated@@308 $generated@@616) ($generated ($generated@@85 $generated@@616 $generated@@617))) ($generated $generated@@618)))))
 :pattern ( ($generated@@308 ($generated@@86 $generated@@616 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@2)) ($generated@@78 $generated@@621 $generated@@46 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@46 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@3)) ($generated@@78 $generated@@623 $generated@@47 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@47 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@4)) ($generated@@78 $generated@@625 $generated@@44 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@44 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@627) $generated@@467)) ($generated@@78 $generated@@627 $generated@@45 $generated@@626))
 :pattern ( ($generated@@78 $generated@@627 $generated@@45 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@629) $generated@@153)) ($generated@@78 $generated@@629 $generated@@48 $generated@@628))
 :pattern ( ($generated@@78 $generated@@629 $generated@@48 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@630) $generated@@68) (= (type $generated@@631) $generated@@153)) (= (type $generated@@632) $generated@@144)) (= (type $generated@@633) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@223 $generated@@633)) (= ($generated@@78 ($generated@@265 $generated@@631 $generated@@632) ($generated@@222 $generated@@630) $generated@@633)  (and ($generated@@271 $generated@@631 $generated@@630 $generated@@633) ($generated@@78 $generated@@632 ($generated@@222 $generated@@630) $generated@@633))))
 :pattern ( ($generated@@78 ($generated@@265 $generated@@631 $generated@@632) ($generated@@222 $generated@@630) $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@288 $generated@@153)) (= (type $generated@@635) $generated@@68)) (= ($generated@@140 $generated@@634 ($generated@@515 $generated@@635)) (forall (($generated@@636 Int) ) (!  (=> (and (<= 0 $generated@@636) (< $generated@@636 ($generated@@287 $generated@@634))) ($generated@@228 ($generated@@516 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@516 $generated@@634 $generated@@636))
))))
 :pattern ( ($generated@@140 $generated@@634 ($generated@@515 $generated@@635)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 Int) ) (!  (=> (= (type $generated@@638) ($generated@@288 $generated@@153)) (=> (and (<= 0 $generated@@639) (< $generated@@639 ($generated@@287 $generated@@638))) (< ($generated@@557 ($generated@@394 $generated@@144 ($generated@@516 $generated@@638 $generated@@639))) ($generated@@637 $generated@@638))))
 :pattern ( ($generated@@557 ($generated@@394 $generated@@144 ($generated@@516 $generated@@638 $generated@@639))))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) ($generated@@319 $generated@@153 $generated@@153)) (= (type $generated@@641) $generated@@68)) (= (type $generated@@642) $generated@@68)) ($generated@@140 $generated@@640 ($generated@@422 $generated@@641 $generated@@642))) (and (and ($generated@@140 ($generated@@317 $generated@@640) ($generated@@248 $generated@@641)) ($generated@@140 ($generated@@360 $generated@@640) ($generated@@248 $generated@@642))) ($generated@@140 ($generated@@393 $generated@@640) ($generated@@248 ($generated@@143 $generated@@641 $generated@@642)))))
 :pattern ( ($generated@@140 $generated@@640 ($generated@@422 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) ($generated@@337 $generated@@153 $generated@@153)) (= (type $generated@@644) $generated@@68)) (= (type $generated@@645) $generated@@68)) ($generated@@140 $generated@@643 ($generated@@430 $generated@@644 $generated@@645))) (and (and ($generated@@140 ($generated@@335 $generated@@643) ($generated@@253 $generated@@644)) ($generated@@140 ($generated@@371 $generated@@643) ($generated@@253 $generated@@645))) ($generated@@140 ($generated@@404 $generated@@643) ($generated@@253 ($generated@@143 $generated@@644 $generated@@645)))))
 :pattern ( ($generated@@140 $generated@@643 ($generated@@430 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@2) ($generated@@140 $generated@@646 $generated@@46))
 :pattern ( ($generated@@140 $generated@@646 $generated@@46))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@3) ($generated@@140 $generated@@647 $generated@@47))
 :pattern ( ($generated@@140 $generated@@647 $generated@@47))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@4) ($generated@@140 $generated@@648 $generated@@44))
 :pattern ( ($generated@@140 $generated@@648 $generated@@44))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@467) ($generated@@140 $generated@@649 $generated@@45))
 :pattern ( ($generated@@140 $generated@@649 $generated@@45))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@153) ($generated@@140 $generated@@650 $generated@@48))
 :pattern ( ($generated@@140 $generated@@650 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 (T@U) Bool)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () Bool)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@664) $generated@@144) (= (type $generated@@662) $generated@@153)) (= (type $generated@@651) $generated@@144)) (= (type $generated@@671) $generated@@153)) (= (type $generated@@654) $generated@@68)) (= (type $generated@@655) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@672) $generated@@153)) (= (type $generated@@652) $generated@@153)) (= (type $generated@@653) $generated@@144)) (= (type $generated@@656) $generated@@144)) (= (type $generated@@657) $generated@@144)) (= (type $generated@@658) $generated@@153)) (= (type $generated@@659) $generated@@153)) (= (type $generated@@660) $generated@@153)) (= (type $generated@@661) $generated@@153)) (= (type $generated@@663) $generated@@144)) (= (type $generated@@665) $generated@@153)) (= (type $generated@@666) $generated@@68)) (= (type $generated@@667) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@669) $generated@@153)) (= (type $generated@@670) $generated@@81)) (= (type $generated@@673) ($generated@@168 $generated@@81 $generated@@4))) (= (type $generated@@675) $generated@@153)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@677  (=> (= (ControlFlow 0 7) (- 0 6)) true)))
(let (($generated@@678  (=> (= $generated@@651 ($generated@@265 $generated@@652 $generated@@653)) (=> (and (and ($generated@@228 $generated@@652 $generated@@654) ($generated@@271 $generated@@652 $generated@@654 $generated@@655)) (and ($generated@@140 $generated@@653 ($generated@@222 $generated@@654)) ($generated@@78 $generated@@653 ($generated@@222 $generated@@654) $generated@@655))) (=> (and (and (and (and (and ($generated@@140 $generated@@656 ($generated@@222 $generated@@654)) ($generated@@78 $generated@@656 ($generated@@222 $generated@@654) $generated@@655)) (= $generated@@657 $generated@@653)) (and ($generated@@140 $generated@@657 ($generated@@222 $generated@@654)) (= $generated@@656 $generated@@657))) (and (and ($generated@@228 $generated@@658 $generated@@654) ($generated@@271 $generated@@658 $generated@@654 $generated@@655)) (= $generated@@659 $generated@@652))) (and (and (and ($generated@@228 $generated@@659 $generated@@654) (= $generated@@658 $generated@@659)) (and ($generated@@228 $generated@@660 $generated@@654) ($generated@@271 $generated@@660 $generated@@654 $generated@@655))) (and (and (= $generated@@661 $generated@@662) ($generated@@228 $generated@@661 $generated@@654)) (and (= $generated@@660 $generated@@661) (= $generated@@663 ($generated@@265 $generated@@658 $generated@@656)))))) (and (=> (= (ControlFlow 0 9) (- 0 11)) (< ($generated@@557 $generated@@663) ($generated@@557 $generated@@664))) (=> (< ($generated@@557 $generated@@663) ($generated@@557 $generated@@664)) (=> (and ($generated@@228 $generated@@665 $generated@@666) ($generated@@271 $generated@@665 $generated@@666 $generated@@655)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (not ($generated@@238 $generated@@663 $generated@@159))) (=> (not ($generated@@238 $generated@@663 $generated@@159)) (=> (and ($generated@@223 $generated@@667) ($generated@@668 $generated@@667)) (=> (and (and (and ($generated@@228 $generated@@669 $generated@@654) ($generated@@271 $generated@@669 $generated@@654 $generated@@667)) (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@81) (=> (and (not (= $generated@@679 $generated@@670)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@655 $generated@@679) $generated@@60))) (= ($generated@@85 $generated@@667 $generated@@679) ($generated@@85 $generated@@655 $generated@@679))))
 :pattern ( ($generated@@85 $generated@@667 $generated@@679))
))) (and ($generated@@136 $generated@@655 $generated@@667) (= (ControlFlow 0 9) 7))) $generated@@677))))))))))))
(let (($generated@@680  (=> (= $generated@@651 $generated@@159) (=> (and ($generated@@228 $generated@@671 $generated@@654) ($generated@@271 $generated@@671 $generated@@654 $generated@@655)) (=> (and (and (= $generated@@672 $generated@@662) ($generated@@228 $generated@@672 $generated@@654)) (and (= $generated@@671 $generated@@672) (= (ControlFlow 0 8) 7))) $generated@@677)))))
(let (($generated@@681 true))
(let (($generated@@682  (=> (not (= $generated@@651 $generated@@159)) (and (=> (= (ControlFlow 0 12) 9) $generated@@678) (=> (= (ControlFlow 0 12) 5) $generated@@681)))))
(let (($generated@@683  (=> (= $generated@@664 ($generated@@265 $generated@@662 $generated@@651)) (=> (and (and ($generated@@228 $generated@@662 $generated@@654) ($generated@@271 $generated@@662 $generated@@654 $generated@@655)) (and ($generated@@140 $generated@@651 ($generated@@222 $generated@@654)) ($generated@@78 $generated@@651 ($generated@@222 $generated@@654) $generated@@655))) (and (=> (= (ControlFlow 0 13) 8) $generated@@680) (=> (= (ControlFlow 0 13) 12) $generated@@682))))))
(let (($generated@@684 true))
(let (($generated@@685  (=> (and (= $generated@@664 $generated@@159) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@686  (=> (not (= $generated@@664 ($generated@@265 $generated@@662 $generated@@651))) (and (=> (= (ControlFlow 0 4) 2) $generated@@685) (=> (= (ControlFlow 0 4) 3) $generated@@684)))))
(let (($generated@@687  (=> (= $generated@@673 ($generated@@167 $generated@@670 $generated@@655 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 13) $generated@@683) (=> (= (ControlFlow 0 14) 4) $generated@@686)))))
(let (($generated@@688  (=> (and ($generated@@223 $generated@@655) ($generated@@668 $generated@@655)) (=> (and (and (and ($generated@@140 $generated@@664 ($generated@@222 $generated@@654)) ($generated@@78 $generated@@664 ($generated@@222 $generated@@654) $generated@@655)) ($generated@@381 $generated@@664)) (and (and (=> $generated@@674 (and ($generated@@228 $generated@@675 $generated@@654) ($generated@@271 $generated@@675 $generated@@654 $generated@@655))) (= 1 $generated@@676)) (and (not ($generated@@238 $generated@@664 $generated@@159)) (= (ControlFlow 0 15) 14)))) $generated@@687))))
$generated@@688))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) Int)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U) Int)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@283 (Int) T@U)
(declare-fun $generated@@287 (Int) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@341 (T@T T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@374 (T@U) Bool)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@428 (Int Int) Int)
(declare-fun $generated@@432 (T@T) T@U)
(declare-fun $generated@@456 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@499 (T@U Int) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@614 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (= ($generated@@1 $generated@@138) 14))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) $generated@@138) (= (type $generated@@141) $generated@@138)) (and ($generated@@137 $generated@@140) ($generated@@137 $generated@@141))) (= ($generated@@136 $generated@@140 $generated@@141) (= ($generated@@139 $generated@@140) ($generated@@139 $generated@@141))))
 :pattern ( ($generated@@136 $generated@@140 $generated@@141) ($generated@@137 $generated@@140))
 :pattern ( ($generated@@136 $generated@@140 $generated@@141) ($generated@@137 $generated@@141))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@138) (= (type $generated@@145) $generated@@138)) (and ($generated@@142 $generated@@144) ($generated@@142 $generated@@145))) (= ($generated@@136 $generated@@144 $generated@@145) (= ($generated@@143 $generated@@144) ($generated@@143 $generated@@145))))
 :pattern ( ($generated@@136 $generated@@144 $generated@@145) ($generated@@142 $generated@@144))
 :pattern ( ($generated@@136 $generated@@144 $generated@@145) ($generated@@142 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@79 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@79 0)))
)))
(assert (= (type $generated@@151) $generated@@68))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@138) (or ($generated@@150 $generated@@152) (and (not (= 1 $generated@@148)) ($generated@@146 $generated@@152 $generated@@151)))) true)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@138) (or ($generated@@154 $generated@@155) (and (not (= 1 $generated@@148)) ($generated@@146 $generated@@155 $generated@@151)))) true)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@158 $generated@@159)) $generated@@68)
 :pattern ( ($generated@@157 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@68) (= (type $generated@@161) $generated@@68)) (= (type $generated@@162) $generated@@138)) ($generated@@146 $generated@@162 ($generated@@157 $generated@@160 $generated@@161))) ($generated@@156 $generated@@162))
 :pattern ( ($generated@@156 $generated@@162) ($generated@@146 $generated@@162 ($generated@@157 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@138) (= (type $generated@@170) $generated@@138)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@68)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@80 $generated@@166 $generated@@2)) (= (type $generated@@175) $generated@@68)) ($generated@@146 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@146 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@81 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@71 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@81) (= (type $generated@@226) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@227) ($generated@@70 $generated@@4))) (= (type $generated@@229) $generated@@81)) (= (type $generated@@230) ($generated@@70 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@138)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@68) (= (type $generated@@237) $generated@@68)) (= (type $generated@@238) $generated@@166)) (= (type $generated@@239) $generated@@166)) (= ($generated@@146 ($generated@@232 $generated@@238 $generated@@239) ($generated@@157 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@146 ($generated@@232 $generated@@238 $generated@@239) ($generated@@157 $generated@@236 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@138) (= (type $generated@@241) $generated@@138)) (= ($generated@@163 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@163 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@138) (= (type $generated@@243) $generated@@138)) (= ($generated@@136 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@136 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@80 $generated@@166 $generated@@4)) (= (type $generated@@247) $generated@@68)) (= ($generated@@146 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@166) ($generated@@0 ($generated@@85 $generated@@246 $generated@@248))) ($generated@@233 $generated@@248 $generated@@247))
 :pattern ( ($generated@@85 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@146 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@68)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@166 $generated@@4)) (= (type $generated@@252) $generated@@68)) (= ($generated@@146 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@166) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@233 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@146 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@254 $generated@@255) $generated@@255)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@256 $generated@@259) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@262) $generated@@68) (= (type $generated@@263) $generated@@68)) (= (type $generated@@264) $generated@@166)) (= (type $generated@@265) $generated@@166)) (= (type $generated@@266) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@260 $generated@@266)) (= ($generated@@78 ($generated@@232 $generated@@264 $generated@@265) ($generated@@157 $generated@@262 $generated@@263) $generated@@266)  (and ($generated@@261 $generated@@264 $generated@@262 $generated@@266) ($generated@@261 $generated@@265 $generated@@263 $generated@@266))))
 :pattern ( ($generated@@78 ($generated@@232 $generated@@264 $generated@@265) ($generated@@157 $generated@@262 $generated@@263) $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@72)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (= (type $generated@@269) $generated@@138) (= ($generated@@156 $generated@@269) (= ($generated@@267 $generated@@269) $generated@@61)))
 :pattern ( ($generated@@156 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@138) (= ($generated@@137 $generated@@270) (= ($generated@@267 $generated@@270) $generated@@63)))
 :pattern ( ($generated@@137 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@138) (= ($generated@@142 $generated@@271) (= ($generated@@267 $generated@@271) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@138) ($generated@@156 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@166) (= (type $generated@@274) $generated@@166)) (= $generated@@272 ($generated@@232 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@156 $generated@@272))
)))
(assert  (and (and (forall (($generated@@279 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@279)) 17)) (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
))) (forall (($generated@@281 T@T) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@277 $generated@@281))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@282)) 0)
 :pattern ( ($generated@@275 $generated@@282))
)))
(assert (forall (($generated@@284 Int) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@138)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@138) ($generated@@137 $generated@@285)) (exists (($generated@@286 Int) ) (= $generated@@285 ($generated@@283 $generated@@286))))
 :pattern ( ($generated@@137 $generated@@285))
)))
(assert (forall (($generated@@288 Int) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@138)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@138) ($generated@@142 $generated@@289)) (exists (($generated@@290 Int) ) (= $generated@@289 ($generated@@287 $generated@@290))))
 :pattern ( ($generated@@142 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@166)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@68) (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@261 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@78 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@261 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@80 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@83 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@80 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@85 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 18)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@80 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@85 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@85 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 19)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@80 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@85 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@85 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@83 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@80 $generated@@339 $generated@@2)) (= ($generated@@172 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (and (<= 0 ($generated ($generated@@85 $generated@@338 $generated@@340))) (<= ($generated ($generated@@85 $generated@@338 $generated@@340)) ($generated@@296 $generated@@338))))
 :pattern ( ($generated@@85 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@172 $generated@@338))
)))
(assert (forall (($generated@@342 T@T) ($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@341 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@233 $generated@@344 $generated@@151)) (and (= ($generated@@291 ($generated@@341 $generated@@138 $generated@@344)) $generated@@344) ($generated@@146 ($generated@@341 $generated@@138 $generated@@344) $generated@@151)))
 :pattern ( ($generated@@233 $generated@@344 $generated@@151))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@306 (type $generated@@345))))
(let (($generated@@347 ($generated@@305 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@304 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@303 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@85 ($generated@@302 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@302 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@306 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@80 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@306 (type $generated@@352))))
(let (($generated@@354 ($generated@@305 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@304 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@303 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@324 (type $generated@@356))))
(let (($generated@@358 ($generated@@323 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@322 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@321 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@320 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@324 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@80 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@324 (type $generated@@363))))
(let (($generated@@365 ($generated@@323 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@322 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@321 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@80 $generated@@166 $generated@@2)) (= (type $generated@@368) $generated@@68)) (= ($generated@@146 $generated@@367 ($generated@@171 $generated@@368)) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@166) (< 0 ($generated ($generated@@85 $generated@@367 $generated@@369)))) ($generated@@233 $generated@@369 $generated@@368))
 :pattern ( ($generated@@85 $generated@@367 $generated@@369))
))))
 :pattern ( ($generated@@146 $generated@@367 ($generated@@171 $generated@@368)))
)))
(assert (forall (($generated@@370 Int) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@260 $generated@@371)) (= ($generated@@78 ($generated@@283 $generated@@370) $generated@@151 $generated@@371) ($generated@@78 ($generated@@8 $generated@@370) $generated@@46 $generated@@371)))
 :pattern ( ($generated@@78 ($generated@@283 $generated@@370) $generated@@151 $generated@@371))
)))
(assert (forall (($generated@@372 Int) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@260 $generated@@373)) (= ($generated@@78 ($generated@@287 $generated@@372) $generated@@151 $generated@@373) ($generated@@78 ($generated@@8 $generated@@372) $generated@@46 $generated@@373)))
 :pattern ( ($generated@@78 ($generated@@287 $generated@@372) $generated@@151 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@138) ($generated@@374 $generated@@375)) (or ($generated@@137 $generated@@375) ($generated@@142 $generated@@375)))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@80 $generated@@166 $generated@@4)) (= (type $generated@@377) $generated@@68)) (= (type $generated@@378) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@376 ($generated@@244 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@166) ($generated@@0 ($generated@@85 $generated@@376 $generated@@379))) ($generated@@261 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@85 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@78 $generated@@376 ($generated@@244 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@80 $generated@@166 $generated@@4)) (= (type $generated@@381) $generated@@68)) (= (type $generated@@382) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@380 ($generated@@249 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@166) ($generated@@0 ($generated@@85 $generated@@380 $generated@@383))) ($generated@@261 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@85 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@78 $generated@@380 ($generated@@249 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@85 ($generated@@297 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@85 ($generated@@297 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@80 $generated@@166 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@306 (type $generated@@389))))
(let (($generated@@391 ($generated@@305 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@80 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@304 $generated@@166 $generated@@166)) (= (type $generated@@393) $generated@@166)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@85 ($generated@@302 $generated@@392) ($generated@@164 ($generated@@341 $generated@@138 $generated@@393)))) (= ($generated@@85 ($generated@@387 $generated@@392) ($generated@@164 ($generated@@341 $generated@@138 $generated@@393))) ($generated@@165 ($generated@@341 $generated@@138 $generated@@393))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@80 $generated@@166 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@324 (type $generated@@397))))
(let (($generated@@399 ($generated@@323 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@80 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@401) $generated@@166)) (= ($generated@@0 ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@85 ($generated@@320 $generated@@400) ($generated@@164 ($generated@@341 $generated@@138 $generated@@401)))) (= ($generated@@85 ($generated@@395 $generated@@400) ($generated@@164 ($generated@@341 $generated@@138 $generated@@401))) ($generated@@165 ($generated@@341 $generated@@138 $generated@@401))))))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@305 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@304 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@85 ($generated@@349 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@85 ($generated@@302 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@85 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@85 ($generated@@302 $generated@@402) $generated@@406))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@85 ($generated@@349 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@323 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@322 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@85 ($generated@@360 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@85 ($generated@@320 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@85 ($generated@@360 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@68)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@304 $generated@@166 $generated@@166)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@166) ($generated@@0 ($generated@@85 ($generated@@302 $generated@@415) $generated@@419))) (and ($generated@@261 ($generated@@85 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@261 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@302 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@68)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@166) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@423) $generated@@427))) (and ($generated@@261 ($generated@@85 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@261 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 Int) ($generated@@430 Int) ) (! (= ($generated@@428 $generated@@429 $generated@@430) (div $generated@@429 $generated@@430))
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@138) ($generated@@146 $generated@@431 $generated@@151)) (or ($generated@@137 $generated@@431) ($generated@@142 $generated@@431)))
 :pattern ( ($generated@@142 $generated@@431) ($generated@@146 $generated@@431 $generated@@151))
 :pattern ( ($generated@@137 $generated@@431) ($generated@@146 $generated@@431 $generated@@151))
)))
(assert (forall (($generated@@433 T@T) ) (! (= (type ($generated@@432 $generated@@433)) ($generated@@80 $generated@@433 $generated@@4))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@324 (type $generated@@434))))
(let (($generated@@436 ($generated@@323 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@322 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@321 $generated@@436 $generated@@435)) (= ($generated@@320 $generated@@434) ($generated@@432 $generated@@436))))))
 :pattern ( ($generated@@320 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@324 (type $generated@@437))))
(let (($generated@@439 ($generated@@323 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@322 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@321 $generated@@439 $generated@@438)) (= ($generated@@360 $generated@@437) ($generated@@432 $generated@@438))))))
 :pattern ( ($generated@@360 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@324 (type $generated@@440))))
(let (($generated@@442 ($generated@@323 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@322 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@321 $generated@@442 $generated@@441)) (= ($generated@@394 $generated@@440) ($generated@@432 $generated@@166))))))
 :pattern ( ($generated@@394 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@306 (type $generated@@443))))
(let (($generated@@445 ($generated@@305 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@304 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@303 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@166) (= (type $generated@@447) $generated@@166)) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@443) ($generated@@291 ($generated@@232 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@386 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@324 (type $generated@@448))))
(let (($generated@@450 ($generated@@323 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@322 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@321 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@166) (= (type $generated@@452) $generated@@166)) ($generated@@0 ($generated@@85 ($generated@@394 $generated@@448) ($generated@@291 ($generated@@232 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@394 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@233 $generated@@453 $generated@@46)) (and (= ($generated@@291 ($generated@@341 $generated@@2 $generated@@453)) $generated@@453) ($generated@@146 ($generated@@341 $generated@@2 $generated@@453) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@453 $generated@@46))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@233 $generated@@454 $generated@@47)) (and (= ($generated@@291 ($generated@@341 $generated@@3 $generated@@454)) $generated@@454) ($generated@@146 ($generated@@341 $generated@@3 $generated@@454) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@454 $generated@@47))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@166) ($generated@@233 $generated@@455 $generated@@44)) (and (= ($generated@@291 ($generated@@341 $generated@@4 $generated@@455)) $generated@@455) ($generated@@146 ($generated@@341 $generated@@4 $generated@@455) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@455 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@456) 20))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@166) ($generated@@233 $generated@@457 $generated@@45)) (and (= ($generated@@291 ($generated@@341 $generated@@456 $generated@@457)) $generated@@457) ($generated@@146 ($generated@@341 $generated@@456 $generated@@457) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@457 $generated@@45))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@68) (= ($generated@@233 ($generated@@291 $generated@@458) $generated@@459) ($generated@@146 $generated@@458 $generated@@459)))
 :pattern ( ($generated@@233 ($generated@@291 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@83 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@80 $generated@@461 $generated@@2)) (<= 0 ($generated@@296 $generated@@460))))
 :pattern ( ($generated@@296 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@278 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@277 $generated@@463)) (<= 0 ($generated@@276 $generated@@462))))
 :pattern ( ($generated@@276 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@68) (= (type $generated@@467) $generated@@68)) (= ($generated@@464 ($generated@@412 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@412 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@468 ($generated@@412 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@412 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@76 ($generated@@412 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@420 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@420 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@68)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@478 ($generated@@420 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@420 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@76 ($generated@@420 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@166) (= (type $generated@@485) $generated@@166)) (= ($generated@@267 ($generated@@232 $generated@@484 $generated@@485)) $generated@@61))
 :pattern ( ($generated@@232 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@157 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@157 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@157 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@157 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@166) (= (type $generated@@495) $generated@@166)) (= ($generated@@164 ($generated@@232 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@232 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@166) (= (type $generated@@497) $generated@@166)) (= ($generated@@165 ($generated@@232 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@232 $generated@@496 $generated@@497))
)))
(assert  (and (forall (($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@498 $generated@@500))
)) (forall (($generated@@501 T@U) ($generated@@502 Int) ) (! (let (($generated@@503 ($generated@@278 (type $generated@@501))))
(= (type ($generated@@499 $generated@@501 $generated@@502)) $generated@@503))
 :pattern ( ($generated@@499 $generated@@501 $generated@@502))
))))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@277 $generated@@166)) (= (type $generated@@505) $generated@@68)) (= (type $generated@@506) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@504 ($generated@@498 $generated@@505) $generated@@506) (forall (($generated@@507 Int) ) (!  (=> (and (<= 0 $generated@@507) (< $generated@@507 ($generated@@276 $generated@@504))) ($generated@@261 ($generated@@499 $generated@@504 $generated@@507) $generated@@505 $generated@@506))
 :pattern ( ($generated@@499 $generated@@504 $generated@@507))
))))
 :pattern ( ($generated@@78 $generated@@504 ($generated@@498 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@509 Int) ) (! (= ($generated@@508 ($generated@@79 $generated@@509)) $generated@@509)
 :pattern ( ($generated@@79 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@68) (= ($generated@@510 ($generated@@244 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@244 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@76 ($generated@@244 $generated@@513)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@68) (= ($generated@@514 ($generated@@249 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@249 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@76 ($generated@@249 $generated@@517)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@68) (= ($generated@@518 ($generated@@171 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@171 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@76 ($generated@@171 $generated@@521)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@68) (= ($generated@@522 ($generated@@498 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@498 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@76 ($generated@@498 $generated@@525)) $generated@@57))
 :pattern ( ($generated@@498 $generated@@525))
)))
(assert (forall (($generated@@526 Int) ) (! (= ($generated@@267 ($generated@@283 $generated@@526)) $generated@@63)
 :pattern ( ($generated@@283 $generated@@526))
)))
(assert (forall (($generated@@527 Int) ) (! (= ($generated@@139 ($generated@@283 $generated@@527)) $generated@@527)
 :pattern ( ($generated@@283 $generated@@527))
)))
(assert (forall (($generated@@528 Int) ) (! (= ($generated@@267 ($generated@@287 $generated@@528)) $generated@@65)
 :pattern ( ($generated@@287 $generated@@528))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@143 ($generated@@287 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@287 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(= ($generated@@341 $generated@@531 ($generated@@291 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@291 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@304 $generated@@166 $generated@@166)) (= (type $generated@@533) $generated@@68)) (= (type $generated@@534) $generated@@68)) (= ($generated@@146 $generated@@532 ($generated@@412 $generated@@533 $generated@@534)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@166) ($generated@@0 ($generated@@85 ($generated@@302 $generated@@532) $generated@@535))) (and ($generated@@233 ($generated@@85 ($generated@@387 $generated@@532) $generated@@535) $generated@@534) ($generated@@233 $generated@@535 $generated@@533)))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@532) $generated@@535))
 :pattern ( ($generated@@85 ($generated@@302 $generated@@532) $generated@@535))
))))
 :pattern ( ($generated@@146 $generated@@532 ($generated@@412 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@537) $generated@@68)) (= (type $generated@@538) $generated@@68)) (= ($generated@@146 $generated@@536 ($generated@@420 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@536) $generated@@539))) (and ($generated@@233 ($generated@@85 ($generated@@395 $generated@@536) $generated@@539) $generated@@538) ($generated@@233 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@536) $generated@@539))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@146 $generated@@536 ($generated@@420 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@166) (= (type $generated@@543) $generated@@166)) (< ($generated@@540 $generated@@542) ($generated@@541 ($generated@@232 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@232 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@166) (= (type $generated@@545) $generated@@166)) (< ($generated@@540 $generated@@545) ($generated@@541 ($generated@@232 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@232 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@146 ($generated@@283 $generated@@546) $generated@@151) ($generated@@146 ($generated@@8 $generated@@546) $generated@@46))
 :pattern ( ($generated@@146 ($generated@@283 $generated@@546) $generated@@151))
)))
(assert (forall (($generated@@547 Int) ) (! (= ($generated@@146 ($generated@@287 $generated@@547) $generated@@151) ($generated@@146 ($generated@@8 $generated@@547) $generated@@46))
 :pattern ( ($generated@@146 ($generated@@287 $generated@@547) $generated@@151))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@166) (= (type $generated@@549) $generated@@68)) (= (type $generated@@550) $generated@@68)) ($generated@@233 $generated@@548 ($generated@@412 $generated@@549 $generated@@550))) (and (= ($generated@@291 ($generated@@341 ($generated@@304 $generated@@166 $generated@@166) $generated@@548)) $generated@@548) ($generated@@146 ($generated@@341 ($generated@@304 $generated@@166 $generated@@166) $generated@@548) ($generated@@412 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@233 $generated@@548 ($generated@@412 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@166) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) $generated@@68)) ($generated@@233 $generated@@551 ($generated@@420 $generated@@552 $generated@@553))) (and (= ($generated@@291 ($generated@@341 ($generated@@322 $generated@@166 $generated@@166) $generated@@551)) $generated@@551) ($generated@@146 ($generated@@341 ($generated@@322 $generated@@166 $generated@@166) $generated@@551) ($generated@@420 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@233 $generated@@551 ($generated@@420 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@68) (= (type $generated@@555) $generated@@68)) (= (type $generated@@556) $generated@@166)) ($generated@@233 $generated@@556 ($generated@@157 $generated@@554 $generated@@555))) (and (= ($generated@@291 ($generated@@341 $generated@@138 $generated@@556)) $generated@@556) ($generated@@146 ($generated@@341 $generated@@138 $generated@@556) ($generated@@157 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@233 $generated@@556 ($generated@@157 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (not ($generated@@0 ($generated@@85 ($generated@@432 $generated@@558) $generated@@557))))
 :pattern ( (let (($generated@@558 (type $generated@@557)))
($generated@@85 ($generated@@432 $generated@@558) $generated@@557)))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@73)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@68) (= (type $generated@@562) $generated@@68)) (and (= ($generated@@76 ($generated@@157 $generated@@561 $generated@@562)) $generated@@62) (= ($generated@@559 ($generated@@157 $generated@@561 $generated@@562)) $generated@@66)))
 :pattern ( ($generated@@157 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@138) (= (type $generated@@564) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@564) (and ($generated@@137 $generated@@563) ($generated@@78 $generated@@563 $generated@@151 $generated@@564)))) ($generated@@78 ($generated@@8 ($generated@@139 $generated@@563)) $generated@@46 $generated@@564))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@139 $generated@@563)) $generated@@46 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@138) (= (type $generated@@566) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@566) (and ($generated@@142 $generated@@565) ($generated@@78 $generated@@565 $generated@@151 $generated@@566)))) ($generated@@78 ($generated@@8 ($generated@@143 $generated@@565)) $generated@@46 $generated@@566))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@143 $generated@@565)) $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@138) (= ($generated@@540 ($generated@@291 $generated@@567)) ($generated@@541 $generated@@567)))
 :pattern ( ($generated@@540 ($generated@@291 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@166) ($generated@@233 $generated@@568 ($generated@@79 0))) (and (= ($generated@@291 ($generated@@341 $generated@@2 $generated@@568)) $generated@@568) ($generated@@146 ($generated@@341 ($generated@@80 $generated@@166 $generated@@4) $generated@@568) ($generated@@79 0))))
 :pattern ( ($generated@@233 $generated@@568 ($generated@@79 0)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@166) (= (type $generated@@570) $generated@@68)) ($generated@@233 $generated@@569 ($generated@@244 $generated@@570))) (and (= ($generated@@291 ($generated@@341 ($generated@@80 $generated@@166 $generated@@4) $generated@@569)) $generated@@569) ($generated@@146 ($generated@@341 ($generated@@80 $generated@@166 $generated@@4) $generated@@569) ($generated@@244 $generated@@570))))
 :pattern ( ($generated@@233 $generated@@569 ($generated@@244 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@166) (= (type $generated@@572) $generated@@68)) ($generated@@233 $generated@@571 ($generated@@249 $generated@@572))) (and (= ($generated@@291 ($generated@@341 ($generated@@80 $generated@@166 $generated@@4) $generated@@571)) $generated@@571) ($generated@@146 ($generated@@341 ($generated@@80 $generated@@166 $generated@@4) $generated@@571) ($generated@@249 $generated@@572))))
 :pattern ( ($generated@@233 $generated@@571 ($generated@@249 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@166) (= (type $generated@@574) $generated@@68)) ($generated@@233 $generated@@573 ($generated@@171 $generated@@574))) (and (= ($generated@@291 ($generated@@341 ($generated@@80 $generated@@166 $generated@@2) $generated@@573)) $generated@@573) ($generated@@146 ($generated@@341 ($generated@@80 $generated@@166 $generated@@2) $generated@@573) ($generated@@171 $generated@@574))))
 :pattern ( ($generated@@233 $generated@@573 ($generated@@171 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@166) (= (type $generated@@576) $generated@@68)) ($generated@@233 $generated@@575 ($generated@@498 $generated@@576))) (and (= ($generated@@291 ($generated@@341 ($generated@@277 $generated@@166) $generated@@575)) $generated@@575) ($generated@@146 ($generated@@341 ($generated@@277 $generated@@166) $generated@@575) ($generated@@498 $generated@@576))))
 :pattern ( ($generated@@233 $generated@@575 ($generated@@498 $generated@@576)))
)))
(assert (= ($generated@@76 $generated@@151) $generated@@64))
(assert (= ($generated@@559 $generated@@151) $generated@@67))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@80 $generated@@166 $generated@@2)) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@577 ($generated@@171 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@166) (< 0 ($generated ($generated@@85 $generated@@577 $generated@@580)))) ($generated@@261 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@85 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@78 $generated@@577 ($generated@@171 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@138) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@583) (and ($generated@@156 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@68) ($generated@@78 $generated@@581 ($generated@@157 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@78 $generated@@581 ($generated@@157 $generated@@582 $generated@@584) $generated@@583))
))))) ($generated@@261 ($generated@@164 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@261 ($generated@@164 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@138) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@587) (and ($generated@@156 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@68) ($generated@@78 $generated@@585 ($generated@@157 $generated@@588 $generated@@586) $generated@@587))
 :pattern ( ($generated@@78 $generated@@585 ($generated@@157 $generated@@588 $generated@@586) $generated@@587))
))))) ($generated@@261 ($generated@@165 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@261 ($generated@@165 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@166) (= (type $generated@@590) $generated@@166)) (= ($generated@@232 ($generated@@256 $generated@@589) ($generated@@256 $generated@@590)) ($generated@@256 ($generated@@232 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@232 ($generated@@256 $generated@@589) ($generated@@256 $generated@@590)))
)))
(assert (forall (($generated@@591 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@254 $generated@@591))) ($generated@@256 ($generated@@291 ($generated@@8 $generated@@591))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@254 $generated@@591))))
)))
(assert (forall (($generated@@592 Int) ) (! (= ($generated@@283 ($generated@@254 $generated@@592)) ($generated@@256 ($generated@@283 $generated@@592)))
 :pattern ( ($generated@@283 ($generated@@254 $generated@@592)))
)))
(assert (forall (($generated@@593 Int) ) (! (= ($generated@@287 ($generated@@254 $generated@@593)) ($generated@@256 ($generated@@287 $generated@@593)))
 :pattern ( ($generated@@287 ($generated@@254 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (! (= ($generated@@291 ($generated@@256 $generated@@594)) ($generated@@256 ($generated@@291 $generated@@594)))
 :pattern ( ($generated@@291 ($generated@@256 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@278 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@277 $generated@@596)) (= ($generated@@276 $generated@@595) 0)) (= $generated@@595 ($generated@@275 $generated@@596))))
 :pattern ( ($generated@@276 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@598)))
 (=> (and (and (= (type $generated@@597) ($generated@@80 $generated@@600 $generated@@2)) (= (type $generated@@599) $generated@@2)) (<= 0 ($generated $generated@@599))) (= ($generated@@296 ($generated@@86 $generated@@597 $generated@@598 $generated@@599)) (+ (- ($generated@@296 $generated@@597) ($generated ($generated@@85 $generated@@597 $generated@@598))) ($generated $generated@@599)))))
 :pattern ( ($generated@@296 ($generated@@86 $generated@@597 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@602) $generated@@2)) ($generated@@78 $generated@@602 $generated@@46 $generated@@601))
 :pattern ( ($generated@@78 $generated@@602 $generated@@46 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@604) $generated@@3)) ($generated@@78 $generated@@604 $generated@@47 $generated@@603))
 :pattern ( ($generated@@78 $generated@@604 $generated@@47 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@606) $generated@@4)) ($generated@@78 $generated@@606 $generated@@44 $generated@@605))
 :pattern ( ($generated@@78 $generated@@606 $generated@@44 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@608) $generated@@456)) ($generated@@78 $generated@@608 $generated@@45 $generated@@607))
 :pattern ( ($generated@@78 $generated@@608 $generated@@45 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@610) $generated@@166)) ($generated@@78 $generated@@610 $generated@@48 $generated@@609))
 :pattern ( ($generated@@78 $generated@@610 $generated@@48 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@277 $generated@@166)) (= (type $generated@@612) $generated@@68)) (= ($generated@@146 $generated@@611 ($generated@@498 $generated@@612)) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@276 $generated@@611))) ($generated@@233 ($generated@@499 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@499 $generated@@611 $generated@@613))
))))
 :pattern ( ($generated@@146 $generated@@611 ($generated@@498 $generated@@612)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 Int) ) (!  (=> (= (type $generated@@615) ($generated@@277 $generated@@166)) (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@276 $generated@@615))) (< ($generated@@541 ($generated@@341 $generated@@138 ($generated@@499 $generated@@615 $generated@@616))) ($generated@@614 $generated@@615))))
 :pattern ( ($generated@@541 ($generated@@341 $generated@@138 ($generated@@499 $generated@@615 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@304 $generated@@166 $generated@@166)) (= (type $generated@@618) $generated@@68)) (= (type $generated@@619) $generated@@68)) ($generated@@146 $generated@@617 ($generated@@412 $generated@@618 $generated@@619))) (and (and ($generated@@146 ($generated@@302 $generated@@617) ($generated@@244 $generated@@618)) ($generated@@146 ($generated@@349 $generated@@617) ($generated@@244 $generated@@619))) ($generated@@146 ($generated@@386 $generated@@617) ($generated@@244 ($generated@@157 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@146 $generated@@617 ($generated@@412 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@621) $generated@@68)) (= (type $generated@@622) $generated@@68)) ($generated@@146 $generated@@620 ($generated@@420 $generated@@621 $generated@@622))) (and (and ($generated@@146 ($generated@@320 $generated@@620) ($generated@@249 $generated@@621)) ($generated@@146 ($generated@@360 $generated@@620) ($generated@@249 $generated@@622))) ($generated@@146 ($generated@@394 $generated@@620) ($generated@@249 ($generated@@157 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@146 $generated@@620 ($generated@@420 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@2) ($generated@@146 $generated@@623 $generated@@46))
 :pattern ( ($generated@@146 $generated@@623 $generated@@46))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@3) ($generated@@146 $generated@@624 $generated@@47))
 :pattern ( ($generated@@146 $generated@@624 $generated@@47))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@4) ($generated@@146 $generated@@625 $generated@@44))
 :pattern ( ($generated@@146 $generated@@625 $generated@@44))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@456) ($generated@@146 $generated@@626 $generated@@45))
 :pattern ( ($generated@@146 $generated@@626 $generated@@45))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@166) ($generated@@146 $generated@@627 $generated@@48))
 :pattern ( ($generated@@146 $generated@@627 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () Int)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@628) $generated@@138) (= (type $generated@@633) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@636) ($generated@@178 $generated@@81 $generated@@4))) (= (type $generated@@637) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@639 true))
(let (($generated@@640  (=> (and (= $generated@@628 ($generated@@287 $generated@@629)) (= (ControlFlow 0 12) (- 0 11))) false)))
(let (($generated@@641  (=> (not (= $generated@@628 ($generated@@283 $generated@@630))) (and (=> (= (ControlFlow 0 14) 12) $generated@@640) (=> (= (ControlFlow 0 14) 13) $generated@@639)))))
(let (($generated@@642  (=> (and (and (= $generated@@628 ($generated@@283 $generated@@630)) (= $generated@@631 $generated@@630)) (and ($generated@@146 ($generated@@8 $generated@@631) $generated@@46) (= $generated@@632 $generated@@631))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (not (= $generated@@632 0))) (=> (= (ControlFlow 0 9) (- 0 8)) (= ($generated@@149 $generated@@628) (let (($generated@@643 ($generated@@139 $generated@@628)))
(= ($generated@@254 2) ($generated@@428 10 $generated@@643)))))))))
(let (($generated@@644  (=> ($generated@@78 $generated@@628 $generated@@151 $generated@@633) (=> (and ($generated@@150 $generated@@628) ($generated@@150 $generated@@628)) (and (=> (= (ControlFlow 0 15) 9) $generated@@642) (=> (= (ControlFlow 0 15) 14) $generated@@641))))))
(let (($generated@@645 true))
(let (($generated@@646 true))
(let (($generated@@647  (=> (not (= $generated@@628 ($generated@@283 $generated@@630))) (and (=> (= (ControlFlow 0 7) 5) $generated@@646) (=> (= (ControlFlow 0 7) 6) $generated@@645)))))
(let (($generated@@648  (=> (= $generated@@628 ($generated@@283 $generated@@630)) (=> (and (and (and (= $generated@@634 $generated@@630) ($generated@@146 ($generated@@8 $generated@@634) $generated@@46)) (and (= $generated@@635 $generated@@634) (not (= $generated@@635 0)))) (and (and ($generated@@78 $generated@@628 $generated@@151 $generated@@633) ($generated@@154 $generated@@628)) (and ($generated@@154 $generated@@628) (= (ControlFlow 0 4) (- 0 3))))) (= (let (($generated@@649 ($generated@@139 $generated@@628)))
(= ($generated@@254 2) ($generated@@428 10 $generated@@649))) ($generated@@153 $generated@@628))))))
(let (($generated@@650 true))
(let (($generated@@651 true))
(let (($generated@@652  (=> (= $generated@@636 ($generated@@177 $generated@@637 $generated@@633 $generated@@60 false)) (and (and (and (and (=> (= (ControlFlow 0 16) 1) $generated@@651) (=> (= (ControlFlow 0 16) 15) $generated@@644)) (=> (= (ControlFlow 0 16) 2) $generated@@650)) (=> (= (ControlFlow 0 16) 4) $generated@@648)) (=> (= (ControlFlow 0 16) 7) $generated@@647)))))
(let (($generated@@653  (=> (and ($generated@@260 $generated@@633) ($generated@@638 $generated@@633)) (=> (and (and (and (and ($generated@@146 $generated@@628 $generated@@151) ($generated@@78 $generated@@628 $generated@@151 $generated@@633)) ($generated@@374 $generated@@628)) (= 2 $generated@@148)) (and (and (not ($generated@@149 $generated@@628)) (not ($generated@@153 $generated@@628))) (and ($generated@@136 $generated@@628 ($generated@@283 ($generated@@254 1))) (= (ControlFlow 0 17) 16)))) $generated@@652))))
$generated@@653))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U) Int)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U) Int)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@87 (Int Int) Int)
(declare-fun $generated@@88 (Int) Int)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@284 (Int) T@U)
(declare-fun $generated@@288 (Int) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@375 (T@U) Bool)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@617 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@80) 11) (= (type $generated@@83) $generated@@68)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@89 T@U) ) (!  (=> (and (= (type $generated@@89) $generated@@80) (or ($generated@@81 $generated@@89) (and (not (= 1 $generated@@78)) ($generated@@82 $generated@@89 $generated@@83)))) (= ($generated@@79 $generated@@89) (ite ($generated@@84 $generated@@89) (let (($generated@@90 ($generated@@85 $generated@@89)))
$generated@@90) (let (($generated@@91 ($generated@@86 $generated@@89)))
($generated@@87 ($generated@@88 2) $generated@@91)))))
 :pattern ( ($generated@@79 $generated@@89))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 12)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 13)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@71 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@71 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@68)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@80) (= (type $generated@@152) $generated@@80)) (and ($generated@@84 $generated@@151) ($generated@@84 $generated@@152))) (= ($generated@@150 $generated@@151 $generated@@152) (= ($generated@@85 $generated@@151) ($generated@@85 $generated@@152))))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152) ($generated@@84 $generated@@151))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152) ($generated@@84 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@80) (= (type $generated@@155) $generated@@80)) (and ($generated@@153 $generated@@154) ($generated@@153 $generated@@155))) (= ($generated@@150 $generated@@154 $generated@@155) (= ($generated@@86 $generated@@154) ($generated@@86 $generated@@155))))
 :pattern ( ($generated@@150 $generated@@154 $generated@@155) ($generated@@153 $generated@@154))
 :pattern ( ($generated@@150 $generated@@154 $generated@@155) ($generated@@153 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@82 $generated@@156 ($generated@@93 0)))
 :pattern ( ($generated@@82 $generated@@156 ($generated@@93 0)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@80) (or ($generated@@81 $generated@@157) (and (not (= 1 $generated@@78)) ($generated@@82 $generated@@157 $generated@@83)))) true)
 :pattern ( ($generated@@79 $generated@@157))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@68)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@68) (= (type $generated@@163) $generated@@68)) (= (type $generated@@164) $generated@@80)) ($generated@@82 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@82 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 15) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@80) (= (type $generated@@172) $generated@@80)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@68)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@94 $generated@@168 $generated@@2)) (= (type $generated@@177) $generated@@68)) ($generated@@82 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@82 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@95 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@71 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@95) (= (type $generated@@228) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@229) ($generated@@70 $generated@@4))) (= (type $generated@@231) $generated@@95)) (= (type $generated@@232) ($generated@@70 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@80)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@68) (= (type $generated@@239) $generated@@68)) (= (type $generated@@240) $generated@@168)) (= (type $generated@@241) $generated@@168)) (= ($generated@@82 ($generated@@234 $generated@@240 $generated@@241) ($generated@@159 $generated@@238 $generated@@239))  (and ($generated@@235 $generated@@240 $generated@@238) ($generated@@235 $generated@@241 $generated@@239))))
 :pattern ( ($generated@@82 ($generated@@234 $generated@@240 $generated@@241) ($generated@@159 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@80) (= (type $generated@@243) $generated@@80)) (= ($generated@@165 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@165 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@80) (= (type $generated@@245) $generated@@80)) (= ($generated@@150 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@150 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@68)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@94 $generated@@168 $generated@@4)) (= (type $generated@@249) $generated@@68)) (= ($generated@@82 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@168) ($generated@@0 ($generated@@99 $generated@@248 $generated@@250))) ($generated@@235 $generated@@250 $generated@@249))
 :pattern ( ($generated@@99 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@82 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@68)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@94 $generated@@168 $generated@@4)) (= (type $generated@@254) $generated@@68)) (= ($generated@@82 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@168) ($generated@@0 ($generated@@99 $generated@@253 $generated@@255))) ($generated@@235 $generated@@255 $generated@@254))
 :pattern ( ($generated@@99 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@82 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@256 Int) ) (! (= ($generated@@88 $generated@@256) $generated@@256)
 :pattern ( ($generated@@88 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@68) (= (type $generated@@264) $generated@@68)) (= (type $generated@@265) $generated@@168)) (= (type $generated@@266) $generated@@168)) (= (type $generated@@267) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@261 $generated@@267)) (= ($generated@@92 ($generated@@234 $generated@@265 $generated@@266) ($generated@@159 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@92 ($generated@@234 $generated@@265 $generated@@266) ($generated@@159 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@80) (= ($generated@@158 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@80) (= ($generated@@84 $generated@@271) (= ($generated@@268 $generated@@271) $generated@@63)))
 :pattern ( ($generated@@84 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@80) (= ($generated@@153 $generated@@272) (= ($generated@@268 $generated@@272) $generated@@65)))
 :pattern ( ($generated@@153 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@80) ($generated@@158 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@168) (= (type $generated@@275) $generated@@168)) (= $generated@@273 ($generated@@234 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@158 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@285 Int) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@80)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@80) ($generated@@84 $generated@@286)) (exists (($generated@@287 Int) ) (= $generated@@286 ($generated@@284 $generated@@287))))
 :pattern ( ($generated@@84 $generated@@286))
)))
(assert (forall (($generated@@289 Int) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@80)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@80) ($generated@@153 $generated@@290)) (exists (($generated@@291 Int) ) (= $generated@@290 ($generated@@288 $generated@@291))))
 :pattern ( ($generated@@153 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@168)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@68) (= (type $generated@@296) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@262 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@92 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@262 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@94 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@97 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@94 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@99 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 18)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@94 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@99 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@99 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@94 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@99 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@99 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@97 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@94 $generated@@340 $generated@@2)) (= ($generated@@174 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@99 $generated@@339 $generated@@341))) (<= ($generated ($generated@@99 $generated@@339 $generated@@341)) ($generated@@297 $generated@@339))))
 :pattern ( ($generated@@99 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@174 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@168) ($generated@@235 $generated@@345 $generated@@83)) (and (= ($generated@@292 ($generated@@342 $generated@@80 $generated@@345)) $generated@@345) ($generated@@82 ($generated@@342 $generated@@80 $generated@@345) $generated@@83)))
 :pattern ( ($generated@@235 $generated@@345 $generated@@83))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@307 (type $generated@@346))))
(let (($generated@@348 ($generated@@306 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@305 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@304 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@99 ($generated@@303 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@303 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@307 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@94 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@307 (type $generated@@353))))
(let (($generated@@355 ($generated@@306 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@305 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@304 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@99 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@325 (type $generated@@357))))
(let (($generated@@359 ($generated@@324 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@323 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@322 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@99 ($generated@@321 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@321 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@325 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@94 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@325 (type $generated@@364))))
(let (($generated@@366 ($generated@@324 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@323 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@322 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@99 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@94 $generated@@168 $generated@@2)) (= (type $generated@@369) $generated@@68)) (= ($generated@@82 $generated@@368 ($generated@@173 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@168) (< 0 ($generated ($generated@@99 $generated@@368 $generated@@370)))) ($generated@@235 $generated@@370 $generated@@369))
 :pattern ( ($generated@@99 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@82 $generated@@368 ($generated@@173 $generated@@369)))
)))
(assert (forall (($generated@@371 Int) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@94 $generated@@95 $generated@@96)) ($generated@@261 $generated@@372)) (= ($generated@@92 ($generated@@284 $generated@@371) $generated@@83 $generated@@372) ($generated@@92 ($generated@@8 $generated@@371) $generated@@46 $generated@@372)))
 :pattern ( ($generated@@92 ($generated@@284 $generated@@371) $generated@@83 $generated@@372))
)))
(assert (forall (($generated@@373 Int) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@94 $generated@@95 $generated@@96)) ($generated@@261 $generated@@374)) (= ($generated@@92 ($generated@@288 $generated@@373) $generated@@83 $generated@@374) ($generated@@92 ($generated@@8 $generated@@373) $generated@@46 $generated@@374)))
 :pattern ( ($generated@@92 ($generated@@288 $generated@@373) $generated@@83 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@80) ($generated@@375 $generated@@376)) (or ($generated@@84 $generated@@376) ($generated@@153 $generated@@376)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@80) (or ($generated@@81 ($generated@@257 $generated@@377)) (and (not (= 1 $generated@@78)) ($generated@@82 $generated@@377 $generated@@83)))) (= ($generated@@79 ($generated@@257 $generated@@377)) (ite ($generated@@84 ($generated@@257 $generated@@377)) (let (($generated@@378 ($generated@@88 ($generated@@85 ($generated@@257 $generated@@377)))))
$generated@@378) (let (($generated@@379 ($generated@@88 ($generated@@86 ($generated@@257 $generated@@377)))))
($generated@@88 ($generated@@87 ($generated@@88 2) $generated@@379))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@257 $generated@@377)))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@94 $generated@@168 $generated@@4)) (= (type $generated@@381) $generated@@68)) (= (type $generated@@382) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@380 ($generated@@246 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@168) ($generated@@0 ($generated@@99 $generated@@380 $generated@@383))) ($generated@@262 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@99 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@92 $generated@@380 ($generated@@246 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@384) ($generated@@94 $generated@@168 $generated@@4)) (= (type $generated@@385) $generated@@68)) (= (type $generated@@386) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@384 ($generated@@251 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@168) ($generated@@0 ($generated@@99 $generated@@384 $generated@@387))) ($generated@@262 $generated@@387 $generated@@385 $generated@@386))
 :pattern ( ($generated@@99 $generated@@384 $generated@@387))
))))
 :pattern ( ($generated@@92 $generated@@384 ($generated@@251 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(= ($generated ($generated@@99 ($generated@@298 $generated@@389) $generated@@388)) 0))
 :pattern ( (let (($generated@@389 (type $generated@@388)))
($generated@@99 ($generated@@298 $generated@@389) $generated@@388)))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@94 $generated@@168 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@307 (type $generated@@393))))
(let (($generated@@395 ($generated@@306 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@94 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@305 $generated@@168 $generated@@168)) (= (type $generated@@397) $generated@@168)) (= ($generated@@0 ($generated@@99 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@99 ($generated@@303 $generated@@396) ($generated@@166 ($generated@@342 $generated@@80 $generated@@397)))) (= ($generated@@99 ($generated@@391 $generated@@396) ($generated@@166 ($generated@@342 $generated@@80 $generated@@397))) ($generated@@167 ($generated@@342 $generated@@80 $generated@@397))))))
 :pattern ( ($generated@@99 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@94 $generated@@168 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@325 (type $generated@@401))))
(let (($generated@@403 ($generated@@324 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@94 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@405) $generated@@168)) (= ($generated@@0 ($generated@@99 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@99 ($generated@@321 $generated@@404) ($generated@@166 ($generated@@342 $generated@@80 $generated@@405)))) (= ($generated@@99 ($generated@@399 $generated@@404) ($generated@@166 ($generated@@342 $generated@@80 $generated@@405))) ($generated@@167 ($generated@@342 $generated@@80 $generated@@405))))))
 :pattern ( ($generated@@99 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@306 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@305 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@99 ($generated@@350 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@99 ($generated@@303 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@99 ($generated@@391 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@99 ($generated@@303 $generated@@406) $generated@@410))
 :pattern ( ($generated@@99 ($generated@@391 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@99 ($generated@@350 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@324 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@323 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@99 ($generated@@361 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@99 ($generated@@321 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@99 ($generated@@399 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@99 ($generated@@321 $generated@@411) $generated@@415))
 :pattern ( ($generated@@99 ($generated@@399 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@99 ($generated@@361 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@68)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@305 $generated@@168 $generated@@168)) (= (type $generated@@420) $generated@@68)) (= (type $generated@@421) $generated@@68)) (= (type $generated@@422) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@168) ($generated@@0 ($generated@@99 ($generated@@303 $generated@@419) $generated@@423))) (and ($generated@@262 ($generated@@99 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@262 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@99 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@99 ($generated@@303 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@92 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@68)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@428) $generated@@68)) (= (type $generated@@429) $generated@@68)) (= (type $generated@@430) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@168) ($generated@@0 ($generated@@99 ($generated@@321 $generated@@427) $generated@@431))) (and ($generated@@262 ($generated@@99 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@262 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@99 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@99 ($generated@@321 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@92 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@80) ($generated@@82 $generated@@432 $generated@@83)) (or ($generated@@84 $generated@@432) ($generated@@153 $generated@@432)))
 :pattern ( ($generated@@153 $generated@@432) ($generated@@82 $generated@@432 $generated@@83))
 :pattern ( ($generated@@84 $generated@@432) ($generated@@82 $generated@@432 $generated@@83))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@94 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@325 (type $generated@@435))))
(let (($generated@@437 ($generated@@324 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@323 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@322 $generated@@437 $generated@@436)) (= ($generated@@321 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@321 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@325 (type $generated@@438))))
(let (($generated@@440 ($generated@@324 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@323 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@322 $generated@@440 $generated@@439)) (= ($generated@@361 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@361 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@325 (type $generated@@441))))
(let (($generated@@443 ($generated@@324 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@323 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@322 $generated@@443 $generated@@442)) (= ($generated@@398 $generated@@441) ($generated@@433 $generated@@168))))))
 :pattern ( ($generated@@398 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@307 (type $generated@@444))))
(let (($generated@@446 ($generated@@306 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@305 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@304 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@168) (= (type $generated@@448) $generated@@168)) ($generated@@0 ($generated@@99 ($generated@@390 $generated@@444) ($generated@@292 ($generated@@234 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@390 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@325 (type $generated@@449))))
(let (($generated@@451 ($generated@@324 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@323 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@322 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@168) (= (type $generated@@453) $generated@@168)) ($generated@@0 ($generated@@99 ($generated@@398 $generated@@449) ($generated@@292 ($generated@@234 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@398 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@168) ($generated@@235 $generated@@454 $generated@@46)) (and (= ($generated@@292 ($generated@@342 $generated@@2 $generated@@454)) $generated@@454) ($generated@@82 ($generated@@342 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@235 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@168) ($generated@@235 $generated@@455 $generated@@47)) (and (= ($generated@@292 ($generated@@342 $generated@@3 $generated@@455)) $generated@@455) ($generated@@82 ($generated@@342 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@235 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@168) ($generated@@235 $generated@@456 $generated@@44)) (and (= ($generated@@292 ($generated@@342 $generated@@4 $generated@@456)) $generated@@456) ($generated@@82 ($generated@@342 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@235 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@168) ($generated@@235 $generated@@458 $generated@@45)) (and (= ($generated@@292 ($generated@@342 $generated@@457 $generated@@458)) $generated@@458) ($generated@@82 ($generated@@342 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@235 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@68) (= ($generated@@235 ($generated@@292 $generated@@459) $generated@@460) ($generated@@82 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@235 ($generated@@292 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@97 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@94 $generated@@462 $generated@@2)) (<= 0 ($generated@@297 $generated@@461))))
 :pattern ( ($generated@@297 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@279 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@278 $generated@@464)) (<= 0 ($generated@@277 $generated@@463))))
 :pattern ( ($generated@@277 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@68)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@68) (= (type $generated@@468) $generated@@68)) (= ($generated@@465 ($generated@@416 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@416 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@68)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@68) (= (type $generated@@472) $generated@@68)) (= ($generated@@469 ($generated@@416 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@416 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@68) (= (type $generated@@474) $generated@@68)) (= ($generated@@76 ($generated@@416 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@416 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@68)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@68) (= (type $generated@@478) $generated@@68)) (= ($generated@@475 ($generated@@424 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@424 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@68)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= ($generated@@479 ($generated@@424 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@424 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@68)) (= ($generated@@76 ($generated@@424 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@424 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@168) (= (type $generated@@486) $generated@@168)) (= ($generated@@268 ($generated@@234 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@234 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@487 ($generated@@159 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@159 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@68)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@491 ($generated@@159 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@159 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@168) (= (type $generated@@496) $generated@@168)) (= ($generated@@166 ($generated@@234 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@234 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@168) (= (type $generated@@498) $generated@@168)) (= ($generated@@167 ($generated@@234 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@234 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@279 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@278 $generated@@168)) (= (type $generated@@506) $generated@@68)) (= (type $generated@@507) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@277 $generated@@505))) ($generated@@262 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@92 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@93 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@93 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@511 ($generated@@246 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@246 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@76 ($generated@@246 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@515 ($generated@@251 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@251 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@76 ($generated@@251 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@76 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@76 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 Int) ) (! (= ($generated@@268 ($generated@@284 $generated@@527)) $generated@@63)
 :pattern ( ($generated@@284 $generated@@527))
)))
(assert (forall (($generated@@528 Int) ) (! (= ($generated@@85 ($generated@@284 $generated@@528)) $generated@@528)
 :pattern ( ($generated@@284 $generated@@528))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@268 ($generated@@288 $generated@@529)) $generated@@65)
 :pattern ( ($generated@@288 $generated@@529))
)))
(assert (forall (($generated@@530 Int) ) (! (= ($generated@@86 ($generated@@288 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@288 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(= ($generated@@342 $generated@@532 ($generated@@292 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@292 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@305 $generated@@168 $generated@@168)) (= (type $generated@@534) $generated@@68)) (= (type $generated@@535) $generated@@68)) (= ($generated@@82 $generated@@533 ($generated@@416 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@168) ($generated@@0 ($generated@@99 ($generated@@303 $generated@@533) $generated@@536))) (and ($generated@@235 ($generated@@99 ($generated@@391 $generated@@533) $generated@@536) $generated@@535) ($generated@@235 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@99 ($generated@@391 $generated@@533) $generated@@536))
 :pattern ( ($generated@@99 ($generated@@303 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@82 $generated@@533 ($generated@@416 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@538) $generated@@68)) (= (type $generated@@539) $generated@@68)) (= ($generated@@82 $generated@@537 ($generated@@424 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@168) ($generated@@0 ($generated@@99 ($generated@@321 $generated@@537) $generated@@540))) (and ($generated@@235 ($generated@@99 ($generated@@399 $generated@@537) $generated@@540) $generated@@539) ($generated@@235 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@99 ($generated@@399 $generated@@537) $generated@@540))
 :pattern ( ($generated@@99 ($generated@@321 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@82 $generated@@537 ($generated@@424 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@168) (= (type $generated@@544) $generated@@168)) (< ($generated@@541 $generated@@543) ($generated@@542 ($generated@@234 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@234 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@168) (= (type $generated@@546) $generated@@168)) (< ($generated@@541 $generated@@546) ($generated@@542 ($generated@@234 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@234 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 Int) ) (! (= ($generated@@82 ($generated@@284 $generated@@547) $generated@@83) ($generated@@82 ($generated@@8 $generated@@547) $generated@@46))
 :pattern ( ($generated@@82 ($generated@@284 $generated@@547) $generated@@83))
)))
(assert (forall (($generated@@548 Int) ) (! (= ($generated@@82 ($generated@@288 $generated@@548) $generated@@83) ($generated@@82 ($generated@@8 $generated@@548) $generated@@46))
 :pattern ( ($generated@@82 ($generated@@288 $generated@@548) $generated@@83))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@168) (= (type $generated@@550) $generated@@68)) (= (type $generated@@551) $generated@@68)) ($generated@@235 $generated@@549 ($generated@@416 $generated@@550 $generated@@551))) (and (= ($generated@@292 ($generated@@342 ($generated@@305 $generated@@168 $generated@@168) $generated@@549)) $generated@@549) ($generated@@82 ($generated@@342 ($generated@@305 $generated@@168 $generated@@168) $generated@@549) ($generated@@416 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@235 $generated@@549 ($generated@@416 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@168) (= (type $generated@@553) $generated@@68)) (= (type $generated@@554) $generated@@68)) ($generated@@235 $generated@@552 ($generated@@424 $generated@@553 $generated@@554))) (and (= ($generated@@292 ($generated@@342 ($generated@@323 $generated@@168 $generated@@168) $generated@@552)) $generated@@552) ($generated@@82 ($generated@@342 ($generated@@323 $generated@@168 $generated@@168) $generated@@552) ($generated@@424 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@235 $generated@@552 ($generated@@424 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@68) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) $generated@@168)) ($generated@@235 $generated@@557 ($generated@@159 $generated@@555 $generated@@556))) (and (= ($generated@@292 ($generated@@342 $generated@@80 $generated@@557)) $generated@@557) ($generated@@82 ($generated@@342 $generated@@80 $generated@@557) ($generated@@159 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@235 $generated@@557 ($generated@@159 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
 (not ($generated@@0 ($generated@@99 ($generated@@433 $generated@@559) $generated@@558))))
 :pattern ( (let (($generated@@559 (type $generated@@558)))
($generated@@99 ($generated@@433 $generated@@559) $generated@@558)))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@73)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@68) (= (type $generated@@563) $generated@@68)) (and (= ($generated@@76 ($generated@@159 $generated@@562 $generated@@563)) $generated@@62) (= ($generated@@560 ($generated@@159 $generated@@562 $generated@@563)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@80) (= (type $generated@@565) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@261 $generated@@565) (and ($generated@@84 $generated@@564) ($generated@@92 $generated@@564 $generated@@83 $generated@@565)))) ($generated@@92 ($generated@@8 ($generated@@85 $generated@@564)) $generated@@46 $generated@@565))
 :pattern ( ($generated@@92 ($generated@@8 ($generated@@85 $generated@@564)) $generated@@46 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@80) (= (type $generated@@567) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@261 $generated@@567) (and ($generated@@153 $generated@@566) ($generated@@92 $generated@@566 $generated@@83 $generated@@567)))) ($generated@@92 ($generated@@8 ($generated@@86 $generated@@566)) $generated@@46 $generated@@567))
 :pattern ( ($generated@@92 ($generated@@8 ($generated@@86 $generated@@566)) $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@568 Int) ($generated@@569 Int) ) (! (= ($generated@@87 $generated@@568 $generated@@569) (* $generated@@568 $generated@@569))
 :pattern ( ($generated@@87 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@80) (= ($generated@@541 ($generated@@292 $generated@@570)) ($generated@@542 $generated@@570)))
 :pattern ( ($generated@@541 ($generated@@292 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@168) ($generated@@235 $generated@@571 ($generated@@93 0))) (and (= ($generated@@292 ($generated@@342 $generated@@2 $generated@@571)) $generated@@571) ($generated@@82 ($generated@@342 ($generated@@94 $generated@@168 $generated@@4) $generated@@571) ($generated@@93 0))))
 :pattern ( ($generated@@235 $generated@@571 ($generated@@93 0)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@168) (= (type $generated@@573) $generated@@68)) ($generated@@235 $generated@@572 ($generated@@246 $generated@@573))) (and (= ($generated@@292 ($generated@@342 ($generated@@94 $generated@@168 $generated@@4) $generated@@572)) $generated@@572) ($generated@@82 ($generated@@342 ($generated@@94 $generated@@168 $generated@@4) $generated@@572) ($generated@@246 $generated@@573))))
 :pattern ( ($generated@@235 $generated@@572 ($generated@@246 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@168) (= (type $generated@@575) $generated@@68)) ($generated@@235 $generated@@574 ($generated@@251 $generated@@575))) (and (= ($generated@@292 ($generated@@342 ($generated@@94 $generated@@168 $generated@@4) $generated@@574)) $generated@@574) ($generated@@82 ($generated@@342 ($generated@@94 $generated@@168 $generated@@4) $generated@@574) ($generated@@251 $generated@@575))))
 :pattern ( ($generated@@235 $generated@@574 ($generated@@251 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@168) (= (type $generated@@577) $generated@@68)) ($generated@@235 $generated@@576 ($generated@@173 $generated@@577))) (and (= ($generated@@292 ($generated@@342 ($generated@@94 $generated@@168 $generated@@2) $generated@@576)) $generated@@576) ($generated@@82 ($generated@@342 ($generated@@94 $generated@@168 $generated@@2) $generated@@576) ($generated@@173 $generated@@577))))
 :pattern ( ($generated@@235 $generated@@576 ($generated@@173 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@168) (= (type $generated@@579) $generated@@68)) ($generated@@235 $generated@@578 ($generated@@499 $generated@@579))) (and (= ($generated@@292 ($generated@@342 ($generated@@278 $generated@@168) $generated@@578)) $generated@@578) ($generated@@82 ($generated@@342 ($generated@@278 $generated@@168) $generated@@578) ($generated@@499 $generated@@579))))
 :pattern ( ($generated@@235 $generated@@578 ($generated@@499 $generated@@579)))
)))
(assert (= ($generated@@76 $generated@@83) $generated@@64))
(assert (= ($generated@@560 $generated@@83) $generated@@67))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@94 $generated@@168 $generated@@2)) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@580 ($generated@@173 $generated@@581) $generated@@582) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@168) (< 0 ($generated ($generated@@99 $generated@@580 $generated@@583)))) ($generated@@262 $generated@@583 $generated@@581 $generated@@582))
 :pattern ( ($generated@@99 $generated@@580 $generated@@583))
))))
 :pattern ( ($generated@@92 $generated@@580 ($generated@@173 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@80) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@261 $generated@@586) (and ($generated@@158 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@68) ($generated@@92 $generated@@584 ($generated@@159 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@92 $generated@@584 ($generated@@159 $generated@@585 $generated@@587) $generated@@586))
))))) ($generated@@262 ($generated@@166 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@262 ($generated@@166 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@80) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@261 $generated@@590) (and ($generated@@158 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@68) ($generated@@92 $generated@@588 ($generated@@159 $generated@@591 $generated@@589) $generated@@590))
 :pattern ( ($generated@@92 $generated@@588 ($generated@@159 $generated@@591 $generated@@589) $generated@@590))
))))) ($generated@@262 ($generated@@167 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@262 ($generated@@167 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@168) (= (type $generated@@593) $generated@@168)) (= ($generated@@234 ($generated@@257 $generated@@592) ($generated@@257 $generated@@593)) ($generated@@257 ($generated@@234 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@234 ($generated@@257 $generated@@592) ($generated@@257 $generated@@593)))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@88 $generated@@594))) ($generated@@257 ($generated@@292 ($generated@@8 $generated@@594))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@88 $generated@@594))))
)))
(assert (forall (($generated@@595 Int) ) (! (= ($generated@@284 ($generated@@88 $generated@@595)) ($generated@@257 ($generated@@284 $generated@@595)))
 :pattern ( ($generated@@284 ($generated@@88 $generated@@595)))
)))
(assert (forall (($generated@@596 Int) ) (! (= ($generated@@288 ($generated@@88 $generated@@596)) ($generated@@257 ($generated@@288 $generated@@596)))
 :pattern ( ($generated@@288 ($generated@@88 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (! (= ($generated@@292 ($generated@@257 $generated@@597)) ($generated@@257 ($generated@@292 $generated@@597)))
 :pattern ( ($generated@@292 ($generated@@257 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@279 (type $generated@@598))))
 (=> (and (= (type $generated@@598) ($generated@@278 $generated@@599)) (= ($generated@@277 $generated@@598) 0)) (= $generated@@598 ($generated@@276 $generated@@599))))
 :pattern ( ($generated@@277 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@601)))
 (=> (and (and (= (type $generated@@600) ($generated@@94 $generated@@603 $generated@@2)) (= (type $generated@@602) $generated@@2)) (<= 0 ($generated $generated@@602))) (= ($generated@@297 ($generated@@100 $generated@@600 $generated@@601 $generated@@602)) (+ (- ($generated@@297 $generated@@600) ($generated ($generated@@99 $generated@@600 $generated@@601))) ($generated $generated@@602)))))
 :pattern ( ($generated@@297 ($generated@@100 $generated@@600 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@605) $generated@@2)) ($generated@@92 $generated@@605 $generated@@46 $generated@@604))
 :pattern ( ($generated@@92 $generated@@605 $generated@@46 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@607) $generated@@3)) ($generated@@92 $generated@@607 $generated@@47 $generated@@606))
 :pattern ( ($generated@@92 $generated@@607 $generated@@47 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@609) $generated@@4)) ($generated@@92 $generated@@609 $generated@@44 $generated@@608))
 :pattern ( ($generated@@92 $generated@@609 $generated@@44 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@611) $generated@@457)) ($generated@@92 $generated@@611 $generated@@45 $generated@@610))
 :pattern ( ($generated@@92 $generated@@611 $generated@@45 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@613) $generated@@168)) ($generated@@92 $generated@@613 $generated@@48 $generated@@612))
 :pattern ( ($generated@@92 $generated@@613 $generated@@48 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@278 $generated@@168)) (= (type $generated@@615) $generated@@68)) (= ($generated@@82 $generated@@614 ($generated@@499 $generated@@615)) (forall (($generated@@616 Int) ) (!  (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@277 $generated@@614))) ($generated@@235 ($generated@@500 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@500 $generated@@614 $generated@@616))
))))
 :pattern ( ($generated@@82 $generated@@614 ($generated@@499 $generated@@615)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 Int) ) (!  (=> (= (type $generated@@618) ($generated@@278 $generated@@168)) (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@277 $generated@@618))) (< ($generated@@542 ($generated@@342 $generated@@80 ($generated@@500 $generated@@618 $generated@@619))) ($generated@@617 $generated@@618))))
 :pattern ( ($generated@@542 ($generated@@342 $generated@@80 ($generated@@500 $generated@@618 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@305 $generated@@168 $generated@@168)) (= (type $generated@@621) $generated@@68)) (= (type $generated@@622) $generated@@68)) ($generated@@82 $generated@@620 ($generated@@416 $generated@@621 $generated@@622))) (and (and ($generated@@82 ($generated@@303 $generated@@620) ($generated@@246 $generated@@621)) ($generated@@82 ($generated@@350 $generated@@620) ($generated@@246 $generated@@622))) ($generated@@82 ($generated@@390 $generated@@620) ($generated@@246 ($generated@@159 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@82 $generated@@620 ($generated@@416 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) $generated@@68)) ($generated@@82 $generated@@623 ($generated@@424 $generated@@624 $generated@@625))) (and (and ($generated@@82 ($generated@@321 $generated@@623) ($generated@@251 $generated@@624)) ($generated@@82 ($generated@@361 $generated@@623) ($generated@@251 $generated@@625))) ($generated@@82 ($generated@@398 $generated@@623) ($generated@@251 ($generated@@159 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@82 $generated@@623 ($generated@@424 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@2) ($generated@@82 $generated@@626 $generated@@46))
 :pattern ( ($generated@@82 $generated@@626 $generated@@46))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@3) ($generated@@82 $generated@@627 $generated@@47))
 :pattern ( ($generated@@82 $generated@@627 $generated@@47))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@4) ($generated@@82 $generated@@628 $generated@@44))
 :pattern ( ($generated@@82 $generated@@628 $generated@@44))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@457) ($generated@@82 $generated@@629 $generated@@45))
 :pattern ( ($generated@@82 $generated@@629 $generated@@45))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@168) ($generated@@82 $generated@@630 $generated@@48))
 :pattern ( ($generated@@82 $generated@@630 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () Int)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () Int)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@631) $generated@@80) (= (type $generated@@638) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@643) ($generated@@180 $generated@@95 $generated@@4))) (= (type $generated@@644) $generated@@95)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@646  (=> (= (ControlFlow 0 17) (- 0 16)) (= ($generated@@79 $generated@@631) (ite ($generated@@84 $generated@@631) (let (($generated@@647 ($generated@@85 $generated@@631)))
$generated@@647) (let (($generated@@648 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@648)))))))
(let (($generated@@649  (=> (= $generated@@631 ($generated@@288 $generated@@632)) (=> (and (and (= $generated@@633 $generated@@632) ($generated@@82 ($generated@@8 $generated@@633) $generated@@46)) (and (= $generated@@634 $generated@@633) (= (ControlFlow 0 19) 17))) $generated@@646))))
(let (($generated@@650  (=> (= $generated@@631 ($generated@@284 $generated@@635)) (=> (and (and (= $generated@@636 $generated@@635) ($generated@@82 ($generated@@8 $generated@@636) $generated@@46)) (and (= $generated@@637 $generated@@636) (= (ControlFlow 0 18) 17))) $generated@@646))))
(let (($generated@@651 true))
(let (($generated@@652  (=> (not (= $generated@@631 ($generated@@284 $generated@@635))) (and (=> (= (ControlFlow 0 20) 19) $generated@@649) (=> (= (ControlFlow 0 20) 15) $generated@@651)))))
(let (($generated@@653  (=> ($generated@@92 $generated@@631 $generated@@83 $generated@@638) (=> (and ($generated@@81 $generated@@631) ($generated@@81 $generated@@631)) (and (=> (= (ControlFlow 0 21) 18) $generated@@650) (=> (= (ControlFlow 0 21) 20) $generated@@652))))))
(let (($generated@@654  (=> (= (ControlFlow 0 5) (- 0 4)) (= (ite ($generated@@84 $generated@@631) (let (($generated@@655 ($generated@@85 $generated@@631)))
$generated@@655) (let (($generated@@656 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@656))) (ite ($generated@@84 $generated@@631) ($generated@@85 $generated@@631) (+ ($generated@@86 $generated@@631) ($generated@@86 $generated@@631)))))))
(let (($generated@@657  (=> (not ($generated@@84 $generated@@631)) (and (=> (= (ControlFlow 0 8) (- 0 10)) ($generated@@153 $generated@@631)) (=> ($generated@@153 $generated@@631) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@153 $generated@@631)) (=> ($generated@@153 $generated@@631) (=> (= (ControlFlow 0 8) 5) $generated@@654))))))))
(let (($generated@@658  (=> ($generated@@84 $generated@@631) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@84 $generated@@631)) (=> ($generated@@84 $generated@@631) (=> (= (ControlFlow 0 6) 5) $generated@@654))))))
(let (($generated@@659  (and (=> (= (ControlFlow 0 11) 6) $generated@@658) (=> (= (ControlFlow 0 11) 8) $generated@@657))))
(let (($generated@@660  (=> (= $generated@@631 ($generated@@288 $generated@@632)) (=> (and (and (= $generated@@639 $generated@@632) ($generated@@82 ($generated@@8 $generated@@639) $generated@@46)) (and (= $generated@@640 $generated@@639) (= (ControlFlow 0 13) 11))) $generated@@659))))
(let (($generated@@661  (=> (= $generated@@631 ($generated@@284 $generated@@635)) (=> (and (and (= $generated@@641 $generated@@635) ($generated@@82 ($generated@@8 $generated@@641) $generated@@46)) (and (= $generated@@642 $generated@@641) (= (ControlFlow 0 12) 11))) $generated@@659))))
(let (($generated@@662 true))
(let (($generated@@663  (=> (not (= $generated@@631 ($generated@@284 $generated@@635))) (and (=> (= (ControlFlow 0 14) 13) $generated@@660) (=> (= (ControlFlow 0 14) 3) $generated@@662)))))
(let (($generated@@664 true))
(let (($generated@@665 true))
(let (($generated@@666  (=> (= $generated@@643 ($generated@@179 $generated@@644 $generated@@638 $generated@@60 false)) (and (and (and (and (=> (= (ControlFlow 0 22) 1) $generated@@665) (=> (= (ControlFlow 0 22) 21) $generated@@653)) (=> (= (ControlFlow 0 22) 2) $generated@@664)) (=> (= (ControlFlow 0 22) 12) $generated@@661)) (=> (= (ControlFlow 0 22) 14) $generated@@663)))))
(let (($generated@@667  (=> (and ($generated@@261 $generated@@638) ($generated@@645 $generated@@638)) (=> (and (and (and ($generated@@82 $generated@@631 $generated@@83) ($generated@@92 $generated@@631 $generated@@83 $generated@@638)) ($generated@@375 $generated@@631)) (and (= 2 $generated@@78) (= (ControlFlow 0 23) 22))) $generated@@666))))
$generated@@667)))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U) Int)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U) Int)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@87 (Int Int) Int)
(declare-fun $generated@@88 (Int) Int)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@284 (Int) T@U)
(declare-fun $generated@@288 (Int) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@375 (T@U) Bool)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@617 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@80) 11) (= (type $generated@@83) $generated@@68)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@89 T@U) ) (!  (=> (and (= (type $generated@@89) $generated@@80) (or ($generated@@81 $generated@@89) (and (not (= 1 $generated@@78)) ($generated@@82 $generated@@89 $generated@@83)))) (= ($generated@@79 $generated@@89) (ite ($generated@@84 $generated@@89) (let (($generated@@90 ($generated@@85 $generated@@89)))
$generated@@90) (let (($generated@@91 ($generated@@86 $generated@@89)))
($generated@@87 ($generated@@88 2) $generated@@91)))))
 :pattern ( ($generated@@79 $generated@@89))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 12)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 13)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@71 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@71 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@68)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@80) (= (type $generated@@152) $generated@@80)) (and ($generated@@84 $generated@@151) ($generated@@84 $generated@@152))) (= ($generated@@150 $generated@@151 $generated@@152) (= ($generated@@85 $generated@@151) ($generated@@85 $generated@@152))))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152) ($generated@@84 $generated@@151))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152) ($generated@@84 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@80) (= (type $generated@@155) $generated@@80)) (and ($generated@@153 $generated@@154) ($generated@@153 $generated@@155))) (= ($generated@@150 $generated@@154 $generated@@155) (= ($generated@@86 $generated@@154) ($generated@@86 $generated@@155))))
 :pattern ( ($generated@@150 $generated@@154 $generated@@155) ($generated@@153 $generated@@154))
 :pattern ( ($generated@@150 $generated@@154 $generated@@155) ($generated@@153 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@82 $generated@@156 ($generated@@93 0)))
 :pattern ( ($generated@@82 $generated@@156 ($generated@@93 0)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@80) (or ($generated@@81 $generated@@157) (and (not (= 1 $generated@@78)) ($generated@@82 $generated@@157 $generated@@83)))) true)
 :pattern ( ($generated@@79 $generated@@157))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@68)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@68) (= (type $generated@@163) $generated@@68)) (= (type $generated@@164) $generated@@80)) ($generated@@82 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@82 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 15) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@80) (= (type $generated@@172) $generated@@80)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@68)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@94 $generated@@168 $generated@@2)) (= (type $generated@@177) $generated@@68)) ($generated@@82 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@82 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@95 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@71 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@95) (= (type $generated@@228) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@229) ($generated@@70 $generated@@4))) (= (type $generated@@231) $generated@@95)) (= (type $generated@@232) ($generated@@70 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@80)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@68) (= (type $generated@@239) $generated@@68)) (= (type $generated@@240) $generated@@168)) (= (type $generated@@241) $generated@@168)) (= ($generated@@82 ($generated@@234 $generated@@240 $generated@@241) ($generated@@159 $generated@@238 $generated@@239))  (and ($generated@@235 $generated@@240 $generated@@238) ($generated@@235 $generated@@241 $generated@@239))))
 :pattern ( ($generated@@82 ($generated@@234 $generated@@240 $generated@@241) ($generated@@159 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@80) (= (type $generated@@243) $generated@@80)) (= ($generated@@165 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@165 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@80) (= (type $generated@@245) $generated@@80)) (= ($generated@@150 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@150 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@68)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@94 $generated@@168 $generated@@4)) (= (type $generated@@249) $generated@@68)) (= ($generated@@82 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@168) ($generated@@0 ($generated@@99 $generated@@248 $generated@@250))) ($generated@@235 $generated@@250 $generated@@249))
 :pattern ( ($generated@@99 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@82 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@68)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@94 $generated@@168 $generated@@4)) (= (type $generated@@254) $generated@@68)) (= ($generated@@82 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@168) ($generated@@0 ($generated@@99 $generated@@253 $generated@@255))) ($generated@@235 $generated@@255 $generated@@254))
 :pattern ( ($generated@@99 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@82 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@256 Int) ) (! (= ($generated@@88 $generated@@256) $generated@@256)
 :pattern ( ($generated@@88 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@68) (= (type $generated@@264) $generated@@68)) (= (type $generated@@265) $generated@@168)) (= (type $generated@@266) $generated@@168)) (= (type $generated@@267) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@261 $generated@@267)) (= ($generated@@92 ($generated@@234 $generated@@265 $generated@@266) ($generated@@159 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@92 ($generated@@234 $generated@@265 $generated@@266) ($generated@@159 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@80) (= ($generated@@158 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@80) (= ($generated@@84 $generated@@271) (= ($generated@@268 $generated@@271) $generated@@63)))
 :pattern ( ($generated@@84 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@80) (= ($generated@@153 $generated@@272) (= ($generated@@268 $generated@@272) $generated@@65)))
 :pattern ( ($generated@@153 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@80) ($generated@@158 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@168) (= (type $generated@@275) $generated@@168)) (= $generated@@273 ($generated@@234 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@158 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@285 Int) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@80)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@80) ($generated@@84 $generated@@286)) (exists (($generated@@287 Int) ) (= $generated@@286 ($generated@@284 $generated@@287))))
 :pattern ( ($generated@@84 $generated@@286))
)))
(assert (forall (($generated@@289 Int) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@80)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@80) ($generated@@153 $generated@@290)) (exists (($generated@@291 Int) ) (= $generated@@290 ($generated@@288 $generated@@291))))
 :pattern ( ($generated@@153 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@168)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@68) (= (type $generated@@296) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@262 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@92 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@262 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@94 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@97 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@94 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@99 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 18)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@94 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@99 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@99 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@94 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@99 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@99 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@97 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@94 $generated@@340 $generated@@2)) (= ($generated@@174 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@99 $generated@@339 $generated@@341))) (<= ($generated ($generated@@99 $generated@@339 $generated@@341)) ($generated@@297 $generated@@339))))
 :pattern ( ($generated@@99 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@174 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@168) ($generated@@235 $generated@@345 $generated@@83)) (and (= ($generated@@292 ($generated@@342 $generated@@80 $generated@@345)) $generated@@345) ($generated@@82 ($generated@@342 $generated@@80 $generated@@345) $generated@@83)))
 :pattern ( ($generated@@235 $generated@@345 $generated@@83))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@307 (type $generated@@346))))
(let (($generated@@348 ($generated@@306 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@305 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@304 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@99 ($generated@@303 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@303 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@307 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@94 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@307 (type $generated@@353))))
(let (($generated@@355 ($generated@@306 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@305 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@304 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@99 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@325 (type $generated@@357))))
(let (($generated@@359 ($generated@@324 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@323 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@322 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@99 ($generated@@321 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@321 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@325 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@94 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@325 (type $generated@@364))))
(let (($generated@@366 ($generated@@324 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@323 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@322 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@99 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@94 $generated@@168 $generated@@2)) (= (type $generated@@369) $generated@@68)) (= ($generated@@82 $generated@@368 ($generated@@173 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@168) (< 0 ($generated ($generated@@99 $generated@@368 $generated@@370)))) ($generated@@235 $generated@@370 $generated@@369))
 :pattern ( ($generated@@99 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@82 $generated@@368 ($generated@@173 $generated@@369)))
)))
(assert (forall (($generated@@371 Int) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@94 $generated@@95 $generated@@96)) ($generated@@261 $generated@@372)) (= ($generated@@92 ($generated@@284 $generated@@371) $generated@@83 $generated@@372) ($generated@@92 ($generated@@8 $generated@@371) $generated@@46 $generated@@372)))
 :pattern ( ($generated@@92 ($generated@@284 $generated@@371) $generated@@83 $generated@@372))
)))
(assert (forall (($generated@@373 Int) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@94 $generated@@95 $generated@@96)) ($generated@@261 $generated@@374)) (= ($generated@@92 ($generated@@288 $generated@@373) $generated@@83 $generated@@374) ($generated@@92 ($generated@@8 $generated@@373) $generated@@46 $generated@@374)))
 :pattern ( ($generated@@92 ($generated@@288 $generated@@373) $generated@@83 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@80) ($generated@@375 $generated@@376)) (or ($generated@@84 $generated@@376) ($generated@@153 $generated@@376)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@80) (or ($generated@@81 ($generated@@257 $generated@@377)) (and (not (= 1 $generated@@78)) ($generated@@82 $generated@@377 $generated@@83)))) (= ($generated@@79 ($generated@@257 $generated@@377)) (ite ($generated@@84 ($generated@@257 $generated@@377)) (let (($generated@@378 ($generated@@88 ($generated@@85 ($generated@@257 $generated@@377)))))
$generated@@378) (let (($generated@@379 ($generated@@88 ($generated@@86 ($generated@@257 $generated@@377)))))
($generated@@88 ($generated@@87 ($generated@@88 2) $generated@@379))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@257 $generated@@377)))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@94 $generated@@168 $generated@@4)) (= (type $generated@@381) $generated@@68)) (= (type $generated@@382) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@380 ($generated@@246 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@168) ($generated@@0 ($generated@@99 $generated@@380 $generated@@383))) ($generated@@262 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@99 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@92 $generated@@380 ($generated@@246 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@384) ($generated@@94 $generated@@168 $generated@@4)) (= (type $generated@@385) $generated@@68)) (= (type $generated@@386) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@384 ($generated@@251 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@168) ($generated@@0 ($generated@@99 $generated@@384 $generated@@387))) ($generated@@262 $generated@@387 $generated@@385 $generated@@386))
 :pattern ( ($generated@@99 $generated@@384 $generated@@387))
))))
 :pattern ( ($generated@@92 $generated@@384 ($generated@@251 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(= ($generated ($generated@@99 ($generated@@298 $generated@@389) $generated@@388)) 0))
 :pattern ( (let (($generated@@389 (type $generated@@388)))
($generated@@99 ($generated@@298 $generated@@389) $generated@@388)))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@94 $generated@@168 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@307 (type $generated@@393))))
(let (($generated@@395 ($generated@@306 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@94 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@305 $generated@@168 $generated@@168)) (= (type $generated@@397) $generated@@168)) (= ($generated@@0 ($generated@@99 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@99 ($generated@@303 $generated@@396) ($generated@@166 ($generated@@342 $generated@@80 $generated@@397)))) (= ($generated@@99 ($generated@@391 $generated@@396) ($generated@@166 ($generated@@342 $generated@@80 $generated@@397))) ($generated@@167 ($generated@@342 $generated@@80 $generated@@397))))))
 :pattern ( ($generated@@99 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@94 $generated@@168 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@325 (type $generated@@401))))
(let (($generated@@403 ($generated@@324 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@94 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@405) $generated@@168)) (= ($generated@@0 ($generated@@99 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@99 ($generated@@321 $generated@@404) ($generated@@166 ($generated@@342 $generated@@80 $generated@@405)))) (= ($generated@@99 ($generated@@399 $generated@@404) ($generated@@166 ($generated@@342 $generated@@80 $generated@@405))) ($generated@@167 ($generated@@342 $generated@@80 $generated@@405))))))
 :pattern ( ($generated@@99 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@306 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@305 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@99 ($generated@@350 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@99 ($generated@@303 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@99 ($generated@@391 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@99 ($generated@@303 $generated@@406) $generated@@410))
 :pattern ( ($generated@@99 ($generated@@391 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@99 ($generated@@350 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@324 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@323 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@99 ($generated@@361 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@99 ($generated@@321 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@99 ($generated@@399 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@99 ($generated@@321 $generated@@411) $generated@@415))
 :pattern ( ($generated@@99 ($generated@@399 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@99 ($generated@@361 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@68)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@305 $generated@@168 $generated@@168)) (= (type $generated@@420) $generated@@68)) (= (type $generated@@421) $generated@@68)) (= (type $generated@@422) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@168) ($generated@@0 ($generated@@99 ($generated@@303 $generated@@419) $generated@@423))) (and ($generated@@262 ($generated@@99 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@262 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@99 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@99 ($generated@@303 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@92 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@68)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@428) $generated@@68)) (= (type $generated@@429) $generated@@68)) (= (type $generated@@430) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@168) ($generated@@0 ($generated@@99 ($generated@@321 $generated@@427) $generated@@431))) (and ($generated@@262 ($generated@@99 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@262 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@99 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@99 ($generated@@321 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@92 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@80) ($generated@@82 $generated@@432 $generated@@83)) (or ($generated@@84 $generated@@432) ($generated@@153 $generated@@432)))
 :pattern ( ($generated@@153 $generated@@432) ($generated@@82 $generated@@432 $generated@@83))
 :pattern ( ($generated@@84 $generated@@432) ($generated@@82 $generated@@432 $generated@@83))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@94 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@325 (type $generated@@435))))
(let (($generated@@437 ($generated@@324 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@323 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@322 $generated@@437 $generated@@436)) (= ($generated@@321 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@321 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@325 (type $generated@@438))))
(let (($generated@@440 ($generated@@324 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@323 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@322 $generated@@440 $generated@@439)) (= ($generated@@361 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@361 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@325 (type $generated@@441))))
(let (($generated@@443 ($generated@@324 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@323 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@322 $generated@@443 $generated@@442)) (= ($generated@@398 $generated@@441) ($generated@@433 $generated@@168))))))
 :pattern ( ($generated@@398 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@307 (type $generated@@444))))
(let (($generated@@446 ($generated@@306 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@305 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@304 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@168) (= (type $generated@@448) $generated@@168)) ($generated@@0 ($generated@@99 ($generated@@390 $generated@@444) ($generated@@292 ($generated@@234 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@390 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@325 (type $generated@@449))))
(let (($generated@@451 ($generated@@324 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@323 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@322 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@168) (= (type $generated@@453) $generated@@168)) ($generated@@0 ($generated@@99 ($generated@@398 $generated@@449) ($generated@@292 ($generated@@234 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@398 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@168) ($generated@@235 $generated@@454 $generated@@46)) (and (= ($generated@@292 ($generated@@342 $generated@@2 $generated@@454)) $generated@@454) ($generated@@82 ($generated@@342 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@235 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@168) ($generated@@235 $generated@@455 $generated@@47)) (and (= ($generated@@292 ($generated@@342 $generated@@3 $generated@@455)) $generated@@455) ($generated@@82 ($generated@@342 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@235 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@168) ($generated@@235 $generated@@456 $generated@@44)) (and (= ($generated@@292 ($generated@@342 $generated@@4 $generated@@456)) $generated@@456) ($generated@@82 ($generated@@342 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@235 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@168) ($generated@@235 $generated@@458 $generated@@45)) (and (= ($generated@@292 ($generated@@342 $generated@@457 $generated@@458)) $generated@@458) ($generated@@82 ($generated@@342 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@235 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@68) (= ($generated@@235 ($generated@@292 $generated@@459) $generated@@460) ($generated@@82 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@235 ($generated@@292 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@97 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@94 $generated@@462 $generated@@2)) (<= 0 ($generated@@297 $generated@@461))))
 :pattern ( ($generated@@297 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@279 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@278 $generated@@464)) (<= 0 ($generated@@277 $generated@@463))))
 :pattern ( ($generated@@277 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@68)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@68) (= (type $generated@@468) $generated@@68)) (= ($generated@@465 ($generated@@416 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@416 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@68)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@68) (= (type $generated@@472) $generated@@68)) (= ($generated@@469 ($generated@@416 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@416 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@68) (= (type $generated@@474) $generated@@68)) (= ($generated@@76 ($generated@@416 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@416 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@68)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@68) (= (type $generated@@478) $generated@@68)) (= ($generated@@475 ($generated@@424 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@424 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@68)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= ($generated@@479 ($generated@@424 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@424 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@68)) (= ($generated@@76 ($generated@@424 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@424 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@168) (= (type $generated@@486) $generated@@168)) (= ($generated@@268 ($generated@@234 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@234 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@487 ($generated@@159 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@159 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@68)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@491 ($generated@@159 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@159 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@168) (= (type $generated@@496) $generated@@168)) (= ($generated@@166 ($generated@@234 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@234 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@168) (= (type $generated@@498) $generated@@168)) (= ($generated@@167 ($generated@@234 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@234 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@279 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@278 $generated@@168)) (= (type $generated@@506) $generated@@68)) (= (type $generated@@507) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@277 $generated@@505))) ($generated@@262 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@92 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@93 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@93 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@511 ($generated@@246 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@246 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@76 ($generated@@246 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@515 ($generated@@251 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@251 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@76 ($generated@@251 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@76 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@76 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 Int) ) (! (= ($generated@@268 ($generated@@284 $generated@@527)) $generated@@63)
 :pattern ( ($generated@@284 $generated@@527))
)))
(assert (forall (($generated@@528 Int) ) (! (= ($generated@@85 ($generated@@284 $generated@@528)) $generated@@528)
 :pattern ( ($generated@@284 $generated@@528))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@268 ($generated@@288 $generated@@529)) $generated@@65)
 :pattern ( ($generated@@288 $generated@@529))
)))
(assert (forall (($generated@@530 Int) ) (! (= ($generated@@86 ($generated@@288 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@288 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(= ($generated@@342 $generated@@532 ($generated@@292 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@292 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@305 $generated@@168 $generated@@168)) (= (type $generated@@534) $generated@@68)) (= (type $generated@@535) $generated@@68)) (= ($generated@@82 $generated@@533 ($generated@@416 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@168) ($generated@@0 ($generated@@99 ($generated@@303 $generated@@533) $generated@@536))) (and ($generated@@235 ($generated@@99 ($generated@@391 $generated@@533) $generated@@536) $generated@@535) ($generated@@235 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@99 ($generated@@391 $generated@@533) $generated@@536))
 :pattern ( ($generated@@99 ($generated@@303 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@82 $generated@@533 ($generated@@416 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@538) $generated@@68)) (= (type $generated@@539) $generated@@68)) (= ($generated@@82 $generated@@537 ($generated@@424 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@168) ($generated@@0 ($generated@@99 ($generated@@321 $generated@@537) $generated@@540))) (and ($generated@@235 ($generated@@99 ($generated@@399 $generated@@537) $generated@@540) $generated@@539) ($generated@@235 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@99 ($generated@@399 $generated@@537) $generated@@540))
 :pattern ( ($generated@@99 ($generated@@321 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@82 $generated@@537 ($generated@@424 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@168) (= (type $generated@@544) $generated@@168)) (< ($generated@@541 $generated@@543) ($generated@@542 ($generated@@234 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@234 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@168) (= (type $generated@@546) $generated@@168)) (< ($generated@@541 $generated@@546) ($generated@@542 ($generated@@234 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@234 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 Int) ) (! (= ($generated@@82 ($generated@@284 $generated@@547) $generated@@83) ($generated@@82 ($generated@@8 $generated@@547) $generated@@46))
 :pattern ( ($generated@@82 ($generated@@284 $generated@@547) $generated@@83))
)))
(assert (forall (($generated@@548 Int) ) (! (= ($generated@@82 ($generated@@288 $generated@@548) $generated@@83) ($generated@@82 ($generated@@8 $generated@@548) $generated@@46))
 :pattern ( ($generated@@82 ($generated@@288 $generated@@548) $generated@@83))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@168) (= (type $generated@@550) $generated@@68)) (= (type $generated@@551) $generated@@68)) ($generated@@235 $generated@@549 ($generated@@416 $generated@@550 $generated@@551))) (and (= ($generated@@292 ($generated@@342 ($generated@@305 $generated@@168 $generated@@168) $generated@@549)) $generated@@549) ($generated@@82 ($generated@@342 ($generated@@305 $generated@@168 $generated@@168) $generated@@549) ($generated@@416 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@235 $generated@@549 ($generated@@416 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@168) (= (type $generated@@553) $generated@@68)) (= (type $generated@@554) $generated@@68)) ($generated@@235 $generated@@552 ($generated@@424 $generated@@553 $generated@@554))) (and (= ($generated@@292 ($generated@@342 ($generated@@323 $generated@@168 $generated@@168) $generated@@552)) $generated@@552) ($generated@@82 ($generated@@342 ($generated@@323 $generated@@168 $generated@@168) $generated@@552) ($generated@@424 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@235 $generated@@552 ($generated@@424 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@68) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) $generated@@168)) ($generated@@235 $generated@@557 ($generated@@159 $generated@@555 $generated@@556))) (and (= ($generated@@292 ($generated@@342 $generated@@80 $generated@@557)) $generated@@557) ($generated@@82 ($generated@@342 $generated@@80 $generated@@557) ($generated@@159 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@235 $generated@@557 ($generated@@159 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
 (not ($generated@@0 ($generated@@99 ($generated@@433 $generated@@559) $generated@@558))))
 :pattern ( (let (($generated@@559 (type $generated@@558)))
($generated@@99 ($generated@@433 $generated@@559) $generated@@558)))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@73)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@68) (= (type $generated@@563) $generated@@68)) (and (= ($generated@@76 ($generated@@159 $generated@@562 $generated@@563)) $generated@@62) (= ($generated@@560 ($generated@@159 $generated@@562 $generated@@563)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@80) (= (type $generated@@565) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@261 $generated@@565) (and ($generated@@84 $generated@@564) ($generated@@92 $generated@@564 $generated@@83 $generated@@565)))) ($generated@@92 ($generated@@8 ($generated@@85 $generated@@564)) $generated@@46 $generated@@565))
 :pattern ( ($generated@@92 ($generated@@8 ($generated@@85 $generated@@564)) $generated@@46 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@80) (= (type $generated@@567) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@261 $generated@@567) (and ($generated@@153 $generated@@566) ($generated@@92 $generated@@566 $generated@@83 $generated@@567)))) ($generated@@92 ($generated@@8 ($generated@@86 $generated@@566)) $generated@@46 $generated@@567))
 :pattern ( ($generated@@92 ($generated@@8 ($generated@@86 $generated@@566)) $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@568 Int) ($generated@@569 Int) ) (! (= ($generated@@87 $generated@@568 $generated@@569) (* $generated@@568 $generated@@569))
 :pattern ( ($generated@@87 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@80) (= ($generated@@541 ($generated@@292 $generated@@570)) ($generated@@542 $generated@@570)))
 :pattern ( ($generated@@541 ($generated@@292 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@168) ($generated@@235 $generated@@571 ($generated@@93 0))) (and (= ($generated@@292 ($generated@@342 $generated@@2 $generated@@571)) $generated@@571) ($generated@@82 ($generated@@342 ($generated@@94 $generated@@168 $generated@@4) $generated@@571) ($generated@@93 0))))
 :pattern ( ($generated@@235 $generated@@571 ($generated@@93 0)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@168) (= (type $generated@@573) $generated@@68)) ($generated@@235 $generated@@572 ($generated@@246 $generated@@573))) (and (= ($generated@@292 ($generated@@342 ($generated@@94 $generated@@168 $generated@@4) $generated@@572)) $generated@@572) ($generated@@82 ($generated@@342 ($generated@@94 $generated@@168 $generated@@4) $generated@@572) ($generated@@246 $generated@@573))))
 :pattern ( ($generated@@235 $generated@@572 ($generated@@246 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@168) (= (type $generated@@575) $generated@@68)) ($generated@@235 $generated@@574 ($generated@@251 $generated@@575))) (and (= ($generated@@292 ($generated@@342 ($generated@@94 $generated@@168 $generated@@4) $generated@@574)) $generated@@574) ($generated@@82 ($generated@@342 ($generated@@94 $generated@@168 $generated@@4) $generated@@574) ($generated@@251 $generated@@575))))
 :pattern ( ($generated@@235 $generated@@574 ($generated@@251 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@168) (= (type $generated@@577) $generated@@68)) ($generated@@235 $generated@@576 ($generated@@173 $generated@@577))) (and (= ($generated@@292 ($generated@@342 ($generated@@94 $generated@@168 $generated@@2) $generated@@576)) $generated@@576) ($generated@@82 ($generated@@342 ($generated@@94 $generated@@168 $generated@@2) $generated@@576) ($generated@@173 $generated@@577))))
 :pattern ( ($generated@@235 $generated@@576 ($generated@@173 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@168) (= (type $generated@@579) $generated@@68)) ($generated@@235 $generated@@578 ($generated@@499 $generated@@579))) (and (= ($generated@@292 ($generated@@342 ($generated@@278 $generated@@168) $generated@@578)) $generated@@578) ($generated@@82 ($generated@@342 ($generated@@278 $generated@@168) $generated@@578) ($generated@@499 $generated@@579))))
 :pattern ( ($generated@@235 $generated@@578 ($generated@@499 $generated@@579)))
)))
(assert (= ($generated@@76 $generated@@83) $generated@@64))
(assert (= ($generated@@560 $generated@@83) $generated@@67))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@94 $generated@@168 $generated@@2)) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@580 ($generated@@173 $generated@@581) $generated@@582) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@168) (< 0 ($generated ($generated@@99 $generated@@580 $generated@@583)))) ($generated@@262 $generated@@583 $generated@@581 $generated@@582))
 :pattern ( ($generated@@99 $generated@@580 $generated@@583))
))))
 :pattern ( ($generated@@92 $generated@@580 ($generated@@173 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@80) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@261 $generated@@586) (and ($generated@@158 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@68) ($generated@@92 $generated@@584 ($generated@@159 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@92 $generated@@584 ($generated@@159 $generated@@585 $generated@@587) $generated@@586))
))))) ($generated@@262 ($generated@@166 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@262 ($generated@@166 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@80) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@261 $generated@@590) (and ($generated@@158 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@68) ($generated@@92 $generated@@588 ($generated@@159 $generated@@591 $generated@@589) $generated@@590))
 :pattern ( ($generated@@92 $generated@@588 ($generated@@159 $generated@@591 $generated@@589) $generated@@590))
))))) ($generated@@262 ($generated@@167 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@262 ($generated@@167 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@168) (= (type $generated@@593) $generated@@168)) (= ($generated@@234 ($generated@@257 $generated@@592) ($generated@@257 $generated@@593)) ($generated@@257 ($generated@@234 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@234 ($generated@@257 $generated@@592) ($generated@@257 $generated@@593)))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@88 $generated@@594))) ($generated@@257 ($generated@@292 ($generated@@8 $generated@@594))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@88 $generated@@594))))
)))
(assert (forall (($generated@@595 Int) ) (! (= ($generated@@284 ($generated@@88 $generated@@595)) ($generated@@257 ($generated@@284 $generated@@595)))
 :pattern ( ($generated@@284 ($generated@@88 $generated@@595)))
)))
(assert (forall (($generated@@596 Int) ) (! (= ($generated@@288 ($generated@@88 $generated@@596)) ($generated@@257 ($generated@@288 $generated@@596)))
 :pattern ( ($generated@@288 ($generated@@88 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (! (= ($generated@@292 ($generated@@257 $generated@@597)) ($generated@@257 ($generated@@292 $generated@@597)))
 :pattern ( ($generated@@292 ($generated@@257 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@279 (type $generated@@598))))
 (=> (and (= (type $generated@@598) ($generated@@278 $generated@@599)) (= ($generated@@277 $generated@@598) 0)) (= $generated@@598 ($generated@@276 $generated@@599))))
 :pattern ( ($generated@@277 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@601)))
 (=> (and (and (= (type $generated@@600) ($generated@@94 $generated@@603 $generated@@2)) (= (type $generated@@602) $generated@@2)) (<= 0 ($generated $generated@@602))) (= ($generated@@297 ($generated@@100 $generated@@600 $generated@@601 $generated@@602)) (+ (- ($generated@@297 $generated@@600) ($generated ($generated@@99 $generated@@600 $generated@@601))) ($generated $generated@@602)))))
 :pattern ( ($generated@@297 ($generated@@100 $generated@@600 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@605) $generated@@2)) ($generated@@92 $generated@@605 $generated@@46 $generated@@604))
 :pattern ( ($generated@@92 $generated@@605 $generated@@46 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@607) $generated@@3)) ($generated@@92 $generated@@607 $generated@@47 $generated@@606))
 :pattern ( ($generated@@92 $generated@@607 $generated@@47 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@609) $generated@@4)) ($generated@@92 $generated@@609 $generated@@44 $generated@@608))
 :pattern ( ($generated@@92 $generated@@609 $generated@@44 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@611) $generated@@457)) ($generated@@92 $generated@@611 $generated@@45 $generated@@610))
 :pattern ( ($generated@@92 $generated@@611 $generated@@45 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@613) $generated@@168)) ($generated@@92 $generated@@613 $generated@@48 $generated@@612))
 :pattern ( ($generated@@92 $generated@@613 $generated@@48 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@278 $generated@@168)) (= (type $generated@@615) $generated@@68)) (= ($generated@@82 $generated@@614 ($generated@@499 $generated@@615)) (forall (($generated@@616 Int) ) (!  (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@277 $generated@@614))) ($generated@@235 ($generated@@500 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@500 $generated@@614 $generated@@616))
))))
 :pattern ( ($generated@@82 $generated@@614 ($generated@@499 $generated@@615)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 Int) ) (!  (=> (= (type $generated@@618) ($generated@@278 $generated@@168)) (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@277 $generated@@618))) (< ($generated@@542 ($generated@@342 $generated@@80 ($generated@@500 $generated@@618 $generated@@619))) ($generated@@617 $generated@@618))))
 :pattern ( ($generated@@542 ($generated@@342 $generated@@80 ($generated@@500 $generated@@618 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@305 $generated@@168 $generated@@168)) (= (type $generated@@621) $generated@@68)) (= (type $generated@@622) $generated@@68)) ($generated@@82 $generated@@620 ($generated@@416 $generated@@621 $generated@@622))) (and (and ($generated@@82 ($generated@@303 $generated@@620) ($generated@@246 $generated@@621)) ($generated@@82 ($generated@@350 $generated@@620) ($generated@@246 $generated@@622))) ($generated@@82 ($generated@@390 $generated@@620) ($generated@@246 ($generated@@159 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@82 $generated@@620 ($generated@@416 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) $generated@@68)) ($generated@@82 $generated@@623 ($generated@@424 $generated@@624 $generated@@625))) (and (and ($generated@@82 ($generated@@321 $generated@@623) ($generated@@251 $generated@@624)) ($generated@@82 ($generated@@361 $generated@@623) ($generated@@251 $generated@@625))) ($generated@@82 ($generated@@398 $generated@@623) ($generated@@251 ($generated@@159 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@82 $generated@@623 ($generated@@424 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@2) ($generated@@82 $generated@@626 $generated@@46))
 :pattern ( ($generated@@82 $generated@@626 $generated@@46))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@3) ($generated@@82 $generated@@627 $generated@@47))
 :pattern ( ($generated@@82 $generated@@627 $generated@@47))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@4) ($generated@@82 $generated@@628 $generated@@44))
 :pattern ( ($generated@@82 $generated@@628 $generated@@44))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@457) ($generated@@82 $generated@@629 $generated@@45))
 :pattern ( ($generated@@82 $generated@@629 $generated@@45))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@168) ($generated@@82 $generated@@630 $generated@@48))
 :pattern ( ($generated@@82 $generated@@630 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () Int)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () Int)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@631) $generated@@80) (= (type $generated@@638) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@653) ($generated@@180 $generated@@95 $generated@@4))) (= (type $generated@@654) $generated@@95)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 28) (let (($generated@@656  (=> (= (ControlFlow 0 22) (- 0 21)) (= (= ($generated@@79 $generated@@631) ($generated@@88 11)) (= (ite ($generated@@84 $generated@@631) (let (($generated@@657 ($generated@@85 $generated@@631)))
$generated@@657) (let (($generated@@658 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@658))) ($generated@@88 11))))))
(let (($generated@@659  (=> (= $generated@@631 ($generated@@288 $generated@@632)) (=> (and (and (= $generated@@633 $generated@@632) ($generated@@82 ($generated@@8 $generated@@633) $generated@@46)) (and (= $generated@@634 $generated@@633) (= (ControlFlow 0 24) 22))) $generated@@656))))
(let (($generated@@660  (=> (= $generated@@631 ($generated@@284 $generated@@635)) (=> (and (and (= $generated@@636 $generated@@635) ($generated@@82 ($generated@@8 $generated@@636) $generated@@46)) (and (= $generated@@637 $generated@@636) (= (ControlFlow 0 23) 22))) $generated@@656))))
(let (($generated@@661 true))
(let (($generated@@662  (=> (not (= $generated@@631 ($generated@@284 $generated@@635))) (and (=> (= (ControlFlow 0 25) 24) $generated@@659) (=> (= (ControlFlow 0 25) 20) $generated@@661)))))
(let (($generated@@663  (=> ($generated@@92 $generated@@631 $generated@@83 $generated@@638) (=> (and ($generated@@81 $generated@@631) ($generated@@81 $generated@@631)) (and (=> (= (ControlFlow 0 26) 23) $generated@@660) (=> (= (ControlFlow 0 26) 25) $generated@@662))))))
(let (($generated@@664  (=> (and ($generated@@375 $generated@@631) (= (ControlFlow 0 16) (- 0 15))) (= (ite ($generated@@84 $generated@@631) (let (($generated@@665 ($generated@@85 $generated@@631)))
(= $generated@@665 ($generated@@88 11))) (let (($generated@@666 ($generated@@86 $generated@@631)))
(= ($generated@@87 ($generated@@88 2) $generated@@666) ($generated@@88 11)))) ($generated@@150 $generated@@631 ($generated@@284 ($generated@@88 11)))))))
(let (($generated@@667  (=> (= $generated@@631 ($generated@@288 $generated@@639)) (=> (and (and (= $generated@@640 $generated@@639) ($generated@@82 ($generated@@8 $generated@@640) $generated@@46)) (and (= $generated@@641 $generated@@640) (= (ControlFlow 0 18) 16))) $generated@@664))))
(let (($generated@@668  (=> (= $generated@@631 ($generated@@284 $generated@@642)) (=> (and (and (= $generated@@643 $generated@@642) ($generated@@82 ($generated@@8 $generated@@643) $generated@@46)) (and (= $generated@@644 $generated@@643) (= (ControlFlow 0 17) 16))) $generated@@664))))
(let (($generated@@669 true))
(let (($generated@@670  (=> (not (= $generated@@631 ($generated@@284 $generated@@642))) (and (=> (= (ControlFlow 0 19) 18) $generated@@667) (=> (= (ControlFlow 0 19) 14) $generated@@669)))))
(let (($generated@@671  (=> (= (ControlFlow 0 6) (- 0 5)) (= (= (ite ($generated@@84 $generated@@631) (let (($generated@@672 ($generated@@85 $generated@@631)))
$generated@@672) (let (($generated@@673 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@673))) ($generated@@88 11)) (ite ($generated@@84 $generated@@631) (let (($generated@@674 ($generated@@85 $generated@@631)))
(= $generated@@674 ($generated@@88 11))) (let (($generated@@675 ($generated@@86 $generated@@631)))
(= ($generated@@87 ($generated@@88 2) $generated@@675) ($generated@@88 11))))))))
(let (($generated@@676  (=> (= $generated@@631 ($generated@@288 $generated@@639)) (=> (and (and (= $generated@@645 $generated@@639) ($generated@@82 ($generated@@8 $generated@@645) $generated@@46)) (and (= $generated@@646 $generated@@645) (= (ControlFlow 0 8) 6))) $generated@@671))))
(let (($generated@@677  (=> (= $generated@@631 ($generated@@284 $generated@@642)) (=> (and (and (= $generated@@647 $generated@@642) ($generated@@82 ($generated@@8 $generated@@647) $generated@@46)) (and (= $generated@@648 $generated@@647) (= (ControlFlow 0 7) 6))) $generated@@671))))
(let (($generated@@678 true))
(let (($generated@@679  (=> (not (= $generated@@631 ($generated@@284 $generated@@642))) (and (=> (= (ControlFlow 0 9) 8) $generated@@676) (=> (= (ControlFlow 0 9) 4) $generated@@678)))))
(let (($generated@@680  (and (=> (= (ControlFlow 0 10) 7) $generated@@677) (=> (= (ControlFlow 0 10) 9) $generated@@679))))
(let (($generated@@681  (=> (= $generated@@631 ($generated@@288 $generated@@632)) (=> (and (and (= $generated@@649 $generated@@632) ($generated@@82 ($generated@@8 $generated@@649) $generated@@46)) (and (= $generated@@650 $generated@@649) (= (ControlFlow 0 12) 10))) $generated@@680))))
(let (($generated@@682  (=> (= $generated@@631 ($generated@@284 $generated@@635)) (=> (and (and (= $generated@@651 $generated@@635) ($generated@@82 ($generated@@8 $generated@@651) $generated@@46)) (and (= $generated@@652 $generated@@651) (= (ControlFlow 0 11) 10))) $generated@@680))))
(let (($generated@@683 true))
(let (($generated@@684  (=> (not (= $generated@@631 ($generated@@284 $generated@@635))) (and (=> (= (ControlFlow 0 13) 12) $generated@@681) (=> (= (ControlFlow 0 13) 3) $generated@@683)))))
(let (($generated@@685 true))
(let (($generated@@686 true))
(let (($generated@@687  (=> (= $generated@@653 ($generated@@179 $generated@@654 $generated@@638 $generated@@60 false)) (and (and (and (and (and (and (=> (= (ControlFlow 0 27) 1) $generated@@686) (=> (= (ControlFlow 0 27) 26) $generated@@663)) (=> (= (ControlFlow 0 27) 2) $generated@@685)) (=> (= (ControlFlow 0 27) 17) $generated@@668)) (=> (= (ControlFlow 0 27) 19) $generated@@670)) (=> (= (ControlFlow 0 27) 11) $generated@@682)) (=> (= (ControlFlow 0 27) 13) $generated@@684)))))
(let (($generated@@688  (=> (and ($generated@@261 $generated@@638) ($generated@@655 $generated@@638)) (=> (and (and (and ($generated@@82 $generated@@631 $generated@@83) ($generated@@92 $generated@@631 $generated@@83 $generated@@638)) ($generated@@375 $generated@@631)) (and (= 2 $generated@@78) (= (ControlFlow 0 28) 27))) $generated@@687))))
$generated@@688))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U) Int)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U) Int)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@87 (Int Int) Int)
(declare-fun $generated@@88 (Int) Int)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@284 (Int) T@U)
(declare-fun $generated@@288 (Int) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@375 (T@U) Bool)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@617 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@80) 11) (= (type $generated@@83) $generated@@68)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@89 T@U) ) (!  (=> (and (= (type $generated@@89) $generated@@80) (or ($generated@@81 $generated@@89) (and (not (= 1 $generated@@78)) ($generated@@82 $generated@@89 $generated@@83)))) (= ($generated@@79 $generated@@89) (ite ($generated@@84 $generated@@89) (let (($generated@@90 ($generated@@85 $generated@@89)))
$generated@@90) (let (($generated@@91 ($generated@@86 $generated@@89)))
($generated@@87 ($generated@@88 2) $generated@@91)))))
 :pattern ( ($generated@@79 $generated@@89))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 12)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 13)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@71 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@71 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@68)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@80) (= (type $generated@@152) $generated@@80)) (and ($generated@@84 $generated@@151) ($generated@@84 $generated@@152))) (= ($generated@@150 $generated@@151 $generated@@152) (= ($generated@@85 $generated@@151) ($generated@@85 $generated@@152))))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152) ($generated@@84 $generated@@151))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152) ($generated@@84 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@80) (= (type $generated@@155) $generated@@80)) (and ($generated@@153 $generated@@154) ($generated@@153 $generated@@155))) (= ($generated@@150 $generated@@154 $generated@@155) (= ($generated@@86 $generated@@154) ($generated@@86 $generated@@155))))
 :pattern ( ($generated@@150 $generated@@154 $generated@@155) ($generated@@153 $generated@@154))
 :pattern ( ($generated@@150 $generated@@154 $generated@@155) ($generated@@153 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@82 $generated@@156 ($generated@@93 0)))
 :pattern ( ($generated@@82 $generated@@156 ($generated@@93 0)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@80) (or ($generated@@81 $generated@@157) (and (not (= 1 $generated@@78)) ($generated@@82 $generated@@157 $generated@@83)))) true)
 :pattern ( ($generated@@79 $generated@@157))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@68)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@68) (= (type $generated@@163) $generated@@68)) (= (type $generated@@164) $generated@@80)) ($generated@@82 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@82 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 15) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@80) (= (type $generated@@172) $generated@@80)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@68)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@94 $generated@@168 $generated@@2)) (= (type $generated@@177) $generated@@68)) ($generated@@82 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@82 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@95 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@71 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@95) (= (type $generated@@228) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@229) ($generated@@70 $generated@@4))) (= (type $generated@@231) $generated@@95)) (= (type $generated@@232) ($generated@@70 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@80)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@68) (= (type $generated@@239) $generated@@68)) (= (type $generated@@240) $generated@@168)) (= (type $generated@@241) $generated@@168)) (= ($generated@@82 ($generated@@234 $generated@@240 $generated@@241) ($generated@@159 $generated@@238 $generated@@239))  (and ($generated@@235 $generated@@240 $generated@@238) ($generated@@235 $generated@@241 $generated@@239))))
 :pattern ( ($generated@@82 ($generated@@234 $generated@@240 $generated@@241) ($generated@@159 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@80) (= (type $generated@@243) $generated@@80)) (= ($generated@@165 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@165 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@80) (= (type $generated@@245) $generated@@80)) (= ($generated@@150 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@150 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@68)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@94 $generated@@168 $generated@@4)) (= (type $generated@@249) $generated@@68)) (= ($generated@@82 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@168) ($generated@@0 ($generated@@99 $generated@@248 $generated@@250))) ($generated@@235 $generated@@250 $generated@@249))
 :pattern ( ($generated@@99 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@82 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@68)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@94 $generated@@168 $generated@@4)) (= (type $generated@@254) $generated@@68)) (= ($generated@@82 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@168) ($generated@@0 ($generated@@99 $generated@@253 $generated@@255))) ($generated@@235 $generated@@255 $generated@@254))
 :pattern ( ($generated@@99 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@82 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@256 Int) ) (! (= ($generated@@88 $generated@@256) $generated@@256)
 :pattern ( ($generated@@88 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@68) (= (type $generated@@264) $generated@@68)) (= (type $generated@@265) $generated@@168)) (= (type $generated@@266) $generated@@168)) (= (type $generated@@267) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@261 $generated@@267)) (= ($generated@@92 ($generated@@234 $generated@@265 $generated@@266) ($generated@@159 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@92 ($generated@@234 $generated@@265 $generated@@266) ($generated@@159 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@80) (= ($generated@@158 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@80) (= ($generated@@84 $generated@@271) (= ($generated@@268 $generated@@271) $generated@@63)))
 :pattern ( ($generated@@84 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@80) (= ($generated@@153 $generated@@272) (= ($generated@@268 $generated@@272) $generated@@65)))
 :pattern ( ($generated@@153 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@80) ($generated@@158 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@168) (= (type $generated@@275) $generated@@168)) (= $generated@@273 ($generated@@234 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@158 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@285 Int) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@80)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@80) ($generated@@84 $generated@@286)) (exists (($generated@@287 Int) ) (= $generated@@286 ($generated@@284 $generated@@287))))
 :pattern ( ($generated@@84 $generated@@286))
)))
(assert (forall (($generated@@289 Int) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@80)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@80) ($generated@@153 $generated@@290)) (exists (($generated@@291 Int) ) (= $generated@@290 ($generated@@288 $generated@@291))))
 :pattern ( ($generated@@153 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@168)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@68) (= (type $generated@@296) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@262 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@92 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@262 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@94 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@97 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@94 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@99 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 18)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@94 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@99 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@99 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@94 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@99 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@99 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@97 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@94 $generated@@340 $generated@@2)) (= ($generated@@174 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@99 $generated@@339 $generated@@341))) (<= ($generated ($generated@@99 $generated@@339 $generated@@341)) ($generated@@297 $generated@@339))))
 :pattern ( ($generated@@99 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@174 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@168) ($generated@@235 $generated@@345 $generated@@83)) (and (= ($generated@@292 ($generated@@342 $generated@@80 $generated@@345)) $generated@@345) ($generated@@82 ($generated@@342 $generated@@80 $generated@@345) $generated@@83)))
 :pattern ( ($generated@@235 $generated@@345 $generated@@83))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@307 (type $generated@@346))))
(let (($generated@@348 ($generated@@306 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@305 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@304 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@99 ($generated@@303 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@303 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@307 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@94 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@307 (type $generated@@353))))
(let (($generated@@355 ($generated@@306 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@305 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@304 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@99 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@325 (type $generated@@357))))
(let (($generated@@359 ($generated@@324 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@323 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@322 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@99 ($generated@@321 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@321 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@325 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@94 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@325 (type $generated@@364))))
(let (($generated@@366 ($generated@@324 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@323 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@322 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@99 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@94 $generated@@168 $generated@@2)) (= (type $generated@@369) $generated@@68)) (= ($generated@@82 $generated@@368 ($generated@@173 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@168) (< 0 ($generated ($generated@@99 $generated@@368 $generated@@370)))) ($generated@@235 $generated@@370 $generated@@369))
 :pattern ( ($generated@@99 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@82 $generated@@368 ($generated@@173 $generated@@369)))
)))
(assert (forall (($generated@@371 Int) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@94 $generated@@95 $generated@@96)) ($generated@@261 $generated@@372)) (= ($generated@@92 ($generated@@284 $generated@@371) $generated@@83 $generated@@372) ($generated@@92 ($generated@@8 $generated@@371) $generated@@46 $generated@@372)))
 :pattern ( ($generated@@92 ($generated@@284 $generated@@371) $generated@@83 $generated@@372))
)))
(assert (forall (($generated@@373 Int) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@94 $generated@@95 $generated@@96)) ($generated@@261 $generated@@374)) (= ($generated@@92 ($generated@@288 $generated@@373) $generated@@83 $generated@@374) ($generated@@92 ($generated@@8 $generated@@373) $generated@@46 $generated@@374)))
 :pattern ( ($generated@@92 ($generated@@288 $generated@@373) $generated@@83 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@80) ($generated@@375 $generated@@376)) (or ($generated@@84 $generated@@376) ($generated@@153 $generated@@376)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@80) (or ($generated@@81 ($generated@@257 $generated@@377)) (and (not (= 1 $generated@@78)) ($generated@@82 $generated@@377 $generated@@83)))) (= ($generated@@79 ($generated@@257 $generated@@377)) (ite ($generated@@84 ($generated@@257 $generated@@377)) (let (($generated@@378 ($generated@@88 ($generated@@85 ($generated@@257 $generated@@377)))))
$generated@@378) (let (($generated@@379 ($generated@@88 ($generated@@86 ($generated@@257 $generated@@377)))))
($generated@@88 ($generated@@87 ($generated@@88 2) $generated@@379))))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@257 $generated@@377)))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@94 $generated@@168 $generated@@4)) (= (type $generated@@381) $generated@@68)) (= (type $generated@@382) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@380 ($generated@@246 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@168) ($generated@@0 ($generated@@99 $generated@@380 $generated@@383))) ($generated@@262 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@99 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@92 $generated@@380 ($generated@@246 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@384) ($generated@@94 $generated@@168 $generated@@4)) (= (type $generated@@385) $generated@@68)) (= (type $generated@@386) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@384 ($generated@@251 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@168) ($generated@@0 ($generated@@99 $generated@@384 $generated@@387))) ($generated@@262 $generated@@387 $generated@@385 $generated@@386))
 :pattern ( ($generated@@99 $generated@@384 $generated@@387))
))))
 :pattern ( ($generated@@92 $generated@@384 ($generated@@251 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(= ($generated ($generated@@99 ($generated@@298 $generated@@389) $generated@@388)) 0))
 :pattern ( (let (($generated@@389 (type $generated@@388)))
($generated@@99 ($generated@@298 $generated@@389) $generated@@388)))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@94 $generated@@168 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@307 (type $generated@@393))))
(let (($generated@@395 ($generated@@306 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@94 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@305 $generated@@168 $generated@@168)) (= (type $generated@@397) $generated@@168)) (= ($generated@@0 ($generated@@99 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@99 ($generated@@303 $generated@@396) ($generated@@166 ($generated@@342 $generated@@80 $generated@@397)))) (= ($generated@@99 ($generated@@391 $generated@@396) ($generated@@166 ($generated@@342 $generated@@80 $generated@@397))) ($generated@@167 ($generated@@342 $generated@@80 $generated@@397))))))
 :pattern ( ($generated@@99 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@94 $generated@@168 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@325 (type $generated@@401))))
(let (($generated@@403 ($generated@@324 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@94 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@405) $generated@@168)) (= ($generated@@0 ($generated@@99 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@99 ($generated@@321 $generated@@404) ($generated@@166 ($generated@@342 $generated@@80 $generated@@405)))) (= ($generated@@99 ($generated@@399 $generated@@404) ($generated@@166 ($generated@@342 $generated@@80 $generated@@405))) ($generated@@167 ($generated@@342 $generated@@80 $generated@@405))))))
 :pattern ( ($generated@@99 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@306 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@305 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@99 ($generated@@350 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@99 ($generated@@303 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@99 ($generated@@391 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@99 ($generated@@303 $generated@@406) $generated@@410))
 :pattern ( ($generated@@99 ($generated@@391 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@99 ($generated@@350 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@324 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@323 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@99 ($generated@@361 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@99 ($generated@@321 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@99 ($generated@@399 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@99 ($generated@@321 $generated@@411) $generated@@415))
 :pattern ( ($generated@@99 ($generated@@399 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@99 ($generated@@361 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@68)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@305 $generated@@168 $generated@@168)) (= (type $generated@@420) $generated@@68)) (= (type $generated@@421) $generated@@68)) (= (type $generated@@422) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@168) ($generated@@0 ($generated@@99 ($generated@@303 $generated@@419) $generated@@423))) (and ($generated@@262 ($generated@@99 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@262 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@99 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@99 ($generated@@303 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@92 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@68)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@428) $generated@@68)) (= (type $generated@@429) $generated@@68)) (= (type $generated@@430) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@168) ($generated@@0 ($generated@@99 ($generated@@321 $generated@@427) $generated@@431))) (and ($generated@@262 ($generated@@99 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@262 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@99 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@99 ($generated@@321 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@92 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@80) ($generated@@82 $generated@@432 $generated@@83)) (or ($generated@@84 $generated@@432) ($generated@@153 $generated@@432)))
 :pattern ( ($generated@@153 $generated@@432) ($generated@@82 $generated@@432 $generated@@83))
 :pattern ( ($generated@@84 $generated@@432) ($generated@@82 $generated@@432 $generated@@83))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@94 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@325 (type $generated@@435))))
(let (($generated@@437 ($generated@@324 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@323 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@322 $generated@@437 $generated@@436)) (= ($generated@@321 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@321 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@325 (type $generated@@438))))
(let (($generated@@440 ($generated@@324 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@323 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@322 $generated@@440 $generated@@439)) (= ($generated@@361 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@361 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@325 (type $generated@@441))))
(let (($generated@@443 ($generated@@324 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@323 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@322 $generated@@443 $generated@@442)) (= ($generated@@398 $generated@@441) ($generated@@433 $generated@@168))))))
 :pattern ( ($generated@@398 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@307 (type $generated@@444))))
(let (($generated@@446 ($generated@@306 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@305 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@304 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@168) (= (type $generated@@448) $generated@@168)) ($generated@@0 ($generated@@99 ($generated@@390 $generated@@444) ($generated@@292 ($generated@@234 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@390 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@325 (type $generated@@449))))
(let (($generated@@451 ($generated@@324 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@323 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@322 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@168) (= (type $generated@@453) $generated@@168)) ($generated@@0 ($generated@@99 ($generated@@398 $generated@@449) ($generated@@292 ($generated@@234 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@398 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@168) ($generated@@235 $generated@@454 $generated@@46)) (and (= ($generated@@292 ($generated@@342 $generated@@2 $generated@@454)) $generated@@454) ($generated@@82 ($generated@@342 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@235 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@168) ($generated@@235 $generated@@455 $generated@@47)) (and (= ($generated@@292 ($generated@@342 $generated@@3 $generated@@455)) $generated@@455) ($generated@@82 ($generated@@342 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@235 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@168) ($generated@@235 $generated@@456 $generated@@44)) (and (= ($generated@@292 ($generated@@342 $generated@@4 $generated@@456)) $generated@@456) ($generated@@82 ($generated@@342 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@235 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@168) ($generated@@235 $generated@@458 $generated@@45)) (and (= ($generated@@292 ($generated@@342 $generated@@457 $generated@@458)) $generated@@458) ($generated@@82 ($generated@@342 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@235 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@68) (= ($generated@@235 ($generated@@292 $generated@@459) $generated@@460) ($generated@@82 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@235 ($generated@@292 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@97 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@94 $generated@@462 $generated@@2)) (<= 0 ($generated@@297 $generated@@461))))
 :pattern ( ($generated@@297 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@279 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@278 $generated@@464)) (<= 0 ($generated@@277 $generated@@463))))
 :pattern ( ($generated@@277 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@68)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@68) (= (type $generated@@468) $generated@@68)) (= ($generated@@465 ($generated@@416 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@416 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@68)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@68) (= (type $generated@@472) $generated@@68)) (= ($generated@@469 ($generated@@416 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@416 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@68) (= (type $generated@@474) $generated@@68)) (= ($generated@@76 ($generated@@416 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@416 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@68)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@68) (= (type $generated@@478) $generated@@68)) (= ($generated@@475 ($generated@@424 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@424 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@68)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= ($generated@@479 ($generated@@424 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@424 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@68)) (= ($generated@@76 ($generated@@424 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@424 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@168) (= (type $generated@@486) $generated@@168)) (= ($generated@@268 ($generated@@234 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@234 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@487 ($generated@@159 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@159 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@68)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@491 ($generated@@159 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@159 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@168) (= (type $generated@@496) $generated@@168)) (= ($generated@@166 ($generated@@234 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@234 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@168) (= (type $generated@@498) $generated@@168)) (= ($generated@@167 ($generated@@234 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@234 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@279 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@278 $generated@@168)) (= (type $generated@@506) $generated@@68)) (= (type $generated@@507) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@277 $generated@@505))) ($generated@@262 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@92 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@93 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@93 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@511 ($generated@@246 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@246 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@76 ($generated@@246 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@515 ($generated@@251 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@251 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@76 ($generated@@251 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@76 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@76 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 Int) ) (! (= ($generated@@268 ($generated@@284 $generated@@527)) $generated@@63)
 :pattern ( ($generated@@284 $generated@@527))
)))
(assert (forall (($generated@@528 Int) ) (! (= ($generated@@85 ($generated@@284 $generated@@528)) $generated@@528)
 :pattern ( ($generated@@284 $generated@@528))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@268 ($generated@@288 $generated@@529)) $generated@@65)
 :pattern ( ($generated@@288 $generated@@529))
)))
(assert (forall (($generated@@530 Int) ) (! (= ($generated@@86 ($generated@@288 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@288 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(= ($generated@@342 $generated@@532 ($generated@@292 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@292 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@305 $generated@@168 $generated@@168)) (= (type $generated@@534) $generated@@68)) (= (type $generated@@535) $generated@@68)) (= ($generated@@82 $generated@@533 ($generated@@416 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@168) ($generated@@0 ($generated@@99 ($generated@@303 $generated@@533) $generated@@536))) (and ($generated@@235 ($generated@@99 ($generated@@391 $generated@@533) $generated@@536) $generated@@535) ($generated@@235 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@99 ($generated@@391 $generated@@533) $generated@@536))
 :pattern ( ($generated@@99 ($generated@@303 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@82 $generated@@533 ($generated@@416 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@538) $generated@@68)) (= (type $generated@@539) $generated@@68)) (= ($generated@@82 $generated@@537 ($generated@@424 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@168) ($generated@@0 ($generated@@99 ($generated@@321 $generated@@537) $generated@@540))) (and ($generated@@235 ($generated@@99 ($generated@@399 $generated@@537) $generated@@540) $generated@@539) ($generated@@235 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@99 ($generated@@399 $generated@@537) $generated@@540))
 :pattern ( ($generated@@99 ($generated@@321 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@82 $generated@@537 ($generated@@424 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@168) (= (type $generated@@544) $generated@@168)) (< ($generated@@541 $generated@@543) ($generated@@542 ($generated@@234 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@234 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@168) (= (type $generated@@546) $generated@@168)) (< ($generated@@541 $generated@@546) ($generated@@542 ($generated@@234 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@234 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 Int) ) (! (= ($generated@@82 ($generated@@284 $generated@@547) $generated@@83) ($generated@@82 ($generated@@8 $generated@@547) $generated@@46))
 :pattern ( ($generated@@82 ($generated@@284 $generated@@547) $generated@@83))
)))
(assert (forall (($generated@@548 Int) ) (! (= ($generated@@82 ($generated@@288 $generated@@548) $generated@@83) ($generated@@82 ($generated@@8 $generated@@548) $generated@@46))
 :pattern ( ($generated@@82 ($generated@@288 $generated@@548) $generated@@83))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@168) (= (type $generated@@550) $generated@@68)) (= (type $generated@@551) $generated@@68)) ($generated@@235 $generated@@549 ($generated@@416 $generated@@550 $generated@@551))) (and (= ($generated@@292 ($generated@@342 ($generated@@305 $generated@@168 $generated@@168) $generated@@549)) $generated@@549) ($generated@@82 ($generated@@342 ($generated@@305 $generated@@168 $generated@@168) $generated@@549) ($generated@@416 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@235 $generated@@549 ($generated@@416 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@168) (= (type $generated@@553) $generated@@68)) (= (type $generated@@554) $generated@@68)) ($generated@@235 $generated@@552 ($generated@@424 $generated@@553 $generated@@554))) (and (= ($generated@@292 ($generated@@342 ($generated@@323 $generated@@168 $generated@@168) $generated@@552)) $generated@@552) ($generated@@82 ($generated@@342 ($generated@@323 $generated@@168 $generated@@168) $generated@@552) ($generated@@424 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@235 $generated@@552 ($generated@@424 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@68) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) $generated@@168)) ($generated@@235 $generated@@557 ($generated@@159 $generated@@555 $generated@@556))) (and (= ($generated@@292 ($generated@@342 $generated@@80 $generated@@557)) $generated@@557) ($generated@@82 ($generated@@342 $generated@@80 $generated@@557) ($generated@@159 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@235 $generated@@557 ($generated@@159 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
 (not ($generated@@0 ($generated@@99 ($generated@@433 $generated@@559) $generated@@558))))
 :pattern ( (let (($generated@@559 (type $generated@@558)))
($generated@@99 ($generated@@433 $generated@@559) $generated@@558)))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@73)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@68) (= (type $generated@@563) $generated@@68)) (and (= ($generated@@76 ($generated@@159 $generated@@562 $generated@@563)) $generated@@62) (= ($generated@@560 ($generated@@159 $generated@@562 $generated@@563)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@80) (= (type $generated@@565) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@261 $generated@@565) (and ($generated@@84 $generated@@564) ($generated@@92 $generated@@564 $generated@@83 $generated@@565)))) ($generated@@92 ($generated@@8 ($generated@@85 $generated@@564)) $generated@@46 $generated@@565))
 :pattern ( ($generated@@92 ($generated@@8 ($generated@@85 $generated@@564)) $generated@@46 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@80) (= (type $generated@@567) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@261 $generated@@567) (and ($generated@@153 $generated@@566) ($generated@@92 $generated@@566 $generated@@83 $generated@@567)))) ($generated@@92 ($generated@@8 ($generated@@86 $generated@@566)) $generated@@46 $generated@@567))
 :pattern ( ($generated@@92 ($generated@@8 ($generated@@86 $generated@@566)) $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@568 Int) ($generated@@569 Int) ) (! (= ($generated@@87 $generated@@568 $generated@@569) (* $generated@@568 $generated@@569))
 :pattern ( ($generated@@87 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@80) (= ($generated@@541 ($generated@@292 $generated@@570)) ($generated@@542 $generated@@570)))
 :pattern ( ($generated@@541 ($generated@@292 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@168) ($generated@@235 $generated@@571 ($generated@@93 0))) (and (= ($generated@@292 ($generated@@342 $generated@@2 $generated@@571)) $generated@@571) ($generated@@82 ($generated@@342 ($generated@@94 $generated@@168 $generated@@4) $generated@@571) ($generated@@93 0))))
 :pattern ( ($generated@@235 $generated@@571 ($generated@@93 0)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@168) (= (type $generated@@573) $generated@@68)) ($generated@@235 $generated@@572 ($generated@@246 $generated@@573))) (and (= ($generated@@292 ($generated@@342 ($generated@@94 $generated@@168 $generated@@4) $generated@@572)) $generated@@572) ($generated@@82 ($generated@@342 ($generated@@94 $generated@@168 $generated@@4) $generated@@572) ($generated@@246 $generated@@573))))
 :pattern ( ($generated@@235 $generated@@572 ($generated@@246 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@168) (= (type $generated@@575) $generated@@68)) ($generated@@235 $generated@@574 ($generated@@251 $generated@@575))) (and (= ($generated@@292 ($generated@@342 ($generated@@94 $generated@@168 $generated@@4) $generated@@574)) $generated@@574) ($generated@@82 ($generated@@342 ($generated@@94 $generated@@168 $generated@@4) $generated@@574) ($generated@@251 $generated@@575))))
 :pattern ( ($generated@@235 $generated@@574 ($generated@@251 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@168) (= (type $generated@@577) $generated@@68)) ($generated@@235 $generated@@576 ($generated@@173 $generated@@577))) (and (= ($generated@@292 ($generated@@342 ($generated@@94 $generated@@168 $generated@@2) $generated@@576)) $generated@@576) ($generated@@82 ($generated@@342 ($generated@@94 $generated@@168 $generated@@2) $generated@@576) ($generated@@173 $generated@@577))))
 :pattern ( ($generated@@235 $generated@@576 ($generated@@173 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@168) (= (type $generated@@579) $generated@@68)) ($generated@@235 $generated@@578 ($generated@@499 $generated@@579))) (and (= ($generated@@292 ($generated@@342 ($generated@@278 $generated@@168) $generated@@578)) $generated@@578) ($generated@@82 ($generated@@342 ($generated@@278 $generated@@168) $generated@@578) ($generated@@499 $generated@@579))))
 :pattern ( ($generated@@235 $generated@@578 ($generated@@499 $generated@@579)))
)))
(assert (= ($generated@@76 $generated@@83) $generated@@64))
(assert (= ($generated@@560 $generated@@83) $generated@@67))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@94 $generated@@168 $generated@@2)) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@580 ($generated@@173 $generated@@581) $generated@@582) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@168) (< 0 ($generated ($generated@@99 $generated@@580 $generated@@583)))) ($generated@@262 $generated@@583 $generated@@581 $generated@@582))
 :pattern ( ($generated@@99 $generated@@580 $generated@@583))
))))
 :pattern ( ($generated@@92 $generated@@580 ($generated@@173 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@80) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@261 $generated@@586) (and ($generated@@158 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@68) ($generated@@92 $generated@@584 ($generated@@159 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@92 $generated@@584 ($generated@@159 $generated@@585 $generated@@587) $generated@@586))
))))) ($generated@@262 ($generated@@166 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@262 ($generated@@166 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@80) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@261 $generated@@590) (and ($generated@@158 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@68) ($generated@@92 $generated@@588 ($generated@@159 $generated@@591 $generated@@589) $generated@@590))
 :pattern ( ($generated@@92 $generated@@588 ($generated@@159 $generated@@591 $generated@@589) $generated@@590))
))))) ($generated@@262 ($generated@@167 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@262 ($generated@@167 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@168) (= (type $generated@@593) $generated@@168)) (= ($generated@@234 ($generated@@257 $generated@@592) ($generated@@257 $generated@@593)) ($generated@@257 ($generated@@234 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@234 ($generated@@257 $generated@@592) ($generated@@257 $generated@@593)))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@88 $generated@@594))) ($generated@@257 ($generated@@292 ($generated@@8 $generated@@594))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@88 $generated@@594))))
)))
(assert (forall (($generated@@595 Int) ) (! (= ($generated@@284 ($generated@@88 $generated@@595)) ($generated@@257 ($generated@@284 $generated@@595)))
 :pattern ( ($generated@@284 ($generated@@88 $generated@@595)))
)))
(assert (forall (($generated@@596 Int) ) (! (= ($generated@@288 ($generated@@88 $generated@@596)) ($generated@@257 ($generated@@288 $generated@@596)))
 :pattern ( ($generated@@288 ($generated@@88 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (! (= ($generated@@292 ($generated@@257 $generated@@597)) ($generated@@257 ($generated@@292 $generated@@597)))
 :pattern ( ($generated@@292 ($generated@@257 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@279 (type $generated@@598))))
 (=> (and (= (type $generated@@598) ($generated@@278 $generated@@599)) (= ($generated@@277 $generated@@598) 0)) (= $generated@@598 ($generated@@276 $generated@@599))))
 :pattern ( ($generated@@277 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@601)))
 (=> (and (and (= (type $generated@@600) ($generated@@94 $generated@@603 $generated@@2)) (= (type $generated@@602) $generated@@2)) (<= 0 ($generated $generated@@602))) (= ($generated@@297 ($generated@@100 $generated@@600 $generated@@601 $generated@@602)) (+ (- ($generated@@297 $generated@@600) ($generated ($generated@@99 $generated@@600 $generated@@601))) ($generated $generated@@602)))))
 :pattern ( ($generated@@297 ($generated@@100 $generated@@600 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@605) $generated@@2)) ($generated@@92 $generated@@605 $generated@@46 $generated@@604))
 :pattern ( ($generated@@92 $generated@@605 $generated@@46 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@607) $generated@@3)) ($generated@@92 $generated@@607 $generated@@47 $generated@@606))
 :pattern ( ($generated@@92 $generated@@607 $generated@@47 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@609) $generated@@4)) ($generated@@92 $generated@@609 $generated@@44 $generated@@608))
 :pattern ( ($generated@@92 $generated@@609 $generated@@44 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@611) $generated@@457)) ($generated@@92 $generated@@611 $generated@@45 $generated@@610))
 :pattern ( ($generated@@92 $generated@@611 $generated@@45 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@613) $generated@@168)) ($generated@@92 $generated@@613 $generated@@48 $generated@@612))
 :pattern ( ($generated@@92 $generated@@613 $generated@@48 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@278 $generated@@168)) (= (type $generated@@615) $generated@@68)) (= ($generated@@82 $generated@@614 ($generated@@499 $generated@@615)) (forall (($generated@@616 Int) ) (!  (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@277 $generated@@614))) ($generated@@235 ($generated@@500 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@500 $generated@@614 $generated@@616))
))))
 :pattern ( ($generated@@82 $generated@@614 ($generated@@499 $generated@@615)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 Int) ) (!  (=> (= (type $generated@@618) ($generated@@278 $generated@@168)) (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@277 $generated@@618))) (< ($generated@@542 ($generated@@342 $generated@@80 ($generated@@500 $generated@@618 $generated@@619))) ($generated@@617 $generated@@618))))
 :pattern ( ($generated@@542 ($generated@@342 $generated@@80 ($generated@@500 $generated@@618 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@305 $generated@@168 $generated@@168)) (= (type $generated@@621) $generated@@68)) (= (type $generated@@622) $generated@@68)) ($generated@@82 $generated@@620 ($generated@@416 $generated@@621 $generated@@622))) (and (and ($generated@@82 ($generated@@303 $generated@@620) ($generated@@246 $generated@@621)) ($generated@@82 ($generated@@350 $generated@@620) ($generated@@246 $generated@@622))) ($generated@@82 ($generated@@390 $generated@@620) ($generated@@246 ($generated@@159 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@82 $generated@@620 ($generated@@416 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@323 $generated@@168 $generated@@168)) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) $generated@@68)) ($generated@@82 $generated@@623 ($generated@@424 $generated@@624 $generated@@625))) (and (and ($generated@@82 ($generated@@321 $generated@@623) ($generated@@251 $generated@@624)) ($generated@@82 ($generated@@361 $generated@@623) ($generated@@251 $generated@@625))) ($generated@@82 ($generated@@398 $generated@@623) ($generated@@251 ($generated@@159 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@82 $generated@@623 ($generated@@424 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@2) ($generated@@82 $generated@@626 $generated@@46))
 :pattern ( ($generated@@82 $generated@@626 $generated@@46))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@3) ($generated@@82 $generated@@627 $generated@@47))
 :pattern ( ($generated@@82 $generated@@627 $generated@@47))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@4) ($generated@@82 $generated@@628 $generated@@44))
 :pattern ( ($generated@@82 $generated@@628 $generated@@44))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@457) ($generated@@82 $generated@@629 $generated@@45))
 :pattern ( ($generated@@82 $generated@@629 $generated@@45))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@168) ($generated@@82 $generated@@630 $generated@@48))
 :pattern ( ($generated@@82 $generated@@630 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () Int)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () Int)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () Int)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () Int)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () Int)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () Int)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () Int)
(declare-fun $generated@@705 () Int)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@631) $generated@@80) (= (type $generated@@632) $generated@@80)) (= (type $generated@@633) $generated@@80)) (= (type $generated@@641) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@640) $generated@@80)) (= (type $generated@@706) ($generated@@180 $generated@@95 $generated@@4))) (= (type $generated@@707) $generated@@95)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 108) (let (($generated@@709  (=> (and (and (and ($generated@@81 $generated@@631) (=> ($generated@@84 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633)) ($generated@@81 $generated@@631))) (=> (not ($generated@@84 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633))) ($generated@@81 $generated@@631))) (= (ControlFlow 0 97) (- 0 96))) (= (= ($generated@@79 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633)) ($generated@@88 11)) (= (ite ($generated@@84 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633)) (let (($generated@@710 ($generated@@85 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633))))
$generated@@710) (let (($generated@@711 ($generated@@86 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633))))
($generated@@87 ($generated@@88 2) $generated@@711))) ($generated@@88 11))))))
(let (($generated@@712  (=> (= (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@288 $generated@@634)) (=> (and (and (= $generated@@635 $generated@@634) ($generated@@82 ($generated@@8 $generated@@635) $generated@@46)) (and (= $generated@@636 $generated@@635) (= (ControlFlow 0 99) 97))) $generated@@709))))
(let (($generated@@713  (=> (= (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@284 $generated@@637)) (=> (and (and (= $generated@@638 $generated@@637) ($generated@@82 ($generated@@8 $generated@@638) $generated@@46)) (and (= $generated@@639 $generated@@638) (= (ControlFlow 0 98) 97))) $generated@@709))))
(let (($generated@@714 true))
(let (($generated@@715  (=> (not (= (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@284 $generated@@637))) (and (=> (= (ControlFlow 0 100) 99) $generated@@712) (=> (= (ControlFlow 0 100) 95) $generated@@714)))))
(let (($generated@@716  (=> (not (= ($generated@@79 $generated@@631) ($generated@@88 13))) (and (=> (= (ControlFlow 0 102) 98) $generated@@713) (=> (= (ControlFlow 0 102) 100) $generated@@715)))))
(let (($generated@@717  (=> (= ($generated@@79 $generated@@631) ($generated@@88 13)) (and (=> (= (ControlFlow 0 101) 98) $generated@@713) (=> (= (ControlFlow 0 101) 100) $generated@@715)))))
(let (($generated@@718  (=> (= $generated@@640 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633)) (=> (and ($generated@@92 $generated@@640 $generated@@83 $generated@@641) ($generated@@81 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633))) (=> (and (and ($generated@@81 $generated@@631) ($generated@@81 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633))) (and ($generated@@92 $generated@@631 $generated@@83 $generated@@641) ($generated@@81 $generated@@631))) (and (=> (= (ControlFlow 0 103) 101) $generated@@717) (=> (= (ControlFlow 0 103) 102) $generated@@716)))))))
(let (($generated@@719  (=> (and (not (= ($generated@@79 $generated@@631) ($generated@@88 13))) (= (ControlFlow 0 105) 103)) $generated@@718)))
(let (($generated@@720  (=> (and (= ($generated@@79 $generated@@631) ($generated@@88 13)) (= (ControlFlow 0 104) 103)) $generated@@718)))
(let (($generated@@721  (=> (and ($generated@@92 $generated@@631 $generated@@83 $generated@@641) ($generated@@81 $generated@@631)) (and (=> (= (ControlFlow 0 106) 104) $generated@@720) (=> (= (ControlFlow 0 106) 105) $generated@@719)))))
(let (($generated@@722  (=> (and (and (and ($generated@@81 $generated@@631) (=> ($generated@@84 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633)) ($generated@@81 $generated@@631))) (=> (not ($generated@@84 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633))) ($generated@@81 $generated@@631))) (= (ControlFlow 0 82) (- 0 81))) (= (= (ite ($generated@@84 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633)) (let (($generated@@723 ($generated@@85 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633))))
$generated@@723) (let (($generated@@724 ($generated@@86 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633))))
($generated@@87 ($generated@@88 2) $generated@@724))) ($generated@@88 11)) (ite ($generated@@84 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633)) (let (($generated@@725 ($generated@@85 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633))))
(= $generated@@725 ($generated@@88 11))) (let (($generated@@726 ($generated@@86 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633))))
(= ($generated@@87 ($generated@@88 2) $generated@@726) ($generated@@88 11))))))))
(let (($generated@@727  (=> (= (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@288 $generated@@642)) (=> (and (and (= $generated@@643 $generated@@642) ($generated@@82 ($generated@@8 $generated@@643) $generated@@46)) (and (= $generated@@644 $generated@@643) (= (ControlFlow 0 84) 82))) $generated@@722))))
(let (($generated@@728  (=> (= (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@284 $generated@@645)) (=> (and (and (= $generated@@646 $generated@@645) ($generated@@82 ($generated@@8 $generated@@646) $generated@@46)) (and (= $generated@@647 $generated@@646) (= (ControlFlow 0 83) 82))) $generated@@722))))
(let (($generated@@729 true))
(let (($generated@@730  (=> (not (= (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@284 $generated@@645))) (and (=> (= (ControlFlow 0 85) 84) $generated@@727) (=> (= (ControlFlow 0 85) 80) $generated@@729)))))
(let (($generated@@731  (=> (not (= ($generated@@79 $generated@@631) ($generated@@88 13))) (and (=> (= (ControlFlow 0 87) 83) $generated@@728) (=> (= (ControlFlow 0 87) 85) $generated@@730)))))
(let (($generated@@732  (=> (= ($generated@@79 $generated@@631) ($generated@@88 13)) (and (=> (= (ControlFlow 0 86) 83) $generated@@728) (=> (= (ControlFlow 0 86) 85) $generated@@730)))))
(let (($generated@@733  (=> (and (and (and ($generated@@81 $generated@@631) (=> ($generated@@84 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633)) ($generated@@81 $generated@@631))) (=> (not ($generated@@84 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633))) ($generated@@81 $generated@@631))) (and ($generated@@92 $generated@@631 $generated@@83 $generated@@641) ($generated@@81 $generated@@631))) (and (=> (= (ControlFlow 0 88) 86) $generated@@732) (=> (= (ControlFlow 0 88) 87) $generated@@731)))))
(let (($generated@@734  (=> (= (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@288 $generated@@634)) (=> (and (and (= $generated@@648 $generated@@634) ($generated@@82 ($generated@@8 $generated@@648) $generated@@46)) (and (= $generated@@649 $generated@@648) (= (ControlFlow 0 90) 88))) $generated@@733))))
(let (($generated@@735  (=> (= (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@284 $generated@@637)) (=> (and (and (= $generated@@650 $generated@@637) ($generated@@82 ($generated@@8 $generated@@650) $generated@@46)) (and (= $generated@@651 $generated@@650) (= (ControlFlow 0 89) 88))) $generated@@733))))
(let (($generated@@736 true))
(let (($generated@@737  (=> (not (= (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@284 $generated@@637))) (and (=> (= (ControlFlow 0 91) 90) $generated@@734) (=> (= (ControlFlow 0 91) 79) $generated@@736)))))
(let (($generated@@738  (=> (not (= ($generated@@79 $generated@@631) ($generated@@88 13))) (and (=> (= (ControlFlow 0 93) 89) $generated@@735) (=> (= (ControlFlow 0 93) 91) $generated@@737)))))
(let (($generated@@739  (=> (= ($generated@@79 $generated@@631) ($generated@@88 13)) (and (=> (= (ControlFlow 0 92) 89) $generated@@735) (=> (= (ControlFlow 0 92) 91) $generated@@737)))))
(let (($generated@@740  (=> (and ($generated@@92 $generated@@631 $generated@@83 $generated@@641) ($generated@@81 $generated@@631)) (and (=> (= (ControlFlow 0 94) 92) $generated@@739) (=> (= (ControlFlow 0 94) 93) $generated@@738)))))
(let (($generated@@741  (=> (= (ControlFlow 0 63) (- 0 62)) (= (ite ($generated@@84 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633)) (let (($generated@@742 ($generated@@85 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633))))
(= $generated@@742 ($generated@@88 11))) (let (($generated@@743 ($generated@@86 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633))))
(= ($generated@@87 ($generated@@88 2) $generated@@743) ($generated@@88 11)))) (ite ($generated@@84 (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@744 ($generated@@85 $generated@@631)))
$generated@@744) (let (($generated@@745 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@745))) ($generated@@88 13)) $generated@@632 $generated@@633)) (let (($generated@@746 ($generated@@85 (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@747 ($generated@@85 $generated@@631)))
$generated@@747) (let (($generated@@748 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@748))) ($generated@@88 13)) $generated@@632 $generated@@633))))
(= $generated@@746 ($generated@@88 11))) (let (($generated@@749 ($generated@@86 (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@750 ($generated@@85 $generated@@631)))
$generated@@750) (let (($generated@@751 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@751))) ($generated@@88 13)) $generated@@632 $generated@@633))))
(= ($generated@@87 ($generated@@88 2) $generated@@749) ($generated@@88 11))))))))
(let (($generated@@752  (=> (= (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@753 ($generated@@85 $generated@@631)))
$generated@@753) (let (($generated@@754 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@754))) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@288 $generated@@652)) (=> (and (and (= $generated@@653 $generated@@652) ($generated@@82 ($generated@@8 $generated@@653) $generated@@46)) (and (= $generated@@654 $generated@@653) (= (ControlFlow 0 65) 63))) $generated@@741))))
(let (($generated@@755  (=> (= (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@756 ($generated@@85 $generated@@631)))
$generated@@756) (let (($generated@@757 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@757))) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@284 $generated@@655)) (=> (and (and (= $generated@@656 $generated@@655) ($generated@@82 ($generated@@8 $generated@@656) $generated@@46)) (and (= $generated@@657 $generated@@656) (= (ControlFlow 0 64) 63))) $generated@@741))))
(let (($generated@@758 true))
(let (($generated@@759  (=> (not (= (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@760 ($generated@@85 $generated@@631)))
$generated@@760) (let (($generated@@761 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@761))) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@284 $generated@@655))) (and (=> (= (ControlFlow 0 66) 65) $generated@@752) (=> (= (ControlFlow 0 66) 61) $generated@@758)))))
(let (($generated@@762  (=> (not (= (ite ($generated@@84 $generated@@631) (let (($generated@@763 ($generated@@85 $generated@@631)))
$generated@@763) (let (($generated@@764 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@764))) ($generated@@88 13))) (and (=> (= (ControlFlow 0 68) 64) $generated@@755) (=> (= (ControlFlow 0 68) 66) $generated@@759)))))
(let (($generated@@765  (=> (= (ite ($generated@@84 $generated@@631) (let (($generated@@766 ($generated@@85 $generated@@631)))
$generated@@766) (let (($generated@@767 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@767))) ($generated@@88 13)) (and (=> (= (ControlFlow 0 67) 64) $generated@@755) (=> (= (ControlFlow 0 67) 66) $generated@@759)))))
(let (($generated@@768  (=> (and (and (= $generated@@631 ($generated@@288 $generated@@658)) (= $generated@@659 $generated@@658)) (and ($generated@@82 ($generated@@8 $generated@@659) $generated@@46) (= $generated@@660 $generated@@659))) (and (=> (= (ControlFlow 0 70) 67) $generated@@765) (=> (= (ControlFlow 0 70) 68) $generated@@762)))))
(let (($generated@@769  (=> (and (and (= $generated@@631 ($generated@@284 $generated@@661)) (= $generated@@662 $generated@@661)) (and ($generated@@82 ($generated@@8 $generated@@662) $generated@@46) (= $generated@@663 $generated@@662))) (and (=> (= (ControlFlow 0 69) 67) $generated@@765) (=> (= (ControlFlow 0 69) 68) $generated@@762)))))
(let (($generated@@770 true))
(let (($generated@@771  (=> (not (= $generated@@631 ($generated@@284 $generated@@661))) (and (=> (= (ControlFlow 0 71) 70) $generated@@768) (=> (= (ControlFlow 0 71) 60) $generated@@770)))))
(let (($generated@@772  (=> (and (and ($generated@@81 $generated@@631) (=> ($generated@@84 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633)) ($generated@@81 $generated@@631))) (=> (not ($generated@@84 (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633))) ($generated@@81 $generated@@631))) (and (=> (= (ControlFlow 0 72) 69) $generated@@769) (=> (= (ControlFlow 0 72) 71) $generated@@771)))))
(let (($generated@@773  (=> (= (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@288 $generated@@642)) (=> (and (and (= $generated@@664 $generated@@642) ($generated@@82 ($generated@@8 $generated@@664) $generated@@46)) (and (= $generated@@665 $generated@@664) (= (ControlFlow 0 74) 72))) $generated@@772))))
(let (($generated@@774  (=> (= (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@284 $generated@@645)) (=> (and (and (= $generated@@666 $generated@@645) ($generated@@82 ($generated@@8 $generated@@666) $generated@@46)) (and (= $generated@@667 $generated@@666) (= (ControlFlow 0 73) 72))) $generated@@772))))
(let (($generated@@775 true))
(let (($generated@@776  (=> (not (= (ite (= ($generated@@79 $generated@@631) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@284 $generated@@645))) (and (=> (= (ControlFlow 0 75) 74) $generated@@773) (=> (= (ControlFlow 0 75) 59) $generated@@775)))))
(let (($generated@@777  (=> (not (= ($generated@@79 $generated@@631) ($generated@@88 13))) (and (=> (= (ControlFlow 0 77) 73) $generated@@774) (=> (= (ControlFlow 0 77) 75) $generated@@776)))))
(let (($generated@@778  (=> (= ($generated@@79 $generated@@631) ($generated@@88 13)) (and (=> (= (ControlFlow 0 76) 73) $generated@@774) (=> (= (ControlFlow 0 76) 75) $generated@@776)))))
(let (($generated@@779  (=> (and ($generated@@92 $generated@@631 $generated@@83 $generated@@641) ($generated@@81 $generated@@631)) (and (=> (= (ControlFlow 0 78) 76) $generated@@778) (=> (= (ControlFlow 0 78) 77) $generated@@777)))))
(let (($generated@@780 true))
(let (($generated@@781  (=> (and (=> ($generated@@153 $generated@@631) ($generated@@375 $generated@@633)) (= (ControlFlow 0 49) (- 0 48))) (=  (and ($generated@@153 $generated@@631) (ite ($generated@@84 $generated@@633) (let (($generated@@782 ($generated@@85 $generated@@633)))
(= $generated@@782 ($generated@@88 11))) (let (($generated@@783 ($generated@@86 $generated@@633)))
(= ($generated@@87 ($generated@@88 2) $generated@@783) ($generated@@88 11)))))  (and ($generated@@153 $generated@@631) ($generated@@150 $generated@@633 ($generated@@288 ($generated@@88 22))))))))
(let (($generated@@784  (=> (and (not ($generated@@153 $generated@@631)) (= (ControlFlow 0 51) 49)) $generated@@781)))
(let (($generated@@785  (=> (and ($generated@@153 $generated@@631) (= (ControlFlow 0 50) 49)) $generated@@781)))
(let (($generated@@786  (and (=> (= (ControlFlow 0 52) 50) $generated@@785) (=> (= (ControlFlow 0 52) 51) $generated@@784))))
(let (($generated@@787  (=> (= $generated@@633 ($generated@@288 $generated@@668)) (=> (and (and (= $generated@@669 $generated@@668) ($generated@@82 ($generated@@8 $generated@@669) $generated@@46)) (and (= $generated@@670 $generated@@669) (= (ControlFlow 0 55) 52))) $generated@@786))))
(let (($generated@@788  (=> (not (= $generated@@633 ($generated@@284 $generated@@671))) (and (=> (= (ControlFlow 0 57) 55) $generated@@787) (=> (= (ControlFlow 0 57) 56) $generated@@780)))))
(let (($generated@@789  (=> (= $generated@@633 ($generated@@284 $generated@@671)) (=> (and (and (= $generated@@672 $generated@@671) ($generated@@82 ($generated@@8 $generated@@672) $generated@@46)) (and (= $generated@@673 $generated@@672) (= (ControlFlow 0 54) 52))) $generated@@786))))
(let (($generated@@790  (=> ($generated@@153 $generated@@631) (and (=> (= (ControlFlow 0 58) 54) $generated@@789) (=> (= (ControlFlow 0 58) 57) $generated@@788)))))
(let (($generated@@791  (=> (and (not ($generated@@153 $generated@@631)) (= (ControlFlow 0 53) 52)) $generated@@786)))
(let (($generated@@792 true))
(let (($generated@@793  (and (=> (= (ControlFlow 0 31) (- 0 32)) (=> (and ($generated@@153 $generated@@631) (ite ($generated@@84 $generated@@633) (let (($generated@@794 ($generated@@85 $generated@@633)))
(= $generated@@794 ($generated@@88 11))) (let (($generated@@795 ($generated@@86 $generated@@633)))
(= ($generated@@87 ($generated@@88 2) $generated@@795) ($generated@@88 11))))) (=> ($generated@@84 (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@796 ($generated@@85 $generated@@631)))
$generated@@796) (let (($generated@@797 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@797))) ($generated@@88 13)) $generated@@632 $generated@@633)) (let (($generated@@798 ($generated@@85 (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@799 ($generated@@85 $generated@@631)))
$generated@@799) (let (($generated@@800 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@800))) ($generated@@88 13)) $generated@@632 $generated@@633))))
(= $generated@@798 ($generated@@88 11)))))) (=> (= (ControlFlow 0 31) (- 0 30)) (=> (and ($generated@@153 $generated@@631) (ite ($generated@@84 $generated@@633) (let (($generated@@801 ($generated@@85 $generated@@633)))
(= $generated@@801 ($generated@@88 11))) (let (($generated@@802 ($generated@@86 $generated@@633)))
(= ($generated@@87 ($generated@@88 2) $generated@@802) ($generated@@88 11))))) (=> (not ($generated@@84 (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@803 ($generated@@85 $generated@@631)))
$generated@@803) (let (($generated@@804 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@804))) ($generated@@88 13)) $generated@@632 $generated@@633))) (let (($generated@@805 ($generated@@86 (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@806 ($generated@@85 $generated@@631)))
$generated@@806) (let (($generated@@807 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@807))) ($generated@@88 13)) $generated@@632 $generated@@633))))
(= ($generated@@87 ($generated@@88 2) $generated@@805) ($generated@@88 11)))))))))
(let (($generated@@808  (=> (= (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@809 ($generated@@85 $generated@@631)))
$generated@@809) (let (($generated@@810 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@810))) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@288 $generated@@674)) (=> (and (and (= $generated@@675 $generated@@674) ($generated@@82 ($generated@@8 $generated@@675) $generated@@46)) (and (= $generated@@676 $generated@@675) (= (ControlFlow 0 34) 31))) $generated@@793))))
(let (($generated@@811  (=> (= (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@812 ($generated@@85 $generated@@631)))
$generated@@812) (let (($generated@@813 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@813))) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@284 $generated@@677)) (=> (and (and (= $generated@@678 $generated@@677) ($generated@@82 ($generated@@8 $generated@@678) $generated@@46)) (and (= $generated@@679 $generated@@678) (= (ControlFlow 0 33) 31))) $generated@@793))))
(let (($generated@@814 true))
(let (($generated@@815  (=> (not (= (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@816 ($generated@@85 $generated@@631)))
$generated@@816) (let (($generated@@817 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@817))) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@284 $generated@@677))) (and (=> (= (ControlFlow 0 35) 34) $generated@@808) (=> (= (ControlFlow 0 35) 29) $generated@@814)))))
(let (($generated@@818  (=> (not (= (ite ($generated@@84 $generated@@631) (let (($generated@@819 ($generated@@85 $generated@@631)))
$generated@@819) (let (($generated@@820 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@820))) ($generated@@88 13))) (and (=> (= (ControlFlow 0 37) 33) $generated@@811) (=> (= (ControlFlow 0 37) 35) $generated@@815)))))
(let (($generated@@821  (=> (= (ite ($generated@@84 $generated@@631) (let (($generated@@822 ($generated@@85 $generated@@631)))
$generated@@822) (let (($generated@@823 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@823))) ($generated@@88 13)) (and (=> (= (ControlFlow 0 36) 33) $generated@@811) (=> (= (ControlFlow 0 36) 35) $generated@@815)))))
(let (($generated@@824  (=> (and (and (= $generated@@631 ($generated@@288 $generated@@680)) (= $generated@@681 $generated@@680)) (and ($generated@@82 ($generated@@8 $generated@@681) $generated@@46) (= $generated@@682 $generated@@681))) (and (=> (= (ControlFlow 0 39) 36) $generated@@821) (=> (= (ControlFlow 0 39) 37) $generated@@818)))))
(let (($generated@@825  (=> (and (and (= $generated@@631 ($generated@@284 $generated@@683)) (= $generated@@684 $generated@@683)) (and ($generated@@82 ($generated@@8 $generated@@684) $generated@@46) (= $generated@@685 $generated@@684))) (and (=> (= (ControlFlow 0 38) 36) $generated@@821) (=> (= (ControlFlow 0 38) 37) $generated@@818)))))
(let (($generated@@826 true))
(let (($generated@@827  (=> (not (= $generated@@631 ($generated@@284 $generated@@683))) (and (=> (= (ControlFlow 0 40) 39) $generated@@824) (=> (= (ControlFlow 0 40) 28) $generated@@826)))))
(let (($generated@@828  (=> (and ($generated@@153 $generated@@631) (ite ($generated@@84 $generated@@633) (let (($generated@@829 ($generated@@85 $generated@@633)))
(= $generated@@829 ($generated@@88 11))) (let (($generated@@830 ($generated@@86 $generated@@633)))
(= ($generated@@87 ($generated@@88 2) $generated@@830) ($generated@@88 11))))) (and (=> (= (ControlFlow 0 41) 38) $generated@@825) (=> (= (ControlFlow 0 41) 40) $generated@@827)))))
(let (($generated@@831  (=> (= $generated@@633 ($generated@@288 $generated@@668)) (=> (and (and (= $generated@@686 $generated@@668) ($generated@@82 ($generated@@8 $generated@@686) $generated@@46)) (and (= $generated@@687 $generated@@686) (= (ControlFlow 0 44) 41))) $generated@@828))))
(let (($generated@@832  (=> (not (= $generated@@633 ($generated@@284 $generated@@671))) (and (=> (= (ControlFlow 0 46) 44) $generated@@831) (=> (= (ControlFlow 0 46) 45) $generated@@792)))))
(let (($generated@@833  (=> (= $generated@@633 ($generated@@284 $generated@@671)) (=> (and (and (= $generated@@688 $generated@@671) ($generated@@82 ($generated@@8 $generated@@688) $generated@@46)) (and (= $generated@@689 $generated@@688) (= (ControlFlow 0 43) 41))) $generated@@828))))
(let (($generated@@834  (=> ($generated@@153 $generated@@631) (and (=> (= (ControlFlow 0 47) 43) $generated@@833) (=> (= (ControlFlow 0 47) 46) $generated@@832)))))
(let (($generated@@835  (=> (and (not ($generated@@153 $generated@@631)) (= (ControlFlow 0 42) 41)) $generated@@828)))
(let (($generated@@836  (=> (= (ControlFlow 0 10) (- 0 9)) (= (ite ($generated@@84 (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@837 ($generated@@85 $generated@@631)))
$generated@@837) (let (($generated@@838 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@838))) ($generated@@88 13)) $generated@@632 $generated@@633)) (let (($generated@@839 ($generated@@85 (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@840 ($generated@@85 $generated@@631)))
$generated@@840) (let (($generated@@841 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@841))) ($generated@@88 13)) $generated@@632 $generated@@633))))
(= $generated@@839 ($generated@@88 11))) (let (($generated@@842 ($generated@@86 (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@843 ($generated@@85 $generated@@631)))
$generated@@843) (let (($generated@@844 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@844))) ($generated@@88 13)) $generated@@632 $generated@@633))))
(= ($generated@@87 ($generated@@88 2) $generated@@842) ($generated@@88 11)))) (ite ($generated@@84 (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@845 ($generated@@85 $generated@@631)))
$generated@@845) (let (($generated@@846 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@846))) ($generated@@88 13)) $generated@@632 $generated@@633)) (let (($generated@@847 ($generated@@85 (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@848 ($generated@@85 $generated@@631)))
$generated@@848) (let (($generated@@849 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@849))) ($generated@@88 13)) $generated@@632 $generated@@633))))
(= $generated@@847 ($generated@@88 11))) (let (($generated@@850 ($generated@@86 (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@851 ($generated@@85 $generated@@631)))
$generated@@851) (let (($generated@@852 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@852))) ($generated@@88 13)) $generated@@632 $generated@@633))))
(= ($generated@@87 ($generated@@88 2) $generated@@850) ($generated@@88 11))))))))
(let (($generated@@853  (=> (= (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@854 ($generated@@85 $generated@@631)))
$generated@@854) (let (($generated@@855 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@855))) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@288 $generated@@674)) (=> (and (and (= $generated@@690 $generated@@674) ($generated@@82 ($generated@@8 $generated@@690) $generated@@46)) (and (= $generated@@691 $generated@@690) (= (ControlFlow 0 12) 10))) $generated@@836))))
(let (($generated@@856  (=> (= (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@857 ($generated@@85 $generated@@631)))
$generated@@857) (let (($generated@@858 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@858))) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@284 $generated@@677)) (=> (and (and (= $generated@@692 $generated@@677) ($generated@@82 ($generated@@8 $generated@@692) $generated@@46)) (and (= $generated@@693 $generated@@692) (= (ControlFlow 0 11) 10))) $generated@@836))))
(let (($generated@@859 true))
(let (($generated@@860  (=> (not (= (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@861 ($generated@@85 $generated@@631)))
$generated@@861) (let (($generated@@862 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@862))) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@284 $generated@@677))) (and (=> (= (ControlFlow 0 13) 12) $generated@@853) (=> (= (ControlFlow 0 13) 8) $generated@@859)))))
(let (($generated@@863  (=> (not (= (ite ($generated@@84 $generated@@631) (let (($generated@@864 ($generated@@85 $generated@@631)))
$generated@@864) (let (($generated@@865 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@865))) ($generated@@88 13))) (and (=> (= (ControlFlow 0 15) 11) $generated@@856) (=> (= (ControlFlow 0 15) 13) $generated@@860)))))
(let (($generated@@866  (=> (= (ite ($generated@@84 $generated@@631) (let (($generated@@867 ($generated@@85 $generated@@631)))
$generated@@867) (let (($generated@@868 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@868))) ($generated@@88 13)) (and (=> (= (ControlFlow 0 14) 11) $generated@@856) (=> (= (ControlFlow 0 14) 13) $generated@@860)))))
(let (($generated@@869  (=> (and (and (= $generated@@631 ($generated@@288 $generated@@680)) (= $generated@@694 $generated@@680)) (and ($generated@@82 ($generated@@8 $generated@@694) $generated@@46) (= $generated@@695 $generated@@694))) (and (=> (= (ControlFlow 0 17) 14) $generated@@866) (=> (= (ControlFlow 0 17) 15) $generated@@863)))))
(let (($generated@@870  (=> (and (and (= $generated@@631 ($generated@@284 $generated@@683)) (= $generated@@696 $generated@@683)) (and ($generated@@82 ($generated@@8 $generated@@696) $generated@@46) (= $generated@@697 $generated@@696))) (and (=> (= (ControlFlow 0 16) 14) $generated@@866) (=> (= (ControlFlow 0 16) 15) $generated@@863)))))
(let (($generated@@871 true))
(let (($generated@@872  (=> (not (= $generated@@631 ($generated@@284 $generated@@683))) (and (=> (= (ControlFlow 0 18) 17) $generated@@869) (=> (= (ControlFlow 0 18) 7) $generated@@871)))))
(let (($generated@@873  (and (=> (= (ControlFlow 0 19) 16) $generated@@870) (=> (= (ControlFlow 0 19) 18) $generated@@872))))
(let (($generated@@874  (=> (= (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@875 ($generated@@85 $generated@@631)))
$generated@@875) (let (($generated@@876 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@876))) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@288 $generated@@652)) (=> (and (and (= $generated@@698 $generated@@652) ($generated@@82 ($generated@@8 $generated@@698) $generated@@46)) (and (= $generated@@699 $generated@@698) (= (ControlFlow 0 21) 19))) $generated@@873))))
(let (($generated@@877  (=> (= (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@878 ($generated@@85 $generated@@631)))
$generated@@878) (let (($generated@@879 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@879))) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@284 $generated@@655)) (=> (and (and (= $generated@@700 $generated@@655) ($generated@@82 ($generated@@8 $generated@@700) $generated@@46)) (and (= $generated@@701 $generated@@700) (= (ControlFlow 0 20) 19))) $generated@@873))))
(let (($generated@@880 true))
(let (($generated@@881  (=> (not (= (ite (= (ite ($generated@@84 $generated@@631) (let (($generated@@882 ($generated@@85 $generated@@631)))
$generated@@882) (let (($generated@@883 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@883))) ($generated@@88 13)) $generated@@632 $generated@@633) ($generated@@284 $generated@@655))) (and (=> (= (ControlFlow 0 22) 21) $generated@@874) (=> (= (ControlFlow 0 22) 6) $generated@@880)))))
(let (($generated@@884  (=> (not (= (ite ($generated@@84 $generated@@631) (let (($generated@@885 ($generated@@85 $generated@@631)))
$generated@@885) (let (($generated@@886 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@886))) ($generated@@88 13))) (and (=> (= (ControlFlow 0 24) 20) $generated@@877) (=> (= (ControlFlow 0 24) 22) $generated@@881)))))
(let (($generated@@887  (=> (= (ite ($generated@@84 $generated@@631) (let (($generated@@888 ($generated@@85 $generated@@631)))
$generated@@888) (let (($generated@@889 ($generated@@86 $generated@@631)))
($generated@@87 ($generated@@88 2) $generated@@889))) ($generated@@88 13)) (and (=> (= (ControlFlow 0 23) 20) $generated@@877) (=> (= (ControlFlow 0 23) 22) $generated@@881)))))
(let (($generated@@890  (=> (and (and (= $generated@@631 ($generated@@288 $generated@@658)) (= $generated@@702 $generated@@658)) (and ($generated@@82 ($generated@@8 $generated@@702) $generated@@46) (= $generated@@703 $generated@@702))) (and (=> (= (ControlFlow 0 26) 23) $generated@@887) (=> (= (ControlFlow 0 26) 24) $generated@@884)))))
(let (($generated@@891  (=> (and (and (= $generated@@631 ($generated@@284 $generated@@661)) (= $generated@@704 $generated@@661)) (and ($generated@@82 ($generated@@8 $generated@@704) $generated@@46) (= $generated@@705 $generated@@704))) (and (=> (= (ControlFlow 0 25) 23) $generated@@887) (=> (= (ControlFlow 0 25) 24) $generated@@884)))))
(let (($generated@@892 true))
(let (($generated@@893  (=> (not (= $generated@@631 ($generated@@284 $generated@@661))) (and (=> (= (ControlFlow 0 27) 26) $generated@@890) (=> (= (ControlFlow 0 27) 5) $generated@@892)))))
(let (($generated@@894 true))
(let (($generated@@895  (=> (and (not ($generated@@153 $generated@@631)) (= (ControlFlow 0 4) 2)) $generated@@894)))
(let (($generated@@896  (=> (and ($generated@@153 $generated@@631) (= (ControlFlow 0 3) 2)) $generated@@894)))
(let (($generated@@897 true))
(let (($generated@@898  (=> (= $generated@@706 ($generated@@179 $generated@@707 $generated@@641 $generated@@60 false)) (and (and (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 107) 106) $generated@@721) (=> (= (ControlFlow 0 107) 94) $generated@@740)) (=> (= (ControlFlow 0 107) 78) $generated@@779)) (=> (= (ControlFlow 0 107) 1) $generated@@897)) (=> (= (ControlFlow 0 107) 58) $generated@@790)) (=> (= (ControlFlow 0 107) 53) $generated@@791)) (=> (= (ControlFlow 0 107) 47) $generated@@834)) (=> (= (ControlFlow 0 107) 42) $generated@@835)) (=> (= (ControlFlow 0 107) 25) $generated@@891)) (=> (= (ControlFlow 0 107) 27) $generated@@893)) (=> (= (ControlFlow 0 107) 3) $generated@@896)) (=> (= (ControlFlow 0 107) 4) $generated@@895)))))
(let (($generated@@899  (=> (and ($generated@@261 $generated@@641) ($generated@@708 $generated@@641)) (=> (and (and (and (and ($generated@@82 $generated@@631 $generated@@83) ($generated@@92 $generated@@631 $generated@@83 $generated@@641)) ($generated@@375 $generated@@631)) (and (and ($generated@@82 $generated@@632 $generated@@83) ($generated@@92 $generated@@632 $generated@@83 $generated@@641)) ($generated@@375 $generated@@632))) (and (and (and ($generated@@82 $generated@@633 $generated@@83) ($generated@@92 $generated@@633 $generated@@83 $generated@@641)) ($generated@@375 $generated@@633)) (and (= 2 $generated@@78) (= (ControlFlow 0 108) 107)))) $generated@@898))))
$generated@@899))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 49) (- 48))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
